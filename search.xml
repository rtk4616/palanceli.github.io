<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于估值定投的一点研究]]></title>
    <url>%2F2018%2F07%2F08%2F2018%2F0708HS300IDX%2F</url>
    <content type="text"><![CDATA[&#x6628;&#x5929;&#x8DDF;&#x8001;&#x7238;&#x804A;&#x6295;&#x8D44;&#xFF0C;&#x804A;&#x7740;&#x804A;&#x7740;&#x5C31;&#x62AC;&#x8D77;&#x6760;&#x4E86;&#xFF1A;&#x6211;&#x8BF4;&#x65E0;&#x8BBA;&#x7F8E;&#x80A1;&#x8FD8;&#x662F;&#x4E2D;&#x56FD;&#x80A1;&#x5E02;&#xFF0C;&#x5927;&#x76D8;&#x4EE3;&#x8868;&#x8FD9;&#x4E2A;&#x56FD;&#x5BB6;&#x7ECF;&#x6D4E;&#x7684;&#x57FA;&#x672C;&#x8D70;&#x52BF;&#xFF0C;&#x4EE5;&#x5E74;&#x7684;&#x7C92;&#x5EA6;&#x6765;&#x770B;&#x662F;&#x5411;&#x597D;&#x7684;&#xFF0C;&#x51E0;&#x4E4E;&#x4E0D;&#x4F1A;&#x4E8F;&#x94B1;&#xFF1B;&#x800C;&#x8001;&#x7238;&#x4E00;&#x53E5;&#x8BDD;&#x5C31;&#x7ED9;&#x6211;&#x9876;&#x56DE;&#x6765;&#xFF0C;2008&#x5E74;&#x90FD;&#x8981;&#x98D9;&#x5230;6000&#x70B9;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x624D;&#x591A;&#x5C11;&#x70B9;&#xFF1F;&#x8FD9;&#x90FD;10&#x5E74;&#x4E86;&#xFF0C;&#x4F60;&#x544A;&#x8BC9;&#x6211;&#x54EA;&#x5E74;&#x53EF;&#x4EE5;&#x7FFB;&#x76D8;&#xFF1F;]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Carmel]]></title>
    <url>%2F2018%2F07%2F07%2F2018%2F0707Carmel%2F</url>
    <content type="text"><![CDATA[&#x5982;&#x679C;&#x4F60;&#x7231;&#x5979;&#xFF0C;&#x8BF7;&#x5E26;&#x5979;&#x53BB;Carmel&#xFF0C;&#x5728;&#x90A3;&#x91CC;&#x5979;&#x4F1A;&#x7231;&#x4E0A;&#x4F60;&#xFF1B; &#x5982;&#x679C;&#x4F60;&#x6068;&#x5979;&#xFF0C;&#x8BF7;&#x5E26;&#x5979;&#x53BB;Carmel&#xFF0C;&#x5728;&#x90A3;&#x91CC;&#x4F60;&#x4F1A;&#x7231;&#x4E0A;&#x5979;&#x3002; Carmel&#x662F;&#x4F4D;&#x4E8E;&#x52A0;&#x5DDE;&#x897F;&#x90E8;&#x7684;&#x4E00;&#x4E2A;&#x5C0F;&#x6E2F;&#x6E7E;&#xFF0C;&#x5728;&#x65E7;&#x91D1;&#x5C71;&#x5F80;&#x5357;&#x7EA6;200&#x516C;&#x91CC;&#x3002;&#x6574;&#x4E2A;&#x5C0F;&#x9547;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x53EF;&#x80FD;&#x6BD4;&#x6E05;&#x534E;&#x7684;&#x6821;&#x56ED;&#x8FD8;&#x5C0F;&#xFF0C;&#x4ECE;&#x4E00;&#x4FA7;&#x6563;&#x6B65;&#x8D70;&#x5230;&#x53E6;&#x4E00;&#x4FA7;&#x53EA;&#x9700;&#x8981;20&#x5206;&#x949F;&#x3002;&#x867D;&#x7136;&#x662F;&#x4E2A;&#x65C5;&#x6E38;&#x5C0F;&#x9547;&#xFF0C;&#x4E3B;&#x5E72;&#x9053;&#x4E24;&#x4FA7;&#x90FD;&#x662F;&#x5C0F;&#x5546;&#x5E97;&#xFF0C;&#x4F46;&#x6574;&#x4E2A;&#x9547;&#x5B50;&#x975E;&#x5E38;&#x7684;&#x9759;&#x8C27;&#xFF0C;&#x8857;&#x9053;&#x7684;&#x4E24;&#x4FA7;&#x79CD;&#x6EE1;&#x4E86;&#x4E94;&#x989C;&#x516D;&#x8272;&#x7684;&#x9C9C;&#x82B1;&#xFF0C;&#x975E;&#x5E38;&#x6574;&#x9F50;&#xFF0C;&#x6BCF;&#x4E00;&#x5EA7;&#x5EAD;&#x9662;&#x91CC;&#x4E5F;&#x90FD;&#x7C07;&#x62E5;&#x7740;&#x7EFF;&#x690D;&#x3002;&#x611F;&#x89C9;&#x8FD9;&#x91CC;&#x66F4;&#x50CF;&#x662F;&#x6B27;&#x6D32;&#xFF0C;&#x800C;&#x4E0D;&#x50CF;&#x7F8E;&#x56FD;&#x90A3;&#x79CD;&#x7C97;&#x653E;&#x3001;&#x7D27;&#x5F20;&#x7684;&#x751F;&#x6D3B;&#x6C1B;&#x56F4;&#x3002; &#x6E05;&#x6668;&#xFF0C;&#x6211;&#x4EEC;&#x5F00;&#x8F66;&#x76F4;&#x63A5;&#x6765;&#x5230;&#x6D77;&#x8FB9;&#xFF0C;&#x8F66;&#x505C;&#x5728;&#x9A6C;&#x8DEF;&#x8FB9;&#x4E0A;&#xFF0C;&#x5149;&#x7740;&#x811A;&#x8D70;&#x8FC7;&#x4E00;&#x6BB5;&#x4E0B;&#x5761;&#x5C31;&#x662F;&#x6D77;&#x5CB8;&#x4E86;&#x3002;&#x5F53;&#x6D77;&#x6EE9;&#x7684;&#x666F;&#x8272;&#x6620;&#x5165;&#x773C;&#x5E18;&#xFF0C;&#x6211;&#x77AC;&#x95F4;&#x5C31;&#x7231;&#x4E0A;&#x4E86;&#x8FD9;&#x91CC;&#x3002;&#x867D;&#x7136;&#x66FE;&#x7ECF;&#x53BB;&#x8FC7;&#x5F88;&#x591A;&#x6D77;&#x8FB9;&#x5EA6;&#x5047;&#xFF0C;&#x4F46;&#x8FD9;&#x56DE;&#x662F;&#x6211;&#x751F;&#x547D;&#x5F53;&#x4E2D;&#x7B2C;&#x4E00;&#x6B21;&#x6765;&#x5230;&#x4E86;&#x68A6;&#x60F3;&#x91CC;&#x7684;&#x5927;&#x6D77;&#x8FB9;&#xFF01;&#x5728;&#x68A6;&#x91CC;&#xFF0C;&#x5927;&#x6D77;&#x5E94;&#x8BE5;&#x957F;&#x8FD9;&#x6837;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x6C99;&#x6EE9;&#x5F88;&#x5E72;&#x51C0;&#xFF0C;&#x88AB;&#x6D77;&#x6D6A;&#x8F7B;&#x629A;&#x5F97;&#x5F88;&#x5E73;&#x6ED1;&#xFF0C;&#x80FD;&#x591F;&#x6620;&#x51FA;&#x81EA;&#x5DF1;&#x7684;&#x5012;&#x5F71;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x6D77;&#x6D6A;&#x70ED;&#x60C5;&#x5954;&#x653E;&#xFF0C;&#x4E00;&#x4EBA;&#x9AD8;&#x96EA;&#x767D;&#x7684;&#x6D6A;&#x82B1;&#x6447;&#x66F3;&#x7740;&#x7A7A;&#x6C14;&#xFF0C;&#x53CD;&#x800C;&#x66F4;&#x886C;&#x6258;&#x8FD9;&#x91CC;&#x7684;&#x5B81;&#x9759;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x4EBA;&#x4EEC;&#x5F88;&#x6563;&#x6DE1;&#xFF0C;&#x6C99;&#x6EE9;&#x4E0A;&#x770B;&#x6D77;&#x3001;&#x6563;&#x6B65;&#xFF0C;&#x5076;&#x5C14;&#x9760;&#x8FD1;&#x6D77;&#x6D6A;&#x5B09;&#x620F;&#x7247;&#x523B;&#xFF0C;&#x5B69;&#x5B50;&#x4EEC;&#x5E26;&#x7740;&#x5C0F;&#x6876;&#x73A9;&#x6C99;&#x5B50;&#xFF0C;&#x5F88;&#x591A;&#x4EBA;&#x7275;&#x7740;&#x72D7;&#x72D7;&#xFF0C;&#x4ED6;&#x4EEC;&#x50CF;&#x662F;&#x8FD9;&#x91CC;&#x7684;&#x5E38;&#x5BA2;&#xFF0C;&#x4E5F;&#x8BB8;&#x5C31;&#x4F4F;&#x5728;&#x9644;&#x8FD1;&#x5427;&#xFF0C;&#x72D7;&#x72D7;&#x4E0D;&#x6015;&#x6C34;&#xFF0C;&#x5E38;&#x5E38;&#x51B2;&#x8FDB;&#x6D77;&#x6D6A;&#x91CC;&#x4E00;&#x4F1A;&#x53C8;&#x4ECE;&#x522B;&#x7684;&#x6D6A;&#x82B1;&#x4E2D;&#x94BB;&#x51FA;&#x6765;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x6D77;&#x5CB8;&#x7EBF;&#x8BA9;&#x4F60;&#x8EAB;&#x4E0D;&#x7531;&#x5DF1;&#x4E0D;&#x505C;&#x5730;&#x770B;&#x4E0D;&#x505C;&#x5730;&#x60F3;&#xFF0C;&#x8FD1;&#x5904;&#x7684;&#x5C0F;&#x6728;&#x5C4B;&#x91CC;&#x9762;&#x4F4F;&#x7740;&#x4EC0;&#x4E48;&#x4EBA;&#xFF1F;&#x7A0D;&#x8FDC;&#x4E00;&#x4E9B;&#x7684;&#x5C71;&#x548C;&#x68EE;&#x6797;&#xFF0C;&#x5B83;&#x4EEC;&#x548C;&#x8FD9;&#x7247;&#x6D77;&#x966A;&#x4F34;&#x4E86;&#x591A;&#x4E45;&#xFF1F;&#x66F4;&#x8FDC;&#x5904;&#x6D69;&#x6E3A;&#x7684;&#x6D77;&#x5E73;&#x9762;&#xFF0C;&#x5F53;&#x6211;&#x5728;&#x5317;&#x4EAC;&#x6478;&#x722C;&#x6EDA;&#x6253;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90A3;&#x91CC;&#x7684;&#x67D0;&#x4E2A;&#x6D6A;&#x82B1;&#xFF0C;&#x67D0;&#x6761;&#x5C0F;&#x9C7C;&#xFF0C;&#x67D0;&#x4E2A;&#x8D1D;&#x58F3;&#xFF0C;&#x5B83;&#x4EEC;&#x6B63;&#x5728;&#x5E72;&#x4EC0;&#x4E48;&#x2026;&#x2026; &#x65E0;&#x8BBA;&#x600E;&#x4E48;&#x60F3;&#xFF0C;&#x6700;&#x540E;&#x603B;&#x4F1A;&#x843D;&#x5230;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x4E0A;&#x6765;&#xFF0C;&#x6211;&#x662F;&#x4E0D;&#x662F;&#x8BE5;&#x7559;&#x4E0B;&#x6765;:) &#x4E0A;&#x5348;&#x5C31;&#x5750;&#x5728;&#x6D77;&#x8FB9;&#xFF0C;&#x770B;&#x6D77;&#xFF0C;&#x542C;&#x6D77;&#x3002;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#xFF0C;&#x4E24;&#x4E2A;&#x5C0F;&#x65F6;&#xFF0C;&#x5F88;&#x5FEB;&#x5C31;&#x8FC7;&#x53BB;&#x4E86;&#x3002;&#x73B0;&#x5728;&#x7684;&#x6D77;&#x6C34;&#x8FD8;&#x662F;&#x51B0;&#x51C9;&#x7684;&#xFF0C;&#x50CF;&#x590F;&#x5929;&#x7684;&#x4E95;&#x6C34;&#xFF0C;&#x6240;&#x4EE5;&#x5076;&#x5C14;&#x4E0B;&#x53BB;&#x88AB;&#x6D77;&#x6D6A;&#x6447;&#x6643;&#x51E0;&#x6B21;&#xFF0C;&#x5C31;&#x5F97;&#x8D76;&#x7D27;&#x56DE;&#x5230;&#x5CB8;&#x4E0A;&#x7F13;&#x4E00;&#x4F1A;&#xFF0C;&#x7136;&#x540E;&#x53C8;&#x60F3;&#x518D;&#x4E0B;&#x53BB;&#x3002;&#x6BCF;&#x4E00;&#x6B21;&#x611F;&#x53D7;&#x5927;&#x6D77;&#x6251;&#x9762;&#x800C;&#x6765;&#x7684;&#x51B2;&#x52A8;&#xFF0C;&#x5C14;&#x540E;&#x6D77;&#x6D6A;&#x9000;&#x53BB;&#x5B83;&#x53D1;&#x52A8;&#x811A;&#x4E0B;&#x6BCF;&#x4E00;&#x9897;&#x6C99;&#x7C92;&#x8F7B;&#x629A;&#x4F60;&#x7684;&#x811A;&#x5FC3;&#xFF0C;&#x76F4;&#x8FBE;&#x5185;&#x5FC3;&#xFF0C;&#x8BA9;&#x4F60;&#x518D;&#x6062;&#x590D;&#x5E73;&#x9759;&#x3002;&#x90A3;&#x79CD;&#x68D2;&#x559D;&#x3001;&#x6559;&#x8BF2;&#x4E5F;&#x8BB8;&#x53EA;&#x6709;&#x5927;&#x6D77;&#x624D;&#x80FD;&#x7ED9;&#x5230;&#x6211;&#x4EEC;&#x5427;&#x3002; &#x4E2D;&#x5348;&#x65F6;&#x5206;&#xFF0C;&#x6211;&#x4EEC;&#x604B;&#x604B;&#x4E0D;&#x820D;&#x5730;&#x79BB;&#x5F00;&#x6D77;&#x8FB9;&#xFF0C;&#x53BB;&#x9547;&#x4E0A;&#x627E;&#x4E1C;&#x897F;&#x5403;&#x3002;&#x6211;&#x4EEC;&#x6765;&#x5230;&#x4E00;&#x5BB6;&#x610F;&#x5927;&#x5229;&#x9910;&#x5385;&#xFF0C;&#x5728;yelp&#x4E0A;&#x8FD9;&#x5BB6;&#x9910;&#x5385;&#x662F;&#x9547;&#x4E0A;&#x8BC4;&#x5206;&#x6700;&#x9AD8;&#x7684;&#x3002;&#x6211;&#x5BF9;&#x5403;&#x4E00;&#x76F4;&#x4E0D;&#x662F;&#x5F88;&#x654F;&#x611F;&#xFF0C;&#x4F53;&#x9A8C;&#x4E0D;&#x51FA;&#x7F8E;&#x5473;&#x548C;&#x4E00;&#x822C;&#x98DF;&#x7269;&#x7684;&#x5DEE;&#x8DDD;&#xFF0C;&#x5403;&#x7684;&#x4E1C;&#x897F;&#x5F88;&#x96BE;&#x7ED9;&#x6211;&#x7559;&#x4E0B;&#x7279;&#x522B;&#x6DF1;&#x523B;&#x7684;&#x5370;&#x8C61;&#xFF0C;&#x5982;&#x679C;&#x8BF4;&#x6709;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x70E4;&#x7F8A;&#x817F;&#xFF0C;&#x5927;&#x8170;&#x5B50;&#xFF0C;&#x54C8;&#x54C8;&#x54C8;&#x2026;&#x2026; &#x7CBE;&#x81F4;&#x7684;&#x996D;&#x83DC;&#x5F88;&#x96BE;&#x64A9;&#x52A8;&#x6211;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C11;&#x4E86;&#x5F88;&#x591A;&#x53E3;&#x798F;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x5BB6;&#x9910;&#x5385;&#x5F88;&#x6709;&#x7279;&#x8272;&#xFF0C;&#x5348;&#x9910;&#x7ED3;&#x675F;&#xFF0C;&#x540E;&#x53A8;&#x7684;&#x5E08;&#x5085;&#x4EEC;&#x56F4;&#x88D9;&#x8FD8;&#x6CA1;&#x89E3;&#x5C31;&#x51FA;&#x6765;&#x62FF;&#x8D77;&#x9F13;&#x3001;&#x7434;&#x5F00;&#x59CB;&#x5531;&#x6B4C;&#xFF0C;&#x5F88;&#x591A;&#x5BA2;&#x4EBA;&#x52A0;&#x5165;&#x4E00;&#x8D77;&#x8DF3;&#x821E;&#xFF0C;&#x5F88;&#x5F00;&#x5FC3;&#x3002; &#x5348;&#x9910;&#x540E;&#x6CBF;&#x7740;&#x5C0F;&#x9547;&#x7684;&#x4E3B;&#x5E72;&#x9053;&#x6563;&#x6B65;&#xFF0C;&#x4E3B;&#x5E72;&#x9053;&#x4E24;&#x4FA7;&#x662F;&#x4E00;&#x4E9B;&#x5546;&#x5E97;&#x548C;&#x5C0F;&#x5EAD;&#x9662;&#xFF0C;&#x5927;&#x6982;&#x4E5F;&#x5C31;&#x4E00;&#x4E24;&#x767E;&#x7C73;&#x3002;&#x8FD9;&#x91CC;&#x548C;&#x6D77;&#x6EE9;&#x4E00;&#x6837;&#x8FF7;&#x4EBA;&#xFF0C;&#x8BA9;&#x4F60;&#x4E0D;&#x7531;&#x81EA;&#x4E3B;&#x5730;&#x60F3;&#x4E00;&#x904D;&#x4E00;&#x904D;&#x5730;&#x6E9C;&#x8FBE;&#x3002;&#x52A0;&#x5DDE;&#x7684;&#x7D2B;&#x5916;&#x7EBF;&#x5F88;&#x5F3A;&#xFF0C;&#x6211;&#x56DB;&#x6708;&#x4EFD;&#x6765;&#x53C2;&#x52A0;Google I/O&#x5927;&#x4F1A;&#xFF0C;&#x4E0A;&#x5348;&#x5728;&#x8349;&#x576A;&#x4E0A;&#x542C;&#x4E86;1&#x5C0F;&#x65F6;&#x7684;keynote&#xFF0C;&#x5C31;&#x6652;&#x8131;&#x76AE;&#x4E86;&#x3002;&#x5728;Carmel&#x5927;&#x8DEF;&#x4E24;&#x65C1;&#x90FD;&#x6709;&#x8001;&#x6811;&#xFF0C;&#x8FDE;&#x7EF5;&#x800C;&#x6210;&#x7684;&#x6811;&#x836B;&#xFF0C;&#x4FDD;&#x7559;&#x4E86;&#x9C9C;&#x4EAE;&#x7684;&#x5149;&#x7EBF;&#xFF0C;&#x5374;&#x4E00;&#x70B9;&#x4E0D;&#x611F;&#x5230;&#x707C;&#x70ED;&#x3002;&#x5728;&#x6811;&#x4E0B;&#x5C31;&#x662F;&#x5927;&#x7247;&#x800C;&#x4E14;&#x6574;&#x9F50;&#x7684;&#x9C9C;&#x82B1;&#xFF0C;&#x6BCF;&#x5BB6;&#x5546;&#x5E97;&#x6216;&#x5EAD;&#x9662;&#x91CC;&#x4E5F;&#x90FD;&#x88AB;&#x9C9C;&#x82B1;&#x7C07;&#x62E5;&#x7740;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6F2B;&#x6B65;&#x5C31;&#x50CF;&#x5728;&#x5929;&#x5802;&#x4E00;&#x6837;&#x3002; &#x9633;&#x5149;&#x3001;&#x8001;&#x6811;&#x3001;&#x6CE5;&#x571F;&#x3001;&#x6E05;&#x98CE;&#x53EA;&#x505C;&#x7559;&#x5728;&#x6211;&#x7AE5;&#x5E74;&#x7684;&#x5370;&#x8C61;&#x91CC;&#xFF0C;&#x957F;&#x5927;&#x540E;&#x5E38;&#x5E74;&#x7A7F;&#x68AD;&#x5728;&#x90FD;&#x5E02;&#x7684;&#x6C34;&#x6CE5;&#x4E1B;&#x6797;&#xFF0C;&#x800C;&#x4E14;&#x5373;&#x4F7F;&#x56DE;&#x5230;&#x6545;&#x4E61;&#xFF0C;&#x5F53;&#x5E74;&#x7684;&#x7530;&#x56ED;&#x65E9;&#x5DF2;&#x4E0D;&#x5728;&#x3002;&#x5728;&#x8DEF;&#x8FB9;&#x6211;&#x60C5;&#x4E0D;&#x81EA;&#x7981;&#x5730;&#x60F3;&#x5728;&#x4E00;&#x68F5;&#x5927;&#x6811;&#x4E0B;&#x591A;&#x505C;&#x7559;&#x4E00;&#x4F1A;&#xFF0C;&#x53BB;&#x4F53;&#x4F1A;&#x90A3;&#x79CD;&#x4E45;&#x8FDD;&#x7684;&#x6000;&#x5FF5;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x53EA;&#x611F;&#x89C9;&#x65F6;&#x95F4;&#x8D70;&#x5F97;&#x592A;&#x5FEB;&#xFF0C;&#x592A;&#x9633;&#x897F;&#x6C89;&#xFF0C;&#x771F;&#x5730;&#x60F3;&#x8BA9;&#x5B83;&#x518D;&#x6162;&#x4E00;&#x70B9;&#x843D;&#x5165;&#x6D77;&#x5E73;&#x9762;&#x3002;&#x6700;&#x540E;&#x4E00;&#x70B9;&#x65F6;&#x5149;&#xFF0C;&#x6211;&#x4EEC;&#x51B3;&#x5B9A;&#x5728;&#x6D77;&#x8FB9;&#x5EA6;&#x8FC7;&#xFF0C;&#x4E00;&#x8FB9;&#x770B;&#x5915;&#x9633;&#xFF0C;&#x4E00;&#x8FB9;&#x52AA;&#x529B;&#x5730;&#x8BB0;&#x4F4F;&#x8FD9;&#x91CC;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x3001;&#x58F0;&#x97F3;&#x548C;&#x7A7A;&#x6C14;&#x4E2D;&#x7684;&#x5473;&#x9053;&#x3002;&#x91D1;&#x8272;&#x7684;&#x5915;&#x9633;&#x6D12;&#x4E0B;&#x6765;&#xFF0C;&#x770B;&#x8FD9;&#x5F20;&#x7167;&#x7247;&#x50CF;&#x4E0D;&#x50CF;&#x7AE5;&#x8BDD;&#x4E2D;&#x7684;&#x4ED9;&#x5883;&#xFF1F;&#x6211;&#x6709;&#x4E00;&#x79CD;&#x611F;&#x89C9;&#xFF1A;&#x52A0;&#x5DDE;&#x7684;&#x5915;&#x9633;&#x6BD4;&#x5317;&#x4EAC;&#x7F8E;&#x4E00;&#x4E2A;&#x91CF;&#x7EA7;&#x3002;&#x6709;&#x4E00;&#x5929;&#x6211;&#x4EEC;&#x5728;&#x65E7;&#x91D1;&#x5C71;&#x5403;&#x665A;&#x9910;&#xFF0C;&#x521A;&#x597D;&#x4E5F;&#x662F;&#x5915;&#x9633;&#x897F;&#x4E0B;&#xFF0C;&#x6574;&#x4E2A;&#x9910;&#x5385;&#x90FD;&#x662F;&#x4E00;&#x7247;&#x91D1;&#x707F;&#x707F;&#x7684;&#x3002; &#x592A;&#x9633;&#x843D;&#x5C71;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x5230;&#x65C1;&#x8FB9;&#x7684;&#x5C0F;&#x9547;&#xFF0C;&#x53EB;Carmel Beach&#xFF0C;&#x672C;&#x6765;&#x60F3;&#x53BB;&#x770B;&#x6D77;&#x8C5A;&#xFF0C;&#x90A3;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x6D77;&#x6D0B;&#x516C;&#x56ED;&#x3002;&#x5F00;&#x8F66;&#x5230;&#x8FBE;&#x540E;&#xFF0C;&#x5929;&#x5DF2;&#x7ECF;&#x9ED1;&#x900F;&#xFF0C;&#x6D77;&#x6D0B;&#x516C;&#x56ED;&#x4E5F;&#x5173;&#x95E8;&#x4E86;&#x3002;&#x8FD9;&#x91CC;&#x6BD4;Carmel&#x5546;&#x4E1A;&#x5316;&#x6C14;&#x6C1B;&#x66F4;&#x6D53;&#x91CD;&#xFF0C;&#x65C5;&#x6E38;&#x89C2;&#x5149;&#x7684;&#x4EBA;&#x660E;&#x663E;&#x591A;&#x4E86;&#xFF0C;&#x8D70;&#x5728;&#x9A6C;&#x8DEF;&#x4E0A;&#x611F;&#x53D7;&#x8FD9;&#x91CC;&#x66F4;&#x50CF;&#x662F;&#x4E00;&#x5EA7;&#x57CE;&#x5E02;&#xFF0C;&#x4E24;&#x8FB9;&#x7684;&#x5546;&#x5E97;&#x4E5F;&#x66F4;&#x7E41;&#x534E;&#x3002;Happy&#x7684;&#x662F;&#x6D77;&#x9C9C;&#x9910;&#x5385;&#x4E5F;&#x591A;&#x4E86;&#xFF0C;&#x5C3D;&#x7BA1;&#x5929;&#x8272;&#x5DF2;&#x665A;&#xFF0C;&#x56DE;&#x7A0B;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x591A;&#x5C0F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x51B3;&#x5B9A;&#x5728;&#x8FD9;&#x91CC;&#x5403;&#x4E86;&#x665A;&#x9910;&#x518D;&#x56DE;&#x53BB;&#x3002;&#x8FD9;&#x5F20;&#x7167;&#x7247;&#x5C31;&#x662F;&#x5728;&#x9910;&#x5385;&#x8FB9;&#x4E0A;&#x62CD;&#x7684;&#xFF1A; &#x9910;&#x5385;&#x4E0D;&#x8D1F;&#x6240;&#x671B;&#xFF0C;&#x867D;&#x7136;&#x5403;&#x7684;&#x4EC0;&#x4E48;&#x6211;&#x5DF2;&#x7ECF;&#x4E0D;&#x8BB0;&#x5F97;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x7F8E;&#x597D;&#x7684;&#x611F;&#x89C9;&#x5374;&#x662F;&#x6DF1;&#x6DF1;&#x6C89;&#x6DC0;&#x7ED9;Carmel&#xFF01; &#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#x624D;&#x611F;&#x89C9;&#x5230;&#x6211;&#x662F;&#x591A;&#x4E48;&#x4E0D;&#x7231;&#x4E5F;&#x4E0D;&#x64C5;&#x957F;&#x6444;&#x5F71;&#xFF0C;&#x81EA;&#x5DF1;&#x62CD;&#x7684;&#x7167;&#x7247;&#x672C;&#x6765;&#x5C31;&#x5F88;&#x5C11;&#xFF0C;&#x4EC5;&#x6709;&#x7684;&#x51E0;&#x5F20;&#x6311;&#x6765;&#x6311;&#x53BB;&#x90FD;&#x6CA1;&#x6CD5;&#x770B;&#xFF0C;&#x8FD9;&#x91CC;&#x5949;&#x4E0A;&#x7684;&#x7167;&#x7247;&#x5927;&#x591A;&#x662F;&#x540C;&#x4F34;&#x7167;&#x7684;&#x3002;&#x611F;&#x8C22;&#x5979;&#xFF01; &#x6587;&#x7AE0;&#x5F00;&#x5934;&#x90A3;&#x53E5;&#x8BDD;&#x6E90;&#x81EA;&#x300A;&#x5317;&#x4EAC;&#x4EBA;&#x5728;&#x7EBD;&#x7EA6;&#x300B;&#x7684;&#x7247;&#x5934;&#x2014;&#x2014; &#x5982;&#x679C;&#x4F60;&#x7231;&#x5979;&#xFF0C;&#x8BF7;&#x5E26;&#x5979;&#x53BB;&#x7EBD;&#x7EA6;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x91CC;&#x662F;&#x5929;&#x5802;&#xFF1B;&#x5982;&#x679C;&#x4F60;&#x6068;&#x5979;&#xFF0C;&#x8BF7;&#x5E26;&#x5979;&#x53BB;&#x7EBD;&#x7EA6;&#xFF0C;&#x56E0;&#x4E3A;&#x90A3;&#x91CC;&#x662F;&#x5730;&#x72F1;&#x3002; &#x7B2C;&#x4E00;&#x6B21;&#x770B;&#x5230;&#x8FD9;&#x53E5;&#x8BDD;&#x6211;&#x8FD8;&#x4E0A;&#x521D;&#x4E2D;&#xFF0C;&#x7ED9;&#x6211;&#x5370;&#x8C61;&#x975E;&#x5E38;&#x6DF1;&#x523B;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x5BF9;&#x8FD9;&#x53E5;&#x8BDD;&#x5E76;&#x4E0D;&#x8BA4;&#x540C;&#xFF0C;&#x5E78;&#x798F;&#x6765;&#x81EA;&#x7231;&#x4E0E;&#x88AB;&#x7231;&#xFF0C;&#x4E0E;&#x6068;&#x65E0;&#x5173;&#x3002;Carmel&#x662F;&#x4E00;&#x4E2A;&#x4EE4;&#x4F60;&#x60F3;&#x8981;&#x7231;&#x7684;&#x5730;&#x65B9;&#xFF01;]]></content>
      <categories>
        <category>旅行</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用现金流贴现法算算几家美国公司的绝对估值]]></title>
    <url>%2F2018%2F06%2F22%2F2018%2F0622Finance%2F</url>
    <content type="text"><![CDATA[&#x7EDD;&#x5BF9;&#x4F30;&#x503C;&#x662F;&#x5173;&#x4E8E;&#x4F01;&#x4E1A;&#x5185;&#x5728;&#x4EF7;&#x503C;&#x7684;&#x4E00;&#x79CD;&#x4F30;&#x7B97;&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x4E2D;&#x73B0;&#x91D1;&#x6D41;&#x8D34;&#x73B0;&#x6CD5;&#xFF08;Discounted Cash Flow DCF&#xFF09;&#x662F;&#x6700;&#x7ECF;&#x5178;&#x7684;&#x7EDD;&#x5BF9;&#x4F30;&#x503C;&#x6CD5;&#xFF0C;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x4F01;&#x4E1A;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x7684;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#x3002;&#x672C;&#x6587;&#x5C31;&#x91C7;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7B97;&#x7B97;&#x51E0;&#x5BB6;&#x6BD4;&#x8F83;&#x8457;&#x540D;&#x516C;&#x53F8;&#x7684;&#x7EDD;&#x5BF9;&#x4F30;&#x503C;&#x3002; &#x83B7;&#x53D6;&#x8D22;&#x62A5; &#x8FD9;&#x662F;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x5199;&#x91D1;&#x878D;&#x76F8;&#x5173;&#x7684;&#x7B14;&#x8BB0;&#xFF0C;&#x56E0;&#x6B64;&#x628A;&#x4E2D;&#x9014;&#x9047;&#x5230;&#x7684;&#x57FA;&#x7840;&#x95EE;&#x9898;&#x90FD;&#x4E00;&#x4E00;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x9996;&#x5148;&#x5C31;&#x662F;&#x600E;&#x4E48;&#x83B7;&#x53D6;&#x7F8E;&#x56FD;&#x4E0A;&#x5E02;&#x516C;&#x53F8;&#x7684;&#x8D22;&#x62A5;&#x3002; &#x6765;&#x7F8E;&#x56FD;&#x8BC1;&#x5238;&#x4EA4;&#x6613;&#x59D4;&#x5458;&#x4F1A;&#x5B98;&#x7F51;&#xFF0C;&#x5728;EDGAR&#xFF08;Electronic Data Gathering, Analysis, and Retrieval System &#x5373; &#x7535;&#x5B50;&#x5316;&#x6570;&#x636E;&#x6536;&#x96C6;&#x3001;&#x5206;&#x6790;&#x53CA;&#x68C0;&#x7D22;&#x7CFB;&#x7EDF;&#xFF09;&#x641C;&#x7D22;&#x6846;&#x4E2D;&#x952E;&#x5165;&#x5F85;&#x67E5;&#x516C;&#x53F8;&#xFF0C;&#x6BD4;&#x5982;facebook&#xFF0C;&#x53EF;&#x4EE5;&#x641C;&#x5230;&#x5404;&#x7C7B;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x7F29;&#x5199;&#x548C;&#x542B;&#x4E49;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; 10-Q &#x5B63;&#x62A5; &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; 10-K &#x5E74;&#x62A5; F-1 &#x90E8;&#x5206;&#x7F8E;&#x56FD;&#x4EE5;&#x5916;&#x516C;&#x53F8;&#x6CE8;&#x518C;&#x4E0A;&#x5E02;&#x58F0;&#x660E; &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;Form D &#x89C4;&#x5219;D&#x4E0B;&#x7684;&#x8BC1;&#x5238;&#x53D1;&#x884C;&#x8C41;&#x514D;&#x6CE8;&#x518C;&#x516C;&#x544A; 3 &#x9996;&#x6B21;&#x6301;&#x80A1;&#x58F0;&#x660E; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000;&#x3000; 4 &#x6301;&#x80A1;&#x53D8;&#x52A8;&#x58F0;&#x660E; 5 &#x6301;&#x80A1;&#x53D8;&#x52A8;&#x5E74;&#x5EA6;&#x62A5;&#x544A; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000;&#x3000;&#x3000; S-1 &#x6CE8;&#x518C;&#x4E0A;&#x5E02;&#x58F0;&#x660E; POS AM &#x62DB;&#x80A1;&#x4FE1;&#x606F;&#x66F4;&#x6B63;&#x8BF4;&#x660E; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; 13D &#x80A1;&#x4E1C;&#x5355;&#x72EC;&#x6216;&#x5408;&#x5E76;&#x6301;&#x6709;5%&#x4EE5;&#x4E0A;&#x516C;&#x53F8;&#x80A1;&#x4EFD;&#x516C;&#x544A; 144 &#x8BC1;&#x5238;&#x62DF;&#x51FA;&#x552E;&#x62A5;&#x544A; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000;&#x3000;&#x3000; 20-F &#x7F8E;&#x56FD;&#x4EE5;&#x5916;&#x4E0A;&#x5E02;&#x516C;&#x53F8;&#x7684;&#x5E74;&#x5EA6;&#x62A5;&#x544A;&#x6216;&#x8FC7;&#x5EA6;&#x62A5;&#x544A; ARS &#x80A1;&#x4E1C;&#x5E74;&#x62A5; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000;&#x3000; &#x3000;&#x3000; &#x3000;&#x3000;&#x3000; 6-K &#x7F8E;&#x56FD;&#x4EE5;&#x5916;&#x4E0A;&#x5E02;&#x516C;&#x53F8;&#x7684;&#x4E34;&#x65F6;&#x62A5;&#x544A; DEF 14-A &#x80A1;&#x4E1C;&#x59D4;&#x6258;&#x4E66;&#x51B3;&#x8BAE; &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;11-K &#x5458;&#x5DE5;&#x6301;&#x80A1;&#x53D8;&#x52A8;&#x5E74;&#x5EA6;&#x62A5;&#x544A; 8-K &#x5B63;&#x62A5;&#x53D1;&#x5E03;&#x671F;&#x95F4;&#x7684;&#x91CD;&#x8981;&#x4E8B;&#x4EF6;&#x6216;&#x516C;&#x53F8;&#x53D8;&#x5316;&#x4E34;&#x65F6;&#x62A5;&#x544A; &#x6B64;&#x5916;&#x7F8E;&#x56FD;&#x7684;&#x4E0A;&#x5E02;&#x516C;&#x53F8;&#x5728;&#x4ED6;&#x4EEC;&#x7684;&#x5B98;&#x65B9;&#x7F51;&#x7AD9;&#x7684;&#x5E95;&#x7AEF;&#x90FD;&#x6709;&#x6295;&#x8D44;&#x8005;&#x5173;&#x7CFB;&#xFF08;Investor Relationship IR&#xFF09;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x90FD;&#x80FD;&#x67E5;&#x5230;&#x5B83;&#x4EEC;&#x7684;&#x8D22;&#x62A5;&#x3002;&#x6709;&#x7684;&#x9690;&#x85CF;&#x6BD4;&#x8F83;&#x6DF1;&#xFF0C;&#x6BD4;&#x5982;&#x53EF;&#x53E3;&#x53EF;&#x4E50;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;Google &#x641C;&#x7D22;coca cola investor relationship&#xFF0C;&#x70B9;&#x5F00;&#x9875;&#x9762;&#x540E;&#x627E;Annual Reports&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5728;&#x9876;&#x90E8;tab&#x4E2D;&#x627E;&#x5230;SEC Filings&#xFF0C;&#x5373;&#x53EF;&#x67E5;&#x627E;&#x5386;&#x53F2;&#x6587;&#x4EF6;&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x901A;&#x8FC7;&#x5404;&#x4E2A;&#x6E20;&#x9053;&#x67E5;&#x53EF;&#x53E3;&#x53EF;&#x4E50;&#x7684;&#x5386;&#x53F2;&#x8D22;&#x62A5;&#xFF0C;&#x6700;&#x65E9;&#x4E5F;&#x53EA;&#x80FD;&#x67E5;&#x5230;1994&#x5E74;&#x3002;&#x5728;&#x300A;&#x5F97;&#x5230;&#x300B;&#x4E0A;&#x54A8;&#x8BE2;&#x9999;&#x5E05;&#x8001;&#x5E08;&#xFF0C;&#x7B54;&#x590D;&#x662F;&#xFF1A;&#x66F4;&#x65E9;&#x7684;&#x8D22;&#x52A1;&#x7A33;&#x5065;&#x5982;&#x679C;&#x5728;SEC&#x4E0A;&#x90FD;&#x67E5;&#x4E0D;&#x5230;&#xFF0C;&#x5C31;&#x8981;&#x501F;&#x52A9;&#x4E13;&#x4E1A;&#x6570;&#x636E;&#x5E93;&#x4E86;&#xFF0C;&#x884C;&#x4E1A;&#x7814;&#x7A76;&#x5458;&#x4F1A;&#x7528;&#x5230;bloomberg, thomson reuters&#xFF0C;&#x5B66;&#x672F;&#x754C;&#x559C;&#x6B22;&#x7528;compustat&#x3002;&#x6211;&#x5927;&#x81F4;&#x641C;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x5E93;&#x5E94;&#x8BE5;&#x90FD;&#x662F;&#x4ED8;&#x8D39;&#x670D;&#x52A1;&#xFF0C;&#x56FD;&#x5185;&#x4E00;&#x4E9B;&#x5927;&#x5B66;&#x56FE;&#x4E66;&#x9986;&#x6709;&#x7EC8;&#x7AEF;&#x53EF;&#x7528;&#xFF0C;&#x8C8C;&#x4F3C;&#x8FD8;&#x80FD;&#x7533;&#x8BF7;&#x514D;&#x8D39;&#x7684;&#x8BD5;&#x7528;&#x7248;&#xFF0C;&#x6B63;&#x5728;&#x7533;&#x8BF7;&#x4E2D;&#xFF0C;&#x6162;&#x6162;&#x7814;&#x7A76;&#x5427;j~ &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41; &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#xFF08;Free Cash Flow&#xFF0C;FCF&#xFF09;&#x662F;&#x6307;&#x4F01;&#x4E1A;&#x7ECF;&#x8425;&#x6D3B;&#x52A8;&#x4EA7;&#x751F;&#x7684;&#x73B0;&#x91D1;&#x6D41;&#x91CF;&#x6263;&#x9664;&#x8D44;&#x672C;&#x6027;&#x652F;&#x51FA;(Capital Expenditures&#xFF0C;CE&#xFF09;&#x7684;&#x5DEE;&#x989D;&#x3002;&#x5373;&#xFF1A;FCF=OCF-CE&#x3002; Facebook Facebook&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x5728;&#x5B83;&#x7684;10-K&#x5E74;&#x62A5;&#x4E2D;&#x6709;&#x76F4;&#x63A5;&#x7684;&#x4F53;&#x73B0;&#xFF1A; &#x5E74;&#x4EFD;&#x3000; &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#xFF08;&#x767E;&#x4E07;$&#xFF09; &#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014; 2017 &#x3000;&#x3000;17,483 2016 &#x3000;&#x3000;11,617 2015 &#x3000;&#x3000;6,076 2014 &#x3000;&#x3000;3,626 2013 &#x3000;&#x3000;2,849 2012 &#x3000;&#x3000;37 Amazon &#x5728;&#x4E9A;&#x9A6C;&#x900A;&#x7684;10-K&#x5E74;&#x62A5;&#x4E2D;&#xFF0C;2004&#x5E74;&#x4E4B;&#x540E;&#x7684;&#x8D22;&#x62A5;&#x662F;&#x6709;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#xFF0C;&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8BA1;&#x7B97;&#x3002;&#x4E0D;&#x8FC7;&#x597D;&#x5728;2004&#x8FD9;&#x4E00;&#x5E74;&#x7684;&#x8D22;&#x62A5;&#x4E2D;&#x5305;&#x542B;&#x4E86;2001&#x3001;2002&#x3001;2003&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x7684;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#xFF1A; &#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x7EC6;&#x8282;&#xFF1A;&#x5728;&#x8D22;&#x62A5;&#x4E2D;&#xFF0C;&#x8D1F;&#x6570;&#x662F;&#x4F7F;&#x7528;&#x5706;&#x62EC;&#x53F7;&#x62EC;&#x4F4F;&#x7684;&#x6765;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x5728;&#x5728;excel&#x4E2D;&#x7684;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#xFF0C;&#x56E0;&#x6B64;&#x5728;2001&#x5E74;&#x7684;&#x8425;&#x4E1A;&#x6027;&#x6536;&#x5165;&#x662F;-119,782&#xFF0C;&#x652F;&#x51FA;&#x662F;-50,321&#xFF0C;&#x56E0;&#x6B64;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x662F;-170,103&#x3002;&#x5B83;&#x662F;&#x7528;&#x8FD0;&#x8425;&#x7684;&#x51C0;&#x6536;&#x5165;&#x51CF;&#x53BB;&#x8D2D;&#x4E70;&#x56FA;&#x5B9A;&#x8D44;&#x4EA7;&#x7684;&#x652F;&#x51FA;&#x3002; &#x5E74;&#x4EFD;&#x3000;&#x3000;&#x3000; &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41; 2017&#x3000;&#x3000;&#x3000; 8,376,000,000 2016&#x3000;&#x3000;&#x3000; 10,535,000,000 2015&#x3000;&#x3000;&#x3000; 7,450,000,000 2014&#x3000;&#x3000;&#x3000; 1,949,000,000 2013&#x3000;&#x3000;&#x3000; 2,031,000,000 2012&#x3000;&#x3000;&#x3000; 395,000,000 2011&#x3000;&#x3000;&#x3000; 2,092,000,000 2010&#x3000;&#x3000;&#x3000; 2,516,000,000 2009&#x3000;&#x3000;&#x3000; 2,920,000,000 2008&#x3000;&#x3000;&#x3000; 1,364,000,000 2007&#x3000;&#x3000;&#x3000; 1,181,000,000 2006&#x3000;&#x3000;&#x3000; 486,000,000 2005&#x3000;&#x3000;&#x3000; 529,000,000 2004&#x3000;&#x3000;&#x3000; 477,000,000 2003&#x3000;&#x3000;&#x3000; 347,000,000 2002&#x3000;&#x3000;&#x3000; 135,000,000 2001&#x3000;&#x3000;&#x3000; 170,000,000 2000&#x3000;&#x3000;&#x3000;-4,316,000 1999&#x3000;&#x3000;&#x3000;-196,180,000 1998&#x3000;&#x3000;&#x3000; 2,702,000 1997&#x3000;&#x3000;&#x3000;-6,916,000 1996&#x3000;&#x3000;&#x3000; 675,000 1995&#x3000;&#x3000;&#x3000; 180,000 Apple &#x518D;&#x6765;&#x770B;&#x82F9;&#x679C;&#x7684;&#x8D22;&#x62A5;&#xFF0C;&#x82F9;&#x679C;&#x8D22;&#x62A5;&#x5219;&#x59CB;&#x7EC8;&#x6CA1;&#x6709;Free Cash Flow&#x8FD9;&#x4E00;&#x9879;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x53BB;&#x7B97;&#xFF0C;&#x627E;&#x5230;&#x5B83;&#x7684;CONSOLIDATED STATEMENTS OF CASH FLOWS&#x8FD9;&#x79CD;&#x8868;&#xFF0C;&#x5176;&#x4E2D;Cash generated by operating activities&#x662F;&#x4F01;&#x4E1A;&#x8FD0;&#x8425;&#x6536;&#x5165;&#xFF0C;&#x652F;&#x51FA;&#x5B83;&#x6CA1;&#x6709;&#x50CF;&#x4E9A;&#x9A6C;&#x900A;&#x7684;Purchase of fixed assets, including internal-use software and Website development &#x8FD9;&#x4E00;&#x9879;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5206;&#x6790;&#x4E86;&#xFF0C;&#x5728;Investing activities&#x4E00;&#x680F;&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#xFF1A; Purchases of marketable securities &#x8D2D;&#x4E70;&#x6709;&#x4EF7;&#x8BC1;&#x5238; Proceeds from maturities of marketable securities &#x4ECE;&#x6709;&#x4EF7;&#x8BC1;&#x5238;&#x7684;&#x5230;&#x671F;&#x6536;&#x76CA; Proceeds from sales of marketable securities &#x9500;&#x552E;&#x6709;&#x4EF7;&#x8BC1;&#x5238;&#x6240;&#x5F97;&#x6536;&#x76CA; Payments made in connection with business acquisitions, net &#x4E0E;&#x5546;&#x4E1A;&#x6536;&#x8D2D;&#x76F8;&#x5173;&#x7684;&#x4ED8;&#x6B3E;&#xFF0C;&#x51C0;&#x989D; Payments for acquisition of property, plant and equipment &#x6536;&#x8D2D;&#x7269;&#x4E1A;&#x3001;&#x5382;&#x623F;&#x548C;&#x8BBE;&#x5907;&#x7684;&#x4ED8;&#x6B3E; Payments for acquisition of intangible assets &#x65E0;&#x5F62;&#x8D44;&#x4EA7;&#x6536;&#x8D2D;&#x4ED8;&#x6B3E; Payments for strategic investments, net &#x6218;&#x7565;&#x6295;&#x8D44;&#x652F;&#x4ED8;&#x51C0;&#x989D; &#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014; &#x5982;&#x679C;&#x548C;&#x4E9A;&#x9A6C;&#x900A;&#x5BF9;&#x6807;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x548C;&#x7ECF;&#x8425;&#x76F8;&#x5173;&#x7684;&#x652F;&#x51FA;&#x5E94;&#x8BE5;&#x662F;&#x7B2C;5&#x3001;6&#x9879;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x82F9;&#x679C;&#x7684;&#x6210;&#x672C;&#x652F;&#x51FA;&#x5E94;&#x8BE5;&#x6709;&#x4E00;&#x5927;&#x90E8;&#x5206;&#x662F;&#x4ED8;&#x7ED9;&#x4F9B;&#x5E94;&#x5546;&#x7684;&#x539F;&#x6750;&#x6599;&#xFF0C;&#x4E3A;&#x5565;&#x8FD9;&#x91CC;&#x770B;&#x4E0D;&#x5230;&#x5462;&#xFF1F; &#x6309;&#x7167;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x65B9;&#x5F0F;&#xFF0C;&#x82F9;&#x679C;&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x4E3A;&#xFF1A; &#x5E74;&#x4EFD;&#x3000;&#x3000; &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#xFF08;&#x767E;&#x4E07;&#xFF09; 2017&#x3000;&#x3000; 50,803 2016&#x3000;&#x3000; 52,276 2015&#x3000;&#x3000; 69,778 2014&#x3000;&#x3000; 49,900 2013&#x3000;&#x3000; 44,590 2012&#x3000;&#x3000; 41,454 2011&#x3000;&#x3000; 30,077 2010&#x3000;&#x3000; 16,474 2009&#x3000;&#x3000; 8,946 2008&#x3000;&#x3000; 8,397 2007&#x3000;&#x3000; 4,484 2006&#x3000;&#x3000; 1,535 2005&#x3000;&#x3000; 2,275 2004&#x3000;&#x3000; 758 2003&#x3000;&#x3000; 125 2002&#x3000;&#x3000; (85) 2001&#x3000;&#x3000; (47) 2000&#x3000;&#x3000; 726 1999&#x3000;&#x3000; 751 1998&#x3000;&#x3000; 729 1997&#x3000;&#x3000; 101 1996&#x3000;&#x3000; 452 1995&#x3000;&#x3000; (399) 1994&#x3000;&#x3000; 577 Google &#x518D;&#x770B;google&#xFF0C;&#x8C37;&#x6B4C;&#x4E5F;&#x6CA1;&#x6709;&#x76F4;&#x63A5;&#x5217;&#x51FA;Free Cash Flow&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E86;&#x82F9;&#x679C;&#x7684;&#x7ECF;&#x9A8C;&#xFF0C;&#x8BA1;&#x7B97;&#x5C31;&#x662F;&#x8F7B;&#x8F66;&#x719F;&#x8DEF;&#x4E86;&#xFF1A; &#x5E74;&#x4EFD; &#x3000;&#x3000;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#xFF08;&#x767E;&#x4E07;&#xFF09; 2017&#x3000;&#x3000; 23,907 2016&#x3000;&#x3000; 25,824 2015&#x3000;&#x3000; 16,622 2014&#x3000;&#x3000; 11,417 2013&#x3000;&#x3000; 11,301 2012&#x3000;&#x3000; 13,346 2011&#x3000;&#x3000; 11,127 2010&#x3000;&#x3000; 7,063 2009&#x3000;&#x3000; 8,506 2008&#x3000;&#x3000; 5,494 2007&#x3000;&#x3000; 3,372 2006&#x3000;&#x3000; 1,677 2005&#x3000;&#x3000; 1,621 2004&#x3000;&#x3000; 588 2003&#x3000;&#x3000; 218 2002&#x3000;&#x3000; 118 &#x963F;&#x91CC;&#x5DF4;&#x5DF4; &#x518D;&#x770B;&#x963F;&#x91CC;&#x5DF4;&#x5DF4;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x7F8E;&#x56FD;&#x4EE5;&#x5916;&#x7684;&#x4E0A;&#x5E02;&#x516C;&#x53F8;&#x7684;&#x5E74;&#x62A5;&#x4E0D;&#x662F;10-k&#xFF0C;&#x800C;&#x662F;20-F&#x3002;&#x963F;&#x91CC;&#x5DF4;&#x5DF4;&#x7531;&#x4E8E;&#x4E0A;&#x5E02;&#x4E0D;&#x4E45;&#xFF0C;&#x8D22;&#x62A5;&#x6570;&#x636E;&#x8FD8;&#x4E0D;&#x591A;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x963F;&#x91CC;&#x7684;&#x73B0;&#x91D1;&#x6D41;&#x662F;&#x4EE5;&#x4EBA;&#x6C11;&#x5E01;&#x8BA1;&#x7684;&#xFF1A; &#x5E74;&#x4EFD;&#x3000;&#x3000; &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#xFF08;&#x767E;&#x4E07;&#xFFE5;&#xFF09; 2017&#x3000;&#x3000; 68,790 2016&#x3000;&#x3000; 51,279 2015&#x3000;&#x3000; 48,121 2014&#x3000;&#x3000; 32,269 2013&#x3000;&#x3000; 19,745 &#x817E;&#x8BAF; &#x518D;&#x770B;&#x817E;&#x8BAF;&#xFF0C;&#x817E;&#x8BAF;&#x662F;&#x5728;&#x9999;&#x6E2F;&#x4E0A;&#x5E02;&#xFF0C;&#x5E94;&#x8BE5;&#x53BB;&#x9999;&#x6E2F;&#x4EA4;&#x6613;&#x6240;&#x5B98;&#x7F51;&#xFF0C;&#x70B9;&#x51FB;&#x8FDB;&#x9636;&#x641C;&#x5BFB;&#xFF0C;&#x8F93;&#x5165;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x5B8C;&#x6210;&#x641C;&#x7D22;&#x3002;&#x817E;&#x8BAF;&#x73B0;&#x91D1;&#x6D41;&#x4E5F;&#x662F;&#x4EE5;&#x4EBA;&#x6C11;&#x5E01;&#x8BA1;&#xFF1A; &#x5E74;&#x4EFD;&#x3000;&#x3000; &#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#xFF08;&#x767E;&#x4E07;&#xFFE5;&#xFF09; 2017&#x3000;&#x3000; 74,182 2016&#x3000;&#x3000; 48,270 2015&#x3000;&#x3000; 35,371 2014&#x3000;&#x3000; 26,095 2013&#x3000;&#x3000; 18,386 2012&#x3000;&#x3000; 14,903 2011&#x3000;&#x3000; 8,523 2010&#x3000;&#x3000; 10,529 2009&#x3000;&#x3000; 7,578 2008&#x3000;&#x3000; 3,375 2007&#x3000;&#x3000; 772 2006&#x3000;&#x3000; 1,170 2005&#x3000;&#x3000; 729 2004&#x3000;&#x3000; 117 &#x8FD9;&#x51E0;&#x5BB6;&#x516C;&#x53F8;&#x7684;&#x5E74;&#x590D;&#x5408;&#x589E;&#x957F;&#x6700;&#x5389;&#x5BB3;&#x7684;&#x662F;FaceBook&#xFF0C;&#x6DA8;&#x52BF;&#x6700;&#x6F02;&#x4EAE;&#x7684;&#x662F;&#x817E;&#x8BAF;&#xFF0C;&#x4E00;&#x8DEF;&#x5411;&#x4E0A;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x51FA;&#x73B0;&#x6CE2;&#x52A8;&#x3002;&#x82F9;&#x679C;&#x548C;&#x8C37;&#x6B4C;&#x6700;&#x8FD1;&#x4E24;&#x5E74;&#x6709;&#x6CE2;&#x52A8;&#x3002; &#x73B0;&#x91D1;&#x6D41;&#x8D34;&#x73B0;&#x6CD5; &#x73B0;&#x91D1;&#x6D41;&#x8D34;&#x73B0;&#x6CD5;&#x662F;&#x8BA1;&#x7B97;&#x51FA;&#x4F01;&#x4E1A;&#x672A;&#x6765;&#x6240;&#x6709;&#x7684;&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x6C42;&#x5408;&#xFF0C;&#x5C31;&#x7B49;&#x4E8E;&#x5BF9;&#x73B0;&#x5728;&#x7684;&#x4F30;&#x503C;&#x3002; &#x5047;&#x8BBE;&#x4F01;&#x4E1A;&#x7B2C;0&#x5E74;&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x4E3A;A&#xFF0C;&#x6BCF;&#x5E74;&#x4FDD;&#x6301;&#x3B1;&#x7684;&#x589E;&#x957F;&#x7387;&#xFF0C;&#x8D34;&#x73B0;&#x7387;&#x4E3A;&#x3B2;&#x3002;&#xFF08;&#x8D34;&#x73B0;&#x7387;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6295;&#x8D44;&#x7684;&#x4E00;&#x822C;&#x56DE;&#x62A5;&#x7387;&#xFF0C;&#x6BD4;&#x5982;&#x5982;&#x679C;&#x5B58;&#x5B9A;&#x671F;&#xFF0C;&#x660E;&#x5E74;&#x7684;100&#x5757;&#x94B1;&#xFF0C;&#x5728;&#x4ECA;&#x5E74;&#x503C;&#x591A;&#x5C11;&#x94B1;x&#xFF0C;\(\frac{100-x}{x}\)&#x5C31;&#x662F;&#x8D34;&#x73B0;&#x7387;&#xFF09; &#x90A3;&#x4E48;&#x7B2C;1&#x5E74;&#x5B83;&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x5C31;&#x4E3A;\(A(1+&#x3B1;)\)&#xFF0C;&#x6298;&#x5408;&#x5230;&#x73B0;&#x5728;&#x7684;&#x73B0;&#x91D1;&#x4E3A;\(\frac{A(1+&#x3B1;)}{1+&#x3B2;}\) &#x90A3;&#x4E48;&#x7B2C;2&#x5E74;&#x5B83;&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x5C31;&#x4E3A;\(A(1+&#x3B1;)^2\)&#xFF0C;&#x6298;&#x5408;&#x5230;&#x73B0;&#x5728;&#x7684;&#x73B0;&#x91D1;&#x4E3A;\(\frac{A(1+&#x3B1;)^2}{(1+&#x3B2;)^2}\) ... &#x90A3;&#x4E48;&#x7B2C;n&#x5E74;&#x5B83;&#x7684;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6D41;&#x5C31;&#x4E3A;\(A(1+&#x3B1;)^N\)&#xFF0C;&#x6298;&#x5408;&#x5230;&#x73B0;&#x5728;&#x7684;&#x73B0;&#x91D1;&#x4E3A;\(\frac{A(1+&#x3B1;)^n}{(1+&#x3B2;)^n}\) &#x5982;&#x679C;&#x8FD9;&#x5BB6;&#x516C;&#x53F8;&#x6C38;&#x8FDC;&#x80FD;&#x4FDD;&#x6301;&#x3B1;&#x7684;&#x901F;&#x5EA6;&#x53D1;&#x5C55;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x5F53;&#x524D;&#x7684;&#x4F30;&#x503C;&#x5C31;&#x7B49;&#x4E8E;&#x6BCF;&#x5E74;&#x81EA;&#x7531;&#x73B0;&#x91D1;&#x6298;&#x73B0;&#x5230;&#x73B0;&#x5728;&#x7684;&#x603B;&#x548C;&#xFF1A; \(\frac{A(1+&#x3B1;)}{1+&#x3B2;} + \frac{A(1+&#x3B1;)^2}{(1+&#x3B2;)^2} + ... + \frac{A(1+&#x3B1;)^N}{(1+&#x3B2;)^N} = A&#xD7;\frac{1-(\frac{1+&#x3B1;}{1+&#x3B2;}&#x3000;)^N}{1-\frac{1+&#x3B1;}{1+&#x3B2;}}\) &#x4F46;&#x662F;&#x901A;&#x5E38;&#x4E00;&#x5BB6;&#x516C;&#x53F8;&#x5F88;&#x96BE;&#x4FDD;&#x6301;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x9AD8;&#x589E;&#x957F;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7ED9;&#x5B83;&#x4F30;&#x8BA1;&#x4E00;&#x4E2A;&#x77ED;&#x671F;&#x589E;&#x957F;&#x7387;&#x548C;&#x4E00;&#x4E2A;&#x957F;&#x671F;&#x589E;&#x957F;&#x7387;&#xFF0C;&#x77ED;&#x671F;&#x589E;&#x957F;&#x7387;&#x662F;&#x5728;n&#x5E74;&#x5185;&#x4FDD;&#x6301;&#x3B1;&#xFF0C;&#x957F;&#x671F;&#x589E;&#x957F;&#x7387;&#x662F;&#x5728;n+1&#x5E74;&#x4E4B;&#x540E;&#x4FDD;&#x6301;&#x3B3;&#xFF0C;&#x4E8E;&#x662F;&#x5728;&#x7B2C;n&#x5E74;&#x524D;&#x5B83;&#x6298;&#x5408;&#x5F53;&#x524D;&#x73B0;&#x91D1;&#x6D41;&#x4E3A; \(A&#xD7;\frac{1-(\frac{1+&#x3B1;}{1+&#x3B2;}&#x3000;)^n}{1-\frac{1+&#x3B1;}{1+&#x3B2;}}=A&#xD7;\frac{1+&#x3B2;}{&#x3B2;-&#x3B1;}&#xD7;\frac{(1+&#x3B2;)^n - (1+&#x3B1;)^n}{(1+&#x3B2;)^n}\) &#x7B2C;n+1&#x5E74;&#x540E;&#x6240;&#x6709;&#x73B0;&#x91D1;&#x8FD9;&#x548C;&#x5F53;&#x524D;&#x73B0;&#x91D1;&#x6D41;&#x4E3A;&#xFF1A;\(\frac{A(1+&#x3B1;)^n}{(1+&#x3B2;)^n}&#xD7;\frac{1-(\frac{1+&#x3B3;}{1+&#x3B2;}&#x3000;)^N}{1-\frac{1+&#x3B3;}{1+&#x3B2;}}\) &#xFF08;&#x4EE5;&#x7B2C;n&#x5E74;&#x4E3A;&#x8D77;&#x70B9;&#x7684;&#x7B49;&#x6BD4;&#x6570;&#x5217;&#x6C42;&#x5408;&#xFF09; &#x5982;&#x679C;&#x3B3;&#xFF1C;&#x3B2;&#xFF0C;&#x5219;&#x7B2C;n+1&#x5E74;&#x540E;&#x6240;&#x6709;&#x73B0;&#x91D1;&#x8FD9;&#x548C;&#x5F53;&#x524D;&#x73B0;&#x91D1;&#x6D41;&#x4E3A;&#xFF1A;\(\frac{A(1+&#x3B1;)^n}{(1+&#x3B2;)^n}&#xD7; \frac{1+&#x3B2;}{&#x3B2;-&#x3B3;}\) &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x8BE5;&#x516C;&#x53F8;&#x672A;&#x6765;&#x6240;&#x6709;&#x73B0;&#x91D1;&#x6D41;&#x6298;&#x5408;&#x5F53;&#x524D;&#x4EF7;&#x503C;&#x4E3A;&#xFF1A;\(A&#xD7;\frac{1+&#x3B2;}{&#x3B2;-&#x3B1;}&#xD7;\frac{(1+&#x3B2;)^n - (1+&#x3B1;)^n}{(1+&#x3B2;)^n} + A&#xD7;\frac{(1+&#x3B1;)^n}{(1+&#x3B2;)^n}&#xD7; \frac{1+&#x3B2;}{&#x3B2;-&#x3B3;}\) &#x6211;&#x6839;&#x636E;&#x4E0A;&#x9762;&#x5217;&#x51FA;&#x7684;&#x8FD9;&#x4E9B;&#x516C;&#x53F8;&#xFF0C;&#x628A;&#x4ED6;&#x4EEC;&#x672A;&#x6765;n&#x5E74;&#x7684;&#x589E;&#x957F;&#x7387;&#x8BBE;&#x5B9A;&#x4E3A;&#x5386;&#x53F2;&#x589E;&#x957F;&#x7387;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x8D34;&#x73B0;&#x7387;8%&#xFF0C;n&#x5E74;&#x540E;&#x7684;&#x589E;&#x957F;&#x7387;&#x4E3A;3%5%&#xFF0C;n&#x5728;510&#x5E74;&#x3002;&#x8BA1;&#x7B97;&#x51FA;&#x7EDD;&#x5BF9;&#x4F30;&#x503C;&#x4E3A;&#xFF1A; &#x516C;&#x53F8;&#x3000;&#x3000;&#x3000;&#x3000;&#x7EDD;&#x5BF9;&#x4F30;&#x503C;&#xFF08;&#x4EBF;&#xFF09;&#x3000;&#x3000;2018&#x5E74;6&#x6708;&#x5E02;&#x503C;&#xFF08;&#x4EBF;&#xFF09;&#x3000;&#x3000;&#x5E02;&#x76C8;&#x7387; Apple &#x3000;&#x3000;&#x3000;&#x3000;18,000&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;9,098&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;17.82 FaceBook&#x3000;&#x3000; 14,000&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;5,820&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;33.4 Tencent&#x3000;&#x3000;&#x3000; 10,924&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;5,901&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;43.63 Google&#x3000;&#x3000;&#x3000;&#x3000;10,355&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;8,025&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;48.96 Alibaba&#x3000;&#x3000;&#x3000;&#x3000; 6,887&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;5,183&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;51.02 Amazon&#x3000;&#x3000;&#x3000;&#x3000;6,780&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;8,325&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;216.1 &#x5177;&#x4F53;&#x7684;&#x7B97;&#x6CD5;&#x653E;&#x5728;&#x4E86;analysis.xlsx&#x3002; &#x672C;&#x8282;&#x662F;&#x5B66;&#x4E60;&#x4E86;&#x9999;&#x5E05;&#x7684;&#x7EDD;&#x5BF9;&#x4F30;&#x503C;&#x6CD5;&#x505A;&#x51FA;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x8BA1;&#x7B97;&#xFF0C;&#x5E94;&#x8BE5;&#x8FD8;&#x5F88;&#x80A4;&#x6D45;&#xFF0C;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x7EE7;&#x7EED;&#x5B8C;&#x5584;&#x5427;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6C47;&#x603B;&#x4E00;&#x4E0B;&#x672C;&#x8282;&#x4F7F;&#x7528;&#x7684;&#x7F51;&#x7AD9;&#xFF1A; &#x7F8E;&#x56FD;&#x8BC1;&#x5238;&#x4EA4;&#x6613;&#x59D4;&#x5458;&#x4F1A;&#x5B98;&#x7F51; &#x9999;&#x6E2F;&#x4EA4;&#x6613;&#x6240;&#x5B98;&#x7F51; &#x5DE8;&#x6F6E;&#x8D44;&#x8BAF;&#xFF0C;&#x8FD9;&#x662F;&#x4E2D;&#x56FD;&#x8BC1;&#x76D1;&#x4F1A;&#x6307;&#x5B9A;&#x4FE1;&#x606F;&#x62AB;&#x9732;&#x7F51;&#x7AD9;]]></content>
      <categories>
        <category>金融</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git submodules]]></title>
    <url>%2F2018%2F06%2F22%2F2018%2F0626GitSubmodule%2F</url>
    <content type="text"><![CDATA[&#x81EA;&#x5DF1;&#x7684;&#x7248;&#x672C;&#x5E93;&#x4E2D;&#x5E38;&#x5E38;&#x5F15;&#x7528;&#x4E00;&#x4E9B;&#x5F00;&#x6E90;&#x7684;&#x57FA;&#x7840;&#x6A21;&#x5757;&#xFF0C;&#x6BD4;&#x5982;googletest&#x3001;glog&#xFF0C;&#x6BD4;&#x8F83;&#x7B28;&#x7684;&#x505A;&#x6CD5;&#x662F;clone&#x4E00;&#x4EFD;&#x4EE3;&#x7801;&#xFF0C;&#x76F4;&#x63A5;&#x518D;&#x63D0;&#x4EA4;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x7248;&#x672C;&#x5E93;&#x4E2D;&#x3002;&#x66F4;&#x63A8;&#x8350;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x4F7F;&#x7528;git submodules&#x3002; &#x5F53;&#x7136;&#xFF0C;&#x901A;&#x5E38;&#x4E0D;&#x4F1A;&#x5F15;&#x7528;&#x8FD9;&#x4E9B;&#x57FA;&#x7840;&#x6A21;&#x5757;&#x7684;&#x6700;&#x65B0;&#x7248;&#x672C;&#xFF0C;&#x4E00;&#x6709;&#x7A33;&#x5B9A;&#x6027;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x4E8C;&#x4E5F;&#x6709;&#x517C;&#x5BB9;&#x6027;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x6240;&#x4EE5;&#x518D;&#x6DFB;&#x52A0;submodule&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x5206;&#x652F;&#x6216;Tag&#x3002;&#x4EE5;&#x6211;&#x7684;libgooglepinyin&#x4E3A;&#x4F8B;&#x3002; &#x5728;&#x9879;&#x76EE;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x6DFB;&#x52A0;submodule&#xFF0C;&#x5B83;&#x4F1A;&#x5728;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA;&#x6587;&#x4EF6;.gitmodules&#x3002; 1$ git submodule add https://github.com/google/googletest.git googletest &#x5C06;&#x6A21;&#x5757;&#x68C0;&#x51FA;&#x5230;&#x6307;&#x5B9A;&#x7248;&#x672C;&#xFF1A; 12$ cd googletest$ git checkout release-1.8.0 &#x63D0;&#x4EA4; 123$ cd ..$ git commit -m&quot;commit changes&quot;$ git push &#x4E0B;&#x6B21;&#x518D;&#x6267;&#x884C;git clone&#x4E3B;&#x9879;&#x76EE;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x66F4;&#x65B0;module&#xFF1A; 1$ git submodule update --init --recursive &#x5C06;&#x76F4;&#x63A5;&#x5C06;&#x6307;&#x5B9A;tag&#x7684;submodule&#x66F4;&#x65B0;&#x4E0B;&#x6765;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x6CA1;&#x627E;&#x5230;&#x8FD9;&#x4E2A;tag&#x662F;&#x8BB0;&#x5F55;&#x5728;&#x672C;&#x5730;&#x54EA;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x3002; &#x5728;&#x65B0;&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x6267;&#x884C;clone&#x9A8C;&#x8BC1;&#x4E00;&#x4E0B;&#xFF1A; 1234$ git clone https://github.com/palanceli/libgooglepinyin.git$ cd libgooglepinyin/googletest$ git describe --tagsrelease-1.8.0 &#x5220;&#x9664;&#x67D0;&#x4E2A;submodule&#xFF0C;&#x9700;&#x8981;1&#x3001;&#x5728;.gitmodules&#x4E2D;&#x5220;&#x9664;&#x76F8;&#x5173;&#x5B57;&#x6BB5;&#xFF1B;2&#x3001;&#x5728;.git/config&#x4E2D;&#x5220;&#x9664;&#x76F8;&#x5173;&#x5B57;&#x6BB5;&#xFF1B;3&#x3001;&#x5220;&#x9664;&#x6A21;&#x5757;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x3002;]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[编写编译器和解释器二]]></title>
    <url>%2F2018%2F06%2F19%2F2018%2F0619BuildASimpleInterpreter2%2F</url>
    <content type="text"><![CDATA[&#x4E0A;&#x4E00;&#x8282;&#x57FA;&#x4E8E;&#x56DB;&#x5219;&#x8FD0;&#x7B97;&#x7684;&#x8BA1;&#x7B97;&#x5668;&#xFF0C;&#x5F15;&#x5165;&#x4E86;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x3001;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x8FD0;&#x884C;&#x5668;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4ED6;&#x4EEC;&#x5206;&#x5DE5;&#x660E;&#x786E;&#xFF0C;&#x76F8;&#x4E92;&#x534F;&#x4F5C;&#xFF0C;&#x6839;&#x636E;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x5B8C;&#x6210;&#x6E90;&#x4EE3;&#x7801;&#x7684;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x3002;&#x672C;&#x8282;&#x5C06;&#x8FD9;&#x4E00;&#x89C4;&#x5219;&#x5E94;&#x7528;&#x5230;&#x5B9E;&#x9645;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x4EE5;Pascal&#x4E3A;&#x4F8B;&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#x548C;&#x89E3;&#x6790;&#x3002;&#x4ECE;&#x4E1A;&#x52A1;&#x8DE8;&#x5EA6;&#x4E0A;&#xFF0C;&#x672C;&#x8282;&#x76F8;&#x6BD4;&#x4E0A;&#x4E00;&#x8282;&#x662F;&#x4E00;&#x6B21;&#x8DE8;&#x8D8A;&#xFF0C;&#x4F46;&#x4ECE;&#x5E95;&#x5C42;&#x6280;&#x672F;&#x6765;&#x8BF4;&#xFF0C;&#x4E0D;&#x8FC7;&#x662F;&#x4E0A;&#x4E00;&#x8282;&#x57FA;&#x672C;&#x6982;&#x5FF5;&#x7684;&#x53C8;&#x4E00;&#x6B21;&#x5E94;&#x7528;&#x800C;&#x5DF2;&#x3002; &#x652F;&#x6301;Pascal&#x8BED;&#x6CD5;&#x89C4;&#x5219; &#x7ED9;&#x4E00;&#x95E8;&#x65B0;&#x8BED;&#x8A00;&#x5199;&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x5B8C;&#x6210;&#x5B83;&#x7684;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x662F;&#x96BE;&#x5EA6;&#x6700;&#x5927;&#x4E5F;&#x662F;&#x5E94;&#x8BE5;&#x6700;&#x5148;&#x5B8C;&#x6210;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x672C;&#x8282;&#x5F15;&#x5165;&#x7684;Pascal&#x8BED;&#x6CD5;&#x63CF;&#x8FF0;&#x4E3A;&#xFF1A; 1234567891011121314151617181920212223242526program : compound_statement DOTcompond_statement : BEGIN statement_list ENDstatement_list : statement | statement SEMI statement_liststatement : compound_statement | assignment_statement | emptyassignment_statement : variable ASSIGN exprempty :expr : term((PLUS | MINUS) term)*term : factor ((MUL |DIV) factor)*factor : PLUS factor | MINUS factor | INTEGER | LPAREN expr RPAREN | variablevariable : ID &#x5728;statement_list&#x89C4;&#x5219;&#x4E2D;&#x4E5F;&#x53EF;&#x5199;&#x4F5C; 1statement _list : statement | (statement SEMI)* &#x6709;&#x4E86;&#x4E0A;&#x4E00;&#x8282;&#x8BCD;&#x6CD5;&#x89E3;&#x6790;&#x5668;&#x3001;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x5668;&#x7684;&#x5206;&#x5DE5;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x53EA;&#x9700;&#x8003;&#x8651;&#x5728;&#x6BCF;&#x4E2A;&#x804C;&#x8D23;&#x4E0A;&#x5E94;&#x505A;&#x7684;&#x53D8;&#x5316;&#x3002; &#x8BCD;&#x6CD5;&#x89E3;&#x6790; &#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x7684;&#x4E2D;&#x67A2;&#x662F;Lexer::get_next_token()&#xFF0C;&#x548C;&#x56DB;&#x5219;&#x8FD0;&#x7B97;&#x7684;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x76F8;&#x6BD4;&#xFF0C;Pascal&#x7684;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x53EA;&#x662F;&#x591A;&#x4E86;&#x51E0;&#x79CD;&#x7B26;&#x53F7;&#x7684;&#x89E3;&#x6790;&#xFF0C;&#x5305;&#x62EC;&#x2460;&#x53D8;&#x91CF;&#xFF1B;&#x2461;&#x957F;&#x5EA6;&#x5927;&#x4E8E;1&#x7684;&#x4FDD;&#x7559;&#x7B26;&#x53F7; 123456789101112131415161718192021222324252627282930313233343536class Lexer(object): ... def _id(self): &quot;&quot;&quot;Handle identifiers and reserved keywords&quot;&quot;&quot; result = &apos;&apos; while self.current_char is not None and self.current_char.isalnum(): result += self.current_char self.advance() token = RESERVED_KEYWORDS.get(result, Token(ID, result)) return token def get_next_token(self): ... while self.current_char is not None: ... if self.current_char.isalpha(): # &#x2460; return self._id() if self.current_char.isdigit(): return Token(INTEGER, self.integer()) if self.current_char == &apos;:&apos; and self.peek() == &apos;=&apos;: # &#x2461; self.advance() self.advance() return Token(ASSIGN, &apos;:=&apos;) if self.current_char == &apos;;&apos;: ... if self.current_char == &apos;+&apos;: ... if self.current_char == &apos;-&apos;: ... ... return Token(EOF, None) &#x8BED;&#x6CD5;&#x5206;&#x6790; &#x7ED3;&#x5408;&#x4E0A;&#x4E00;&#x8282;&#x4ECE;&#x8BED;&#x6CD5;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x6620;&#x5C04;&#xFF0C;&#x5C06;&#x6BCF;&#x6761;&#x89C4;&#x5219;&#x5199;&#x6210;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384class Parser(object): ... def program(self): # &#x8FD9;&#x91CC;&#x662F;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x7684;&#x8D77;&#x70B9; &quot;&quot;&quot; program : compound_statement DOT &quot;&quot;&quot; node = self.compound_statement() self.eat(DOT) return node def compound_statement(self): &quot;&quot;&quot; compound_statement: BEGIN statement_list END &quot;&quot;&quot; self.eat(BEGIN) nodes = self.statement_list() self.eat(END) root = Compound() for node in nodes: root.children.append(node) return root def statement_list(self): &quot;&quot;&quot; statement_list : statement | (statement SEMI)* &quot;&quot;&quot; node = self.statement() results = [node] while self.current_token.type == SEMI: self.eat(SEMI) results.append(self.statement()) ... return results def statement(self): &quot;&quot;&quot; statement : compound_statement | assignment_statement | empty &quot;&quot;&quot; if self.current_token.type == BEGIN: node = self.compound_statement() elif self.current_token.type == ID: node = self.assignment_statement() else: node = self.empty() return node def assignment_statement(self): &quot;&quot;&quot; assignment_statement : variable ASSIGN expr &quot;&quot;&quot; left = self.variable() token = self.current_token self.eat(ASSIGN) right = self.expr() node = Assign(left, token, right) return node def variable(self): &quot;&quot;&quot; variable : ID &quot;&quot;&quot; node = Var(self.current_token) self.eat(ID) return node def empty(self): &quot;&quot;&quot;An empty production&quot;&quot;&quot; return NoOp() def expr(self): &quot;&quot;&quot; expr : term ((PLUS | MINUS) term)* &quot;&quot;&quot; ... def term(self): &quot;&quot;&quot; term : factor ((MUL | DIV) factor)* &quot;&quot;&quot; ... def factor(self): &quot;&quot;&quot; factor : PLUS factor | MINUS factor | INTEGER | LPAREN expr RPAREN | variable &quot;&quot;&quot; ... def parse(self): ... node = self.program() ... return node &#x5728;AST&#x8282;&#x70B9;&#x9009;&#x53D6;&#x4E0A;&#xFF0C;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x662F;&#x7531;&#x7EC8;&#x7ED3;&#x7B26;&#x7EC4;&#x6210;&#xFF0C;&#x6839;&#x636E;Pascal&#x7684;&#x8BED;&#x6CD5;&#x8868;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x53D8;&#x91CF;variable&#xFF1B;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x9009;&#x53D6;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x9009;&#x6CD5;&#xFF0C;&#x56E0;&#x4E3A;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x7684;&#x5DE6;&#x90E8;&#x5F15;&#x5165;&#x4E86;compound_statement&#x3001;statement_list&#x3001;statement&#x548C;assignment_statement&#xFF0C;&#x800C;&#x5728;Part9&#x4E2D;&#x4EC5;&#x5F15;&#x5165;&#x4E86;Compound&#x3001;Assign&#x548C;Var&#xFF0C;&#x5B83;&#x5728;Compound&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;statement&#x7684;&#x96C6;&#x5408;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334class AST(object): passclass BinOp(AST): def __init__(self, left, op, right): ...class Num(AST): def __init__(self, token): ...class UnaryOp(AST): def __init__(self, op, expr): ...class Compound(AST): &quot;&quot;&quot;Represents a &apos;BEGIN ... END&apos; block&quot;&quot;&quot; def __init__(self): self.children = []class Assign(AST): def __init__(self, left, op, right): self.left = left self.token = self.op = op self.right = rightclass Var(AST): &quot;&quot;&quot;The Var node is constructed out of ID token.&quot;&quot;&quot; def __init__(self, token): self.token = token self.value = token.valueclass NoOp(AST): pass &#x89E3;&#x91CA;&#x6267;&#x884C; &#x89E3;&#x91CA;&#x5668;&#x7684;&#x6267;&#x884C;&#x662F;&#x6839;&#x636E;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x4EA7;&#x51FA;&#x7684;&#x8282;&#x70B9;&#x7C7B;&#x578B;&#xFF0C;&#x914D;&#x5957;&#x5BF9;&#x5E94;&#x7684;&#x8BBF;&#x95EE;&#x51FD;&#x6570;&#x3002;&#x663E;&#x7136;&#x4ED6;&#x5FC5;&#x987B;&#x589E;&#x52A0;&#x5BF9;Compound&#x3001;Assign&#x548C;Var&#x7684;&#x8BBF;&#x95EE;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;Var&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x5728;&#x8D4B;&#x503C;&#x8BED;&#x53E5;&#x7684;&#x5DE6;&#x4FA7;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x63D0;&#x9886;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x5728;&#x53F3;&#x4FA7;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x53D6;&#x503C;&#x3002; 1234567891011121314151617181920212223242526272829303132class NodeVisitor(object): def visit(self, node): method_name = &apos;visit_&apos; + type(node).__name__ visitor = getattr(self, method_name, self.generic_visit) return visitor(node) ...class Interpreter(NodeVisitor): GLOBAL_SCOPE = {} ... def visit_Compound(self, node): for child in node.children: self.visit(child) def visit_Assign(self, node): var_name = node.left.value # &#x5DE6;&#x90E8;&#x662F;Var&#xFF0C;&#x4F46;&#x4E0D;&#x518D;&#x8D70;visit_Var&#x903B;&#x8F91; self.GLOBAL_SCOPE[var_name] = self.visit(node.right) def visit_Var(self, node): var_name = node.value val = self.GLOBAL_SCOPE.get(var_name) ... return val def visit_NoOp(self, node): pass def interpret(self): tree = self.parser.parse() ... return self.visit(tree) &#x8FD9;&#x91CC;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;GLOBAL_SCOPE&#x7528;&#x6765;&#x4FDD;&#x5B58;&#x7B26;&#x53F7;&#x8868;&#xFF0C;&#x7B26;&#x53F7;&#x8868;&#x793A;&#x7528;&#x6765;&#x8DDF;&#x8E2A;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x5404;&#x79CD;&#x7B26;&#x53F7;&#x7684;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x76EE;&#x524D;&#x53EA;&#x662F;&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x4FDD;&#x5B58;&#x4E86;&#x53D8;&#x91CF;&#x3002; &#x589E;&#x5F3A;&#x7248;Pascal&#x8BED;&#x6CD5;&#x89C4;&#x5219; Part10&#x652F;&#x6301;&#x4E86;&#x66F4;&#x5B8C;&#x5907;&#x7684;Pascal&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; PROGRAM&#x5934;&#xFF0C; &#x53D8;&#x91CF;&#x58F0;&#x660E;&#xFF0C; &#x5F15;&#x5165;DIV&#x4F5C;&#x4E3A;&#x6574;&#x9664;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;/&#x4F5C;&#x4E3A;&#x6D6E;&#x70B9;&#x9664;&#x6CD5;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C; &#x652F;&#x6301;&#x6CE8;&#x91CA;&#x3002; &#x8BED;&#x6CD5;&#x8868;&#x4E3A;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536program : PROGRAM variable SEMI block DOT &#x2460;block : declarations compound_statement &#x2461;declarations : VAR (variable_declaration SEMI) + &#x2462; | emptyvariable_declaration : ID (COMMA ID)* COLON type_spec &#x2463;type_spec : INTEGERcompound_statement : BEGIN statement_list END &#x2464;statement_list : statement | statement SEMI statement_liststatement : compound_statement | assignment_statement | emptyassignment_statement : variable ASSIGN exprempty :expr : term ((PLUS |MINUS) term)*term : factor ((MUL | INTEGER_DIV | FLOAT_DIV) factor)*factor : PLUS factor | MINUS factor | INTEGER_CONST | REAL_CONST | LPAREN expr RPAREN | variablevariable : ID &#x5BF9;&#x5E94;&#x4E00;&#x6BB5;&#x4EE3;&#x7801; 12345678910111213141516PROGRAM Part10; {&#x2460;}VAR {&#x2461;&#x2462;} number :INTEGER; {&#x2463;} a, b, c, x : INTEGER; y : REAL;BEGIN {Part10} {&#x2464;} BEGIN number := 2; a := number; b := 10 * 1 + 10 * number DIV 4; c := a - - b END; x := 11; y := 20 / 7 + 3.14;END. {Part10} &#x770B;&#x8D77;&#x6765;&#x590D;&#x6742;&#x4E86;&#x5F88;&#x591A;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x662F;&#x6D41;&#x7A0B;&#x5316;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4F9D;&#x6B21;&#x4FEE;&#x6539;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x3001;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x548C;&#x89E3;&#x91CA;&#x5668;&#x3002; &#x8BCD;&#x6CD5;&#x5206;&#x6790; &#x4EE3;&#x7801;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#xFF0C;&#x4F46;&#x590D;&#x6742;&#x5EA6;&#x5176;&#x5B9E;&#x6CA1;&#x6709;&#x589E;&#x52A0;&#xFF0C;&#x5728;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x90E8;&#x5206;&#x7684;&#x66F4;&#x6539;&#x662F;&#xFF1A; 1. &#x589E;&#x52A0;&#x65B0;&#x7684;&#x4FDD;&#x7559;&#x5B57;&#x3002;&#x8BC6;&#x522B;&#x53D8;&#x91CF;&#x7684;Lexer::_id()&#x903B;&#x8F91;&#x6CA1;&#x6709;&#x53D8;&#xFF0C;&#x53EA;&#x662F;&#x5728;RESERVED_KEYWORDS&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x65B0;&#x7684;item 2. Lexer::skip_comment()&#x5904;&#x7406;&#x6CE8;&#x91CA;&#xFF0C;&#x903B;&#x8F91;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x7C7B;&#x4F3C;Lexer::skip_whitespace() 3. &#x89E3;&#x6790;&#x6570;&#x5B57;&#xFF0C;&#x652F;&#x6301;&#x6D6E;&#x70B9;&#x578B;&#x6570;&#x5B57;&#x3002;&#x903B;&#x8F91;&#x4E5F;&#x4E0D;&#x8FC7;&#x662F;&#x7528;.&#x5206;&#x4E24;&#x622A;&#x89E3;&#x6790;&#x6570;&#x5B57;&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465RESERVED_KEYWORDS = { &apos;PROGRAM&apos;: Token(&apos;PROGRAM&apos;, &apos;PROGRAM&apos;), &apos;VAR&apos;: Token(&apos;VAR&apos;, &apos;VAR&apos;), &apos;DIV&apos;: Token(&apos;INTEGER_DIV&apos;, &apos;DIV&apos;), &apos;INTEGER&apos;: Token(&apos;INTEGER&apos;, &apos;INTEGER&apos;), &apos;REAL&apos;: Token(&apos;REAL&apos;, &apos;REAL&apos;), &apos;BEGIN&apos;: Token(&apos;BEGIN&apos;, &apos;BEGIN&apos;), &apos;END&apos;: Token(&apos;END&apos;, &apos;END&apos;),}class Lexer(object): ... def skip_comment(self): while self.current_char != &apos;}&apos;: self.advance() self.advance() # the closing curly brace def number(self): &quot;&quot;&quot;Return a (multidigit) integer or float consumed from the input.&quot;&quot;&quot; result = &apos;&apos; while self.current_char is not None and self.current_char.isdigit(): result += self.current_char self.advance() if self.current_char == &apos;.&apos;: result += self.current_char self.advance() while ( self.current_char is not None and self.current_char.isdigit() ): result += self.current_char self.advance() token = Token(&apos;REAL_CONST&apos;, float(result)) else: token = Token(&apos;INTEGER_CONST&apos;, int(result)) return token def _id(self): &quot;&quot;&quot;Handle identifiers and reserved keywords&quot;&quot;&quot; result = &apos;&apos; while self.current_char is not None and self.current_char.isalnum(): result += self.current_char self.advance() token = RESERVED_KEYWORDS.get(result, Token(ID, result)) return token def get_next_token(self): ... while self.current_char is not None: ... if self.current_char == &apos;{&apos;: self.advance() self.skip_comment() continue if self.current_char.isalpha(): return self._id() if self.current_char.isdigit(): return self.number() ... &#x8BED;&#x6CD5;&#x5206;&#x6790; &#x5728;Part10&#x7684;&#x4ECB;&#x7ECD;&#x4E2D;&#xFF0C;&#x6BCF;&#x6B21;&#x66F4;&#x65B0;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x90FD;&#x662F;&#x4ECE;&#x6DFB;&#x52A0;AST&#x5F00;&#x59CB;&#x7684;&#xFF0C;&#x4F46;&#x6211;&#x8BA4;&#x4E3A;&#x4ECE;&#x8BED;&#x6CD5;&#x5230;&#x51FD;&#x6570;&#x7684;&#x6620;&#x5C04;&#x8F6C;&#x6362;&#x66F4;&#x81EA;&#x7136;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x8F6C;&#x6362;&#x89C4;&#x5219;&#x51E0;&#x4E4E;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x6700;&#x7EC8;&#x9009;&#x53D6;&#x54EA;&#x4E9B;&#x8282;&#x70B9;&#x6765;&#x521B;&#x5EFA;AST&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E5F;&#x662F;&#x6839;&#x636E;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x9700;&#x8981;&#x786E;&#x5B9A;&#x3002; &#x672C;&#x8282;&#x5BF9;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x4FEE;&#x6539;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x6309;&#x7167;&#x65B0;&#x7684;&#x8BED;&#x6CD5;&#x8868;&#x91CD;&#x65B0;&#x5B9E;&#x73B0;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x3002;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x7684;&#x4E3B;&#x903B;&#x8F91;&#x5728;Parser::parse()&#xFF0C;&#x8D77;&#x70B9;&#x662F;Parser::program()&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116class Parser(object): ... def program(self): &quot;&quot;&quot; program : PROGRAM variable SEMI block DOT &quot;&quot;&quot; self.eat(PROGRAM) var_node = self.variable() prog_name = var_node.value self.eat(SEMI) block_node = self.block() program_node = Program(prog_name, block_node) self.eat(DOT) return program_node def block(self): &quot;&quot;&quot; block : declarations compound_statement &quot;&quot;&quot; declaration_nodes = self.declarations() compound_statement_node = self.compound_statement() node = Block(declaration_nodes, compound_statement_node) return node def declarations(self): &quot;&quot;&quot; declarations : VAR (variable_declaration SEMI)+ | empty &quot;&quot;&quot; declarations = [] if self.current_token.type == VAR: self.eat(VAR) while self.current_token.type == ID: var_decl = self.variable_declaration() declarations.extend(var_decl) self.eat(SEMI) return declarations def variable_declaration(self): &quot;&quot;&quot; variable_declaration : ID (COMMA ID)* COLON type_spec &quot;&quot;&quot; var_nodes = [Var(self.current_token)] # first ID self.eat(ID) while self.current_token.type == COMMA: self.eat(COMMA) var_nodes.append(Var(self.current_token)) self.eat(ID) self.eat(COLON) type_node = self.type_spec() var_declarations = [ VarDecl(var_node, type_node) for var_node in var_nodes ] return var_declarations def type_spec(self): &quot;&quot;&quot; type_spec : INTEGER | REAL &quot;&quot;&quot; token = self.current_token if self.current_token.type == INTEGER: self.eat(INTEGER) else: self.eat(REAL) node = Type(token) return node def compound_statement(self): &quot;&quot;&quot; compound_statement: BEGIN statement_list END &quot;&quot;&quot; self.eat(BEGIN) nodes = self.statement_list() self.eat(END) root = Compound() for node in nodes: root.children.append(node) return root def statement_list(self): &quot;&quot;&quot; statement_list : statement | statement SEMI statement_list &quot;&quot;&quot; node = self.statement() results = [node] while self.current_token.type == SEMI: self.eat(SEMI) results.append(self.statement()) return results def statement(self): &quot;&quot;&quot; statement : compound_statement | assignment_statement | empty &quot;&quot;&quot; if self.current_token.type == BEGIN: node = self.compound_statement() elif self.current_token.type == ID: node = self.assignment_statement() else: node = self.empty() return node def assignment_statement(self): &quot;&quot;&quot; assignment_statement : variable ASSIGN expr &quot;&quot;&quot; left = self.variable() token = self.current_token self.eat(ASSIGN) right = self.expr() node = Assign(left, token, right) return node def variable(self): &quot;&quot;&quot; variable : ID &quot;&quot;&quot; node = Var(self.current_token) self.eat(ID) return node ... def parse(self): ... node = self.program() ... return node &#x5728;&#x672C;&#x8282;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x4E2D;&#xFF0C;&#x51E1;&#x662F;&#x975E;&#x96C6;&#x5408;&#x7C7B;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x90FD;&#x4E3A;&#x5B83;&#x521B;&#x5EFA;&#x4E86;AST&#x8282;&#x70B9;&#x3002;&#x521B;&#x5EFA;&#x7684;AST&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x89E3;&#x91CA;&#x6267;&#x884C; &#x89E3;&#x91CA;&#x5668;&#x7684;&#x903B;&#x8F91;&#x662F;&#x7D27;&#x968F;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x7684;&#x4EA7;&#x51FA;&#x7ED3;&#x679C;&#x7684;&#x2014;&#x2014;&#x751F;&#x6210;&#x4EC0;&#x4E48;&#x8282;&#x70B9;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x6709;&#x5BF9;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x89E3;&#x91CA;&#x6A21;&#x5757;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x4E86;&#x3002; &#x7ECF;&#x8FC7;&#x672C;&#x8282;&#x4E24;&#x8F6E;&#x7684;&#x7EC3;&#x4E60;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x6838;&#x5FC3;&#x5DE5;&#x4F5C;&#x5176;&#x5B9E;&#x5728;&#x4E66;&#x5199;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x8868;&#x4E0A;&#xFF0C;&#x6839;&#x636E;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x8868;&#x4E2D;&#x7684;&#x7EC8;&#x7ED3;&#x7B26;&#x5199;&#x51FA;&#x5BF9;&#x5E94;&#x6BCF;&#x4E2A;&#x7B26;&#x53F7;&#x7684;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#xFF1B;&#x6839;&#x636E;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x5199;&#x51FA;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#xFF0C;&#x8FD9;&#x51E0;&#x4E4E;&#x662F;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x518D;&#x6839;&#x636E;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x7684;&#x751F;&#x6210;&#x7ED3;&#x679C;&#xFF0C;&#x786E;&#x5B9A;&#x7528;&#x54EA;&#x4E9B;AST&#x8282;&#x70B9;&#x6765;&#x8868;&#x793A;&#xFF1B;&#x6700;&#x540E;&#x6839;&#x636E;&#x751F;&#x6210;&#x7684;AST&#x7C7B;&#x578B;&#x5199;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x89E3;&#x91CA;&#x6A21;&#x5757;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x89E3;&#x91CA;&#x5668;&#x4E86;&#x3002; &#x6784;&#x5EFA;&#x7B26;&#x53F7;&#x8868; &#x5728;Part11&#x4E4B;&#x524D;&#x7684;&#x7AE0;&#x8282;&#x5DF2;&#x7ECF;&#x5F15;&#x5165;&#x4E86;Interpreter::GLOBAL_SCOPE&#x7B26;&#x53F7;&#x8868;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x4EC5;&#x4EC5;&#x662F;&#x4E3A;&#x4E86;&#x8BB0;&#x5F55;&#x6BCF;&#x4E2A;&#x53D8;&#x91CF;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#xFF0C;&#x6784;&#x5EFA;&#x7B26;&#x53F7;&#x8868;&#x8FD8;&#x8981;&#x5C65;&#x884C;&#x5982;&#x4E0B;&#x804C;&#x8D23;&#xFF1A; &#x5F53;&#x4E3A;&#x53D8;&#x91CF;&#x8D4B;&#x503C;&#x65F6;&#xFF0C;&#x786E;&#x4FDD;&#x7C7B;&#x578B;&#x662F;&#x6B63;&#x786E;&#x7684; &#x786E;&#x4FDD;&#x53D8;&#x91CF;&#x5728;&#x4F7F;&#x7528;&#x524D;&#x88AB;&#x58F0;&#x660E; &#x672C;&#x6587;&#x5B9E;&#x73B0;&#x7684;&#x601D;&#x8DEF;&#x662F;&#x518D;&#x4E3A;AST&#x6784;&#x5EFA;&#x4E00;&#x4E2A;visitor&#xFF0C;&#x7C7B;&#x4F3C;&#x89E3;&#x91CA;&#x5668;&#x540C;&#x6837;&#x6267;&#x884C;&#x540E;&#x5E8F;&#x904D;&#x5386;&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x5728;&#x904D;&#x5386;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E3A;&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x521B;&#x5EFA;&#x7B26;&#x53F7;&#x8BB0;&#x5F55;&#xFF0C;&#x4E3A;&#x53D8;&#x91CF;&#x7684;&#x4F7F;&#x7528;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x5B58;&#x5728;&#x7B26;&#x53F7;&#x8BB0;&#x5F55;&#xFF0C;&#x4E3A;&#x53D8;&#x91CF;&#x7684;&#x8D4B;&#x503C;&#x68C0;&#x67E5;&#x7C7B;&#x578B;&#x662F;&#x5426;&#x5339;&#x914D;&#x3002;&#x8FD9;&#x6837;&#x65E0;&#x9700;&#x6539;&#x53D8;&#x5DF2;&#x6709;&#x903B;&#x8F91;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x65B0;&#x6A21;&#x5757;&#xFF0C;&#x5728;&#x89E3;&#x91CA;&#x8FD0;&#x884C;&#x524D;&#x6267;&#x884C;&#x8BBF;&#x95EE;&#x903B;&#x8F91;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x7B26;&#x53F7;&#x8DDF;&#x8E2A;&#x7684;&#x804C;&#x8D23;&#x3002; &#x6211;&#x4EEC;&#x4E3A;&#x8BE5;&#x7B26;&#x53F7;&#x8DDF;&#x8E2A;&#x5668;&#x53D6;&#x540D;&#x4E3A;SymbolTableBuilder&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647class SymbolTableBuilder(NodeVisitor): def __init__(self): self.symtab = SymbolTable() # &#x5BF9;&#x4E8E;&#x8FD0;&#x7B97;&#x7C7B;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x540E;&#x5E8F;&#x904D;&#x5386;&#x5373;&#x53EF; def visit_Block(self, node): for declaration in node.declarations: self.visit(declaration) self.visit(node.compound_statement) def visit_Program(self, node): ... def visit_BinOp(self, node): ... def visit_Num(self, node): ... def visit_UnaryOp(self, node): ... def visit_Compound(self, node): ... def visit_NoOp(self, node): ... def visit_VarDecl(self, node): &apos;&apos;&apos; &#x5BF9;&#x4E8E;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#xFF0C;&#x5728;symtab&#x4E2D;&#x521B;&#x5EFA;&#x4E00;&#x6761;VarSymbol&#x8BB0;&#x5F55; &apos;&apos;&apos; type_name = node.type_node.value type_symbol = self.symtab.lookup(type_name) var_name = node.var_node.value var_symbol = VarSymbol(var_name, type_symbol) self.symtab.define(var_symbol) def visit_Assign(self, node): &apos;&apos;&apos; &#x5BF9;&#x4E8E;&#x8D4B;&#x503C;&#x8BED;&#x53E5;&#xFF0C;&#x786E;&#x4FDD;symtab&#x4E2D;&#x80FD;&#x67E5;&#x5230;&#x5DE6;&#x503C;&#xFF0C;&#x5E76;&#x7EE7;&#x7EED;&#x8BBF;&#x95EE;&#x53F3;&#x503C; &apos;&apos;&apos; var_name = node.left.value var_symbol = self.symtab.lookup(var_name) if var_symbol is None: raise NameError(repr(var_name)) self.visit(node.right) def visit_Var(self, node): &apos;&apos;&apos; &#x5BF9;&#x4E8E;&#x53D6;&#x503C;&#x8BED;&#x53E5;&#xFF0C;&#x786E;&#x4FDD;symtab&#x4E2D;&#x80FD;&#x67E5;&#x5230;&#x8BE5;&#x53D8;&#x91CF; &apos;&apos;&apos; var_name = node.value var_symbol = self.symtab.lookup(var_name) if var_symbol is None: raise NameError(repr(var_name)) SymbolTableBuilder::symtab&#x7684;&#x7C7B;&#x578B;&#x4E3A;SymbolTable&#xFF0C;&#x5185;&#x90E8;&#x7EF4;&#x62A4;&#x7740;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#xFF0C;&#x5B57;&#x5178;&#x7684;&#x6570;&#x636E;&#x90E8;&#x5206;&#x4E3A;Symbol&#x7684;&#x5B50;&#x7C7B;&#xFF1A; 1234567891011121314class Symbol(object): def __init__(self, name, type=None): self.name = name self.type = typeclass VarSymbol(Symbol): def __init__(self, name, type): super(VarSymbol, self).__init__(name, type) ...class BuiltinTypeSymbol(Symbol): def __init__(self, name): super(BuiltinTypeSymbol, self).__init__(name) ... &#x5728;&#x4F7F;&#x7528;&#x65F6;&#xFF0C;&#x4F1A;&#x4E3A;&#x5185;&#x7F6E;&#x7C7B;&#x578B;&#x7B26;&#x53F7;&#x521B;&#x5EFA;&#x56FA;&#x5B9A;&#x7684;BuiltinTypeSymbol&#x53D8;&#x91CF;&#xFF0C;&#x4E3A;&#x53D8;&#x91CF;&#x521B;&#x5EFA;VarSymbol&#x53D8;&#x91CF;&#xFF1A; 1234int_type = BuiltinTypeSymbol(&apos;INTEGER&apos;)real_type = BuiltinTypeSymbol(&apos;REAL&apos;)var_x_symbol = VarSymbol(&apos;x&apos;, int_type)var_y_symbol = VarSymbol(&apos;y&apos;, real_type) &#x5728;&#x6700;&#x4E0A;&#x5C42;&#x903B;&#x8F91;&#x4E2D;&#xFF0C;&#x5B8C;&#x6210;&#x4E86;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x3001;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x4E4B;&#x540E;&#xFF0C;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x5B8C;&#x6210;&#x7B26;&#x53F7;&#x8DDF;&#x8E2A;&#xFF1A; 1234567891011def main(): ... lexer = Lexer(source_code) parser = Parser(lexer) tree = parser.parse() symtab_builder = SymbolTableBuilder() symtab_builder.visit(tree) # &#x6267;&#x884C;&#x7B26;&#x53F7;&#x8DDF;&#x8E2A; ... interpreter = Interpreter(tree) result = interpreter.interpret() ... &#x652F;&#x6301;&#x8FC7;&#x7A0B;&#x58F0;&#x660E; &#x5728;Part12&#x4E2D;&#x52A0;&#x5165;&#x5BF9;&#x8FC7;&#x7A0B;&#x7684;&#x652F;&#x6301;&#xFF0C;Pascal&#x4EE3;&#x7801;&#x7ED3;&#x6784;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837;&#xFF1A; 123456789101112131415PROGRAM Test;VAR a : INTEGER;PROCEDURE P1;BEGIN {P1}END; {P1}PROCEDURE P1A;BEGIN {P1A}END; {P1A}BEGIN {Test} a := 10;END. {Test} &#x4FEE;&#x6539;&#x8BED;&#x6CD5;&#x8868;&#x4E3A;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637program : PROGRAM variable SEMI block DOT block : declarations compound_statement declarations : VAR (variable_declaration SEMI) + | (PROCEDURE ID SEMI block SEMI)* # &#x6DFB;&#x52A0;PROCEDURE | emptyvariable_declaration : ID (COMMA ID)* COLON type_spec type_spec : INTEGERcompound_statement : BEGIN statement_list END statement_list : statement | statement SEMI statement_liststatement : compound_statement | assignment_statement | emptyassignment_statement : variable ASSIGN exprempty :expr : term ((PLUS |MINUS) term)*term : factor ((MUL | INTEGER_DIV | FLOAT_DIV) factor)*factor : PLUS factor | MINUS factor | INTEGER_CONST | REAL_CONST | LPAREN expr RPAREN | variablevariable : ID &#x5BF9;&#x5E94;&#x7684;&#x5728;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x4E2D;&#x6DFB;&#x52A0;&#x5BF9;PROCEDURE&#x5173;&#x952E;&#x8BCD;&#x7684;&#x89E3;&#x6790;&#xFF0C;&#x5728;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x4E2D;&#x6DFB;&#x52A0;&#x5BF9;&#x5E94;&#x7684;&#x89C4;&#x5219;&#xFF0C;&#x5728;&#x89E3;&#x91CA;&#x5668;&#x4E2D;&#x9047;&#x5230;PROCEDURE&#x7684;&#x58F0;&#x660E;&#x5219;&#x76F4;&#x63A5;&#x8DF3;&#x8FC7;&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5C31;&#x4E0D;&#x5199;&#x4E86;&#x3002; &#x8BED;&#x4E49;&#x5206;&#x6790; &#x5728;Part13&#x4E2D;&#x5F15;&#x5165;&#x4E86;&#x8BED;&#x4E49;&#x5206;&#x6790;&#xFF0C;&#x6587;&#x7AE0;&#x7ED9;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x4E0B;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#xFF1A;&#x5728;&#x5B8C;&#x6210;AST&#x6784;&#x5EFA;&#x540E;&#xFF0C;&#x57FA;&#x4E8E;&#x8BE5;&#x6811;&#x6267;&#x884C;&#x7684;&#x9519;&#x8BEF;&#x68C0;&#x67E5;&#x8FC7;&#x7A0B;&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x68C0;&#x67E5;&#x8BED;&#x6CD5;&#x6B63;&#x786E;&#x4F46;&#x8BED;&#x4E49;&#x9519;&#x8BEF;&#x7684;&#x70B9;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x6CA1;&#x6709;&#x58F0;&#x660E;&#x5C31;&#x662F;&#x7528;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#x7B49;&#x3002;&#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x8BED;&#x6CD5;&#x6B63;&#x786E;&#xFF0C;&#x8BED;&#x4E49;&#x9519;&#x8BEF;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 12345PROGRAM Main; VAR x :INTEGER;BEGIN x := x + y; {y&#x5728;&#x4F7F;&#x7528;&#x524D;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;}END &#x4E0D;&#x8FC7;&#x770B;Part13&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x5B9E;&#x548C;Part11&#x5DEE;&#x5F02;&#x4E0D;&#x5927;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x5B83;&#x628A;Part11&#x4E2D;&#x7684;SymbolTableBuilder&#x6539;&#x4E3A;&#x7B26;&#x5408;&#x6982;&#x5FF5;&#x7684;SemanticAnalyzer&#xFF0C;&#x5185;&#x90E8;&#x903B;&#x8F91;&#x505A;&#x4E86;&#x4E00;&#x4E9B;&#x5C0F;&#x4FEE;&#x8865;&#xFF0C;&#x6BD4;&#x5982;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#x2014;&#x2014;&#x5728;&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x65F6;&#x4E0B;&#x67E5;&#x770B;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x8BE5;&#x7B26;&#x53F7;&#x3002;&#x5982;&#x6B64;&#x800C;&#x5DF2;&#x3002; &#x5230;&#x6B64;&#xFF0C;&#x4E00;&#x4E2A;&#x89E3;&#x91CA;&#x5668;&#x7684;&#x5B8C;&#x6574;&#x8FC7;&#x7A0B;&#x5728;&#x6982;&#x5FF5;&#x4E0A;&#x5C31;&#x5448;&#x73B0;&#x5B8C;&#x4E86;&#xFF1A; &#x8BCD;&#x6CD5;&#x5206;&#x6790;&#xFF0C;&#x63D0;&#x53D6;&#x5408;&#x6CD5;&#x7684;&#x5355;&#x8BCD; &#x8BED;&#x6CD5;&#x5206;&#x6790;&#xFF0C;&#x6839;&#x636E;&#x8BED;&#x6CD5;&#x8868;&#x6784;&#x9020;AST &#x8BED;&#x4E49;&#x5206;&#x6790;&#xFF0C;&#x6839;&#x636E;AST&#x68C0;&#x67E5;&#x7B26;&#x5408;&#x8BED;&#x6CD5;&#x4F46;&#x8BED;&#x4E49;&#x65E0;&#x610F;&#x4E49;&#x7684;&#x9519;&#x8BEF; &#x89E3;&#x91CA;&#x6267;&#x884C; &#x589E;&#x5F3A;&#x7248;&#x8BED;&#x4E49;&#x5206;&#x6790; Part13&#x4E2D;&#x7684;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x8FD8;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x5F31;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x751A;&#x81F3;&#x4E0D;&#x5408;&#x57FA;&#x672C;&#x7684;&#x4F7F;&#x7528;&#x9700;&#x6C42;&#x3002;&#x56E0;&#x4E3A;&#x4ED6;&#x5728;&#x68C0;&#x67E5;&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x548C;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#x65F6;&#xFF0C;&#x6CA1;&#x6709;&#x751F;&#x547D;&#x671F;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x5D4C;&#x5957;&#xFF0C;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x8FC7;&#x7A0B;&#x7684;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x91CD;&#x540D;&#xFF0C;&#x57FA;&#x672C;&#x539F;&#x5219;&#x662F;&#xFF1A;1&#x3001;&#x5982;&#x679C;&#x5728;&#x672C;&#x5C42;&#x8FC7;&#x7A0B;&#x4E2D;&#x627E;&#x4E0D;&#x5230;&#x7684;&#x7B26;&#x53F7;&#xFF0C;&#x53EF;&#x4EE5;&#x5C42;&#x5C42;&#x5411;&#x4E0A;&#x641C;&#x7D22;&#xFF0C;&#x76F4;&#x5230;&#x547D;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x5230;&#x6700;&#x4E0A;&#x5C42;&#x90FD;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x9519;&#x8BEF;&#x3002;2&#x3001;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x7B26;&#x53F7;&#x5728;&#x591A;&#x5C42;&#x4E2D;&#x5747;&#x6709;&#x5B9A;&#x4E49;&#xFF0C;&#x53D6;&#x6700;&#x8FD1;&#x4E00;&#x5C42;&#x3002; Part14&#x4E2D;&#x7ED9;&#x51FA;&#x7684;&#x652F;&#x6301;&#x65B9;&#x6848;&#x662F;&#x91C7;&#x7528;ScopedSymbolTable&#x6808;&#xFF0C;&#x8FDB;&#x5165;&#x4E00;&#x5C42;&#x5C31;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;ScopedSymbolTable&#x5BF9;&#x8C61;&#xFF0C;&#x79BB;&#x5F00;&#x5F53;&#x524D;&#x5C42;&#x6B21;&#x540E;&#xFF0C;&#x9500;&#x6BC1;&#x5176;&#x5BF9;&#x5E94;&#x7684;ScopedSymbolTable&#x5BF9;&#x8C61;&#xFF0C;&#x5F53;&#x8BBF;&#x95EE;&#x7B26;&#x53F7;&#x65F6;&#xFF0C;&#x4ECE;&#x6808;&#x9876;&#x5411;&#x6808;&#x5E95;&#x4F9D;&#x6B21;&#x904D;&#x5386;&#x3002; &#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5C31;&#x4E0D;&#x5728;&#x8FD9;&#x5806;&#x4E86;&#x3002; &#x603B;&#x7ED3; &#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6781;&#x5177;&#x542F;&#x53D1;&#x6027;&#xFF0C;&#x5176;&#x5B9E;&#x4E3B;&#x9898;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x91CD;&#x8981;&#x3002;&#x6211;&#x76F8;&#x4FE1;&#x5728;&#x5927;&#x90E8;&#x5206;&#x9886;&#x57DF;&#xFF0C;&#x80CC;&#x540E;&#x90FD;&#x80FD;&#x4ECE;&#x4E1A;&#x52A1;&#x9700;&#x6C42;&#x63D0;&#x70BC;&#x51FA;&#x6570;&#x5B66;&#x6A21;&#x578B;&#xFF0C;&#x8FD9;&#x624D;&#x662F;&#x652F;&#x6491;&#x5176;&#x8BBE;&#x8BA1;&#x7684;&#x7406;&#x60F3;&#x67B6;&#x6784;&#x3002;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x4E5F;&#x4E0D;&#x8FC7;&#x662F;&#x5B9E;&#x73B0;&#x8BE5;&#x6A21;&#x578B;&#x7684;&#x624B;&#x6BB5;&#x3002;&#x5982;&#x679C;&#x6A21;&#x578B;&#x7684;&#x63D0;&#x70BC;&#x5DE5;&#x4F5C;&#x505A;&#x5F97;&#x4E0D;&#x901A;&#x900F;&#xFF0C;&#x54EA;&#x6015;&#x901A;&#x7BC7;&#x5904;&#x5904;&#x4F7F;&#x7528;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x4E5F;&#x5F88;&#x96BE;&#x8BA9;&#x4EE3;&#x7801;&#x7B80;&#x6D01;&#x8D77;&#x6765;&#x2014;&#x2014;&#x8FD9;&#x662F;&#x5F88;&#x591A;&#x4F4E;&#x9636;&#x7684;&#x8BBE;&#x8BA1;&#x6240;&#x72AF;&#x7684;&#x901A;&#x75C5;&#x3002; &#x597D;&#x7684;&#x8BBE;&#x8BA1;&#x662F;&#x8981;&#x5206;&#x5C42;&#x3001;&#x5206;&#x6A21;&#x5757;&#xFF0C;&#x4F46;&#x5206;&#x5C42;&#x5206;&#x6A21;&#x5757;&#x662F;&#x7406;&#x89E3;&#x4E86;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x62BD;&#x8C61;&#x51FA;&#x7B80;&#x5355;&#x89C4;&#x5219;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8BBE;&#x8BA1;&#x76EE;&#x6807;&#x3002;&#x4EE5;&#x672C;&#x6587;&#x4E3A;&#x4F8B;&#xFF0C;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x3001;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x3001;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x548C;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x662F;&#x57FA;&#x4E8E;&#x4E1A;&#x52A1;&#x7684;&#x7406;&#x89E3;&#x548C;&#x62BD;&#x8C61;&#x63D0;&#x70BC;&#x51FA;&#x7684;&#x9636;&#x6BB5;&#x5206;&#x5272;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x6700;&#x6700;&#x5173;&#x952E;&#x7684;&#x4E00;&#x6B65;&#x662F;&#x786E;&#x5B9A;&#x8BED;&#x8A00;&#x7684;&#x8BED;&#x6CD5;&#x8868;&#xFF0C;&#x4ECE;&#x8BED;&#x6CD5;&#x8868;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x6620;&#x5C04;&#x89C4;&#x5219;&#x786E;&#x5B9A;&#x540E;&#xFF0C;&#x5DE5;&#x7A0B;&#x7684;&#x96BE;&#x5EA6;&#x5C31;&#x786E;&#x5B9A;&#x4E86;&#x3002;&#x8BED;&#x6CD5;&#x8868;&#x5C31;&#x662F;&#x5BF9;&#x4E1A;&#x52A1;&#x7684;&#x683C;&#x5F0F;&#x5316;&#x89E3;&#x91CA;&#x3002; &#x8FD8;&#x6709;&#x5F88;&#x5173;&#x952E;&#x7684;&#x4E00;&#x6B65;&#x6587;&#x7AE0;&#x6CA1;&#x6709;&#x89E3;&#x91CA;&#x2014;&#x2014;&#x90A3;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;BNF&#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8BED;&#x6CD5;&#x8868;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x6620;&#x5C04;&#x89C4;&#x5219;&#x662F;&#x6709;&#x6548;&#x7684;&#xFF1F;&#x6211;&#x60F3;&#x8FD9;&#x5E94;&#x8BE5;&#x662F;&#x6587;&#x672B;&#x5217;&#x51FA;&#x7684;&#x53C2;&#x8003;&#x4E66;&#x76EE;&#x89E3;&#x91CA;&#x7684;&#x95EE;&#x9898;&#xFF1A; &#x300A;Language Implementation Patterns: Create Your Own Domain - Specific and General Programming Languages&#x300B; &#x300A;Engineering: A Compiler 2nd Edition&#x300B; &#x300A;Programming Language Pragmatics, Fourth Edition&#x300B; &#x300A;Compilers: Principles, Techniques, and Tools (2nd Edition)&#x300B; &#x300A;Writing Compilers and Interpreters: A Software Engineering Approach 3rd Edition&#x300B; &#x8BD5;&#x60F3;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7406;&#x8BBA;&#x4E3A;&#x57FA;&#x7840;&#xFF0C;&#x76F4;&#x63A5;&#x4ECE;0&#x5230;1&#x8FD0;&#x7528;&#x5DE5;&#x7A0B;&#x6280;&#x672F;&#x53BB;&#x751F;&#x5199;&#xFF0C;&#x54EA;&#x6015;&#x4E5F;&#x4F1A;&#x6709;&#x8FED;&#x4EE3;&#x6539;&#x8FDB;&#xFF0C;&#x6700;&#x7EC8;&#x4EA7;&#x51FA;&#x7684;&#x4EE3;&#x7801;&#xFF1A;1&#x3001;&#x6CA1;&#x6709;&#x6DF1;&#x5EA6;&#xFF0C;&#x7F3A;&#x5C11;&#x66F4;&#x9AD8;&#x4E00;&#x9636;&#x7684;&#x6539;&#x8FDB;&#x7A7A;&#x95F4;&#xFF1B;2&#x3001;&#x96BE;&#x514D;&#x51FA;&#x73B0;&#x4E00;&#x4E9B;tricky&#x548C;&#x8865;&#x4E01;&#x3002;&#x6211;&#x89C1;&#x8FC7;&#x7EF4;&#x62A4;&#x4E86;&#x5341;&#x5E74;&#x7684;&#x8FD9;&#x7C7B;&#x9879;&#x76EE;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x4EBA;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x60F3;&#x6CD5;&#x53E0;&#x52A0;&#x5728;&#x4E0A;&#x9762;&#xFF0C;&#x5F88;&#x591A;&#x4EE3;&#x7801;&#x4F60;&#x80FD;&#x8BFB;&#x61C2;&#x4ED6;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x5374;&#x65E0;&#x6CD5;&#x7406;&#x89E3;&#x5F53;&#x521D;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x505A;&#x3002;&#x4ECE;&#x7ED3;&#x679C;&#x6765;&#x770B;&#xFF0C;&#x5B83;&#x7684;&#x786E;&#x89E3;&#x51B3;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x51FA;&#x8272;&#xFF0C;&#x4F46;&#x662F;&#x7A0B;&#x5E8F;&#x5458;&#x505A;&#x7684;&#x5F88;&#x6CA1;&#x6709;&#x6210;&#x5C31;&#x611F;&#x3002;&#x56DE;&#x5230;&#x672C;&#x6587;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x6DF1;&#x523B;&#x7406;&#x89E3;&#x7F16;&#x8BD1;&#x539F;&#x7406;&#xFF0C;&#x624D;&#x80FD;&#x6210;&#x4E3A;&#x8FD9;&#x4E2A;&#x9886;&#x57DF;&#x7684;&#x4E13;&#x5BB6;&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x7406;&#x89E3;&#x7F16;&#x8BD1;&#x539F;&#x7406;&#x80CC;&#x540E;&#x66F4;&#x666E;&#x904D;&#x7684;&#x539F;&#x7406;&#xFF0C;&#x5E76;&#x5C1D;&#x8BD5;&#x5E94;&#x7528;&#x5230;&#x5176;&#x4ED6;&#x9886;&#x57DF;&#xFF0C;&#x624D;&#x80FD;&#x5728;&#x6269;&#x5BBD;&#x6280;&#x672F;&#x89C6;&#x91CE;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x8BA9;&#x6BCF;&#x4E00;&#x6B65;&#x8D70;&#x5F97;&#x66F4;&#x575A;&#x5B9E;&#x3002;&#x8FD9;&#x662F;&#x6211;&#x8BA4;&#x4E3A;&#x7A0B;&#x5E8F;&#x5458;&#x6210;&#x957F;&#x7684;&#x7406;&#x60F3;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x4E0D;&#x53EA;&#x662F;&#x5929;&#x5929;&#x63A5;&#x9700;&#x6C42;&#xFF0C;&#x628A;&#x5B83;&#x7FFB;&#x8BD1;&#x6210;&#x4EE3;&#x7801;&#x3002;]]></content>
      <categories>
        <category>编译器</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[编写编译器和解释器一]]></title>
    <url>%2F2018%2F06%2F18%2F2018%2F0618BuildASimpleInterpreter1%2F</url>
    <content type="text"><![CDATA[&#x4ECE; https://github.com/rspivak/lsbasi &#x770B;&#x5230;&#x4E86;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x5B83;&#x4E0D;&#x4EC5;&#x6DF1;&#x5165;&#x6D45;&#x51FA;&#x5730;&#x8BB2;&#x8FF0;&#x4E86;&#x600E;&#x4E48;&#x4ECE;&#x5934;&#x5199;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x5668;&#x3001;&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x4E0D;&#x5C11;&#x95EA;&#x5149;&#x7684;&#x89C2;&#x70B9;&#x503C;&#x5F97;&#x54C1;&#x5473;&#x3002; &#x6587;&#x7AE0;&#x7CFB;&#x5217;&#x5171;14&#x7BC7;&#xFF0C;&#x9996;&#x7BC7;&#x5F00;&#x5934;&#x5C31;&#x5F15;&#x5165;Steve Yegge&#x725B;&#x7684;&#x4E00;&#x53E5;&#x8BDD;&#x2014;&#x2014;&#x201C;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x77E5;&#x9053;&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x4F60;&#x5C31;&#x4E0D;&#x4F1A;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#x3002;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x80FD;100%&#x786E;&#x8BA4;&#x4F60;&#x6DF1;&#x523B;&#x7406;&#x89E3;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x591A;&#x534A;&#x662F;&#x4E0D;&#x7406;&#x89E3;&#x7684;&#x201D;&#x3002;&#x5173;&#x4E8E;Steve Yegge&#x53C8;&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x610F;&#x601D;&#x7684;&#x5927;&#x725B;&#xFF0C;&#x4ED6;&#x6709;&#x5F88;&#x591A;&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x88AB;&#x7FFB;&#x8BD1;&#x6210;&#x4E2D;&#x6587;&#x3002; &#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x5173;&#x6CE8;&#x5B83;&#xFF1F; &#x901A;&#x5E38;&#x5B66;&#x4E60;&#x4E00;&#x95E8;&#x6280;&#x80FD;&#x90FD;&#x4F1A;&#x88AB;&#x6559;&#x80B2;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5B66;&#x4E60;&#xFF0C;&#x800C;&#x6211;&#x4E00;&#x822C;&#x90FD;&#x4E0D;&#x770B;&#x8FD9;&#x7C7B;&#x9648;&#x8FF0;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x56E0;&#x4E3A;&#x6211;&#x5728;&#x5B66;&#x4E60;&#x4E4B;&#x524D;&#x5BF9;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5B66;&#x5DF2;&#x7ECF;&#x60F3;&#x5F97;&#x5F88;&#x6E05;&#x695A;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x8FD9;&#x7C7B;&#x63CF;&#x8FF0;&#x50CF;&#x62C9;&#x5BA2;&#x7684;&#x5E7F;&#x544A;&#x4E00;&#x6837;&#x6CA1;&#x5565;&#x65B0;&#x610F;&#x3002;&#x4F46;&#x5728;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x91CC;&#x5173;&#x4E8E;&#x201C;&#x4E3A;&#x4EC0;&#x4E48;&#x201D;&#x6211;&#x8FD8;&#x662F;&#x8BFB;&#x4E86;&#x4E24;&#x904D;&#xFF1A; &#x5199;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x9700;&#x8981;&#x7EC4;&#x5408;&#x4F7F;&#x7528;&#x5F88;&#x591A;&#x79CD;&#x6280;&#x672F;&#xFF0C;&#x8FD9;&#x4E9B;&#x6280;&#x672F;&#x5728;&#x5199;&#x4EFB;&#x4F55;&#x8F6F;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x662F;&#x6709;&#x7528;&#x7684;&#x3002;&#x8FD9;&#x6709;&#x52A9;&#x4E8E;&#x4F60;&#x63D0;&#x5347;&#x8FD9;&#x4E9B;&#x6280;&#x80FD;&#xFF0C;&#x5E76;&#x6210;&#x4E3A;&#x66F4;&#x725B;&#x903C;&#x7684;&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;&#x5E08;&#x3002; &#x5E2E;&#x52A9;&#x4F60;&#x6DF1;&#x523B;&#x7406;&#x89E3;&#x8BA1;&#x7B97;&#x673A;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#x3002;&#x7F16;&#x8BD1;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x5668;&#x5728;&#x5916;&#x90E8;&#x770B;&#x6765;&#x5C31;&#x50CF;&#x9B54;&#x672F;&#x4E00;&#x6837;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x4E0D;&#x5E94;&#x8BE5;&#x6EE1;&#x8DB3;&#x4E8E;&#x8FD9;&#x79CD;&#x5883;&#x754C;&#xFF0C;&#x800C;&#x5E94;&#x8BE5;&#x63ED;&#x5F00;&#x6784;&#x5EFA;&#x5B83;&#x4EEC;&#x7684;&#x795E;&#x79D8;&#x9762;&#x7EB1;&#xFF0C;&#x7406;&#x89E3;&#x5185;&#x90E8;&#x673A;&#x5236;&#x8BA9;&#x4E00;&#x5207;&#x5C3D;&#x5728;&#x638C;&#x63A7;&#x3002; &#x5982;&#x679C;&#x4F60;&#x8981;&#x521B;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x6216;&#x8005;&#x7279;&#x5B9A;&#x9886;&#x57DF;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x4F60;&#x5C31;&#x5FC5;&#x987B;&#x81EA;&#x5DF1;&#x5199;&#x89E3;&#x91CA;&#x5668;&#x548C;&#x7F16;&#x8BD1;&#x5668;&#x3002;&#x6700;&#x8FD1;&#x65B0;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x4E0D;&#x65AD;&#x6D8C;&#x73B0;&#xFF0C;Elixir, Go, Rust&#x7B49;&#x7B49;&#x3002; &#x7B2C;1&#x70B9;&#x662F;&#x6211;&#x5728;&#x8BFB;&#x5B8C;&#x5168;&#x90E8;&#x6587;&#x7AE0;&#x540E;&#x611F;&#x540C;&#x8EAB;&#x53D7;&#x7684;&#xFF0C;&#x672C;&#x6765;&#x4E0D;&#x6253;&#x7B97;&#x5728;&#x8FD9;&#x4E2A;&#x5C42;&#x9762;&#x82B1;&#x592A;&#x591A;&#x7CBE;&#x529B;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x5728;&#x4ECA;&#x5E74;&#x5B66;&#x4E60;&#x7684;&#x8DEF;&#x7EBF;&#x56FE;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF0C;&#x4E86;&#x89E3;&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;iOS&#x4E0B;&#x4F7F;&#x7528;OC&#x70ED;&#x66F4;&#x65B0;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x662F;&#x8BFB;&#x4E86;&#x8FD9;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x6587;&#x7AE0;&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x4EC5;&#x51B3;&#x5B9A;&#x518D;&#x6DF1;&#x5165;&#x7CBE;&#x8BFB;&#x4E00;&#x904D;&#xFF0C;&#x8FD8;&#x6709;&#x5FC5;&#x8981;&#x8DDF;&#x7740;&#x4E00;&#x8D77;&#x52A8;&#x624B;&#x73A9;&#x73A9;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x6BB5;&#x6709;&#x8DA3;&#x3001;&#x6709;&#x6599;&#x7684;&#x65C5;&#x7A0B;&#x3002; &#x7B2C;3&#x70B9;&#x542C;&#x8D77;&#x6765;&#x6709;&#x70B9;&#x7275;&#x5F3A;&#xFF0C;&#x5C3D;&#x7BA1;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x5C42;&#x51FA;&#x4E0D;&#x7A77;&#xFF0C;&#x4F46;&#x8FD9;&#x4E16;&#x754C;&#x4E0A;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8BBE;&#x8BA1;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x5E76;&#x4E14;&#x6709;&#x4EF7;&#x503C;&#x7684;&#x4ECD;&#x662F;&#x51E4;&#x6BDB;&#x9E9F;&#x89D2;&#x3002;&#x4F46;&#x6700;&#x8FD1;&#x8FD8;&#x771F;&#x662F;&#x9047;&#x5230;&#x4E86;&#x8FD9;&#x7C7B;&#x7684;&#x6311;&#x6218;&#x2014;&#x2014;&#x6211;&#x7684;&#x76EE;&#x6807;&#x4E0D;&#x662F;&#x8BBE;&#x8BA1;&#x4E00;&#x95E8;&#x88AB;&#x5E7F;&#x6CDB;&#x5E94;&#x7528;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x800C;&#x662F;&#x8981;&#x8BBE;&#x8BA1;&#x4E00;&#x4E2A;OC&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x4EE5;&#x652F;&#x6301;iOS&#x4E0B;&#x4EE3;&#x7801;&#x7684;&#x70ED;&#x66F4;&#x65B0;&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x5668;&#xFF1F; &#x7FFB;&#x8BD1;&#x5668;&#x548C;&#x89E3;&#x91CA;&#x5668;&#x7684;&#x4F5C;&#x7528;&#x90FD;&#x662F;&#x5C06;&#x9AD8;&#x7EA7;&#x8BED;&#x8A00;&#x5199;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x7FFB;&#x8BD1;&#x6210;&#x66F4;&#x4F4E;&#x7EA7;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x7F16;&#x8BD1;&#x5668;Compiler&#x76F4;&#x63A5;&#x5C06;&#x5B83;&#x7FFB;&#x8BD1;&#x6210;&#x673A;&#x5668;&#x8BED;&#x8A00;&#xFF0C;&#x800C;&#x89E3;&#x91CA;&#x5668;Interpreper&#x5219;&#x662F;&#x5C06;&#x5B83;&#x7FFB;&#x8BD1;&#x6210;&#x4ECB;&#x4E8E;&#x9AD8;&#x7EA7;&#x8BED;&#x8A00;&#x548C;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x7684;&#x4E2D;&#x95F4;&#x5F62;&#x5F0F;&#x3002;&#x53C2;&#x8003;&#x300A;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x8981;&#x7D20;&#x2014;&#x2014;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x73B0;&#x4EE3;&#x8BA1;&#x7B97;&#x673A;&#x300B;&#x7684;&#x63D2;&#x56FE;&#xFF1A; &#x56FE;&#x4E2D;&#x7684;&#x7F16;&#x8BD1;&#x5668;+&#x865A;&#x62DF;&#x673A;+&#x6C47;&#x7F16;&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x672C;&#x6587;&#x8BF4;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x56FE;&#x4E2D;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x672C;&#x6587;&#x4E2D;&#x7684;&#x89E3;&#x91CA;&#x5668;&#x3002; &#x89E3;&#x91CA;&#x5668;&#x5904;&#x7406;&#x4EE3;&#x7801;&#x7684;&#x5B8C;&#x6574;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x8BCD;&#x6CD5;&#x5206;&#x6790;lexical analyzer&#x662F;&#x5C06;&#x8F93;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x6D41;&#x5206;&#x5272;&#x6210;token&#xFF0C;&#x8FD9;&#x662F;&#x89E3;&#x91CA;&#x5176;&#x5904;&#x7406;&#x4EE3;&#x7801;&#x7684;&#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x5B83;&#x5C06;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x6D41;&#x8F6C;&#x6210;token&#x6D41;&#x3002; token&#x662F;&#x5177;&#x6709;&#x7C7B;&#x578B;&#x548C;&#x503C;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#x3002; &#x8BCD;&#x4F4D;lexeme&#x662F;&#x5F62;&#x6210;&#x4E00;&#x4E2A;token&#x7684;&#x5B57;&#x7B26;&#x5E8F;&#x5217;&#x3002; &#x4ECE;token&#x6D41;&#x4E2D;&#x67E5;&#x627E;&#x7B26;&#x5408;&#x9884;&#x671F;&#x7684;&#x8BED;&#x6CD5;&#x7ED3;&#x6784;&#x7684;&#x8FC7;&#x7A0B;&#x79F0;&#x4E3A;&#x89E3;&#x6790;parsing&#x4E5F;&#x79F0;&#x4E3A;&#x8BED;&#x6CD5;&#x5206;&#x6790;syntax analysis&#xFF0C;&#x6267;&#x884C;&#x89E3;&#x6790;&#x7684;&#x90E8;&#x5206;&#x79F0;&#x4E3A;&#x89E3;&#x6790;&#x5668;parser&#x4E5F;&#x79F0;&#x4E3A;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;syntax analyzer&#x3002; &#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668; &#x51FD;&#x6570;Interpreper::get_next_token()&#x627F;&#x62C5;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;lexical analyzer&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x6BCF;&#x6B21;&#x8C03;&#x7528;&#x4ECE;&#x8F93;&#x5165;&#x5B57;&#x7B26;&#x6D41;&#x4E2D;&#x89E3;&#x6790;&#x4E00;&#x4E2A;token&#x5E76;&#x8FD4;&#x56DE;&#xFF1A; &#x5728;Part1&#x4E2D;&#xFF0C;&#x4E3B;&#x903B;&#x8F91;&#x5199;&#x5728;&#x51FD;&#x6570;Interpreper::expr()&#x4E2D;&#xFF1A; Interpreper::get_next_token()&#x8D1F;&#x8D23;&#x89E3;&#x6790;&#x4E00;&#x4E2A;token&#xFF0C;Interpreper::eat(...)&#x8D1F;&#x8D23;&#x786E;&#x8BA4;&#x8BE5;token&#x662F;&#x5426;&#x7B26;&#x5408;&#x9884;&#x671F;&#xFF0C;&#x5E76;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B21;Interpreper::get_next_token()&#x3002; Interpreper::expr()&#x627F;&#x62C5;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;syntax analyzer&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x5B83;&#x5199;&#x6B7B;&#x4E86;&#x89E3;&#x6790;&#x7684;&#x987A;&#x5E8F;&#x662F;&#xFF1A;INTEGER - PLUS - INTEGER&#x2014;&#x2014;&#x8FD9;&#x5C31;&#x662F;&#x7B26;&#x5408;&#x9884;&#x671F;&#x7684;&#x8BED;&#x6CD5;&#x89C4;&#x8303;&#x3002;&#x5C06;get_next_token()&#x548C;eat(...)&#x5206;&#x5F00;&#x662F;&#x4E3A;&#x4E86;&#x5C06;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x548C;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5206;&#x79BB;&#x2014;&#x2014;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x53EA;&#x5173;&#x6CE8;&#x8F93;&#x5165;&#x4E32;&#x7684;&#x5408;&#x6CD5;&#x6027;&#xFF0C;&#x800C;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5219;&#x5173;&#x6CE8;token&#x6D41;&#x7684;&#x987A;&#x5E8F;&#x662F;&#x5426;&#x7B26;&#x5408;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839class Interpreter(object): ... def get_next_token(self): &apos;&apos;&apos; &#x53EA;&#x8D1F;&#x8D23;&#x89E3;&#x6790;&#x51FA;&#x4E00;&#x4E2A;&#x5408;&#x6CD5;&#x7684;Token&#x5B57;&#x4E32; &apos;&apos;&apos; ... if current_char.isdigit(): token = Token(INTEGER, int(current_char)) self.pos += 1 return token if current_char == &apos;+&apos;: token = Token(PLUS, current_char) self.pos += 1 return token ... def eat(self, token_type): &apos;&apos;&apos; &#x5982;&#x679C;dangqianToken&#x7B26;&#x5408;&#x9884;&#x671F;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x8BCD;&#x6CD5;&#x5206;&#x6790; &apos;&apos;&apos; ... if self.current_token.type == token_type: self.current_token = self.get_next_token() ... def expr(self): &apos;&apos;&apos; &#x4EE5;&#x6B64;&#x83B7;&#x53D6;&#xFF1A;INTEGER - PLUS - INTEGER&#xFF0C;&#x5B8C;&#x6210;&#x8BA1;&#x7B97; &apos;&apos;&apos; ... self.current_token = self.get_next_token() ... left = self.current_token self.eat(INTEGER) ... op = self.current_token self.eat(PLUS) ... right = self.current_token self.eat(INTEGER) ... result = left.value + right.value return result Part2 &#x5728;&#x7B2C;&#x4E8C;&#x7BC7;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x4E09;&#x4E2A;&#x529F;&#x80FD;&#xFF1A; &#x2460;&#x5904;&#x7406;&#x7A7A;&#x683C; &#x2461;&#x652F;&#x6301;&#x591A;&#x4F4D;&#x6570;&#x5B57; &#x2462;&#x652F;&#x6301;&#x51CF;&#x6CD5; &#x663E;&#x7136;&#x8FD9;&#x4E09;&#x90E8;&#x5206;&#x90FD;&#x4E0E;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x76F8;&#x5173;&#x3002;&#x5728;Interpreper::get_next_token()&#x8FC7;&#x7A0B;&#x4E2D;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x5F53;&#x524D;&#x7B26;&#x53F7;&#x662F;&#x7A7A;&#x683C;&#xFF0C;&#x5C31;&#x7EE7;&#x7EED;&#x5411;&#x540E;&#x89E3;&#x6790;&#xFF1B;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x662F;&#x6570;&#x5B57;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x5411;&#x540E;&#x89E3;&#x6790;&#xFF0C;&#x76F4;&#x5230;&#x975E;&#x6570;&#x5B57;&#xFF0C;&#x518D;&#x628A;&#x521A;&#x521A;&#x7F13;&#x5B58;&#x7684;&#x5B57;&#x7A9C;&#x8F6C;&#x6210;&#x6570;&#x503C;&#xFF1B;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x662F;&#x7B26;&#x53F7;-&#xFF0C;&#x5219;&#x8FD4;&#x56DE;Token&#x3002; 1234567891011121314151617181920212223242526def skip_whitespace(self): # &#x2460; while self.current_char is not None and self.current_char.isspace(): self.advance()def integer(self): # &#x2461;&#x5B83;&#x548C;&#x2460;&#x7684;&#x5B9E;&#x73B0;&#x975E;&#x5E38;&#x76F8;&#x4F3C; ... result = &apos;&apos; while self.current_char is not None and self.current_char.isdigit(): result += self.current_char self.advance() return int(result)def get_next_token(self): ... while self.current_char is not None: if self.current_char.isspace(): self.skip_whitespace() # &#x2460; continue if self.current_char.isdigit(): return Token(INTEGER, self.integer()) ... if self.current_char == &apos;-&apos;: # &#x2462; self.advance() return Token(MINUS, &apos;-&apos;) ... &#x6700;&#x540E;&#x5728;Interpreper::expr()&#x4E2D;&#x66F4;&#x65B0;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x903B;&#x8F91;&#xFF1A; 123456789101112131415161718192021def expr(self): ... self.current_token = self.get_next_token() ... left = self.current_token self.eat(INTEGER) ... op = self.current_token if op.type == PLUS: self.eat(PLUS) else: self.eat(MINUS) # &#x652F;&#x6301;&#x51CF;&#x53F7;&#x8FD0;&#x7B97; ... right = self.current_token self.eat(INTEGER) ... if op.type == PLUS: result = left.value + right.value else: result = left.value - right.value return result &#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668; &#x5B66;&#x4E60;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x65F6;&#x5DF2;&#x7ECF;&#x63A5;&#x89E6;&#x5230;&#x4E86;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;Interpreper::expr()&#xFF0C;&#x90A3;&#x662F;&#x4E00;&#x4E2A;&#x6781;&#x5176;&#x7B80;&#x964B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5B83;hard code&#x4E86;&#x201C;&#x6574;&#x578B;&#x6570; &#x2192; &#x52A0;/&#x51CF; &#x2192; &#x6574;&#x578B;&#x6570;&#x201D;&#x7684;&#x8BED;&#x6CD5;&#x903B;&#x8F91;&#x3002;&#x5728;&#x6587;&#x7AE0;&#x7684;Part3&#x5BF9;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x505A;&#x4E86;&#x6269;&#x5C55;&#xFF0C;&#x4F7F;&#x4E4B;&#x652F;&#x6301;&#x6CA1;&#x6709;&#x62EC;&#x53F7;&#x7684;&#x6574;&#x578B;&#x6570;&#x503C;&#x7684;&#x52A0;&#x51CF;&#x8FD0;&#x7B97;&#xFF1A; &#x7531;&#x4E8E;&#x53EA;&#x6D89;&#x53CA;&#x5230;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x4EE3;&#x7801;&#x4E0A;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x5373;&#x53EF;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x663E;&#x793A;&#x51FA;&#x4E86;&#x628A;&#x8BCD;&#x6CD5;&#x3001;&#x8BED;&#x6CD5;&#x5206;&#x5F00;&#x7684;&#x597D;&#x5904;&#x3002; 123456789101112131415161718192021def term(self): &apos;&apos;&apos; &#x53EA;&#x63A5;&#x53D7;INTEGER&#x4E00;&#x79CD;term &apos;&apos;&apos; token = self.current_token self.eat(INTEGER) return token.valuedef expr(self): ... self.current_token = self.get_next_token() result = self.term() while self.current_token.type in (PLUS, MINUS): token = self.current_token if token.type == PLUS: self.eat(PLUS) result = result + self.term() elif token.type == MINUS: self.eat(MINUS) result = result - self.term() return result &#x800C;&#x4E14;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x8BED;&#x6CD5;&#x56FE;&#x662F;&#x76F4;&#x63A5;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x975E;&#x5E38;&#x76F4;&#x89C2;&#x3002; &#x4E0A;&#x4E0B;&#x6587;&#x65E0;&#x5173;&#x6587;&#x6CD5;&#x548C;BNF&#x8868;&#x793A;&#x6CD5; &#x4E0A;&#x4E0B;&#x6587;&#x65E0;&#x5173;&#x8BED;&#x6CD5;context-free grammars&#x6216;BNF&#xFF08;Backus-Naur Form&#xFF09;&#x8868;&#x793A;&#x6CD5;&#x662F;&#x4E00;&#x5957;&#x7528;&#x6765;&#x8868;&#x793A;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x7684;&#x534F;&#x8BAE;&#xFF0C;&#x5F62;&#x5982;&#xFF1A; 12expr : factor((MUL|DIV) factor)*factor : INTEGER BNF&#x8868;&#x793A;&#x6CD5;&#x7684;&#x4F18;&#x70B9;&#x5728;&#x4E8E;&#xFF1A;&#x5B83;&#x66F4;&#x7D27;&#x51D1;&#xFF0C;&#x4E5F;&#x662F;&#x66F4;&#x6587;&#x6863;&#x5316;&#x7684;&#x8868;&#x8FF0;&#x65B9;&#x5F0F;&#xFF0C;&#x4ECE;&#x8BE5;&#x8868;&#x8FF0;&#x6CD5;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x8F6C;&#x6362;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x3002; &#x5982;&#x4E0A;&#x4F8B;&#x6240;&#x793A;&#xFF0C;&#x4E00;&#x4E2A;&#x8BED;&#x6CD5;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x89C4;&#x5219;&#x7EC4;&#x6210;&#x3002;&#x4E00;&#x6761;&#x89C4;&#x5219;&#x5192;&#x53F7;&#x5DE6;&#x7AEF;&#x7531;&#x4E00;&#x4E2A;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x7EC4;&#x6210;&#xFF0C;&#x79F0;&#x4E3A;&#x5934;&#x90E8;&#x6216;&#x5DE6;&#x4FA7;&#xFF0C;&#x5192;&#x53F7;&#x53F3;&#x7AEF;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x7EC8;&#x7ED3;&#x7B26;&#x6216;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x7EC4;&#x6210;&#xFF0C;&#x79F0;&#x4E3A;&#x4E3B;&#x4F53;&#x6216;&#x53F3;&#x4FA7;&#x3002; &#x4E0A;&#x4F8B;&#x4E2D;&#x50CF;MUL, DIV&#x548C;INTEGER&#x8FD9;&#x6837;&#x7684;&#x53D8;&#x91CF;&#x79F0;&#x4E3A;&#x7EC8;&#x7ED3;&#x7B26;&#xFF0C;&#x50CF;exp, factor&#x8FD9;&#x6837;&#x7684;&#x53D8;&#x91CF;&#x79F0;&#x4E3A;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x3002; &#x7B2C;&#x4E00;&#x6761;&#x89C4;&#x5219;&#x5DE6;&#x4FA7;&#x7684;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x79F0;&#x4E3A;&#x5F00;&#x59CB;&#x7B26;&#x53F7;&#xFF0C;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;&#x5F00;&#x59CB;&#x7B26;&#x53F7;&#x662F;expr&#x3002; &#x672C;&#x6587;&#x4F7F;&#x7528;&#x7684;BNF&#x8868;&#x793A;&#x6CD5;&#x662F;&#x4E00;&#x7C7B;&#x53D8;&#x79CD;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x542B;&#x4E49;&#x4E3A;&#xFF1A; |&#x8868;&#x793A;&#x6216; (...)&#x8868;&#x793A;&#x4E00;&#x7EC4;&#x7EC8;&#x7ED3;&#x7B26;&#x6216;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x7684;&#x7EC4;&#x5408; (...)*&#x8868;&#x793A;0&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x7EC4;&#x5408; &#x901A;&#x8FC7;&#x89E3;&#x91CA;&#x8BED;&#x6CD5;&#x5F62;&#x6210;&#x7684;&#x53E5;&#x5B50;&#x6765;&#x5B9A;&#x4E49;&#x4E00;&#x79CD;&#x8BED;&#x8A00;&#xFF0C;&#x89E3;&#x91CA;&#x7684;&#x6D41;&#x7A0B;&#x4E3A;&#xFF1A;&#x4ECE;&#x5F00;&#x59CB;&#x7B26;&#x53F7;&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;&#x53CD;&#x590D;&#x4F7F;&#x7528;&#x89C4;&#x5219;&#x4E3B;&#x4F53;&#x66FF;&#x6362;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#xFF0C;&#x76F4;&#x5230;&#x751F;&#x6210;&#x7684;&#x53E5;&#x5B50;&#x4EC5;&#x5305;&#x542B;&#x7EC8;&#x7ED3;&#x7B26;&#x3002;&#x8BE5;&#x53E5;&#x5B50;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x8BED;&#x6CD5;&#x6240;&#x5B9A;&#x4E49;&#x7684;&#x8BED;&#x8A00;&#x3002; &#x6309;&#x7167;&#x8FD9;&#x79CD;&#x89C4;&#x5219;&#xFF0C;&#x5982;&#x679C;&#x8BED;&#x6CD5;&#x65E0;&#x6CD5;&#x6D3E;&#x751F;&#x51FA;&#x67D0;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8BF4;&#x660E;&#x8BE5;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x7B26;&#x5408;&#x8BE5;&#x8BED;&#x6CD5;&#x3002; &#x4ECE;&#x8BED;&#x6CD5;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x6620;&#x5C04; &#x4EE5;&#x4E0B;&#x662F;&#x5C06;&#x8BED;&#x6CD5;&#x6620;&#x5C04;&#x6210;&#x4EE3;&#x7801;&#x7684;&#x89C4;&#x5219;&#xFF1A; &#x4E3A;&#x8BED;&#x6CD5;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6BCF;&#x6761;&#x89C4;&#x5219;R&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x51FD;&#x6570;R()&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x9075;&#x5FAA;&#x8BE5;&#x6761;&#x8BED;&#x6CD5;&#x89C4;&#x5219;&#x7684;&#x5B9A;&#x4E49;&#x3002;&#x4F8B;&#x5982;&#x5C06;expr : factor((MUL|DIV)factor)*&#x8F6C;&#x4E3A;&#xFF1A; 123def expr(self): self.factor() ... &#x6216;&#x89C4;&#x5219;&#xFF08;&#x5982;(a1|a2|...an)&#xFF09;&#x6620;&#x5C04;&#x4E3A;if-elif-else&#x8BED;&#x53E5;&#x3002;&#x4F8B;&#x5982;&#x5C06;(MUL|DIV)&#x8F6C;&#x4E3A;&#xFF1A; 12345token = self.current_tokenif token.type == MUL: ...elif token.type == DIV: ... (...)*&#x89C4;&#x5219;&#x6620;&#x5C04;&#x4E3A;while&#x8BED;&#x53E5;&#x3002;&#x4F8B;&#x5982;&#x5C06;((MUL|DIV)factor)*&#x8F6C;&#x4E3A;&#xFF1A; 12while self.current_token.type in (MUL, DIV): ... &#x5C06;&#x89C4;&#x5219;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;token&#x5F15;&#x7528;T&#x6620;&#x5C04;&#x4E3A;&#x4E00;&#x4E2A;eat(T)&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x3002;eat(T)&#x51FD;&#x6570;&#x786E;&#x8BA4;&#x5F53;&#x524D;token&#x7684;&#x7C7B;&#x578B;&#x662F;&#x5426;&#x4E3A;T&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5219;&#x7EE7;&#x7EED;&#x89E3;&#x6790;&#x4E0B;&#x4E00;&#x4E2A;token&#xFF0C;&#x5E76;&#x8D4B;&#x7ED9;current_token&#x3002;&#x4F8B;&#x5982;&#x5C06;INTEGER&#x8F6C;&#x4E3A;&#xFF1A; 1self.eat(INTEGER) &#x4E8E;&#x662F;&#x5BF9;&#x4E8E;&#x672C;&#x8282;&#x521D;&#x7ED9;&#x51FA;&#x7684;&#x8BED;&#x6CD5;&#x4F8B;&#x5B50;&#xFF1A; 12expr : factor((MUL|DIV) factor)*factor : INTEGER &#x8F6C;&#x6210;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#xFF1A; 12345678910111213def expr(self): self.factor() while self.current_token.type in (MUL, DIV): token = self.current_token if token.type == MUL: self.eat(MUL) self.factor() elif token.type == DIV: self.eat(DIV) self.factor()def factor(self): self.eat(INTEGER) Part4&#x7684;&#x4EE3;&#x7801;&#x7528;&#x4E8E;&#x89E3;&#x6790;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;&#x8BED;&#x6CD5;&#xFF0C;&#x5B83;&#x5C06;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x548C;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x7C7B;&#x6765;&#x5B9A;&#x4E49;&#xFF0C;&#x4E5F;&#x4F7F;&#x4E8C;&#x8005;&#x7684;&#x804C;&#x8D23;&#x66F4;&#x52A0;&#x660E;&#x6670;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960class Lexer(object): # &#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668; ... def advance(self): # &#x6B65;&#x8FDB;&#x4E00;&#x4E2A;&#x5B57;&#x7B26; ... def skip_whitespace(self): ... def integer(self): # &#x89E3;&#x6790;&#x4E00;&#x4E2A;&#x6574;&#x578B;&#x6570; ... def get_next_token(self): ... while self.current_char is not None: if self.current_char.isspace(): self.skip_whitespace() continue if self.current_char.isdigit(): return Token(INTEGER, self.integer()) if self.current_char == &apos;*&apos;: self.advance() return Token(MUL, &apos;*&apos;) if self.current_char == &apos;/&apos;: self.advance() return Token(DIV, &apos;/&apos;) ... return Token(EOF, None)class Interpreter(object): # &#x8BED;&#x6CD5;&#x5206;&#x6790;&#x5668; def __init__(self, lexer): ... def eat(self, token_type): ... if self.current_token.type == token_type: self.current_token = self.lexer.get_next_token() ... def factor(self): ... token = self.current_token self.eat(INTEGER) return token.value def expr(self): ... result = self.factor() while self.current_token.type in (MUL, DIV): token = self.current_token if token.type == MUL: self.eat(MUL) result = result * self.factor() elif token.type == DIV: self.eat(DIV) result = result / self.factor() return result &#x5176;&#x4E2D;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;Lexer&#x7684;&#x5B9E;&#x73B0;&#x548C;&#x524D;&#x9762;&#x7AE0;&#x8282;&#x6CA1;&#x4EC0;&#x4E48;&#x53D8;&#x5316;&#xFF1B;&#x4E3B;&#x8981;&#x662F;Interpeter::expr(...)&#x4F7F;&#x7528;&#x4E86;&#x6620;&#x5C04;&#x89C4;&#x5219;&#x3002; &#x8003;&#x8651;&#x8FD0;&#x7B97;&#x4F18;&#x5148;&#x7EA7; &#x4E58;&#x9664;&#x6CD5;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x9AD8;&#x4E8E;&#x52A0;&#x51CF;&#x6CD5;&#xFF0C;&#x600E;&#x4E48;&#x5728;&#x8BED;&#x6CD5;&#x4E2D;&#x4F53;&#x73B0;&#x51FA;&#x8BE5;&#x4F18;&#x5148;&#x7EA7;&#x5462;&#xFF1F;&#x53EF;&#x4EE5;&#x603B;&#x7ED3;&#x51FA;2&#x6761;&#x89C4;&#x5219;&#xFF1A; &#x5BF9;&#x6BCF;&#x4E00;&#x7EA7;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x6761;&#x89C4;&#x5219;&#xFF0C;&#x5DE6;&#x4FA7;&#x4E3A;&#x672C;&#x7EA7;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#xFF0C;&#x89C4;&#x5219;&#x4F53;&#x5305;&#x542B;&#x672C;&#x7EA7;&#x7684;&#x8FD0;&#x7B97;&#x548C;&#x66F4;&#x9AD8;&#x7EA7;&#x522B;&#x7684;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x3002; &#x4E3A;&#x6700;&#x57FA;&#x672C;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E00;&#x6761;&#x89C4;&#x5219;&#xFF0C;&#x5DE6;&#x4FA7;&#x4E3A;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#xFF0C;&#x53F3;&#x4FA7;&#x4E3A;&#x8BE5;&#x57FA;&#x672C;&#x5143;&#x7D20;&#xFF0C;&#x5982;INTEGER&#x3002;&#x4E8E;&#x662F;&#x5BF9;&#x4E8E;N&#x7EA7;&#x8FD0;&#x7B97;&#x5171;&#x6709;N+1&#x6761;&#x89C4;&#x5219;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EA7;&#x522B;&#x4E00;&#x6761;+&#x57FA;&#x672C;&#x5143;&#x7D20;&#x4E00;&#x6761;&#x3002; &#x5C06;&#x8FD9;&#x4E24;&#x6761;&#x89C4;&#x5219;&#x5E94;&#x7528;&#x4E8E;&#x52A0;&#x51CF;&#x4E58;&#x9664;&#x56DB;&#x5219;&#x8FD0;&#x7B97;&#xFF0C;&#x5B9A;&#x4E49;&#x5176;&#x8BED;&#x6CD5;&#x4E3A;&#xFF1A; 123expr : term((PLUS|MINUS)term)*term : factor((MUL|DIV)factor)*factor : INTEGER &#x4E8E;&#x662F;&#x5E94;&#x7528;&#x4E0A;&#x4E00;&#x8282;&#x7531;&#x8BED;&#x6CD5;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x6620;&#x5C04;&#x89C4;&#x5219;&#xFF0C;&#x8F6C;&#x6362;&#x4EE3;&#x7801;&#x4E3A;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859class Lexer(object): ... def get_next_token(self): ... while self.current_char is not None: if self.current_char.isspace(): self.skip_whitespace() continue if self.current_char.isdigit(): return Token(INTEGER, self.integer()) if self.current_char == &apos;+&apos;: self.advance() return Token(PLUS, &apos;+&apos;) if self.current_char == &apos;-&apos;: self.advance() return Token(MINUS, &apos;-&apos;) if self.current_char == &apos;*&apos;: self.advance() return Token(MUL, &apos;*&apos;) if self.current_char == &apos;/&apos;: self.advance() return Token(DIV, &apos;/&apos;) ...class Interpreter(object): ... def term(self): result = self.factor() while self.current_token.type in (MUL, DIV): token = self.current_token if token.type == MUL: self.eat(MUL) result = result * self.factor() elif token.type == DIV: self.eat(DIV) result = result / self.factor() return result def expr(self): result = self.term() while self.current_token.type in (PLUS, MINUS): token = self.current_token if token.type == PLUS: self.eat(PLUS) # 14 + 2 * result = result + self.term() elif token.type == MINUS: self.eat(MINUS) result = result - self.term() return result &#x4EE5;&#x4E0A;&#x662F;Part5&#x5F15;&#x5165;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x91CD;&#x70B9;&#x662F;Interpreter::term()&#x548C;Interpreter::expr()&#x7684;&#x53D8;&#x5316;&#x3002;&#x6709;&#x4E86;&#x6620;&#x5C04;&#x89C4;&#x5219;&#xFF0C;&#x4EE3;&#x7801;&#x5F88;&#x5BB9;&#x6613;&#x770B;&#x61C2;&#xFF1B;&#x5982;&#x679C;&#x629B;&#x5F00;&#x89C4;&#x5219;&#x76F4;&#x5954;&#x4EE3;&#x7801;&#xFF0C;&#x96BE;&#x5EA6;&#x5C06;&#x9AD8;&#x51FA;&#x4E00;&#x4E2A;&#x91CF;&#x7EA7;&#x3002; Part6&#x53EA;&#x662F;&#x5728;Part5&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x652F;&#x6301;&#x4E86;&#x62EC;&#x53F7;&#xFF0C;&#x8BED;&#x6CD5;&#x88AB;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A; 123expr : term((PLUS|MINUS)term)*term : factor((MUL|DIV)factor)*factor : INTEGER | LPAREN expr RPAREN &#x7EE7;&#x7EED;&#x5957;&#x7528;&#x516C;&#x5F0F;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x8BCD;&#x6CD5;&#x5206;&#x6790;&#x5668;&#x5BF9;&#x62EC;&#x53F7;Token&#x7684;&#x89E3;&#x6790;&#x548C;&#x8BED;&#x6CD5;&#x5206;&#x6790;&#x4E2D;factor&#x51FD;&#x6570;&#xFF1A; 1234567891011121314151617181920212223242526272829class Lexer(object): ... def get_next_token(self): ... while self.current_char is not None: ... if self.current_char == &apos;(&apos;: self.advance() return Token(LPAREN, &apos;(&apos;) if self.current_char == &apos;)&apos;: self.advance() return Token(RPAREN, &apos;)&apos;) ...class Interpreter(object): ... def factor(self): ... token = self.current_token if token.type == INTEGER: self.eat(INTEGER) return token.value elif token.type == LPAREN: # &#x5982;&#x679C;&#x9047;&#x5230;&#x5DE6;&#x62EC;&#x53F7; self.eat(LPAREN) result = self.expr() self.eat(RPAREN) return result ... &#x51E0;&#x4E4E;&#x4E0D;&#x9700;&#x8981;&#x601D;&#x8003;&#x3002; # &#x5C06;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x548C;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x5206;&#x79BB; &#x5728;Part7&#x4E4B;&#x524D;&#xFF0C;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x548C;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x4E00;&#x76F4;&#x662F;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x7684;&#x3002;&#x8FD9;&#x79CD;&#x89E3;&#x91CA;&#x5176;&#x88AB;&#x79F0;&#x4E3A;&#x8BED;&#x6CD5;&#x5BFC;&#x5411;&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x8FD9;&#x79CD;&#x89E3;&#x91CA;&#x5668;&#x5BF9;&#x6E90;&#x7801;&#x53EA;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x904D;&#x5386;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x5F97;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x5B83;&#x9002;&#x7528;&#x4E8E;&#x6BD4;&#x8F83;&#x57FA;&#x672C;&#x7684;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x7A0B;&#x5E8F;&#x3002;Part7&#x5F00;&#x59CB;&#x5C06;&#x4E24;&#x90E8;&#x5206;&#x5206;&#x79BB;&#x5F00;&#xFF0C;&#x7B2C;&#x4E00;&#x6B65;&#x5148;&#x6784;&#x5EFA;&#x51FA;&#x6E90;&#x7801;&#x7684;&#x4E2D;&#x95F4;&#x8868;&#x793A;&#x5F62;&#x5F0F;Intermediate representation (IR)&#xFF0C;&#x7B2C;&#x4E8C;&#x6B65;&#x518D;&#x5BF9;&#x7167;IR&#x6267;&#x884C;&#x3002;&#x8FD9;&#x65B9;&#x4FBF;&#x5E94;&#x5BF9;&#x66F4;&#x590D;&#x6742;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x5668;&#x8D1F;&#x8D23;&#x6784;&#x5EFA;IR&#xFF0C;&#x89E3;&#x91CA;&#x5668;&#x5219;&#x8D1F;&#x8D23;&#x6267;&#x884C;IR&#x3002; &#x901A;&#x8FC7;IR&#x5BF9;&#x6E90;&#x4EE3;&#x7801;&#x6784;&#x5EFA;&#x8D77;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x79F0;&#x4E3A;&#x62BD;&#x8C61;&#x8BED;&#x6CD5;&#x6811;abstract-syntax tree(AST)&#xFF0C;AST&#x7684;&#x6BCF;&#x4E2A;&#x975E;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x53F6;&#x5B50;&#x8282;&#x70B9;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x3002;&#x4F18;&#x5148;&#x7EA7;&#x8D8A;&#x9AD8;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x653E;&#x5728;AST&#x4E2D;&#x8D8A;&#x9760;&#x8FD1;&#x53F6;&#x5B50;&#x7684;&#x5C42;&#x7EA7;&#x3002;&#x4E0B;&#x56FE;&#x662F;&#x4E00;&#x4E2A;AST&#x7684;&#x793A;&#x4F8B;&#xFF1A; &#x548C;Part6&#x76F8;&#x6BD4;&#xFF0C;&#x4E3B;&#x8981;&#x53D8;&#x5316;&#x4E3A;&#xFF1A; &#x2460; &#x5C06;Interpreter&#x62C6;&#x5206;&#x4E3A;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x5668;Parser&#x548C;&#x89E3;&#x91CA;&#x5668;Interpreter &#x2461; &#x5728;Parser&#x4E2D;Parser::expr()&#x4FDD;&#x6301;&#x539F;&#x5148;&#x7684;&#x903B;&#x8F91;&#x6846;&#x67B6;&#xFF0C;&#x53EA;&#x662F;&#x5C06;&#x539F;&#x5148;&#x7684;&#x8BA1;&#x7B97;&#x64CD;&#x4F5C;&#x6539;&#x4E3A;&#x521B;&#x5EFA;AST&#x8282;&#x70B9; &#x2462; &#x5728;Parser&#x4E2D;&#x6309;&#x7167;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x6BCF;&#x4E2A;&#x975E;&#x7EC8;&#x7ED3;&#x7B26;&#x65F6;&#xFF0C;&#x539F;&#x5148;&#x7684;&#x8BA1;&#x7B97;&#x90FD;&#x6539;&#x4E3A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;AST&#x8282;&#x70B9; &#x2463; &#x5728;Interpreter&#x4E2D;&#xFF0C;&#x5B83;&#x7684;&#x4E3B;&#x903B;&#x8F91;&#x662F;Interpreter::interprepret()&#xFF0C;&#x8D1F;&#x8D23;&#x540E;&#x5E8F;&#x904D;&#x5386;AST&#xFF0C;&#x8BA1;&#x7B97;&#x7ED3;&#x679C; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081class AST(object): passclass BinOp(AST): def __init__(self, left, op, right): self.left = left self.token = self.op = op self.right = rightclass Num(AST): def __init__(self, token): self.token = token self.value = token.valueclass Parser(object): ... def term(self): &quot;&quot;&quot;term : factor ((MUL | DIV) factor)*&quot;&quot;&quot; node = self.factor() while self.current_token.type in (MUL, DIV): token = self.current_token if token.type == MUL: self.eat(MUL) elif token.type == DIV: self.eat(DIV) # &#x2462; &#x5C06;&#x539F;&#x5148;&#x8BA1;&#x7B97;&#x6539;&#x4E3A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;AST&#x8282;&#x70B9; node = BinOp(left=node, op=token, right=self.factor()) return node def expr(self): &quot;&quot;&quot; expr : term ((PLUS | MINUS) term)* term : factor ((MUL | DIV) factor)* factor : INTEGER | LPAREN expr RPAREN &quot;&quot;&quot; node = self.term() while self.current_token.type in (PLUS, MINUS): token = self.current_token if token.type == PLUS: self.eat(PLUS) elif token.type == MINUS: self.eat(MINUS) # &#x2462; &#x5C06;&#x539F;&#x5148;&#x8BA1;&#x7B97;&#x6539;&#x4E3A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;AST&#x8282;&#x70B9; node = BinOp(left=node, op=token, right=self.term()) return node def parse(self): node = self.expr() ...class NodeVisitor(object): def visit(self, node): method_name = &apos;visit_&apos; + type(node).__name__ visitor = getattr(self, method_name, self.generic_visit) return visitor(node) ...class Interpreter(NodeVisitor): def __init__(self, parser): self.parser = parser def visit_BinOp(self, node): # &#x2463; &#x540E;&#x5E8F;&#x904D;&#x5386;AST if node.op.type == PLUS: return self.visit(node.left) + self.visit(node.right) elif node.op.type == MINUS: return self.visit(node.left) - self.visit(node.right) elif node.op.type == MUL: return self.visit(node.left) * self.visit(node.right) elif node.op.type == DIV: return self.visit(node.left) / self.visit(node.right) def visit_Num(self, node): return node.value def interpret(self): tree = self.parser.parse() return self.visit(tree) &#x652F;&#x6301;&#x4E00;&#x5143;&#x64CD;&#x4F5C; &#x4E00;&#x5143;&#x64CD;&#x4F5C;&#x5305;&#x62EC;+/-&#x7B26;&#x53F7;&#xFF0C;&#x4E00;&#x5143;&#x64CD;&#x4F5C;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x9AD8;&#x4E8E;&#x4E8C;&#x5143;&#x64CD;&#x4F5C;&#x3002;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x524D;&#x9762;&#x53EF;&#x4EE5;&#x8DDF;&#x591A;&#x4E2A;&#x4E00;&#x5143;&#x7B26;&#x53F7;&#x4F8B;&#x5982;&#xFF1A; +-3 = +(-3) = -3 5--2 = 5 - (-2) = 7 &#x4E8E;&#x662F;&#x53EF;&#x5C06;&#x8BED;&#x6CD5;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A; 123expr : term ((PLUS | MINUS) term)*term : factor ((MUL | DIV) factor)*factor : (PLUS | MINUS)factor | INTEGER | LPAREN expr RPAREN &#x4E3A;factor&#x6DFB;&#x52A0;&#x4E86;(PLUS | MINUS)factor&#x3002; &#x6839;&#x636E;&#x4ECE;&#x8BED;&#x6CD5;&#x5230;&#x4EE3;&#x7801;&#x7684;&#x8F6C;&#x6362;&#x89C4;&#x5219;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x8BED;&#x6CD5;&#x89E3;&#x6790;&#x5668;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546...class UnaryOp(AST): def __init__(self, op, expr): self.token = self.op = op self.expr = exprclass Parser(object): ... def factor(self): &quot;&quot;&quot;factor : (PLUS | MINUS) factor | INTEGER | LPAREN expr RPAREN&quot;&quot;&quot; token = self.current_token if token.type == PLUS: # &#x6DFB;&#x52A0;&#x4E00;&#x5143;+&#x7684;&#x89E3;&#x6790; self.eat(PLUS) node = UnaryOp(token, self.factor()) return node elif token.type == MINUS: # &#x6DFB;&#x52A0;&#x4E00;&#x5143;-&#x7684;&#x89E3;&#x6790; self.eat(MINUS) node = UnaryOp(token, self.factor()) return node elif token.type == INTEGER: ... elif token.type == LPAREN: ... def term(self): ... def expr(self): &quot;&quot;&quot; &#x4E3B;&#x6846;&#x67B6;&#x4FDD;&#x6301;&#x4E0D;&#x53D8; expr : term ((PLUS | MINUS) term)* term : factor ((MUL | DIV) factor)* factor : (PLUS | MINUS) factor | INTEGER | LPAREN expr RPAREN &quot;&quot;&quot; node = self.term() while self.current_token.type in (PLUS, MINUS): token = self.current_token if token.type == PLUS: self.eat(PLUS) elif token.type == MINUS: self.eat(MINUS) node = BinOp(left=node, op=token, right=self.term()) return node &#x6CE8;&#x91CD;&#x5B66;&#x4E60;&#x539F;&#x7406; &#x5728;Part2&#x7684;&#x5F00;&#x5934;&#xFF0C;&#x4F5C;&#x8005;&#x5F15;&#x7528;&#x4E86;Burger &#x548C; Starbird&#x5728;&#x300A;The 5 Elements of Effective Thinking&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x4E2D;&#x8BB2;&#x8FF0;&#x7684;&#x4E00;&#x5219;&#x6545;&#x4E8B;&#x3002;&#x4EAB;&#x8A89;&#x4E16;&#x754C;&#x7684;&#x5C0F;&#x53F7;&#x6F14;&#x594F;&#x5BB6;Tony Plog&#x5728;&#x4E00;&#x6B21;&#x5927;&#x5E08;&#x73ED;&#x57F9;&#x8BAD;&#x4E2D;&#xFF0C;&#x8BA9;&#x5B66;&#x751F;&#x4EEC;&#x5148;&#x6F14;&#x594F;&#x4E00;&#x9996;&#x590D;&#x6742;&#x7684;&#x97F3;&#x4E50;&#x7247;&#x6BB5;&#xFF0C;&#x5B66;&#x751F;&#x4EEC;&#x6F14;&#x594F;&#x7684;&#x5F88;&#x597D;&#xFF1B;&#x4E4B;&#x540E;&#x518D;&#x8BA9;&#x4ED6;&#x4EEC;&#x6F14;&#x594F;&#x4E00;&#x6BB5;&#x975E;&#x5E38;&#x57FA;&#x672C;&#x7B80;&#x5355;&#x7684;&#x97F3;&#x4E50;&#xFF0C;&#x548C;&#x524D;&#x9762;&#x7684;&#x6F14;&#x594F;&#x76F8;&#x6BD4;&#x542C;&#x8D77;&#x6765;&#x663E;&#x5F97;&#x975E;&#x5E38;&#x5E7C;&#x7A1A;&#x3002;&#x6F14;&#x594F;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x8001;&#x5E08;&#x4E5F;&#x6F14;&#x594F;&#x4E86;&#x4E00;&#x904D;&#x540C;&#x6837;&#x7684;&#x4E50;&#x6BB5;&#xFF0C;&#x4F46;&#x662F;&#x8001;&#x5E08;&#x7684;&#x6F14;&#x594F;&#x5374;&#x542C;&#x4E0D;&#x51FA;&#x5E7C;&#x7A1A;&#x2014;&#x2014;&#x5DEE;&#x5F02;&#x662F;&#x660E;&#x663E;&#x7684;&#x3002;Tony&#x89E3;&#x91CA;&#x9053;&#xFF1A;&#x53EA;&#x6709;&#x638C;&#x63E1;&#x6F14;&#x594F;&#x7B80;&#x5355;&#x4E50;&#x53E5;&#x7684;&#x6280;&#x5DE7;&#xFF0C;&#x624D;&#x80FD;&#x5728;&#x6F14;&#x594F;&#x590D;&#x6742;&#x4E50;&#x53E5;&#x65F6;&#x66F4;&#x6709;&#x638C;&#x63A7;&#x529B;&#x3002;&#x8FD9;&#x5219;&#x6545;&#x4E8B;&#x5F88;&#x6709;&#x542F;&#x53D1;&#x6027;&#xFF1A;&#x8981;&#x57F9;&#x517B;&#x771F;&#x6B63;&#x7684;&#x6280;&#x827A;&#xFF0C;&#x5FC5;&#x987B;&#x6CE8;&#x91CD;&#x638C;&#x63E1;&#x7B80;&#x5355;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x3002;&#x6B63;&#x5982;&#x827E;&#x9ED8;&#x751F;&#x6240;&#x8BF4;&#xFF1A;&#x201C;&#x5982;&#x679C;&#x4F60;&#x53EA;&#x5B66;&#x4E60;&#x65B9;&#x6CD5;&#xFF0C;&#x4F60;&#x5C06;&#x88AB;&#x7ED1;&#x6B7B;&#x5230;&#x65B9;&#x6CD5;&#x4E0A;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5B66;&#x4E60;&#x539F;&#x7406;&#xFF0C;&#x4F60;&#x5C06;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x8BBE;&#x8BA1;&#x9002;&#x5408;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x201D; &#x6B63;&#x662F;&#x51FA;&#x4E8E;&#x8FD9;&#x6BB5;&#x6587;&#x5B57;&#xFF0C;&#x6211;&#x624D;&#x51B3;&#x5B9A;&#x6DF1;&#x5165;&#x6D88;&#x5316;&#x5305;&#x542B;&#x8FD9;14&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x7CFB;&#x5217;&#x3002;]]></content>
      <categories>
        <category>编译器</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从一个简单的例子体会TensorFlow的使用]]></title>
    <url>%2F2018%2F05%2F20%2F2018%2F0520GradientDescent%2F</url>
    <content type="text"><![CDATA[&#x4E0A;&#x4E86;&#x8FD9;&#x4E48;&#x591A;&#x8282;&#x8BFE;&#xFF0C;&#x5F53;&#x81EA;&#x5DF1;&#x52A8;&#x624B;&#x4F7F;&#x7528;TensorFlow&#x5199;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x8FD8;&#x662F;&#x89C9;&#x5F97;&#x6709;&#x70B9;&#x6655;&#xFF0C;&#x7ECF;&#x5E38;&#x5728;&#x4E00;&#x4E2A;&#x70B9;&#x4E0A;&#x8981;&#x7422;&#x78E8;&#x534A;&#x5929;&#x3002;&#x5B9E;&#x5728;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x601D;&#x60F3;&#x548C;&#x4F20;&#x7EDF;&#x7684;&#x7F16;&#x7A0B;&#x65B9;&#x5F0F;&#x5DEE;&#x522B;&#x592A;&#x5927;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x4E0D;&#x65AD;&#x5730;&#x8BAD;&#x7EC3;&#xFF0C;&#x5E76;&#x5728;&#x601D;&#x60F3;&#x548C;&#x4EE3;&#x7801;&#x95F4;&#x53BB;&#x505A;&#x78E8;&#x5408;&#xFF0C;&#x624D;&#x80FD;&#x8FBE;&#x5230;&#x81EA;&#x7136;&#x8FC7;&#x6E21;&#x3002;&#x672C;&#x8282;&#x5C31;&#x4ECE;&#x4E00;&#x4E2A;&#x6700;&#x7B80;&#x5355;&#x7684;Tensorflow&#x4EE3;&#x7801;&#x6765;&#x7406;&#x89E3;&#x5B83;&#x548C;&#x80CC;&#x540E;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x3002; &#x9898;&#x76EE; &#x7ED9;&#x5B9A;&#x82E5;&#x5E72;&#x4E2A;(x, y)&#x7684;&#x6563;&#x70B9;&#xFF0C;&#x5B83;&#x4EEC;&#x5927;&#x81F4;&#x7B26;&#x5408;y = w&#xB7;x + b&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x662F;&#x4F1A;&#x5728;&#x4E0A;&#x4E0B;&#x6D6E;&#x52A8;&#xFF0C;&#x901A;&#x8FC7;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6C42;&#x51FA;w&#x548C;b&#x7684;&#x503C;&#x3002; &#x751F;&#x6210;&#x6570;&#x636E; 1234567891011121314import numpy as npimport tensorflow as tfimport matplotlib.pyplot as pltdef createData(self, m=100, D=1): &apos;&apos;&apos; m &#x6837;&#x672C;&#x6570; D &#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x7EF4;&#x5EA6; &#x6784;&#x9020;&#x8BAD;&#x7EC3;&#x6570;&#x636E; y = 0.8x + 1.2 &#xB1; epsilon &apos;&apos;&apos; epsilon = 0.01 X = np.float32(np.random.rand(m, D)) Y = np.dot(0.8, X) + 1.2 + np.random.randn(m, D) * epsilon return X.T, Y.T X&#x662F;&#x751F;&#x6210;&#x4E86;m&#x4E2A;D&#x7EF4;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;np.random.rand(...)&#x751F;&#x6210;&#x7684;&#x968F;&#x673A;&#x6570;&#x662F;float64&#xFF0C;&#x800C;&#x5728;&#x968F;&#x540E;&#x901A;&#x8FC7;tf.random_uniform(...)&#x751F;&#x6210;&#x7684;&#x662F;float32&#xFF0C;&#x4E8C;&#x8005;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x8FD0;&#x7B97;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x505A;&#x4E86;&#x4E00;&#x4E2A;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x3002;X&#x4E3A;m&#xD7;D&#xFF0C;&#x4E3A;m&#xD7;1&#xFF0C;&#x5728;&#x8FD4;&#x56DE;&#x65F6;&#x9700;&#x8981;&#x505A;&#x8F6C;&#x7F6E;&#xFF1A; \(X=\begin{bmatrix}\mid&amp;\mid&amp;&amp;\mid\\x^{(1)}&amp;x^{(2)}&amp;\cdots&amp;x^{(m)}\\ \mid&amp;\mid&amp;&amp;\mid\end{bmatrix} , Y=[y^{(1)} y^{(2)} ... y^{(m)}] \;\) &#x628A;&#x6570;&#x636E;&#x663E;&#x793A;&#x5728;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#xFF0C; 12345678def tc1(self): &apos;&apos;&apos; &#x5728;&#x56FE;&#x8868;&#x4E2D;&#x663E;&#x793A;&#x6570;&#x636E; &apos;&apos;&apos; X, Y = self.createData() plt.ylabel(&apos;y&apos;) plt.xlabel(&apos;x&apos;) plt.scatter(X, Y, s=1, cmap=plt.cm.Spectral) plt.show() &#x5C55;&#x73B0;&#x5982;&#x4E0B;&#xFF1A; &#x89E3;&#x9898; 1234567891011121314151617181920212223def tc2(self): m = 100 # &#x6837;&#x672C;&#x6570; D = 1 # &#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x7EF4;&#x5EA6; xData, yData = self.createData(m=m, D=D) # &#x6784;&#x9020;&#x7EBF;&#x6027;&#x6A21;&#x578B; y = W&#xB7;x + b b = tf.Variable(tf.zeros([1])) W = tf.Variable(tf.random_uniform([1, D], minval=-1.0, maxval=1.0, dtype=tf.float32)) y = tf.matmul(W, xData) + b # &#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A;&#x6700;&#x5C0F;&#x5316;&#x65B9;&#x5DEE; loss = &#x2211;(y-&#x177;)&#xB2; loss = tf.reduce_mean(tf.square(y - yData)) optimizer = tf.train.GradientDescentOptimizer(0.5) # &#x3B1;=0.5 train = optimizer.minimize(loss) with tf.Session() as sess: sess.run(tf.initialize_all_variables()) for step in range(0, 101): sess.run(train) # &#x6267;&#x884C;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x8BAD;&#x7EC3;&#x6A21;&#x578B; if step % 20 == 0: evalW = sess.run(W) w = evalW[0][0] logging.info(&apos;03d: W = %.2f, b = %.2f&apos; % (step, w, sess.run(b))) &#x6700;&#x6838;&#x5FC3;&#x9700;&#x8981;&#x7422;&#x78E8;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x7B2C;20&#x884C;sess.run(train)&#xFF0C;&#x5B83;&#x6267;&#x884C;&#x7684;&#x662F;train = optimizer.minimize(loss)&#x3002;&#x6839;&#x636E;&#x300A;DeepLearning.ai&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x300B;&#x4E2D;&#x7684;&#x7406;&#x8BBA;&#xFF0C;&#x5B83;&#x6267;&#x884C;&#x4E86;&#x4E24;&#x6B65;&#xFF1A; &#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#xFF1A;&#x6839;&#x636E;W&#x548C;b&#x7684;&#x5F53;&#x524D;&#x503C;&#xFF0C;&#x5C06;X&#x4EE3;&#x5165;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF0C;&#x6C42;L &#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#xFF1A;&#x6C42;\(dW=\frac{dL}{dW}&#x548C;db=\frac{dL}{db}\)&#xFF0C;&#x5E76;&#x4EE3;&#x5165; \(W:=W-&#x3B1;&#xB7;dW&#x548C;b:=b-&#x3B1;&#xB7;db\)&#x66F4;&#x65B0;&#x8FD9;&#x4E24;&#x4E2A;&#x503C; &#x6267;&#x884C;&#x7684;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A; 12345613:46 0105 INFO 000: W = 0.26, b = 2.0713:46 0105 INFO 020: W = 0.60, b = 1.3113:46 0105 INFO 040: W = 0.75, b = 1.2313:46 0105 INFO 060: W = 0.78, b = 1.2113:46 0105 INFO 080: W = 0.79, b = 1.2013:46 0105 INFO 100: W = 0.80, b = 1.20 &#x9A8C;&#x8BC1;&#x7CBE;&#x5EA6; &#x5982;&#x679C;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x7B97;&#x51FA;W&#x548C;b&#x7684;&#x503C;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5C31;&#x6B64;&#x6253;&#x4F4F;&#x4E86;&#xFF0C;&#x800C;&#x901A;&#x5E38;&#x8FD8;&#x9700;&#x8981;&#x6839;&#x636E;&#x5F00;&#x53D1;&#x96C6;&#x6216;&#x6D4B;&#x8BD5;&#x96C6;&#x9A8C;&#x8BC1;&#x6A21;&#x578B;&#x7684;&#x7CBE;&#x5EA6;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x628A;&#x8BAD;&#x7EC3;&#x4EE3;&#x7801;&#x7A0D;&#x4F5C;&#x4FEE;&#x6539;&#xFF1A; 12345678910111213141516171819202122232425262728293031def tcMain(self): m = 100 # &#x6837;&#x672C;&#x6570; D = 1 # &#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x7EF4;&#x5EA6; xTrain, yTrain = self.createData(m=m, D=D) # &#x6784;&#x9020;&#x7EBF;&#x6027;&#x6A21;&#x578B; y = W&#xB7;x + b x = tf.placeholder(&quot;float&quot;, [1, None]) y = tf.placeholder(&quot;float&quot;, [1, None]) b = tf.Variable(tf.zeros([1])) W = tf.Variable(tf.random_uniform([1, D], minval=-1.0, maxval=1.0, dtype=tf.float32)) yHat = tf.matmul(W, x) + b # &#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A;&#x6700;&#x5C0F;&#x5316;&#x65B9;&#x5DEE; loss = &#x2211;(y-&#x177;)&#xB2; loss = tf.reduce_mean(tf.square(yHat - y)) optimizer = tf.train.GradientDescentOptimizer(0.5) # &#x3B1;=0.5 train = optimizer.minimize(loss) with tf.Session() as sess: sess.run(tf.initialize_all_variables()) for step in range(0, 101): sess.run(train, feed_dict={x:xTrain, y:yTrain}) # &#x6267;&#x884C;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x8BAD;&#x7EC3;&#x6A21;&#x578B; if step % 20 == 0: evalW = sess.run(W) w = evalW[0][0] logging.info(&apos;%03d: W = %.2f, b = %.2f&apos; % (step, w, sess.run(b))) # &#x8BC4;&#x4F30;&#x6A21;&#x578B; xDev, yDev = self.createData(m=10, D=D) correct_prediction = tf.reduce_mean(tf.abs(yHat - yDev)/yDev) accuracy = float(1 - sess.run(correct_prediction, feed_dict={x: xDev})) * 100. logging.info(&apos;accuracy=%.2f%%&apos; % accuracy) &#x4E24;&#x6BB5;&#x4EE3;&#x7801;&#x5728;&#x6784;&#x9020;&#x6A21;&#x578B;&#x65F6;&#x4F5C;&#x4E86;&#x4FEE;&#x6539;&#xFF1A;&#x524D;&#x8005;&#x76F4;&#x63A5;&#x5C06;&#x8BAD;&#x7EC3;&#x96C6;&#x4EE3;&#x5165;&#x6A21;&#x578B;&#x516C;&#x5F0F;&#xFF0C;&#x8FDB;&#x5165;&#x8BAD;&#x7EC3;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x628A;&#x6A21;&#x578B;&#x548C;&#x8BAD;&#x7EC3;&#x96C6;&#x7ED1;&#x6B7B;&#x4E86;&#x3002;&#x5C14;&#x540E;&#x5728;&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x518D;&#x6B21;&#x5C06;&#x5F00;&#x53D1;&#x96C6;&#x4EE3;&#x5165;&#x6A21;&#x578B;&#x516C;&#x5F0F;&#xFF0C;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x590D;&#x7528;&#x6027;&#xFF0C;&#x4E0A;&#x4F8B;&#x5C06;&#x6570;&#x636E;&#x96C6;&#x6539;&#x4E3A;&#x5360;&#x4F4D;&#x7B26;&#xFF0C;&#x5728;&#x8BAD;&#x7EC3;&#x548C;&#x9A8C;&#x8BC1;&#x7684;&#x65F6;&#x5019;&#x5206;&#x522B;&#x4F20;&#x5165;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x3002; &#x628A;&#x7CBE;&#x5EA6;&#x516C;&#x5F0F;&#x5B9A;&#x4E49;&#x4E3A;&#xFF1A;\(&#x2211;|(y-&#x177;)/y|\)&#x3002; &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 123456716:31 0107 INFO 000: W = 0.56, b = 2.0416:31 0107 INFO 020: W = 0.65, b = 1.2916:31 0107 INFO 040: W = 0.76, b = 1.2216:31 0107 INFO 060: W = 0.79, b = 1.2016:31 0107 INFO 080: W = 0.80, b = 1.2016:31 0107 INFO 100: W = 0.80, b = 1.2016:31 0114 INFO accuracy=99.29% &#x5C0F;&#x7ED3; &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x6CA1;&#x4EC0;&#x4E48;&#x5B9E;&#x8D28;&#x7528;&#x5904;&#xFF0C;&#x4F46;&#x662F;&#x6240;&#x6709;&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4EE3;&#x7801;&#x5927;&#x81F4;&#x90FD;&#x662F;&#x8FD9;&#x4E48;&#x4E2A;&#x7ED3;&#x6784;&#xFF0C;&#x5F53;&#x9047;&#x5230;&#x8D39;&#x89E3;&#x7684;&#x60C5;&#x51B5;&#x65F6;&#xFF0C;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x770B;&#x770B;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C;&#x80FD;&#x8FC5;&#x901F;&#x627E;&#x5230;&#x7406;&#x8BBA;&#x548C;&#x4EE3;&#x7801;&#x4E4B;&#x95F4;&#x7684;&#x6865;&#x3002; &#x672C;&#x8282;&#x4EE3;&#x7801;&#x53EF;&#x53C2;&#x89C1;&#xFF1A; https://github.com/palanceli/MachineLearningSample/blob/master/TensorFlow/s01baseGD.py&#x4E4B;LinearRegression &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x6765;&#x81EA;TensorFlow&#x4E2D;&#x6587;&#x793E;&#x533A;&#xFF0C;&#x539F;&#x672C;&#x5199;&#x5230;&#x8FD9;&#x5C31;&#x7ED3;&#x675F;&#x4E86;&#x3002;&#x4F46;&#x8BFB;&#x5B8C;TensorFlow&#x5B98;&#x7F51;&#x65B0;&#x624B;&#x5165;&#x95E8;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x53D1;&#x73B0;&#x6700;&#x65B0;&#x7248;&#x672C;&#x7684;TensorFlow&#x505A;&#x51FA;&#x4E86;&#x633A;&#x5927;&#x4FEE;&#x6539;&#xFF0C;&#x6709;&#x5FC5;&#x8981;&#x5BF9;&#x5C71;&#x9E22;&#x82B1;&#x7684;&#x4F8B;&#x5B50;&#x91CD;&#x65B0;&#x505A;&#x4E2A;&#x89E3;&#x8BFB;&#x3002; &#x9898;&#x76EE; &#x4ECE;&#x6846;&#x67B6;&#x6B65;&#x9AA4;&#x4E0A;&#x6CA1;&#x6709;&#x53D8;&#x5316;&#xFF0C;&#x5206;&#x4E3A;&#xFF1A;&#x63D0;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x6784;&#x5EFA;&#x6A21;&#x578B;&#xFF0C;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#xFF0C;&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x548C;&#x9884;&#x6D4B;&#x8FD9;&#x4E9B;&#x6B65;&#x9AA4;&#x3002;&#x4F46;&#x5728;&#x6BCF;&#x4E00;&#x6B65;&#x7684;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4E0A;&#x53D8;&#x5316;&#x5F88;&#x5927;&#x3002; &#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x662F;&#x505A;&#x4E00;&#x4E2A;&#x5206;&#x7C7B;&#x5668;&#xFF0C;&#x6837;&#x672C;&#x6570;&#x636E;&#x6807;&#x6CE8;&#x4E86;&#x82B1;&#x843C;&#x957F;&#x5EA6;&#x3001;&#x5BBD;&#x5EA6;&#x3001;&#x82B1;&#x74E3;&#x957F;&#x5EA6;&#x3001;&#x5BBD;&#x5EA6;&#x548C;&#x54C1;&#x79CD;&#xFF0C;&#x8981;&#x6C42;&#x4ECE;&#x82B1;&#x843C;&#x3001;&#x82B1;&#x74E3;&#x7684;&#x957F;&#x5BBD;&#x6570;&#x636E;&#x4E2D;&#x8BC6;&#x522B;&#x54C1;&#x79CD;&#x3002;&#x6837;&#x672C;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x4E3A;&#xFF1A; 123456120, 4, setosa, versicolor, virginica6.4, 2.8, 5.6, 2.2, 25.0, 2.3, 3.3, 1.0, 14.9, 2.5, 4.5, 1.7, 24.9, 3.1, 1.5, 0.1, 0&#x2026;&#x2026; &#x2026;&#x2026; &#x2026;&#x2026; &#x5176;&#x4E2D;&#x7B2C;&#x4E00;&#x884C;&#x8868;&#x793A;&#xFF1A; &#x672C;&#x6587;&#x4EF6;&#x5171;120&#x6761;&#x6570;&#x636E;&#xFF0C;4&#x4E2A;&#x7279;&#x5F81;&#xFF0C;3&#x4E2A;&#x54C1;&#x79CD;&#x7684;&#x540D;&#x79F0;&#x5206;&#x522B;&#x4E3A;setosa, versicolor, virginica &#x4E4B;&#x540E;&#x7684;120&#x884C;&#x5219;&#x662F;&#x82B1;&#x843C;&#x957F;&#x5EA6;&#xFF0C;&#x82B1;&#x843C;&#x5BBD;&#x5EA6;&#xFF0C;&#x82B1;&#x74E3;&#x957F;&#x5EA6;&#xFF0C;&#x82B1;&#x74E3;&#x5BBD;&#x5EA6;&#xFF0C;&#x54C1;&#x79CD; &#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x7684;&#x4EE3;&#x7801;&#x5728;https://github.com/tensorflow/models/samples/core/get_started/premade_estimator.py &#x4EE3;&#x7801; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152...# 1.&#x83B7;&#x53D6;&#x6570;&#x636E;(train_x, train_y), (test_x, test_y) = iris_data.load_data()# &#x5B58;&#x653E;&#x4E86;4&#x4E2A;&#x58F0;&#x660E;&#x4E3A;&#x6D6E;&#x70B9;&#x578B;&#x7684;&#x8868;&#x5934;my_feature_columns = []for key in train_x.keys(): my_feature_columns.append(tf.feature_column.numeric_column(key=key))# 2.&#x6784;&#x9020;&#x6A21;&#x578B;classifier = tf.estimator.DNNClassifier( feature_columns=my_feature_columns, # Two hidden layers of 10 nodes each. hidden_units=[10, 10], # The model must choose between 3 classes. n_classes=3)# 3.&#x8BAD;&#x7EC3;&#x6A21;&#x578B;classifier.train( input_fn=lambda:iris_data.train_input_fn(train_x, train_y, args.batch_size), steps=args.train_steps)# 4.&#x8BC4;&#x4F30;&#x6A21;&#x578B;eval_result = classifier.evaluate( input_fn=lambda:iris_data.eval_input_fn(test_x, test_y, args.batch_size))print(&apos;\nTest set accuracy: {accuracy:0.3f}\n&apos;.format(**eval_result))# Generate predictions from the modelexpected = [&apos;Setosa&apos;, &apos;Versicolor&apos;, &apos;Virginica&apos;]predict_x = { &apos;SepalLength&apos;: [5.1, 5.9, 6.9], &apos;SepalWidth&apos;: [3.3, 3.0, 3.1], &apos;PetalLength&apos;: [1.7, 4.2, 5.4], &apos;PetalWidth&apos;: [0.5, 1.5, 2.1],}# 5.&#x9884;&#x6D4B;&#x65B0;&#x6570;&#x636E;predictions = classifier.predict( input_fn=lambda:iris_data.eval_input_fn(predict_x, labels=None, batch_size=args.batch_size))template = (&apos;\nPrediction is &quot;{}&quot; ({:.1f}%), expected &quot;{}&quot;&apos;)for pred_dict, expec in zip(predictions, expected): class_id = pred_dict[&apos;class_ids&apos;][0] probability = pred_dict[&apos;probabilities&apos;][class_id] print(template.format(iris_data.SPECIES[class_id], 100 * probability, expec)) 1&#x83B7;&#x53D6;&#x6570;&#x636E; iris_data.load_data()&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4EE3;&#x8868;&#x5934;&#x7684;DataFrame&#xFF0C;&#x4EE5;train_x&#x4E3A;&#x4F8B;&#xFF0C;&#x6253;&#x5370;&#x51FA;&#x6765;&#x5982;&#x4E0B;&#xFF1A; 12345 SepalLength SepalWidth PetalLength PetalWidth0 6.4 2.8 5.6 2.21 5.0 2.3 3.3 1.02 4.9 2.5 4.5 1.7&#x2026;&#x2026; &#x2026;&#x2026; &#x2026;&#x2026; 2&#x6784;&#x9020;&#x6A21;&#x578B; &#x524D;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x6784;&#x9020;&#x6A21;&#x578B;&#x9636;&#x6BB5;&#x8FD8;&#x662F;&#x80FD;&#x770B;&#x51FA;&#x6A21;&#x578B;&#x7684;&#x7B97;&#x6CD5;&#x7ED3;&#x6784;&#xFF0C;&#x5305;&#x62EC;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3001;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x4F53;&#x4F1A;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x3002;&#x800C;&#x672C;&#x4F8B;&#x66F4;&#x591A;&#x662F;&#x4ECE;&#x6982;&#x5FF5;&#x7ED3;&#x6784;&#x4E0A;&#x6765;&#x6784;&#x9020;&#x6A21;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#x6A21;&#x578B;&#x7684;&#x7528;&#x9014;&#x662F;&#x5206;&#x7C7B;&#x5668;&#xFF0C;&#x7ED3;&#x6784;&#x662F;2&#x4E2A;&#x9690;&#x85CF;&#x5C42;&#x5747;&#x6709;10&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5206;&#x7C7B;&#x7ED3;&#x679C;&#x662F;&#x8981;&#x8BC6;&#x522B;3&#x4E2A;&#x7C7B;&#x578B;&#xFF1A; 123456classifier = tf.estimator.DNNClassifier( feature_columns=my_feature_columns, # Two hidden layers of 10 nodes each. hidden_units=[10, 10], # The model must choose between 3 classes. n_classes=3) &#x8FD9;&#x4E48;&#x7B80;&#x5355;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x672A;&#x6765;&#x4E00;&#x4E2A;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x90FD;&#x80FD;&#x62FC;&#x51D1;&#x4E00;&#x6BB5;&#x5206;&#x7C7B;&#x5668;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x53EA;&#x662F;&#x4ED6;&#x628A;&#x80CC;&#x540E;&#x7684;&#x539F;&#x7406;&#x3001;&#x7B97;&#x6CD5;&#x9690;&#x85CF;&#x66F4;&#x6DF1;&#x4E86;&#xFF0C;&#x5BF9;&#x4E8E;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x4E5F;&#x5C31;&#x66F4;&#x96BE;&#x4F53;&#x4F1A;&#x5230;&#x80CC;&#x540E;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x3002; 3&#x8BAD;&#x7EC3;&#x6A21;&#x578B; 1234classifier.train( input_fn=lambda:iris_data.train_input_fn(train_x, train_y, args.batch_size), steps=args.train_steps) input_fn&#x53EA;&#x662F;&#x8FD4;&#x56DE;&#x6D17;&#x724C;&#x3001;&#x91CD;&#x7EC4;&#x540E;&#x7684;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#xFF0C;&#x786E;&#x4FDD;&#x6570;&#x636E;&#x5145;&#x5206;&#x7684;&#x968F;&#x673A;&#x6027;&#xFF0C;&#x5E76;&#x4E0D;&#x53C2;&#x4E0E;&#x8BAD;&#x7EC3;&#x7B97;&#x6CD5;&#x3002; &#x6211;&#x5224;&#x65AD;&#x5728;&#x6307;&#x5B9A;tf.estimator.DNNClassifier&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x6A21;&#x578B;&#x7684;&#x8BA1;&#x7B97;&#x56FE;&#x8BBE;&#x8BA1;&#xFF0C;&#x5728;&#x8BAD;&#x7EC3;&#x9636;&#x6BB5;&#x5B8C;&#x6210;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x548C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x3002; 4&#x8BC4;&#x4F30;&#x6A21;&#x578B; 123eval_result = classifier.evaluate( input_fn=lambda:iris_data.eval_input_fn(test_x, test_y, args.batch_size)) &#x548C;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x7C7B;&#x4F3C;&#xFF0C;input_fn&#x4ECD;&#x7136;&#x53EA;&#x662F;&#x8FD4;&#x56DE;&#x7EC4;&#x7EC7;&#x6210;tf.data.Dataset&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x3002; 5&#x9884;&#x6D4B;&#x65B0;&#x6570;&#x636E; 12345# 5.&#x9884;&#x6D4B;&#x65B0;&#x6570;&#x636E;predictions = classifier.predict( input_fn=lambda:iris_data.eval_input_fn(predict_x, labels=None, batch_size=args.batch_size)) &#x548C;&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x628A;&#x5F85;&#x9884;&#x6D4B;&#x7684;&#x6570;&#x636E;&#x7EC4;&#x7EC7;&#x6210;tf&#x9700;&#x8981;&#x7684;Dataset &#x5C0F;&#x7ED3; &#x6574;&#x4E2A;&#x7F16;&#x7801;&#x8FC7;&#x7A0B;&#x53EA;&#x6D89;&#x53CA;&#x90E8;&#x5206;&#x8D85;&#x53C2;&#x6570;&#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x8F93;&#x5165;&#x3001;&#x8F93;&#x51FA;&#x6570;&#x636E;&#x7684;&#x7EC4;&#x7EC7;&#xFF0C;&#x8FDE;&#x53C2;&#x6570;&#x90FD;&#x4E0D;&#x7528;&#x5173;&#x5FC3;&#x4E86;&#xFF0C;&#x66F4;&#x4E0D;&#x7528;&#x63A5;&#x89E6;&#x5230;&#x7B97;&#x6CD5;&#x3002;Tensorflow&#x5411;&#x50BB;&#x74DC;&#x5316;&#x652F;&#x6301;&#x8FC8;&#x51FA;&#x4E00;&#x5927;&#x6B65;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Deep MNIST for Experts代码分析]]></title>
    <url>%2F2018%2F05%2F20%2F2018%2F0520MNISTForExperts%2F</url>
    <content type="text"><![CDATA[Deep MNIST for Experts&#x662F;TensorFlow Get Started&#x4E2D;HelloWorld&#x7EA7;&#x522B;&#x7684;&#x7684;&#x4F8B;&#x5B50;&#x3002;&#x5B83;&#x5206;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#xFF1A;MNIST For ML Beginners&#x548C;Deep MNIST for Experts&#x3002;&#x524D;&#x8005;&#x91C7;&#x7528;&#x6CA1;&#x6709;&#x9690;&#x85CF;&#x5C42;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x7ED3;&#x5408;&#x4E0A;&#x4E00;&#x7BC7;&#x7B14;&#x8BB0;&#x5F88;&#x5BB9;&#x6613;&#x770B;&#x660E;&#x767D;&#xFF1B;&#x540E;&#x8005;&#x4F7F;&#x7528;&#x4E86;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x672C;&#x8282;&#x91CD;&#x70B9;&#x5206;&#x6790;&#x5B83;&#x3002; &#x4EE3;&#x7801; &#x4EE3;&#x7801;&#x5728;&#x6846;&#x67B6;&#x4E0A;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x548C;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x4F8B;&#x5B50;&#x76F8;&#x6BD4;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x591A;&#x4E86;&#x51E0;&#x5C42;&#x8FD0;&#x7B97;&#x7684;&#x53E0;&#x52A0;&#xFF0C;&#x6211;&#x5C06;&#x5206;&#x6790;&#x63D2;&#x5165;&#x5230;&#x4EE3;&#x7801;&#x6CE8;&#x91CA;&#x4E2D;&#x4E86;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768def tcMain(self): mnist = self.loadData() sess = tf.InteractiveSession() x = tf.placeholder(&quot;float&quot;, shape=[None, 784]) # ?&#xD7;784 y_ = tf.placeholder(&quot;float&quot;, shape=[None, 10]) # ?&#xD7;10 # &#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#xFF1A;&#x5377;&#x79EF;&#x6838;&#x4E3A;5&#xD7;5&#xFF0C;&#x901A;&#x9053;&#x6570;&#x4E3A;1&#xFF0C;&#x5171;32&#x4E2A;&#x5377;&#x79EF;&#x6838; W_conv1 = self.weight_variable([5, 5, 1, 32]) b_conv1 = self.bias_variable([32]) # &#x4E3A;&#x4E86;&#x7528;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x628A;x&#x53D8;&#x6210;&#x4E00;&#x4E2A;4d&#x5411;&#x91CF;&#xFF0C;&#x5176;&#x7B2C;2&#x3001;&#x7B2C;3&#x7EF4;&#x4E3A;&#x5BBD;&#x3001;&#x9AD8;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x7EF4;&#x4E3A;&#x989C;&#x8272;&#x901A;&#x9053;&#x6570; # (&#x56E0;&#x4E3A;&#x662F;&#x7070;&#x5EA6;&#x56FE;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684;&#x901A;&#x9053;&#x6570;&#x4E3A;1&#xFF0C;&#x5982;&#x679C;&#x662F;rgb&#x5F69;&#x8272;&#x56FE;&#xFF0C;&#x5219;&#x4E3A;3)&#x3002; x_image = tf.reshape(x, [-1,28,28,1]) # &#x6784;&#x9020;&#x672C;&#x5C42;&#x8FD0;&#x7B97; h_conv1 = tf.nn.relu(self.conv2d(x_image, W_conv1) + b_conv1) h_pool1 = self.max_pool_2x2(h_conv1) # &#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF; W_conv2 = self.weight_variable([5, 5, 32, 64]) b_conv2 = self.bias_variable([64]) h_conv2 = tf.nn.relu(self.conv2d(h_pool1, W_conv2) + b_conv2) h_pool2 = self.max_pool_2x2(h_conv2) # &#x5168;&#x8FDE;&#x63A5;&#x5C42; W_fc1 = self.weight_variable([7 * 7 * 64, 1024]) b_fc1 = self.bias_variable([1024]) h_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64]) h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1) # Dropout # &#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x5728;&#x8F93;&#x51FA;&#x5C42;&#x4E4B;&#x524D;&#x52A0;&#x5165;dropout&#x3002;&#x7528;&#x4E00;&#x4E2A;placeholder&#x6765;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x7684; # &#x8F93;&#x51FA;&#x5728;dropout&#x4E2D;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x7684;&#x6982;&#x7387;&#x3002;&#x5728;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x542F;&#x7528;dropout&#xFF0C;&#x5728;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x4E2D;&#x5173;&#x95ED;dropout&#x3002; # TensorFlow&#x7684;tf.nn.dropout&#x64CD;&#x4F5C;&#x9664;&#x4E86;&#x53EF;&#x4EE5;&#x5C4F;&#x853D;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x5916;&#xFF0C;&#x8FD8;&#x4F1A;&#x81EA;&#x52A8;&#x5904;&#x7406;&#x795E;&#x7ECF;&#x5143;&#x8F93; # &#x51FA;&#x503C;&#x7684;scale&#x3002;&#x6240;&#x4EE5;&#x7528;dropout&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x8003;&#x8651;scale&#x3002; keep_prob = tf.placeholder(&quot;float&quot;) h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob) # &#x8F93;&#x51FA;&#x5C42; W_fc2 = self.weight_variable([1024, 10]) b_fc2 = self.bias_variable([10]) y_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2) cross_entropy = -tf.reduce_sum(y_*tf.log(y_conv)) train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy) correct_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1)) accuracy = tf.reduce_mean(tf.cast(correct_prediction, &quot;float&quot;)) sess.run(tf.initialize_all_variables()) train_writer = tf.summary.FileWriter(&apos;summary&apos;, sess.graph) # &#x8BAD;&#x7EC3;&#x7F51;&#x7EDC; for i in range(2000): batch = mnist.train.next_batch(50) if i%100 == 0: train_accuracy = accuracy.eval(feed_dict={ x:batch[0], y_: batch[1], keep_prob: 1.0}) train_accuracy = float(train_accuracy) * 100. logging.info(&quot;step %d, training accuracy: %.2f%%&quot;%(i, train_accuracy)) train_step.run(feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5}) # &#x9A8C;&#x8BC1;&#x6D4B;&#x8BD5;&#x96C6; test_accuracy = accuracy.eval(feed_dict={ x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}) test_accuracy = float(test_accuracy) * 100. logging.info(&quot;test accuracy: %.2f%%&quot;%test_accuracy) train_writer.close() &#x5728;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x4E2D;&#x91C7;&#x7528;&#x4E86;SAME&#x7B56;&#x7565;&#xFF1A; 12345def conv2d(self, x, W): &apos;&apos;&apos; &#x6784;&#x9020;&#x5377;&#x79EF;&#x5C42; &apos;&apos;&apos; # strides&#x7684;&#x542B;&#x4E49;&#x662F;[batch, height, width, channels]&#xFF0C;&#x6B64;&#x5904;&#x8868;&#x793A;&#x5411;&#x53F3;&#x3001;&#x5411;&#x4E0B;&#x7684;&#x6ED1;&#x52A8;&#x6B65;&#x957F;&#x5747;&#x4E3A;1 # &#x8BE5;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x524D;&#x540E;&#xFF0C;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#x4E0D;&#x53D8; return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding=&apos;SAME&apos;) &#x56E0;&#x6B64;&#x6BCF;&#x6B21;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x540E;&#xFF0C;&#x77E9;&#x9635;&#x7684;&#x5C3A;&#x5BF8;&#x4E0D;&#x53D8;&#xFF0C;&#x901A;&#x9053;&#x6570;&#x53D8;&#x6210;&#x5377;&#x79EF;&#x6838;&#x7684;&#x4E2A;&#x6570;&#x3002; &#x6C60;&#x5316;&#x7B56;&#x7565;&#x5219;&#x662F;&#x5148;&#x901A;&#x8FC7;padding&#xFF0C;&#x662F;&#x7684;&#x524D;&#x540E;&#x8FD0;&#x7B97;&#x7684;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#x4E0D;&#x53D8;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x8BBE;&#x5B9A;&#x4E86;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6BCF;&#x6B21;&#x6C60;&#x5316;&#x540E;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#x7F29;&#x51CF;&#x4E3A;&#x539F;&#x6765;&#x7684;&#x4E00;&#x534A;&#xFF1A; 12345def max_pool_2x2(self, x): &apos;&apos;&apos; &#x6784;&#x9020;&#x6C60;&#x5316;&#x5C42; &apos;&apos;&apos; # ksize&#x5B9A;&#x4E49;&#x6C60;&#x5316;&#x7A97;&#x53E3;&#x5927;&#x5C0F;&#xFF1A;2&#xD7;2&#xFF1B;strides&#x5B9A;&#x4E49;&#x6B65;&#x957F;&#xFF1A;2&#xD7;2 return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding=&apos;SAME&apos;) &#x65E0;&#x8BBA;&#x5377;&#x79EF;&#x8FD8;&#x662F;&#x6C60;&#x5316;&#xFF0C;DeepLearning.ai&#x7B14;&#x8BB0;&#xFF08;&#x4E5D;&#xFF09;&#x4E2D;&#x5F15;&#x5165;&#x7684;&#x5377;&#x79EF;&#x524D;&#x540E;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#x7684;&#x5173;&#x7CFB;&#x516C;&#x5F0F;&#xFF1A;\(n_{new} = \frac{n+2p-f}{s+1}\) &#xFF08;&#x5176;&#x4E2D;&#xFF1A;n&#x4E3A;&#x88AB;&#x8FD0;&#x7B97;&#x77E9;&#x9635;&#x957F;&#x3001;&#x5BBD;&#xFF0C;p&#x4E3A;padding&#x5BBD;&#x5EA6;&#xFF0C;f&#x4E3A;&#x5377;&#x79EF;&#x6838;&#x957F;&#x3001;&#x5BBD;&#xFF0C;s&#x4E3A;&#x6B65;&#x957F;&#xFF09; &#x4F3C;&#x4E4E;&#x7528;&#x4E0D;&#x5230;&#x4E86;&#x3002; &#x4ECE;&#x4EE3;&#x7801;&#x5F97;&#x5230;&#x7F51;&#x7EDC;&#x7684;&#x7ED3;&#x6784;&#x56FE;&#x5E76;&#x4E0D;&#x5BB9;&#x6613;&#xFF1A; &#x4F7F;&#x7528;tf.summary&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x56FE; &#x5728;&#x7F51;&#x7EDC;&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6709;&#x4E00;&#x884C;&#x4EE3;&#x7801; train_writer = tf.summary.FileWriter(&apos;summary&apos;, sess.graph) &#x8FD9;&#x662F;&#x7528;tf&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x3002;&#x5728;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x5728;./summary&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;NN&#x7F51;&#x7EDC;&#x4FE1;&#x606F;&#x3002;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A; 12$ tensorboard --logdir=./summaryTensorBoard 1.6.0 at http://palancedeMacBook-Pro.local:6006 (Press CTRL+C to quit) &#x7136;&#x540E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8F93;&#x5165;&#xFF1A;http://localhost:6006&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x56FE;&#xFF1A; &#x53C2;&#x8003;&#x8D44;&#x6599; Deep MNIST for Experts &#x6DF1;&#x5165;MNIST TensorBoard&#xFF1A;&#x53EF;&#x89C6;&#x5316;&#x5B66;&#x4E60; &#x672C;&#x8282;&#x4EE3;&#x7801;&#x53EF;&#x53C2;&#x89C1;&#xFF1A; https://github.com/palanceli/MachineLearningSample/blob/master/TensorFlow/s02mnist.py&#x4E4B;MnistAdv]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TensorFlow知识地图]]></title>
    <url>%2F2018%2F05%2F19%2F2018%2F0519TensorFlowRoadmap%2F</url>
    <content type="text"><![CDATA[TensorFlow&#x56FE;&#x63CF;&#x8FF0;&#x4E86;&#x4E00;&#x4E2A;&#x8BA1;&#x7B97;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x56FE;&#x5FC5;&#x987B;&#x5728;&#x4F1A;&#x8BDD;&#x91CC;&#x542F;&#x52A8;&#xFF0C;&#x4F1A;&#x8BDD;&#x5C06;&#x56FE;&#x7684;op&#xFF08;operation&#xFF09;&#x5206;&#x53D1;&#x5230;&#x8BF8;&#x5982;CPU&#x6216;GPU&#x4E4B;&#x7C7B;&#x7684;&#x8BBE;&#x5907;&#x4E0A;&#xFF0C;&#x540C;&#x65F6;&#x63D0;&#x4F9B;&#x6267;&#x884C;op&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x540E;&#xFF0C;&#x5C06;&#x4EA7;&#x751F;&#x7684;tensor&#x8FD4;&#x56DE;&#x3002;&#x5728;Python&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;tensor&#x662F;numpy ndarray&#x5BF9;&#x8C61;&#xFF1B;&#x5728;C&#x548C;C++&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;tensor&#x662F;tensorflow::Tensor&#x5B9E;&#x4F8B;&#x3002; &#x57FA;&#x672C;&#x6846;&#x67B6; TensorFlow&#x7A0B;&#x5E8F;&#x901A;&#x5E38;&#x88AB;&#x7EC4;&#x7EC7;&#x6210;&#x6784;&#x5EFA;&#x9636;&#x6BB5;&#x548C;&#x6267;&#x884C;&#x9636;&#x6BB5;&#x3002;&#x5728;&#x6784;&#x5EFA;&#x9636;&#x6BB5;&#xFF0C;op&#x7684;&#x6267;&#x884C;&#x6B65;&#x9AA4;&#x88AB;&#x63CF;&#x8FF0;&#x6210;&#x4E00;&#x4E2A;&#x56FE;&#xFF1B;&#x5728;&#x6267;&#x884C;&#x9636;&#x6BB5;&#xFF0C;&#x4F7F;&#x7528;&#x4F1A;&#x8BDD;&#x6267;&#x884C;&#x6267;&#x884C;&#x56FE;&#x4E2D;&#x7684;op&#x3002; 1234567891011121314import tensorflow as tfdef tc1(self): # TensorFlow&#x5E93;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x56FE;&#xFF0C;&#x6B64;&#x5904;&#x5C31;&#x4F7F;&#x7528;&#x4E86;&#x8BE5;&#x9ED8;&#x8BA4;&#x56FE;&#x3002; # 1. &#x521B;&#x5EFA;&#x4E09;&#x4E2A;&#x8282;&#x70B9;&#xFF1A;&#x4E24;&#x4E2A;constant() op&#xFF0C;&#x4E00;&#x4E2A;matmul() op matrix1 = tf.constant([[3., 3.]]) matrix2 = tf.constant([[2.], [2.]]) product = tf.matmul(matrix1, matrix2) # 2. &#x5728;&#x4F1A;&#x8BDD;&#x4E2D;&#x542F;&#x52A8;&#x56FE; sess = tf.Session() result = sess.run(product) logging.info(result) sess.close() &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 112:08 0025 INFO [[12.]] &#x4EA4;&#x4E92;&#x5F0F;&#x4F7F;&#x7528; &#x4E0A;&#x4F8B;&#x901A;&#x8FC7;&#x4E00;&#x884C;sess.run()&#x8C03;&#x7528;&#xFF0C;&#x5B8C;&#x6210;&#x56FE;&#x7684;&#x8BA1;&#x7B97;&#x3002;&#x5982;&#x679C;&#x8981;&#x67E5;&#x770B;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x4E2D;&#x67D0;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x53D6;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x4EA4;&#x4E92;&#x5F0F;&#x4F1A;&#x8BDD;InteractiveSession&#x6765;&#x66FF;&#x4EE3;Session&#xFF0C;&#x5E76;&#x4F7F;&#x7528;Tensor.eval()&#x83B7;&#x5F97;&#x53D6;&#x503C;&#xFF1A; 123456789101112import tensorflow as tfdef tc2(self): sess = tf.InteractiveSession() x = tf.Variable([1.0, 2.0]) a = tf.constant([3.0, 3.0]) x.initializer.run() logging.info(x.eval()) # &#x67E5;&#x770B;x&#x7684;&#x53D6;&#x503C; sub = tf.subtract(x, a) # &#x6267;&#x884C;&#x51CF;&#x6CD5; logging.info(sub.eval()) # &#x67E5;&#x770B;&#x7ED3;&#x679C;&#x53D6;&#x503C; &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 1213:01 0035 INFO [1. 2.]13:01 0038 INFO [-2. -1.] Tensor TensorFlow&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;tensor&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6765;&#x4EE3;&#x8868;&#x6240;&#x6709;&#x6570;&#x636E;&#x3002;&#x5728;&#x8BA1;&#x7B97;&#x56FE;&#x4E2D;&#xFF0C;&#x64CD;&#x4F5C;&#x95F4;&#x4F20;&#x9012;&#x7684;&#x6570;&#x636E;&#x90FD;&#x662F;tensor&#x3002;&#x53EF;&#x4EE5;&#x628A;TensorFlow tensor&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;n&#x7EF4;&#x7684;&#x6570;&#x7EC4;&#x6216;&#x5217;&#x8868;&#x3002; ## &#x53D8;&#x91CF; 123456789101112131415161718import tensorflow as tfdef tc3(self): state = tf.Variable(0, name=&quot;counter&quot;) # &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x6807;&#x91CF;0 one = tf.constant(1) new_value = tf.add(state, one) # &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x7D2F;&#x52A0;&#x7684;op update = tf.assign(state, new_value) # &#x542F;&#x52A8;&#x56FE;&#x540E;, &#x53D8;&#x91CF;&#x5FC5;&#x987B;&#x5148;&#x7ECF;&#x8FC7;&#x521D;&#x59CB;&#x5316; init_op = tf.initialize_all_variables() # &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x53D8;&#x91CF;&#x7684; op with tf.Session() as sess: sess.run(init_op) # &#x6267;&#x884C;&#x521D;&#x59CB;&#x5316; logging.info(sess.run(state)) # &#x6253;&#x5370;&#x521D;&#x503C; for _ in range(3): sess.run(update) logging.info(sess.run(state)) # &#x6253;&#x5370;&#x7D2F;&#x52A0;&#x503C; &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 123413:24 0051 INFO 013:24 0054 INFO 113:24 0054 INFO 213:24 0054 INFO 3 &#x5BF9;&#x4E8E;&#x64CD;&#x4F5C;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x6267;&#x884C;Session::run(op)&#x6765;&#x83B7;&#x53D6;&#x5176;&#x503C;&#x3002; feed_dict &#x5728;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#x6216;&#x5E38;&#x91CF;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x53EA;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5360;&#x4F4D;&#x7B26;&#xFF0C;&#x7B49;&#x5230;&#x6267;&#x884C;&#x65F6;&#x901A;&#x8FC7;feed_dict&#x5B57;&#x5178;&#x53D8;&#x91CF;&#x6307;&#x5B9A;&#x8FD9;&#x4E9B;&#x5360;&#x4F4D;&#x7B26;&#x7684;&#x5B9E;&#x9645;&#x503C;&#xFF1A; 12345678910import tensorflow as tfdef tc4(self): &apos;&apos;&apos; &#x5728;&#x8FD0;&#x884C;&#x65F6;&#x6307;&#x5B9A;&#x8F93;&#x5165;&#x5B9E;&#x53C2; &apos;&apos;&apos; input1 = tf.placeholder(tf.float32) # &#x5B9A;&#x4E49;&#x5360;&#x4F4D;&#x7B26;&#x5F62;&#x53C2; input2 = tf.placeholder(tf.float32) output = tf.multiply(input1, input2) with tf.Session() as sess: logging.info(sess.run([output], feed_dict={input1:[7.], input2:[2.]})) &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 113:31 0062 INFO [array([14.], dtype=float32)] &#x53C2;&#x8003; TensorFlow&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528; TensorFlow Tutorials]]></content>
      <categories>
        <category>知识地图</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pandas知识地图]]></title>
    <url>%2F2018%2F05%2F19%2F2018%2F0519PandasRoadmap%2F</url>
    <content type="text"><![CDATA[&#x57FA;&#x672C;&#x6982;&#x5FF5; pandas&#x4E2D;&#x7684;&#x4E3B;&#x8981;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x88AB;&#x5B9E;&#x73B0;&#x4E3A;&#x4EE5;&#x4E0B;&#x4E24;&#x7C7B;&#xFF1A; DataFrame&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x5B83;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x8868;&#x683C;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x884C;&#x548C;&#x5DF2;&#x547D;&#x540D;&#x7684;&#x5217;&#x3002; Series&#xFF0C;&#x5B83;&#x662F;&#x5355;&#x4E00;&#x5217;&#x3002; DataFrame &#x4E2D;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A; Series&#xFF0C;&#x6BCF;&#x4E2A; Series &#x5747;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x79F0;&#x3002; &#x6784;&#x9020;Series&#x548C;DataFrame 123456789import pandas as pddef tc1(self): &apos;&apos;&apos; &#x6784;&#x9020;&#x6570;&#x636E; &apos;&apos;&apos; city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) logging.info(df) &#x5982;&#x679C; Series &#x5728;&#x957F;&#x5EA6;&#x4E0A;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x7528;&#x7279;&#x6B8A;&#x7684; NA/NaN &#x503C;&#x586B;&#x5145;&#x7F3A;&#x5931;&#x7684;&#x503C;&#x3002;&#x4E0A;&#x4F8B;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 12345 City name Population0 San Francisco 8524691 San Jose 10157852 Sacramento 4851993 NaN 312342 &#x4ECE;&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x8F7D;&#x6570;&#x636E; 1234567891011import pandas as pddef tc2(self): &apos;&apos;&apos; &#x4ECE;&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x8F7D;&#x6570;&#x636E; &apos;&apos;&apos; city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) df.to_csv(&apos;temp.csv&apos;, sep=&apos;,&apos;, index=0) # &#x4E0D;&#x4FDD;&#x7559;&#x7D22;&#x5F15;&#x5217; df2 = pd.read_csv(&apos;temp.csv&apos;, sep=&apos;,&apos;) logging.info(df2) &#x7EDF;&#x8BA1; 12345678910import pandas as pddef tc3(self): &apos;&apos;&apos; &#x7EDF;&#x8BA1;&#x6570;&#x636E; &apos;&apos;&apos; city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) logging.info(df.describe()) # &#x7EDF;&#x8BA1;&#x6570;&#x636E; logging.info(df.head()) # &#x524D;&#x51E0;&#x884C;&#x6570;&#x636E; &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 123456789101112131415Populationcount 4.000000e+00 # &#x8BB0;&#x5F55;&#x7684;&#x6761;&#x6570;mean 6.664488e+05 # &#x5E73;&#x5747;&#x503C;std 3.239765e+05 # &#x6807;&#x51C6;&#x5DEE;min 3.123420e+05 # &#x6700;&#x5C0F;&#x503C;25% 4.419848e+05 # &#x56DB;&#x5206;&#x4F4D;&#x6570;50% 6.688340e+05 # &#x4E8C;&#x5206;&#x4F4D;&#x6570;75% 8.932980e+05 # 75%&#x5206;&#x4F4D;&#x6570;max 1.015785e+06 # &#x6700;&#x5927;&#x503C;City name Population0 San Francisco 8524691 San Jose 10157852 Sacramento 4851993 NaN 312342 &#x753B;&#x76F4;&#x65B9;&#x56FE; 123456789101112import pandas as pdimport matplotlibimport matplotlib.pyplot as pltdef tc4(self): &apos;&apos;&apos; &#x753B;&#x51FA;&#x76F4;&#x65B9;&#x56FE; &apos;&apos;&apos; city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) df.hist() plt.show() &#x663E;&#x793A;&#x76F4;&#x65B9;&#x56FE;&#x4E3A;&#xFF1A; &#x8BBF;&#x95EE;&#x6570;&#x636E; 123456789import pandas as pddef tc7(self): city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) logging.info(df[&apos;City name&apos;]) # &#x8BBF;&#x95EE;&#x4E00;&#x5217; logging.info(df[&apos;City name&apos;][1]) # &#x8BBF;&#x95EE;&#x6307;&#x5B9A;&#x5217;&#x7684;&#x6307;&#x5B9A;&#x884C; logging.info(df[0:2]) # &#x8BBF;&#x95EE;&#x524D;2&#x884C; &#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 1234567891011121318:06 0088 INFO 0 San Francisco1 San Jose2 Sacramento3 NaNName: City name, dtype: object18:06 0089 INFO San Jose18:06 0090 INFO City name Population0 San Francisco 8524691 San Jose 1015785 &#x63A7;&#x5236;&#x6570;&#x636E; &#x53EF;&#x4EE5;&#x5BF9;&#x4E00;&#x5217;&#x76F4;&#x63A5;&#x6267;&#x884C;&#x7B97;&#x672F;&#x8FD0;&#x7B97;&#x548C;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#xFF1A; 12345678import pandas as pddef tc8(self): city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) logging.info(population/1000) # &#x5C06;&#x6574;&#x5217;&#x9664;&#x4EE5;1000 logging.info(population.apply(lambda val: val &gt; 1000000)) # &#x8FD4;&#x56DE;&#x8BE5;&#x5217;&#x662F;&#x5426;&#x5927;&#x4E8E;100&#x4E07; &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 1234567891011121318:11 0096 INFO 0 852.4691 1015.7852 485.1993 312.342dtype: float6418:11 0097 INFO 0 False1 True2 False3 Falsedtype: bool &#x53EF;&#x4EE5;&#x5BF9;DataFrame&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x5217;&#xFF1A; 12345678910import pandas as pddef tc9(self): &apos;&apos;&apos; &#x63A7;&#x5236;&#x6570;&#x636E;&#xFF1A;&#x63D2;&#x5165;&#x5217; &apos;&apos;&apos; city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) df[&apos;Area square miles&apos;] = pd.Series([46.87, 176.53, 97.92]) # &#x63D2;&#x5165;&#x9762;&#x79EF;&#x5B57;&#x6BB5; df[&apos;Population density&apos;] = df[&apos;Population&apos;] / df[&apos;Area square miles&apos;] # &#x63D2;&#x5165;&#x5355;&#x4F4D;&#x9762;&#x79EF;&#x4EBA;&#x53E3;&#x5B57;&#x6BB5; logging.info(df) &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 123456718:16 0108 INFO City name Population Area square miles Population density0 San Francisco 852469 46.87 18187.9453811 San Jose 1015785 176.53 5754.1777602 Sacramento 485199 97.92 4955.0551473 NaN 312342 NaN NaN. &#x7D22;&#x5F15; Series&#x548C;DataFrame&#x5BF9;&#x8C61;&#x5747;&#x5B9A;&#x4E49;&#x4E86;index&#x5C5E;&#x6027;&#xFF0C;&#x8BE5;&#x5C5E;&#x6027;&#x4F1A;&#x5411;&#x6BCF;&#x884C;&#x8BB0;&#x5F55;&#x8D4B;&#x4E00;&#x4E2A;&#x6574;&#x578B;id&#x3002;&#x8C03;&#x7528;.reindex&#x53EF;&#x4EE5;&#x624B;&#x52A8;&#x91CD;&#x65B0;&#x4E3A;&#x5404;&#x884C;&#x5B9A;&#x4E49;index&#xFF1A; 123456789import pandas as pddef tc10(self): &apos;&apos;&apos; &#x7D22;&#x5F15; &apos;&apos;&apos; city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199, 312342]) df = pd.DataFrame({ &apos;City name&apos;: city_names, &apos;Population&apos;: population }) logging.info(df) logging.info(df.reindex([2, 1, 0, 3])) &#x5B83;&#x7684;&#x8F93;&#x51FA;&#x4E3A;&#xFF1A; 1234567891011121320:08 0115 INFO City name Population0 San Francisco 8524691 San Jose 10157852 Sacramento 4851993 NaN 31234220:08 0116 INFO City name Population2 Sacramento 4851991 San Jose 10157850 San Francisco 8524693 NaN 312342 &#x53C2;&#x8003; &#x5341;&#x5206;&#x949F;&#x641E;&#x5B9A; pandas pandas: powerful Python data analysis toolkit Pandas &#x7B80;&#x4ECB;]]></content>
      <categories>
        <category>知识地图</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Keras知识地图]]></title>
    <url>%2F2018%2F05%2F19%2F2018%2F0519KerasRoadmap%2F</url>
    <content type="text"><![CDATA[Keras&#x7684;&#x6838;&#x5FC3;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x201C;&#x6A21;&#x578B;&#x201D;&#xFF0C;&#x6A21;&#x578B;&#x662F;&#x4E00;&#x79CD;&#x7EC4;&#x7EC7;&#x7F51;&#x7EDC;&#x5C42;&#x7684;&#x65B9;&#x5F0F;&#x3002;Keras&#x4E2D;&#x4E3B;&#x8981;&#x7684;&#x6A21;&#x578B;&#x662F;Sequential&#x6A21;&#x578B;&#xFF0C;Sequential&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x7F51;&#x7EDC;&#x5C42;&#x6309;&#x987A;&#x5E8F;&#x6784;&#x6210;&#x7684;&#x6808;&#x3002; &#x57FA;&#x672C;&#x6846;&#x67B6; &#x5C06;&#x7F51;&#x7EDC;&#x5C42;&#x901A;&#x8FC7;.add()&#x5806;&#x53E0;&#x8D77;&#x6765;&#xFF0C;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x3002;&#x4E4B;&#x540E;&#x9700;&#x8981; &#x4F7F;&#x7528;.compile()&#x7F16;&#x8BD1;&#x6A21;&#x578B; &#x4F7F;&#x7528;.fit(...)&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC; &#x4F7F;&#x7528;.evalute(...)&#x8BC4;&#x4F30;&#x6A21;&#x578B; &#x4F7F;&#x7528;.predict(...)&#x9884;&#x6D4B;&#x65B0;&#x6570;&#x636E; 1234567891011121314151617181920212223242526272829303132333435import kerasfrom keras.layers import Dense, Dropout, Activationfrom keras.models import Sequentialfrom keras.optimizers import SGDimport numpy as npdef tc1(self): # &#x6784;&#x9020;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6; x_train = np.random.random((1000, 20)) y_train = keras.utils.to_categorical( np.random.randint(10, size=(1000, 1)), num_classes=10) x_test = np.random.random((100, 20)) y_test = keras.utils.to_categorical( np.random.randint(10, size=(100, 1)), num_classes=10) # 1.&#x6784;&#x5EFA;&#x6A21;&#x578B; model = Sequential() # &#x7B2C;&#x4E00;&#x4E2A;&#x9690;&#x85CF;&#x5C42;&#x5171;64&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x63A5;&#x6536;20&#x4E2A;&#x8F93;&#x5165;&#x8282;&#x70B9; model.add(Dense(64, activation=&apos;relu&apos;, input_dim=20)) model.add(Dropout(0.5)) model.add(Dense(64, activation=&apos;relu&apos;)) # &#x7B2C;&#x4E8C;&#x4E2A;&#x9690;&#x85CF;&#x5C42;64&#x4E2A;&#x8282;&#x70B9; model.add(Dropout(0.5)) model.add(Dense(10, activation=&apos;softmax&apos;)) # &#x8F93;&#x51FA;&#x5C42;10&#x4E2A;&#x8282;&#x70B9; # 2. &#x7F16;&#x8BD1;&#x6A21;&#x578B; sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True) model.compile(loss=&apos;categorical_crossentropy&apos;, optimizer=sgd, metrics=[&apos;accuracy&apos;]) # 3. &#x8BAD;&#x7EC3;&#x7F51;&#x7EDC; model.fit(x_train, y_train, epochs=20, batch_size=128) # 4. &#x8BC4;&#x4F30;&#x6A21;&#x578B; score = model.evaluate(x_test, y_test, batch_size=128) # 5. &#x9884;&#x6D4B;&#x65B0;&#x6570;&#x636E; result = model.predict( np.random.random((1, 20))) logging.info(result) # &#x6253;&#x5370;&#x7ED3;&#x679C; &#x53C2;&#x8003; &#x5FEB;&#x901F;&#x5F00;&#x59CB;&#xFF1A;30s&#x4E0A;&#x624B;Keras]]></content>
      <categories>
        <category>知识地图</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（十五）]]></title>
    <url>%2F2018%2F05%2F02%2F2018%2F0502DeepLearningAI17%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x300B;&#x7B2C;&#x4E09;&#x5468;&#x300A;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x548C;&#x6CE8;&#x610F;&#x529B;&#x673A;&#x5236;&#x300B;&#x3002; 3.1 &#x57FA;&#x7840;&#x6A21;&#x578B; &#x672C;&#x8282;&#x4EE5;&#x7FFB;&#x8BD1;&#x548C;&#x4E3A;&#x56FE;&#x7247;&#x751F;&#x6210;&#x6807;&#x9898;&#x4E3A;&#x4F8B;&#xFF0C;&#x4ED6;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x6765;&#x89E3;&#x51B3;&#x3002; &#x7FFB;&#x8BD1;&#x662F;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x5E94;&#x7528;&#x7684;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x573A;&#x666F;&#xFF0C;&#x5176;&#x4E2D;&#x524D;&#x4E00;&#x6BB5;RNN&#x79F0;&#x4E3A;&#x7F16;&#x7801;&#x7F51;&#x7EDC;&#xFF0C;&#x540E;&#x4E00;&#x6BB5;&#x79F0;&#x4E3A;&#x89E3;&#x7801;&#x7F51;&#x7EDC;&#xFF1A; &#x4E3A;&#x56FE;&#x7247;&#x751F;&#x6210;&#x6807;&#x9898;&#x548C;&#x7FFB;&#x8BD1;&#x5C31;&#x6210;&#x4E86;&#x540C;&#x4E00;&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x7FFB;&#x8BD1;&#x7684;&#x8F93;&#x5165;&#x662F;&#x4E00;&#x4E32;&#x5355;&#x8BCD;&#x7F16;&#x7801;&#xFF0C;&#x800C;&#x4E3A;&#x56FE;&#x7247;&#x751F;&#x6210;&#x6807;&#x9898;&#x7684;&#x8F93;&#x5165;&#x662F;&#x56FE;&#x7247;&#x7684;&#x6570;&#x636E;&#x6D41;&#xFF1A; # 3.2 &#x9009;&#x62E9;&#x6700;&#x53EF;&#x80FD;&#x7684;&#x53E5;&#x5B50; &#x672C;&#x8282;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x6BD4;&#x8F83;&#x4E86;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x548C;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#xFF1A; &#x8BED;&#x8A00;&#x6A21;&#x578B;&#x662F;&#x7528;&#x6765;&#x56DE;&#x7B54;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x662F;&#x591A;&#x5C11;&#xFF1B;&#x800C;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x5219;&#x662F;&#x56DE;&#x7B54;&#x5F53;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x5E8F;&#x5217;&#x540E;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x53E5;&#x5B50;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x662F;&#x591A;&#x5C11;&#x3002;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x7684;&#x7F51;&#x7EDC;&#x8F93;&#x5165;&#x4E3A;&#x7A7A;&#xFF0C;&#x800C;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x7684;&#x7F51;&#x7EDC;&#x8F93;&#x5165;&#x4E3A;&#x88AB;&#x7FFB;&#x8BD1;&#x7684;&#x53E5;&#x5B50;&#x3002;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x548C;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x7684;&#x89E3;&#x7801;&#x90E8;&#x5206;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#xFF0C;&#x56E0;&#x6B64;&#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x53C8;&#x79F0;&#x4E3A;&#x6761;&#x4EF6;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x3002; &#x673A;&#x5668;&#x7FFB;&#x8BD1;&#x7684;RNN&#x7F51;&#x7EDC;&#x8F93;&#x51FA;&#x53EF;&#x80FD;&#x8F93;&#x51FA;&#x591A;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x53D6;&#x6982;&#x7387;&#x6700;&#x5927;&#x7684;&#x53E5;&#x5B50;&#x4F5C;&#x4E3A;&#x6700;&#x4F73;&#x7FFB;&#x8BD1;&#xFF1A; &#x518D;&#x9009;&#x53D6;&#x7B56;&#x7565;&#x4E0A;&#xFF0C;&#x672C;&#x8282;&#x540E;&#x4E00;&#x534A;&#x89E3;&#x91CA;&#x4E86;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x91C7;&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5; &#x6240;&#x8C13;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x662F;&#x6307;&#x5728;&#x6BCF;&#x4E2A;&#x8F93;&#x51FA;&#x8282;&#x70B9;&#x177;^() &#x4E0A;&#x90FD;&#x53D6;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x662F;&#x7531;&#x8FD9;&#x4E9B;&#x6700;&#x5927;&#x503C;&#x8282;&#x70B9;&#x62FC;&#x51D1;&#x800C;&#x6210;&#x7684;&#x53E5;&#x5B50;&#x3002; &#x8FD9;&#x6837;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x672A;&#x5FC5;&#x662F;&#x6700;&#x4F73;&#x7FFB;&#x8BD1;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x7684;&#x662F;&#x53E5;&#x5B50;&#x6574;&#x4F53;&#x7684;&#x6982;&#x7387;&#x503C;&#x6700;&#x5927;&#x3002;&#x6BD4;&#x5982;&#x5728;&#x4E0A;&#x4F8B;&#x4E2D;&#xFF0C;Jane is&#x540E;&#x9762;&#x8DDF;&#x7740;going&#x7684;&#x6982;&#x7387;&#x8981;&#x6BD4;visiting&#x7684;&#x6982;&#x7387;&#x66F4;&#x9AD8;&#xFF0C;&#x800C;&#x663E;&#x7136;&#x7B2C;&#x4E00;&#x6761;&#x53E5;&#x5B50;&#x66F4;&#x7B80;&#x6D01;&#xFF0C;&#x662F;&#x66F4;&#x597D;&#x7684;&#x7FFB;&#x8BD1;&#x7ED3;&#x679C;&#x3002; &#x5047;&#x5982;&#x8BCD;&#x5178;&#x4E2D;&#x5355;&#x8BCD;&#x7684;&#x4E2A;&#x6570;&#x662F;10000&#xFF0C;&#x5047;&#x8BBE;&#x4E00;&#x4E2A;&#x7FFB;&#x8BD1;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#x8282;&#x70B9;&#x4E3A;10&#xFF0C;&#x8981;&#x53D6;&#x5F97;&#x53E5;&#x5B50;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x9700;&#x8981;&#x6BD4;&#x8F83;\(10000^{10}\) &#x4E2A;&#x53E5;&#x5B50;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x663E;&#x7136;&#x4E0D;&#x53EF;&#x63A5;&#x53D7;&#x3002;&#x4E0B;&#x4E00;&#x8282;&#x5C06;&#x4ECB;&#x7ECD;&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x3002; 3.3. &#x96C6;&#x675F;&#x641C;&#x7D22;&#x7B97;&#x6CD5; &#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7684;&#x526A;&#x679D;&#x64CD;&#x4F5C;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x88AB;&#x8FC7;&#x65E9;&#x51CF;&#x6389;&#xFF0C;&#x672C;&#x8282;&#x5F15;&#x5165;&#x96C6;&#x675F;&#x641C;&#x7D22;&#x7B97;&#x6CD5;&#x3002;&#x601D;&#x60F3;&#x5F88;&#x7B80;&#x5355;&#xFF1A;&#x59CB;&#x7EC8;&#x7F13;&#x5B58;TopN&#x7684;&#x6982;&#x7387;&#x6700;&#x5927;&#x89E3;&#xFF0C;&#x76F4;&#x5230;&#x6700;&#x540E;&#x53D6;&#x8FD9;N&#x4E2A;&#x89E3;&#x4E2D;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x3002;&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x6700;&#x4F18;&#x89E3;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x5B8C;&#x7F8E;&#x89E3;&#xFF0C;&#x5B83;&#x4ECD;&#x7136;&#x6709;&#x53EF;&#x80FD;&#x53EA;&#x662F;&#x4E2A;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x3002;&#x96C6;&#x675F;&#x641C;&#x7D22;&#x7B97;&#x6CD5;&#x53EA;&#x662F;&#x589E;&#x52A0;&#x4E86;&#x83B7;&#x5F97;&#x5B8C;&#x7F8E;&#x89E3;&#x7684;&#x6982;&#x7387;&#x3002;N&#x79F0;&#x4E3A;&#x96C6;&#x675F;&#x5BBD;&#x5EA6;&#x3002; &#x6309;&#x7167;&#x4E0A;&#x4E00;&#x8282;&#x4ECB;&#x7ECD;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x89E3;&#x7801;&#x7F51;&#x7EDC;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5B83;&#x8F93;&#x51FA;&#x5B57;&#x5178;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x53D6;TopN&#x4E2A;&#x4F5C;&#x4E3A;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x51FA;&#x548C;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x5165;&#x3002;&#x590D;&#x5236;N&#x4E2A;&#x7F51;&#x7EDC;&#xFF0C; &#x6C42;&#x89E3;&#x7801;&#x7F51;&#x7EDC;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x7EE7;&#x7EED;&#x53EA;&#x53D6;&#x6982;&#x7387;&#x6700;&#x9AD8;&#x7684;TopN&#x4E2A;&#x7F51;&#x7EDC;&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#xFF0C;&#x76F4;&#x5230;&#x5B8C;&#x6210;&#x6574;&#x4E2A;&#x7FFB;&#x8BD1;&#xFF1A; # 3.4 &#x6539;&#x8FDB;&#x5B9A;&#x5411;&#x641C;&#x7D22; &#x96C6;&#x675F;&#x641C;&#x7D22;&#x662F;&#x4E3A;&#x4E86;&#x6C42;&#x5F97;&#x6574;&#x53E5;&#x6982;&#x7387;&#x6700;&#x5927;&#x5316;&#x7684;&#x89E3;&#xFF0C;&#x5373;&#x4F7F;&#x8BE5;&#x6982;&#x7387;&#x6700;&#x5927;&#x5316; \(arg &#x3000;max \prod_{t=1}^{T_y} P(y^{&lt;t&gt;} |x, y^{&lt;1&gt;}, &#x2026;, y^{&lt;t&#x2212;1&gt;})\) &#x7531;&#x4E8E;&#x8BE5;&#x7B97;&#x5F0F;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x56E0;&#x5B50;&#x90FD;&#xFF1C;1&#xFF0C;&#x56E0;&#x6B64;&#x4E58;&#x79EF;&#x7ED3;&#x679C;&#x8FC7;&#x5C0F;&#xFF0C;&#x6211;&#x4EEC;&#x91C7;&#x7528;log&#x6C42;&#x5408;&#x6765;&#x505A;&#x4E2A;&#x7B49;&#x6548;&#xFF1A; \(arg &#x3000;max&#x2061; \prod_{t=1}^{T_y} log&#x2061; P(y^{&lt;t&gt;} |x, y^{&lt;1&gt;}, &#x2026;, y^{&lt;t&#x2212;1&gt;})\) &#x7EE7;&#x7EED;&#x89C2;&#x5BDF;&#x7B2C;&#x4E00;&#x4E2A;&#x6C42;&#x79EF;&#x7B97;&#x5F0F;&#xFF0C;&#x7531;&#x4E8E;&#x6BCF;&#x4E2A;&#x56E0;&#x5B50;&#x90FD;&#xFF1C;1&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x8BE5;&#x8BC4;&#x4EF7;&#x51FD;&#x6570;&#x4F1A;&#x503E;&#x5411;&#x4E8E;&#x5B57;&#x6570;&#x8F83;&#x77ED;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x56E0;&#x4E3A;&#x5B57;&#x6570;&#x8D8A;&#x77ED;&#xFF0C;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x8D8A;&#x5C11;&#xFF0C;&#x56E0;&#x5B50;&#x5C31;&#x8D8A;&#x5C11;&#x3002;&#x4E3A;&#x4E86;&#x5F25;&#x8865;&#x8BE5;&#x4E0D;&#x8DB3;&#xFF0C;&#x7ED9;&#x8BE5;&#x7B97;&#x5F0F;&#x518D;&#x9664;&#x4EE5;&#x7FFB;&#x8BD1;&#x7ED3;&#x679C;&#x7684;&#x5355;&#x8BCD;&#x6570;&#x91CF;&#xFF1A; \(\frac{1}{T_y^&#x3B1;} \sum_{t=1}^{T_y} log&#x2061; P(y^{&lt;t&gt;} |x, y^{&lt;1&gt;}, &#x2026;, y^{&lt;t&#x2212;1&gt;})\) &#x4EE5;&#x51CF;&#x5C11;&#x5BF9;&#x8F93;&#x51FA;&#x957F;&#x7684;&#x7ED3;&#x679C;&#x7684;&#x60E9;&#x7F5A;&#x3002;&#x5176;&#x4E2D;&#x3B1;&#x662F;&#x4E2A;&#x7ECF;&#x9A8C;&#x503C;&#xFF0C;&#x901A;&#x5E38;&#x53D6;0.7&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x6709;&#x70B9;&#x4E0D;&#x660E;&#x767D;&#xFF0C;&#x7ED3;&#x679C;&#x8D8A;&#x957F;&#xFF0C;\(\frac{1}{T_y^&#x3B1;}\) &#x4E0D;&#x5C31;&#x8D8A;&#x5C0F;&#x5417;&#xFF1F;&#x8FD9;&#x663E;&#x7136;&#x52A0;&#x5927;&#x4E86;&#x5BF9;&#x8F93;&#x51FA;&#x957F;&#x7684;&#x7ED3;&#x679C;&#x7684;&#x60E9;&#x7F5A;&#x5440;&#xFF1F; &#x672C;&#x8282;&#x6700;&#x540E;&#x8BA8;&#x8BBA;&#x9009;&#x53D6;&#x96C6;&#x675F;&#x5BBD;&#x5EA6;B&#x7684;&#x539F;&#x5219;&#xFF1A;&#x663E;&#x7136;B&#x8D8A;&#x5927;&#xFF0C;&#x7ED3;&#x679C;&#x8D8A;&#x7CBE;&#x786E;&#xFF0C;&#x4F46;&#x65F6;&#x7A7A;&#x6D88;&#x8017;&#x4E5F;&#x5C31;&#x8D8A;&#x5927;&#xFF0C;&#x8FD0;&#x7B97;&#x8D8A;&#x6162;&#xFF1B;B&#x8D8A;&#x5C0F;&#xFF0C;&#x7ED3;&#x679C;&#x5C31;&#x53EF;&#x80FD;&#x8D8A;&#x5DEE;&#xFF0C;&#x4F46;&#x65F6;&#x7A7A;&#x6D88;&#x8017;&#x8D8A;&#x5C0F;&#xFF0C;&#x8FD0;&#x7B97;&#x8D8A;&#x5FEB;&#xFF1B;&#x5F53;B=1&#x5C31;&#x9000;&#x5316;&#x5230;&#x4E86;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x3002;&#x901A;&#x5E38;&#x5728;&#x4EA7;&#x54C1;&#x7684;&#x5B9E;&#x9645;&#x7814;&#x53D1;&#x4E2D;&#xFF0C;&#x53D6;[10, 100]&#x7684;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x5728;&#x5B66;&#x672F;&#x7814;&#x7A76;&#x4E2D;&#x4E3A;&#x4E86;&#x69A8;&#x53D6;&#x6700;&#x597D;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4E5F;&#x4F1A;&#x53D6;&#x5230;[1000, 3000]&#x3002; 3.5 &#x96C6;&#x675F;&#x641C;&#x7D22;&#x7684;&#x8BEF;&#x5DEE;&#x5206;&#x6790; &#x96C6;&#x675F;&#x641C;&#x7D22;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x5212;&#x5206;&#x6E05;&#x695A;&#x8BEF;&#x5DEE;&#x4E3B;&#x8981;&#x662F;&#x7531;RNN&#x9020;&#x6210;&#x7684;&#x8FD8;&#x662F;&#x96C6;&#x675F;&#x7B97;&#x6CD5;&#x9020;&#x6210;&#x7684;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x5BF9;&#x75C7;&#x4E0B;&#x836F;&#x8FDB;&#x884C;&#x6539;&#x8FDB;&#x3002;&#x539F;&#x7406;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF1A;&#x5047;&#x8BBE;&#x5F85;&#x7FFB;&#x8BD1;&#x7684;&#x53E5;&#x5B50;&#x4E3A;x&#xFF0C;&#x4EBA;&#x5DE5;&#x7FFB;&#x8BD1;&#x7ED3;&#x679C;&#x4E3A;y*&#xFF0C;&#x7B97;&#x6CD5;&#x7FFB;&#x8BD1;&#x7ED3;&#x679C;&#x4E3A;&#x177;&#xFF0C;&#x5C06;&#x8BE5;&#x7ED3;&#x679C;&#x4EE3;&#x5165;RNN&#x7F51;&#x7EDC;&#xFF0C;&#x8BA1;&#x7B97;P(y*|x)&#x548C;P(&#x177;|x)&#xFF1A; &#x5982;&#x679C;P(y*|x)&gt;P(&#x177;|x)&#xFF0C;&#x8BF4;&#x660E;RNN&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x662F;&#x6B63;&#x786E;&#x7684;&#xFF0C;&#x95EE;&#x9898;&#x51FA;&#x73B0;&#x5728;&#x96C6;&#x675F;&#x641C;&#x7D22;&#xFF0C;&#x6807;&#x8BB0;&#x4E3A;Fault(B) &#x5982;&#x679C;P(y*|x)&#x2264;P(&#x177;|x)&#xFF0C;&#x8BF4;&#x660E;&#x95EE;&#x9898;&#x51FA;&#x73B0;&#x5728;RNN&#xFF0C;&#x6807;&#x8BB0;&#x4E3A;Fault(R) &#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x5BF9;&#x5F00;&#x53D1;&#x96C6;&#x4E2D;&#x7684;&#x9519;&#x8BEF;&#x7ED3;&#x679C;&#x968F;&#x673A;&#x9009;&#x53D6;&#x82E5;&#x5E72;&#x6761;&#xFF0C;&#x7EDF;&#x8BA1;Fault(B)&#x548C;Fault(R)&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x54EA;&#x4E2A;&#x5927;&#xFF0C;&#x8BF4;&#x660E;&#x5C31;&#x5E94;&#x8BE5;&#x4F18;&#x5148;&#x6539;&#x8FDB;&#x54EA;&#x4E2A;&#x73AF;&#x8282;&#x3002; 3.6 Bleu&#x5F97;&#x5206;&#xFF08;&#x9009;&#x4FEE;&#xFF09; 3.7 &#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x548C;&#x76F4;&#x89C2;&#x7406;&#x89E3; &#x5BF9;&#x4E8E;&#x65F6;&#x4E0B;&#x6BD4;&#x8F83;&#x6D41;&#x884C;&#x7684;&#x540C;&#x58F0;&#x4F20;&#x8BD1;&#xFF0C;&#x673A;&#x5668;&#x9700;&#x8981;&#x4E00;&#x8FB9;&#x63A5;&#x6536;&#x8F93;&#x5165;&#xFF0C;&#x4E00;&#x8FB9;&#x5B8C;&#x6210;&#x5C40;&#x90E8;&#x7FFB;&#x8BD1;&#x3002;&#x5E38;&#x89C4;&#x7684;RNN&#x4E0D;&#x8DB3;&#x4EE5;&#x5F88;&#x597D;&#x5730;&#x89E3;&#x51B3;&#x8FD9;&#x7C7B;&#x95EE;&#x9898;&#x3002;&#x6B64;&#x5916;&#x5982;&#x679C;&#x5F85;&#x7FFB;&#x8BD1;&#x7684;&#x53E5;&#x5B50;&#x5F88;&#x957F;&#xFF0C;RNN&#x7684;&#x8868;&#x73B0;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#xFF0C;&#x5B83;&#x4E0D;&#x64C5;&#x957F;&#x8BB0;&#x5FC6;&#x8FC7;&#x957F;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x3002;&#x9488;&#x5BF9;&#x8FD9;&#x7C7B;&#x95EE;&#x9898;&#x5F15;&#x5165;&#x4E86;&#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#xFF0C;&#x672C;&#x8282;&#x7ED9;&#x51FA;&#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x3002;&#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x8BBA;&#x6587;&#x53C2;&#x89C1;&#x300A;Neural machine translation by jointly learning to align and translate&#x300B;&#x3002; &#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x7684;&#x539F;&#x7406;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5E38;&#x89C4;&#x7684;&#x53CC;&#x5411;RNN&#x89E3;&#x51B3;&#x7FFB;&#x8BD1;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x9ED1;&#x8272;&#x90E8;&#x5206;&#x7684;&#x7F51;&#x7EDC;&#x6240;&#x793A;&#x3002;&#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x662F;&#x5728;&#x8BE5;&#x7F51;&#x7EDC;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x518D;&#x5F15;&#x5165;&#x4E00;&#x4E2A;RNN&#x7F51;&#x7EDC;&#xFF0C;&#x5728;&#x539F;&#x7F51;&#x7EDC;&#x4E2D;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7528;&#x6765;&#x8986;&#x76D6;N&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x51FA;\(&#xFF08;&#x177;^{&lt;1&gt;} &#x3001;&#x177;^{&lt;2&gt;} &#x3001;&#x177;^{&lt;3&gt;}...&#xFF09;\)&#xFF0C;&#x65B0;&#x7F51;&#x7EDC;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x63A5;&#x7EB3;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x5185;&#x7684;&#x8F93;&#x51FA;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x7A97;&#x53E3;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x6ED1;&#x52A8;&#xFF0C;&#x4ECE;&#x800C;&#x4EA7;&#x751F;&#x65B0;&#x7F51;&#x7EDC;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x76F4;&#x81F3;&#x8F93;&#x51FA;&#x4E3A;&lt;EOS&gt; &#x7531;&#x4E8E;&#x5728;&#x7A97;&#x53E3;&#x5185;&#x4E0D;&#x540C;&#x4F4D;&#x7F6E;&#x7684;&#x8282;&#x70B9;&#x8D77;&#x5230;&#x7684;&#x4F5C;&#x7528;&#x53EF;&#x80FD;&#x4E0D;&#x540C;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x7ED9;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8D4B;&#x4E88;&#x4E0D;&#x540C;&#x7684;&#x6743;&#x91CD;&#xFF1A;\((&#x3B1;^{&lt;1, 1&gt;}, &#x3B1;^{&lt;1, 2&gt;}, &#x3B1;^{&lt;1, 3&gt;}, ), (&#x3B1;^{&lt;2, 1&gt;}, &#x3B1;^{&lt;2,2&gt;}, &#x3B1;^{&lt;2, 3&gt;}, ),&#x2026;\) &#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x662F;&#x5C06;&#x6CE8;&#x610F;&#x529B;&#x96C6;&#x4E2D;&#x5728;&#x53E5;&#x5B50;&#x7684;&#x4E00;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x5EFA;&#x7ACB;&#x5C40;&#x90E8;&#x7684;RNN&#x7F51;&#x7EDC;&#xFF0C;&#x9010;&#x6B65;&#x5411;&#x540E;&#x63A8;&#x79FB;&#x5B8C;&#x6210;&#x5168;&#x5C40;&#x89E3;&#x3002;&#x907F;&#x514D;&#x4E86;&#x4E00;&#x6B21;&#x6027;&#x8BB0;&#x5FC6;&#x8FC7;&#x957F;&#x8F93;&#x5165;&#x5BFC;&#x81F4;&#x7684;&#x8BB0;&#x5FC6;&#x529B;&#x8870;&#x9000;&#x3002; &#x6211;&#x7684;&#x7591;&#x95EE;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x53CC;&#x5411;RNN&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x5C06;&#x6574;&#x4E2A;&#x53E5;&#x5B50;&#x8BFB;&#x5165;&#x540E;&#x624D;&#x80FD;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#xFF0C;&#x8FD9;&#x4F3C;&#x4E4E;&#x5E76;&#x4E0D;&#x80FD;&#x5177;&#x5907;&#x4E00;&#x8FB9;&#x8F93;&#x5165;&#x4E00;&#x8FB9;&#x8F93;&#x51FA;&#x7684;&#x80FD;&#x529B;&#x5427;&#xFF1F; 3.8 &#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B; &#x672C;&#x8282;&#x7ED9;&#x51FA;&#x4E86;&#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x4E2D;&#x89C4;&#x8303;&#x7684;&#x7B26;&#x53F7;&#x5316;&#x8868;&#x793A;&#xFF0C;&#x4EE5;&#x53CA;&#x91CF;&#x5316;&#x7EC6;&#x8282;&#x3002; 1&#x3001;&#x5BF9;&#x4E8E;&#x539F;&#x53CC;&#x5411;RNN&#x90E8;&#x5206;&#xFF0C;&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#x7684;&#x7279;&#x5F81;&#x503C;&#x5408;&#x8BB0;&#x4F5C;\(a^{&lt;t&#x2032;&gt;} = (\overrightarrow{a}^{&lt;t&#x2032;&gt;} ,\overleftarrow{a}^{&lt;t&#x2032;&gt;} )\) 2&#x3001;&#x4EE4;\(y^{&lt;t&gt;}\) &#x9700;&#x8981;&#x5173;&#x6CE8;&#x4E34;&#x8FD1;t&apos;&#x8303;&#x56F4;&#x5185;&#x7684;&#x53CC;&#x5411;RNN&#x7279;&#x5F81;&#x503C;&#xFF0C;&#x5219;&#x7ED9;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x503C;&#x8D4B;&#x4E88;&#x6743;&#x91CD;\(&#x3B1;^{&lt;t, t^&#x2032;&gt;}\)&#xFF0C;&#x4E8E;&#x662F;\(\sum_{t&#x2032;} &#x3B1;^{&lt;t, t^&#x2032;&gt;}=1\) 3&#x3001;&#x7B2C;t&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x51FA;y^() &#x662F;&#x7531;&#x53CC;&#x5411;RNN&#x4E34;&#x8FD1;t&apos;&#x4E2A;&#x8F93;&#x51FA;&#x4E58;&#x4EE5;&#x6743;&#x91CD;&#x4F5C;&#x4E4B;&#x548C;C&#x4E3A;&#x8F93;&#x5165;&#xFF0C;\(C^{&lt;t&gt;}=\sum_{t&#x2032;} &#x3B1;^{&lt;t, t&#x2032;&gt;} a^{t&#x2032;}\) 4&#x3001;&#x5173;&#x4E8E;\(&#x3B1;^{&lt;t, t^&#x2032;&gt;}\) &#x7684;&#x8BA1;&#x7B97;&#xFF0C;&#x662F;&#x6211;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x7406;&#x89E3;&#x7684;&#x5730;&#x65B9;&#x3002;\(e^{&lt;t, t^&#x2032;&gt;}\) &#x662F;&#x539F;&#x53CC;&#x5411;RNN&#x4E2D;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;\(&#x177;^{&lt;t&gt;}\) &#x65F6;t&#x2032; &#x7684;&#x6743;&#x91CD;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5E94;&#x8BE5;&#x53EA;&#x548C;\(a^{&lt;t&#x2032;&gt;}\) &#x6709;&#x5173;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x548C;\(s^{&lt;t&#x2212;1&gt;}\) &#x6709;&#x5173;&#x5462;&#xFF1F; &#x8BA1;&#x7B97;e&#x7684;&#x5C0F;&#x578B;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x600E;&#x4E48;&#x8BBE;&#x5B9A;&#x5462;&#xFF1F; &#x901A;&#x8FC7;\(e^{&lt;t, t^&#x2032;&gt;}\) &#x8BA1;&#x7B97;\(&#x3B1;^{&lt;t, t^&#x2032;&gt;}\) &#x7684;softmax&#x8FC7;&#x7A0B;&#x662F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x7684;&#x3002; # 3.9 &#x8BED;&#x97F3;&#x8FA8;&#x8BC6; &#x91C7;&#x7528;&#x6CE8;&#x610F;&#x529B;&#x6A21;&#x578B;&#x6765;&#x89E3;&#x51B3;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF1A; &#x672C;&#x8282;&#x8FD8;&#x7ED9;&#x51FA;&#x4E86;&#x53E6;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#x2014;&#x2014;&#x300A;Connectionist Temporal Classification: Labeling unsegmented sequence data with recurrent neural networks&#x300B; &#x5B83;&#x7684;&#x8981;&#x70B9;&#x5728;&#x4E8E;&#xFF1A;&#x5B83;&#x91C7;&#x7528;&#x4E86;&#x5E38;&#x89C4;&#x7684;RNN&#x7F51;&#x7EDC;&#xFF0C;&#x5047;&#x8BBE;&#x4E00;&#x6BB5;&#x97F3;&#x9891;&#x6709;10&#x79D2;&#xFF0C;&#x6BCF;10&#x6BEB;&#x79D2;&#x6709;&#x4E00;&#x4E2A;&#x91C7;&#x6837;&#xFF0C;&#x90A3;&#x4E48;&#x603B;&#x5171;1000&#x4E2A;&#x91C7;&#x6837;&#xFF0C;&#x8F93;&#x51FA;&#x663E;&#x7136;&#x4E0D;&#x4F1A;&#x6709;1000&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x5728;&#x6807;&#x6CE8;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x91CD;&#x590D;&#x586B;&#x5145;&#x5230;&#x5B83;&#x6240;&#x5728;&#x5355;&#x8BCD;&#x7684;&#x8F93;&#x51FA;&#x8282;&#x70B9;&#x4E0A;&#xFF1A; &#x4E8E;&#x662F;&#xFF0C;&#x8BE5;&#x7F51;&#x7EDC;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x7FFB;&#x8BD1;&#x7ED3;&#x679C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x91CD;&#x53E0;&#x7684;&#x5B57;&#x7B26;&#x5408;&#x5E76;&#x8D77;&#x6765;&#xFF0C;&#x5C31;&#x6210;&#x4E3A;&#x4E86;&#x6B63;&#x5E38;&#x7684;&#x53E5;&#x5B50;&#x3002; 3.10 &#x89E6;&#x53D1;&#x5B57;&#x68C0;&#x6D4B; &#x89E6;&#x53D1;&#x5B57;&#x68C0;&#x6D4B;&#x662F;&#x73B0;&#x5728;&#x5F88;&#x591A;&#x667A;&#x80FD;&#x97F3;&#x7BB1;&#x90FD;&#x6709;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x8F93;&#x5165;&#x6307;&#x4EE4;&#x524D;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x558A;&#x4E00;&#x58F0;&#xFF1A;&#x201C;OK Google&#x201D;&#xFF0C;&#x4EE5;&#x4FBF;&#x5524;&#x9192;&#x97F3;&#x54CD;&#x3002;&#x5524;&#x9192;&#x7684;&#x8FD9;&#x4E00;&#x55D3;&#x5B50;&#x5C31;&#x662F;&#x89E6;&#x53D1;&#x5B57;&#x68C0;&#x6D4B;&#x3002; &#x5728;&#x8BAD;&#x7EC3;&#x65B9;&#x6CD5;&#x4E0A;&#xFF0C;&#x5047;&#x8BBE;&#x6807;&#x84DD;&#x7684;&#x58F0;&#x6CE2;&#x662F;&#x89E6;&#x53D1;&#x5B57;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x5BF9;&#x5E94;&#x8F93;&#x51FA;&#x8282;&#x70B9;&#x4E0A;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x89E6;&#x53D1;&#x5B57;&#x5B8C;&#x6210;&#x4E4B;&#x524D;&#x7684;&#x8282;&#x70B9;&#x6807;&#x6CE8;&#x4E3A;0&#xFF0C;&#x5B8C;&#x6210;&#x65F6;&#x7684;&#x90A3;&#x4E2A;&#x8282;&#x70B9;&#x6807;&#x6CE8;&#x4E3A;1&#x3002; &#x8FD9;&#x4E48;&#x505A;&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x9677;&#xFF0C;&#x5C31;&#x662F;&#x6837;&#x672C;&#x4E2D;&#x7684;0&#x8FDC;&#x5927;&#x4E8E;1&#xFF0C;&#x4E00;&#x4E2A;&#x5F25;&#x8865;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x628A;&#x89E6;&#x53D1;&#x5B57;&#x5B8C;&#x6210;&#x540E;&#x7684;&#x82E5;&#x5E72;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x6807;&#x6CE8;&#x4E3A;1&#xFF1A; 3.11 &#x7ED3;&#x8BBA;&#x548C;&#x81F4;&#x8C22;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（十四）]]></title>
    <url>%2F2018%2F04%2F18%2F2018%2F0418DeepLearningAI16%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x300B;&#x7B2C;&#x4E8C;&#x5468;&#x300A;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x4E0E;&#x8BCD;&#x5D4C;&#x5165;&#x300B;&#x3002; 2.1 &#x8BCD;&#x6C47;&#x8868;&#x5F81; &#x4E4B;&#x524D;&#x7684;&#x8BFE;&#x7A0B;&#x4E2D;&#x90FD;&#x662F;&#x91C7;&#x7528;one-hot&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x8BCD;&#xFF0C;&#x5728;&#x8FD9;&#x79CD;&#x8868;&#x793A;&#x6CD5;&#x4E0B;&#xFF0C;&#x5047;&#x8BBE;&#x8BCD;&#x5178;&#x5171;10000&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x6BCF;&#x4E2A;&#x5355;&#x8BCD;&#x5C31;&#x662F;&#x4E00;&#x4E2A;10000&#x7EF4;&#x7684;&#x7A00;&#x758F;&#x5411;&#x91CF;&#xFF0C;&#x8BCD;&#x4E0E;&#x8BCD;&#x4E4B;&#x95F4;&#x662F;&#x6B63;&#x4EA4;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x4E2A;&#x8BCD;&#x4E4B;&#x95F4;&#x662F;&#x5B64;&#x7ACB;&#x3001;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x7684;&#x3002;&#x8FD9;&#x4F7F;&#x5F97;&#x7B97;&#x6CD5;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x4E0D;&#x5F3A;&#x3002;&#x8BFE;&#x4EF6;&#x4E2D;&#x4E3E;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#xFF1A; I want a glass of orange ________. &#x6A21;&#x578B;&#x53EF;&#x80FD;&#x5B66;&#x4F1A;&#x4E86;&#x5C06;&#x7A7A;&#x767D;&#x5904;&#x586B;&#x4E3A;juice&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x9898;&#x76EE;&#x6539;&#x4E3A;&#xFF1A; I want a glass of apple ______. &#x8FD9;&#x5BF9;&#x4E8E;&#x6A21;&#x578B;&#x6765;&#x8BF4;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x53E6;&#x4E00;&#x9053;&#x5B8C;&#x5168;&#x4E0D;&#x76F8;&#x5173;&#x7684;&#x9898;&#x76EE;&#x4E86;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x82F9;&#x679C;&#x548C;&#x6854;&#x5B50;&#x6709;&#x9AD8;&#x5EA6;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x5E94;&#x8BE5;&#x8003;&#x8651;&#x5229;&#x628A;&#x4E24;&#x4E2A;&#x5355;&#x8BCD;&#x5411;&#x91CF;&#x4E2D;&#x7684;&#x7A00;&#x758F;&#x90E8;&#x5206;&#x5229;&#x7528;&#x8D77;&#x6765;&#xFF0C;&#x4EE5;&#x4F53;&#x73B0;&#x51FA;&#x4E24;&#x4E2A;&#x5355;&#x8BCD;&#x7684;&#x76F8;&#x5173;&#x6027;&#x3002; &#x6309;&#x7167;&#x4E0D;&#x540C;&#x7684;&#x7EF4;&#x5EA6;&#x5C06;&#x6BCF;&#x4E2A;&#x5355;&#x8BCD;&#x91CD;&#x65B0;&#x7F16;&#x7801;&#xFF0C;&#x6BCF;&#x4E2A;&#x5411;&#x91CF;&#x8868;&#x793A;&#x8BE5;&#x5355;&#x8BCD;&#x5728;&#x8BE5;&#x7EF4;&#x5EA6;&#x4E0A;&#x7684;&#x5F97;&#x5206;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x8FD9;&#x5C31;&#x5C06;&#x539F;&#x5148;&#x7A00;&#x758F;&#x5411;&#x91CF;&#x7684;one-hot&#x8868;&#x793A;&#x6CD5;&#x4FEE;&#x6539;&#x6210;&#x4E0D;&#x540C;&#x7EF4;&#x5EA6;&#x5C5E;&#x6027;&#x7684;&#x5411;&#x91CF;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x8BCD;&#x6C47;&#x7684;&#x8BCD;&#x5D4C;&#x5165;&#x6CD5;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x4F7F;&#x5F97;&#x8BCD;&#x7684;ID&#x76F4;&#x63A5;&#x4F53;&#x73B0;&#x51FA;&#x5176;&#x5C5E;&#x6027;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x80FD;&#x4F53;&#x73B0;&#x51FA;&#x8BCD;&#x4E0E;&#x8BCD;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x6A21;&#x578B;&#x6709;&#x66F4;&#x597D;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002; &#x8BFE;&#x4EF6;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x6570;&#x636E;&#x53EF;&#x89C6;&#x5316;&#x7684;&#x8BBA;&#x6587;&#x662F;&#x300A;visualizing data using t-sne&#x300B; 2.2 &#x4F7F;&#x7528;&#x8BCD;&#x5D4C;&#x5165; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x4F7F;&#x7528;&#x8BCD;&#x5D4C;&#x5165;&#x540E;RNN&#x7684;&#x6548;&#x679C;&#xFF1A; &#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x6709;Sally Johnson is an orange farmer. &#x5F53;&#x9884;&#x6D4B;Robert Lin is an apple farmer.&#x65F6;&#xFF0C;&#x7531;&#x4E8E;apple farmer&#x548C;orange farmer&#x8BCD;&#x6027;&#x63A5;&#x8FD1;&#xFF0C;&#x6A21;&#x578B;&#x5C31;&#x77E5;&#x9053;Robert Lin&#x4E5F;&#x662F;&#x4EBA;&#x540D;&#x4E86;&#x3002; &#x672C;&#x8282;&#x7ED9;&#x51FA;&#x4E86;&#x7528;&#x8BCD;&#x5D4C;&#x5165;&#x505A;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x7684;&#x6B65;&#x9AA4;&#xFF1A; 1&#x3001;&#x5148;&#x4ECE;&#x5927;&#x91CF;&#x6587;&#x672C;&#x96C6;&#x4E2D;&#x5B66;&#x4E60;&#x8BCD;&#x5D4C;&#x5165; 2&#x3001;&#x628A;&#x8FD9;&#x4E9B;&#x8BCD;&#x5D4C;&#x5165;&#x6A21;&#x578B;&#x8FC1;&#x79FB;&#x5230;&#x65B0;&#x7684;&#x53EA;&#x6709;&#x5C11;&#x91CF;&#x6807;&#x6CE8;&#x8BAD;&#x7EC3;&#x96C6;&#x7684;&#x4EFB;&#x52A1;&#x4E2D; 3&#x3001;&#x53EF;&#x9009;&#x64CD;&#x4F5C;&#xFF1A;&#x5728;&#x65B0;&#x6570;&#x636E;&#x4E0A;&#x7EE7;&#x7EED;&#x4F18;&#x5316;&#x8BCD;&#x5D4C;&#x5165;&#x6A21;&#x578B;&#xFF0C;&#x901A;&#x5E38;&#x53EA;&#x6709;&#x5728;&#x7B2C;2&#x6B65;&#x7684;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#x65F6;&#x624D;&#x4F1A;&#x8FD9;&#x4E48;&#x505A; &#x672C;&#x8282;&#x6700;&#x540E;&#x63D0;&#x5230;&#xFF0C;&#x8BCD;&#x5D4C;&#x5165;&#x548C;&#x524D;&#x9762;&#x8BB2;&#x5230;&#x7684;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x4E2D;&#x7684;&#x4EBA;&#x8138;&#x7F16;&#x7801;&#x662F;&#x975E;&#x5E38;&#x7C7B;&#x4F3C;&#x7684;&#x3002;&#x6240;&#x8C13;&#x5D4C;&#x5165;&#x548C;&#x7F16;&#x7801;&#x53EA;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x8FC7;&#x7A0B;&#x7684;&#x4E0D;&#x540C;&#x8868;&#x8FF0;&#x3002;&#x4E24;&#x4E2A;&#x5E94;&#x7528;&#x573A;&#x666F;&#x7684;&#x5DEE;&#x5F02;&#x5728;&#x4E8E;&#x4EBA;&#x8138;&#x7F16;&#x7801;&#x7684;&#x64CD;&#x4F5C;&#x5BF9;&#x8C61;&#x662F;&#x4E2A;&#x5F00;&#x653E;&#x96C6;&#x2014;&#x2014;&#x8981;&#x5BF9;&#x4ECE;&#x6765;&#x6CA1;&#x89C1;&#x8FC7;&#x7684;&#x4EBA;&#x8138;&#x505A;&#x8BC6;&#x522B;&#xFF1B;&#x800C;&#x8BCD;&#x5D4C;&#x5165;&#x5219;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x5C01;&#x95ED;&#x7684;&#x8BCD;&#x5178;&#x96C6;&#x5408;&#x5185;&#x5BF9;&#x6240;&#x6709;&#x8BCD;&#x505A;&#x4E00;&#x4E2A;N&#x7EF4;&#x7F16;&#x7801;&#x3002; 2.3 &#x8BCD;&#x5D4C;&#x5165;&#x7684;&#x7279;&#x5F81; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x8BCD;&#x5D4C;&#x5165;&#x7684;&#x4E00;&#x70B9;&#x5F88;&#x725B;&#x903C;&#x7684;&#x7279;&#x6027;&#x2014;&#x2014;&#x7C7B;&#x6BD4;&#x63A8;&#x7406;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x5411;&#x91CF;man&#x548C;womwan&#x7684;&#x5DEE;&#x975E;&#x5E38;&#x63A5;&#x8FD1;&#x4E8E;&#x5411;&#x91CF;king&#x548C;queen&#x7684;&#x5DEE;&#xFF0C; &#x8FD9;&#x4E2A;&#x7279;&#x6027;&#x4F7F;&#x5F97;&#x5728;&#x6709;Man&#x5BF9;Woman&#x7684;&#x53E5;&#x5B50;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x7C7B;&#x6BD4;&#x63A8;&#x7406;&#x66FF;&#x6362;&#x6210;King&#x5BF9;Queen&#x3002;&#x8FD9;&#x7BC7;&#x8BBA;&#x6587;&#x662F;&#x300A;linguistic regularities in continuous space word representations&#x300B; &#x4E24;&#x4E2A;&#x8BCD;&#x5411;&#x91CF;&#x76F8;&#x4F3C;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x5F20;&#x4E8C;&#x7EF4;&#x56FE;&#x6765;&#x8868;&#x793A;&#xFF0C;queen&#x5BF9;king&#x548C;woman&#x5BF9;man&#x53EA;&#x662F;&#x6CBF;&#x7740;&#x67D0;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x505A;&#x4E86;&#x5E73;&#x79FB;&#xFF0C;&#x4E8E;&#x662F;&#x5F53;&#x5DF2;&#x77E5;man&#x3001;woman&#x548C;king&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x627E;&#x5230;&#x548C;king&#x7EC4;&#x6210;&#x7684;&#x5939;&#x89D2;&#x4E0E;woman&#x548C;man&#x6700;&#x63A5;&#x8FD1;&#x7684;&#x70B9;&#x5373;&#x53EF;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E2A;&#x89E3;&#x91CA;&#x6709;&#x70B9;&#x6781;&#x7AEF;&#x7406;&#x60F3;&#xFF0C;&#x56E0;&#x4E3A;&#x8BCD;&#x5D4C;&#x5165;&#x7684;&#x5411;&#x91CF;&#x901A;&#x5E38;&#x5728;&#x4E0A;&#x767E;&#x7EF4;&#xFF0C;&#x6295;&#x5F71;&#x5230;&#x4E8C;&#x7EF4;&#x5E73;&#x9762;&#x540E;&#x5C31;&#x635F;&#x5931;&#x4E86;&#x5F88;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x5F88;&#x96BE;&#x4FDD;&#x8BC1;&#x5B83;&#x4EEC;&#x5728;&#x4E0E;&#x6295;&#x5F71;&#x5E73;&#x9762;&#x5E73;&#x884C;&#x7684;&#x89D2;&#x5EA6;&#x8FD8;&#x80FD;&#x4FDD;&#x6301;&#x4E0A;&#x9762;&#x7684;&#x6027;&#x8D28;&#x3002; &#x56DE;&#x5230;&#x7B97;&#x6CD5;&#x601D;&#x60F3;&#x4E0A;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x627E;&#x5230;&#x7684;&#x5C31;&#x662F;&#x4E0E;king-man+woman&#x76F8;&#x4F3C;&#x5EA6;&#x6700;&#x5927;&#x7684;&#x8BCD;&#x5411;&#x91CF;&#xFF0C;sim&#x79F0;&#x4E3A;&#x76F8;&#x4F3C;&#x5EA6;&#x51FD;&#x6570;&#x3002; &#x76F8;&#x4F3C;&#x5EA6;&#x51FD;&#x6570;sim&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x79CD;&#x8BA1;&#x7B97;&#x65B9;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x79F0;&#x4E3A;&#x4F59;&#x5F26;&#x76F8;&#x4F3C;&#x5EA6;&#x51FD;&#x6570;&#xFF0C;&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; &#x4E4B;&#x6240;&#x4EE5;&#x79F0;&#x4E3A;&#x4F59;&#x5F26;&#x76F8;&#x4F3C;&#x5EA6;&#x662F;&#x56E0;&#x4E3A;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#x7684;&#x89D2;&#x5EA6;&#x8D8A;&#x5C0F;&#xFF0C;&#x503C;&#x8D8A;&#x5927;&#xFF0C;&#x8D8A;&#x5782;&#x76F4;&#xFF0C;&#x503C;&#x8D8A;&#x5C0F;&#x3002;&#x8FD9;&#x548C;&#x4F59;&#x5F26;&#x7684;&#x6027;&#x8D28;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#x3002; 2.4 &#x5D4C;&#x5165;&#x77E9;&#x9635; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x5355;&#x8BCD;&#x8BCD;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#x7684;&#x6C42;&#x89E3;&#x601D;&#x8DEF;&#x3002;&#x4EE4;&#x5355;&#x8BCD;i&#x7684;one-hot&#x5411;&#x91CF;&#x4E3A;\(O_i\)&#xFF0C;&#x8BCD;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#x4E3A;\(e_i\)&#xFF0C;&#x5982;&#x679C;&#x8BCD;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#x662F;300&#x7EF4;&#xFF0C;&#x8BCD;&#x5178;&#x662F;10000&#x7EF4;&#xFF0C;&#x90A3;&#x4E48;&#x53EA;&#x9700;&#x8981;&#x6C42;&#x89E3;&#x4E00;&#x4E2A;300&#xD7;10000&#x7EF4;&#x7684;&#x5D4C;&#x5165;&#x77E9;&#x9635;E&#x4F7F;&#x5F97; \(E&#xB7;O_i = e_i\) &#x53EF;&#x4EE5;&#x7528;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x65B9;&#x6CD5;&#x6C42;&#x5F97;E&#xFF0C;&#x5177;&#x4F53;&#x65B9;&#x6CD5;&#x5C06;&#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4ECB;&#x7ECD;&#x3002; 2.5 &#x5B66;&#x4E60;&#x8BCD;&#x5D4C;&#x5165; &#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x662F;&#x5B66;&#x4E60;&#x8BCD;&#x5D4C;&#x5165;&#x7684;&#x597D;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x4E0B;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x6279;&#x8BAD;&#x7EC3;&#x8BED;&#x6599;&#xFF0C;&#x586B;&#x7A7A;&#x5904;&#x662F;&#x6807;&#x6CE8;&#x5185;&#x5BB9;&#xFF0C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x5165;&#x662F;&#x53E5;&#x5B50;&#x7684;&#x5355;&#x8BCD;O&#x5E8F;&#x5217;&#xFF0C;&#x8F93;&#x51FA;&#x662F;&#x586B;&#x7A7A;&#x5355;&#x8BCD;&#x3002;O&#x5E8F;&#x5217;&#x7ECF;&#x8FC7;&#x4E0E;&#x5D4C;&#x5165;&#x77E9;&#x9635;&#x76F8;&#x4E58;&#x5F97;&#x5230;e&#x5E8F;&#x5217;&#xFF0C;&#x518D;&#x7EE7;&#x7EED;&#x5411;&#x4E0B;&#x4E00;&#x5C42;&#x4F20;&#x9012;&#xFF0C;&#x8BA1;&#x7B97;&#x8F93;&#x51FA;&#x3002; &#x56E0;&#x6B64;&#x4ECE;o&#x5230;e&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x4E00;&#x5C42;&#xFF0C;&#x4E8E;&#x662F;&#x5B66;&#x4E60;&#x8BCD;&#x5D4C;&#x5165;&#x5C31;&#x6210;&#x4E86;&#x5B66;&#x4E60;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x7684;&#x526F;&#x4EA7;&#x54C1;&#x3002;&#x5F53;&#x7136;&#x56FE;&#x4E2D;&#x7684;&#x7F51;&#x7EDC;&#x53EA;&#x662F;&#x4E2A;&#x6982;&#x5FF5;&#x4EA7;&#x54C1;&#xFF0C;&#x56E0;&#x4E3A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8F93;&#x5165;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x5E94;&#x8BE5;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5B9E;&#x9645;&#x64CD;&#x4F5C;&#x4E2D;&#x901A;&#x5E38;&#x53EA;&#x53D6;&#x56FA;&#x5B9A;&#x7A97;&#x53E3;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x3002;&#x8FD9;&#x4E2A;&#x7A97;&#x53E3;&#x5927;&#x5C0F;&#x5C31;&#x662F;&#x5B66;&#x4E60;&#x8BCD;&#x5D4C;&#x5165;&#x7684;&#x8D85;&#x53C2;&#x6570;&#x3002; &#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x5F97;&#x5230;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#xFF0C;&#x5219;&#x4E0A;&#x4E0B;&#x6587;&#x53EA;&#x80FD;&#x53D6;&#x524D;&#x6587;&#xFF0C;&#x56E0;&#x4E3A;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x7684;&#x4E3B;&#x8981;&#x5E94;&#x7528;&#x573A;&#x666F;&#x662F;&#x9884;&#x6D4B;&#xFF0C;&#x5373;&#x8F93;&#x5165;&#x524D;&#x534A;&#x90E8;&#x5206;&#xFF0C;&#x9884;&#x6D4B;&#x540E;&#x534A;&#x90E8;&#x5206;&#x3002;&#x6240;&#x4EE5;&#x8BAD;&#x7EC3;&#x53EA;&#x80FD;&#x53D6;&#x524D;&#x6587;&#x3002; &#x4F46;&#x662F;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x5B66;&#x4E60;&#x8BCD;&#x5D4C;&#x5165;&#xFF0C;&#x4E0A;&#x4E0B;&#x6587;&#x7684;&#x8303;&#x56F4;&#x5C31;&#x53EF;&#x4EE5;&#x66F4;&#x81EA;&#x7531;&#x4E86;&#xFF0C;&#x65E2;&#x53EF;&#x4EE5;&#x53D6;&#x524D;&#x6587;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x53D6;&#x540E;&#x6587;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x53D6;&#x6700;&#x8FD1;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x8BCD;&#x3002;&#x5373;&#x8BFE;&#x4EF6;&#x4E2D;&#x84DD;&#x8272;&#x5927;&#x62EC;&#x53F7;&#x62EC;&#x4F4F;&#x7684;&#x90E8;&#x5206;&#xFF1A; 2.6 Word2Vec Word2Vec&#x7684;&#x8BBA;&#x6587;&#x5728;&#x300A;efficient estimation of word representations in vector space&#x300B; &#x7B97;&#x6CD5;&#x601D;&#x60F3;&#x548C;&#x4E0A;&#x4E00;&#x8282;&#x8BB2;&#x7684;&#x7C7B;&#x4F3C;&#xFF0C;&#x5728;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4E0A;&#x505A;&#x51FA;&#x4E86;&#x4E00;&#x4E9B;&#x4F18;&#x5316;&#xFF1A; 1&#x3001;&#x968F;&#x673A;&#x9009;&#x4E00;&#x4E2A;&#x8BCD;&#x4F5C;&#x4E3A;&#x4E0A;&#x4E0B;&#x6587;&#x8BCD;&#x3002; 2&#x3001;&#x968F;&#x673A;&#x5728;&#x4E00;&#x5B9A;&#x8BCD;&#x8DDD;&#x4E4B;&#x5185;&#x9009;&#x53E6;&#x4E00;&#x4E2A;&#x8BCD;&#x4F5C;&#x4E3A;&#x76EE;&#x6807;&#x8BCD;&#xFF0C;&#x6BD4;&#x5982;&#x4E0A;&#x4E0B;&#x6587;&#x8BCD;&#x524D;&#x540E;10&#x4E2A;&#x8BCD;&#x4EE5;&#x5185;&#x3002; 3&#x3001;&#x6784;&#x9020;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#xFF0C;&#x7ED9;&#x5B9A;&#x4E0A;&#x4E0B;&#x6587;&#x8BCD;&#xFF0C;&#x9884;&#x6D4B;&#x76EE;&#x6807;&#x8BCD;&#x3002; &#x5728;&#x6784;&#x9020;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x65F6;&#xFF0C;&#x8BFE;&#x4EF6;&#x4E2D;&#x8C8C;&#x4F3C;&#x53EA;&#x6709;&#x4E00;&#x5C42;&#x8FD0;&#x7B97;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;&#x65F6;e&#x7684;&#x6307;&#x6570;&#x662F;\(&#x3B8;_e\)&#xFF0C;&#x3B8;&#x76F8;&#x5F53;&#x4E8E;w&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x8001;&#x5E08;&#x8BF4;&#x8FD9;&#x91CC;&#x7701;&#x7565;&#x4E86;&#x504F;&#x79FB;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x52A0;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x52A0;&#x4E0A;&#xFF1A; &#x663E;&#x7136;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x5728;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x5206;&#x6BCD;&#x7684;&#x8FD0;&#x7B97;&#x91CF;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5F15;&#x5165;&#x4E00;&#x4E9B;&#x6539;&#x8FDB;&#x63AA;&#x65BD;&#xFF0C;&#x6BD4;&#x5982;&#x5148;&#x628A;&#x8BCD;&#x5178;&#x5206;&#x4E24;&#x5806;&#xFF0C;&#x5148;&#x9884;&#x6D4B;&#x8F93;&#x51FA;&#x8BCD;&#x5C5E;&#x4E8E;&#x54EA;&#x4E00;&#x5806;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x9012;&#x5F52;&#x4E8C;&#x5206;&#x7684;&#x505A;&#x6CD5;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x8FD0;&#x7B97;&#x91CF;&#xFF1A; &#x6700;&#x540E;&#x5728;&#x4E0A;&#x4E0B;&#x6587;&#x8BCD;&#x7684;&#x91C7;&#x6837;&#x4E0A;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x5747;&#x8861;&#x968F;&#x673A;&#x6765;&#x53D6;&#x4E0A;&#x4E0B;&#x6587;&#x8BCD;&#xFF0C;&#x56E0;&#x4E3A;&#x5F88;&#x591A;&#x865A;&#x8BCD;the is a of&#x7B49;&#xFF0C;&#x5927;&#x90E8;&#x76EE;&#x6807;&#x8BCD;&#x90FD;&#x4F1A;&#x5728;&#x4E00;&#x5B9A;&#x8BCD;&#x8DDD;&#x5185;&#x548C;&#x4ED6;&#x4EEC;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x5C31;&#x5BFC;&#x81F4;&#x5B66;&#x51FA;&#x7684;&#x5D4C;&#x5165;&#x8BCD;&#x5411;&#x91CF;&#x6CA1;&#x6709;&#x533A;&#x5206;&#x5EA6;&#x4E86;&#x3002;&#x5E94;&#x8BE5;&#x907F;&#x5F00;&#x8FD9;&#x4E9B;&#x9AD8;&#x9891;&#x8BCD;&#xFF0C;&#x4EE5;&#x4FDD;&#x6301;&#x5D4C;&#x5165;&#x8BCD;&#x5411;&#x91CF;&#x7684;&#x533A;&#x5206;&#x5EA6;&#x3002; 2.7 &#x8D1F;&#x91C7;&#x6837; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x7684;&#x65B9;&#x6CD5;&#x8BBA;&#x6587;&#x662F;&#x300A;distributed representations of words and phrases and their compositionality&#x300B; &#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x662F;&#xFF1A; 1&#x3001;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x53E5;&#x5B50;&#x4E2D;&#x968F;&#x673A;&#x9009;&#x4E00;&#x4E2A;&#x8BCD;&#x4F5C;&#x4E3A;&#x4E0A;&#x4E0B;&#x6587;&#x8BCD;Context&#xFF0C;&#x518D;&#x968F;&#x673A;&#x5728;&#x4E00;&#x5B9A;&#x8BCD;&#x8DDD;&#x4E4B;&#x5185;&#x9009;&#x53E6;&#x4E00;&#x4E2A;&#x8BCD;Word&#xFF0C;&#x8FD9;&#x548C;&#x4E0A;&#x4E00;&#x8282;&#x4ECB;&#x7ECD;&#x7684;&#x65B9;&#x6CD5;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;Target&#x8868;&#x793A;Context-Word&#x662F;&#x5426;&#x5728;&#x8BAD;&#x7EC3;&#x8BED;&#x6599;&#x67D0;&#x4E2A;&#x53E5;&#x5B50;&#x4E2D;&#x9009;&#x53D6;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x4E3A;1&#x3002; 2&#x3001;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;Context&#x5728;&#x5B57;&#x5178;&#x91CC;&#x968F;&#x673A;&#x9009;&#x53D6;k&#x4E2A;&#x8BCD;Word&#xFF0C;&#x4EE4;Target &#x4E3A;0&#x3002;&#x5176;&#x4E2D;k&#x662F;&#x4E2A;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;&#x5373;&#x4F7F;Word&#x78B0;&#x5DE7;&#x4E5F;&#x51FA;&#x73B0;&#x5728;&#x4E86;&#x5F53;&#x524D;&#x53E5;&#x5B50;&#x4E2D;&#xFF0C;&#x4E5F;&#x4ECD;&#x7136;&#x628A;Target&#x6807;&#x4E3A;0&#x3002;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x6BD4;&#x8F83;&#x5C0F;&#xFF0C;k&#x53EF;&#x4EE5;&#x7A0D;&#x5FAE;&#x5927;&#x4E00;&#x4E9B;&#x6BD4;&#x5982;[5,20]&#xFF1B;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;k&#x5E94;&#x8BE5;&#x5C0F;&#x4E00;&#x4E9B;&#x6BD4;&#x5982;[2, 5] 3&#x3001;&#x5728;&#x7F51;&#x7EDC;&#x7684;&#x8BAD;&#x7EC3;&#x90E8;&#x5206;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x770B;&#x660E;&#x767D;&#xFF0C;&#x5B83;&#x662F;&#x8BF4;&#x5C06;Context&#x7684;O&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x4E58;&#x4EE5;&#x8BCD;&#x5D4C;&#x5165;&#x77E9;&#x9635;E&#xFF0C;&#x5F97;&#x5230;&#x8BCD;&#x5D4C;&#x5165;&#x5411;&#x91CF;e&#xFF0C;&#x5728;&#x7ECF;&#x8FC7;softmax&#x8FD0;&#x7B97;&#x5F97;&#x5230;k+1&#x4E2A;&#x8F93;&#x51FA;&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x6B63;&#x4F8B;&#x548C;&#x8D1F;&#x4F8B;&#xFF1A; &#x6211;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A; 1&#x3001;&#x6211;&#x6CA1;&#x6709;&#x770B;&#x5230;&#x8D1F;&#x4F8B;&#x4E2D;t&#x5728;&#x7F51;&#x7EDC;&#x7684;&#x4EC0;&#x4E48;&#x90E8;&#x5206;&#x6709;&#x6240;&#x4F53;&#x73B0;&#xFF0C;&#x4ED6;&#x4EEC;&#x600E;&#x4E48;&#x53C2;&#x4E0E;&#x5851;&#x9020;&#x7F51;&#x7EDC;&#x5462;&#xFF1F; 2&#x3001;&#x91C7;&#x6837;&#x662F;&#x53EA;&#x91C7;&#x8FD9;k+1&#x4E2A;&#x6570;&#x636E;&#x8FD8;&#x662F;&#x8981;&#x91C7;m*(k+1)&#xFF1F; 2.8 GloVe&#x8BCD;&#x5411;&#x91CF; GloVe&#x7684;&#x8BBA;&#x6587;&#x8BE6;&#x89C1;&#x300A;GloVe: Global Vectors for Word Representation&#x300B; &#x9996;&#x5148;&#x5B9A;&#x4E49;\(X_{ij}\) &#x8868;&#x793A;&#x5728;&#x6240;&#x6709;&#x8BED;&#x6599;&#x4E2D;&#xFF0C;&#x5355;&#x8BCD;i&#x51FA;&#x73B0;&#x5728;&#x5355;&#x8BCD;j&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x7684;&#x6B21;&#x6570;&#x3002;&#x5BF9;&#x4E8E;&#x201C;&#x51FA;&#x73B0;&#x5728;&#x4E0A;&#x4E0B;&#x6587;&#x201D;&#x7684;&#x4E0D;&#x540C;&#x89E3;&#x91CA;&#xFF0C;\(X_{ij}\) &#x7684;&#x503C;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; i&#x51FA;&#x73B0;&#x5728;j&#x7684;&#x4E0A;&#x4E0B;&#x6587; = i&#x51FA;&#x73B0;&#x5728;j&#x524D;&#x540E;10&#x4E2A;&#x5355;&#x8BCD;&#x5185;&#xFF0C;&#x6B64;&#x65F6;\(X_{ij}=X_{ji}\) i&#x51FA;&#x73B0;&#x5728;j&#x7684;&#x4E0A;&#x4E0B;&#x6587; = i&#x51FA;&#x73B0;&#x5728;j&#x524D;1&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x6B64;&#x65F6;\(X_{ij}&#x2260;X_{ji}\) &#x5982;&#x679C;&#x8BCD;&#x5178;&#x662F;&#x4E00;&#x4E2A;m&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x5219;X_ij &#x662F;&#x4E00;&#x4E2A;m&#xD7;m&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x91C7;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x6C42; \(minimize \sum_{i=1}^{10000} \sum_{j=1}^{10000} (&#x3B8;_i^T e_j &#x2212; logX_{ij})^2\) &#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x5F97;&#x5230;&#x3B8;&#x548C;e&#x5373;&#x4E3A;&#x8BCD;&#x5411;&#x91CF;&#x7684;&#x76F8;&#x5173;&#x503C;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x7B97;&#x5F0F;&#x8868;&#x8FBE;&#x7684;&#x662F;&#x6C42;&#x89E3;&#x601D;&#x60F3;&#xFF0C;&#x5B8C;&#x6574;&#x7684;&#x7B97;&#x5F0F;&#x4E3A;&#xFF1A; \(minimize \sum_{i=1}^{10000} \sum_{j=1}^{10000} f(X_{ij})(&#x3B8;_{i}^T e_j+b_i+b_j^&#x2032;&#x2212;logX_{ij})^2\) &#x5176;&#x4E2D;f(X_ij)&#x662F;&#x4E00;&#x4E2A;&#x6743;&#x91CD;&#x51FD;&#x6570;&#xFF0C;&#x5F53;logX_ij=0&#x65F6;&#xFF0C;&#x4E3A;&#x907F;&#x514D;&#x62EC;&#x53F7;&#x5185;&#x7684;&#x7B97;&#x5F0F;&#x4E3A;&#x65E0;&#x7A77;&#x5C0F;&#xFF0C;&#x4EE4;f(X_ij)=0&#xFF0C;&#x4E8E;&#x662F;&#x6574;&#x4F53;&#x7B97;&#x5F0F;&#x4E3A;0&#xFF1B; &#x6B64;&#x5916;&#xFF0C;&#x5BF9;&#x4E8E;this, is, of, a&#x7B49;&#x5E38;&#x7528;&#x8BCD;f()&#x51FD;&#x6570;&#x4F1A;&#x9002;&#x5F53;&#x964D;&#x6743;&#xFF1B;&#x5BF9;&#x4E8E;&#x751F;&#x50FB;&#x8BCD;&#xFF0C;f()&#x51FD;&#x6570;&#x4F1A;&#x9002;&#x5F53;&#x63D0;&#x6743;&#x3002; &#x6700;&#x7EC8;&#x5F97;&#x5230;&#x7684;&#x3B8;&#x548C;e&#x662F;&#x4E24;&#x4E2A;&#x5BF9;&#x79F0;&#x7684;&#x6570;&#x503C;&#xFF0C;&#x5373;&#x82E5;&#x3B8;=a&#x65F6;e=b&#xFF0C;&#x5219;&#x3B8;=b&#x65F6;e=a&#xFF0C;&#x56E0;&#x6B64;&#x5B9A;&#x4E49;&#x8BCD;&#x5D4C;&#x5165;&#x7684;&#x6700;&#x7EC8;&#x503C;&#x4E3A;&#xFF1A; \(e_w^{final} =\frac{e_w+&#x3B8;_w}{2}\) 2.9 &#x60C5;&#x7EEA;&#x5206;&#x7C7B; &#x60C5;&#x7EEA;&#x5206;&#x7C7B;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x662F;&#x6839;&#x636E;&#x4E00;&#x6BB5;&#x8BDD;&#xFF0C;&#x5224;&#x65AD;&#x5B83;&#x8868;&#x8FBE;&#x7684;&#x8BC4;&#x5206;&#x662F;&#x591A;&#x5C11;&#x3002;&#x91C7;&#x7528;&#x5E38;&#x89C4;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x4F46;&#x662F;&#x5B83;&#x7684;&#x7F3A;&#x9677;&#x662F;&#x5BF9;&#x4E8E;&#x5426;&#x5B9A;&#x6216;&#x5426;&#x5B9A;&#x7684;&#x5426;&#x5B9A;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x51C6;&#x786E;&#x7684;&#x3002;&#x91C7;&#x7528;RNN&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x5B83;&#x8003;&#x8651;&#x4E86;&#x5355;&#x8BCD;&#x7684;&#x524D;&#x540E;&#x987A;&#x5E8F;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;&#x53CC;&#x91CD;&#x5426;&#x5B9A;&#x6709;&#x66F4;&#x51C6;&#x786E;&#x7684;&#x5224;&#x65AD;&#x3002;&#x540C;&#x65F6;&#x8BCD;&#x5D4C;&#x5165;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x5730;&#x8BC6;&#x522B;&#x540C;&#x4E49;&#x8BCD;&#xFF0C;&#x5373;&#x4F7F;&#x5B83;&#x4EEC;&#x6CA1;&#x6709;&#x51FA;&#x73B0;&#x5728;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x4E2D;&#x3002; 2.10 &#x8BCD;&#x5D4C;&#x5165;&#x9664;&#x504F; &#x672C;&#x8282;&#x9664;&#x504F;&#x7684;&#x610F;&#x601D;&#x662F;&#x6307;&#x6027;&#x522B;&#x3001;&#x79CD;&#x65CF;&#x6B67;&#x89C6;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; Man : Computer Programmer as Woman : Homemaker Man : Doctor as Woman : Nurse &#x8001;&#x5E08;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x79CD;&#x65CF;&#x6B67;&#x89C6;&#xFF0C;&#x5E94;&#x8BE5;&#x88AB;&#x7EA0;&#x6B63;&#x3002;&#x4F46;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x662F;&#x8BAD;&#x7EC3;&#x96C6;&#x672C;&#x8EAB;&#x4F53;&#x73B0;&#x51FA;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x5B58;&#x5728;&#x5C31;&#x8BF4;&#x660E;&#x5B83;&#x662F;&#x73B0;&#x5B9E;&#x7684;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#xFF0C;&#x5728;&#x7ED3;&#x679C;&#x4E2D;&#x628A;&#x5B83;&#x201C;&#x7EA0;&#x6B63;&#x201D;&#x8FC7;&#x6765;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x610F;&#x4E49;&#x3002;&#x663E;&#x793A;&#x4E0D;&#x4F1A;&#x56E0;&#x6B64;&#x6539;&#x53D8;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（十三）]]></title>
    <url>%2F2018%2F04%2F18%2F2018%2F0418DeepLearningAI15%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x300B;&#x7B2C;&#x4E00;&#x5468;&#x300A;&#x5FAA;&#x73AF;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x300B;&#x3002; 1.1 &#x4E3A;&#x4EC0;&#x4E48;&#x9009;&#x62E9;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#xFF1F; &#x672C;&#x8282;&#x7B80;&#x8FF0;&#x4E86;&#x5E8F;&#x5217;&#x6A21;&#x578B;&#x9002;&#x7528;&#x7684;&#x8303;&#x56F4;&#xFF1A;&#x4ECE;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x6BD4;&#x5982;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x3001;&#x7FFB;&#x8BD1;&#xFF1B;&#x4EC5;&#x8F93;&#x5165;&#x7AEF;&#x6216;&#x8F93;&#x51FA;&#x7AEF;&#x662F;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#xFF0C;&#x6BD4;&#x5982;&#x4ECE;&#x4E00;&#x6BB5;&#x8BC4;&#x4EF7;&#x6587;&#x5B57;&#x4E2D;&#x5224;&#x65AD;&#x8BC4;&#x4EF7;&#x7684;&#x7B49;&#x7EA7; 1.2 &#x6570;&#x5B66;&#x7B26;&#x53F7; &#x4EE5;&#x67E5;&#x627E;&#x4E00;&#x6BB5;&#x6587;&#x672C;&#x4E2D;&#x7684;&#x4EBA;&#x540D;&#x4E3A;&#x4F8B;&#xFF0C;&#x5728;&#x8FD0;&#x7B97;&#x4E4B;&#x524D;&#xFF0C;&#x5C06;&#x8F93;&#x5165;&#x6309;&#x7167;&#x5355;&#x8BCD;&#x5212;&#x5206;&#x6210;&#x5355;&#x5143;&#xFF0C;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x8BB0;&#x4F5C;\(x^{&lt;t&gt;}\) &#x6807;&#x6CE8;&#x662F;&#x5728;&#x8F93;&#x5165;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x5C06;&#x4EBA;&#x540D;&#x5355;&#x5143;&#x6807;&#x6CE8;&#x4E3A;1&#xFF0C;&#x5426;&#x5219;&#x6807;&#x6CE8;&#x4E3A;0&#xFF0C;&#x6BCF;&#x4E2A;&#x6807;&#x6CE8;&#x5355;&#x5143;&#x8BB0;&#x4F5C;\(y^{&lt;t&gt;}\) &#x8BA1;&#x7B97;&#x673A;&#x5728;&#x5B58;&#x50A8;\(x^{&lt;t&gt;}\) &#x65F6;&#x4E5F;&#x4E0D;&#x518D;&#x4FDD;&#x5B58;&#x5177;&#x4F53;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x800C;&#x662F;&#x5148;&#x5EFA;&#x7ACB;&#x8BCD;&#x5178;&#x2014;&#x2014;&#x5BF9;&#x6BCF;&#x4E2A;&#x5355;&#x8BCD;&#x7F16;&#x53F7;&#xFF0C;&#x518D;&#x4EE5;one&#x2212;hot&#x7684;&#x65B9;&#x5F0F;&#x8BB0;&#x5F55;\(x^{&lt;t&gt;}\)&#x5728;&#x8BCD;&#x5178;&#x4E2D;&#x7684;&#x7F16;&#x53F7;&#xFF1A; 1.3 &#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6A21;&#x578B; &#x8FD8;&#x4EE5;&#x7ED9;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x6807;&#x6CE8;&#x4EBA;&#x540D;&#x4E3A;&#x4F8B;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x5E38;&#x89C4;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x5B83;&#x6709;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x5165;&#x5C42;&#x8282;&#x70B9;&#x4E2A;&#x6570;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x6BCF;&#x4E2A;&#x53E5;&#x5B50;&#x7684;&#x957F;&#x5EA6;&#x5374;&#x662F;&#x53D8;&#x5316;&#x7684;&#xFF0C;&#x663E;&#x7136;&#x56FA;&#x5B9A;&#x7684;NN&#x7F51;&#x7EDC;&#x65E0;&#x6CD5;&#x9002;&#x7528;&#x4E8E;&#x53D8;&#x5316;&#x7684;&#x53E5;&#x5B50;&#x3002; &#x8BCD;&#x548C;&#x4F4D;&#x7F6E;&#x7279;&#x5F81;&#x7ED1;&#x6B7B;&#x5728;&#x4E00;&#x8D77;&#x4E86;&#xFF0C;&#x4ECE;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x5B66;&#x5230;&#x7684;&#x7279;&#x5F81;&#x65E0;&#x6CD5;&#x590D;&#x7528;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x4E0A;&#xFF0C;&#x8FD9;&#x548C;&#x5E38;&#x89C4;NN&#x89E3;&#x51B3;&#x56FE;&#x50CF;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x5377;&#x79EF;&#x89E3;&#x51B3;&#x4E86;&#x8BE5;&#x95EE;&#x9898;&#x3002; &#x56E0;&#x6B64;&#x5F15;&#x5165;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x6A21;&#x578B;&#x5982;&#x4E0B;&#xFF1A; &#x5148;&#x770B;&#x7EB5;&#x5411;&#xFF0C;&#x6BCF;&#x4E00;&#x5217;&#x662F;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x8F93;&#x51FA;&#x662F;&#x5426;&#x4E3A;&#x4EBA;&#x540D;&#xFF1B;&#x518D;&#x770B;&#x6A2A;&#x5411;&#xFF0C;&#x53C8;&#x662F;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8003;&#x8651;&#x4E86;&#x5355;&#x8BCD;&#x7684;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x3002;&#x7EB5;&#x5411;NN&#x8BAD;&#x7EC3;&#x51FA;&#x4E00;&#x5957;&#x53C2;&#x6570;&#xFF0C;&#x6A2A;&#x5411;NN&#x8BAD;&#x7EC3;&#x51FA;&#x53E6;&#x4E00;&#x5957;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x4E0D;&#x4F9D;&#x8D56;&#x7EB5;&#x5411;NN&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5373;&#x4E0D;&#x4F9D;&#x8D56;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x7684;&#x5355;&#x8BCD;&#x4E2A;&#x6570;&#x3002; &#x6211;&#x4E0D;&#x592A;&#x786E;&#x5B9A;&#x5BF9;&#x4E8E;&#x6A21;&#x578B;&#x89E3;&#x51B3;&#x7B2C;&#x4E8C;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7406;&#x89E3;&#x662F;&#x5426;&#x6B63;&#x786E;&#xFF1A;&#x5B83;&#x901A;&#x8FC7;&#x4E00;&#x5957;&#x53C2;&#x6570;&#x8BAD;&#x7EC3;&#x5355;&#x8BCD;&#x5728;&#x4E0D;&#x540C;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x800C;&#x4E0D;&#x50CF;&#x5E38;&#x89C4;NN&#x5728;&#x4E0D;&#x540C;&#x4F4D;&#x7F6E;&#x5BF9;&#x5E94;&#x4E0D;&#x540C;&#x7684;w&#x53C2;&#x6570;&#x3002;&#x4ECE;&#x800C;&#x89E3;&#x51B3;&#x4E86;&#x590D;&#x7528;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x6211;&#x603B;&#x89C9;&#x5F97;&#x6709;&#x70B9;&#x4E0D;&#x5BF9;&#x52B2;&#xFF0C;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6A21;&#x578B;&#x770B;&#x8D77;&#x6765;&#x4E00;&#x6837;&#x6709;&#x548C;&#x5E8F;&#x5217;&#x7ED1;&#x6B7B;&#x7684;&#x95EE;&#x9898;&#x5440;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;Waa&#x4F1A;&#x8BB0;&#x5FC6;&#x5E8F;&#x5217;&#x4FE1;&#x606F;&#x3002; &#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; &#x53EF;&#x4EE5;&#x505A;&#x4E00;&#x4E2A;&#x7B80;&#x5316;&#xFF0C;&#x5C06;Waa&#x548C;Wax&#x6A2A;&#x5411;&#x6392;&#x5217;&#x79F0;&#x4E3A;Wa&#xFF0C;&#x5C06;\(a^{&lt;t&#x2212;1&gt;}\) &#x548C;\(x^{&lt;t&gt;}\) &#x7EB5;&#x5411;&#x6392;&#x5217;&#x79F0;&#x4E3A;\([a^{&lt;t&#x2212;1&gt;}, x^{&lt;t&gt;}]\) 1.4 &#x901A;&#x8FC7;&#x65F6;&#x95F4;&#x7684;&#x53CD;&#x5411;&#x4F20;&#x64AD; &#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x662F;&#x57FA;&#x4E8E;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x548C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#xFF0C;&#x5148;&#x6765;&#x770B;&#x635F;&#x5931;&#x51FD;&#x6570;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x548C;&#x5E38;&#x89C4;NN&#x5B9A;&#x4E49;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5176;&#x4E2D;\(y^{&lt;t&gt;}\) &#x662F;&#x6807;&#x6CE8;&#x503C;&#xFF0C;&#x7528;0/1&#x8868;&#x793A;&#x8BE5;&#x8BCD;&#x662F;&#x5426;&#x4E3A;&#x4EBA;&#x540D;&#xFF0C;\(&#x177;^{&lt;t&gt;}\)&#x662F;&#x8BA1;&#x7B97;&#x6240;&#x5F97;&#x8BE5;&#x8BCD;&#x662F;&#x5426;&#x4E3A;&#x4EBA;&#x540D;&#x7684;&#x6982;&#x7387;&#x3002;&#x603B;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x5C06;&#x8FD9;&#x4E9B;&#x5206;&#x91CF;&#x76F8;&#x52A0;&#xFF1A; &#x6709;&#x4E86;&#x635F;&#x5931;&#x51FD;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x9006;&#x5411;&#x8BA1;&#x7B97;&#x5404;&#x4E2A;&#x73AF;&#x8282;&#x7684;&#x504F;&#x5BFC;&#x6570;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x6C42;Wa&#x3001;ba&#x3001;Wy&#x3001;by&#x7684;&#x504F;&#x5BFC;&#xFF0C;&#x4ECE;&#x800C;&#x518D;&#x6267;&#x884C;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x66F4;&#x65B0;&#x5F97;&#x5230;&#x4E0B;&#x4E00;&#x8F6E;&#x8FED;&#x4EE3;&#x7684;&#x503C;&#x3002; 1.5 &#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC; &#x672C;&#x5468;&#x8BFE;&#x7A0B;&#x5F00;&#x59CB;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x90FD;&#x4E0D;&#x662F;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x4E2A;&#x6570;&#x76F8;&#x7B49;&#x4E14;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x7FFB;&#x8BD1;&#x3001;&#x8BED;&#x4E49;&#x5206;&#x6790;&#x7B49;&#xFF0C;&#x672C;&#x8282;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x51E0;&#x4E2A;&#x53D8;&#x578B;&#x3002; &#x9996;&#x5148;&#x662F;&#x591A;&#x5BF9;&#x4E00;&#x2014;&#x2014;&#x591A;&#x4E2A;&#x8F93;&#x5165;&#xFF0C;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x3002;&#x6839;&#x636E;&#x4E00;&#x6BB5;&#x8BC4;&#x8BBA;&#x7684;&#x6587;&#x5B57;&#xFF0C;&#x5206;&#x6790;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x8BC4;&#x5206;&#x5C31;&#x5C5E;&#x4E8E;&#x7C7B;&#x5E94;&#x7528;&#x3002;&#x4ED6;&#x7684;RNN&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF0C;&#x4EC5;&#x5728;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x6709;&#x8F93;&#x51FA;&#xFF1A; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x4E00;&#x5BF9;&#x591A;&#x7684;RNN&#xFF0C;&#x8F93;&#x5165;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x6216;&#x8005;&#x6CA1;&#x6709;&#xFF0C;&#x8F93;&#x51FA;&#x662F;&#x4E00;&#x6BB5;&#x4E50;&#x8C31;&#x3002;&#x548C;&#x5E38;&#x89C4;RNN&#x7A0D;&#x6709;&#x4E0D;&#x540C;&#x5728;&#x4E8E;&#x5B83;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x90FD;&#x4F5C;&#x4E3A;&#x4E0B;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8F93;&#x5165;&#xFF1A; &#x4E0B;&#x9762;&#x662F;&#x591A;&#x5BF9;&#x591A;&#x7684;RNN&#x6A21;&#x578B;&#xFF0C;&#x7FFB;&#x8BD1;&#x662F;&#x8FD9;&#x7C7B;&#x7684;&#x5178;&#x578B;&#x5E94;&#x7528;&#xFF0C;&#x4ED6;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x7684;&#x8282;&#x70B9;&#x4E2A;&#x6570;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x3002;&#x8F93;&#x5165;&#x90E8;&#x5206;&#x4F5C;&#x4E3A;&#x7F16;&#x7801;&#x5668;&#x662F;&#x4E00;&#x4E2A;RNN&#x7F51;&#x7EDC;&#xFF0C;&#x8F93;&#x51FA;&#x90E8;&#x5206;&#x4F5C;&#x4E3A;&#x89E3;&#x7801;&#x5668;&#x662F;&#x53E6;&#x4E00;&#x4E2A;RNN&#x7F51;&#x7EDC;&#xFF1A; 1.6 &#x8BED;&#x8A00;&#x6A21;&#x578B;&#x548C;&#x5E8F;&#x5217;&#x751F;&#x6210; &#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x7CFB;&#x7EDF;&#x901A;&#x5E38;&#x8981;&#x914D;&#x5408;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x624D;&#x80FD;&#x8F93;&#x51FA;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x5019;&#x9009;&#xFF0C;&#x524D;&#x8005;&#x6839;&#x636E;&#x8F93;&#x5165;&#x8BED;&#x97F3;&#x751F;&#x6210;&#x4E0E;&#x4E4B;&#x5339;&#x914D;&#x7684;&#x5355;&#x8BCD;&#x5E8F;&#x5217;&#xFF0C;&#x540E;&#x8005;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x8BA1;&#x7B97;&#x6982;&#x7387;&#x4ECE;&#x800C;&#x9009;&#x62E9;&#x6700;&#x53EF;&#x80FD;&#x7684;&#x53E5;&#x5B50;&#x3002;RNN&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x751F;&#x6210;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x3002;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x7684;&#x8F93;&#x51FA;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x5E8F;&#x5217;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#xFF1A; &#x4E3A;&#x8BED;&#x8A00;&#x6A21;&#x578B;&#x751F;&#x6210;RNN&#x7684;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1&#x3001;&#x5C06;&#x8BED;&#x6599;&#x5E93;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x7684;&#x6BCF;&#x4E2A;&#x5355;&#x8BCD;&#x8F6C;&#x6210;one-hot&#x77E9;&#x9635;&#xFF0C;&#x5E76;&#x52A0;&#x5165;&#x7ED3;&#x5C3E;&#x6807;&#x8BB0;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B57;&#x5178;&#x4E2D;&#x6CA1;&#x6709;&#x7684;&#x5355;&#x8BCD;&#xFF0C;&#x7ED9;&#x4ED6;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x6807;&#x8BB0;&#xFF1A; 2&#x3001;&#x5BF9;&#x8BED;&#x6599;&#x5E93;&#x4E2D;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x8BAD;&#x7EC3;&#x5982;&#x4E0B;&#x7F51;&#x7EDC;&#xFF1A; &#x8BE5;&#x7F51;&#x7EDC;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8F93;&#x5165;&#x662F;&#x5F53;&#x524D;&#x7B2C;i&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x8F93;&#x51FA;&#x5219;&#x662F;&#x5728;&#x524D;&#x9762;&#x8F93;&#x5165;&#x5E8F;&#x5217;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5404;&#x4E2A;&#x5355;&#x8BCD;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;&#x3002;&#x6BD4;&#x5982;y^1 &#x8868;&#x793A;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x5165;&#x65F6;&#xFF0C;P(a)&#x3001;P(anron)&#x3001;&#x2026;&#x2026;&#x3001;P(&lt;UNK&gt;)&#x3001;P(&lt;EOS&gt;)&#x7684;&#x6982;&#x7387;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF1B;y^2&#x8868;&#x793A;&#x5F53;&#x8F93;&#x5165;Cats&#x65F6;&#xFF0C;P(a)&#x3001;P(anron)&#x3001;&#x2026;&#x2026;&#x3001;P(&lt;UNK&gt;)&#x3001;P(&lt;EOS&gt;)&#x7684;&#x6982;&#x7387;&#xFF0C;&#x5373;P(a|Cats)&#x3001;P(anron|Cats)&#x3001;&#x2026;&#x2026;&#x3001;P(&lt;UNK&gt;|Cats)&#x3001;P(&lt;EOS&gt;|Cats)&#x7684;&#x6982;&#x7387;&#x3002;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002; &#x5B9A;&#x4E49;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF0C;&#x5C06;&#x5B83;&#x4EEC;&#x52A0;&#x548C;&#x5373;&#x4E3A;&#x603B;&#x7B97;&#x662F;&#x51FD;&#x6570;&#x3002; 1.7 &#x5BF9;&#x65B0;&#x5E8F;&#x5217;&#x91C7;&#x6837; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x770B;&#x4E00;&#x4E2A;&#x8BAD;&#x7EC3;&#x5B8C;&#x6210;&#x7684;RNN&#x90FD;&#x5B66;&#x5230;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x672C;&#x8282;&#x7684;&#x65B9;&#x6CD5;&#x4F3C;&#x4E4E;&#x53EA;&#x80FD;&#x7528;&#x6765;&#x505A;&#x5199;&#x4F5C;&#x673A;&#x5668;&#x4EBA;&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#x6211;&#x60F3;&#x4E0D;&#x5230;&#x8FD8;&#x80FD;&#x7528;&#x6765;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x4E0D;&#x6E05;&#x695A;&#x8FD9;&#x4E2A;&#x91C7;&#x6837;&#x8FD8;&#x6709;&#x54EA;&#x4E9B;&#x7528;&#x9014;&#x3002; &#x65B9;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x4EC0;&#x4E48;&#x4E5F;&#x4E0D;&#x8F93;&#x5165;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x770B;&#xFF0C;&#x5728;RNN&#x7B2C;&#x4E00;&#x5355;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x4E2D;&#x968F;&#x673A;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x4F5C;&#x4E3A;&#x4E0B;&#x4E00;&#x5355;&#x5143;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x518D;&#x5728;&#x4E0B;&#x4E00;&#x5355;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x4E2D;&#x968F;&#x673A;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#xFF0C;&#x6301;&#x7EED;&#x64CD;&#x4F5C;&#x76F4;&#x81F3;&#x7ED3;&#x675F;&#x3002; &#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5F53;&#x7136;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x53EF;&#x4EE5;&#x662F;&#x5355;&#x8BCD;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5B57;&#x6BCD;&#xFF0C;&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x5728;&#x8BAD;&#x7EC3;&#x7684;&#x65F6;&#x5019;&#x7684;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x7C92;&#x5EA6;&#x3002;&#x672C;&#x8282;&#x8C8C;&#x4F3C;&#x53EA;&#x8BB2;&#x4E86;&#x4EE5;&#x5355;&#x8BCD;&#x4E3A;&#x5B57;&#x5178;&#x7684;RNN&#x7684;&#x4F18;&#x70B9;&#xFF1A;&#x5929;&#x7136;&#x4FDD;&#x8BC1;&#x4E86;&#x4E0D;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x65E0;&#x610F;&#x4E49;&#x7684;&#x5355;&#x8BCD;&#xFF1B;&#x66F4;&#x5BB9;&#x6613;&#x6355;&#x6349;&#x5355;&#x8BCD;&#x4E0E;&#x5355;&#x8BCD;&#x4E4B;&#x95F4;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x5173;&#x7CFB;&#xFF1B;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x6BD4;&#x8F83;&#x4F4E;&#x3002;&#x6211;&#x7684;&#x76F4;&#x89C2;&#x611F;&#x53D7;&#xFF0C;&#x4EE5;&#x5B57;&#x6BCD;&#x4E3A;&#x5B57;&#x5178;&#x7684;RNN&#x4F3C;&#x4E4E;&#x5728;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x4E2D;&#x4E0D;&#x662F;&#x4E2A;&#x597D;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x6BD5;&#x7ADF;&#x8BED;&#x8A00;&#x662F;&#x57FA;&#x4E8E;&#x5355;&#x8BCD;&#x800C;&#x4E0D;&#x662F;&#x5B57;&#x6BCD;&#x7684;&#x3002; 1.8 &#x5E26;&#x6709;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x68AF;&#x5EA6;&#x6D88;&#x5931; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x5E38;&#x89C4;RNN&#x7684;&#x4E00;&#x4E2A;&#x7F3A;&#x9677;&#x2014;&#x2014;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#xFF0C;&#x4EE5;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x4E3A;&#x4F8B;&#xFF0C;&#x5F53;&#x7F51;&#x7EDC;&#x5C42;&#x6B21;&#x8F83;&#x6DF1;&#x65F6;&#x5B83;&#xFF0C;&#x7F51;&#x7EDC;&#x5F88;&#x96BE;&#x5B66;&#x5230;&#x8DDD;&#x79BB;&#x6BD4;&#x8F83;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x957F;&#x53E5;&#x4E3B;&#x8BED;&#x662F;&#x5355;&#x6570;&#x6216;&#x590D;&#x6570;&#xFF0C;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x8C13;&#x8BED;was&#x6216;were&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5F53;&#x7F51;&#x7EDC;&#x8F83;&#x6DF1;&#x65F6;&#xFF0C;&#x5F88;&#x96BE;&#x5B66;&#x5230;&#x8FD9;&#x79CD;&#x5173;&#x7CFB;&#x3002; &#x672C;&#x8282;&#x4EC5;&#x4ECB;&#x7ECD;&#x4E86;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x9700;&#x8981;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x5B66;&#x4E60;&#x3002; 1.9 GRU&#xFF08;Gated Recurrent Unit&#xFF09;&#x95E8;&#x63A7;&#x5355;&#x5143; &#x672C;&#x8282;&#x662F;&#x6211;&#x5B66;&#x8FC7;&#x7684;&#x6700;&#x96BE;&#x7406;&#x89E3;&#x7684;&#x4E00;&#x8282;&#x8BFE;&#x3002;&#x5148;&#x7B80;&#x5355;&#x5730;&#x63CF;&#x8FF0;&#x4E0B;&#x6211;&#x7684;&#x7406;&#x89E3;&#xFF1A;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x6DF1;&#x5C42;&#x7F51;&#x7EDC;&#x4F1A;&#x4E22;&#x5931;&#x76F8;&#x9694;&#x8F83;&#x8FDC;&#x5355;&#x5143;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x672C;&#x8282;&#x5F15;&#x5165;&#x4E86;&#x8BB0;&#x5FC6;&#x5355;&#x5143;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x518D;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x7528;&#x6765;&#x8BB0;&#x5FC6;&#x5B83;&#x5230;&#x8FDC;&#x7AEF;&#x5355;&#x5143;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x8FD9;&#x4E2A;&#x8BB0;&#x5FC6;&#x5355;&#x5143;&#x672C;&#x8EAB;&#x4E5F;&#x662F;&#x9700;&#x8981;&#x5B66;&#x4E60;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x7684;&#x8868;&#x793A;&#x5F62;&#x5F0F;&#x975E;&#x5E38;&#x590D;&#x6742;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x4E86;&#x8BE5;&#x65B9;&#x6CD5;&#x4E0D;&#x597D;&#x7406;&#x89E3;&#x3002; &#x672C;&#x8282;&#x6709;&#x4E24;&#x7BC7;&#x76F8;&#x5173;&#x7684;&#x8BBA;&#x6587;&#xFF1A;&#x300A;On the properties of neural machine translation: Encoder-decoder approaches&#x300B; &#x548C;&#x300A;Empirical Evaluation of Gated Recurrent Neural Networks on Sequence Modeling&#x300B;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x6211;&#x5C1D;&#x8BD5;&#x7740;&#x7406;&#x89E3;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x3002;&#x5148;&#x770B;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;GRU&#x4E3A;&#x6BCF;&#x4E2A;RNN&#x5355;&#x5143;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;\(c^{&lt;t&gt;}\) &#x548C;&#x8BB0;&#x5FC6;&#x95E8;\(&#x393;_u\) &#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;\(c^{&lt;t&gt;}\) &#x7528;&#x6765;&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x5355;&#x5143;&#x548C;&#x524D;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x76F8;&#x5173;&#x5EA6;&#xFF0C;&#x8BB0;&#x5FC6;&#x95E8;\(&#x393;_u\) &#x7528;&#x6765;&#x8C03;&#x6574;&#x76F8;&#x5173;&#x5EA6;&#x7684;&#x6743;&#x91CD;&#x3002;\(&#x393;_u\) &#x8D8A;&#x63A5;&#x8FD1;0&#xFF0C;&#x8868;&#x660E;&#x672C;&#x5C42;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#x8D8A;&#x503E;&#x5411;&#x4E8E;&#x76F4;&#x63A5;&#x6CBF;&#x7528;&#x4E0A;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#xFF1B;&#x8D8A;&#x63A5;&#x8FD1;1&#xFF0C;&#x8868;&#x660E;&#x8D8A;&#x503E;&#x5411;&#x4E8E;&#x4F7F;&#x7528;&#x4E0A;&#x4E00;&#x5C42;&#x8BB0;&#x5FC6;&#x7EC6;&#x80DE;&#x548C;&#x672C;&#x5C42;&#x8F93;&#x5165;&#x7684;&#x8C03;&#x548C;&#x503C;\(\tilde{c}^{&lt;t&gt;}\) &#x5230;&#x8FD9;&#x91CC;&#x5C31;&#x5DF2;&#x7ECF;&#x591F;&#x590D;&#x6742;&#x4E86;&#xFF0C;&#x4F46;&#x8FD9;&#x8FD8;&#x53EA;&#x662F;GRU&#x7684;&#x7B80;&#x5316;&#x7248;&#x672C;&#xFF0C;&#x5E38;&#x89C4;&#x7248;&#x672C;&#x8FD8;&#x8981;&#x5728;&#x8C03;&#x548C;&#x503C;\(\tilde{c}^{&lt;t&gt;}\) &#x7684;&#x8FD0;&#x7B97;&#x4E2D;&#x518D;&#x52A0;&#x5165;&#x4E00;&#x4E2A;&#x76F8;&#x5173;&#x7CFB;&#x6570;\(&#x393;_r\) &#x60CA;&#x53F9;&#x4E8E;&#x8FD9;&#x4E48;&#x590D;&#x6742;&#x7684;&#x516C;&#x5F0F;&#xFF0C;&#x6570;&#x5B66;&#x5BB6;&#x4EEC;&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x4E3A;&#x8FD9;&#x4E9B;&#x77E9;&#x9635;&#x6DFB;&#x52A0;&#x4EC0;&#x4E48;&#x53C2;&#x6570;&#xFF0C;&#x4E03;&#x641E;&#x516B;&#x641E;&#x5C31;&#x641E;&#x51FA;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x62DF;&#x5408;&#x73B0;&#x5B9E;&#x7684;&#x7B97;&#x5F0F;&#xFF01; 1.10 &#x957F;&#x77ED;&#x671F;&#x8BB0;&#x5FC6;&#xFF08;LSTM&#xFF09; &#x957F;&#x77ED;&#x671F;&#x8BB0;&#x5FC6;&#x7684;&#x8BBA;&#x6587;&#x662F;&#x300A;Long short-term memory&#x300B; &#x5B83;&#x662F;&#x5728;GRU&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x6F14;&#x5316;&#x51FA;&#x6765;&#x7684;&#x3002;&#x7406;&#x89E3;&#x4E86;GRU&#x4E4B;&#x540E;&#xFF0C;&#x5411;LSTM&#x7684;&#x6F14;&#x5316;&#x5C31;&#x4E0D;&#x662F;&#x5F88;&#x96BE;&#x7406;&#x89E3;&#x4E86;&#x3002;GRU&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x95E8;\(&#x393;_u\) &#x6765;&#x63A7;&#x5236;&#x4F7F;&#x7528;&#x524D;&#x4E00;&#x4E2A;&#x8BB0;&#x5FC6;&#x5355;&#x5143;&#x8FD8;&#x662F;&#x4F7F;&#x7528;&#x8C03;&#x548C;&#x503C;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x9009;&#x62E9;&#x662F;&#x6B64;&#x6D88;&#x5F7C;&#x957F;&#x7684;&#xFF1B;&#x800C;LSTM&#x7684;&#x601D;&#x8DEF;&#x662F;&#x7528;&#x4E24;&#x4E2A;&#x95E8;&#x5206;&#x522B;&#x63A7;&#x5236;&#x4E8C;&#x8005;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x5B83;&#x8BA4;&#x4E3A;&#x8BB0;&#x5FC6;&#x548C;&#x5FD8;&#x5374;&#x4E0D;&#x662F;&#x6B64;&#x6D88;&#x5F7C;&#x957F;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4F7F;&#x7528;&#x8BB0;&#x5FC6;&#x95E8;\(&#x393;_u\) &#x548C;&#x5FD8;&#x5374;&#x95E8;\(&#x393;_f\) &#x5206;&#x522B;&#x63A7;&#x5236;\(\tilde{c}^{&lt;t&gt;}\) &#x548C;\(c^{&lt;t&#x2212;1&gt;}\) &#x7684;&#x6743;&#x91CD;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x7528;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x95E8;\(&#x393;_o\) &#x63A7;&#x5236;&#x603B;&#x6743;&#x91CD;&#x3002; &#x903B;&#x8F91;&#x8FD8;&#x662F;&#x633A;&#x6E05;&#x6670;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x4ECE;&#x516C;&#x5F0F;&#x4E0A;&#x66F4;&#x7B80;&#x6D01;&#x5730;&#x53CD;&#x6620;&#x4E86;&#x8FD9;&#x4E2A;&#x903B;&#x8F91;&#xFF0C;&#x8BFE;&#x4EF6;&#x914D;&#x7684;&#x56FE;&#x793A;&#x53CD;&#x800C;&#x6709;&#x4E9B;&#x590D;&#x6742;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x770B;&#x4E86;&#x3002; GRU&#x548C;LSTM&#x7684;&#x601D;&#x60F3;&#x90FD;&#x662F;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x5355;&#x5143;&#x4E4B;&#x95F4;&#x7275;&#x4E86;&#x4E00;&#x6839;&#x7EBF;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x5B66;&#x4E60;&#x6765;&#x51B3;&#x5B9A;&#x7EBF;&#x7684;&#x957F;&#x77ED;&#xFF0C;&#x8FD9;&#x8BA9;&#x6211;&#x60F3;&#x8D77;&#x524D;&#x9762;&#x8BFE;&#x7A0B;&#x91CC;&#x8BB2;&#x7684;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#xFF0C;&#x6211;&#x611F;&#x89C9;&#x4E8C;&#x8005;&#x6709;&#x7740;&#x540C;&#x6837;&#x7684;&#x76EE;&#x7684;&#x3002; 1.11 &#x53CC;&#x5411;&#x5E8F;&#x5217;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;BRNN &#x5E38;&#x89C4;RNN&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x9677;&#xFF0C;&#x5C31;&#x662F;&#x6BCF;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x4EC5;&#x4F9D;&#x8D56;&#x524D;&#x4E00;&#x4E2A;&#x5355;&#x5143;&#x3002;&#x672C;&#x8282;&#x4E3E;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; He said, &quot;Teddy bears are on sale!&quot; He said, &quot;Teddy Roosevelt was a great President!&quot; &#x8FD9;&#x4E24;&#x53E5;&#x8BDD;&#x4E2D;Teddy&#x662F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x4EBA;&#x540D;&#xFF0C;&#x4EC5;&#x4ECE;&#x524D;&#x9762;&#x7684;&#x5355;&#x8BCD;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x770B;&#x540E;&#x9762;&#x7684;&#x5355;&#x8BCD;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x5C31;&#x9700;&#x8981;&#x53CC;&#x5411;&#x5E8F;&#x5217;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;BRNN&#x6765;&#x89E3;&#x51B3;&#x4E86;&#x3002; BRNN&#x7684;&#x7ED3;&#x6784;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x5728;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x4E0D;&#x4EC5;&#x653E;&#x7F6E;&#x4E86;&#x6B63;&#x5411;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#xFF0C;&#x4E5F;&#x653E;&#x7F6E;&#x4E00;&#x4E2A;&#x53CD;&#x5411;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x3002;&#x5728;&#x6267;&#x884C;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x6CBF;&#x7740;&#x6B63;&#x65B9;&#x5411;&#x8BA1;&#x7B97;&#x5230;&#x672B;&#x8282;&#x70B9;&#xFF0C;&#x518D;&#x53CD;&#x65B9;&#x5411;&#x8BA1;&#x7B97;&#x5230;&#x521D;&#x8282;&#x70B9;&#xFF0C;&#x5F97;&#x51FA;&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#x7684;a&#xFF0C;&#x518D;&#x6267;&#x884C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x3002; &#x8FD8;&#x8BB0;&#x5F97;&#x6B63;&#x5411;&#x7684;a&#x662F;&#x7531;&#x524D;&#x4E00;&#x4E2A;a&#x548C;x&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#xFF1A; &#x53CD;&#x5411;&#x7684;a&#x4E5F;&#x9700;&#x8981;&#x7531;&#x524D;&#x4E00;&#x4E2A;a&#x548C;x&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#xFF0C;&#x8FD9;&#x5C31;&#x610F;&#x5473;&#x7740;&#x65E0;&#x8BBA;&#x662F;&#x5728;&#x8BAD;&#x7EC3;&#x8FD8;&#x662F;&#x5728;&#x9884;&#x6D4B;&#x65F6;&#xFF0C;&#x90FD;&#x8981;&#x6C42;&#x6240;&#x6709;&#x8282;&#x70B9;&#x90FD;&#x5C31;&#x7EEA;&#x4E86;&#x624D;&#x80FD;&#x5F00;&#x59CB;&#x8FD0;&#x7B97;&#x3002;&#x56E0;&#x6B64;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x65E0;&#x6CD5;&#x6EE1;&#x8DB3;&#x8FB9;&#x8BF4;&#x8FB9;&#x51FA;&#x8BCD;&#x7684;&#x8BED;&#x97F3;&#x8F93;&#x5165;&#xFF0C;&#x5FC5;&#x987B;&#x7B49;&#x4E00;&#x53E5;&#x8BDD;&#x8BF4;&#x5B8C;&#x4E86;&#x624D;&#x80FD;&#x5F00;&#x59CB;&#x8FD0;&#x7B97;&#x3002; 1.12 &#x6DF1;&#x5C42;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x7684;&#x6DF1;&#x5C42;RNN&#x7ED3;&#x6784;&#x56FE;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x5206;&#x522B;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x5C42;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8FD9;&#x4E9B;&#x5C42;&#x6B21;&#x7684;&#x6A2A;&#x5411;&#x548C;&#x7EB5;&#x5411;&#x8FDE;&#x6210;&#x4E00;&#x5F20;&#x8BA1;&#x7B97;&#x7F51;&#x3002;&#x5982;&#x679C;&#x5E94;&#x7528;&#x5728;NLP&#x4E0A;&#xFF0C;&#x5176;&#x8FD0;&#x7B97;&#x8D1F;&#x8377;&#x53EF;&#x60F3;&#x800C;&#x77E5;&#xFF0C;&#x901A;&#x5E38;&#x8FD9;&#x6837;&#x7684;&#x7F51;&#x7EDC;&#x5728;&#x7F51;&#x72B6;&#x7684;&#x90E8;&#x5206;&#x6700;&#x591A;&#x4E5F;&#x5C31;&#x4E09;&#x5C42;&#xFF0C;&#x5728;&#x6839;&#x6DF1;&#x7684;&#x5C42;&#x6B21;&#x4E0A;&#x5C31;&#x4E0D;&#x518D;&#x6A2A;&#x5411;&#x8FDE;&#x63A5;&#x4E86;&#x3002; &#x5728;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x4EE5;&#x53CA;&#x6A2A;&#x5411;&#x5173;&#x7CFB;&#x4E0A;&#xFF0C;&#x4ED6;&#x4EEC;&#x53EF;&#x4EE5;&#x662F;GRU&#x3001;LSTM&#x6216;&#x8005;BRNN&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（十二）]]></title>
    <url>%2F2018%2F04%2F18%2F2018%2F0418DeepLearningAI14%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x7B2C;&#x56DB;&#x5468;&#x300A;&#x7279;&#x6B8A;&#x5E94;&#x7528;&#xFF1A;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x548C;&#x795E;&#x7ECF;&#x98CE;&#x683C;&#x8F6C;&#x6362;&#x300B;&#x3002; &#x672C;&#x5468;&#x5185;&#x5BB9;&#x4ECE;&#x6807;&#x9898;&#x53CD;&#x5E94;&#x5F88;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x548C;&#x666E;&#x901A;&#x7684;CNN&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x88AB;&#x8BC6;&#x522B;&#x7684;&#x4EBA;&#x8138;&#x53EF;&#x80FD;&#x65E0;&#x6CD5;&#x4E8B;&#x5148;&#x6536;&#x5230;&#x5F88;&#x591A;&#x6570;&#x636E;&#x3002;&#x6BD4;&#x5982;&#x95E8;&#x7981;&#x7CFB;&#x7EDF;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x4EC5;&#x4E0A;&#x4F20;&#x51E0;&#x5F20;&#x5934;&#x50CF;&#xFF0C;&#x5C31;&#x8981;&#x6C42;&#x80FD;&#x591F;&#x5206;&#x8FA8;&#x5F53;&#x524D;&#x5237;&#x8138;&#x7684;&#x662F;&#x8C01;&#x3002; 4.1 &#x4EC0;&#x4E48;&#x662F;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#xFF1F; &#x4EBA;&#x8138;&#x7684;&#x9A8C;&#x8BC1;&#x662F;&#x8F93;&#x5165;&#x4EBA;&#x8138;&#x56FE;&#x7247;&#x548C;ID&#xFF0C;&#x5224;&#x65AD;&#x8BE5;&#x56FE;&#x7247;&#x662F;&#x4E0D;&#x662F;ID&#x6240;&#x58F0;&#x79F0;&#x7684;&#x90A3;&#x4E2A;&#x4EBA;&#x3002; &#x800C;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x5219;&#x662F;&#x4FDD;&#x7559;K&#x4E2A;&#x4EBA;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6839;&#x636E;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x8BC6;&#x522B;&#x51FA;&#x4ED6;&#x662F;&#x54EA;&#x4E2A;&#x4EBA;&#x3002; &#x800C;&#x8FD9;&#x867D;&#x7136;&#x4F7F;&#x7528;&#x7684;&#x6280;&#x672F;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x4F46;&#x5728;&#x7ED3;&#x679C;&#x8981;&#x6C42;&#x4E0A;&#x6709;&#x91CF;&#x7EA7;&#x7684;&#x5DEE;&#x5F02;&#x3002;&#x6BD4;&#x5982;&#x4EBA;&#x8138;&#x9A8C;&#x8BC1;&#x7684;&#x8BEF;&#x5DEE;&#x7387;&#x662F;1%&#xFF0C;&#x540C;&#x6837;&#x7684;&#x6280;&#x672F;&#x5982;&#x679C;&#x5E94;&#x7528;&#x5728;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x4E0A;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x5BF9;k&#x4E2A;&#x4EBA;&#x6267;&#x884C;k&#x6B21;&#x9A8C;&#x8BC1;&#xFF0C;&#x8FD9;&#x4F1A;&#x628A;&#x8BEF;&#x5DEE;&#x7387;&#x653E;&#x5927;k&#x500D;&#xFF0C;1%&#x7684;&#x9A8C;&#x8BC1;&#x8BEF;&#x5DEE;&#x7387;&#x663E;&#x7136;&#x5C31;&#x4E0D;&#x80FD;&#x63A5;&#x53D7;&#x4E86;&#x3002; 4.2 One-Shot&#x5B66;&#x4E60; &#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x96BE;&#x70B9;&#x5728;&#x4E8E;&#x89E3;&#x51B3;&#x4E00;&#x6B21;&#x5B66;&#x4E60;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x7CFB;&#x7EDF;&#x63A5;&#x6536;&#x5F88;&#x5C11;&#x7684;&#x91C7;&#x6837;&#x5C31;&#x80FD;&#x5728;&#x672A;&#x6765;&#x7684;&#x68C0;&#x6D4B;&#x4E2D;&#x51C6;&#x786E;&#x5224;&#x65AD;&#x88AB;&#x9A8C;&#x8BC1;&#x7684;&#x4EBA;&#x662F;&#x5426;&#x5408;&#x6CD5;&#x3002;&#x901A;&#x5E38;&#x642D;&#x5EFA;&#x516C;&#x53F8;&#x7684;&#x95E8;&#x7981;&#x7CFB;&#x7EDF;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x4E5F;&#x5C31;&#x4E0A;&#x4F20;&#x4E00;&#x5F20;&#x5934;&#x50CF;&#xFF0C;&#x5C31;&#x8981;&#x6C42;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x5DE5;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x91C7;&#x7528;&#x5E38;&#x89C4;&#x7684;CNN&#x5BF9;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#xFF0C;&#x6027;&#x80FD;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x592A;&#x7406;&#x60F3;&#x3002;&#x800C;&#x4E14;&#x5982;&#x679C;&#x6BCF;&#x65B0;&#x589E;&#x4E00;&#x540D;&#x5458;&#x5DE5;&#x5C31;&#x8981;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#xFF0C;&#x4E5F;&#x662F;&#x5F88;&#x4E0D;&#x73B0;&#x5B9E;&#x7684;&#x3002; &#x5728;&#x5B9E;&#x9645;&#x7684;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x8BAD;&#x7EC3;&#x51FA;&#x6765;&#x7684;&#x5176;&#x5B9E;&#x662F;&#x4EBA;&#x8138;diff&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x63A5;&#x6536;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#x4E24;&#x5F20;&#x5934;&#x50CF;&#xFF0C;&#x8FD4;&#x56DE;&#x8FD9;&#x4E24;&#x4E2A;&#x5934;&#x50CF;&#x7684;&#x76F8;&#x4F3C;&#x5EA6;&#xFF0C;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x67D0;&#x4E2A;&#x9608;&#x503C;&#x5219;&#x8BA4;&#x4E3A;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#xFF0C;&#x5426;&#x5219;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x4EBA;&#x3002;&#x4E8E;&#x662F;&#x51FD;&#x6570;&#x4E0D;&#x4F9D;&#x8D56;&#x5177;&#x4F53;&#x7684;&#x5934;&#x50CF;&#xFF0C;&#x5E76;&#x4E14;&#x589E;&#x51CF;&#x5458;&#x5DE5;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x51FD;&#x6570;&#x7684;&#x6027;&#x80FD;&#x3002; 4.3 Siamese&#x7F51;&#x7EDC; Siamese&#x7F51;&#x7EDC;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x901A;&#x8FC7;CNN&#x8BAD;&#x7EC3;&#x51FA;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x8BE5;&#x5411;&#x91CF;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x56FE;&#x7247;&#x7684;&#x552F;&#x4E00;&#x7F16;&#x7801;&#x3002;&#x5B9A;&#x4E49;&#x51FD;&#x6570;d&#x4E3A;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#x7684;&#x8303;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x56FE;&#x7247;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#xFF0C;&#x5219; \(d(x^{(1)} , x^{(2)} )\)&#x5F88;&#x5C0F;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#x5219;&#x5F88;&#x5927;&#xFF0C;&#x4F7F;&#x7528;&#x8FD9;&#x6837;&#x7684;&#x903B;&#x8F91;&#x6765;&#x8BAD;&#x7EC3;CNN&#x3002; 4.4 Triplet&#x635F;&#x5931; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x600E;&#x4E48;&#x5B9A;&#x4E49;&#x4E09;&#x5143;&#x7EC4;&#x635F;&#x5931;&#x51FD;&#x6570;&#x6765;&#x5E94;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3002;&#x5148;&#x5F15;&#x5165;&#x51E0;&#x4E2A;&#x6982;&#x5FF5;&#xFF1A;&#x9996;&#x5148;&#x5B9A;&#x4E49;&#x6807;&#x7684;&#x56FE;&#x7247;&#x4E3A;Anchor&#xFF0C;&#x7136;&#x540E;&#x5728;&#x8BAD;&#x7EC3;&#x7684;&#x65F6;&#x5019;&#x5E0C;&#x671B;&#x6709;&#x4E00;&#x5F20;&#x548C;&#x6807;&#x7684;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x56FE;&#x7247;Positive&#xFF0C;&#x4EE5;&#x53CA;&#x548C;&#x6807;&#x7684;&#x4E0D;&#x540C;&#x4EBA;&#x7684;&#x56FE;&#x7247;Negative&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;Anchor-Positive&#x7684;&#x8303;&#x6570;&#xFF1C;Anchor-Negative&#x7684;&#x8303;&#x6570;&#x3002;&#x5373;\(||f(A)&#x2212;f(P)||^2+&#x3B1;&#x2264;||f(A)&#x2212;f(N)||^2\) &#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;L&#x548C;&#x6210;&#x672C;&#x51FD;&#x6570;J&#x5982;&#x4E0B;&#xFF1A; &#x5728;&#x7F51;&#x7EDC;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#xFF0C;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x5582;&#x5165;&#x591A;&#x5F20;(A, P, N)&#x5143;&#x7EC4;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x9700;&#x8981;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x5177;&#x5907;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x591A;&#x5F20;&#x7167;&#x7247;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x4ED6;&#x4EA7;&#x51FA;&#x7684;&#x662F;&#x4E0D;&#x4F9D;&#x8D56;&#x5177;&#x4F53;&#x56FE;&#x7247;&#x7684;d&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x5E94;&#x7528;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x9650;&#x5236;&#x7684;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x4EC5;&#x5728;&#x5E93;&#x4E2D;&#x4E3A;&#x6BCF;&#x4E2A;&#x4EBA;&#x4FDD;&#x7559;&#x4E00;&#x5F20;&#x7167;&#x7247;&#x3002; &#x5728;&#x8BAD;&#x7EC3;&#x7684;&#x65F6;&#x5019;&#x6709;&#x4E00;&#x4E2A;&#x7EC6;&#x8282;&#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#xFF0C;(A, P, N)&#x4E09;&#x5143;&#x7EC4;&#x7684;&#x9009;&#x62E9;&#x4E0D;&#x80FD;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x968F;&#x673A;&#x9009;&#x53D6;&#xFF0C;&#x56E0;&#x4E3A;&#x5DEE;&#x5F02;&#x5F88;&#x5927;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x6EE1;&#x8DB3;\(||f(A)&#x2212;f(P)||^2+&#x3B1;&#x2264;||f(A)&#x2212;f(N)||^2\)&#xFF0C;&#x8981;&#x60F3;&#x8BA9;&#x6A21;&#x578B;&#x6709;&#x6548;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x5C3D;&#x53EF;&#x80FD;&#x5582;&#x5165;&#x4E0D;&#x5BB9;&#x6613;&#x8FA8;&#x522B;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x8FD9;&#x4E5F;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x2014;&#x2014;&#x53EA;&#x6709;&#x76F8;&#x4F3C;&#x7684;&#x4E0D;&#x540C;&#x4EBA;&#x80FD;&#x533A;&#x5206;&#x51FA;&#x6765;&#xFF0C;&#x6A21;&#x578B;&#x5728;&#x672A;&#x6765;&#x7684;&#x5E94;&#x7528;&#x51C6;&#x786E;&#x7387;&#x624D;&#x66F4;&#x9AD8;&#x3002; &#x600E;&#x4E48;&#x6311;&#x9009;(A, P, N)&#x5728;&#x8BBA;&#x6587;&#x300A;FaceNet: A Unified Embedding for Face Recognition and Clustering&#x300B;&#x4E2D;&#x6709;&#x4ECB;&#x7ECD;&#x3002; &#x6839;&#x636E;d&#x51FD;&#x6570;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#xFF0C;&#x5176;&#x5B9E;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x6A21;&#x578B;&#x65E0;&#x9700;&#x81EA;&#x5DF1;&#x53BB;&#x505A;&#xFF0C;&#x81F3;&#x5C11;&#x6CA1;&#x5FC5;&#x8981;&#x4ECE;&#x5934;&#x505A;&#xFF0C;&#x5728;&#x524D;&#x4EBA;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5582;&#x5165;&#x66F4;&#x591A;&#x6570;&#x636E;&#xFF0C;&#x4EE4;&#x8FD9;&#x4E2A;d&#x51FD;&#x6570;&#x66F4;&#x7CBE;&#x51C6;&#xFF0C;&#x6700;&#x540E;&#x5927;&#x5BB6;&#x5728;&#x5404;&#x81EA;&#x7684;&#x56FE;&#x7247;&#x5E93;&#x4E2D;&#x5171;&#x7528;&#x8FD9;&#x4E2A;d&#x51FD;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; 4.5 &#x8138;&#x90E8;&#x9A8C;&#x8BC1;&#x4E0E;&#x4E8C;&#x5206;&#x7C7B; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x53E6;&#x4E00;&#x79CD;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x548C;Tripple&#x635F;&#x5931;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x628A;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x5F53;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x4E8C;&#x5206;&#x95EE;&#x9898;&#x3002;&#x5C06;&#x56FE;&#x7247;&#x5206;&#x4E3A;&#x76EE;&#x6807;&#x56FE;&#x7247;s&#x548C;&#x5F85;&#x8BC6;&#x522B;&#x7684;&#x56FE;&#x7247;d&#xFF0C;&#x7B97;&#x6CD5;&#x5BF9;&#x8FD9;&#x4E24;&#x5F20;&#x56FE;&#x7247;&#x5206;&#x522B;&#x5B8C;&#x6210;CNN&#x8FD0;&#x7B97;&#xFF0C;&#x8F93;&#x51FA;128&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x518D;&#x4EE5;&#x8FD9;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x8BAD;&#x7EC3;&#x53E6;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x8F93;&#x51FA;&#x4E8C;&#x5206;&#x7ED3;&#x679C;&#xFF1A; &#x5B83;&#x5176;&#x5B9E;&#x662F;&#x4E24;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x53E0;&#x52A0;&#xFF0C;&#x524D;&#x4E00;&#x4E2A;NN&#x8BAD;&#x7EC3;&#x4ECE;&#x56FE;&#x7247;&#x5230;128&#x53C2;&#x6570;&#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#xFF0C;&#x540E;&#x4E00;&#x4E2A;NN&#x8BAD;&#x7EC3;&#x4E24;&#x4E2A;128&#x53C2;&#x6570;&#x7684;&#x6BD4;&#x8F83;&#xFF0C;&#x5728;&#x540E;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x7EDD;&#x5BF9;&#x503C;&#x7684;&#x90E8;&#x5206;&#x4E5F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x6210;&#x5176;&#x5B83;&#x5F62;&#x5F0F;&#xFF0C;&#x5982;&#x7EFF;&#x8272;&#x7684;X&#x5E73;&#x65B9;&#x516C;&#x5F0F;&#x3002; &#x8FD9;&#x4E48;&#x8BAD;&#x7EC3;&#x51FA;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x53EF;&#x4EE5;&#x4E8B;&#x5148;&#x5BF9;&#x5458;&#x5DE5;&#x7167;&#x7247;&#x6267;&#x884C;&#x4E00;&#x904D;NN&#x8FD0;&#x7B97;&#xFF0C;&#x7F13;&#x5B58;&#x4ED6;&#x4EEC;&#x7684;128&#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF0C;&#x8FD9;&#x6837;&#x4EE5;&#x540E;&#x9700;&#x8981;&#x8BC6;&#x522B;&#x95E8;&#x53E3;&#x7684;&#x4EBA;&#x8138;&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5BF9;&#x8BE5;&#x4EBA;&#x8138;&#x6267;&#x884C;&#x4E00;&#x6B21;NN&#x8FD0;&#x7B97;&#x5373;&#x53EF;&#x3002;&#x6781;&#x5927;&#x5730;&#x964D;&#x4F4E;&#x4E86;&#x6BCF;&#x6B21;&#x8BC6;&#x522B;&#x7684;&#x8FD0;&#x7B97;&#x6210;&#x672C;&#x3002; &#x8BBA;&#x6587;&#x53C2;&#x89C1;&#x300A;deepface closing the gap to human level performance&#x300B; 4.6 &#x4EC0;&#x4E48;&#x662F;&#x795E;&#x7ECF;&#x98CE;&#x683C;&#x8F6C;&#x6362;&#xFF1F; &#x98CE;&#x683C;&#x8F6C;&#x6362;&#x5C31;&#x662F;&#x5C06;&#x5185;&#x5BB9;&#x56FE;&#x7247;&#x548C;&#x98CE;&#x683C;&#x56FE;&#x7247;&#x5408;&#x6210;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x53D6;&#x524D;&#x8005;&#x7684;&#x5185;&#x5BB9;&#x548C;&#x540E;&#x8005;&#x7684;&#x753B;&#x98CE;&#xFF1A; 4.7 &#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x5728;&#x5B66;&#x4EC0;&#x4E48;&#xFF1F; &#x8FD9;&#x4E00;&#x8282;&#x5C06;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5404;&#x9690;&#x85CF;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x4EE5;&#x53EF;&#x89C6;&#x5316;&#x7684;&#x5F62;&#x5F0F;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x6982;&#x5FF5;&#x4E0A;&#x7406;&#x89E3;&#x66F4;&#x6DF1;&#x5165;&#xFF0C;&#x4F46;&#x5728;&#x7EC6;&#x8282;&#x4E0A;&#x6709;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x7591;&#x60D1;&#x3002;&#x5148;&#x8BF4;&#x660E;&#x767D;&#x7684;&#x90E8;&#x5206;&#x5427;&#x3002;&#x5B83;&#x904D;&#x5386;&#x6BCF;&#x4E00;&#x5C42;&#xFF0C;&#x627E;&#x5230;&#x80FD;&#x5C06;&#x8BE5;&#x5C42;&#x6700;&#x5927;&#x5316;&#x6FC0;&#x6D3B;&#x7684;9&#x5F20;&#x56FE;&#x7247;&#x7684;&#x7247;&#x6BB5;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x8FD9;&#x5F20;&#x56FE;&#x6E05;&#x6670;&#x5730;&#x89E3;&#x91CA;&#x4E86;&#x8D8A;&#x6D45;&#x5C42;&#x7684;&#x9690;&#x85CF;&#x5C42;&#xFF0C;&#x8BC6;&#x522B;&#x7684;&#x662F;&#x8D8A;&#x5E95;&#x5C42;&#x7684;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x7AD6;&#x76F4;&#x8FB9;&#x7F18;&#x3001;&#x6C34;&#x5E73;&#x8FB9;&#x7F18;&#x7B49;&#xFF1B;&#x8D8A;&#x6DF1;&#x5C42;&#x7684;&#x9690;&#x85CF;&#x5C42;&#xFF0C;&#x8BC6;&#x522B;&#x7684;&#x662F;&#x8D8A;&#x9AD8;&#x7EA7;&#x7684;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x7B2C;&#x4E8C;&#x5C42;&#x662F;&#x5706;&#x3001;&#x6761;&#x7EB9;&#x7B49;&#x51E0;&#x4F55;&#x5F62;&#x72B6;&#xFF0C;&#x7B2C;&#x4E09;&#x5C42;&#x662F;&#x7F51;&#x683C;&#x3001;&#x8F66;&#x8F6E;&#xFF1B;&#x7B2C;&#x56DB;&#x5C42;&#x7B2C;&#x4E94;&#x5C42;&#x5219;&#x662F;&#x66F4;&#x5B8C;&#x6574;&#x7684;&#x7269;&#x4F53;&#x3002;&#x56E0;&#x6B64;&#x5F85;&#x8BC6;&#x522B;&#x7269;&#x4F53;&#x8D8A;&#x590D;&#x6742;&#xFF0C;&#x9700;&#x8981;&#x8D8A;&#x6DF1;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6765;&#x8BC6;&#x522B;&#x3002; &#x4F46;&#x662F;&#x4EC0;&#x4E48;&#x662F;&#x201C;&#x5C06;&#x67D0;&#x4E00;&#x5C42;&#x6700;&#x5927;&#x5316;&#x6FC0;&#x6D3B;&#x201D;&#xFF0C;&#x600E;&#x4E48;&#x627E;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x56FE;&#x7247;&#x7247;&#x6BB5;&#xFF1F;&#x8FD9;&#x5E94;&#x8BE5;&#x662F;&#x8BBA;&#x6587;&#x300A;visualizing and understanding convolutional networks&#x300B; &#x4ECB;&#x7ECD;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5728;&#x672C;&#x8282;&#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x6DF1;&#x5165;&#x89E3;&#x91CA;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5C06;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6BCF;&#x4E00;&#x5C42;&#x53EF;&#x89C6;&#x5316;&#x7684;&#x65B9;&#x6CD5;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6709;&#x52A9;&#x4E8E;&#x52A0;&#x6DF1;&#x5BF9;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x3002;&#x770B;&#x6765;&#x5543;&#x8FD9;&#x7BC7;&#x8BBA;&#x6587;&#x662F;&#x5FC5;&#x987B;&#x8981;&#x505A;&#x7684;&#x4E8B;&#x3002; 4.8 &#x4EE3;&#x4EF7;&#x51FD;&#x6570; &#x98CE;&#x683C;&#x8F6C;&#x6362;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF1A;&#x5B83;&#x662F;&#x4E24;&#x90E8;&#x5206;&#x7684;&#x548C;&#xFF0C;&#x524D;&#x8005;&#x662F;&#x4E0E;&#x5185;&#x5BB9;&#x56FE;&#x7247;&#x7684;&#x5185;&#x5BB9;&#x504F;&#x5DEE;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x4E0E;&#x98CE;&#x683C;&#x56FE;&#x7247;&#x7684;&#x98CE;&#x683C;&#x504F;&#x5DEE;&#xFF0C;&#x3B1;&#x548C;&#x3B2;&#x662F;&#x4E8C;&#x8005;&#x7684;&#x6743;&#x91CD;&#xFF1A; &#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E5F;&#x975E;&#x5E38;&#x76F4;&#x89C2;&#xFF0C;&#x4EE4;G&#x4E3A;&#x5408;&#x6210;&#x56FE;&#x7247;&#xFF0C;&#x9996;&#x5148;&#x7ED9;G&#x968F;&#x673A;&#x8D4B;&#x521D;&#x503C;&#xFF0C;&#x5229;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x627E;&#x5230;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x6700;&#x4F4E;&#x7684;&#x7ED3;&#x679C;&#xFF1A; 4.9 &#x5185;&#x5BB9;&#x4EE3;&#x4EF7;&#x51FD;&#x6570; &#x7ED3;&#x5408;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x53EF;&#x89C6;&#x5316;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7ED3;&#x679C;&#x56FE;&#x7247;G&#x548C;&#x5185;&#x5BB9;&#x56FE;&#x7247;C&#x5982;&#x679C;&#x5728;&#x7F51;&#x7EDC;&#x7684;&#x6D45;&#x5C42;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x8868;&#x660E;&#x4E24;&#x5F20;&#x56FE;&#x5728;&#x50CF;&#x7D20;&#x7EA7;&#x4E0A;&#x6709;&#x5F88;&#x591A;&#x5171;&#x540C;&#x70B9;&#xFF0C;&#x6BD4;&#x5982;&#x6C34;&#x5E73;&#x3001;&#x7AD6;&#x76F4;&#x8FB9;&#x7F18;&#xFF1B;&#x5982;&#x679C;&#x4E8C;&#x8005;&#x5728;&#x7F51;&#x7EDC;&#x7684;&#x6DF1;&#x5C42;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x4E0A;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x8868;&#x660E;&#x4E24;&#x5F20;&#x56FE;&#x5728;&#x5B8F;&#x89C2;&#x7269;&#x4F53;&#x4E0A;&#x6709;&#x5F88;&#x591A;&#x5171;&#x540C;&#x70B9;&#xFF0C;&#x6BD4;&#x5982;&#x90FD;&#x6709;&#x72D7;&#x6216;&#x4EBA;&#x3002;&#x8981;&#x4EE4;&#x4E8C;&#x8005;&#x5185;&#x5BB9;&#x76F8;&#x4F3C;&#x5219;&#x9700;&#x8981;&#x5728;&#x4E2D;&#x95F4;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x4E0A;&#x8BA9;&#x4E8C;&#x8005;&#x7684;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x8DDD;&#x79BB;&#x6700;&#x5C0F;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x5185;&#x5BB9;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x8981;&#x505A;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x5373; \(J_{content} (C, G)=\frac{1}{2} ||a^{[l](C)} &#x2212;a^{[l](G)}||^2\) &#x5176;&#x4E2D;\(a^{[l](C)} &#x548C;a^{[l](G)}\) &#x5206;&#x522B;&#x8868;&#x793A;&#x5185;&#x5BB9;&#x56FE;&#x7247;&#x548C;&#x5408;&#x6210;&#x56FE;&#x7247;&#x5728;&#x7F51;&#x7EDC;&#x7B2C;l&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x3002; &#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x4E2D;&#x95F4;&#x9690;&#x85CF;&#x5C42;&#xFF0C;&#x4E0D;&#x80FD;&#x592A;&#x6D45;&#x4E5F;&#x4E0D;&#x80FD;&#x592A;&#x6DF1;&#xFF0C;&#x8FD9;&#x662F;&#x8BBA;&#x6587;&#x300A;A neural algorithm of artistic style&#x300B; &#x89E3;&#x91CA;&#x7684;&#x95EE;&#x9898;&#x3002; 4.10 &#x98CE;&#x683C;&#x635F;&#x5931;&#x51FD;&#x6570; &#x76F8;&#x6BD4;&#x5185;&#x5BB9;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF0C;&#x98CE;&#x683C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x66F4;&#x96BE;&#x7406;&#x89E3;&#x4E00;&#x4E9B;&#x3002;&#x57FA;&#x4E8E;&#x201C;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x80FD;&#x591F;&#x8BC6;&#x522B;&#x4E0D;&#x540C;&#x5C42;&#x9762;&#x4E0A;&#x7684;&#x56FE;&#x7247;&#x7279;&#x5F81;&#x201D;&#x8FD9;&#x4E00;&#x6027;&#x8D28;&#xFF0C;&#x98CE;&#x683C;&#x8FD8;&#x662F;&#x8981;&#x4ECE;&#x9690;&#x85CF;&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x6765;&#x6316;&#x6398;&#x3002;&#x672C;&#x8282;&#x5C06;&#x56FE;&#x7247;&#x7684;&#x98CE;&#x683C;&#x5B9A;&#x4E49;&#x4E3A;&#xFF1A;&#x7B2C;l&#x5C42;&#x4E2D;&#x5404;&#x4E2A;&#x901A;&#x9053;&#x4E4B;&#x95F4;&#x6FC0;&#x6D3B;&#x9879;&#x7684;&#x76F8;&#x5173;&#x7CFB;&#x6570;&#xFF0C;&#x5373;&#x540C;&#x4E00;&#x5C42;&#x4E2D;&#x4E0D;&#x540C;&#x901A;&#x9053;&#x540C;&#x4E00;&#x4E2A;&#x6FC0;&#x6D3B;&#x4F4D;&#x7F6E;&#x4E0A;&#x6FC0;&#x6D3B;&#x70B9;&#x7684;&#x76F8;&#x5173;&#x6027;&#x3002; &#x8BFE;&#x4EF6;&#x7ED9;&#x51FA;&#x7684;&#x76F4;&#x89C9;&#x89E3;&#x91CA;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF0C;&#x5047;&#x8BBE;&#x7EA2;&#x8272;&#x901A;&#x9053;&#x548C;&#x9EC4;&#x8272;&#x901A;&#x9053;&#x5BF9;&#x5E94;&#x56FE;&#x7247;&#x4E2D;&#x7EA2;&#x8272;&#x6846;&#x548C;&#x9EC4;&#x8272;&#x6846;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7EA2;&#x8272;&#x901A;&#x9053;&#x63A2;&#x6D4B;&#x7684;&#x662F;&#x7AD6;&#x76F4;&#x6761;&#x7EB9;&#xFF0C;&#x9EC4;&#x8272;&#x901A;&#x9053;&#x63A2;&#x6D4B;&#x7684;&#x662F;&#x6A59;&#x8272;&#x8272;&#x8C03;&#x3002;&#x5982;&#x679C;&#x7AD6;&#x76F4;&#x6761;&#x7EB9;&#x5927;&#x591A;&#x662F;&#x6A59;&#x8272;&#x7684;&#xFF0C;&#x8BF4;&#x660E;&#x8FD9;&#x4E24;&#x4E2A;&#x901A;&#x9053;&#x6709;&#x9AD8;&#x5EA6;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x6CA1;&#x6709;&#x76F8;&#x5173;&#x6027;&#x3002;&#x901A;&#x9053;&#x7684;&#x76F8;&#x5173;&#x6027;&#x4E3A;&#x56FE;&#x7247;&#x98CE;&#x683C;&#x7684;&#x91CF;&#x5316;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x624B;&#x6BB5;&#x3002; &#x5728;&#x5F97;&#x5230;&#x98CE;&#x683C;&#x56FE;&#x7247;&#x7684;&#x5404;&#x901A;&#x9053;&#x76F8;&#x5173;&#x6027;&#x540E;&#xFF0C;&#x6309;&#x7167;&#x8FD9;&#x79CD;&#x76F8;&#x5173;&#x6027;&#x8981;&#x6C42;&#x53BB;&#x751F;&#x6210;G&#x56FE;&#x7247;&#x3002; &#x6211;&#x7684;&#x7591;&#x60D1;&#x662F;&#xFF1A;&#x5047;&#x8BBE;S&#x56FE;&#x7247;1&#x3001;3&#x3001;5&#x901A;&#x9053;&#x9AD8;&#x5EA6;&#x76F8;&#x5173;&#xFF0C;&#x8FD9;&#x79CD;&#x76F8;&#x5173;&#x6027;&#x53EA;&#x662F;&#x4E00;&#x79CD;&#x5FC5;&#x8981;&#x6761;&#x4EF6;&#x5427;&#xFF1F;G&#x56FE;&#x7247;&#x662F;&#x968F;&#x673A;&#x751F;&#x6210;&#x7684;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x4E5F;&#x505A;&#x5230;&#x4E86;1&#x3001;3&#x3001;5&#x901A;&#x9053;&#x9AD8;&#x5EA6;&#x76F8;&#x5173;&#xFF0C;&#x4F46;&#x662F;&#x76F8;&#x5173;&#x5185;&#x5BB9;&#x5374;&#x4E0D;&#x540C;&#x4E8E;S&#x56FE;&#x7247;&#x5462;&#xFF1F;&#x6BD4;&#x5982;G&#x56FE;&#x7247;&#x7684;1&#x901A;&#x9053;&#x662F;&#x6C34;&#x5E73;&#x6761;&#x7EB9;&#xFF0C;3&#x901A;&#x9053;&#x662F;&#x7EFF;&#x8272;&#xFF0C;&#x800C;S&#x56FE;&#x7247;&#x7684;1&#x901A;&#x9053;&#x662F;&#x7AD6;&#x76F4;&#x6761;&#x7EB9;&#xFF0C;3&#x901A;&#x9053;&#x662F;&#x6A59;&#x8272;&#x3002; &#x6309;&#x7167;&#x4E0A;&#x9762;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B9A;&#x4E49;&#x98CE;&#x683C;&#x77E9;&#x9635;\(G_{kk^&#x2032;}^{[l]}\)&#xFF0C;&#x8868;&#x793A;&#x7B2C;l&#x5C42;&#x7F51;&#x7EDC;&#x4E2D;k&#x901A;&#x9053;&#x548C;k&apos;&#x901A;&#x9053;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5C42;&#x7F51;&#x7EDC;&#x6709;\(n_c^{[l]}\)&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x5219;&#x8BE5;&#x5C42;&#x98CE;&#x683C;&#x77E9;&#x9635;&#x6709;\(n_c^{[l]} &#xD7;n_c^{[l]}\)&#x4E2A;&#x5143;&#x7D20;&#x3002; &#x6709;&#x4E86;&#x98CE;&#x683C;&#x77E9;&#x9635;&#x5BF9;&#x56FE;&#x7247;&#x7684;&#x98CE;&#x683C;&#x505A;&#x5EA6;&#x91CF;&#xFF0C;&#x98CE;&#x683C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x5C31;&#x6BD4;&#x8F83;&#x597D;&#x7406;&#x89E3;&#x4E86;&#x2014;&#x2014;&#x662F;S&#x56FE;&#x548C;G&#x56FE;&#x7684;&#x98CE;&#x683C;&#x77E9;&#x9635;&#x7684;&#x8303;&#x6570;&#xFF1A; &#x4EE5;&#x4E0A;&#x53EA;&#x662F;&#x5728;&#x67D0;&#x4E00;&#x5C42;&#x4E0A;&#x8BA1;&#x7B97;&#x98CE;&#x683C;&#x635F;&#x5931;&#xFF0C;&#x8001;&#x5E08;&#x5EFA;&#x8BAE;&#x5728;&#x6BCF;&#x4E00;&#x5C42;&#x4E0A;&#x90FD;&#x8BA1;&#x7B97;&#xFF0C;&#x80FD;&#x8BA9;&#x98CE;&#x683C;&#x8FC1;&#x79FB;&#x66F4;&#x5B8C;&#x6574;&#xFF0C;&#x4E8E;&#x662F;&#x5B8C;&#x6574;&#x5730;&#x98CE;&#x683C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x5404;&#x5C42;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E58;&#x4EE5;&#x5404;&#x5C42;&#x6743;&#x91CD;&#x3BB;&#x4E4B;&#x548C;&#xFF0C;&#x628A;&#x6700;&#x8FD1;&#x51E0;&#x8282;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E58;&#x4EE5;&#x6743;&#x91CD;&#x76F8;&#x52A0;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x6700;&#x7EC8;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A; 4.11 &#x4E00;&#x7EF4;&#x5230;&#x4E09;&#x7EF4;&#x63A8;&#x5E7F; &#x4E8C;&#x7EF4;&#x77E9;&#x9635;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7B97;&#x6CD5;&#x4E5F;&#x53EF;&#x4EE5;&#x5E94;&#x7528;&#x5230;&#x4E00;&#x7EF4;&#x6216;&#x4E09;&#x7EF4;&#x3002; &#x672C;&#x8282;&#x4E3E;&#x4E86;&#x5FC3;&#x7535;&#x56FE;&#x4F5C;&#x4E3A;&#x4E00;&#x7EF4;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5E94;&#x7528;&#x4E8E;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x89C4;&#x5219;&#x548C;&#x4E8C;&#x7EF4;&#x7684;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x662F;&#x8FC7;&#x6EE4;&#x5668;&#x53EA;&#x9700;&#x8981;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x79FB;&#x52A8;&#x8FD0;&#x7B97;&#x4E00;&#x904D;&#x3002; &#x4E09;&#x7EF4;&#x6570;&#x7EC4;&#x7684;&#x8FD0;&#x7B97;&#x4E5F;&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x662F;&#x7531;&#x539F;&#x6765;n_h&#xD7;n_w&#xD7;n_c&#x6269;&#x5C55;&#x6210;&#x4E86;n_h&#xD7;n_w&#xD7;n_l&#xD7;n_c&#xFF1A; &#x5176;&#x5B9E;&#x4E0D;&#x7BA1;&#x662F;&#x51E0;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x7531;&#x6570;&#x5B57;&#x7EC4;&#x6210;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x53EA;&#x662F;&#x7EC4;&#x7EC7;&#x7684;&#x5F62;&#x5F0F;&#x4E0D;&#x540C;&#x800C;&#x5DF2;&#xFF0C;&#x8FD0;&#x7B97;&#x7684;&#x672C;&#x8D28;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（十一）]]></title>
    <url>%2F2018%2F04%2F18%2F2018%2F0418DeepLearningAI13%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x7B2C;&#x4E09;&#x5468;&#x300A;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x300B;&#x3002; 3.1 &#x76EE;&#x6807;&#x5B9A;&#x4F4D; &#x56FE;&#x7247;&#x5206;&#x7C7B;&#x662F;&#x5224;&#x65AD;&#x56FE;&#x7247;&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;&#x8981;&#x5BFB;&#x627E;&#x7684;&#x76EE;&#x6807;&#x3002; &#x5B9A;&#x4F4D;&#x5206;&#x7C7B;&#x4E0D;&#x4EC5;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5305;&#x542B;&#x76EE;&#x6807;&#xFF0C;&#x8FD8;&#x8981;&#x5728;&#x56FE;&#x7247;&#x4E2D;&#x6807;&#x8BB0;&#x51FA;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x5BF9;&#x8C61;&#x68C0;&#x6D4B;&#x5219;&#x662F;&#x5728;&#x5355;&#x5F20;&#x56FE;&#x7247;&#x4E2D;&#x5B9A;&#x4F4D;&#x5206;&#x7C7B;&#x591A;&#x4E2A;&#x5BF9;&#x8C61;&#x3002; &#x548C;&#x5E38;&#x89C4;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x76F8;&#x6BD4;&#xFF0C;&#x5B9A;&#x4F4D;&#x5206;&#x7C7B;&#x5728;&#x8F93;&#x51FA;&#x5C42;&#x9664;&#x4E86;&#x8F93;&#x51FA;softmax&#x7ED3;&#x679C;&#x5916;&#xFF0C;&#x8FD8;&#x5E94;&#x589E;&#x52A0;4&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x5B9A;&#x4F4D;&#x5230;&#x7684;&#x4E2D;&#x5FC3;&#x5750;&#x6807;&#x548C;&#x5BBD;&#x3001;&#x9AD8;&#x3002;&#x4E0B;&#x9762;&#x5728;&#x5DE6;&#x8FB9;&#x7684;&#x539F;&#x56FE;&#x4E2D;&#x6807;&#x51FA;&#x4E86;&#x5750;&#x6807;&#x7CFB;&#x53CA;bx&#x3001;by&#x3001;bh&#x3001;bw&#x7684;&#x542B;&#x4E49;&#xFF1A; &#x5728;&#x6807;&#x6CE8;&#x65F6;&#xFF0C;&#x5411;&#x91CF;y&#x5305;&#x542B;8&#x4E2A;&#x7EF4;&#x5EA6;&#xFF1A;&#x5982;&#x679C;&#x5305;&#x542B;&#x76EE;&#x6807;&#xFF0C;&#x5219;Pc=1&#xFF0C;bx by bh bw&#x662F;&#x76EE;&#x6807;&#x4F4D;&#x7F6E;&#xFF0C;c1 c2 c3&#x662F;&#x76EE;&#x6807;&#x7C7B;&#x578B; &#x5B9A;&#x4F4D;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x4EC5;&#x8BA8;&#x8BBA;&#x56FE;&#x7247;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x5219;&#x662F;&#x5BF9;&#x8C61;&#x68C0;&#x6D4B;&#x7684;&#x8303;&#x7574;&#xFF0C;&#x5728;&#x540E;&#x9762;&#x4F1A;&#x8BA8;&#x8BBA;&#x3002; 3.2 &#x7279;&#x5F81;&#x70B9;&#x68C0;&#x6D4B; &#x7279;&#x5F81;&#x70B9;&#x68C0;&#x6D4B;&#x548C;&#x5B9A;&#x4F4D;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x7684;&#x539F;&#x7406;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#xFF0C;&#x4EE5;&#x4EBA;&#x8138;&#x7279;&#x5F81;&#x70B9;&#x68C0;&#x6D4B;&#x4E3A;&#x4F8B;&#xFF0C;&#x9700;&#x8981;&#x9488;&#x5BF9;&#x4EBA;&#x8138;&#x5B9A;&#x4E49;&#x51FA;&#x82E5;&#x5E72;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#xFF0C;&#x5982;&#x5DE6;&#x53F3;&#x5916;&#x773C;&#x89D2;&#x3001;&#x5DE6;&#x53F3;&#x5185;&#x773C;&#x89D2;&#xFF0C;&#x5E76;&#x5728;&#x6807;&#x6CE8;&#x4E2D;&#x4F9D;&#x6B21;&#x6807;&#x51FA;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x4E2D;&#x95F4;&#x56FE;&#x6240;&#x793A;&#x3002;&#x7136;&#x540E;&#x5728;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#x5C42;&#x8F93;&#x51FA;&#x76F8;&#x5E94;&#x7684;&#xFF1A;&#x662F;&#x5426;&#x6709;&#x4EBA;&#x8138;&#xFF0C;&#x4EE5;&#x53CA;&#x5404;&#x7279;&#x5F81;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8FD9;&#x5728;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x4E2D;&#x6210;&#x4E3A;landmarks&#xFF0C;&#x5728;&#x524D;&#x9762;&#x7814;&#x7A76;DLib&#x65F6;&#x6709;&#x6240;&#x6D89;&#x53CA;&#x3002; &#x4EBA;&#x4F53;&#x7279;&#x5F81;&#x70B9;&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x5B9A;&#x4E49;&#x51FA;&#x80A2;&#x4F53;&#x4E2D;&#x7684;&#x5173;&#x952E;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x5728;&#x6807;&#x6CE8;&#x3001;&#x4EE5;&#x53CA;CNN&#x4E2D;&#x8F93;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x7ED3;&#x679C;&#x3002; 3.3 &#x76EE;&#x6807;&#x68C0;&#x6D4B; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#xFF1A; 1&#x3001;&#x9488;&#x5BF9;&#x8981;&#x68C0;&#x6D4B;&#x7684;&#x76EE;&#x6807;&#x624B;&#x673A;&#x6837;&#x672C;&#x5E76;&#x8BAD;&#x7EC3;CNN&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x5047;&#x8BBE;&#x8981;&#x68C0;&#x6D4B;&#x7684;&#x662F;&#x9053;&#x8DEF;&#x4E2D;&#x7684;&#x6C7D;&#x8F66;&#xFF0C;&#x9996;&#x5148;&#x5E94;&#x91C7;&#x96C6;&#x53EA;&#x6709;&#x6C7D;&#x8F66;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x800C;&#x4E14;&#x5C3D;&#x91CF;&#x4EE4;&#x6C7D;&#x8F66;&#x5360;&#x6EE1;&#x6574;&#x4E2A;&#x56FE;&#x7247;&#x3002;&#x5B8C;&#x6210;&#x6807;&#x6CE8;&#xFF0C;&#x5E76;&#x9488;&#x5BF9;&#x8FD9;&#x4E9B;&#x6837;&#x672C;&#x505A;&#x8BAD;&#x7EC3;&#x3002; 2&#x3001;&#x5BF9;&#x4E8E;&#x7ED9;&#x5B9A;&#x7684;&#x88AB;&#x68C0;&#x6D4B;&#x56FE;&#x7247;&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x7A97;&#x53E3;&#xFF0C;&#x5982;&#x4E0B;&#x9762;&#x5DE6;&#x56FE;&#xFF0C;&#x5C06;&#x7A97;&#x53E3;&#x5728;&#x88AB;&#x68C0;&#x6D4B;&#x56FE;&#x7247;&#x4E2D;&#x6309;&#x7167;&#x56FA;&#x5B9A;&#x7684;&#x6B65;&#x957F;&#x4ECE;&#x5DE6;&#x4E0A;&#x89D2;&#x4F9D;&#x6B21;&#x79FB;&#x52A8;&#x5230;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;&#x6BCF;&#x79FB;&#x52A8;&#x4E00;&#x6B65;&#x90FD;&#x5E94;&#x7528;&#x524D;&#x9762;&#x8BAD;&#x7EC3;&#x7684;CNN&#x505A;&#x4E00;&#x6B21;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#xFF0C;&#x5982;&#x679C;&#x68C0;&#x6D4B;&#x5230;&#x7ED3;&#x679C;&#x5219;&#x7ED3;&#x675F;&#xFF1B;&#x5982;&#x679C;&#x6574;&#x5F20;&#x56FE;&#x90FD;&#x68C0;&#x6D4B;&#x4E0D;&#x5230;&#x7ED3;&#x679C;&#xFF0C;&#x5219;&#x589E;&#x5927;&#x7A97;&#x53E3;&#x5C3A;&#x5BF8;&#xFF0C;&#x518D;&#x505A;&#x4E00;&#x8F6E;&#xFF0C;&#x5982;&#x4E2D;&#x95F4;&#x548C;&#x53F3;&#x4FA7;&#x56FE;&#x7247;&#x3002; &#x7A97;&#x53E3;&#x5C3A;&#x5BF8;&#x8D8A;&#x5C0F;&#xFF0C;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x8D8A;&#x5927;&#xFF0C;&#x800C;&#x4E14;&#x5982;&#x679C;&#x88AB;&#x68C0;&#x6D4B;&#x76EE;&#x6807;&#x6BD4;&#x7A97;&#x4F53;&#x5927;&#x65F6;&#x53EF;&#x80FD;&#x68C0;&#x6D4B;&#x4E0D;&#x5230;&#x76EE;&#x6807;&#x3002; &#x7A97;&#x53E3;&#x5C3A;&#x5BF8;&#x8D8A;&#x5927;&#xFF0C;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x8D8A;&#x5C0F;&#xFF0C;&#x4F46;&#x662F;&#x68C0;&#x6D4B;&#x7684;&#x6027;&#x80FD;&#x4E5F;&#x4F1A;&#x4E0B;&#x964D;&#x3002; &#x6240;&#x4EE5;&#x7406;&#x60F3;&#x60C5;&#x51B5;&#x662F;&#x5F53;&#x7A97;&#x4F53;&#x4E0E;&#x76EE;&#x6807;&#x5927;&#x5C0F;&#x4E00;&#x81F4;&#x65F6;&#xFF0C;&#x5E76;&#x4E14;&#x6ED1;&#x52A8;&#x5230;&#x76EE;&#x6807;&#x4E2D;&#x5FC3;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x68C0;&#x6D4B;&#x51FA;&#x76EE;&#x6807;&#x3002; &#x8FD9;&#x53EA;&#x662F;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x81F4;&#x601D;&#x60F3;&#xFF0C;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x65F6;&#x5E38;&#x5E38;&#x8981;&#x5E94;&#x7528;&#x5230;&#x5B9E;&#x65F6;&#x89C6;&#x9891;&#x68C0;&#x6D4B;&#x4E2D;&#xFF0C;&#x663E;&#x7136;&#x4E0D;&#x80FD;&#x5728;&#x6BCF;&#x5F20;&#x56FE;&#x4E0A;&#x6267;&#x884C;&#x8FD9;&#x4E48;&#x591A;&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x505A;&#x66F4;&#x591A;&#x7684;&#x4F18;&#x5316;&#x3002; 3.4 &#x5377;&#x79EF;&#x7684;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x5B9E;&#x73B0; &#x4E0A;&#x4E00;&#x8282;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x53EA;&#x662F;&#x5F15;&#x5165;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x672C;&#x8282;&#x7EE7;&#x7EED;&#x5728;&#x6027;&#x80FD;&#x4E0A;&#x6539;&#x5584;&#x548C;&#x63D0;&#x5347;&#xFF0C;&#x4F7F;&#x5B83;&#x6210;&#x4E3A;&#x5DE5;&#x7A0B;&#x4E0A;&#x53EF;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x7B2C;&#x4E00;&#x6B65;&#x5148;&#x5C06;&#x539F;&#x5148;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5168;&#x8FDE;&#x63A5;&#x90E8;&#x5206;&#x4E5F;&#x7528;&#x5377;&#x79EF;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8FD0;&#x7B97;&#xFF0C;&#x628A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x8F93;&#x51FA;&#x7684;&#x5411;&#x91CF;&#x4EE5;1&#xD7;1&#x77E9;&#x9635;&#x7684;&#x5F62;&#x5F0F;&#x8F93;&#x51FA;&#xFF0C;&#x4E8C;&#x8005;&#x5176;&#x5B9E;&#x662F;&#x5B8C;&#x5168;&#x7B49;&#x4EF7;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x8868;&#x793A;&#x65B9;&#x5F0F;&#x6709;&#x6240;&#x4E0D;&#x540C;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x4E00;&#x6B65;&#x662F;&#x5B9E;&#x8D28;&#x6027;&#x7684;&#x4F18;&#x5316;&#xFF0C;&#x5728;16&#xD7;16&#xD7;3&#x7684;&#x56FE;&#x7247;&#x4E0A;&#x505A;&#x6B65;&#x957F;&#x4E3A;2&#x7684;&#x7A97;&#x53E3;&#x6ED1;&#x52A8;&#x8FD0;&#x7B97;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x5BF9;4&#x4E2A;&#x56FE;&#x7247;&#x505A;&#x4E86;CNN&#xFF0C;&#x6700;&#x540E;&#x751F;&#x6210;4&#xD7;4&#xD7;softmax&#x7C7B;&#x522B;&#x7684;&#x77E9;&#x9635;&#xFF0C;&#x8FD9;4&#x4E2A;CNN&#x7684;&#x4E58;&#x6570;&#x662F;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x88AB;&#x4E58;&#x6570;&#x53C8;&#x6709;&#x5927;&#x91CF;&#x7684;&#x91CD;&#x5408;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x7B49;&#x6548;&#x4E8E;&#x7528;1&#x4E2A;CNN&#x8F93;&#x51FA;4&#xD7;4&#xD7;softmax&#x7C7B;&#x522B;&#x7684;&#x77E9;&#x9635;&#xFF1A; &#x4E0D;&#x8BBA;&#x7A97;&#x53E3;&#x6ED1;&#x52A8;&#x591A;&#x5C11;&#x6B21;&#xFF0C;&#x53EA;&#x8981;&#x4E00;&#x4E2A;CNN&#x5C31;&#x5168;&#x90FD;&#x641E;&#x5B9A;&#x4E86;&#x3002; 3.5 Bounding Box&#x9884;&#x6D4B; &#x4E0A;&#x4E00;&#x8282;&#x5377;&#x79EF;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x53EF;&#x4EE5;&#x5728;&#x7A97;&#x53E3;&#x5C3A;&#x5BF8;&#x56FA;&#x5B9A;&#x65F6;&#xFF0C;&#x53EA;&#x505A;&#x4E00;&#x6B21;CNN&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x89E3;&#x51B3;&#x4E0D;&#x4E86;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#xFF1A;&#x5F53;&#x7A97;&#x53E3;&#x548C;&#x76EE;&#x6807;&#x6846;&#x4E0D;&#x91CD;&#x5408;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x7F29;&#x653E;&#x7A97;&#x53E3;&#x8FDB;&#x884C;&#x591A;&#x8F6E;&#x7684;&#x5FAA;&#x73AF;&#x8FD0;&#x7B97;&#x3002;&#x4F8B;&#x5982;&#x4E0B;&#x56FE;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x76EE;&#x6807;&#x7A97;&#x662F;&#x7EA2;&#x6846;&#xFF0C;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x662F;&#x7D2B;&#x6846;&#xFF0C;&#x6309;&#x7167;&#x8FD9;&#x4E2A;&#x5C3A;&#x5BF8;&#x6ED1;&#x52A8;&#x4E0B;&#x53BB;&#xFF0C;&#x4E8C;&#x8005;&#x662F;&#x65E0;&#x6CD5;&#x91CD;&#x5408;&#x7684;&#xFF1A; &#x672C;&#x8282;&#x5F15;&#x5165;YOLO&#x65B9;&#x6CD5;&#xFF0C;&#x8BBA;&#x6587;&#x5728;&#x300A;You Only Look Once: Unified, Real-Time Object Detection&#x300B;&#xFF0C;&#x4E5F;&#x53EF;&#x5728;Deep Learning Papers Translation&#x627E;&#x5230;&#x4E2D;&#x82F1;&#x7FFB;&#x8BD1;&#x3002; &#x7B97;&#x6CD5;&#x7684;&#x601D;&#x60F3;&#x662F;&#x4ECE;&#x6807;&#x6CE8;&#x5F00;&#x59CB;&#x7684;&#xFF1A;&#x5C06;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x5206;&#x5272;&#x6210;3&#xD7;3&#x7684;&#x683C;&#x5B50;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x683C;&#x5B50;&#x5185;&#x5206;&#x522B;&#x6807;&#x6CE8;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x4E2D;&#x7D2B;&#x3001;&#x7EFF;&#x3001;&#x9EC4;&#x8272;&#x5411;&#x91CF;&#x6240;&#x793A;&#xFF0C;&#x56E0;&#x6B64;&#x6807;&#x7B7E;&#x6570;&#x636E;&#x5C31;&#x662F;3&#xD7;3&#xD7;8&#x7684;&#x77E9;&#x9635;&#x3002;&#x5728;&#x5EFA;&#x7ACB;CNN&#x65F6;&#xFF0C;&#x4EE5;&#x8BE5;3&#xD7;3&#xD7;8 &#x7684;&#x77E9;&#x9635;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;y&#x3002;&#x5982;&#x679C;&#x76EE;&#x6807;&#x8D85;&#x51FA;&#x683C;&#x5B50;&#xFF0C;bx&#x3001;by&#x4EE5;&#x5B83;&#x7684;&#x91CD;&#x5FC3;&#x6240;&#x5728;&#x683C;&#x5B50;&#x4E3A;&#x51C6;&#xFF0C;bh&#x3001;hw&#x5219;&#x53EF;&#x4EE5;&#x5927;&#x4E8E;&#x683C;&#x5B50;&#x3002; &#x4E0B;&#x56FE;&#x66F4;&#x8BE6;&#x7EC6;&#x5730;&#x63CF;&#x8FF0;&#x4E86;&#x6807;&#x6CE8;&#x7684;&#x539F;&#x5219;&#xFF1A; &#x6211;&#x7684;&#x7406;&#x89E3;&#xFF1A;YOLO&#x662F;&#x548C;&#x5377;&#x79EF;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x5B83;&#x4E0D;&#x4EC5;&#x5B9E;&#x73B0;&#x4E86;CNN&#x7684;&#x4E00;&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x4E5F;&#x89E3;&#x51B3;&#x4E86;&#x76EE;&#x6807;&#x8D85;&#x51FA;&#x7A97;&#x4F53;&#x7684;&#x95EE;&#x9898;&#x3002;&#x8BA9;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x53BB;&#x89E3;&#x51B3;&#x201C;&#x534A;&#x4E2A;&#x8F66;&#x8BE5;&#x5C5E;&#x4E8E;&#x54EA;&#x4E2A;&#x7A97;&#x53E3;&#x201D;&#x7684;&#x95EE;&#x9898;&#x3002; 3.6 &#x4EA4;&#x5E76;&#x6BD4; &#x5C06;&#x8BAD;&#x7EC3;&#x5B8C;&#x6210;&#x7684;&#x6A21;&#x578B;&#x5E94;&#x7528;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x3001;&#x5F00;&#x53D1;&#x96C6;&#x6216;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED3;&#x679C;&#x4E0D;&#x50CF;&#x4E8C;&#x5206;&#x90A3;&#x6837;&#x76F4;&#x89C2;&#x3002;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x4E0B;&#x56FE;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x7D2B;&#x6846;&#x662F;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#xFF0C;&#x7EA2;&#x6846;&#x662F;&#x6807;&#x6CE8;&#x7ED3;&#x679C;&#xFF0C;&#x4ED6;&#x4EEC;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x91CD;&#x5408;&#x4E86;&#xFF0C;&#x600E;&#x4E48;&#x8BC4;&#x4EF7;&#x8FD9;&#x4E2A;&#x9884;&#x6D4B;&#x6B63;&#x786E;&#x4E0E;&#x5426;&#x5462;&#xFF1F; &#x672C;&#x8282;&#x5F15;&#x5165;&#x4EA4;&#x5E76;&#x6BD4;&#xFF08;Intersection Over Union IoU&#xFF09;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5373;&#xFF1A;&#x4E24;&#x4E2A;&#x6846;&#x7684;&#x4EA4;&#x96C6;&#xF7;&#x4E24;&#x4E2A;&#x6846;&#x7684;&#x5E76;&#x96C6;&#xFF0C;&#x53EF;&#x4EE5;&#x4EBA;&#x4E3A;&#x7ED9;&#x7ED3;&#x679C;&#x8BBE;&#x5B9A;&#x4E00;&#x4E2A;&#x5408;&#x7406;&#x7684;&#x9608;&#x503C;&#xFF0C;&#x6BD4;&#x5982;&#x5927;&#x4E8E;0.5&#x8868;&#x793A;&#x9884;&#x6D4B;&#x6B63;&#x786E;&#xFF0C;&#x5C0F;&#x4E8E;0.5&#x8868;&#x793A;&#x9884;&#x6D4B;&#x9519;&#x8BEF;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x8BBE;&#x5B9A;&#x66F4;&#x4E25;&#x683C;&#x7684;&#x9608;&#x503C;&#xFF0C;&#x6BD4;&#x5982;0.6&#x3002; 3.7 &#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236; &#x6309;&#x7167;YOLO&#x7B97;&#x6CD5;&#xFF0C;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x4E2A;&#x683C;&#x5B50;&#x58F0;&#x79F0;&#x81EA;&#x5DF1;&#x68C0;&#x6D4B;&#x5230;&#x4E86;&#x76EE;&#x6807;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x6765;&#x7B5B;&#x9009;&#x51FA;&#x6700;&#x53EF;&#x80FD;&#x5305;&#x542B;&#x76EE;&#x6807;&#x4E2D;&#x5FC3;&#x7684;&#x683C;&#x5B50;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;&#x7B97;&#x6CD5;&#x3002; &#x5B83;&#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x53EF;&#x4EE5;&#x7528;&#x5982;&#x4E0B;&#x4F2A;&#x7801;&#x8868;&#x793A;&#xFF1A; 1234while &#x56FE;&#x7247;&#x4E2D;&#x8FD8;&#x6709;&#x76EE;&#x6807;&#x6846;: &#x6311;&#x9009;pc&#x6700;&#x5927;&#x7684;&#x4F5C;&#x4E3A;&#x9884;&#x6D4B;&#x547D;&#x4E2D;&#x6846;A &#x5220;&#x9664;&#x4E0E;&#x6846;A&#x7684;IoU&#x2265;0.5&#x7684;&#x6240;&#x6709;&#x6846; &#x8BB0;&#x5F55;&#x6846;A&#x5E76;&#x4ECE;&#x56FE;&#x7247;&#x4E2D;&#x5220;&#x9664; &#x5176;&#x4E2D;pc&#x662F;&#x6307;&#x5728;CNN&#x4E2D;&#x8F93;&#x51FA;&#x547D;&#x4E2D;&#x67D0;&#x76EE;&#x6807;&#x7684;&#x6982;&#x7387;&#x3002;&#x9488;&#x5BF9;&#x4E0A;&#x56FE;&#xFF0C;&#x7B97;&#x6CD5;&#x7B2C;&#x4E00;&#x8F6E;&#x5FAA;&#x73AF;&#x9996;&#x5148;&#x627E;&#x5230;&#x53F3;&#x8F66;0.9&#x7684;&#x6846;&#xFF0C;&#x5220;&#x9664;0.6&#x3001;0.7&#x7684;&#x6846;&#xFF0C;&#x7B2C;&#x4E8C;&#x8F6E;&#x5FAA;&#x73AF;&#x627E;&#x51FA;&#x5DE6;&#x8F66;0.8&#x7684;&#x6846;&#xFF0C;&#x5220;&#x9664;0.7&#x7684;&#x6846;&#x3002; &#x6211;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;&#x5728;&#x4E00;&#x5F20;&#x56FE;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x76EE;&#x6807;&#xFF0C;&#x8BE5;&#x600E;&#x4E48;&#x6807;&#x6CE8;&#x5462;&#xFF1F;&#x7B54;&#x6848;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF1A;YOLO&#x7B97;&#x6CD5;&#x662F;&#x628A;&#x56FE;&#x7247;&#x5207;&#x6210;3&#xD7;3&#xFF0C;&#x6BCF;&#x4E2A;&#x683C;&#x5B50;&#x72EC;&#x7ACB;&#x6807;&#x6CE8;&#xFF0C;&#x6240;&#x4EE5;&#x4E0A;&#x56FE;&#x6807;&#x6CE8;&#x548C;&#x8F93;&#x51FA;&#x90FD;&#x662F;3&#xD7;3&#xD7;8&#xFF0C;&#x4E0D;&#x662F;&#x95EE;&#x9898;&#x3002; &#x95EE;&#x9898;&#x662F;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x76EE;&#x6807;&#x6324;&#x5728;1&#x4E2A;&#x683C;&#x5B50;&#x91CC;&#x600E;&#x4E48;&#x5904;&#x7406;&#xFF1F;&#x8FD9;&#x662F;&#x4E0B;&#x4E00;&#x8282;&#x8BA8;&#x8BBA;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8C8C;&#x4F3C;&#x4E5F;&#x53EA;&#x80FD;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x5F62;&#x72B6;&#x5DEE;&#x5F02;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x76EE;&#x6807;&#x6324;&#x5728;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#x91CC;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x679C;&#x5F62;&#x72B6;&#x50CF;&#x4F3C;&#xFF0C;Anchor Boxes&#x5E94;&#x8BE5;&#x4E5F;&#x641E;&#x4E0D;&#x5B9A;&#x3002; 3.8 Anchor Boxes Anchor Boxes&#x7528;&#x6765;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x843D;&#x5728;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#x91CC;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x4E0D;&#x8FC7;Anchor Boxes&#x80FD;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x5C40;&#x9650;&#xFF0C;&#x6BD4;&#x5982;&#x53EA;&#x80FD;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x5F62;&#x72B6;&#x5DEE;&#x5F02;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x7269;&#x4F53;&#x3002; &#x57FA;&#x672C;&#x601D;&#x60F3;&#x5C31;&#x662F;&#xFF1A;&#x4E8B;&#x5148;&#x9884;&#x8BBE;&#x4E24;&#x4E2A;&#x5F62;&#x72B6;&#x5DEE;&#x5F02;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x683C;&#x5B50;&#xFF0C;&#x6BD4;&#x5982;&#x7EC6;&#x9AD8;&#x548C;&#x77ED;&#x7C97;&#x4E24;&#x79CD;&#xFF0C;&#x5728;&#x6807;&#x6CE8;&#x65F6;&#x5C06;&#x6807;&#x6CE8;&#x7ED3;&#x679C;&#x7531;&#x539F;&#x5148;3&#xD7;3&#xD7;8&#x6539;&#x6210;3&#xD7;3&#xD7;16&#xFF1A; CNN&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x548C;&#x8BAD;&#x7EC3;&#x65B9;&#x6CD5;&#x90FD;&#x4E0D;&#x53D8;&#x3002;&#x8FD9;&#x4E2A;&#x601D;&#x60F3;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x89E3;&#x51B3;&#x5F62;&#x72B6;&#x76F8;&#x4F3C;&#x7684;&#x4E24;&#x4E2A;&#x76EE;&#x6807;&#x5728;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#x91CC;&#x7684;&#x60C5;&#x51B5;&#x5462;&#xFF1F;&#x6211;&#x60F3;&#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x79CD;&#x6807;&#x6CE8;&#x4F1A;&#x8BA9;&#x673A;&#x5668;&#x6655;&#x6389;&#x2014;&#x2014;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x9AD8;&#x91CD;&#x5408;&#xFF0C;&#x4EBA;&#x53EF;&#x80FD;&#x90FD;&#x96BE;&#x4EE5;&#x5206;&#x8FA8;&#x4E24;&#x4E2A;&#x6846;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x54EA;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x673A;&#x5668;&#x5C31;&#x66F4;&#x96BE;&#x4E86;&#x3002; 3.9 YOLO&#x7B97;&#x6CD5; &#x672C;&#x8282;&#x4ECE;&#x8BAD;&#x7EC3;&#x548C;&#x9884;&#x6D4B;&#x4E24;&#x4E2A;&#x73AF;&#x8282;&#x4ECB;&#x7ECD;YOLO&#x7B97;&#x6CD5;&#x7684;&#x6D41;&#x7A0B;&#x3002; 3.10 &#xFF08;&#x9009;&#x4FEE;&#xFF09;RPN&#x7F51;&#x7EDC; &#x4F5C;&#x4E1A;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（十）]]></title>
    <url>%2F2018%2F04%2F18%2F2018%2F0418DeepLearningAI12%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x7B2C;&#x4E8C;&#x5468;&#x300A;&#x6DF1;&#x5EA6;&#x5377;&#x53CA;&#x7F51;&#x7EDC;&#xFF1A;&#x5B9E;&#x4F8B;&#x63A2;&#x7A76;&#x300B;&#x3002; &#x672C;&#x5468;&#x8BFE;&#x7A0B;&#x524D;&#x534A;&#x90E8;&#x5206;&#x5BF9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F5C;&#x4E86;&#x8FDB;&#x4E00;&#x6B65;&#x5EF6;&#x4F38;&#x4ECB;&#x7ECD;&#xFF0C;&#x9886;&#x7565;&#x4E86;LeNet-5&#x3001;AlexNet&#x3001;VGG-16&#x7B49;&#x7ECF;&#x5178;&#x7F51;&#x7EDC;&#x548C;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x3001;Inception&#x7F51;&#x7EDC;&#x3002;&#x8FD9;&#x4E9B;&#x4ECB;&#x7ECD;&#x7565;&#x663E;&#x67AF;&#x71E5;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;&#x7F51;&#x7EDC;&#x4F53;&#x7CFB;&#x90FD;&#x66F4;&#x52A0;&#x590D;&#x6742;&#xFF0C;&#x4F60;&#x5F88;&#x96BE;&#x4ECE;&#x7F51;&#x7EDC;&#x4F53;&#x7CFB;&#x67B6;&#x6784;&#x56FE;&#x4E0A;&#x7406;&#x89E3;&#x4ED6;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x505A;&#x3002;&#x8BFE;&#x7A0B;&#x5E76;&#x6CA1;&#x6709;&#x8BB2;&#x89E3;&#x601D;&#x60F3;&#x8D77;&#x6E90;&#xFF0C;&#x800C;&#x662F;&#x5EFA;&#x8BAE;&#x5927;&#x5BB6;&#x9605;&#x8BFB;&#x8BBA;&#x6587;&#x3002;&#x597D;&#x6D88;&#x606F;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x662F;&#x5E94;&#x7528;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8BFB;&#x61C2;&#x8BBA;&#x6587;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x5BFB;&#x627E;&#x5F00;&#x6E90;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4E0D;&#x4EC5;&#x662F;&#x7B97;&#x6CD5;&#xFF0C;&#x8FDE;&#x540C;&#x524D;&#x4EBA;&#x5DF2;&#x7ECF;&#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x6A21;&#x578B;&#x90FD;&#x53EF;&#x4EE5;&#x4E00;&#x5E76;&#x62FF;&#x6765;&#xFF0C;&#x901A;&#x8FC7;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x7684;&#x65B9;&#x6CD5;&#x5AC1;&#x63A5;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#x3002;&#x8FD9;&#x662F;&#x672C;&#x5468;&#x8BFE;&#x7A0B;&#x7684;&#x540E;&#x534A;&#x90E8;&#x5206;&#x8BB2;&#x89E3;&#x7684;&#x5185;&#x5BB9;&#x3002; 2.1 &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FDB;&#x884C;&#x5B9E;&#x4F8B;&#x63A2;&#x7A76;&#xFF1F; 2.2 &#x7ECF;&#x5178;&#x7F51;&#x7EDC; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x51E0;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x6846;&#x67B6;&#x3002; LeNet-5&#x7684;&#x4F5C;&#x8005;&#x662F;&#x6CD5;&#x56FD;&#x4EBA;LeCun&#xFF0C;&#x54E5;&#x4EEC;&#x867D;&#x7136;&#x662F;CNN&#x9F3B;&#x7956;&#xFF0C;&#x4F46;&#x5B66;&#x672F;&#x4E0A;&#x5E76;&#x975E;&#x77F3;&#x7834;&#x5929;&#x60CA;&#x4E00;&#x9E23;&#x60CA;&#x4EBA;&#xFF0C;&#x4ED6;&#x5728;1980&#x5E74;&#x5E95;&#x63D0;&#x51FA;&#x201C;&#x4EBA;&#x5DE5;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x201D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x751A;&#x81F3;&#x5F88;&#x4E0D;&#x53D7;&#x5B66;&#x672F;&#x754C;&#x5F85;&#x89C1;&#x3002;&#x9760;&#x7740;&#x6B7B;&#x78D5;&#x7CBE;&#x795E;&#x575A;&#x6301;&#x5230;21&#x4E16;&#x7EAA;&#xFF0C;&#x4ED6;&#x7684;&#x7406;&#x8BBA;&#x624D;&#x9010;&#x6B65;&#x53D8;&#x7684;&#x70ED;&#x95E8;&#x3002;&#x4ED6;&#x7684;&#x4E2A;&#x4EBA;&#x7F51;&#x7AD9;&#x662F;http://yann.lecun.com/&#x5728;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x627E;&#x5230;LeNet-5&#x7684;&#x8BBA;&#x6587;&#x3002;&#x5728;&#x4ECA;&#x5E74;&#xFF08;2018&#x5E74;&#xFF09;&#x7684;GMIC&#x5927;&#x4F1A;&#x4E0A;&#xFF0C;LeCun&#x505A;&#x4E86;&#x5F00;&#x573A;&#x7684;&#x4E3B;&#x9898;&#x6F14;&#x8BB2;&#xFF1A; LeNet-5&#x7684;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x672C;&#x4F8B;&#x9002;&#x7528;&#x4E8E;&#x6570;&#x5B57;&#x7684;&#x8BC6;&#x522B;&#xFF0C; &#x7B2C;1&#x5C42;&#x8F93;&#x5165;32&#xD7;32&#xD7;1&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;5&#xD7;5&#xFF0C;&#x4E8E;&#x662F; \(n^{[0]}=32, p^{[0]}=0, s^{[0]}=1 &#xFF0C;f^0=5 \\ &#x7ED3;&#x5408;&#x516C;&#x5F0F;&#x5F97;&#x5230;&#x7B2C;&#x4E8C;&#x5C42;&#x7EF4;&#x5EA6;&#x4E3A;&#xFF1A;&#x230A;(n+2p&#x2212;f)/s+1&#x230B;=&#x230A;(32+0&#x2212;5)/1+1&#x230B;=28\) &#x5728;&#x8BBA;&#x6587;&#x63D0;&#x51FA;&#x7684;&#x5E74;&#x4EE3;&#xFF0C;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x66F4;&#x5E38;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x90FD;&#x91C7;&#x7528;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x800C;&#x5728;&#x4ECA;&#x5929;&#x5927;&#x591A;&#x4F7F;&#x7528;&#x6700;&#x5927;&#x5316;&#x6C60;&#x5316;&#x4E86;&#x3002; &#x6C60;&#x5316;&#x5C42;&#x4E0D;&#x6539;&#x53D8;&#x539F;&#x77E9;&#x9635;&#x7684;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;\(&#x230A;(n+2p&#x2212;f)/s+1&#x230B;\)&#xFF0C;&#x5F97;&#x5230;&#x6C60;&#x5316;&#x540E;&#x7684;&#x77E9;&#x9635;&#x4E3A;14&#xD7;14&#x3002; &#x7B2C;&#x4E8C;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x91C7;&#x7528;5&#xD7;5&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x4F7F;&#x7528;\(&#x230A;(n+2p&#x2212;f)/s+1&#x230B;\)&#x5F97;&#x5230;&#x7ED3;&#x679C;&#x77E9;&#x9635;&#x4E3A;10&#xD7;10&#x3002; &#x518D;&#x5E94;&#x7528;f=2,s=2&#x77E9;&#x9635;&#x6C60;&#x5316;&#xFF0C;&#x5F97;&#x5230;&#x77E9;&#x9635;&#x7ED3;&#x679C;&#x4E3A;5&#xD7;5&#x3002;&#x5C06;&#x8BE5;&#x77E9;&#x9635;&#x6241;&#x5E73;&#x5316;&#x4E3A;400&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x7ECF;&#x8FC7;2&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x8F93;&#x51FA;&#x4E3A;10&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x5BF9;&#x5E94;10&#x4E2A;&#x6570;&#x5B57;&#x3002; &#x7B2C;&#x4E8C;&#x4E2A;&#x7ECF;&#x5178;&#x67B6;&#x6784;&#x662F;AlexNet&#xFF0C;&#x8BBA;&#x6587;&#x8BE6;&#x89C1;2012&#x5E74;&#x53D1;&#x8868;&#x5728;NIP&#x7684;&#x300A;Imagenet classification with deep convolutional neural networks&#x300B;&#xFF0C;&#x4F5C;&#x8005;Alex Krizhevsky&#x3002; &#x5B83;&#x7684;&#x5C42;&#x6B21;&#x6BD4;LeNet-5&#x591A;&#x5F88;&#x591A;&#xFF0C;&#x53C2;&#x6570;&#x4E5F;&#x8FBE;&#x5230;6000&#x4E07;&#xFF08;LeNet-5&#x53EA;&#x6709;6000&#x591A;&#x4E2A;&#xFF09;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x6C60;&#x5316;&#x5C31;&#x5DF2;&#x7ECF;&#x91C7;&#x7528;&#x6700;&#x5927;&#x5316;&#x7B56;&#x7565;&#x4E86;&#x3002; &#x7B2C;&#x4E09;&#x4E2A;&#x67B6;&#x6784;&#x662F;VGG-16&#xFF0C;&#x8FD9;&#x662F;&#x725B;&#x6D25;&#x5927;&#x5B66; visual geometry group&#xFF08;VGG&#xFF09;Karen Simonyan &#x548C;Andrew Zisserman &#x4E8E;14&#x5E74;&#x64B0;&#x5199;&#x7684;&#x8BBA;&#x6587;&#xFF0C;&#x5728;Deep Learning Papers Translation&#x6709;&#x4EE5;&#x4E0A;&#x8BBA;&#x6587;&#x7684;&#x4E2D;&#x82F1;&#x6587;&#x5BF9;&#x7167;&#x3002; &#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x5C42;&#x6B21;&#x8D8A;&#x6765;&#x8D8A;&#x6DF1;&#xFF0C;VGG-16&#x4E2D;&#x7684;&#x6570;&#x5B57;16&#x5C31;&#x662F;&#x6307;&#x7F51;&#x7EDC;&#x5171;&#x6709;16&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x548C;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x5171;&#x6709;1.38&#x4EBF;&#x4E2A;&#x53C2;&#x6570;&#xFF01; &#x4EE5;&#x4E0A;&#x4E09;&#x4E2A;&#x7ECF;&#x5178;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x90FD;&#x4E0D;&#x7B97;&#x592A;&#x590D;&#x6742;&#xFF0C;&#x4E00;&#x5F20;&#x56FE;&#x5C31;&#x80FD;&#x63CF;&#x8FF0;&#x6E05;&#x695A;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x4E9B;&#x7ED3;&#x6784;&#x662F;&#x600E;&#x4E48;&#x642D;&#x5EFA;&#x8D77;&#x6765;&#x7684;&#x5462;&#xFF1F;&#x5C42;&#x6B21;&#x6570;&#x3001;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x5C3A;&#x5BF8;&#x3001;&#x89C4;&#x6A21;&#x7B49;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#x662F;&#x600E;&#x4E48;&#x5236;&#x5B9A;&#x51FA;&#x6765;&#x7684;&#x5462;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;16&#x5C42;&#x6709;&#x6548;&#x800C;19&#x5C42;&#x51E0;&#x4E4E;&#x5C31;&#x6CA1;&#x4EC0;&#x4E48;&#x63D0;&#x5347;&#x4E86;&#xFF1F;&#x6BCF;&#x4E00;&#x5C42;&#x5206;&#x522B;&#x8D77;&#x5230;&#x7684;&#x6548;&#x679C;&#x53C8;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x5982;&#x679C;&#x8BF4;&#x65B9;&#x6CD5;&#x7684;&#x6709;&#x6548;&#x6027;&#x5168;&#x9760;&#x5C1D;&#x8BD5;&#xFF0C;&#x90A3;&#x8FD9;&#x548C;&#x6316;&#x77FF;&#x51E0;&#x4E4E;&#x6CA1;&#x5565;&#x5DEE;&#x522B;&#x4E86;&#xFF0C;&#x8BFE;&#x7A0B;&#x59CB;&#x7EC8;&#x4E5F;&#x6CA1;&#x6709;&#x5BF9;&#x6B64;&#x505A;&#x51FA;&#x89E3;&#x91CA;&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x9762;&#x4E34;&#x4E00;&#x4E2A;&#x65B0;&#x95EE;&#x9898;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x642D;&#x5EFA;&#x7F51;&#x7EDC;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E94;&#x9075;&#x5FAA;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x539F;&#x5219;&#xFF1F;&#x8FD9;&#x4E9B;&#x662F;&#x6211;&#x5185;&#x5FC3;&#x7684;&#x7591;&#x56E2;&#x3002;&#x4E0D;&#x8FC7;&#x672C;&#x95E8;&#x8BFE;&#x7A0B;&#x80FD;&#x628A;&#x8FD9;&#x4E48;&#x4E00;&#x4E2A;&#x5BBD;&#x5E7F;&#x6DF1;&#x539A;&#x7684;&#x5B66;&#x79D1;&#x5DE8;&#x7EC6;&#x9761;&#x9057;&#x5730;&#x5448;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x8BE5;&#x600E;&#x4E48;&#x64CD;&#x4F5C;&#xFF0C;&#x5DF2;&#x7ECF;&#x975E;&#x5E38;&#x96BE;&#x5F97;&#x4E86;&#x3002; 2.3 &#x6B8B;&#x5DEE;&#x7F51;&#x7EDC; &#x4EC0;&#x4E48;&#x662F;&#x6B8B;&#x5DEE;&#x5757;&#xFF1F; &#x4F20;&#x7EDF;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x662F;&#x6309;&#x7167;&#x5E95;&#x90E8;&#x7684;&#x9ED1;&#x5B57;&#x6267;&#x884C;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x3002;&#x800C;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x5219;&#x662F;&#x5C06;\(a^{[l+2]}=g(z^{[l+2]})\) &#x6539;&#x4E3A;\(a^{[l+2]}=g(z^{[l+2]} +a^{[l]})\)&#xFF0C;&#x5373;&#x5C06;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x76F4;&#x63A5;&#x8DF3;&#x8FDC;&#x63A5;&#x5165;&#x4E24;&#x5C42;&#x540E;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x79F0;&#x52A0;&#x4E0A;&#x7684;&#x8FD9;&#x4E2A;\(a^{[l]}\) &#x4E3A;&#x4E00;&#x4E2A;&#x6B8B;&#x5DEE;&#x5757;&#x3002; &#x56FE;&#x5F62;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;&#x88AB;&#x4E0A;&#x8FB9;&#x84DD;&#x6846;&#x6846;&#x4F4F;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#x3002; &#x4F7F;&#x7528;&#x6B8B;&#x5DEE;&#x5757;&#x80FD;&#x8BAD;&#x7EC3;&#x66F4;&#x6DF1;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x5C31;&#x662F;&#x5C06;&#x8FD9;&#x4E9B;&#x6B8B;&#x5DEE;&#x5757;&#x5806;&#x79EF;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5F62;&#x6210;&#x7684;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002; &#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x7684;&#x8BBA;&#x6587;&#x539F;&#x6587;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;Deep Learning Papers Translation&#x4E2D;&#x627E;&#x5230;&#x4E2D;&#x82F1;&#x6587;&#x5BF9;&#x7167;&#x3002; &#x672C;&#x8282;&#x540E;&#x534A;&#x6BB5;&#x4ECB;&#x7ECD;&#x4E00;&#x4E2A;&#x73B0;&#x8C61;&#xFF0C;&#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5C3D;&#x7BA1;&#x7406;&#x8BBA;&#x4E0A;&#x5E0C;&#x671B;&#x968F;&#x7740;&#x7F51;&#x7EDC;&#x5C42;&#x6B21;&#x7684;&#x52A0;&#x6DF1;&#xFF0C;&#x8BAD;&#x7EC3;&#x96C6;&#x7684;&#x8BEF;&#x5DEE;&#x80FD;&#x8D8A;&#x6765;&#x8D8A;&#x5C11;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x5219;&#x662F;&#x5230;&#x8FBE;&#x4E00;&#x5B9A;&#x5C42;&#x6B21;&#x4E4B;&#x540E;&#xFF0C;&#x8BEF;&#x5DEE;&#x4F1A;&#x56DE;&#x5347;&#xFF0C;&#x6B63;&#x5982;&#x5DE6;&#x4E0B;&#x65B9;&#x7684;&#x66F2;&#x7EBF;&#x3002;&#x800C;&#x5F15;&#x5165;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x4E4B;&#x540E;&#xFF0C;&#x8BAD;&#x7EC3;&#x96C6;&#x8BEF;&#x5DEE;&#x8868;&#x73B0;&#x66F4;&#x7B26;&#x5408;&#x9884;&#x671F;&#xFF0C;&#x4E00;&#x8DEF;&#x5411;&#x4E0B;&#x3002; 2.4 &#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x6548;&#xFF1F; &#x672C;&#x8282;&#x5206;&#x6790;&#x4E86;&#x5728;&#x6781;&#x7AEF;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;\(a^{[l+2]} =a^{[l]}\) &#x6211;&#x80FD;&#x7406;&#x89E3;&#x5B83;&#x8868;&#x8FBE;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5C3D;&#x91CF;&#x8BA9;&#x4E0A;&#x4E00;&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x8282;&#x70B9;&#x5EF6;&#x7EED;&#x5230;&#x4E0B;&#x4E00;&#x5C42;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x8282;&#x70B9;&#x7684;&#x5F71;&#x54CD;&#x4E0D;&#x88AB;&#x590D;&#x6742;&#x7684;&#x5C42;&#x6B21;&#x6D88;&#x78E8;&#x6389;&#x3002;&#x65E2;&#x7136;&#x8FD9;&#x6837;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5F15;&#x5165;&#x90A3;&#x4E48;&#x590D;&#x6742;&#x7684;&#x5C42;&#x6B21;&#x5462;&#xFF1F;&#x8001;&#x5E08;&#x7684;&#x8BF4;&#x6CD5;&#x662F;&#x5E0C;&#x671B;&#x7B97;&#x6CD5;&#x5728;&#x6BCF;&#x4E00;&#x5C42;&#x5B66;&#x4E60;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x63D0;&#x5347;&#x6027;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x7684;&#x8001;&#x95EE;&#x9898;&#x53C8;&#x6765;&#x4E86;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x79CD;&#x5AC1;&#x63A5;&#x65B9;&#x5F0F;&#x521A;&#x597D;&#x80FD;&#x4FDD;&#x7559;&#x4E8C;&#x8005;&#x7684;&#x4F18;&#x70B9;&#x5462;&#xFF1F;&#x65E2;&#x901A;&#x8FC7;&#x591A;&#x5C42;&#x6B21;&#x7684;&#x5B66;&#x4E60;&#x63D0;&#x5347;&#x4E86;&#x6027;&#x80FD;&#xFF0C;&#x53C8;&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x5C42;&#x6B21;&#x8FC7;&#x591A;&#x800C;&#x51CF;&#x5F31;&#x539F;&#x59CB;&#x6570;&#x636E;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x4E24;&#x4E2A;&#x4F18;&#x70B9;&#x5168;&#x5360;&#x4E86;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x662F;&#x4E24;&#x4E2A;&#x7F3A;&#x70B9;&#x5168;&#x5360;&#x4E86;&#x5462;&#xFF1F; &#x597D;&#x56F0;&#x60D1;&#x2026;&#x2026; 2.5 &#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x7F51;&#x7EDC;&#x4EE5;&#x53CA;1&#xD7;1&#x5377;&#x79EF; &#x5728;&#x5355;&#x901A;&#x9053;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;1&#xD7;1&#x5377;&#x79EF;&#x4F3C;&#x4E4E;&#x770B;&#x4E0D;&#x51FA;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#xFF0C;&#x4EC5;&#x4EC5;&#x662F;&#x5C06;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E58;&#x4EE5;&#x540C;&#x6837;&#x7684;&#x500D;&#x6570;&#x3002;&#x4F46;&#x5728;&#x591A;&#x901A;&#x9053;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E48;&#x505A;&#x76F8;&#x5F53;&#x4E8E;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x70B9;&#x5728;&#x6240;&#x6709;&#x901A;&#x9053;&#x4E0A;&#x7EC4;&#x6210;&#x7684;&#x5411;&#x91CF;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x6B21;&#x5168;&#x8FDE;&#x63A5;&#x64CD;&#x4F5C;&#x3002; &#x6B64;&#x5904;&#x6211;&#x6709;&#x7591;&#x95EE;&#xFF1A;&#x6839;&#x636E;&#x5377;&#x79EF;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x662F;&#x5728;&#x6BCF;&#x4E2A;&#x901A;&#x9053;&#x4E0A;&#x5B8C;&#x6210;&#x88AB;&#x64CD;&#x4F5C;&#x77E9;&#x9635;&#x548C;&#x8FC7;&#x6EE4;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x8DE8;&#x901A;&#x9053;&#x6267;&#x884C;&#x4E58;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x5E94;&#x8BE5;&#x5F62;&#x6210;32&#x4E2A;&#x5E73;&#x884C;&#x7EBF;&#xFF0C;&#x800C;&#x975E;32&#xD7;32&#x7684;&#x7F51;&#x7EDC;&#x5427;&#xFF1F;&#x56E0;&#x6B64;&#x6240;&#x8C13;&#x7684;&#x5168;&#x8FDE;&#x63A5;&#x5E76;&#x4E0D;&#x662F;&#x88AB;&#x64CD;&#x4F5C;&#x77E9;&#x9635;&#x548C;&#x67D0;&#x4E00;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x88AB;&#x64CD;&#x4F5C;&#x77E9;&#x9635;&#x548C;n_c&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x7B2C;i&#x4E2A;&#x901A;&#x9053;&#x7684;&#x6240;&#x6709;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x5F62;&#x6210;&#x7684;&#x3002; &#x4EE5;&#x4E0A;&#x8868;&#x8FBE;&#x4E86;&#x5728;&#x591A;&#x901A;&#x9053;&#x4E2D;1&#xD7;1&#x5377;&#x79EF;&#x8FDC;&#x6BD4;&#x5728;&#x5355;&#x901A;&#x9053;&#x4E2D;&#x6709;&#x66F4;&#x6DF1;&#x523B;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x6DF1;&#x523B;&#x542B;&#x4E49;&#x7A76;&#x7ADF;&#x80FD;&#x8D77;&#x5230;&#x4EC0;&#x4E48;&#x4F5C;&#x7528;&#x5462;&#xFF1F;&#x5728;&#x4E0B;&#x56FE;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x8001;&#x5E08;&#x8BB2;&#x5230;1&#xD7;1&#x5377;&#x79EF;&#x53EF;&#x4EE5;&#x538B;&#x7F29;&#x3001;&#x4FDD;&#x6301;&#x6216;&#x6269;&#x5927;&#x77E9;&#x9635;&#x7684;&#x4FE1;&#x9053;&#x6570;&#x3002; &#x6211;&#x7684;&#x601D;&#x8003;&#xFF1A;&#x5982;&#x679C;&#x662F;&#x538B;&#x7F29;&#x6216;&#x4FDD;&#x6301;&#xFF0C;&#x6C60;&#x5316;&#x4E5F;&#x80FD;&#x505A;&#x5230;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x53EF;&#x4EE5;&#x628A;1&#xD7;1&#x5377;&#x79EF;&#x548C;&#x6C60;&#x5316;&#x90FD;&#x7406;&#x89E3;&#x4E3A;&#x538B;&#x7F29;&#x6570;&#x636E;&#x7684;&#x624B;&#x6BB5;&#xFF1F; 2.6 &#x8C37;&#x6B4C;Inception&#x7F51;&#x7EDC;&#x7B80;&#x4ECB; Inception&#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x539F;&#x5148;&#x7531;&#x4EBA;&#x6765;&#x8BBE;&#x8BA1;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x3001;&#x5C42;&#x6570;&#xFF0C;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x73B0;&#x5728;&#x90FD;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x4EA4;&#x7ED9;&#x673A;&#x5668;&#x6765;&#x5B66;&#x4E60;&#x3002;&#x4F8B;&#x5982;&#x4E0B;&#x56FE;&#x4E2D;&#x4ECE;&#x5DE6;&#x4FA7;&#x8F93;&#x5165;&#x5230;&#x53F3;&#x4FA7;&#x8F93;&#x51FA;&#x7ECF;&#x5386;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x548C;&#x6C60;&#x5316;&#x53C2;&#x6570;&#x5747;&#x6210;&#x4E3A;&#x4E86;&#x53C2;&#x6570;&#xFF0C;&#x8BA9;&#x4ED6;&#x4EEC;&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x62FC;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x4E0D;&#x540C;&#x7684;&#x7ED3;&#x679C;&#x62FC;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x6BCF;&#x6B21;&#x8FD0;&#x7B97;&#x6240;&#x5F97;&#x7ED3;&#x679C;&#x7684;&#x7EF4;&#x5EA6;&#x76F8;&#x540C;&#x3002; &#x672C;&#x8282;&#x5E76;&#x6CA1;&#x6709;&#x6DF1;&#x5165;&#x8BA8;&#x8BBA;&#x600E;&#x4E48;&#x642D;&#x5EFA;&#x8FD9;&#x6837;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x53EA;&#x662F;&#x5C55;&#x5F00;&#x4E86;&#x4E00;&#x4E2A;&#x7EC6;&#x8282;&#xFF1A;&#x5728;28&#xD7;28&#xD7;192&#x77E9;&#x9635;&#x4E0A;&#x505A;&#x591A;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x65F6;&#xFF0C;&#x8FD0;&#x7B97;&#x91CF;&#x662F;&#x5DE8;&#x5927;&#x7684;&#x3002;&#x4EE5;&#x4E0A;&#x56FE;&#x4E2D;&#x7D2B;&#x5757;&#x7684;&#x8FD0;&#x7B97;&#x4E3A;&#x4F8B;&#xFF0C;&#x7ED3;&#x679C;&#x77E9;&#x9635;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x901A;&#x9053;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x662F;5&#xD7;5&#xD7;192&#x6B21;&#x4E58;&#x6CD5;&#x8FD0;&#x7B97;&#xFF0C;&#x4E8E;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x9053;&#x5C31;&#x6709;5&#xD7;5&#xD7;192&#xD7;28&#xD7;28&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x6240;&#x6709;&#x901A;&#x9053;&#x52A0;&#x8D77;&#x6765;&#x5C31;&#x662F;5&#xD7;5&#xD7;192&#xD7;28&#xD7;28&#xD7;32=1.2&#x4EBF;&#x6B21;&#xFF1A; &#x5728;Inception&#x7F51;&#x7EDC;&#x4E2D;&#x5148;&#x5BF9;&#x8F93;&#x5165;&#x77E9;&#x9635;&#x505A;&#x4E86;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x5B9E;&#x73B0;&#x538B;&#x7F29;&#x901A;&#x9053;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6267;&#x884C;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#xFF1A; &#x4E8E;&#x662F;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#x5171;&#x6267;&#x884C;28&#xD7;28&#xD7;192&#xD7;1&#xD7;1&#xD7;16 + 28&#xD7;28&#xD7;16&#xD7;28&#xD7;28&#xD7;32 = 1240&#x4E07;&#x6B21; &#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5C06;&#x8FD0;&#x7B97;&#x6210;&#x672C;&#x964D;&#x4F4E;&#x4E00;&#x4E2A;&#x91CF;&#x7EA7;&#x3002; 2.7 Inception &#x7F51;&#x7EDC; &#x8FD9;&#x5F20;&#x56FE;&#x5C55;&#x73B0;&#x4E86;&#x901A;&#x8FC7;&#x666E;&#x904D;&#x5F15;&#x5165;&#x4E0A;&#x4E00;&#x8282;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x51CF;&#x5C0F;Inception&#x7684;&#x8FD0;&#x7B97;&#x89C4;&#x6A21;&#xFF1A; &#x4F46;&#x4ECE;&#x8FD9;&#x5F20;&#x56FE;&#x4E0A;&#x5E76;&#x4E0D;&#x80FD;&#x770B;&#x51FA;&#x4ED6;&#x662F;&#x600E;&#x4E48;&#x628A;&#x8FC7;&#x6EE4;&#x5668;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#x53D8;&#x6210;&#x53C2;&#x6570;&#x7684;&#x3002; &#x5373;&#x4F7F;&#x5728;&#x5B8C;&#x6574;&#x7684;Inception&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x56FE;&#x4E2D;&#xFF0C;&#x4E5F;&#x770B;&#x4E0D;&#x51FA;&#x53C2;&#x6570;&#x5316;&#x7684;&#x75D5;&#x8FF9;&#xFF0C;&#x800C;&#x662F;&#x5806;&#x79EF;&#x4E86;&#x5F88;&#x591A;&#x4E2A;&#x7C7B;&#x4F3C;&#x7684;&#x5B50;&#x7F51;&#xFF1A; 2.8 &#x4F7F;&#x7528;&#x5F00;&#x6E90;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x6848; 2.9 &#x8FC1;&#x79FB;&#x5B66;&#x4E60; &#x524D;&#x9762;&#x7AE0;&#x8282;&#x4E2D;&#x4ECB;&#x7ECD;&#x8FC7;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x7814;&#x7A76;&#x793E;&#x533A;&#x6709;&#x5F88;&#x591A;&#x73B0;&#x6210;&#x7684;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x4EE5;&#x53CA;&#x57FA;&#x4E8E;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x96C6;&#x8BAD;&#x7EC3;&#x51FA;&#x6765;&#x7684;&#x73B0;&#x6210;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x4E9B;&#x6A21;&#x578B;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x7EE7;&#x7EED;&#x6B63;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x8BAD;&#x7EC3;&#x81EA;&#x5DF1;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x6570;&#x5468;&#x751A;&#x81F3;&#x6570;&#x6708;&#x7684;&#x65F6;&#x95F4;&#x3002;&#x8FD9;&#x7C7B;&#x6570;&#x636E;&#x96C6;&#x5305;&#x62EC;ImageNet&#x3001;MS COCO&#x3001;Pascal VOC&#x7B49;&#xFF0C;&#x524D;&#x4EBA;&#x5728;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x52A8;&#x7528;&#x5927;&#x91CF;&#x8BA1;&#x7B97;&#x8D44;&#x6E90;&#x8BAD;&#x7EC3;&#x3001;&#x8C03;&#x4F18;&#xFF0C;&#x5E94;&#x8BE5;&#x5F62;&#x6210;&#x79EF;&#x7D2F;&#x6548;&#x5E94;&#xFF0C;&#x6BCF;&#x4E00;&#x6B65;&#x90FD;&#x80FD;&#x8BA9;&#x6A21;&#x578B;&#x66F4;&#x4F18;&#x5316;&#x3002; &#x672C;&#x8282;&#x4E4B;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x7684;&#x539F;&#x5219;&#xFF0C;&#x5728;&#x524D;&#x9762;&#x7AE0;&#x8282;&#x4E5F;&#x90FD;&#x8BB2;&#x5230;&#x8FC7;&#xFF1A; &#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x5F88;&#x5C11;&#xFF0C;&#x5219;&#x5EFA;&#x8BAE;&#x5C06;&#x73B0;&#x6709;&#x6A21;&#x578B;&#x7684;&#x9664;softmax&#x4EE5;&#x5916;&#x7684;&#x5C42;&#x6B21;&#x5168;&#x90E8;&#x4FDD;&#x7559;&#x5E76;&#x51BB;&#x7ED3;&#xFF0C;&#x5220;&#x9664;softmax&#x5C42;&#x5E76;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x8BE5;&#x5C42;&#x3002;&#x5F88;&#x591A;&#x5F00;&#x6E90;&#x6846;&#x67B6;&#x652F;&#x6301;&#x51BB;&#x7ED3;&#x64CD;&#x4F5C;&#x3002; &#x5982;&#x679C;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x4FDD;&#x7559;&#x548C;&#x51BB;&#x7ED3;&#x4E00;&#x90E8;&#x5206;&#x9690;&#x85CF;&#x5C42;&#xFF0C;&#x5220;&#x9664;&#x9760;&#x540E;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x548C;softmax&#x5C42;&#xFF0C;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x3002; &#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x628A;&#x73B0;&#x6709;&#x7684;&#x6A21;&#x578B;&#x4F5C;&#x4E3A;&#x521D;&#x59CB;&#x53C2;&#x6570;&#xFF0C;&#x5B8C;&#x5168;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x3002; 2.10 &#x6570;&#x636E;&#x6269;&#x5145; &#x524D;&#x9762;&#x7AE0;&#x8282;&#x4E5F;&#x4ECB;&#x7ECD;&#x8FC7;&#x5F53;&#x6570;&#x636E;&#x91CF;&#x4E0D;&#x591F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6570;&#x636E;&#x6269;&#x5145;&#x7684;&#x624B;&#x6BB5;&#xFF1A; &#x51E0;&#x4F55;&#x53D8;&#x6362;&#xFF0C;&#x5305;&#x62EC;&#xFF1A;&#x5BF9;&#x79F0;&#x590D;&#x5236;&#x3001;&#x968F;&#x673A;&#x4FEE;&#x526A;&#x3001;&#x65CB;&#x8F6C;&#x3001;&#x626D;&#x66F2; &#x8272;&#x5F69;&#x53D8;&#x6362;&#xFF0C;&#x5305;&#x62EC;&#xFF1A;&#x4F8B;&#x5982;(R, G, B)&#x5206;&#x522B;&#x505A;(+20, -20, +20)&#x7684;&#x8FD0;&#x7B97;&#x3001;PCA&#x989C;&#x8272;&#x589E;&#x5F3A; 2.11 &#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x73B0;&#x72B6; &#x8FD9;&#x4E00;&#x8282;&#x7684;&#x6280;&#x672F;&#x6027;&#x5C31;&#x66F4;&#x4E0D;&#x5F3A;&#x4E86;&#xFF0C;&#x4E3B;&#x8981;&#x4ECE;&#x8BED;&#x97F3;&#x3001;&#x56FE;&#x7247;&#x8BC6;&#x522B;&#x3001;&#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x7B49;&#x51E0;&#x4E2A;&#x95E8;&#x7C7B;&#x9648;&#x8FF0;&#x4E86;&#x5F53;&#x524D;&#x884C;&#x4E1A;&#x7684;&#x73B0;&#x72B6;&#xFF1A;&#x76F8;&#x5BF9;&#x4E8E;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8BED;&#x97F3;&#x8FD9;&#x4E2A;&#x884C;&#x4E1A;&#x79EF;&#x7D2F;&#x7684;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x8DB3;&#x591F;&#x591A;&#x4E86;&#xFF0C;&#x56FE;&#x7247;&#x8BC6;&#x522B;&#x5176;&#x6B21;&#x3001;&#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x6700;&#x5C11;&#x3002;&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#x6807;&#x6CE8;&#x6210;&#x672C;&#xFF1A;&#x4E00;&#x4E2A;&#x8BED;&#x97F3;&#x8F93;&#x5165;&#x6CD5;&#x5929;&#x7136;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x6CE8;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x7528;&#x6237;&#x81EA;&#x5DF1;&#x9009;&#x62E9;&#x5019;&#x9009;&#x5B8C;&#x6210;&#x6807;&#x6CE8;&#xFF0C;&#x8FD9;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x6210;&#x672C;&#xFF0C;&#x800C;&#x4E14;&#x62E5;&#x6709;&#x6D77;&#x91CF;&#x7684;&#x6807;&#x6CE8;&#x7528;&#x6237;&#x3002;&#x800C;&#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x5219;&#x9700;&#x8981;&#x5806;&#x4E13;&#x4EBA;&#x6765;&#x5E72;&#x6807;&#x6CE8;&#x7684;&#x6D3B;&#x3002; &#x5BF9;&#x4E8E;&#x6709;&#x5927;&#x91CF;&#x6570;&#x636E;&#x7684;&#x884C;&#x4E1A;&#xFF0C;&#x6BD4;&#x5982;&#x8BED;&#x97F3;&#xFF0C;&#x66F4;&#x591A;&#x4F9D;&#x9760;&#x673A;&#x5668;&#x5B8C;&#x6210;&#x5DE5;&#x4F5C;&#xFF0C;&#x5F88;&#x5C11;&#x5D4C;&#x5165;&#x4EBA;&#x5DE5;&#x7EC4;&#x4EF6;&#xFF1B;&#x800C;&#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x91CF;&#x4E0D;&#x8DB3;&#x7684;&#x884C;&#x4E1A;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x6709;&#x5927;&#x91CF;&#x7684;&#x4EBA;&#x5DE5;&#x5DE5;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#x8BBE;&#x8BA1;&#x7F51;&#x7EDC;&#x3001;&#x8D85;&#x53C2;&#xFF0C;&#x5D4C;&#x5165;&#x516C;&#x5171;&#x7EC4;&#x4EF6;&#xFF0C;&#x6CE8;&#x5165;&#x4EBA;&#x5DE5;&#x77E5;&#x8BC6;&#x7B49;&#x3002;&#x5F53;&#x7136;&#x8FD8;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x3002; &#x672C;&#x5468;&#x7684;&#x8BFE;&#x7A0B;&#x7565;&#x663E;&#x6C34;&#xFF0C;&#x4E3B;&#x8981;&#x6269;&#x5C55;&#x4E86;&#x773C;&#x754C;&#xFF0C;&#x9886;&#x7565;&#x4E86;&#x5F53;&#x4E0B;&#x7ECF;&#x5178;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x8FD8;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x53BB;&#x770B;&#x8BBA;&#x6587;&#x3002;&#x5E0C;&#x671B;&#x4F5C;&#x4E1A;&#x7684;&#x90E8;&#x5206;&#x5305;&#x542B;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x7684;&#x5177;&#x4F53;&#x7EC3;&#x4E60;&#x3002; &#x4F5C;&#x4E1A; Keras Tutorial Happy House &#x8FD9;&#x4E00;&#x8282;&#x4ECB;&#x7ECD;Keras&#x7684;&#x57FA;&#x672C;&#x7528;&#x6CD5;&#xFF0C;Keras&#x662F;&#x4E00;&#x5957;&#x9002;&#x5408;&#x7528;&#x4E8E;&#x5FEB;&#x901F;&#x5EFA;&#x6A21;&#x7684;&#x9AD8;&#x7EA7;&#x5DE5;&#x5177;&#x3002;&#x9AD8;&#x5EA6;&#x7684;&#x62BD;&#x8C61;&#x4F7F;&#x5F97;Keras&#x7279;&#x522B;&#x9002;&#x5408;&#x7528;&#x4E00;&#x4E9B;&#x6807;&#x51C6;&#x6A21;&#x5757;&#x5FEB;&#x901F;&#x62FC;&#x51FA;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#xFF0C;&#x9002;&#x5408;&#x524D;&#x671F;&#x5FEB;&#x901F;&#x9A8C;&#x8BC1;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x3002;Kearas&#x4E0D;&#x64C5;&#x957F;&#x505A;&#x66F4;&#x590D;&#x6742;&#x7684;&#x5B9A;&#x5236;&#x3002;&#x5177;&#x4F53;&#x7528;&#x6CD5;&#x53EF;&#x53C2;&#x89C1;Keras&#x5F00;&#x53D1;&#x6587;&#x6863; &#x672C;&#x8282;&#x4F8B;&#x5B50;&#x8BAD;&#x7EC3;&#x96C6;&#x662F;600&#x5F20;64&#xD7;64&#xD7;3&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x5F00;&#x53D1;&#x96C6;&#x662F;150&#x5F20;64&#xD7;64&#xD7;3&#x7684;&#x56FE;&#x7247;&#x3002;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x4EE3;&#x7801;&#x662F;HappyModel(...)&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6784;&#x5EFA;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF1A; 12345678910111213141516171819202122232425def HappyModel(self, input_shape): ... X_input = Input(input_shape) # &#x5728;&#x672C;&#x4F8B;&#x4E2D;=(64, 64, 3) # &#x53C2;&#x6570;&#x7B2C;1&#x4E2A;3&#x8868;&#x793A;&#x5728;&#x77E9;&#x9635;&#x524D;&#x540E;&#x884C;&#x5747;&#x52A0;3&#x884C;0&#xFF0C;&#x7B2C;2&#x4E2A;3&#x8868;&#x793A;&#x5728;&#x524D;&#x540E;&#x5217;&#x5747;&#x52A0;3&#x5217;0 X = ZeroPadding2D((3, 3))(X_input) # 32&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x6838;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;1&#xD7;1&#xFF0C;&#x6211;&#x6CA1;&#x627E;&#x5230;name&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49; X = Conv2D(32, (7, 7), strides = (1, 1), name = &apos;conv0&apos;)(X) # &#x6B63;&#x5219;&#x5316;&#xFF0C;&#x53C2;&#x89C1;&#x300A;&#x7B14;&#x8BB0;&#x516D;&#x300B;3.4&#x6B63;&#x5219;&#x5316;&#x7F51;&#x7EDC;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570; X = BatchNormalization(axis = 3, name = &apos;bn0&apos;)(X) # &#x5B9A;&#x4E49;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;RELU X = Activation(&apos;relu&apos;)(X) # MAXPOOL&#xFF0C;Pooling&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;2&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2 X = MaxPooling2D((2, 2), name=&apos;max_pool&apos;)(X) X = Flatten()(X) X = Dense(1, activation=&apos;sigmoid&apos;, name=&apos;fc&apos;)(X) ... model = Model(inputs = X_input, outputs = X, name=&apos;HappyModel&apos;) ... return model Pooling&#x53EF;&#x53C2;&#x89C1;&#x7B14;&#x8BB0;&#x4E5D;-Padding BatchNormalization&#x53EF;&#x53C2;&#x89C1;&#x7B14;&#x8BB0;&#x516D;-&#x6B63;&#x5219;&#x5316;&#x7F51;&#x7EDC;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570; MaxPooling&#x53EF;&#x53C2;&#x89C1;&#x7B14;&#x8BB0;&#x4E5D;-&#x6C60;&#x5316;&#x5C42; &#x751F;&#x6210;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5982;&#x4E0B;&#xFF1A; &#x672C;&#x8282;&#x672B;&#x5C3E;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x7B97;&#x6CD5;&#x7ED3;&#x6784;&#x56FE;&#xFF1A; 12plot_model(happyModel, to_file=&apos;HappyModel.png&apos;)SVG(model_to_dot(happyModel).create(prog=&apos;dot&apos;, format=&apos;svg&apos;)) &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x4F7F;&#x7528;&#x4E86;graphviz&#xFF0C;&#x9700;&#x8981;&#x5148;&#x5B89;&#x88C5;Graphviz: 1brew install graphviz &#x751F;&#x6210;&#x7684;&#x7ED3;&#x6784;&#x56FE;&#x4E3A;&#xFF1A; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyCoding4_2_KerasTutorial&#x3002; &#x53C2;&#x8003;&#x8D44;&#x6599; &#x5FEB;&#x901F;&#x5F00;&#x59CB;&#xFF1A;30s&#x4E0A;&#x624B;Keras &#x5E8F;&#x8D2F;&#x6A21;&#x578B; Residual Networks &#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x6B8B;&#x5DEE;&#x5757;&#x6709;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#x3002; &#x6052;&#x7B49;&#x5757;&#x5982;&#x4E0B; &#x5377;&#x79EF;&#x5757;&#x5982;&#x4E0B; &#x5DEE;&#x5F02;&#x5728;&#x4E8E;&#x5728;shortcut&#x8DEF;&#x5F84;&#x4E0A;&#x662F;&#x5426;&#x6267;&#x884C;&#x4E86;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x3002;&#x5982;&#x679C;x(shortcut)&#x548C;&#x7ECF;&#x8FC7;&#x4E09;&#x4E2A;&#x7EC4;&#x4EF6;&#x8FD0;&#x7B97;&#x540E;&#x7684;x&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x7EF4;&#x5EA6;&#xFF0C;&#x4E8C;&#x8005;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x76F8;&#x52A0;&#xFF0C;&#x5C31;&#x91C7;&#x7528;&#x6052;&#x7B49;&#x5757;&#x3002;&#x5426;&#x5219;&#x7531;&#x4E8E;&#x7EAC;&#x5EA6;&#x4E0D;&#x540C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x76F8;&#x52A0;&#xFF0C;&#x9700;&#x8981;&#x91C7;&#x7528;&#x5377;&#x79EF;&#x5757;&#x8FD0;&#x7B97;&#x540E;&#x518D;&#x76F8;&#x52A0;&#x3002; &#x4EE3;&#x7801;&#x6CA1;&#x592A;&#x591A;&#x8981;&#x8BF4;&#x7684;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5199;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E3B;&#x8981;&#x662F;&#x753B;&#x597D;&#x7ED3;&#x6784;&#x56FE;&#xFF0C;&#x5E76;&#x57F9;&#x517B;&#x4ECE;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5230;&#x4EE3;&#x7801;&#x8303;&#x5F0F;&#x7684;&#x76F4;&#x89C2;&#x8BB0;&#x5FC6;&#x3002; &#x672C;&#x8282;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5728;GPU&#x4E0A;&#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x6A21;&#x578B;ResNet50.h5&#xFF0C;&#x5E94;&#x8BE5;&#x638C;&#x63E1;&#x4E0B;&#x600E;&#x4E48;&#x4FDD;&#x5B58;&#x6A21;&#x578B;&#x6587;&#x4EF6;&#xFF0C;&#x600E;&#x4E48;&#x8BFB;&#x53D6;&#x5E76;&#x7EE7;&#x7EED;&#x8BAD;&#x7EC3;&#x3002; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyCoding4_2_ResidualNetworks&#x3002; &#x672C;&#x8282;&#x9700;&#x8981;&#x8BB0;&#x4F4F;&#xFF1A; &#x975E;&#x5E38;&#x6DF1;&#x7684;&#x201C;&#x666E;&#x901A;&#x201D;&#x7F51;&#x7EDC;&#x4F1A;&#x56E0;&#x4E3A;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x800C;&#x96BE;&#x4EE5;&#x8BAD;&#x7EC3;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x5B9E;&#x8DF5;&#x4E2D;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x8DF3;&#x8FC7;&#x8FDE;&#x63A5;&#x6709;&#x52A9;&#x4E8E;&#x89E3;&#x51B3;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x95EE;&#x9898;&#xFF0C;&#x4F7F;ResNet&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x5B66;&#x4E60;&#x8BC6;&#x522B;&#x529F;&#x80FD;&#x3002; &#x6709;&#x4E24;&#x79CD;&#x4E3B;&#x8981;&#x7C7B;&#x578B;&#x7684;&#x5757;&#xFF1A;&#x6052;&#x7B49;&#x5757;&#x548C;&#x5377;&#x79EF;&#x5757;&#x3002; &#x901A;&#x8FC7;&#x5C06;&#x8FD9;&#x4E9B;&#x5757;&#x5806;&#x53E0;&#x5728;&#x4E00;&#x8D77;&#x6765;&#x53EF;&#x4EE5;&#x6784;&#x5EFA;&#x975E;&#x5E38;&#x6DF1;&#x7684;&#x6B8B;&#x5DEE;&#x7F51;&#x7EDC;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（九）]]></title>
    <url>%2F2018%2F04%2F04%2F2018%2F0404DeepLearningAI11%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x7B2C;&#x4E00;&#x5468;&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x3002; &#x672C;&#x95E8;&#x8BFE;&#x7A0B;&#x300A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x4E3B;&#x8981;&#x5E94;&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x3002;&#x672C;&#x5468;&#x8BFE;&#x7A0B;&#x4ECB;&#x7ECD;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x57FA;&#x672C;&#x6A21;&#x5757;&#xFF0C;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x3002;&#x5305;&#x62EC;&#x5377;&#x79EF;&#x8BA1;&#x7B97;&#x7684;&#x6982;&#x5FF5;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x53C2;&#x6570;&#x7B56;&#x7565;&#x5982;Padding&#x3001;&#x6B65;&#x957F;&#xFF1B;&#x5377;&#x79EF;&#x5C42;&#x3001;&#x6C60;&#x5316;&#x5C42;&#x3001;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x53CA;&#x5404;&#x5C42;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x4E3B;&#x8981;&#x4E3A;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x5E94;&#x7528;&#x6253;&#x597D;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x3002; 1.2 &#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x793A;&#x4F8B; &#x5377;&#x79EF;&#x7B97;&#x6CD5;&#x89C4;&#x5219;&#xFF1A;&#x5377;&#x79EF;&#x7684;&#x4E58;&#x6570;&#x6210;&#x4E3A;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x6216;&#x5377;&#x79EF;&#x6838;&#x3002;&#x5C06;&#x8FC7;&#x6EE4;&#x5668;&#x53E0;&#x52A0;&#x5230;&#x88AB;&#x8FD0;&#x7B97;&#x77E9;&#x9635;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x4E24;&#x4E2A;&#x77E9;&#x9635;&#x7684;&#x53E0;&#x52A0;&#x5143;&#x7D20;&#x76F8;&#x4E58;&#x6C42;&#x548C;&#xFF0C;&#x5F97;&#x5230;&#x65B0;&#x77E9;&#x9635;&#x7684;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x7136;&#x540E;&#x5C06;&#x8FC7;&#x6EE4;&#x5668;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x79FB;&#x52A8;&#xFF0C;&#x4ECE;&#x4E0A;&#x5411;&#x4E0B;&#x79FB;&#x52A8;&#xFF0C;&#x6BCF;&#x6B21;&#x79FB;&#x52A8;&#x505A;&#x4E00;&#x6B21;&#x76F8;&#x4E58;&#x6C42;&#x548C;&#x7684;&#x8FD0;&#x7B97;&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x3002; &#x5728;Python&#x4E2D;&#x4F7F;&#x7528;conv-forward&#x8868;&#x793A;&#x5377;&#x79EF; &#x5728;TensorFlow&#x4E2D;&#x4F7F;&#x7528;tf.nn.conv2d&#x8868;&#x793A;&#x5377;&#x79EF; &#x5728;keras&#x4E2D;&#x4F7F;&#x7528;Conv2D&#x8868;&#x793A;&#x5377;&#x79EF; &#x4E3A;&#x4EC0;&#x4E48;&#x5377;&#x79EF;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5462;&#xFF1F;&#x901A;&#x8FC7;&#x4E0D;&#x540C;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x80FD;&#x628A;&#x4E0D;&#x540C;&#x7684;&#x8FB9;&#x7F18;&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#x51FA;&#x6765;&#x3002;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x7AD6;&#x76F4;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x7ECF;&#x8FC7;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x7ED3;&#x679C;&#x4E2D;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x7AD6;&#x76F4;&#x7684;&#x4EAE;&#x6761;&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x89C9;&#x5F97;&#x6B64;&#x5904;&#x6CA1;&#x6709;&#x8BB2;&#x900F;&#x5F7B;&#xFF1A;&#x7AD6;&#x76F4;&#x8FB9;&#x7F18;&#x662F;&#x56E0;&#x4E3A;&#x5728;&#x7AD6;&#x76F4;&#x65B9;&#x5411;&#x4E0A;&#xFF0C;&#x6709;&#x5DEE;&#x5F02;&#x8F83;&#x5927;&#x7684;&#x4E24;&#x5217;&#x5143;&#x7D20;&#xFF0C;&#x65E0;&#x8BBA;&#x5728;&#x539F;&#x77E9;&#x9635;&#x8FD8;&#x662F;&#x8FD0;&#x7B97;&#x540E;&#x5F97;&#x5230;&#x7684;&#x77E9;&#x9635;&#x4E0A;&#xFF0C;&#x68C0;&#x6D4B;&#x7AD6;&#x76F4;&#x8FB9;&#x7F18;&#x90FD;&#x662F;&#x8981;&#x53BB;&#x53D1;&#x73B0;&#x6709;&#x5BF9;&#x6BD4;&#x5EA6;&#x7684;&#x5217;&#xFF0C;&#x8BA1;&#x7B97;&#x65B9;&#x6CD5;&#x5E76;&#x6CA1;&#x6709;&#x5DEE;&#x522B;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8BF4;&#x5377;&#x79EF;&#x5C31;&#x80FD;&#x68C0;&#x6D4B;&#x8FB9;&#x7F18;&#x5462;&#xFF1F; &#x6211;&#x731C;&#x6D4B;&#x4E5F;&#x8BB8;&#x662F;&#x7ECF;&#x8FC7;&#x5BF9;&#x8FC7;&#x6EE4;&#x5668;&#x5377;&#x79EF;&#x7684;&#x6B63;&#x8D1F;&#x8FD0;&#x7B97;&#x53EF;&#x4EE5;&#x653E;&#x5927;&#x5BF9;&#x6BD4;&#x5EA6;&#xFF0C;&#x4F46;&#x76F4;&#x89C9;&#x4E0A;&#x6211;&#x603B;&#x611F;&#x89C9;&#x8FD9;&#x4E2A;&#x4E0D;&#x591F;&#x3002; 1.3 &#x66F4;&#x591A;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x5185;&#x5BB9; &#x4E0D;&#x540C;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x53EF;&#x4EE5;&#x68C0;&#x6D4B;&#x51FA;&#x4E0D;&#x540C;&#x7684;&#x56FE;&#x50CF;&#x8FB9;&#x7F18;&#x7279;&#x5F81;&#xFF0C;&#x4F8B;&#x5982;&#x4E0D;&#x540C;&#x7684;&#x660E;&#x6697;&#x53D8;&#x5316;&#x3001;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5411;&#x53D8;&#x5316;&#x7B49;&#x3002;&#x4E0A;&#x4E00;&#x8282;&#x4F8B;&#x5B50;&#x5982;&#x679C;&#x88AB;&#x68C0;&#x6D4B;&#x7684;&#x56FE;&#x7247;&#x5DE6;&#x53F3;&#x7FFB;&#x8F6C;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD0;&#x7B97;&#x5F97;&#x5230;&#x7684;&#x77E9;&#x9635;&#x4E5F;&#x5C31;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#xFF1A; &#x540C;&#x7406;&#xFF0C;&#x5C06;&#x7AD6;&#x76F4;&#x8FC7;&#x6EE4;&#x5668;&#x8F6C;&#x7F6E;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x6C34;&#x5E73;&#x8FC7;&#x6EE4;&#x5668;&#x3002; &#x5C3D;&#x7BA1;&#x6211;&#x5BF9;&#x5377;&#x79EF;&#x5728;&#x7279;&#x5F81;&#x8BC6;&#x522B;&#x4E2D;&#x7684;&#x4F5C;&#x7528;&#x7406;&#x89E3;&#x8FD8;&#x4E0D;&#x662F;&#x5F88;&#x900F;&#x5F7B;&#xFF0C;&#x4F46;&#x8FD9;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E2D;&#x4F3C;&#x4E4E;&#x5E76;&#x4E0D;&#x91CD;&#x8981;&#xFF0C;&#x4F60;&#x53EA;&#x8981;&#x77E5;&#x9053;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x4E00;&#x5B9A;&#x662F;&#x6709;&#x7740;&#x67D0;&#x79CD;&#x88AB;&#x653E;&#x5927;&#x7684;&#x7279;&#x5F81;&#x7684;&#xFF0C;&#x81F3;&#x4E8E;&#x7279;&#x5F81;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x53EB;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x81EA;&#x5DF1;&#x53BB;&#x53D1;&#x73B0;&#x5427;&#x3002;&#x8BFE;&#x4EF6;&#x4E2D;&#x8FD9;&#x5F20;&#x56FE;&#x9053;&#x51FA;&#x4E86;&#x5377;&#x79EF;&#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x4F5C;&#x7528;&#xFF1A; &#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5C31;&#x662F;&#x6784;&#x9020;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#xFF0C;&#x4E0D;&#x65AD;&#x8FED;&#x4EE3;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x901A;&#x8FC7;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x4EE4;&#x5377;&#x79EF;&#x7ED3;&#x679C;&#x4E0D;&#x65AD;&#x903C;&#x8FD1;&#x6807;&#x6CE8;&#x6837;&#x672C;&#x3002;&#x4EBA;&#x4E0D;&#x5FC5;&#x8D39;&#x5FC3;&#x5F52;&#x7EB3;&#x548C;&#x62BD;&#x8C61;&#x7279;&#x5F81;&#x548C;&#x6BD4;&#x8F83;&#x51FD;&#x6570;&#x4E86;&#xFF0C;&#x901A;&#x8FC7;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x8BC4;&#x4EF7;&#x3002;&#x800C;&#x4E14;&#x6211;&#x7406;&#x89E3;&#xFF0C;&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#x7684;&#x539F;&#x7406;&#x8C8C;&#x4F3C;&#x786E;&#x5B9E;&#x4E0D;&#x91CD;&#x8981;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4E0D;&#x540C;&#x5C42;&#x9762;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x6027;&#x8D28;&#xFF0C;&#x4EBA;&#x5DE5;&#x5904;&#x7406;&#x9700;&#x8981;&#x5206;&#x95E8;&#x522B;&#x7C7B;&#x5730;&#x5F52;&#x7EB3;&#xFF0C;&#x800C;&#x8FD9;&#x4E9B;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x770B;&#x6765;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5B8C;&#x6210;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x62BD;&#x8C61;&#x3002; 1.4 Padding &#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x6709;&#x4E24;&#x4E2A;&#x7279;&#x70B9;&#xFF1A; &#x4EE4;&#x88AB;&#x5377;&#x79EF;&#x7684;&#x77E9;&#x9635;&#x957F;&#x5BBD;&#x5747;&#x4E3A;n&#xFF0C;&#x5377;&#x79EF;&#x8FC7;&#x6EE4;&#x5668;&#x957F;&#x5BBD;&#x5747;&#x4E3A;f&#xFF0C;&#x5219;&#x8FD0;&#x7B97;&#x540E;&#x7684;&#x77E9;&#x9635;&#x957F;&#x5BBD;&#x4E3A;n-f+1&#x3002;&#x53EA;&#x8981;&#x8FC7;&#x6EE4;&#x5668;&#x957F;&#x5BBD;&#x5927;&#x4E8E;1&#xFF0C;&#x5219;&#x6BCF;&#x6B21;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x90FD;&#x4F1A;&#x8BA9;&#x77E9;&#x9635;&#x53D8;&#x5C0F;&#xFF0C;&#x6BD4;&#x5982;6&#xD7;6&#x77E9;&#x9635; * 3&#xD7;3&#x8FC7;&#x6EE4;&#x5668; = 4&#xD7;4&#x77E9;&#x9635;&#x3002; &#x5728;&#x88AB;&#x5377;&#x79EF;&#x77E9;&#x9635;&#x4E2D;&#xFF0C;&#x4F4D;&#x4E8E;&#x8FB9;&#x7F18;&#x6216;&#x89D2;&#x843D;&#x7684;&#x50CF;&#x7D20;&#x5BF9;&#x4E8E;&#x5377;&#x79EF;&#x7ED3;&#x679C;&#x7684;&#x5F71;&#x54CD;&#x8F83;&#x5C0F;&#x3002;&#x4F8B;&#x5982;&#x56DB;&#x4E2A;&#x89D2;&#x7684;&#x50CF;&#x7D20;&#x5728;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x4E2D;&#x53EA;&#x53C2;&#x4E0E;&#x4E00;&#x6B21;&#xFF0C;&#x800C;&#x4E2D;&#x5FC3;&#x70B9;&#x80FD;&#x53C2;&#x4E0E;\(f^2\) &#x6B21;&#x3002; &#x4EE5;&#x4E0A;&#x7684;&#x4E24;&#x4E2A;&#x7279;&#x70B9;&#x4F1A;&#x4EE4;&#x56FE;&#x7247;&#x5728;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5C42;&#x5C42;&#x8FD0;&#x7B97;&#x4E2D;&#xFF0C;&#x8FB9;&#x7F18;&#x7279;&#x5F81;&#x88AB;&#x9010;&#x6B65;&#x6254;&#x6389;&#xFF0C;&#x800C;&#x4E14;&#x5C42;&#x5C42;&#x5411;&#x4E2D;&#x5FC3;&#x4FB5;&#x8680;&#x3002; &#x53EF;&#x4EE5;&#x6CBF;&#x7740;&#x56FE;&#x7247;&#x8FB9;&#x7F18;&#x589E;&#x52A0;&#x4E00;&#x5C42;&#x50CF;&#x7D20;&#xFF0C;&#x901A;&#x5E38;&#x7528;0&#x586B;&#x5145;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;padding&#x3002;&#x4EE4;Padding&#x7684;&#x5C42;&#x6570;&#x4E3A;p&#xFF0C;&#x5219;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x540E;&#x7684;&#x77E9;&#x9635;&#x4E3A;(n+2p-f+1)&#xD7;(n+2p-f+1)&#x3002;&#x8FD8;&#x4EE5;6&#xD7;6&#x7684;&#x56FE;&#xFF0C;3&#xD7;3&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x4E3A;&#x4F8B;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x5C42;&#x8FB9;&#x7F18;&#xFF0C;&#x5377;&#x79EF;&#x540E;&#x5F97;&#x5230;&#x7684;&#x77E9;&#x9635;&#x4ECD;&#x662F;6&#xD7;6&#x3002; &#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x901A;&#x5E38;&#x6709;&#x4E24;&#x79CD;&#x7B56;&#x7565;: &#x4E00;&#x79CD;&#x79F0;&#x4E3A;Valid&#x5377;&#x79EF;&#xFF0C;&#x5373;&#xFF1A;&#x4E0D;&#x505A;Padding&#xFF1B; &#x53E6;&#x4E00;&#x79CD;&#x79F0;&#x4E3A;Same&#x5377;&#x79EF;&#xFF0C;&#x5373;&#xFF1A;&#x4F7F;&#x77E9;&#x9635;&#x5C3A;&#x5BF8;&#x5728;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x524D;&#x540E;&#x4FDD;&#x6301;&#x76F8;&#x7B49;&#x3002;&#x4E8E;&#x662F;\(n+2p-f+1=n&#xFF0C;p=\frac{(f&#x2212;1)}{2}\) &#x3002;&#x8FD9;&#x5C31;&#x8981;&#x6C42;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x5C3A;&#x5BF8;&#x5E94;&#x4E3A;&#x5947;&#x6570;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x786E;&#x5B9E;&#x5982;&#x6B64;&#x3002; 1.5 &#x5377;&#x79EF;&#x6B65;&#x957F; &#x6B65;&#x957F;&#x662F;&#x5728;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6BCF;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x540E;&#x5411;&#x53F3;&#x6216;&#x5411;&#x4E0B;&#x79FB;&#x52A8;&#x7684;&#x5355;&#x5143;&#x6570;&#xFF0C;&#x901A;&#x5E38;&#x7528;s&#x6765;&#x8868;&#x793A;&#x3002;&#x4EE4;&#x8FD0;&#x7B97;&#x524D;&#x77E9;&#x9635;&#x5BBD;&#x9AD8;&#x4E3A;n&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;&#x5BBD;&#x9AD8;&#x4E3A;f&#xFF0C;Padding&#x5BBD;&#x5EA6;&#x4E3A;p&#xFF0C;&#x6B65;&#x957F;&#x4E3A;s&#xFF0C;&#x5219;&#x8FD0;&#x7B97;&#x540E;&#x7684;&#x77E9;&#x9635;&#x5BBD;&#x9AD8;&#x4E3A;\(&#x230A;\frac{(n+2p&#x2212;f)}{s+1}&#x230B;\)&#xFF0C;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#x8868;&#x793A;&#x5982;&#x679C;&#x8FC7;&#x6EE4;&#x5668;&#x8D85;&#x51FA;&#x77E9;&#x9635;&#x8FB9;&#x7F18;&#xFF0C;&#x5219;&#x4E0D;&#x518D;&#x8FD0;&#x7B97;&#x3002; &#x5728;&#x4E00;&#x4E9B;&#x6570;&#x5B66;&#x6559;&#x6750;&#x4E2D;&#xFF0C;&#x5BF9;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#x5148;&#x7ED9;&#x8FC7;&#x6EE4;&#x5668;&#x6CBF;&#x7740;&#x53F3;&#x4E0A;&#x5DE6;&#x4E0B;&#x5BF9;&#x89D2;&#x7EBF;&#x8F6C;&#x7F6E;&#xFF0C;&#x518D;&#x6309;&#x7167;&#x524D;&#x9762;&#x7684;&#x89C4;&#x5219;&#x505A;&#x8FD0;&#x7B97;&#x3002;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E2D;&#x4E0D;&#x9700;&#x8981;&#x8F6C;&#x7F6E;&#x6B65;&#x9AA4;&#x3002; 1.6 &#x5377;&#x79EF;&#x4E3A;&#x4F55;&#x6709;&#x6548; &#x672C;&#x8282;&#x5185;&#x5BB9;&#x5E76;&#x6CA1;&#x6709;&#x89E3;&#x91CA;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x6548;&#xFF0C;&#x800C;&#x662F;&#x8FDB;&#x4E00;&#x6B65;&#x6269;&#x5C55;&#x5377;&#x79EF;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x8BB2;&#x89E3;&#x4E86;&#x591A;&#x901A;&#x9053;&#x5377;&#x79EF;&#x548C;&#x591A;&#x8FC7;&#x6EE4;&#x5668;&#x5377;&#x79EF;&#x7684;&#x64CD;&#x4F5C;&#x89C4;&#x5219;&#x3002; &#x524D;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x56FE;&#x7247;&#x90FD;&#x662F;&#x7070;&#x5EA6;&#x56FE;&#xFF0C;&#x56E0;&#x6B64;&#x662F;2&#x7EF4;&#x77E9;&#x9635;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x5E0C;&#x671B;&#x5BF9;RGB&#x4E09;&#x4E2A;&#x8272;&#x503C;&#x901A;&#x9053;&#x5355;&#x72EC;&#x505A;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x4E3A;3&#x901A;&#x9053;&#x56FE;&#x5F15;&#x5165;3&#x901A;&#x9053;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x3002;&#x5982;&#x4E0B;&#xFF0C;&#x5B83;&#x7684;&#x8FD0;&#x7B97;&#x89C4;&#x5219;&#x662F;&#x5C06;&#x5404;&#x901A;&#x9053;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x518D;&#x76F8;&#x52A0;&#xFF0C;&#x5F97;&#x5230;&#x7ED3;&#x679C;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF1A; &#x5B83;&#x8981;&#x6C42;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x901A;&#x9053;&#x6570;&#x5FC5;&#x987B;&#x7B49;&#x4E8E;&#x88AB;&#x8FD0;&#x7B97;&#x77E9;&#x9635;&#x7684;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x8FD0;&#x7B97;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x4E00;&#x4E2A;2&#x7EF4;&#x77E9;&#x9635;&#x3002; &#x5728;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x9009;&#x53D6;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x5BF9;&#x67D0;&#x4E00;&#x4E2A;&#x989C;&#x8272;&#x901A;&#x9053;&#x505A;&#x68C0;&#x6D4B;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#x5C06;&#x5176;&#x5B83;&#x901A;&#x9053;&#x7F6E;0&#xFF0C;&#x5982;&#x7B2C;&#x4E00;&#x79CD;&#x8FC7;&#x6EE4;&#x5668;&#xFF1B;&#x5982;&#x679C;&#x4E0D;&#x5173;&#x5FC3;&#x5177;&#x4F53;&#x662F;&#x4EC0;&#x4E48;&#x989C;&#x8272;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x5C06;&#x8FC7;&#x6EE4;&#x5668;&#x4E2D;&#x5404;&#x901A;&#x9053;&#x8BBE;&#x4E3A;&#x4E00;&#x6837;&#xFF0C;&#x5982;&#x7B2C;&#x4E8C;&#x79CD;&#x8FC7;&#x6EE4;&#x5668;&#x3002; &#x5F53;&#x5BF9;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x9700;&#x8981;&#x505A;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x68C0;&#x6D4B;&#x65F6;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5728;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x4E2D;&#x5F15;&#x5165;&#x591A;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x3002;&#x6BD4;&#x5982;&#x8FC7;&#x6EE4;&#x5668;A&#x7528;&#x4E8E;&#x68C0;&#x6D4B;&#x6C34;&#x5E73;&#x8FB9;&#x7F18;&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;B&#x7528;&#x4E8E;&#x68C0;&#x6D4B;&#x7AD6;&#x76F4;&#x8FB9;&#x7F18;&#x3002;&#x539F;&#x59CB;&#x56FE;&#x7247;&#x548C;&#x6BCF;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x8FD0;&#x7B97;&#x540E;&#x90FD;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x4E8C;&#x7EF4;&#x77E9;&#x9635;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8FD9;&#x4E9B;&#x77E9;&#x9635;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x591A;&#x901A;&#x9053;&#x7ACB;&#x65B9;&#x4F53;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8FD0;&#x7B97;&#x89C4;&#x5219;&#x3002; &#x4EE4;&#x5F85;&#x68C0;&#x6D4B;&#x7684;&#x56FE;&#x7247;&#x4E3A;n&#xD7;n&#xD7;n_c&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;&#x4E3A;f&#xD7;f&#xD7;n_c&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x4E2A;&#x6570;&#x4E3A;#filters&#xFF0C;&#x5219;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x4E3A;(n&#x2212;f+1)&#xD7;(n&#x2212;f+1)&#xD7;(#filters)&#x3002; 1.7 &#x5355;&#x5C42;&#x5377;&#x79EF;&#x7F51;&#x7EDC; &#x4E0A;&#x4E00;&#x8282;&#x5DF2;&#x7ECF;&#x57FA;&#x672C;&#x628A;&#x5355;&#x5C42;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x7684;&#x8F6E;&#x5ED3;&#x52FE;&#x753B;&#x51FA;&#x6765;&#x4E86;&#xFF0C;&#x672C;&#x8282;&#x753B;&#x9F99;&#x70B9;&#x775B;&#xFF1A; &#x8FC7;&#x6EE4;&#x5668;&#x5C31;&#x662F;\(w^([l])\)&#xFF0C;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x5C31;&#x662F;\(w^[l] &#xB7;a^[l&#x2212;1]\) &#xFF0C;&#x5728;&#x6B64;&#x57FA;&#x7840;&#x4E0A;&#x52A0;&#x4E0A;&#x504F;&#x79FB;b_i&#xFF0C;&#x518D;&#x53D6;&#x4E00;&#x4E2A;&#x975E;&#x7EBF;&#x6027;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x4E86;&#x3002; &#x53EF;&#x4EE5;&#x5F15;&#x5165;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x7279;&#x5F81;&#x68C0;&#x6D4B;&#x77E9;&#x9635;&#x4F5C;&#x4E3A;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x901A;&#x5E38;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x4F1A;&#x7528;&#x5230;&#x5341;&#x51E0;&#x5230;&#x51E0;&#x5341;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x4E0D;&#x7B49;&#x3002;&#x5047;&#x8BBE;&#x6BCF;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x4E3A;3&#xD7;3&#xD7;3&#x518D;&#x52A0;&#x4E0A;&#x504F;&#x79FB;&#x5171;28&#x4E2A;&#x53C2;&#x6570;&#xFF0C;10&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x4E5F;&#x53EA;&#x6709;280&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x800C;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;&#x5047;&#x8BBE;1000&#xD7;1000&#xD7;3&#xFF0C;&#x5982;&#x679C;&#x6309;&#x7167;&#x4E4B;&#x524D;&#x8BB2;&#x7684;&#x5E38;&#x89C4;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x628A;&#x5B83;&#x6241;&#x5E73;&#x5316;&#x540E;&#x6BCF;&#x5C42;&#x9700;&#x8981;3M&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x663E;&#x7136;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x8981;&#x6BD4;&#x5E38;&#x89C4;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8FD0;&#x7B97;&#x89C4;&#x6A21;&#x5C0F;&#x5F88;&#x591A;&#x3002; &#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x7B26;&#x53F7;&#xFF0C;&#x5BF9;&#x4E8E;&#x7B2C;l&#x5C42;&#xFF0C;&#x4EE4;&#xFF1A; &#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x4E2A;&#x6570;&#xFF1A;\(f^{[l]}\) &#x5377;&#x79EF;padding&#x5C42;&#x6570;&#xFF1A;\(p^{[l]}\) &#x5377;&#x79EF;&#x6B65;&#x957F;&#xFF1A;\(s^{[l]}\) &#x8F93;&#x5165;&#x5C42;&#x4E3A;&#xFF1A;\(n_H^[l&#x2212;1] &#xD7;n_W^[l&#x2212;1] &#xD7;n_C^[l&#x2212;1]\) &#xFF0C;&#x5BF9;&#x4E8E;di&#x7B2C;0&#x5C42;&#xFF0C;&#x8F93;&#x5165;&#x5C31;&#x662F;&#x539F;&#x59CB;&#x56FE;&#x7247;&#x957F;&#x5BBD;&#x53CA;&#x901A;&#x9053;&#x6570; &#x8F93;&#x51FA;&#x5C42;&#x4E3A;&#xFF1A;\(n_H^[l] &#xD7;n_W^[l] &#xD7;n_C^[l]\) &#x5219; \(n_H^{[l]}=&#x230A;(n_H^{[l&#x2212;1]}+2p^{[l]}&#x2212;f^{[l]})/s^{[l]} +1&#x230B;&#xFF0C; \; n_W^{[l]}=&#x230A;(n_W^{[l&#x2212;1]}+2p^{[l]}&#x2212;f^{[l]})/s^{[l]} +1&#x230B;\)&#xFF0C; \(n_C^{[l&#x2212;1]}\) &#x5C31;&#x662F;&#x4E0A;&#x4E00;&#x5C42;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x4E2A;&#x6570; &#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x901A;&#x9053;&#x6570;&#x5FC5;&#x987B;&#x7B49;&#x4E8E;&#x4E0A;&#x4E00;&#x5C42;&#x8F93;&#x51FA;&#x5C42;&#x7684;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x6545;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x7EF4;&#x6570;&#x662F;&#xFF1A;\(f^{[l]} &#xD7;f^{[l]} &#xD7;n_C^{[l&#x2212;1]}\) &#x518D;&#x8003;&#x8651;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5373;&#x6743;&#x91CD;&#x5C42;&#x7684;&#x7EF4;&#x5EA6;&#xFF1A;\(f^{[l]} &#xD7;f^{[l]} &#xD7;n_C^{[l&#x2212;1]} &#xD7;n_C^{[l]}\) &#x7B2C;l&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x503C;&#x5373;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x7EF4;&#x5EA6;&#x4E3A;&#xFF1A;\(a^{[l]}&#x2192;n_H^{[l]}&#xD7;n_W^{[l]}&#xD7;n_C^{[l]}\) &#x7B2C;l&#x5C42;&#x504F;&#x5DEE;&#x503C;&#x7EF4;&#x5EA6;&#x4E3A;&#xFF1A;\(b^{[l]}&#x2192; 1&#xD7;1&#xD7;1&#xD7;n_C^{[l]}\) 1.8 &#x7B80;&#x5355;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x793A;&#x4F8B; &#x8BFE;&#x4EF6;&#x91CC;&#x7684;&#x8349;&#x56FE;&#x5DF2;&#x7ECF;&#x80FD;&#x6E05;&#x6670;&#x5730;&#x53CD;&#x5E94;&#x793A;&#x4F8B;&#xFF1A; &#x8F93;&#x5165;&#x5C42;&#x4E3A;\(39&#xD7;39&#xD7;3&#xFF0C;n_H^[0] =n_W^[0] =39&#xFF0C;n_C^[0] =3\) &#x8FC7;&#x6EE4;&#x5668;&#x4E3A;\(3&#xD7;3&#xD7;3&#xFF0C;f^{[1]} =3\) &#x8FC7;&#x6EE4;&#x5668;&#x4E2A;&#x6570;&#xFF1A;10 &#x6B65;&#x957F;\(s^{[1]} =1\) padding \(p^{[1]} =0\) &#x7B2C;&#x4E00;&#x4E2A;&#x9690;&#x85CF;&#x5C42;&#x4E3A;\(37&#xD7;37&#xD7;10&#xFF0C; \frac{(39+0&#x2212;3)}{1}+1=37&#xFF0C;n_H^{[0]} =n_W^{[0]} =37&#xFF0C;n_C^{[0]} =10\) &#x8FC7;&#x6EE4;&#x5668;&#x4E3A;\(5&#xD7;5&#xD7;10&#xFF0C;f^{[1]} =5\) &#x8FC7;&#x6EE4;&#x5668;&#x4E2A;&#x6570;&#xFF1A;20 &#x6B65;&#x957F;\(s^{[1]} =2\) padding \(p^{[1]} =0\) &#x7B2C;&#x4E8C;&#x4E2A;&#x9690;&#x85CF;&#x5C42;&#x4E3A;\(17&#xD7;17&#xD7;20&#xFF0C; \frac{(37+0&#x2212;5)}{2}+1=17&#xFF0C;n_H^{[0]} =n_W^{[0]} =17&#xFF0C;n_C^{[0]} =20\) &#x8FC7;&#x6EE4;&#x5668;&#x4E3A;\(5&#xD7;5&#xD7;20&#xFF0C;f^{[1]} =5\) &#x8FC7;&#x6EE4;&#x5668;&#x4E2A;&#x6570;&#xFF1A;40 &#x6B65;&#x957F;\(s^{[1]} =2\) padding \(p^{[1]} =0\) &#x7B2C;&#x4E09;&#x4E2A;&#x9690;&#x85CF;&#x5C42;&#x4E3A;\(7&#xD7;7&#xD7;40&#xFF0C; \frac{(17+0&#x2212;5)}{2}+1=7&#xFF0C;n_H^{[0]} =n_W^{[0]} =7&#xFF0C;n_C^{[0]} =40\) &#x6700;&#x540E;&#x5C06;&#x8BE5;&#x5C42;&#x6241;&#x5E73;&#x5316;&#x4E3A;7&#xD7;7&#xD7;40&#x4E2A;&#x8282;&#x70B9;&#x6216;&#x8005;&#x751F;&#x6210;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7684;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x4F5C;&#x4E3A;softmax&#x7684;&#x8F93;&#x51FA;&#x5C42;&#x3002; &#x5173;&#x4E8E;&#x5982;&#x4F55;&#x9009;&#x53D6;&#x8FC7;&#x6EE4;&#x5668;&#xFF0C;&#x6B65;&#x957F;&#x3001;&#x4E2A;&#x6570;&#x4F1A;&#x5728;&#x540E;&#x9762;&#x7684;&#x7AE0;&#x8282;&#x91CC;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x3002;&#x672C;&#x8282;&#x53EA;&#x8981;&#x5BF9;&#x603B;&#x4F53;&#x5F62;&#x6001;&#x6709;&#x4E2A;&#x5370;&#x8C61;&#x5373;&#x53EF;&#xFF0C;&#x5373;&#x968F;&#x7740;&#x5C42;&#x6570;&#x7684;&#x589E;&#x52A0;&#xFF0C;&#x6BCF;&#x5C42;&#x8F93;&#x51FA;&#x7684;&#x7EF4;&#x5EA6;&#x5728;&#x7F29;&#x5C0F;&#xFF0C;&#x901A;&#x9053;&#x6570;&#x589E;&#x52A0;&#x3002;&#x5B8C;&#x6574;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x9664;&#x4E86;&#x5377;&#x79EF;&#x5C42;&#x5916;&#xFF0C;&#x5728;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x63A5;&#x4E0A;Polling&#x5C42;&#x548C;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#xFF08;Fully connected&#xFF09;&#xFF0C;&#x5728;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x7AE0;&#x8282;&#x4F1A;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x3002; 1.9 &#x6C60;&#x5316;&#x5C42; &#x6C60;&#x5316;&#x4E5F;&#x662F;&#x5C06;&#x4E00;&#x4E2A;&#x77E9;&#x9635;&#x4E0E;&#x8FC7;&#x6EE4;&#x5668;&#x505A;&#x8FD0;&#x7B97;&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;&#x8FD0;&#x884C;&#x7684;&#x8F68;&#x8FF9;&#x548C;&#x5377;&#x79EF;&#x4E00;&#x6837;&#xFF0C;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#x6BCF;&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x6700;&#x5927;&#x6C60;&#x5316;&#x662F;&#x53D6;&#x8FC7;&#x6EE4;&#x5668;&#x8986;&#x76D6;&#x5230;&#x7684;&#x77E9;&#x9635;&#x4E2D;&#x6240;&#x6709;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5927;&#x503C;&#x4F5C;&#x4E3A;&#x8F93;&#x51FA;&#x5143;&#x7D20;&#x3002; &#x6C60;&#x5316;&#x4E5F;&#x6709;&#x4E24;&#x4E2A;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x5C3A;&#x5BF8;&#x548C;&#x6B65;&#x957F;&#x3002;&#x548C;&#x5377;&#x79EF;&#x4E0D;&#x540C;&#xFF0C;&#x6C60;&#x5316;&#x4E0D;&#x662F;&#x548C;&#x53D8;&#x91CF;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x53EA;&#x8981;&#x8FC7;&#x6EE4;&#x5668;&#x7684;&#x5C3A;&#x5BF8;&#x548C;&#x6B65;&#x957F;&#x786E;&#x5B9A;&#xFF0C;&#x7ED3;&#x679C;&#x5C31;&#x786E;&#x5B9A;&#x4E86;&#xFF0C;&#x5176;&#x5B9E;&#x7B97;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x76EE;&#x8FD0;&#x7B97;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x6C60;&#x5316;&#x73AF;&#x8282;&#x4E0D;&#x9700;&#x8981;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x8FED;&#x4EE3;&#x53C2;&#x6570;&#x3002; &#x591A;&#x901A;&#x9053;&#x7684;&#x6C60;&#x5316;&#x4E0E;&#x5377;&#x79EF;&#x89C4;&#x5219;&#x4E0D;&#x540C;&#xFF0C;&#x591A;&#x901A;&#x9053;&#x6C60;&#x5316;&#x662F;&#x5C06;&#x6BCF;&#x4E2A;&#x901A;&#x9053;&#x72EC;&#x7ACB;&#x505A;&#x6C60;&#x5316;&#x8FD0;&#x7B97;&#xFF0C;&#x518D;&#x5C06;&#x5404;&#x901A;&#x9053;&#x7ED3;&#x679C;&#x7EC4;&#x5408;&#x6210;&#x591A;&#x901A;&#x9053;&#xFF0C;&#x56E0;&#x6B64;&#x6C60;&#x5316;&#x524D;&#x540E;&#x901A;&#x9053;&#x6570;&#x662F;&#x4E0D;&#x53D8;&#x7684;&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x6C60;&#x5316;&#x53EB;&#x505A;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x5B83;&#x548C;&#x6700;&#x5927;&#x6C60;&#x5316;&#x4EC5;&#x6709;&#x4E00;&#x70B9;&#x4E0D;&#x540C;&#xFF0C;&#x5C31;&#x662F;&#x539F;&#x672C;&#x53D6;&#x6700;&#x5927;&#x503C;&#x7684;&#x64CD;&#x4F5C;&#x6539;&#x6210;&#x53D6;&#x5E73;&#x5747;&#x503C;&#x3002;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x6CA1;&#x6709;&#x6700;&#x5927;&#x6C60;&#x5316;&#x90A3;&#x4E48;&#x5E38;&#x7528;&#x3002; &#x6211;&#x7406;&#x89E3;&#x6C60;&#x5316;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x7F29;&#x51CF;&#x6570;&#x636E;&#x91CF;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x5B83;&#x5C3D;&#x91CF;&#x4FDD;&#x7559;&#x539F;&#x77E9;&#x9635;&#x7684;&#x5BF9;&#x6BD4;&#x5EA6;&#x7279;&#x5F81;&#xFF0C;&#x5F53;&#x7136;&#x6709;&#x6240;&#x8870;&#x51CF;&#xFF0C;&#x4F46;&#x4E5F;&#x8BA9;&#x6570;&#x636E;&#x91CF;&#x5F97;&#x5230;&#x5927;&#x5E45;&#x7684;&#x538B;&#x7F29;&#x3002; 1.10 &#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x793A;&#x4F8B; &#x8BFE;&#x4EF6;&#x4E2D;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x793A;&#x4F8B;&#xFF0C;&#x8FD9;&#x662F;&#x5E94;&#x7528;&#x5728;&#x624B;&#x5199;&#x6570;&#x5B57;&#x8BC6;&#x522B;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; &#x5B83;&#x6709;2&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x6BCF;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x5305;&#x62EC;1&#x4E2A;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x548C;1&#x4E2A;&#x6C60;&#x5316;&#x8FD0;&#x7B97;&#xFF0C;&#x7B2C;2&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x4E4B;&#x540E;&#xFF0C;&#x5C06;&#x7ED3;&#x679C;&#x6241;&#x5E73;&#x5316;&#x4E3A;400&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x7136;&#x540E;&#x63A5;&#x5165;&#x7684;&#x4E24;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x5C31;&#x662F;&#x6807;&#x51C6;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5C42;&#x4E86;&#x3002;&#x968F;&#x7740;&#x5C42;&#x6B21;&#x7684;&#x52A0;&#x6DF1;&#xFF0C;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x7EF4;&#x5EA6;&#x6570;&#x5728;&#x4E0B;&#x964D;&#xFF0C;&#x4FE1;&#x9053;&#x6570;&#x5728;&#x589E;&#x52A0;&#x3002; &#x8BE5;&#x6846;&#x67B6;&#x8FD8;&#x53EF;&#x53D8;&#x5F62;&#x4E3A;&#xFF1A;&#x591A;&#x4E2A;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x540E;&#x9762;&#x8DDF;&#x7740;&#x4E00;&#x4E2A;&#x6C60;&#x5316;&#x8FD0;&#x7B97;&#xFF0C;&#x518D;&#x6709;&#x591A;&#x4E2A;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#x540E;&#x9762;&#x8DDF;&#x7740;&#x4E00;&#x4E2A;&#x6C60;&#x5316;&#x8FD0;&#x7B97;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x82E5;&#x5E72;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002; 1.11 &#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x5377;&#x79EF; &#x4F7F;&#x7528;&#x5377;&#x79EF;&#x6700;&#x5927;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x628A;&#x5E38;&#x89C4;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8FD0;&#x7B97;&#x91CF;&#x964D;&#x4F4E;&#x4E86;&#x5F88;&#x591A;&#x4E2A;&#x91CF;&#x7EA7;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x80FD;&#x591F;&#x964D;&#x4F4E;&#x539F;&#x56E0;&#x6709;&#x4E8C;&#xFF1A; &#x53C2;&#x6570;&#x5171;&#x4EAB;&#x3002;&#x4E00;&#x4E2A;&#x8FC7;&#x6EE4;&#x5668;&#x5C06;&#x8D70;&#x904D;&#x56FE;&#x7247;&#x7684;&#x6BCF;&#x4E00;&#x5757;&#x533A;&#x57DF;&#xFF0C;&#x4E00;&#x4E2A;&#x6C34;&#x5E73;&#x8FB9;&#x7F18;&#x8FC7;&#x6EE4;&#x5668;&#x65E2;&#x80FD;&#x68C0;&#x6D4B;&#x5230;&#x56FE;&#x7247;&#x5DE6;&#x4E0A;&#x89D2;&#x7684;&#x6C34;&#x5E73;&#x8FB9;&#x7F18;&#xFF0C;&#x4E5F;&#x80FD;&#x68C0;&#x6D4B;&#x5230;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#xFF0C;&#x8FD9;&#x4E0E;&#x5168;&#x8FDE;&#x63A5;&#x8BA1;&#x7B97;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x9AD8;&#x7EF4;w&#x56E0;&#x5B50;&#x76F8;&#x6BD4;&#x8282;&#x7701;&#x4E86;&#x5927;&#x91CF;&#x53C2;&#x6570;&#x91CF;&#x3002; &#x7A00;&#x758F;&#x8FDE;&#x63A5;&#x3002;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x4EC5;&#x4E0E;&#x88AB;&#x4E58;&#x77E9;&#x9635;&#x4E2D;&#x7684;&#x5C40;&#x90E8;&#x6709;&#x5173;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C40;&#x90E8;&#x7684;&#x5927;&#x5C0F;&#x5C31;&#x662F;&#x8FC7;&#x6EE4;&#x5668;&#x5927;&#x5C0F;&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;&#x5927;&#x5C0F;&#x51B3;&#x5B9A;&#x4E86;&#x53C2;&#x6570;&#x89C4;&#x6A21;&#x3002;&#x4F46;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x903B;&#x8F91;&#x5E76;&#x6CA1;&#x6709;&#x5C06;&#x5B8C;&#x6574;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x8BF4;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x77E9;&#x9635;&#x7684;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x672C;&#x4E0D;&#x8BE5;&#x4E0E;&#x539F;&#x56FE;&#x7684;&#x8F83;&#x8FDC;&#x50CF;&#x7D20;&#x6709;&#x5173;&#xFF0C;&#x800C;&#x662F;&#x7531;&#x76F8;&#x90BB;&#x7684;&#x4E00;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x50CF;&#x7D20;&#x51B3;&#x5B9A;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x6027;&#x8D28;&#x4F7F;&#x5F97;&#x4E0D;&#x5FC5;&#x4F7F;&#x7528;&#x540C;&#x7B49;&#x91CF;&#x7EA7;&#x7684;&#x4E58;&#x6570;w&#x3002;&#x4F46;&#x95EE;&#x9898;&#x662F;&#xFF1A;&#x8FD0;&#x7B97;&#x7684;&#x7ED3;&#x679C;&#x4EE3;&#x8868;&#x4EC0;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4EC5;&#x4E0E;&#x6E90;&#x56FE;&#x4E2D;&#x7684;&#x5C40;&#x90E8;&#x50CF;&#x7D20;&#x76F8;&#x5173;&#x5462;&#xFF1F;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x76F4;&#x89C9;&#x89E3;&#x91CA;&#x3002; &#x4F5C;&#x4E1A; &#x672C;&#x8282;&#x7684;&#x4F5C;&#x4E1A;&#x662F;&#x4F7F;&#x7528;TensorFlow&#x642D;&#x5EFA;&#x4E00;&#x4E2A;&#x6700;&#x57FA;&#x672C;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x7528;&#x6765;&#x8BC6;&#x522B;&#x4ECE;0&#x5230;5&#x7684;&#x624B;&#x52BF;&#x3002;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#x7528;&#x4E0D;&#x4E86;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5173;&#x952E;&#x662F;&#x7406;&#x89E3;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x7B56;&#x7565;&#x53CA;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x77E9;&#x9635;&#x7684;&#x7EF4;&#x5EA6;&#x3002; &#x6838;&#x5FC3;&#x70B9;&#x5728;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x4E0A;&#xFF1A; 123456789101112131415161718192021222324252627def forward_propagation(self, X, parameters): ... # &#x83B7;&#x53D6;&#x7B2C;1&#x5C42;&#x548C;&#x7B2C;2&#x5C42;&#x8FC7;&#x6EE4;&#x5668; W1 = parameters[&apos;W1&apos;] W2 = parameters[&apos;W2&apos;] # &#x7B2C;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x3002;&#x6267;&#x884C;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#xFF0C;Z1 = X * W1 # &#x7531;&#x4E8E;X &#x2192;(m, n_H0, n_W0, n_C0)&#xFF0C;strides&#x5728;&#x6307;&#x5B9A;padding&#x6B65;&#x957F;&#x65F6;&#x9700;&#x5B9A;&#x4E49;&#x6BCF;&#x4E2A;&#x7EF4;&#x5EA6; Z1 = tf.nn.conv2d(X,W1, strides = [1,1,1,1], padding = &apos;SAME&apos;) # A1 = RELU(Z1) # A1 &#x2192; (m, n_H1, n_W1, n_C1) A1 = tf.nn.relu(Z1) # MAXPOOL: window 8x8, sride 8, padding &apos;SAME&apos; P1 = tf.nn.max_pool(A1, ksize = [1,8,8,1], strides = [1,8,8,1], padding = &apos;SAME&apos;) # &#x7B2C;&#x4E8C;&#x4E2A;&#x5377;&#x79EF;&#x5C42; Z2 = tf.nn.conv2d(P1,W2, strides = [1,1,1,1], padding = &apos;SAME&apos;) # RELU A2 = tf.nn.relu(Z2) # MAXPOOL: window 4x4, stride 4, padding &apos;SAME&apos; P2 = tf.nn.max_pool(A2, ksize = [1,4,4,1], strides = [1,4,4,1], padding = &apos;SAME&apos;) # FLATTEN P2 = tf.contrib.layers.flatten(P2) # &#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x6B64;&#x5904;&#x4E0D;&#x8981;&#x8C03;&#x7528;softmax&#xFF0C;TensorFlow&#x4E2D;softmax&#x548C;&#x6210;&#x672C;&#x51FD;&#x6570;&#x88AB;&#x5408;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5C06;&#x5728;&#x4E0B;&#x4E00;&#x6B65;&#x8C03;&#x7528; Z3 = tf.contrib.layers.fully_connected(P2, 6, activation_fn = None) return Z3 &#x6211;&#x4E0D;&#x592A;&#x7406;&#x89E3;&#x7684;&#x662F;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;None&#x5462;&#xFF1F;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5C06;P2&#x901A;&#x8FC7;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x6210;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E3A;6&#x7684;&#x5411;&#x91CF;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x5FC5;&#x7136;&#x7ECF;&#x5386;A = g(W &#xB7; A_prev + b)&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;&#x7A7A;&#x5462;&#xFF1F; &#x6267;&#x884C;&#x7684;&#x7ED3;&#x679C;&#x5E76;&#x4E0D;&#x7406;&#x60F3;&#xFF0C;&#x8BAD;&#x7EC3;&#x7CBE;&#x5EA6;&#x53EA;&#x6709;65.8%&#xFF0C;&#x6D4B;&#x8BD5;&#x96C6;&#x7CBE;&#x5EA6;&#x53EA;&#x6709;54.2%&#xFF0C;&#x8FDC;&#x4F4E;&#x4E8E;&#x4E0D;&#x4F7F;&#x7528;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;99.9%&#x548C;71.7%&#x3002;&#x5728;&#x89C6;&#x89C9;&#x9886;&#x57DF;&#x65E2;&#x7136;&#x4F18;&#x9009;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5B83;&#x4E00;&#x5B9A;&#x4E0D;&#x4F1A;&#x53EA;&#x662F;&#x8FD9;&#x4E48;&#x4E2A;&#x64CD;&#x6027;&#xFF0C;&#x60F3;&#x8BA9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x725B;&#x903C;&#x8D77;&#x6765;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x5B66;&#x4F1A;&#x8C03;&#x6574;&#x8D85;&#x53C2;&#x6570;&#x3002;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x5427;&#xFF01; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding4_1&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（八）]]></title>
    <url>%2F2018%2F04%2F02%2F2018%2F0402DeepLearningAI09%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x7ED3;&#x6784;&#x5316;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x9879;&#x76EE;&#x300B;&#x7B2C;&#x4E8C;&#x5468;&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF08;ML)&#x7B56;&#x7565;&#xFF08;2&#xFF09;&#x300B;&#x3002; &#x672C;&#x8BFE;&#x4E3B;&#x8981;&#x8BA8;&#x8BBA;&#x6570;&#x636E;&#xFF0C;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x3001;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x9047;&#x5230;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x8BE5;&#x600E;&#x4E48;&#x5E94;&#x5BF9;&#x3002;&#x540E;&#x534A;&#x90E8;&#x5206;&#x8FDB;&#x4E00;&#x6B65;&#x6269;&#x5C55;&#x4E86;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5F15;&#x5165;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x3001;&#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x3001;&#x7AEF;&#x5230;&#x7AEF;&#x5B66;&#x4E60;&#x7684;&#x6982;&#x5FF5;&#x3002; 2.1 &#x8FDB;&#x884C;&#x8BEF;&#x5DEE;&#x5206;&#x6790; &#x672C;&#x8282;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5728;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#x65F6;&#x5E94;&#x5206;&#x6E05;&#x4E3B;&#x8981;&#x77DB;&#x76FE;&#x548C;&#x6B21;&#x8981;&#x77DB;&#x76FE;&#xFF0C;&#x4ECE;&#x800C;&#x96C6;&#x4E2D;&#x529B;&#x91CF;&#x89E3;&#x51B3;&#x4E3B;&#x8981;&#x77DB;&#x76FE;&#xFF0C;&#x8FD9;&#x9700;&#x8981;&#x4ED8;&#x51FA;&#x4E00;&#x4E9B;&#x4EBA;&#x5DE5;&#x6210;&#x672C;&#xFF0C;&#x4F46;&#x5BF9;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5411;&#x8D77;&#x7740;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x4EBA;&#x5DE5;&#x6295;&#x5165;&#x662F;&#x975E;&#x5E38;&#x503C;&#x5F97;&#x7684;&#x3002; &#x672C;&#x8282;&#x4F9D;&#x7136;&#x4EE5;&#x8BC6;&#x732B;&#x4E3A;&#x4F8B;&#xFF0C;&#x9700;&#x8981;&#x628A;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x8BC6;&#x522B;&#x9519;&#x8BEF;&#x7684;&#x56FE;&#x4EBA;&#x5DE5;&#x626B;&#x4E00;&#x904D;&#xFF0C;&#x8BB0;&#x5F55;&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;&#x5E76;&#x5F52;&#x7EB3;&#x7EDF;&#x8BA1;&#xFF0C;&#x7136;&#x540E;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#x5360;&#x6BD4;&#x6700;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002; &#x5728;&#x672C;&#x4F8B;&#x4E2D;&#xFF0C;&#x663E;&#x7136;&#x6700;&#x5E94;&#x8BE5;&#x505A;&#x7684;&#x662F;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x589E;&#x52A0;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x56FE;&#x7247;&#x7684;&#x5360;&#x6BD4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x589E;&#x52A0;&#x72D7;&#x56FE;&#x7684;&#x5360;&#x6BD4;&#x3002; 2.2 &#x6E05;&#x9664;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x7684;&#x6570;&#x636E; &#x673A;&#x5668;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x6709;&#x8F83;&#x597D;&#x7684;&#x9C81;&#x68D2;&#x6027;&#x6765;&#x62B5;&#x5FA1;&#x968F;&#x673A;&#x7684;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#xFF0C;&#x4F46;&#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x6027;&#x9519;&#x8BEF;&#x5374;&#x6CA1;&#x6709;&#x514D;&#x75AB;&#x529B;&#x3002;&#x6BD4;&#x5982;&#x628A;&#x6240;&#x6709;&#x7684;&#x767D;&#x72D7;&#x90FD;&#x6807;&#x6CE8;&#x4E3A;&#x732B;&#xFF0C;&#x90A3;&#x8BAD;&#x7EC3;&#x51FA;&#x6765;&#x7684;&#x6A21;&#x578B;&#x5C31;&#x4F1A;&#x628A;&#x767D;&#x72D7;&#x8BA4;&#x5B9A;&#x6210;&#x732B;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x5C11;&#x91CF;&#x968F;&#x673A;&#x6027;&#x9519;&#x8BEF;&#xFF0C;&#x901A;&#x5E38;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x82B1;&#x65F6;&#x95F4;&#x4FEE;&#x6539;&#x3002;&#x800C;&#x5BF9;&#x4E8E;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#xFF0C;&#x5219;&#x5E94;&#x5224;&#x65AD;&#x8FD9;&#x4E9B;&#x9519;&#x8BEF;&#x662F;&#x5426;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#x4E86;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x8BC4;&#x4F30;&#x7B97;&#x6CD5;&#x7684;&#x80FD;&#x529B;&#x3002;&#x6B64;&#x65F6;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x4EBA;&#x5DE5;&#x5206;&#x6790;&#x5C31;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x5360;&#x6BD4;&#x5728;&#x603B;&#x8BEF;&#x5DEE;&#x4E2D;&#x8F83;&#x4F4E;&#x5219;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x5E94;&#x8BE5;&#x4FEE;&#x6B63;&#x3002;&#x4F8B;&#x5982;&#xFF0C; &#x7B2C;&#x4E00;&#x7EC4;&#x6807;&#x6CE8;&#x8BEF;&#x5DEE;&#x4EC5;&#x5360;&#x603B;&#x8BEF;&#x5DEE;&#x7684;0.6/10=6%&#xFF0C;&#x4E0D;&#x4F1A;&#x5BF9;&#x5F00;&#x53D1;&#x96C6;&#x7684;&#x8BC4;&#x4F30;&#x80FD;&#x529B;&#x9020;&#x6210;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#xFF1B;&#x800C;&#x7B2C;&#x4E8C;&#x7EC4;&#x6807;&#x6CE8;&#x8BEF;&#x5DEE;&#x5360;&#x603B;&#x8BEF;&#x5DEE;0.6/2=30%&#xFF0C;&#x8FD9;&#x5C31;&#x6BD4;&#x8F83;&#x4E25;&#x91CD;&#x4E86;&#x3002;&#x5047;&#x8BBE;&#x4E24;&#x4E2A;&#x5206;&#x7C7B;&#x5668;&#x7684;&#x8BEF;&#x5DEE;&#x5206;&#x522B;&#x4E3A;2.1%&#x548C;1.9%&#xFF0C;&#x4F60;&#x5C31;&#x65E0;&#x6CD5;&#x533A;&#x5206;&#x5F00;&#x7A76;&#x7ADF;&#x56E0;&#x4E3A;&#x6807;&#x6CE8;&#x8BEF;&#x5DEE;&#x5E26;&#x6765;&#x7684;&#x6027;&#x80FD;&#x5DEE;&#x5F02;&#x8FD8;&#x662F;&#x4E24;&#x4E2A;&#x5206;&#x7C7B;&#x5668;&#x771F;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x5DEE;&#x8DDD;&#x3002; &#x786E;&#x5B9A;&#x4E86;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x6E05;&#x9664;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x540E;&#xFF0C;&#x4E0B;&#x4E00;&#x6B65;&#x5C31;&#x8981;&#x786E;&#x5B9A;&#x5177;&#x4F53;&#x5728;&#x6E05;&#x9664;&#x65F6;&#x5E94;&#x9075;&#x5FAA;&#x7684;&#x539F;&#x5219;&#x3002; 1. &#x6E05;&#x9664;&#x5DE5;&#x4F5C;&#x8981;&#x5BF9;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x505A;&#x540C;&#x6837;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x5FC5;&#x987B;&#x670D;&#x4ECE;&#x540C;&#x5206;&#x5E03;&#x3002; 2. &#x5F3A;&#x70C8;&#x5EFA;&#x8BAE;&#x540C;&#x65F6;&#x68C0;&#x9A8C;&#x7B97;&#x6CD5;&#x5224;&#x65AD;&#x6B63;&#x786E;&#x548C;&#x5224;&#x65AD;&#x9519;&#x8BEF;&#x7684;&#x4F8B;&#x5B50;&#x3002;&#x56E0;&#x4E3A;&#x6709;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&amp;&amp;&#x5224;&#x65AD;&#x4E0D;&#x7B26;&#x5408;&#x6807;&#x6CE8;&#x7684;&#x5047;&#x9633;&#x6027;&#xFF0C;&#x5C31;&#x6709;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&amp;&amp;&#x5224;&#x65AD;&#x7B26;&#x5408;&#x6807;&#x6CE8;&#x7684;&#x5047;&#x9634;&#x6027;&#xFF0C;&#x53EA;&#x4FEE;&#x6B63;&#x4E00;&#x79CD;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x7CFB;&#x7EDF;&#x6027;&#x504F;&#x5DEE;&#xFF0C;&#x5BF9;&#x7B97;&#x6CD5;&#x8BC4;&#x4F30;&#x4E0D;&#x516C;&#x5E73;&#x3002;&#x4F46;&#x68C0;&#x9A8C;&#x7B97;&#x6CD5;&#x5224;&#x65AD;&#x6B63;&#x786E;&#x7684;&#x6240;&#x6709;&#x4F8B;&#x5B50;&#x786E;&#x5B9E;&#x6210;&#x672C;&#x5F88;&#x9AD8;&#x3002; 3. &#x4FEE;&#x6B63;&#x8BAD;&#x7EC3;&#x96C6;&#x901A;&#x5E38;&#x662F;&#x4E2A;&#x8D85;&#x9AD8;&#x4EE3;&#x4EF7;&#x7684;&#x4E8B;&#xFF0C;&#x901A;&#x5E38;&#x4E0D;&#x4F1A;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x4E0D;&#x4FEE;&#x6B63;&#x95EE;&#x9898;&#x4E5F;&#x4E0D;&#x5927;&#x3002;&#x4F46;&#x8981;&#x4E86;&#x89E3;&#x8FD9;&#x4F1A;&#x4EE4;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0E;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x5206;&#x5E03;&#x504F;&#x5DEE;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x540E;&#x9762;&#x4F1A;&#x4E13;&#x95E8;&#x8BB2;&#x89E3;&#x3002; &#x6700;&#x540E;&#x8001;&#x5E08;&#x518D;&#x6B21;&#x91CD;&#x7533;&#x82B1;&#x4E00;&#x4E9B;&#x4EBA;&#x5DE5;&#x7CBE;&#x529B;&#x53BB;&#x505A;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#x7684;&#x91CD;&#x8981;&#x6027;&#xFF0C;&#x4EB2;&#x81EA;&#x770B;&#x9519;&#x8BEF;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x975E;&#x5E38;&#x5FC5;&#x8981;&#x4E14;&#x503C;&#x5F97;&#x7684;&#x3002; 2.3 &#x5FEB;&#x901F;&#x642D;&#x5EFA;&#x4F60;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x8FED;&#x4EE3; &#x672C;&#x8282;&#x7684;&#x5EFA;&#x8BAE;&#x5E76;&#x4E0D;&#x662F;&#x8BA9;&#x5C3D;&#x5FEB;&#x627E;&#x4E00;&#x4E2A;&#x6846;&#x67B6;&#xFF0C;&#x8BA9;&#x4EE3;&#x7801;&#x8DD1;&#x8D77;&#x6765;&#xFF0C;&#x800C;&#x662F;&#xFF1A; - &#x5C3D;&#x5FEB;&#x786E;&#x5B9A;&#x76EE;&#x6807;&#x548C;&#x65B9;&#x5411;&#xFF0C;&#x5212;&#x51FA;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x3002;&#x524D;&#x8005;&#x662F;&#x5355;&#x4E00;&#x6570;&#x5B57;&#x8BC4;&#x4F30;&#x6307;&#x6807; - &#x642D;&#x5EFA;&#x521D;&#x59CB;&#x7CFB;&#x7EDF;&#xFF0C;&#x8BA9;&#x8BAD;&#x7EC3;&#x8DD1;&#x8D77;&#x6765;&#xFF0C;&#x4ECE;&#x7B80;&#x5355;&#x7684;&#x7CFB;&#x7EDF;&#x9010;&#x6B65;&#x4F18;&#x5316; - &#x4F7F;&#x7528;&#x504F;&#x5DEE;/&#x65B9;&#x5DEE;&#x5206;&#x6790;&#x548C;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#xFF0C;&#x786E;&#x8BA4;&#x6BCF;&#x8F6E;&#x8FED;&#x4EE3;&#x540E;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x51FA;&#x5728;&#x54EA;&#xFF0C;&#x9488;&#x5BF9;&#x6027;&#x8C03;&#x6574;&#xFF0C;&#x4ECE;&#x800C;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x8F6E;&#x8FED;&#x4EE3; &#x5728;&#x6709;&#x7684;&#x9886;&#x57DF;&#xFF0C;&#x884C;&#x4E1A;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x5F88;&#x591A;&#x6210;&#x719F;&#x7684;&#x8BBA;&#x6587;&#x548C;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x6BD4;&#x5982;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x57FA;&#x4E8E;&#x5B83;&#x4EEC;&#x642D;&#x5EFA;&#x66F4;&#x590D;&#x6742;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002; &#x6211;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x8001;&#x5E08;&#x7684;&#x6838;&#x5FC3;&#x7CBE;&#x795E;&#x662F;&#x642D;&#x5EFA;&#x4E00;&#x4E2A;&#x4F60;&#x80FD;&#x638C;&#x63A7;&#x7684;&#x5B66;&#x4E60;&#x6846;&#x67B6;&#xFF0C;&#x800C;&#x4E14;&#x5C3D;&#x91CF;&#x7B80;&#x5355;&#xFF0C;&#x8BA9;&#x5B83;&#x5728;&#x8FED;&#x4EE3;&#x4E2D;&#x9488;&#x5BF9;&#x4E3B;&#x8981;&#x77DB;&#x76FE;&#x518D;&#x6539;&#x8FDB;&#xFF0C;&#x9632;&#x6B62;&#x8FC7;&#x5EA6;&#x8BBE;&#x8BA1;&#xFF0C;&#x9632;&#x6B62;&#x8BA9;&#x590D;&#x6742;&#x7684;&#x7CFB;&#x7EDF;&#x53D8;&#x5F97;&#x4E0D;&#x53EF;&#x63A7;&#x3002;&#x5C24;&#x5176;&#x5E94;&#x5F53;&#x907F;&#x514D;&#x7684;&#x662F;&#x628A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7CFB;&#x7EDF;&#x641E;&#x6210;&#x4E00;&#x4E2A;&#x7384;&#x5B66;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E0D;&#x77E5;&#x4ECE;&#x54EA;&#x91CC;&#x62F7;&#x4E00;&#x5768;&#x4EE3;&#x7801;&#xFF0C;&#x4E0D;&#x4E86;&#x89E3;&#x80CC;&#x540E;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x66F4;&#x6CA1;&#x6709;&#x80FD;&#x529B;&#x5BF9;&#x4E2D;&#x95F4;&#x73AF;&#x8282;&#x505A;&#x51FA;&#x8C03;&#x8282;&#xFF0C;&#x8FD9;&#x6BD4;&#x5DE5;&#x7A0B;&#x65F6;&#x4EE3;&#x7684;&#x62F7;&#x8D1D;&#x7C98;&#x8D34;&#x5BFC;&#x81F4;&#x7684;&#x540E;&#x679C;&#x4F1A;&#x66F4;&#x4EE4;&#x4EBA;&#x5D29;&#x6E83;&#x3002; 2.4 &#x5728;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x7684;&#x6570;&#x636E;&#x4E0A;&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#x5E76;&#x6D4B;&#x8BD5; &#x5F88;&#x591A;&#x65F6;&#x5019;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x662F;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x8BC6;&#x732B;&#x7684;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x53EA;&#x6709;10,000&#x5F20;&#x56FE;&#x6765;&#x81EA;&#x5B9E;&#x9645;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x8FD9;&#x4E9B;&#x56FE;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x3001;&#x4EAE;&#x5EA6;&#x3001;&#x89D2;&#x5EA6;&#x53EF;&#x80FD;&#x90FD;&#x4E0D;&#x597D;&#xFF0C;&#x4F46;&#x8FD9;&#x6765;&#x81EA;&#x5B9E;&#x9645;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#xFF1B;&#x53C8;&#x6709;200,000&#x5F20;&#x56FE;&#x6765;&#x81EA;&#x7F51;&#x7EDC;&#x722C;&#x866B;&#xFF0C;&#x5B83;&#x4EEC;&#x5F88;&#x5BB9;&#x6613;&#x83B7;&#x53D6;&#xFF0C;&#x800C;&#x4E14;&#x6570;&#x636E;&#x91CF;&#x5DE8;&#x5927;&#xFF0C;&#x4F46;&#x548C;&#x7528;&#x6237;&#x4E0A;&#x4F20;&#x7684;&#x56FE;&#x7247;&#x5374;&#x6709;&#x5F88;&#x5927;&#x5DEE;&#x5F02;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x8BE5;&#x5982;&#x4F55;&#x5206;&#x914D;&#x8BAD;&#x7EC3;&#x96C6;&#x3001;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x5462;&#xFF1F; &#x8001;&#x5E08;&#x4E0D;&#x5EFA;&#x8BAE;&#x5C06;200,000+10,000&#x6DF7;&#x5408;&#x540E;&#x968F;&#x673A;&#x62BD;&#x53D6;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#xFF0C;&#x8FD9;&#x867D;&#x7136;&#x80FD;&#x4EE4;&#x6240;&#x6709;&#x6570;&#x636E;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5374;&#x8BBE;&#x5B9A;&#x4E86;&#x9519;&#x8BEF;&#x7684;&#x201C;&#x9776;&#x5FC3;&#x201D;&#x3002;&#x56E0;&#x4E3A;&#x6A21;&#x578B;&#x6700;&#x7EC8;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x662F;&#x8BC6;&#x522B;&#x7528;&#x6237;&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x3002; &#x5EFA;&#x8BAE;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF1A;&#x5C06;10,000&#x5F20;&#x7528;&#x6237;&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x5206;&#x4E24;&#x534A;&#xFF0C;&#x4E00;&#x534A;&#x7ED9;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x5373;200,000+10,000/2=205,000&#xFF0C;&#x5C06;&#x5269;&#x4F59;5,000&#x518D;&#x968F;&#x673A;&#x5206;&#x4E24;&#x534A;&#xFF0C;&#x7ED9;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x3002; 2.5 &#x4E0D;&#x5339;&#x914D;&#x6570;&#x636E;&#x5212;&#x5206;&#x7684;&#x504F;&#x5DEE;&#x548C;&#x65B9;&#x5DEE; &#x672C;&#x8282;&#x8BA8;&#x8BBA;&#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x5206;&#x5E03;&#x4E0D;&#x4E00;&#x81F4;&#x65F6;&#x5206;&#x6790;&#x504F;&#x5DEE;&#x548C;&#x65B9;&#x5DEE;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5F53;&#x770B;&#x5230;&#x4E0B;&#x9762;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5206;&#x5E03;&#xFF0C;&#x53EF;&#x4EE5;&#x786E;&#x8BA4;&#x6A21;&#x578B;&#x7684;&#x65B9;&#x5DEE;&#x8FC7;&#x5927;&#x3002; &#x4F46;&#x5982;&#x679C;&#x4E8C;&#x8005;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x786E;&#x8BA4;&#x8FD9;9%&#x7684;&#x5DEE;&#x8DDD;&#x662F;&#x7531;&#x4E8E;&#x6A21;&#x578B;&#x65B9;&#x5DEE;&#x8FC7;&#x5927;&#x5BFC;&#x81F4;&#x7684;&#x8FD8;&#x662F;&#x6570;&#x636E;&#x5206;&#x5E03;&#x4E0D;&#x540C;&#x5BFC;&#x81F4;&#x7684;&#x3002; &#x9996;&#x5148;&#x5E94;&#x8BE5;&#x628A;&#x4E8C;&#x8005;&#x533A;&#x5206;&#x5F00;&#xFF0C;&#x65B9;&#x6CD5;&#x662F;&#x4ECE;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x518D;&#x9009;&#x53D6;&#x4E0E;&#x8BAD;&#x7EC3;&#x96C6;&#x540C;&#x5206;&#x5E03;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#x4F5C;&#x4E3A;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#xFF1A; &#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x4E0D;&#x53C2;&#x4E0E;&#x8BAD;&#x7EC3;&#xFF0C;&#x800C;&#x662F;&#x5F53;&#x5F00;&#x53D1;&#x96C6;&#x4F7F;&#x7528;&#xFF0C;&#x6BCF;&#x6B21;&#x4F7F;&#x7528;&#x5F00;&#x53D1;&#x96C6;&#x68C0;&#x9A8C;&#x6A21;&#x578B;&#x540C;&#x65F6;&#x4E5F;&#x7528;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x9A8C;&#x8BC1;&#x4E00;&#x4E0B;&#x3002;&#x4EE5;&#x4E0B;&#x9762;&#x7684;&#x6570;&#x636E;&#x4E3A;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x7EC4;&#x6A21;&#x578B;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x8BEF;&#x5DEE;&#x6BD4;&#x8F83;&#x5C0F;&#xFF0C;&#x800C;&#x5728;&#x540C;&#x5206;&#x5E03;&#x7684;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x8BF4;&#x660E;&#x6A21;&#x578B;&#x5BF9;&#x8BAD;&#x7EC3;&#x96C6;&#x8FC7;&#x62DF;&#x5408;&#x4E86;&#xFF1B;&#x7B2C;&#x4E8C;&#x7EC4;&#x6A21;&#x578B;&#x5728;&#x540C;&#x5206;&#x5E03;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x8BEF;&#x5DEE;&#x5F88;&#x63A5;&#x8FD1;&#xFF0C;&#x800C;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x8FD9;&#x662F;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x5BFC;&#x81F4;&#x7684;&#x3002; &#x56E0;&#x6B64;&#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x7684;&#x5206;&#x6790;&#x6B65;&#x9AA4;&#x662F;&#x5217;&#x51FA;&#x4E94;&#x4E2A;&#x8BEF;&#x5DEE;&#xFF0C;&#x5E76;&#x8BA1;&#x7B97;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x8DDD;&#xFF0C;&#x627E;&#x5230;&#x5DEE;&#x8DDD;&#x6700;&#x5927;&#x7684;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#xFF1A; &#x8BFE;&#x4EF6;&#x7684;&#x7ED3;&#x5C3E;&#x7ED9;&#x51FA;&#x5206;&#x6790;&#x7684;&#x4E00;&#x822C;&#x6027;&#x539F;&#x5219;&#xFF1A; &#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x89E3;&#x51B3;&#x201C;&#x6570;&#x636E;&#x5206;&#x5E03;&#x4E0D;&#x540C;&#x201D;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5F88;&#x597D;&#x7684;&#x901A;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x4E0B;&#x4E00;&#x8282;&#x4F1A;&#x7ED9;&#x51FA;&#x4E00;&#x4E9B;&#x5C1D;&#x8BD5;&#x7684;&#x529E;&#x6CD5;&#x3002; 2.6 &#x5B9A;&#x4F4D;&#x6570;&#x636E;&#x4E0D;&#x5339;&#x914D; &#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0E;&#x5F00;&#x53D1;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x5373;&#x6570;&#x636E;&#x4E0D;&#x5339;&#x914D;&#x65F6;&#xFF0C;&#x8001;&#x5E08;&#x7684;&#x5EFA;&#x8BAE;&#x662F;&#x4EBA;&#x5DE5;&#x89C2;&#x5BDF;&#x6570;&#x636E;&#xFF0C;&#x611F;&#x53D7;&#x6570;&#x636E;&#x7684;&#x5DEE;&#x5F02;&#x70B9;&#x5728;&#x54EA;&#x91CC;&#xFF0C;&#x7136;&#x540E;&#x60F3;&#x4E00;&#x4E9B;&#x4EBA;&#x5DE5;&#x5408;&#x6210;&#x6570;&#x636E;&#x7684;&#x529E;&#x6CD5;&#x3002; &#x4F8B;&#x5982;&#x8F66;&#x8F7D;&#x7CFB;&#x7EDF;&#x7684;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#xFF0C;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x662F;&#x6B63;&#x5E38;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8BED;&#x97F3;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x662F;&#x6709;&#x8F66;&#x566A;&#x80CC;&#x666F;&#x7684;&#xFF0C;&#x4E8C;&#x8005;&#x7684;&#x5DEE;&#x5F02;&#x4F1A;&#x5BFC;&#x81F4;&#x6A21;&#x578B;&#x5728;&#x540E;&#x8005;&#x73AF;&#x5883;&#x4E0B;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x91C7;&#x96C6;&#x5C11;&#x91CF;&#x8F66;&#x566A;&#xFF0C;&#x518D;&#x4E0E;&#x8BAD;&#x7EC3;&#x96C6;&#x5408;&#x6210;&#x5E26;&#x8F66;&#x566A;&#x7684;&#x8BED;&#x97F3;&#x3002; &#x4F46;&#x662F;&#x5408;&#x6210;&#x4E0D;&#x4E00;&#x5B9A;&#x5B8C;&#x5168;&#x6709;&#x6548;&#xFF0C;&#x56E0;&#x4E3A;&#x5408;&#x6210;&#x7684;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x4EBA;&#x5DE5;&#x65E0;&#x6CD5;&#x5BDF;&#x89C9;&#x7684;&#x504F;&#x5411;&#x6027;&#xFF0C;&#x6BD4;&#x5982;&#x5C06;1&#x5C0F;&#x65F6;&#x7684;&#x8F66;&#x566A;&#x4E0E;10,000&#x5C0F;&#x65F6;&#x8BED;&#x97F3;&#x5408;&#x6210;&#xFF0C;&#x800C;&#x8FD9;1&#x5C0F;&#x65F6;&#x8F66;&#x566A;&#x53EF;&#x80FD;&#x5728;&#x6240;&#x6709;&#x8F66;&#x566A;&#x7279;&#x5F81;&#x4E2D;&#x5B58;&#x5728;&#x7CFB;&#x7EDF;&#x6027;&#x504F;&#x5DEE;&#xFF0C;&#x4EBA;&#x8033;&#x662F;&#x65E0;&#x6CD5;&#x5206;&#x8FA8;&#x7684;&#xFF0C;&#x4F46;&#x8BAD;&#x7EC3;&#x51FA;&#x7684;&#x6A21;&#x578B;&#x5C31;&#x4F1A;&#x5BF9;&#x8FD9;1&#x4E2A;&#x5C0F;&#x65F6;&#x8F66;&#x566A;&#x4EA7;&#x751F;&#x8FC7;&#x62DF;&#x5408;&#x3002;&#x800C;&#x4E14;&#x8F66;&#x53A2;&#x5185;&#x8BF4;&#x8BDD;&#x7684;&#x56DE;&#x58F0;&#x7279;&#x5F81;&#x4E0E;&#x5408;&#x6210;&#x7684;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4E0D;&#x540C;&#x54C1;&#x724C;&#x7684;&#x8F66;&#xFF0C;&#x8F66;&#x566A;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x9EA6;&#x514B;&#x98CE;&#x653E;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x4F4D;&#x7F6E;&#x4E0A;&#x6536;&#x96C6;&#x5230;&#x7684;&#x8F66;&#x566A;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5408;&#x6210;&#x7684;&#x6570;&#x636E;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x4E14;&#x4EBA;&#x5DE5;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x5206;&#x8FA8;&#x3002;&#x56FE;&#x7247;&#x6570;&#x636E;&#x7684;&#x5408;&#x6210;&#x4E5F;&#x6709;&#x4E00;&#x6837;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x603B;&#x7684;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x201C;&#x9A97;&#x201D;&#x8FC7;&#x4E86;&#x4EBA;&#xFF0C;&#x5374;&#x201C;&#x9A97;&#x201D;&#x4E0D;&#x8FC7;&#x673A;&#x5668;&#x3002;&#x56E0;&#x6B64;&#x8001;&#x5E08;&#x8BF4;&#x6CA1;&#x6709;&#x7CFB;&#x7EDF;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x53EA;&#x80FD;&#x8BD5;&#x8BD5;&#x770B;&#x4E86;&#x3002; 2.7 &#x8FC1;&#x79FB;&#x5B66;&#x4E60; &#x5F53;&#x4EFB;&#x52A1;A&#x548C;&#x4EFB;&#x52A1;B&#x6709;&#x7740;&#x76F8;&#x540C;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; \(\begin{cases}&#x4EFB;&#x52A1;A:&#x8BC6;&#x732B;\\&#x4EFB;&#x52A1;B:&#x8BC6;&#x522B;X&#x5149;&#x7247;&#x4E2D;&#x7684;&#x75C5;&#x7406;&#x7279;&#x5F81;\end{cases}\)&#x6216;\(\begin{cases}&#x4EFB;&#x52A1;A&#xFF1A;&#x8BED;&#x97F3;&#x8BC6;&#x522B;\\&#x4EFB;&#x52A1;B:&#x8BC6;&#x522B;&#x667A;&#x80FD;&#x97F3;&#x7BB1;&#x5524;&#x9192;&#x97F3;\end{cases}\) &#x4EFB;&#x52A1;A&#x6BD4;&#x4EFB;&#x52A1;B&#x7684;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x591A;&#x51FA;&#x5F88;&#x591A;&#xFF0C;&#x6B64;&#x65F6;A&#x7684;&#x4F4E;&#x7EA7;&#x7279;&#x5F81;&#x6216;&#x8BB8;&#x5BF9;B&#x7684;&#x5B66;&#x4E60;&#x6709;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;A&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5AC1;&#x63A5;&#x7ED9;B&#x6765;&#x4F7F;&#x7528;&#x3002;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#x5220;&#x6389;A&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x7136;&#x540E;&#x4E3A;&#x8F93;&#x51FA;&#x5C42;&#x91CD;&#x65B0;&#x8D4B;&#x4E88;&#x968F;&#x673A;&#x6743;&#x91CD;&#xFF0C;&#x5C06;&#x6807;&#x6CE8;&#x6837;&#x672C;&#x66FF;&#x6362;&#x4E3A;B&#xFF0C;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x8BE5;&#x7F51;&#x7EDC;&#x3002; &#x5982;&#x679C;B&#x7684;&#x6837;&#x672C;&#x91CF;&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x65B0;&#x7684;&#x8BAD;&#x7EC3;&#x4E2D;&#x53EA;&#x66FF;&#x6362;&#x6700;&#x540E;&#x4E00;&#x5C42;\(W^{[L]}&#x3001;b^{[L]}\)&#xFF1B;&#x5982;&#x679C;B&#x7684;&#x6837;&#x672C;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x591A;&#x8FED;&#x4EE3;&#x51E0;&#x5C42;&#xFF1B;&#x5982;&#x679C;B&#x7684;&#x6837;&#x672C;&#x91CF;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x6240;&#x6709;&#x5C42;&#xFF0C;&#x4F46;&#x8FD9;&#x5C31;&#x6CA1;&#x5FC5;&#x8981;&#x4F7F;&#x7528;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x4E86;&#x3002; &#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x6709;&#x6548;&#x6027;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8D8A;&#x9760;&#x524D;&#x9762;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x5B66;&#x5230;&#x7684;&#x662F;&#x9886;&#x57DF;&#x5185;&#x8D8A;&#x4F4E;&#x5C42;&#x6B21;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x4ECE;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x2192;&#x4E94;&#x5B98;&#x2192;&#x5F62;&#x6001;&#x3002;&#x4F4E;&#x5C42;&#x7279;&#x5F81;&#x5728;&#x76F8;&#x5173;&#x9886;&#x57DF;&#x5185;&#x662F;&#x53EF;&#x4EE5;&#x590D;&#x7528;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3001;&#x58F0;&#x97F3;&#x8BC6;&#x522B;&#xFF0C;&#x8D8A;&#x9760;&#x540E;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x8D8A;&#x4E0E;&#x5177;&#x4F53;&#x4E1A;&#x52A1;&#x76F8;&#x5173;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6570;&#x636E;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x66FF;&#x6362;&#x6389;&#x3002; 2.8 &#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60; &#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x662F;&#x6307;&#x5728;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x540C;&#x65F6;&#x5224;&#x65AD;&#x591A;&#x4E2A;&#x7279;&#x5F81;&#x3002;&#x6BD4;&#x5982;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x5728;&#x89C6;&#x89C9;&#x5904;&#x7406;&#x4E2D;&#x540C;&#x65F6;&#x5224;&#x65AD;&#x56FE;&#x7247;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x8F66;&#x8F86;&#x3001;&#x8DEF;&#x6807;&#x3001;&#x4FE1;&#x53F7;&#x706F;&#x7B49;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E9B;&#x7279;&#x5F81;&#x5B58;&#x5728;&#x4E8E;&#x76F8;&#x540C;&#x7684;&#x8F93;&#x5165;&#x6837;&#x672C;&#xFF0C;&#x4E14;&#x5177;&#x6709;&#x7C7B;&#x4F3C;&#x7684;&#x4F4E;&#x5C42;&#x7279;&#x5F81;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x590D;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x7684;&#x5FC5;&#x8981;&#x6761;&#x4EF6;&#x3002;&#x5B83;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x548C;Softmax&#x6709;&#x70B9;&#x7C7B;&#x4F3C;&#xFF0C;&#x6240;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x5B83;&#x4E0D;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5C42;&#x4E2A;&#x8282;&#x70B9;&#x548C;&#x4E3A;1&#xFF1A; &#x5176;&#x4E2D;&#x177;&#x662F;4&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A; \(L(&#x177;, y) = \frac{1}{m}\sum_{i=1}^{m}\sum_{j=1}^{n^{[L]}}L(&#x177;_j^{(i)}, y_j^{(i)})\\ =\frac{1}{m}\sum_{i=1}^{m}\sum_{j=1}^{n^{[L]}}[-y_j^{(i)}\log{&#x177;_j^{(i)}} - (1-y_j^{(i)})\log{(1-&#x177;_j^{(i)})}]\) &#x6709;&#x65F6;&#x4F1A;&#x9047;&#x5230;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;&#x6709;&#x7684;&#x6837;&#x672C;&#x53EA;&#x6807;&#x6CE8;&#x4E86;&#x90E8;&#x5206;&#x7279;&#x5F81;&#xFF0C;&#x672A;&#x6807;&#x6CE8;&#x7684;&#x4E0D;&#x80FD;&#x786E;&#x5B9A;&#x662F;&#x6216;&#x5426;&#xFF0C;&#x6B64;&#x65F6;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5219;&#x53EA;&#x5BF9;&#x6807;&#x6CE8;&#x7684;&#x6570;&#x636E;&#x6C42;&#x548C;&#x5373;&#x53EF;&#x3002; &#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#xFF1A; &#x8BAD;&#x7EC3;&#x7684;&#x4E00;&#x7EC4;&#x4EFB;&#x52A1;&#x53EF;&#x4EE5;&#x5171;&#x7528;&#x5E95;&#x5C42;&#x7279;&#x5F81;&#xFF0C;&#x8FD9;&#x79CD;&#x573A;&#x666F;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x591A;&#xFF0C;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x662F;&#x4E00;&#x7C7B;&#x3002; &#x6BCF;&#x4E2A;&#x4EFB;&#x52A1;&#x7684;&#x6570;&#x636E;&#x91CF;&#x5F88;&#x63A5;&#x8FD1;&#xFF0C;&#x8001;&#x5E08;&#x8BF4;&#x8FD9;&#x4E00;&#x70B9;&#x5E76;&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x3002; &#x53EF;&#x4EE5;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x7F51;&#x7EDC;&#x540C;&#x65F6;&#x505A;&#x597D;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x3002; 2.9 &#x4EC0;&#x4E48;&#x662F;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60; &#x4EE5;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x4E3A;&#x4F8B;&#xFF0C;&#x4F20;&#x7EDF;&#x505A;&#x6CD5;&#x4ECE;&#x97F3;&#x9891;&#x5230;&#x6587;&#x672C;&#x8981;&#x7ECF;&#x5386;&#x82E5;&#x5E72;&#x9636;&#x6BB5;&#xFF1A; &#x800C;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x5B66;&#x4E60;&#x5219;&#x662F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8F93;&#x5165;&#x4E00;&#x6BB5;&#x97F3;&#x9891;&#xFF0C;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x6587;&#x672C;&#xFF1A; &#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x5B66;&#x4E60;&#x9700;&#x8981;&#x5927;&#x91CF;&#x7684;&#x6570;&#x636E;&#x624D;&#x80FD;&#x8BA9;&#x7CFB;&#x7EDF;&#x8868;&#x73B0;&#x826F;&#x597D;&#x3002;&#x4EE5;&#x95E8;&#x7981;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x4E3A;&#x4F8B;&#xFF0C;&#x4F20;&#x7EDF;&#x65B9;&#x6CD5;&#x5206;&#x4E24;&#x6B65;&#xFF1A; &#x8BC6;&#x522B;&#x51FA;&#x56FE;&#x7247;&#x4E2D;&#x4EBA;&#x8138;&#x7684;&#x4F4D;&#x7F6E; &#x8BC6;&#x522B;&#x8BE5;&#x4EBA;&#x8138;&#x7684;ID &#x4F20;&#x7EDF;&#x65B9;&#x6CD5;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#xFF0C;&#x5206;&#x89E3;&#x540E;&#x7684;&#x6BCF;&#x4E2A;&#x5B50;&#x4EFB;&#x52A1;&#x90FD;&#x66F4;&#x7EAF;&#x7CB9;&#x548C;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x6837;&#x672C;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x90FD;&#x66F4;&#x591A;&#x3002;&#x800C;&#x7EC4;&#x5408;&#x540E;&#x76F8;&#x5F53;&#x4E8E;&#x53E0;&#x52A0;&#x4E86;&#x66F4;&#x591A;&#x6761;&#x4EF6;&#xFF0C;&#x6837;&#x672C;&#x91CF;&#x53EF;&#x80FD;&#x5C31;&#x6CA1;&#x90A3;&#x4E48;&#x5927;&#x4E86;&#x3002; &#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x597D;&#x5904;&#x4E5F;&#x663E;&#x800C;&#x6613;&#x89C1;&#xFF0C;&#x5B83;&#x7701;&#x7565;&#x4E86;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x4E2D;&#x5F88;&#x591A;&#x7E41;&#x7410;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x8BA9;&#x66F4;&#x591A;&#x7684;&#x5DE5;&#x4F5C;&#x4EA4;&#x7ED9;&#x673A;&#x5668;&#xFF0C;&#x8BA9;&#x4EBA;&#x4ECE;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x7EC6;&#x8282;&#x4E2D;&#x89E3;&#x8131;&#x51FA;&#x6765;&#x3002; 2.10 &#x662F;&#x5426;&#x8981;&#x4F7F;&#x7528;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60; &#x672C;&#x8282;&#x5206;&#x6790;&#x4E86;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x4F18;&#x7F3A;&#x70B9;&#x3002; &#x4F18;&#x70B9;&#xFF1A; &#x2460; &#x53EA;&#x8BA9;&#x6570;&#x636E;&#x8BF4;&#x8BDD;&#x3002;&#x53EA;&#x8981;&#x6709;&#x8DB3;&#x591F;&#x591A;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5C31;&#x80FD;&#x8BA9;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x81EA;&#x5DF1;&#x641E;&#x6E05;&#x695A;&#x4ECE;X&#x5230;Y&#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x4E0D;&#x5FC5;&#x4EBA;&#x4E3A;&#x5730;&#x5F15;&#x5165;&#x4EBA;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x6BD4;&#x5982;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x4E2D;&#x97F3;&#x4F4D;&#x7684;&#x6982;&#x5FF5;&#x3002; &#x2461; &#x624B;&#x5DE5;&#x8BBE;&#x8BA1;&#x7684;&#x7EC4;&#x4EF6;&#x66F4;&#x5C11;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x2460; &#x9700;&#x8981;&#x66F4;&#x6D77;&#x91CF;&#x7684;&#x6570;&#x636E;&#x3002; &#x2461; &#x5B83;&#x6392;&#x9664;&#x4E86;&#x53EF;&#x80FD;&#x6709;&#x7528;&#x7684;&#x624B;&#x5DE5;&#x8BBE;&#x8BA1;&#x7EC4;&#x4EF6;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x628A;&#x53CC;&#x5203;&#x5251;&#xFF0C;&#x4ECD;&#x4EE5;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x4E2D;&#x97F3;&#x4F4D;&#x7684;&#x6982;&#x5FF5;&#x4E3A;&#x4F8B;&#xFF0C;&#x5C3D;&#x7BA1;&#x5B83;&#x662F;&#x4EBA;&#x4E3A;&#x521B;&#x9020;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x5728;&#x76EE;&#x524D;&#x5B83;&#x662F;&#x6709;&#x6548;&#x7684;&#x3002;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x65B9;&#x6CD5;&#x4F7F;&#x5F97;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x4E0D;&#x80FD;&#x518D;&#x63A5;&#x53D7;&#x4EBA;&#x5DE5;&#x5E72;&#x9884;&#x3002;&#x4F46;&#x662F;&#x4EBA;&#x7C7B;&#x65E0;&#x6CD5;&#x65AD;&#x5B9A;&#x73B0;&#x5728;&#x6709;&#x6548;&#x7684;&#x624B;&#x5DE5;&#x8BBE;&#x8BA1;&#x662F;&#x5426;&#x5C31;&#x662F;&#x7EC8;&#x6781;&#x65B9;&#x6CD5;&#xFF0C;&#x4E5F;&#x8BB8;&#x968F;&#x7740;&#x6570;&#x636E;&#x89C4;&#x6A21;&#x6269;&#x5927;&#x548C;&#x8FD0;&#x7B97;&#x80FD;&#x529B;&#x63D0;&#x5347;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7F51;&#x7EDC;&#x4F1A;&#x66F4;&#x8D34;&#x8FD1;&#x5BA2;&#x89C2;&#x7684;X&#x2192;Y&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x8BA4;&#x4E3A;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x957F;&#x671F;&#x503C;&#x5F97;&#x63A2;&#x7D22;&#x7684;&#x65B9;&#x5411;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（八）]]></title>
    <url>%2F2018%2F04%2F02%2F2018%2F0403DeepLearningAI10%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x7ED3;&#x6784;&#x5316;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x9879;&#x76EE;&#x300B;&#x7B2C;&#x4E8C;&#x5468;&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF08;ML)&#x7B56;&#x7565;&#xFF08;2&#xFF09;&#x300B;&#x3002; &#x672C;&#x8BFE;&#x4E3B;&#x8981;&#x8BA8;&#x8BBA;&#x6570;&#x636E;&#xFF0C;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x3001;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x9047;&#x5230;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x8BE5;&#x600E;&#x4E48;&#x5E94;&#x5BF9;&#x3002;&#x540E;&#x534A;&#x90E8;&#x5206;&#x8FDB;&#x4E00;&#x6B65;&#x6269;&#x5C55;&#x4E86;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5F15;&#x5165;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x3001;&#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x3001;&#x7AEF;&#x5230;&#x7AEF;&#x5B66;&#x4E60;&#x7684;&#x6982;&#x5FF5;&#x3002; 2.1 &#x8FDB;&#x884C;&#x8BEF;&#x5DEE;&#x5206;&#x6790; &#x672C;&#x8282;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5728;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#x65F6;&#x5E94;&#x5206;&#x6E05;&#x4E3B;&#x8981;&#x77DB;&#x76FE;&#x548C;&#x6B21;&#x8981;&#x77DB;&#x76FE;&#xFF0C;&#x4ECE;&#x800C;&#x96C6;&#x4E2D;&#x529B;&#x91CF;&#x89E3;&#x51B3;&#x4E3B;&#x8981;&#x77DB;&#x76FE;&#xFF0C;&#x8FD9;&#x9700;&#x8981;&#x4ED8;&#x51FA;&#x4E00;&#x4E9B;&#x4EBA;&#x5DE5;&#x6210;&#x672C;&#xFF0C;&#x4F46;&#x5BF9;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5411;&#x8D77;&#x7740;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x4EBA;&#x5DE5;&#x6295;&#x5165;&#x662F;&#x975E;&#x5E38;&#x503C;&#x5F97;&#x7684;&#x3002; &#x672C;&#x8282;&#x4F9D;&#x7136;&#x4EE5;&#x8BC6;&#x732B;&#x4E3A;&#x4F8B;&#xFF0C;&#x9700;&#x8981;&#x628A;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x8BC6;&#x522B;&#x9519;&#x8BEF;&#x7684;&#x56FE;&#x4EBA;&#x5DE5;&#x626B;&#x4E00;&#x904D;&#xFF0C;&#x8BB0;&#x5F55;&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;&#x5E76;&#x5F52;&#x7EB3;&#x7EDF;&#x8BA1;&#xFF0C;&#x7136;&#x540E;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#x5360;&#x6BD4;&#x6700;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002; &#x5728;&#x672C;&#x4F8B;&#x4E2D;&#xFF0C;&#x663E;&#x7136;&#x6700;&#x5E94;&#x8BE5;&#x505A;&#x7684;&#x662F;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x589E;&#x52A0;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x56FE;&#x7247;&#x7684;&#x5360;&#x6BD4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x589E;&#x52A0;&#x72D7;&#x56FE;&#x7684;&#x5360;&#x6BD4;&#x3002; 2.2 &#x6E05;&#x9664;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x7684;&#x6570;&#x636E; &#x673A;&#x5668;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x6709;&#x8F83;&#x597D;&#x7684;&#x9C81;&#x68D2;&#x6027;&#x6765;&#x62B5;&#x5FA1;&#x968F;&#x673A;&#x7684;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#xFF0C;&#x4F46;&#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x6027;&#x9519;&#x8BEF;&#x5374;&#x6CA1;&#x6709;&#x514D;&#x75AB;&#x529B;&#x3002;&#x6BD4;&#x5982;&#x628A;&#x6240;&#x6709;&#x7684;&#x767D;&#x72D7;&#x90FD;&#x6807;&#x6CE8;&#x4E3A;&#x732B;&#xFF0C;&#x90A3;&#x8BAD;&#x7EC3;&#x51FA;&#x6765;&#x7684;&#x6A21;&#x578B;&#x5C31;&#x4F1A;&#x628A;&#x767D;&#x72D7;&#x8BA4;&#x5B9A;&#x6210;&#x732B;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x5C11;&#x91CF;&#x968F;&#x673A;&#x6027;&#x9519;&#x8BEF;&#xFF0C;&#x901A;&#x5E38;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x82B1;&#x65F6;&#x95F4;&#x4FEE;&#x6539;&#x3002;&#x800C;&#x5BF9;&#x4E8E;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#xFF0C;&#x5219;&#x5E94;&#x5224;&#x65AD;&#x8FD9;&#x4E9B;&#x9519;&#x8BEF;&#x662F;&#x5426;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#x4E86;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x8BC4;&#x4F30;&#x7B97;&#x6CD5;&#x7684;&#x80FD;&#x529B;&#x3002;&#x6B64;&#x65F6;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x4EBA;&#x5DE5;&#x5206;&#x6790;&#x5C31;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x5360;&#x6BD4;&#x5728;&#x603B;&#x8BEF;&#x5DEE;&#x4E2D;&#x8F83;&#x4F4E;&#x5219;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x5E94;&#x8BE5;&#x4FEE;&#x6B63;&#x3002;&#x4F8B;&#x5982;&#xFF0C; &#x7B2C;&#x4E00;&#x7EC4;&#x6807;&#x6CE8;&#x8BEF;&#x5DEE;&#x4EC5;&#x5360;&#x603B;&#x8BEF;&#x5DEE;&#x7684;0.6/10=6%&#xFF0C;&#x4E0D;&#x4F1A;&#x5BF9;&#x5F00;&#x53D1;&#x96C6;&#x7684;&#x8BC4;&#x4F30;&#x80FD;&#x529B;&#x9020;&#x6210;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#xFF1B;&#x800C;&#x7B2C;&#x4E8C;&#x7EC4;&#x6807;&#x6CE8;&#x8BEF;&#x5DEE;&#x5360;&#x603B;&#x8BEF;&#x5DEE;0.6/2=30%&#xFF0C;&#x8FD9;&#x5C31;&#x6BD4;&#x8F83;&#x4E25;&#x91CD;&#x4E86;&#x3002;&#x5047;&#x8BBE;&#x4E24;&#x4E2A;&#x5206;&#x7C7B;&#x5668;&#x7684;&#x8BEF;&#x5DEE;&#x5206;&#x522B;&#x4E3A;2.1%&#x548C;1.9%&#xFF0C;&#x4F60;&#x5C31;&#x65E0;&#x6CD5;&#x533A;&#x5206;&#x5F00;&#x7A76;&#x7ADF;&#x56E0;&#x4E3A;&#x6807;&#x6CE8;&#x8BEF;&#x5DEE;&#x5E26;&#x6765;&#x7684;&#x6027;&#x80FD;&#x5DEE;&#x5F02;&#x8FD8;&#x662F;&#x4E24;&#x4E2A;&#x5206;&#x7C7B;&#x5668;&#x771F;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x5DEE;&#x8DDD;&#x3002; &#x786E;&#x5B9A;&#x4E86;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x6E05;&#x9664;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&#x540E;&#xFF0C;&#x4E0B;&#x4E00;&#x6B65;&#x5C31;&#x8981;&#x786E;&#x5B9A;&#x5177;&#x4F53;&#x5728;&#x6E05;&#x9664;&#x65F6;&#x5E94;&#x9075;&#x5FAA;&#x7684;&#x539F;&#x5219;&#x3002; 1. &#x6E05;&#x9664;&#x5DE5;&#x4F5C;&#x8981;&#x5BF9;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x505A;&#x540C;&#x6837;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x4E24;&#x4E2A;&#x96C6;&#x5408;&#x5FC5;&#x987B;&#x670D;&#x4ECE;&#x540C;&#x5206;&#x5E03;&#x3002; 2. &#x5F3A;&#x70C8;&#x5EFA;&#x8BAE;&#x540C;&#x65F6;&#x68C0;&#x9A8C;&#x7B97;&#x6CD5;&#x5224;&#x65AD;&#x6B63;&#x786E;&#x548C;&#x5224;&#x65AD;&#x9519;&#x8BEF;&#x7684;&#x4F8B;&#x5B50;&#x3002;&#x56E0;&#x4E3A;&#x6709;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&amp;&amp;&#x5224;&#x65AD;&#x4E0D;&#x7B26;&#x5408;&#x6807;&#x6CE8;&#x7684;&#x5047;&#x9633;&#x6027;&#xFF0C;&#x5C31;&#x6709;&#x6807;&#x6CE8;&#x9519;&#x8BEF;&amp;&amp;&#x5224;&#x65AD;&#x7B26;&#x5408;&#x6807;&#x6CE8;&#x7684;&#x5047;&#x9634;&#x6027;&#xFF0C;&#x53EA;&#x4FEE;&#x6B63;&#x4E00;&#x79CD;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x7CFB;&#x7EDF;&#x6027;&#x504F;&#x5DEE;&#xFF0C;&#x5BF9;&#x7B97;&#x6CD5;&#x8BC4;&#x4F30;&#x4E0D;&#x516C;&#x5E73;&#x3002;&#x4F46;&#x68C0;&#x9A8C;&#x7B97;&#x6CD5;&#x5224;&#x65AD;&#x6B63;&#x786E;&#x7684;&#x6240;&#x6709;&#x4F8B;&#x5B50;&#x786E;&#x5B9E;&#x6210;&#x672C;&#x5F88;&#x9AD8;&#x3002; 3. &#x4FEE;&#x6B63;&#x8BAD;&#x7EC3;&#x96C6;&#x901A;&#x5E38;&#x662F;&#x4E2A;&#x8D85;&#x9AD8;&#x4EE3;&#x4EF7;&#x7684;&#x4E8B;&#xFF0C;&#x901A;&#x5E38;&#x4E0D;&#x4F1A;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x4E0D;&#x4FEE;&#x6B63;&#x95EE;&#x9898;&#x4E5F;&#x4E0D;&#x5927;&#x3002;&#x4F46;&#x8981;&#x4E86;&#x89E3;&#x8FD9;&#x4F1A;&#x4EE4;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0E;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x5206;&#x5E03;&#x504F;&#x5DEE;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x540E;&#x9762;&#x4F1A;&#x4E13;&#x95E8;&#x8BB2;&#x89E3;&#x3002; &#x6700;&#x540E;&#x8001;&#x5E08;&#x518D;&#x6B21;&#x91CD;&#x7533;&#x82B1;&#x4E00;&#x4E9B;&#x4EBA;&#x5DE5;&#x7CBE;&#x529B;&#x53BB;&#x505A;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#x7684;&#x91CD;&#x8981;&#x6027;&#xFF0C;&#x4EB2;&#x81EA;&#x770B;&#x9519;&#x8BEF;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x975E;&#x5E38;&#x5FC5;&#x8981;&#x4E14;&#x503C;&#x5F97;&#x7684;&#x3002; 2.3 &#x5FEB;&#x901F;&#x642D;&#x5EFA;&#x4F60;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x8FED;&#x4EE3; &#x672C;&#x8282;&#x7684;&#x5EFA;&#x8BAE;&#x5E76;&#x4E0D;&#x662F;&#x8BA9;&#x5C3D;&#x5FEB;&#x627E;&#x4E00;&#x4E2A;&#x6846;&#x67B6;&#xFF0C;&#x8BA9;&#x4EE3;&#x7801;&#x8DD1;&#x8D77;&#x6765;&#xFF0C;&#x800C;&#x662F;&#xFF1A; - &#x5C3D;&#x5FEB;&#x786E;&#x5B9A;&#x76EE;&#x6807;&#x548C;&#x65B9;&#x5411;&#xFF0C;&#x5212;&#x51FA;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x3002;&#x524D;&#x8005;&#x662F;&#x5355;&#x4E00;&#x6570;&#x5B57;&#x8BC4;&#x4F30;&#x6307;&#x6807; - &#x642D;&#x5EFA;&#x521D;&#x59CB;&#x7CFB;&#x7EDF;&#xFF0C;&#x8BA9;&#x8BAD;&#x7EC3;&#x8DD1;&#x8D77;&#x6765;&#xFF0C;&#x4ECE;&#x7B80;&#x5355;&#x7684;&#x7CFB;&#x7EDF;&#x9010;&#x6B65;&#x4F18;&#x5316; - &#x4F7F;&#x7528;&#x504F;&#x5DEE;/&#x65B9;&#x5DEE;&#x5206;&#x6790;&#x548C;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#xFF0C;&#x786E;&#x8BA4;&#x6BCF;&#x8F6E;&#x8FED;&#x4EE3;&#x540E;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x51FA;&#x5728;&#x54EA;&#xFF0C;&#x9488;&#x5BF9;&#x6027;&#x8C03;&#x6574;&#xFF0C;&#x4ECE;&#x800C;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x8F6E;&#x8FED;&#x4EE3; &#x5728;&#x6709;&#x7684;&#x9886;&#x57DF;&#xFF0C;&#x884C;&#x4E1A;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x5F88;&#x591A;&#x6210;&#x719F;&#x7684;&#x8BBA;&#x6587;&#x548C;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x6BD4;&#x5982;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x57FA;&#x4E8E;&#x5B83;&#x4EEC;&#x642D;&#x5EFA;&#x66F4;&#x590D;&#x6742;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002; &#x6211;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x8001;&#x5E08;&#x7684;&#x6838;&#x5FC3;&#x7CBE;&#x795E;&#x662F;&#x642D;&#x5EFA;&#x4E00;&#x4E2A;&#x4F60;&#x80FD;&#x638C;&#x63A7;&#x7684;&#x5B66;&#x4E60;&#x6846;&#x67B6;&#xFF0C;&#x800C;&#x4E14;&#x5C3D;&#x91CF;&#x7B80;&#x5355;&#xFF0C;&#x8BA9;&#x5B83;&#x5728;&#x8FED;&#x4EE3;&#x4E2D;&#x9488;&#x5BF9;&#x4E3B;&#x8981;&#x77DB;&#x76FE;&#x518D;&#x6539;&#x8FDB;&#xFF0C;&#x9632;&#x6B62;&#x8FC7;&#x5EA6;&#x8BBE;&#x8BA1;&#xFF0C;&#x9632;&#x6B62;&#x8BA9;&#x590D;&#x6742;&#x7684;&#x7CFB;&#x7EDF;&#x53D8;&#x5F97;&#x4E0D;&#x53EF;&#x63A7;&#x3002;&#x5C24;&#x5176;&#x5E94;&#x5F53;&#x907F;&#x514D;&#x7684;&#x662F;&#x628A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7CFB;&#x7EDF;&#x641E;&#x6210;&#x4E00;&#x4E2A;&#x7384;&#x5B66;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E0D;&#x77E5;&#x4ECE;&#x54EA;&#x91CC;&#x62F7;&#x4E00;&#x5768;&#x4EE3;&#x7801;&#xFF0C;&#x4E0D;&#x4E86;&#x89E3;&#x80CC;&#x540E;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x66F4;&#x6CA1;&#x6709;&#x80FD;&#x529B;&#x5BF9;&#x4E2D;&#x95F4;&#x73AF;&#x8282;&#x505A;&#x51FA;&#x8C03;&#x8282;&#xFF0C;&#x8FD9;&#x6BD4;&#x5DE5;&#x7A0B;&#x65F6;&#x4EE3;&#x7684;&#x62F7;&#x8D1D;&#x7C98;&#x8D34;&#x5BFC;&#x81F4;&#x7684;&#x540E;&#x679C;&#x4F1A;&#x66F4;&#x4EE4;&#x4EBA;&#x5D29;&#x6E83;&#x3002; 2.4 &#x5728;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x7684;&#x6570;&#x636E;&#x4E0A;&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#x5E76;&#x6D4B;&#x8BD5; &#x5F88;&#x591A;&#x65F6;&#x5019;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x662F;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x8BC6;&#x732B;&#x7684;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x53EA;&#x6709;10,000&#x5F20;&#x56FE;&#x6765;&#x81EA;&#x5B9E;&#x9645;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x8FD9;&#x4E9B;&#x56FE;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x3001;&#x4EAE;&#x5EA6;&#x3001;&#x89D2;&#x5EA6;&#x53EF;&#x80FD;&#x90FD;&#x4E0D;&#x597D;&#xFF0C;&#x4F46;&#x8FD9;&#x6765;&#x81EA;&#x5B9E;&#x9645;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#xFF1B;&#x53C8;&#x6709;200,000&#x5F20;&#x56FE;&#x6765;&#x81EA;&#x7F51;&#x7EDC;&#x722C;&#x866B;&#xFF0C;&#x5B83;&#x4EEC;&#x5F88;&#x5BB9;&#x6613;&#x83B7;&#x53D6;&#xFF0C;&#x800C;&#x4E14;&#x6570;&#x636E;&#x91CF;&#x5DE8;&#x5927;&#xFF0C;&#x4F46;&#x548C;&#x7528;&#x6237;&#x4E0A;&#x4F20;&#x7684;&#x56FE;&#x7247;&#x5374;&#x6709;&#x5F88;&#x5927;&#x5DEE;&#x5F02;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x8BE5;&#x5982;&#x4F55;&#x5206;&#x914D;&#x8BAD;&#x7EC3;&#x96C6;&#x3001;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x5462;&#xFF1F; &#x8001;&#x5E08;&#x4E0D;&#x5EFA;&#x8BAE;&#x5C06;200,000+10,000&#x6DF7;&#x5408;&#x540E;&#x968F;&#x673A;&#x62BD;&#x53D6;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#xFF0C;&#x8FD9;&#x867D;&#x7136;&#x80FD;&#x4EE4;&#x6240;&#x6709;&#x6570;&#x636E;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5374;&#x8BBE;&#x5B9A;&#x4E86;&#x9519;&#x8BEF;&#x7684;&#x201C;&#x9776;&#x5FC3;&#x201D;&#x3002;&#x56E0;&#x4E3A;&#x6A21;&#x578B;&#x6700;&#x7EC8;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x662F;&#x8BC6;&#x522B;&#x7528;&#x6237;&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x3002; &#x5EFA;&#x8BAE;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF1A;&#x5C06;10,000&#x5F20;&#x7528;&#x6237;&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x5206;&#x4E24;&#x534A;&#xFF0C;&#x4E00;&#x534A;&#x7ED9;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x5373;200,000+10,000/2=205,000&#xFF0C;&#x5C06;&#x5269;&#x4F59;5,000&#x518D;&#x968F;&#x673A;&#x5206;&#x4E24;&#x534A;&#xFF0C;&#x7ED9;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x3002; 2.5 &#x4E0D;&#x5339;&#x914D;&#x6570;&#x636E;&#x5212;&#x5206;&#x7684;&#x504F;&#x5DEE;&#x548C;&#x65B9;&#x5DEE; &#x672C;&#x8282;&#x8BA8;&#x8BBA;&#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x5206;&#x5E03;&#x4E0D;&#x4E00;&#x81F4;&#x65F6;&#x5206;&#x6790;&#x504F;&#x5DEE;&#x548C;&#x65B9;&#x5DEE;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5F53;&#x770B;&#x5230;&#x4E0B;&#x9762;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x5206;&#x5E03;&#xFF0C;&#x53EF;&#x4EE5;&#x786E;&#x8BA4;&#x6A21;&#x578B;&#x7684;&#x65B9;&#x5DEE;&#x8FC7;&#x5927;&#x3002; &#x4F46;&#x5982;&#x679C;&#x4E8C;&#x8005;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x786E;&#x8BA4;&#x8FD9;9%&#x7684;&#x5DEE;&#x8DDD;&#x662F;&#x7531;&#x4E8E;&#x6A21;&#x578B;&#x65B9;&#x5DEE;&#x8FC7;&#x5927;&#x5BFC;&#x81F4;&#x7684;&#x8FD8;&#x662F;&#x6570;&#x636E;&#x5206;&#x5E03;&#x4E0D;&#x540C;&#x5BFC;&#x81F4;&#x7684;&#x3002; &#x9996;&#x5148;&#x5E94;&#x8BE5;&#x628A;&#x4E8C;&#x8005;&#x533A;&#x5206;&#x5F00;&#xFF0C;&#x65B9;&#x6CD5;&#x662F;&#x4ECE;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x518D;&#x9009;&#x53D6;&#x4E0E;&#x8BAD;&#x7EC3;&#x96C6;&#x540C;&#x5206;&#x5E03;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#x4F5C;&#x4E3A;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#xFF1A; &#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x4E0D;&#x53C2;&#x4E0E;&#x8BAD;&#x7EC3;&#xFF0C;&#x800C;&#x662F;&#x5F53;&#x5F00;&#x53D1;&#x96C6;&#x4F7F;&#x7528;&#xFF0C;&#x6BCF;&#x6B21;&#x4F7F;&#x7528;&#x5F00;&#x53D1;&#x96C6;&#x68C0;&#x9A8C;&#x6A21;&#x578B;&#x540C;&#x65F6;&#x4E5F;&#x7528;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x9A8C;&#x8BC1;&#x4E00;&#x4E0B;&#x3002;&#x4EE5;&#x4E0B;&#x9762;&#x7684;&#x6570;&#x636E;&#x4E3A;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x7EC4;&#x6A21;&#x578B;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x8BEF;&#x5DEE;&#x6BD4;&#x8F83;&#x5C0F;&#xFF0C;&#x800C;&#x5728;&#x540C;&#x5206;&#x5E03;&#x7684;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x8BF4;&#x660E;&#x6A21;&#x578B;&#x5BF9;&#x8BAD;&#x7EC3;&#x96C6;&#x8FC7;&#x62DF;&#x5408;&#x4E86;&#xFF1B;&#x7B2C;&#x4E8C;&#x7EC4;&#x6A21;&#x578B;&#x5728;&#x540C;&#x5206;&#x5E03;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x8BAD;&#x7EC3;-&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x8BEF;&#x5DEE;&#x5F88;&#x63A5;&#x8FD1;&#xFF0C;&#x800C;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x8FD9;&#x662F;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x5BFC;&#x81F4;&#x7684;&#x3002; &#x56E0;&#x6B64;&#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x7684;&#x5206;&#x6790;&#x6B65;&#x9AA4;&#x662F;&#x5217;&#x51FA;&#x4E94;&#x4E2A;&#x8BEF;&#x5DEE;&#xFF0C;&#x5E76;&#x8BA1;&#x7B97;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x8DDD;&#xFF0C;&#x627E;&#x5230;&#x5DEE;&#x8DDD;&#x6700;&#x5927;&#x7684;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#xFF1A; &#x8BFE;&#x4EF6;&#x7684;&#x7ED3;&#x5C3E;&#x7ED9;&#x51FA;&#x5206;&#x6790;&#x7684;&#x4E00;&#x822C;&#x6027;&#x539F;&#x5219;&#xFF1A; &#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x89E3;&#x51B3;&#x201C;&#x6570;&#x636E;&#x5206;&#x5E03;&#x4E0D;&#x540C;&#x201D;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5F88;&#x597D;&#x7684;&#x901A;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x4E0B;&#x4E00;&#x8282;&#x4F1A;&#x7ED9;&#x51FA;&#x4E00;&#x4E9B;&#x5C1D;&#x8BD5;&#x7684;&#x529E;&#x6CD5;&#x3002; 2.6 &#x5B9A;&#x4F4D;&#x6570;&#x636E;&#x4E0D;&#x5339;&#x914D; &#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0E;&#x5F00;&#x53D1;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#x5373;&#x6570;&#x636E;&#x4E0D;&#x5339;&#x914D;&#x65F6;&#xFF0C;&#x8001;&#x5E08;&#x7684;&#x5EFA;&#x8BAE;&#x662F;&#x4EBA;&#x5DE5;&#x89C2;&#x5BDF;&#x6570;&#x636E;&#xFF0C;&#x611F;&#x53D7;&#x6570;&#x636E;&#x7684;&#x5DEE;&#x5F02;&#x70B9;&#x5728;&#x54EA;&#x91CC;&#xFF0C;&#x7136;&#x540E;&#x60F3;&#x4E00;&#x4E9B;&#x4EBA;&#x5DE5;&#x5408;&#x6210;&#x6570;&#x636E;&#x7684;&#x529E;&#x6CD5;&#x3002; &#x4F8B;&#x5982;&#x8F66;&#x8F7D;&#x7CFB;&#x7EDF;&#x7684;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#xFF0C;&#x5982;&#x679C;&#x8BAD;&#x7EC3;&#x96C6;&#x662F;&#x6B63;&#x5E38;&#x73AF;&#x5883;&#x4E0B;&#x7684;&#x8BED;&#x97F3;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x662F;&#x6709;&#x8F66;&#x566A;&#x80CC;&#x666F;&#x7684;&#xFF0C;&#x4E8C;&#x8005;&#x7684;&#x5DEE;&#x5F02;&#x4F1A;&#x5BFC;&#x81F4;&#x6A21;&#x578B;&#x5728;&#x540E;&#x8005;&#x73AF;&#x5883;&#x4E0B;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x91C7;&#x96C6;&#x5C11;&#x91CF;&#x8F66;&#x566A;&#xFF0C;&#x518D;&#x4E0E;&#x8BAD;&#x7EC3;&#x96C6;&#x5408;&#x6210;&#x5E26;&#x8F66;&#x566A;&#x7684;&#x8BED;&#x97F3;&#x3002; &#x4F46;&#x662F;&#x5408;&#x6210;&#x4E0D;&#x4E00;&#x5B9A;&#x5B8C;&#x5168;&#x6709;&#x6548;&#xFF0C;&#x56E0;&#x4E3A;&#x5408;&#x6210;&#x7684;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x4EBA;&#x5DE5;&#x65E0;&#x6CD5;&#x5BDF;&#x89C9;&#x7684;&#x504F;&#x5411;&#x6027;&#xFF0C;&#x6BD4;&#x5982;&#x5C06;1&#x5C0F;&#x65F6;&#x7684;&#x8F66;&#x566A;&#x4E0E;10,000&#x5C0F;&#x65F6;&#x8BED;&#x97F3;&#x5408;&#x6210;&#xFF0C;&#x800C;&#x8FD9;1&#x5C0F;&#x65F6;&#x8F66;&#x566A;&#x53EF;&#x80FD;&#x5728;&#x6240;&#x6709;&#x8F66;&#x566A;&#x7279;&#x5F81;&#x4E2D;&#x5B58;&#x5728;&#x7CFB;&#x7EDF;&#x6027;&#x504F;&#x5DEE;&#xFF0C;&#x4EBA;&#x8033;&#x662F;&#x65E0;&#x6CD5;&#x5206;&#x8FA8;&#x7684;&#xFF0C;&#x4F46;&#x8BAD;&#x7EC3;&#x51FA;&#x7684;&#x6A21;&#x578B;&#x5C31;&#x4F1A;&#x5BF9;&#x8FD9;1&#x4E2A;&#x5C0F;&#x65F6;&#x8F66;&#x566A;&#x4EA7;&#x751F;&#x8FC7;&#x62DF;&#x5408;&#x3002;&#x800C;&#x4E14;&#x8F66;&#x53A2;&#x5185;&#x8BF4;&#x8BDD;&#x7684;&#x56DE;&#x58F0;&#x7279;&#x5F81;&#x4E0E;&#x5408;&#x6210;&#x7684;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4E0D;&#x540C;&#x54C1;&#x724C;&#x7684;&#x8F66;&#xFF0C;&#x8F66;&#x566A;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x9EA6;&#x514B;&#x98CE;&#x653E;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x4F4D;&#x7F6E;&#x4E0A;&#x6536;&#x96C6;&#x5230;&#x7684;&#x8F66;&#x566A;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5408;&#x6210;&#x7684;&#x6570;&#x636E;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x4E14;&#x4EBA;&#x5DE5;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x5206;&#x8FA8;&#x3002;&#x56FE;&#x7247;&#x6570;&#x636E;&#x7684;&#x5408;&#x6210;&#x4E5F;&#x6709;&#x4E00;&#x6837;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x603B;&#x7684;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x201C;&#x9A97;&#x201D;&#x8FC7;&#x4E86;&#x4EBA;&#xFF0C;&#x5374;&#x201C;&#x9A97;&#x201D;&#x4E0D;&#x8FC7;&#x673A;&#x5668;&#x3002;&#x56E0;&#x6B64;&#x8001;&#x5E08;&#x8BF4;&#x6CA1;&#x6709;&#x7CFB;&#x7EDF;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x53EA;&#x80FD;&#x8BD5;&#x8BD5;&#x770B;&#x4E86;&#x3002; 2.7 &#x8FC1;&#x79FB;&#x5B66;&#x4E60; &#x5F53;&#x4EFB;&#x52A1;A&#x548C;&#x4EFB;&#x52A1;B&#x6709;&#x7740;&#x76F8;&#x540C;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; \(\begin{cases}&#x4EFB;&#x52A1;A:&#x8BC6;&#x732B;\\&#x4EFB;&#x52A1;B:&#x8BC6;&#x522B;X&#x5149;&#x7247;&#x4E2D;&#x7684;&#x75C5;&#x7406;&#x7279;&#x5F81;\end{cases}\)&#x6216;\(\begin{cases}&#x4EFB;&#x52A1;A&#xFF1A;&#x8BED;&#x97F3;&#x8BC6;&#x522B;\\&#x4EFB;&#x52A1;B:&#x8BC6;&#x522B;&#x667A;&#x80FD;&#x97F3;&#x7BB1;&#x5524;&#x9192;&#x97F3;\end{cases}\) &#x4EFB;&#x52A1;A&#x6BD4;&#x4EFB;&#x52A1;B&#x7684;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x591A;&#x51FA;&#x5F88;&#x591A;&#xFF0C;&#x6B64;&#x65F6;A&#x7684;&#x4F4E;&#x7EA7;&#x7279;&#x5F81;&#x6216;&#x8BB8;&#x5BF9;B&#x7684;&#x5B66;&#x4E60;&#x6709;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;A&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5AC1;&#x63A5;&#x7ED9;B&#x6765;&#x4F7F;&#x7528;&#x3002;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#x5220;&#x6389;A&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x7136;&#x540E;&#x4E3A;&#x8F93;&#x51FA;&#x5C42;&#x91CD;&#x65B0;&#x8D4B;&#x4E88;&#x968F;&#x673A;&#x6743;&#x91CD;&#xFF0C;&#x5C06;&#x6807;&#x6CE8;&#x6837;&#x672C;&#x66FF;&#x6362;&#x4E3A;B&#xFF0C;&#x91CD;&#x65B0;&#x8BAD;&#x7EC3;&#x8BE5;&#x7F51;&#x7EDC;&#x3002; &#x5982;&#x679C;B&#x7684;&#x6837;&#x672C;&#x91CF;&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x65B0;&#x7684;&#x8BAD;&#x7EC3;&#x4E2D;&#x53EA;&#x66FF;&#x6362;&#x6700;&#x540E;&#x4E00;&#x5C42;\(W^{[L]}&#x3001;b^{[L]}\)&#xFF1B;&#x5982;&#x679C;B&#x7684;&#x6837;&#x672C;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x591A;&#x8FED;&#x4EE3;&#x51E0;&#x5C42;&#xFF1B;&#x5982;&#x679C;B&#x7684;&#x6837;&#x672C;&#x91CF;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x6240;&#x6709;&#x5C42;&#xFF0C;&#x4F46;&#x8FD9;&#x5C31;&#x6CA1;&#x5FC5;&#x8981;&#x4F7F;&#x7528;&#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x4E86;&#x3002; &#x8FC1;&#x79FB;&#x5B66;&#x4E60;&#x6709;&#x6548;&#x6027;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8D8A;&#x9760;&#x524D;&#x9762;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x5B66;&#x5230;&#x7684;&#x662F;&#x9886;&#x57DF;&#x5185;&#x8D8A;&#x4F4E;&#x5C42;&#x6B21;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x4ECE;&#x8FB9;&#x7F18;&#x68C0;&#x6D4B;&#x2192;&#x4E94;&#x5B98;&#x2192;&#x5F62;&#x6001;&#x3002;&#x4F4E;&#x5C42;&#x7279;&#x5F81;&#x5728;&#x76F8;&#x5173;&#x9886;&#x57DF;&#x5185;&#x662F;&#x53EF;&#x4EE5;&#x590D;&#x7528;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3001;&#x58F0;&#x97F3;&#x8BC6;&#x522B;&#xFF0C;&#x8D8A;&#x9760;&#x540E;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x8D8A;&#x4E0E;&#x5177;&#x4F53;&#x4E1A;&#x52A1;&#x76F8;&#x5173;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6570;&#x636E;&#x91CF;&#x7684;&#x60C5;&#x51B5;&#x66FF;&#x6362;&#x6389;&#x3002; 2.8 &#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60; &#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x662F;&#x6307;&#x5728;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x540C;&#x65F6;&#x5224;&#x65AD;&#x591A;&#x4E2A;&#x7279;&#x5F81;&#x3002;&#x6BD4;&#x5982;&#x81EA;&#x52A8;&#x9A7E;&#x9A76;&#x5728;&#x89C6;&#x89C9;&#x5904;&#x7406;&#x4E2D;&#x540C;&#x65F6;&#x5224;&#x65AD;&#x56FE;&#x7247;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#x8F66;&#x8F86;&#x3001;&#x8DEF;&#x6807;&#x3001;&#x4FE1;&#x53F7;&#x706F;&#x7B49;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E9B;&#x7279;&#x5F81;&#x5B58;&#x5728;&#x4E8E;&#x76F8;&#x540C;&#x7684;&#x8F93;&#x5165;&#x6837;&#x672C;&#xFF0C;&#x4E14;&#x5177;&#x6709;&#x7C7B;&#x4F3C;&#x7684;&#x4F4E;&#x5C42;&#x7279;&#x5F81;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x590D;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x7684;&#x5FC5;&#x8981;&#x6761;&#x4EF6;&#x3002;&#x5B83;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x548C;Softmax&#x6709;&#x70B9;&#x7C7B;&#x4F3C;&#xFF0C;&#x6240;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x5B83;&#x4E0D;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x5C42;&#x4E2A;&#x8282;&#x70B9;&#x548C;&#x4E3A;1&#xFF1A; &#x5176;&#x4E2D;&#x177;&#x662F;4&#x7EF4;&#x5411;&#x91CF;&#xFF0C;&#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A; \(L(&#x177;, y) = \frac{1}{m}\sum_{i=1}^{m}\sum_{j=1}^{n^{[L]}}L(&#x177;_j^{(i)}, y_j^{(i)})\\ =\frac{1}{m}\sum_{i=1}^{m}\sum_{j=1}^{n^{[L]}}[-y_j^{(i)}\log{&#x177;_j^{(i)}} - (1-y_j^{(i)})\log{(1-&#x177;_j^{(i)})}]\) &#x6709;&#x65F6;&#x4F1A;&#x9047;&#x5230;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;&#x6709;&#x7684;&#x6837;&#x672C;&#x53EA;&#x6807;&#x6CE8;&#x4E86;&#x90E8;&#x5206;&#x7279;&#x5F81;&#xFF0C;&#x672A;&#x6807;&#x6CE8;&#x7684;&#x4E0D;&#x80FD;&#x786E;&#x5B9A;&#x662F;&#x6216;&#x5426;&#xFF0C;&#x6B64;&#x65F6;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5219;&#x53EA;&#x5BF9;&#x6807;&#x6CE8;&#x7684;&#x6570;&#x636E;&#x6C42;&#x548C;&#x5373;&#x53EF;&#x3002; &#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#xFF1A; &#x8BAD;&#x7EC3;&#x7684;&#x4E00;&#x7EC4;&#x4EFB;&#x52A1;&#x53EF;&#x4EE5;&#x5171;&#x7528;&#x5E95;&#x5C42;&#x7279;&#x5F81;&#xFF0C;&#x8FD9;&#x79CD;&#x573A;&#x666F;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x591A;&#xFF0C;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x662F;&#x4E00;&#x7C7B;&#x3002; &#x6BCF;&#x4E2A;&#x4EFB;&#x52A1;&#x7684;&#x6570;&#x636E;&#x91CF;&#x5F88;&#x63A5;&#x8FD1;&#xFF0C;&#x8001;&#x5E08;&#x8BF4;&#x8FD9;&#x4E00;&#x70B9;&#x5E76;&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x3002; &#x53EF;&#x4EE5;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x7F51;&#x7EDC;&#x540C;&#x65F6;&#x505A;&#x597D;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x3002; 2.9 &#x4EC0;&#x4E48;&#x662F;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60; &#x4EE5;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x4E3A;&#x4F8B;&#xFF0C;&#x4F20;&#x7EDF;&#x505A;&#x6CD5;&#x4ECE;&#x97F3;&#x9891;&#x5230;&#x6587;&#x672C;&#x8981;&#x7ECF;&#x5386;&#x82E5;&#x5E72;&#x9636;&#x6BB5;&#xFF1A; &#x800C;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x5B66;&#x4E60;&#x5219;&#x662F;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8F93;&#x5165;&#x4E00;&#x6BB5;&#x97F3;&#x9891;&#xFF0C;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x6587;&#x672C;&#xFF1A; &#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x5B66;&#x4E60;&#x9700;&#x8981;&#x5927;&#x91CF;&#x7684;&#x6570;&#x636E;&#x624D;&#x80FD;&#x8BA9;&#x7CFB;&#x7EDF;&#x8868;&#x73B0;&#x826F;&#x597D;&#x3002;&#x4EE5;&#x95E8;&#x7981;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x4E3A;&#x4F8B;&#xFF0C;&#x4F20;&#x7EDF;&#x65B9;&#x6CD5;&#x5206;&#x4E24;&#x6B65;&#xFF1A; &#x8BC6;&#x522B;&#x51FA;&#x56FE;&#x7247;&#x4E2D;&#x4EBA;&#x8138;&#x7684;&#x4F4D;&#x7F6E; &#x8BC6;&#x522B;&#x8BE5;&#x4EBA;&#x8138;&#x7684;ID &#x4F20;&#x7EDF;&#x65B9;&#x6CD5;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#xFF0C;&#x5206;&#x89E3;&#x540E;&#x7684;&#x6BCF;&#x4E2A;&#x5B50;&#x4EFB;&#x52A1;&#x90FD;&#x66F4;&#x7EAF;&#x7CB9;&#x548C;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x6837;&#x672C;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x90FD;&#x66F4;&#x591A;&#x3002;&#x800C;&#x7EC4;&#x5408;&#x540E;&#x76F8;&#x5F53;&#x4E8E;&#x53E0;&#x52A0;&#x4E86;&#x66F4;&#x591A;&#x6761;&#x4EF6;&#xFF0C;&#x6837;&#x672C;&#x91CF;&#x53EF;&#x80FD;&#x5C31;&#x6CA1;&#x90A3;&#x4E48;&#x5927;&#x4E86;&#x3002; &#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x597D;&#x5904;&#x4E5F;&#x663E;&#x800C;&#x6613;&#x89C1;&#xFF0C;&#x5B83;&#x7701;&#x7565;&#x4E86;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x4E2D;&#x5F88;&#x591A;&#x7E41;&#x7410;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x8BA9;&#x66F4;&#x591A;&#x7684;&#x5DE5;&#x4F5C;&#x4EA4;&#x7ED9;&#x673A;&#x5668;&#xFF0C;&#x8BA9;&#x4EBA;&#x4ECE;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x7EC6;&#x8282;&#x4E2D;&#x89E3;&#x8131;&#x51FA;&#x6765;&#x3002; 2.10 &#x662F;&#x5426;&#x8981;&#x4F7F;&#x7528;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60; &#x672C;&#x8282;&#x5206;&#x6790;&#x4E86;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x4F18;&#x7F3A;&#x70B9;&#x3002; &#x4F18;&#x70B9;&#xFF1A; &#x2460; &#x53EA;&#x8BA9;&#x6570;&#x636E;&#x8BF4;&#x8BDD;&#x3002;&#x53EA;&#x8981;&#x6709;&#x8DB3;&#x591F;&#x591A;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5C31;&#x80FD;&#x8BA9;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x81EA;&#x5DF1;&#x641E;&#x6E05;&#x695A;&#x4ECE;X&#x5230;Y&#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x4E0D;&#x5FC5;&#x4EBA;&#x4E3A;&#x5730;&#x5F15;&#x5165;&#x4EBA;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x6BD4;&#x5982;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x4E2D;&#x97F3;&#x4F4D;&#x7684;&#x6982;&#x5FF5;&#x3002; &#x2461; &#x624B;&#x5DE5;&#x8BBE;&#x8BA1;&#x7684;&#x7EC4;&#x4EF6;&#x66F4;&#x5C11;&#x3002; &#x7F3A;&#x70B9;&#xFF1A; &#x2460; &#x9700;&#x8981;&#x66F4;&#x6D77;&#x91CF;&#x7684;&#x6570;&#x636E;&#x3002; &#x2461; &#x5B83;&#x6392;&#x9664;&#x4E86;&#x53EF;&#x80FD;&#x6709;&#x7528;&#x7684;&#x624B;&#x5DE5;&#x8BBE;&#x8BA1;&#x7EC4;&#x4EF6;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x628A;&#x53CC;&#x5203;&#x5251;&#xFF0C;&#x4ECD;&#x4EE5;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#x4E2D;&#x97F3;&#x4F4D;&#x7684;&#x6982;&#x5FF5;&#x4E3A;&#x4F8B;&#xFF0C;&#x5C3D;&#x7BA1;&#x5B83;&#x662F;&#x4EBA;&#x4E3A;&#x521B;&#x9020;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x5728;&#x76EE;&#x524D;&#x5B83;&#x662F;&#x6709;&#x6548;&#x7684;&#x3002;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x65B9;&#x6CD5;&#x4F7F;&#x5F97;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x4E0D;&#x80FD;&#x518D;&#x63A5;&#x53D7;&#x4EBA;&#x5DE5;&#x5E72;&#x9884;&#x3002;&#x4F46;&#x662F;&#x4EBA;&#x7C7B;&#x65E0;&#x6CD5;&#x65AD;&#x5B9A;&#x73B0;&#x5728;&#x6709;&#x6548;&#x7684;&#x624B;&#x5DE5;&#x8BBE;&#x8BA1;&#x662F;&#x5426;&#x5C31;&#x662F;&#x7EC8;&#x6781;&#x65B9;&#x6CD5;&#xFF0C;&#x4E5F;&#x8BB8;&#x968F;&#x7740;&#x6570;&#x636E;&#x89C4;&#x6A21;&#x6269;&#x5927;&#x548C;&#x8FD0;&#x7B97;&#x80FD;&#x529B;&#x63D0;&#x5347;&#xFF0C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7F51;&#x7EDC;&#x4F1A;&#x66F4;&#x8D34;&#x8FD1;&#x5BA2;&#x89C2;&#x7684;X&#x2192;Y&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x8BA4;&#x4E3A;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x957F;&#x671F;&#x503C;&#x5F97;&#x63A2;&#x7D22;&#x7684;&#x65B9;&#x5411;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（七）]]></title>
    <url>%2F2018%2F03%2F30%2F2018%2F0331DeepLearningAI08%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x7ED3;&#x6784;&#x5316;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x9879;&#x76EE;&#x300B;&#x7B2C;&#x4E00;&#x5468;&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#xFF08;ML)&#x7B56;&#x7565;&#xFF08;1&#xFF09;&#x300B;&#x3002; &#x672C;&#x8BFE;&#x6CA1;&#x6709;&#x7F16;&#x7A0B;&#x4F5C;&#x4E1A;&#xFF0C;&#x8001;&#x5E08;&#x5728;&#x5F00;&#x7BC7;&#x63D0;&#x5230;&#x672C;&#x8BFE;&#x63D0;&#x4F9B;&#x66F4;&#x5FEB;&#x901F;&#x3001;&#x9AD8;&#x6548;&#x5730;&#x4F18;&#x5316;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7CFB;&#x7EDF;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x5F88;&#x591A;&#x5927;&#x5B66;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x8BFE;&#x7A0B;&#x662F;&#x4E0D;&#x5305;&#x542B;&#x8FD9;&#x4E9B;&#x5185;&#x5BB9;&#x7684;&#x3002; 1.2 &#x6B63;&#x4EA4;&#x5316; &#x663E;&#x793A;&#x5668;&#x7684;&#x63A7;&#x5236;&#x5F00;&#x5173;&#x901A;&#x5E38;&#x7531;&#x82E5;&#x5E72;&#x4E2A;&#xFF1A;&#x63A7;&#x5236;&#x663E;&#x793A;&#x533A;&#x5BBD;&#x5EA6;&#x3001;&#x9AD8;&#x5EA6;&#x3001;&#x68AF;&#x5EA6;&#x3001;&#x89D2;&#x5EA6;&#x548C;&#x4EAE;&#x5EA6;&#x7B49;&#x3002;&#x6BCF;&#x4E2A;&#x5F00;&#x5173;&#x6216;&#x65CB;&#x94AE;&#x63A7;&#x5236;&#x4E00;&#x4E2A;&#x6307;&#x6807;&#xFF0C;&#x8C03;&#x89E3;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x53E6;&#x4E00;&#x4E2A;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x6B63;&#x4EA4;&#x5316;&#xFF0C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5F53;&#x8BAD;&#x7EC3;&#x7684;&#x7ED3;&#x679C;&#x4E0D;&#x5982;&#x4EBA;&#x610F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x80FD;&#x8BCA;&#x65AD;&#x51FA;&#x4E00;&#x4E9B;&#x6B63;&#x4EA4;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x9488;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x627E;&#x5230;&#x786E;&#x5B9A;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6765;&#x5355;&#x72EC;&#x8C03;&#x8282;&#x3002; &#x6211;&#x66FE;&#x7ECF;&#x9762;&#x8BD5;&#x8FC7;&#x4E00;&#x4EBA;&#xFF0C;&#x8DDF;&#x6211;&#x63CF;&#x8FF0;&#x8BF4;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x66F4;&#x50CF;&#x662F;&#x7384;&#x5B66;&#xFF0C;&#x5B8C;&#x5168;&#x4E0D;&#x53EF;&#x9884;&#x671F;&#x5B83;&#x80FD;&#x8FD0;&#x7B97;&#x51FA;&#x4EC0;&#x4E48;&#x7ED3;&#x679C;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x6B63;&#x662F;&#x56E0;&#x4E3A;&#x5728;&#x8C03;&#x4F18;&#x9636;&#x6BB5;&#x6CA1;&#x6709;&#x505A;&#x5230;&#x6B63;&#x4EA4;&#x5316;&#x6240;&#x81F4;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x65CB;&#x94AE;&#x5728;&#x63A7;&#x5236;&#x9AD8;&#x5EA6;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E5F;&#x5728;&#x63A7;&#x5236;&#x89D2;&#x5EA6;&#x548C;&#x4EAE;&#x5EA6;&#xFF0C;&#x64CD;&#x4F5C;&#x8FD9;&#x6837;&#x4E00;&#x53F0;&#x673A;&#x5668;&#x6050;&#x6015;&#x5FC5;&#x987B;&#x8981;&#x9760;&#x70E7;&#x9999;&#x4E5E;&#x6C42;&#x5B83;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x9760;&#x8C31;&#x7684;&#x7ED3;&#x679C;&#x4E86;&#x3002; &#x901A;&#x5E38;&#x8FDB;&#x884C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x64CD;&#x4F5C;&#x94FE;&#x6761;&#x5982;&#x4E0B;&#xFF1A; &#x2460; &#x7CFB;&#x7EDF;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0A;&#x8868;&#x73B0;&#x826F;&#x597D; &#x2192; &#x2461; &#x7CFB;&#x7EDF;&#x5728;&#x5F00;&#x53D1;&#x673A;&#x4E0A;&#x8868;&#x73B0;&#x826F;&#x597D; &#x2192; &#x2462; &#x7CFB;&#x7EDF;&#x5728;&#x6D4B;&#x8BD5;&#x673A;&#x4E0A;&#x8868;&#x73B0;&#x826F;&#x597D; &#x2192; &#x2463; &#x7CFB;&#x7EDF;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x8868;&#x73B0;&#x826F;&#x597D; &#x5F53;&#x5728;&#x6BCF;&#x4E00;&#x73AF;&#x8282;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x5E0C;&#x671B;&#x627E;&#x5230;&#x6B63;&#x4EA4;&#x5316;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6765;&#x4F18;&#x5316;&#xFF0C;&#x65B9;&#x6848;&#x7684;&#x65B9;&#x5411;&#x5982;&#x4E0B;&#xFF1A; &#x2460; &#x8BAD;&#x7EC3;&#x66F4;&#x5927;&#x7684;&#x7F51;&#x7EDC;&#x6216;&#x5207;&#x6362;&#x66F4;&#x597D;&#x7684;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#xFF0C;&#x5982;Adam&#x7B49; &#x2461; &#x6B63;&#x5219;&#x5316;&#x6216;&#x589E;&#x5927;&#x8BAD;&#x7EC3;&#x96C6; &#x2462; &#x53EF;&#x80FD;&#x662F;&#x5BF9;&#x5F00;&#x53D1;&#x96C6;&#x8FC7;&#x62DF;&#x5408;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x66F4;&#x5927;&#x7684;&#x5F00;&#x53D1;&#x96C6; &#x2463; &#x8981;&#x4E48;&#x5F00;&#x53D1;&#x96C6;&#x5206;&#x5E03;&#x8BBE;&#x7F6E;&#x4E0D;&#x6B63;&#x786E;&#xFF0C;&#x8981;&#x4E48;&#x6210;&#x672C;&#x51FD;&#x6570;&#x6D4B;&#x91CF;&#x7684;&#x6307;&#x6807;&#x4E0D;&#x5BF9;&#xFF0C;&#x6539;&#x53D8;&#x5F00;&#x53D1;&#x96C6;&#x6216;&#x6210;&#x672C;&#x51FD;&#x6570; &#x6B63;&#x4EA4;&#x5316;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x786E;&#x5B9A;&#x5728;&#x94FE;&#x6761;&#x4E2D;&#x54EA;&#x4E2A;&#x9636;&#x6BB5;&#x51FA;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x786E;&#x5B9A;&#x53EF;&#x4EE5;&#x8C03;&#x8282;&#x54EA;&#x4E9B;&#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#x6765;&#x89E3;&#x51B3;&#x8BE5;&#x95EE;&#x9898;&#x3002; 1.3 &#x5355;&#x4E00;&#x6570;&#x5B57;&#x8BC4;&#x4F30;&#x6307;&#x6807; &#x672C;&#x8282;&#x7684;&#x89C2;&#x5FF5;&#x662F;&#xFF1A;&#x8BA9;&#x7CFB;&#x7EDF;&#x7684;&#x8BC4;&#x4EF7;&#x6307;&#x6807;&#x7EDF;&#x4E00;&#x5230;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x7684;&#x6570;&#x503C;&#x4E0A;&#x6765;&#x3002;&#x4F8B;&#x5982;&#x6211;&#x4EEC;&#x5E38;&#x5E38;&#x9677;&#x5165;&#x67E5;&#x51C6;&#x7387;&#x548C;&#x67E5;&#x5168;&#x7387;&#x7684;&#x4E24;&#x96BE;&#x5883;&#x5730;&#x4E0A;&#x6765;&#xFF0C;&#x4E24;&#x4E2A;&#x90FD;&#x60F3;&#x8981;&#xFF0C;&#x53EF;&#x662F;&#x4E8C;&#x8005;&#x5C31;&#x662F;&#x6B64;&#x6D88;&#x5F7C;&#x957F;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x5728;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5B66;&#x672F;&#x754C;&#x5E38;&#x91C7;&#x7528;&#x4E8C;&#x8005;&#x7684;&#x8C03;&#x548C;&#x5E73;&#x5747;&#x503C;=\(\frac{2}{\frac{1}{P}+\frac{1}{R}}\)&#x6765;&#x5C06;&#x6307;&#x6807;&#x5355;&#x4E00;&#x5316;&#x3002; &#x518D;&#x5982;&#xFF0C;&#x5F53;&#x8BAD;&#x7EC3;&#x4E86;6&#x4E2A;&#x8BC6;&#x732B;&#x6A21;&#x578B;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x5E94;&#x7528;&#x5230;&#x4ECE;&#x4E0D;&#x540C;&#x533A;&#x57DF;&#x91C7;&#x6837;&#x4E0A;&#x6765;&#x7684;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x8868;&#x73B0;&#x5404;&#x4E0D;&#x76F8;&#x540C;&#xFF1A; &#x6307;&#x6807;&#x4E0D;&#x5355;&#x4E00;&#xFF0C;&#x5F88;&#x96BE;&#x4ECE;&#x8FD9;&#x4E2A;&#x4E8C;&#x7EF4;&#x8868;&#x683C;&#x4E2D;&#x8BC4;&#x4EF7;&#x54EA;&#x4E2A;&#x6A21;&#x578B;&#x8868;&#x73B0;&#x6700;&#x597D;&#x3002;&#x56E0;&#x6B64;&#x5EFA;&#x8BAE;&#x5C06;&#x56DB;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x8868;&#x73B0;&#x53D6;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x6307;&#x6807;&#x5355;&#x4E00;&#x5316;&#x5230;&#x8BE5;&#x5747;&#x503C;&#x4E0A;&#x6765;&#xFF1A; 1.4 &#x6EE1;&#x8DB3;&#x548C;&#x4F18;&#x5316;&#x6307;&#x6807; &#x672C;&#x8282;&#x8FD8;&#x662F;&#x5728;&#x8BB2;&#x5355;&#x4E00;&#x6570;&#x5B57;&#x8BC4;&#x4F30;&#x6307;&#x6807;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#x65F6;&#x5019;&#xFF0C;&#x6307;&#x6807;&#x8FC7;&#x591A;&#x4E14;&#x4E0D;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF0C;&#x4E0D;&#x597D;&#x634F;&#x5728;&#x4E00;&#x8D77;&#x6216;&#x8005;&#x634F;&#x5728;&#x4E00;&#x8D77;&#x663E;&#x5F97;&#x5F88;&#x4E0D;&#x81EA;&#x7136;&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x8981;&#x8FD9;&#x4E48;&#x505A;&#x3002;&#x968F;&#x4FBF;&#x5B9A;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x4E5F;&#x80DC;&#x8FC7;&#x6CA1;&#x6709;&#x76EE;&#x6807;&#xFF0C;&#x5F53;&#x6307;&#x6807;&#x8FC7;&#x591A;&#x65F6;&#xFF0C;&#x5355;&#x4E00;&#x5316;&#x4F1A;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x5730;&#x63BA;&#x5165;&#x4E00;&#x4E9B;&#x4E3B;&#x89C2;&#x7684;&#x4EF7;&#x503C;&#x5224;&#x65AD;&#xFF0C;&#x8FD9;&#x662F;&#x786E;&#x5B9A;&#x4EA7;&#x54C1;&#x65B9;&#x5411;&#x6216;&#x8BBE;&#x5B9A;&#x4EFB;&#x52A1;&#x76EE;&#x6807;&#x662F;&#x5FC5;&#x987B;&#x7684;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5206;&#x7C7B;&#x5668;&#x7684;&#x6027;&#x80FD;&#x8868;&#x73B0;&#x9664;&#x4E86;&#x7CBE;&#x5EA6;&#xFF0C;&#x8FD8;&#x8981;&#x8003;&#x8651;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#xFF1A; &#x53EF;&#x4EE5;&#x8BBE;&#x5B9A;&#x516C;&#x5F0F;&#xFF1A;&#x6027;&#x80FD;&#x6307;&#x6807;=&#x7CBE;&#x5EA6;-0.5&#xD7;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#xFF0C;&#x4F5C;&#x4E3A;&#x5355;&#x4E00;&#x5316;&#x7684;&#x8BC4;&#x4EF7;&#x6307;&#x6807;&#x3002;&#x4E8E;&#x662F;&#x672C;&#x4F8B;&#x4E2D; A=90-0.5&#xD7;80=50 B=92-0.5&#xD7;95=44.5 C=95-0.5&#xD7;1500=-655 &#x6545;A&#x662F;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#x662F;&#xFF0C;&#x5C06;&#x7CBE;&#x5EA6;&#x6307;&#x5B9A;&#x4E3A;&#x4F18;&#x5316;&#x6307;&#x6807;&#xFF0C;&#x5C06;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x6307;&#x5B9A;&#x4E3A;&#x6EE1;&#x8DB3;&#x6307;&#x6807;&#xFF0C;&#x6A21;&#x578B;&#x7684;&#x8BAD;&#x7EC3;&#x76EE;&#x6807;&#x662F;&#x5728;&#x8FBE;&#x5230;&#x6EE1;&#x8DB3;&#x6307;&#x6807;&#xFF08;&#x2264;100ms&#xFF09;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x5C3D;&#x91CF;&#x63D0;&#x5347;&#x4F18;&#x5316;&#x6307;&#x6807;&#x3002;&#x4E8E;&#x662F;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;B&#x5C31;&#x662F;&#x6700;&#x4F18;&#x89E3;&#x3002;&#x8FD9;&#x540C;&#x6837;&#x8981;&#x6C42;&#x4F18;&#x5316;&#x6307;&#x6807;&#x662F;&#x5355;&#x4E00;&#x5316;&#x7684;&#x3002; 1.5 &#x8BAD;&#x7EC3;/&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x5212;&#x5206; &#x5F00;&#x53D1;&#x96C6;&#x53C8;&#x79F0;&#x4FDD;&#x7559;&#x4EA4;&#x53C9;&#x9A8C;&#x8BC1;&#x96C6;&#x3002; &#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#x662F;&#xFF1A;&#x5C1D;&#x8BD5;&#x5F88;&#x591A;&#x601D;&#x8DEF;&#xFF0C;&#x7528;&#x8BAD;&#x7EC3;&#x53CA;&#x8BAD;&#x7EC3;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x5F00;&#x53D1;&#x96C6;&#x8BC4;&#x4F30;&#x8FD9;&#x4E9B;&#x4E0D;&#x540C;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x7136;&#x540E;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#xFF1B;&#x7136;&#x540E;&#x518D;&#x4E0D;&#x65AD;&#x8FED;&#x4EE3;&#x6A21;&#x578B;&#xFF0C;&#x6539;&#x5584;&#x5176;&#x5728;&#x5F00;&#x53D1;&#x96C6;&#x4E0A;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x76F4;&#x5230;&#x6700;&#x540E;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x6EE1;&#x610F;&#x7684;&#x6210;&#x672C;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x7528;&#x6D4B;&#x8BD5;&#x96C6;&#x53BB;&#x9A8C;&#x8BC1;&#x8BC4;&#x4F30;&#x3002; &#x672C;&#x8282;&#x7B2C;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x662F;&#x4E3A;&#x6765;&#x81EA;&#x591A;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x6837;&#x672C;&#x8BAD;&#x7EC3;&#x201C;&#x8BC6;&#x732B;&#x201D;&#x6A21;&#x578B;&#xFF1A; &#x2460;&#x9009;&#x53D6;&#x5F00;&#x53D1;&#x96C6;+&#x5355;&#x5B9E;&#x6570;&#x8BC4;&#x4F30;&#x6307;&#x6807; &#x2461;&#x8FED;&#x4EE3;&#x4E0D;&#x540C;&#x7684;&#x60F3;&#x6CD5;&#x8DD1;&#x5B9E;&#x9A8C;&#xFF0C;&#x6839;&#x636E;&#x2460;&#x8BC4;&#x4F30;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x7C7B;&#x5668;&#xFF0C;&#x9009;&#x51FA;&#x6700;&#x597D;&#x7684;&#x90A3;&#x4E2A; &#x2462;&#x4E0D;&#x65AD;&#x8C03;&#x4F18;&#xFF0C;&#x8FED;&#x4EE3;&#x751F;&#x6210;&#x6A21;&#x578B; &#x2463;&#x5728;&#x6D4B;&#x8BD5;&#x96C6;&#x4E0A;&#x9A8C;&#x8BC1; &#x6211;&#x7684;&#x7406;&#x89E3;&#xFF1A;&#x8BAD;&#x7EC3;&#x96C6;&#x5C31;&#x662F;&#x7EC3;&#x4E60;&#x518C;&#xFF0C;&#x5F00;&#x53D1;&#x96C6;&#x5C31;&#x662F;&#x771F;&#x9898;&#x6A21;&#x62DF;&#x8003;&#xFF0C;&#x6D4B;&#x8BD5;&#x96C6;&#x5C31;&#x662F;&#x5927;&#x8003;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x5E94;&#x7528;&#x5C31;&#x662F;&#x5C31;&#x4E1A;&#x4E86;&#x3002;&#x4E0D;&#x662F;&#x6BCF;&#x6B21;&#x90FD;&#x7528;&#x5927;&#x8003;&#x6765;&#x9A8C;&#x8BC1;&#x6A21;&#x578B;&#x662F;&#x62C5;&#x5FC3;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x56E0;&#x4E3A;&#x6A21;&#x578B;&#x6700;&#x7EC8;&#x7684;&#x76EE;&#x7684;&#x662F;&#x5E94;&#x7528;&#xFF0C;&#x5BF9;&#x6D4B;&#x8BD5;&#x96C6;&#x8FC7;&#x62DF;&#x5408;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x201C;&#x9AD8;&#x5206;&#x4F4E;&#x80FD;&#x201D;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x80FD;&#x8F7B;&#x6613;&#x796D;&#x51FA;&#x6D4B;&#x8BD5;&#x96C6;&#x3002;&#x7528;&#x771F;&#x9898;&#x6A21;&#x62DF;&#x8003;&#x6765;&#x628A;&#x5173;&#xFF0C;&#x5C31;&#x8981;&#x6C42;&#x771F;&#x9898;&#x6A21;&#x8003;&#x548C;&#x5927;&#x8003;&#x7684;&#x96C6;&#x5408;&#x5FC5;&#x987B;&#x662F;&#x540C;&#x5206;&#x5E03;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x96C6;&#x4E0D;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x5C31;&#x597D;&#x6BD4;&#x5B66;&#x4E86;&#x4E09;&#x5E74;&#x6587;&#x79D1;&#xFF0C;&#x5927;&#x8003;&#x65F6;&#x5374;&#x88AB;&#x6254;&#x5230;&#x7406;&#x79D1;&#x8003;&#x573A;&#xFF0C;&#x4E0D;&#x50BB;&#x903C;&#x624D;&#x602A;&#xFF01; &#x8FD8;&#x56DE;&#x5230;&#x201C;&#x8BC6;&#x732B;&#x201D;&#x7684;&#x6848;&#x4F8B;&#xFF0C;&#x7EDD;&#x5BF9;&#x4E0D;&#x80FD;&#x968F;&#x673A;&#x62BD;&#x53D6;&#x533A;&#x57DF;&#x4F5C;&#x4E3A;&#x5F00;&#x53D1;&#x3001;&#x6D4B;&#x8BD5;&#x96C6;&#xFF1A; &#x800C;&#x5E94;&#x8BE5;&#x5C06;&#x8FD9;&#x4E9B;&#x6765;&#x81EA;&#x4E0D;&#x540C;&#x533A;&#x57DF;&#x7684;&#x6570;&#x636E;&#x91CD;&#x65B0;&#x6D17;&#x724C;&#xFF0C;&#x968F;&#x673A;&#x62BD;&#x53D6;&#x51FA;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x3002; &#x672C;&#x8282;&#x672B;&#x5C3E;&#x7ED9;&#x51FA;&#x7684;&#x6307;&#x5BFC;&#x610F;&#x89C1;&#x662F;&#xFF1A;&#x5728;&#x9009;&#x62E9;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x65F6;&#xFF0C;&#x8981;&#x8BA9;&#x5B83;&#x4EEC;&#x80FD;&#x591F;&#x53CD;&#x6620;&#x672A;&#x6765;&#x5C06;&#x5E94;&#x7528;&#x4E8E;&#x5B9E;&#x9645;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x8981;&#x6C42;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x5FC5;&#x987B;&#x540C;&#x5206;&#x5E03;&#x3002;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x8BB2;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x51FA;&#x4E8E;&#x73B0;&#x5B9E;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x53EF;&#x80FD;&#x5F88;&#x96BE;&#x505A;&#x5230;&#x8BAD;&#x7EC3;&#x96C6;&#x4E0E;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x540C;&#x5206;&#x5E03;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4F1A;&#x5728;&#x540E;&#x9762;&#x7684;&#x7AE0;&#x8282;&#x8BB2;&#x5230;&#x3002; 1.6 &#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x5927;&#x5C0F; &#x4EE5;&#x5F80;&#x5F53;&#x6570;&#x636E;&#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#x65F6;&#xFF08;&#x6BD4;&#x5982;100&#x3001;1,000&#x3001;10,000&#x2026;&#x2026;&#x8FD9;&#x6837;&#x7684;&#x91CF;&#x7EA7;&#xFF09;&#xFF0C;&#x8BAD;&#x7EC3;&#x96C6;&#x5360;70%&#xFF0C;&#x6D4B;&#x8BD5;&#x96C6;&#x5360;30%&#x6216;&#x8BAD;&#x7EC3;&#x96C6;60%&#xFF0C;&#x5F00;&#x53D1;&#x96C6;20%&#xFF0C;&#x6D4B;&#x8BD5;&#x96C6;20%&#x662F;&#x5408;&#x7406;&#x7684;&#x3002; &#x800C;&#x73B0;&#x4EE3;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x6570;&#x636E;&#x89C4;&#x6A21;&#x5E38;&#x5E38;&#x5728;&#x767E;&#x4E07;&#x91CF;&#x7EA7;&#xFF0C;&#x91C7;&#x7528;1%&#x4F5C;&#x4E3A;&#x5F00;&#x53D1;&#x96C6;&#xFF0C;1%&#x4F5C;&#x4E3A;&#x6D4B;&#x8BD5;&#x96C6;&#x5C31;&#x8DB3;&#x591F;&#x4E86;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x6570;&#x636E;&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x3002; &#x6211;&#x7406;&#x89E3;&#xFF0C;&#x5BF9;&#x4E8E;&#x5F00;&#x53D1;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#xFF0C;&#x53EA;&#x8981;&#x4E0E;&#x672A;&#x6765;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x662F;&#x540C;&#x5206;&#x5E03;&#x7684;&#xFF0C;&#x5176;&#x6709;&#x6548;&#x6027;&#x66F4;&#x591A;&#x53D6;&#x51B3;&#x4E8E;&#x91CF;&#x7EA7;&#x800C;&#x975E;&#x5360;&#x603B;&#x6570;&#x636E;&#x7684;&#x6BD4;&#x91CD;&#xFF0C;&#x4E07;&#x7EA7;&#x522B;&#x5BF9;&#x4E8E;&#x8BC4;&#x6D4B;&#x901A;&#x5E38;&#x90FD;&#x8DB3;&#x591F;&#x4E86;&#x3002; 1.7 &#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8BE5;&#x6539;&#x53D8;&#x5F00;&#x53D1;/&#x6D4B;&#x8BD5;&#x96C6;&#x548C;&#x6307;&#x6807; &#x9488;&#x5BF9;&#x8FD9;&#x4E2A;&#x6807;&#x9898;&#x5176;&#x5B9E;&#x5F88;&#x597D;&#x56DE;&#x7B54;&#xFF1A;&#x90A3;&#x5C31;&#x662F;&#x8BBE;&#x9519;&#x76EE;&#x6807;&#x7684;&#x65F6;&#x5019;&#x3002;&#x8BFE;&#x4EF6;&#x4E3E;&#x4E86;&#x4E24;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; &#x4E00;&#x4E2A;&#x662F;&#x5BF9;&#x603B;&#x76EE;&#x6807;&#x7684;&#x5206;&#x91CF;&#x8003;&#x8651;&#x4E0D;&#x5468;&#x5168;&#xFF0C;&#x53EA;&#x8003;&#x8651;&#x4E86;&#x5224;&#x732B;&#x7684;&#x7CBE;&#x5EA6;&#xFF0C;&#x6CA1;&#x8003;&#x8651;&#x5230;&#x5982;&#x679C;&#x628A;&#x8272;&#x60C5;&#x56FE;&#x7247;&#x8BEF;&#x5224;&#x4E3A;&#x732B;&#x63A8;&#x9001;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x6BD4;&#x5224;&#x9519;&#x4E00;&#x4E2A;&#x732B;&#x540E;&#x679C;&#x4E25;&#x91CD;&#x5F97;&#x591A;&#x3002;&#x8FD9;&#x5728;&#x5F88;&#x591A;&#x4EA7;&#x54C1;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x4E2D;&#x5F88;&#x5E38;&#x89C1;&#xFF0C;&#x6BD4;&#x5982;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x7EA0;&#x9519;&#x5019;&#x9009;&#x505A;&#x5BF9;10&#x4E2A;&#x5E26;&#x6765;&#x7684;&#x52A0;&#x5206;&#x4F53;&#x9A8C;&#xFF0C;&#x53EF;&#x80FD;&#x90FD;&#x4E0D;&#x53CA;&#x5C06;&#x4E00;&#x4E2A;&#x6B63;&#x786E;&#x5019;&#x9009;&#x7EA0;&#x6210;&#x9519;&#x8BEF;&#x7684;&#x5E26;&#x6765;&#x7684;&#x8D1F;&#x5206;&#x591A;&#x3002;&#x5728;&#x5224;&#x732B;&#x7684;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x539F;&#x672C;&#x7684;&#x6210;&#x672C;&#x6307;&#x6807;&#x662F;&#xFF1A; \(\frac{1}{m}\sum_{i=1}^{m}I\{y_{pred}^{(i)}&#x2260;y^{(i)}\}\) &#x9700;&#x8981;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x6743;&#x91CD;\(w^{(i)} = \begin{cases}1 &#x4E0E;&#x8272;&#x60C5;&#x56FE;&#x7247;&#x65E0;&#x5173;&#x7684;&#x8BEF;&#x5224;\\10&#x3000;&#x628A;&#x8272;&#x60C5;&#x56FE;&#x7247;&#x8BC6;&#x522B;&#x4E3A;&#x732B;\end{cases}\) &#x65B0;&#x7684;&#x6210;&#x672C;&#x6307;&#x6807;&#x4FEE;&#x6B63;&#x4E3A;\(\frac{1}{\sum{w^{(i)}}}\sum_{i=1}^{m}w^{(i)}&#xB7;I\{y_{pred}^{(i)}&#x2260;y^{(i)}\}\) &#x53E6;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x662F;&#x5BF9;&#x5E94;&#x7528;&#x573A;&#x666F;&#x7684;&#x6570;&#x636E;&#x8BC4;&#x4F30;&#x4E0D;&#x51C6;&#x786E;&#xFF0C;&#x5BFC;&#x81F4;&#x8BAD;&#x7EC3;&#x3001;&#x5F00;&#x53D1;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x4E0D;&#x80FD;&#x53CD;&#x6620;&#x5B9E;&#x9645;&#x7684;&#x5E94;&#x7528;&#x60C5;&#x51B5;&#x3002; &#x542C;&#x8D77;&#x6765;&#x8FD9;&#x4E24;&#x4E2A;&#x4F8B;&#x5B50;&#x90FD;&#x6BD4;&#x8F83;&#x5F31;&#xFF0C;&#x6211;&#x731C;&#x6D4B;&#x4E4B;&#x6240;&#x4EE5;&#x72EC;&#x7ACB;&#x4E00;&#x8282;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x56E0;&#x4E3A;&#x5DE5;&#x7A0B;&#x5E08;&#x6216;&#x8005;&#x7814;&#x7A76;&#x5458;&#x62FF;&#x5230;&#x6570;&#x636E;&#x540E;&#x5F80;&#x5F80;&#x4F1A;&#x4E00;&#x5934;&#x624E;&#x5230;&#x8BAD;&#x7EC3;&#x7684;&#x5DE5;&#x4F5C;&#x4E2D;&#x53BB;&#x4E86;&#xFF0C;&#x4EA4;&#x4F5C;&#x4E1A;&#x65F6;&#x624D;&#x53D1;&#x73B0;&#x6587;&#x4E0D;&#x5BF9;&#x9898;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x53EF;&#x80FD;&#x6BD4;&#x8F83;&#x5178;&#x578B;&#x3002;&#x4F20;&#x7EDF;&#x7684;&#x5F00;&#x53D1;&#x5F88;&#x5C11;&#x4F1A;&#x51FA;&#x73B0;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x56E0;&#x4E3A;&#x5F00;&#x53D1;&#x5468;&#x671F;&#x6CA1;&#x90A3;&#x4E48;&#x957F;&#xFF0C;&#x800C;&#x4E14;&#x7ECF;&#x5E38;&#x5F00;&#x53D1;&#x4E00;&#x534A;&#x5C31;&#x80FD;&#x6709;&#x53EF;&#x4F53;&#x9A8C;&#x7684;&#x4E2D;&#x95F4;&#x7248;&#x672C;&#x4F9B;&#x6F14;&#x793A;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x548C;&#x9700;&#x6C42;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x8BBA;&#x662F;&#x5DE5;&#x7A0B;&#x5E08;&#x8FD8;&#x662F;&#x4EA7;&#x54C1;&#x5F88;&#x5BB9;&#x6613;&#x5728;&#x65E9;&#x671F;&#x53D1;&#x73B0;&#x3002;&#x800C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x56E0;&#x4E3A;&#x5176;&#x8FC7;&#x7A0B;&#x7684;&#x62BD;&#x8C61;&#x6027;&#xFF0C;&#x4E14;&#x5468;&#x671F;&#x52A8;&#x8F84;&#x4EE5;&#x5468;&#x3001;&#x6708;&#x8BA1;&#xFF0C;&#x4E00;&#x65E6;&#x76EE;&#x6807;&#x8BBE;&#x5B9A;&#x51FA;&#x73B0;&#x504F;&#x5DEE;&#xFF0C;&#x5F80;&#x5F80;&#x53D1;&#x73B0;&#x6BD4;&#x8F83;&#x665A;&#xFF0C;&#x635F;&#x5931;&#x4F1A;&#x6BD4;&#x4F20;&#x7EDF;&#x7684;&#x5DE5;&#x7A0B;&#x65B9;&#x6CD5;&#x5927;&#x5F97;&#x591A;&#x3002; 1.8 &#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x4EBA;&#x7684;&#x8868;&#x73B0; &#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x8868;&#x73B0;&#x901A;&#x5E38;&#x5448;&#x73B0;&#x5982;&#x4E0B;&#x7684;&#x6001;&#x52BF;&#xFF1A;&#x8D77;&#x521D;&#x53D1;&#x5C55;&#x5F88;&#x5FEB;&#xFF0C;&#x53EF;&#x4EE5;&#x8FFD;&#x4E0A;&#x751A;&#x81F3;&#x8D85;&#x8D8A;&#x4EBA;&#xFF0C;&#x4E4B;&#x540E;&#x4FBF;&#x8FDB;&#x5165;&#x74F6;&#x9888;&#xFF0C;&#x800C;&#x4E14;&#x4EFB;&#x51ED;&#x65F6;&#x95F4;&#x63A8;&#x79FB;&#x7EE7;&#x7EED;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#xFF0C;&#x5C3D;&#x7BA1;&#x6A21;&#x578B;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x6570;&#x636E;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#xFF0C;&#x4F46;&#x6027;&#x80FD;&#x518D;&#x4E5F;&#x65E0;&#x6CD5;&#x8D85;&#x8D8A;&#x67D0;&#x4E2A;&#x7406;&#x8BBA;&#x4E0A;&#x9650;&#xFF0C;&#x8FD9;&#x6761;&#x7EBF;&#x5C31;&#x79F0;&#x4E3A;&#x8D1D;&#x53F6;&#x65AF;&#x6700;&#x4F18;&#x8BEF;&#x5DEE;&#x3002; &#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#x7EBF;&#x4E0D;&#x4F1A;&#x8FBE;&#x5230;100%&#xFF0C;&#x56E0;&#x4E3A;&#x6BD4;&#x5982;&#x8BED;&#x97F3;&#x8BC6;&#x522B;&#xFF0C;&#x80CC;&#x666F;&#x566A;&#x58F0;&#x5F88;&#x5927;&#x65F6;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x4E5F;&#x8FBE;&#x4E0D;&#x5230;&#x5B8C;&#x7F8E;&#x8BC6;&#x522B;&#xFF1B;&#x6BD4;&#x5982;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#xFF0C;&#x5982;&#x679C;&#x56FE;&#x7247;&#x7279;&#x522B;&#x6A21;&#x7CCA;&#xFF0C;&#x4E5F;&#x4F1A;&#x5BFC;&#x81F4;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#x3002; &#x800C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5728;&#x8D85;&#x8D8A;&#x4EBA;&#x7C7B;&#x4E4B;&#x540E;&#xFF0C;&#x5F80;&#x5F80;&#x8FDB;&#x5C55;&#x4E5F;&#x5C31;&#x6162;&#x4E86;&#x4E0B;&#x6765;&#xFF0C;&#x539F;&#x56E0;&#x6709;&#x4E8C;&#xFF1A; &#x5728;&#x6709;&#x4E9B;&#x9886;&#x57DF;&#xFF0C;&#x4EBA;&#x7C7B;&#x7684;&#x80FD;&#x529B;&#x5DF2;&#x7ECF;&#x63A5;&#x8FD1;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#xFF0C;&#x6BD4;&#x5982;&#x770B;&#x56FE;&#x542C;&#x58F0;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x8D85;&#x8D8A;&#x4EBA;&#x6765;&#x540E;&#x4E5F;&#x5C31;&#x8FBE;&#x5230;&#x4E86;&#x7406;&#x8BBA;&#x6781;&#x9650;&#x3002; &#x53EA;&#x8981;&#x8868;&#x73B0;&#x6BD4;&#x4EBA;&#x7C7B;&#x66F4;&#x5DEE;&#xFF0C;&#x5C31;&#x603B;&#x80FD;&#x627E;&#x5230;&#x4E00;&#x4E9B;&#x5DE5;&#x5177;&#x5E2E;&#x52A9;&#x63D0;&#x5347;&#x3002;&#x6BD4;&#x5982;&#x5582;&#x5165;&#x66F4;&#x591A;&#x6570;&#x636E;&#xFF0C;&#x6807;&#x6CE8;&#x66F4;&#x591A;&#x6570;&#x636E;&#xFF0C;&#x6216;&#x4EBA;&#x5DE5;&#x8BEF;&#x5DEE;&#x5206;&#x6790;&#x67E5;&#x627E;&#x539F;&#x56E0;&#xFF0C;&#x5982;&#x5206;&#x6790;&#x504F;&#x5DEE;/&#x65B9;&#x5DEE;&#x4EE5;&#x9488;&#x5BF9;&#x6027;&#x89E3;&#x51B3;&#x3002;&#x800C;&#x4E00;&#x65E6;&#x8868;&#x73B0;&#x8D85;&#x8D8A;&#x4E86;&#x4EBA;&#x7C7B;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x4E5F;&#x5C31;&#x5931;&#x6548;&#x4E86;&#x3002; &#x6211;&#x5BF9;&#x7B2C;2&#x70B9;&#x524D;&#x534A;&#x6BB5;&#x6709;&#x8D28;&#x7591;&#xFF1A;&#x8D85;&#x8D8A;&#x4EBA;&#x7C7B;&#x7684;&#x80FD;&#x529B;&#x540E;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x5582;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x548C;&#x662F;&#x5426;&#x662F;&#x5426;&#x8D85;&#x8D8A;&#x4EBA;&#x7C7B;&#x65E0;&#x5173;&#x3002;&#x5173;&#x4E8E;&#x540E;&#x534A;&#x6BB5;&#x7684;&#x66F4;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#x5728;&#x4E0B;&#x4E00;&#x8282;&#x6709;&#x4ECB;&#x7ECD;&#x3002; 1.9 &#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE; &#x5728;&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x7684;&#x53EF;&#x6539;&#x8FDB;&#x7A7A;&#x95F4;&#x65F6;&#xFF0C;&#x5E94;&#x7ED3;&#x5408;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#x6765;&#x770B;&#x5F85;&#x8BAD;&#x7EC3;&#x96C6;&#x8BEF;&#x5DEE;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x8BEF;&#x5DEE;&#x3002;&#x4E0B;&#x56FE;&#x4E2D;&#x76F8;&#x540C;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x8BEF;&#x5DEE;&#x548C;&#x5F00;&#x53D1;&#x96C6;&#x8BEF;&#x5DEE;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#x7684;&#x80CC;&#x666F;&#x4E0B;&#xFF0C;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#x4F1A;&#x4E0D;&#x540C;&#x3002; &#x6B64;&#x5904;&#x628A;&#x4EBA;&#x7C7B;&#x8BEF;&#x5DEE;&#x6C34;&#x5E73;&#x7B49;&#x6548;&#x4E8E;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#xFF0C;&#x628A;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#x548C;&#x8BAD;&#x7EC3;&#x8BEF;&#x5DEE;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x79F0;&#x4E3A;&#x53EF;&#x907F;&#x514D;&#x8BEF;&#x5DEE;&#x3002;&#x8BAD;&#x7EC3;&#x8BEF;&#x5DEE;&#x548C;&#x5F00;&#x53D1;&#x8BEF;&#x5DEE;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5219;&#x8BF4;&#x660E;&#x5728;&#x65B9;&#x5DEE;&#x95EE;&#x9898;&#x4E0A;&#x8FD8;&#x6709;&#x591A;&#x5927;&#x7684;&#x6539;&#x5584;&#x7A7A;&#x95F4;&#x3002; &#x524D;&#x8005;&#x7684;&#x53EF;&#x907F;&#x514D;&#x8BEF;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x5E94;&#x8BE5;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#x8BAD;&#x7EC3;&#x504F;&#x5DEE;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x6269;&#x5927;&#x7F51;&#x7EDC;&#x89C4;&#x6A21;&#x6216;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#x3002;&#x540E;&#x8005;&#x53EF;&#x80FD;&#x56E0;&#x4E3A;&#x566A;&#x58F0;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x4EBA;&#x7C7B;&#x6C34;&#x5E73;&#x7684;&#x8BEF;&#x5DEE;&#x5C31;&#x5F88;&#x9AD8;&#xFF0C;&#x53EF;&#x907F;&#x514D;&#x8BEF;&#x5DEE;&#x5F88;&#x5C0F;&#xFF0C;&#x56E0;&#x6B64;&#x5E94;&#x8BE5;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#x5F00;&#x53D1;&#x96C6;&#x65B9;&#x5DEE;&#x8FC7;&#x9AD8;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5E94;&#x91C7;&#x7528;&#x6B63;&#x5219;&#x5316;&#x6216;&#x589E;&#x5927;&#x8BAD;&#x7EC3;&#x96C6;&#x4EE5;&#x7F13;&#x89E3;&#x5BF9;&#x8BAD;&#x7EC3;&#x96C6;&#x7684;&#x8FC7;&#x62DF;&#x5408;&#x3002; 1.10&#x7406;&#x89E3;&#x4EBA;&#x7684;&#x8868;&#x73B0; &#x9996;&#x5148;&#x5E94;&#x8BE5;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x7684;&#x76EE;&#x6807;&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#x3002;&#x6BD4;&#x5982;&#x5B66;&#x672F;&#x7814;&#x7A76;&#xFF0C;&#x8981;&#x505A;&#x51FA;&#x8D85;&#x8D8A;&#x6240;&#x6709;&#x4EBA;&#x7C7B;&#x7684;&#x8BCA;&#x65AD;&#x7CFB;&#x7EDF;&#xFF0C;&#x5E94;&#x8BE5;&#x5C06;&#x8D44;&#x6DF1;&#x533B;&#x751F;&#x56E2;&#x961F;&#x4F5C;&#x4E3A;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#xFF1B;&#x5982;&#x679C;&#x8981;&#x5B9E;&#x73B0;&#x4EA7;&#x54C1;&#x5316;&#xFF0C;&#x505A;&#x51FA;&#x4F18;&#x4E8E;&#x666E;&#x901A;&#x533B;&#x751F;&#x7684;&#x53EF;&#x7528;&#x7CFB;&#x7EDF;&#xFF0C;&#x5219;&#x5E94;&#x5C06;&#x4E00;&#x822C;&#x533B;&#x751F;&#x7684;&#x6C34;&#x5E73;&#x4F5C;&#x4E3A;&#x8D1D;&#x53F6;&#x65AF;&#x8BEF;&#x5DEE;&#x3002; &#x8BE5;&#x76EE;&#x6807;&#x4F1A;&#x76F4;&#x63A5;&#x51B3;&#x5B9A;&#x6A21;&#x578B;&#x7684;&#x4F18;&#x5316;&#x65B9;&#x5411;&#x3002;&#x7B2C;&#x4E00;&#x7EC4;&#x5E94;&#x5F53;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE;&#x8F83;&#x5927;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7B2C;&#x4E8C;&#x7EC4;&#x5219;&#x5E94;&#x4F18;&#x5148;&#x89E3;&#x51B3;&#x8BAD;&#x7EC3;&#x96C6;&#x65B9;&#x5DEE;&#x8F83;&#x5927;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7B2C;&#x4E09;&#x7EC4;&#x662F;&#x6700;&#x96BE;&#x6743;&#x8861;&#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x8D8A;&#x63A5;&#x8FD1;&#x4EBA;&#x7C7B;&#x8D8A;&#x96BE;&#x4EE5;&#x63D0;&#x5347;&#x7684;&#x4E00;&#x4E2A;&#x8868;&#x73B0;&#xFF0C;&#x4ECE;&#x7EDD;&#x5BF9;&#x503C;&#x5F97;&#x5BF9;&#x6BD4;&#x5173;&#x7CFB;&#x6765;&#x770B;&#xFF0C;&#x8FD8;&#x662F;&#x5E94;&#x5F53;&#x5148;&#x89E3;&#x51B3;&#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x76F8;&#x5DEE;&#x4E0D;&#x5927;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x504F;&#x5DEE;&#x81EA;&#x8EAB;&#x7684;&#x8BEF;&#x5DEE;&#x6D6E;&#x52A8;&#x4E5F;&#x8BB8;&#x5DF2;&#x7ECF;&#x5927;&#x4E8E;&#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE;&#x672C;&#x8EAB;&#x4E86;&#x3002; 1.11 &#x8D85;&#x8FC7;&#x4EBA;&#x7684;&#x8868;&#x73B0; &#x672C;&#x8282;&#x7C97;&#x7565;&#x5730;&#x89E3;&#x91CA;&#x4E86;&#x5F53;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x8D85;&#x8D8A;&#x4EBA;&#x7684;&#x8868;&#x73B0;&#x4E4B;&#x540E;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x7EE7;&#x7EED;&#x63D0;&#x5347;&#x6BD4;&#x8F83;&#x56F0;&#x96BE;&#x3002; &#x7B2C;&#x4E00;&#x7EC4;&#x7684;&#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE;0.1%&#xFF0C;&#x65B9;&#x5DEE;0.2%&#xFF0C;&#x5F88;&#x660E;&#x663E;&#x5E94;&#x5148;&#x89E3;&#x51B3;&#x65B9;&#x5DEE;&#x7684;&#x95EE;&#x9898;&#x3002;&#x800C;&#x7B2C;&#x4E8C;&#x7EC4;&#x8BAD;&#x7EC3;&#x96C6;&#x8BEF;&#x5DEE;&#x5DF2;&#x8D85;&#x8D8A;&#x4EBA;&#x7C7B;&#xFF0C;&#x4F60;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x51FA;&#x73B0;&#x4E86;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x5373;&#x4F7F;&#x6CA1;&#x6709;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8D1D;&#x53F6;&#x65AF;&#x504F;&#x5DEE;&#x7EBF;&#x5728;&#x54EA;&#x91CC;&#xFF0C;&#x5DF2;&#x7ECF;&#x6CA1;&#x6709;&#x5224;&#x65AD;&#x4F9D;&#x636E;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x5148;&#x89E3;&#x51B3;&#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE;&#x8FD8;&#x662F;&#x65B9;&#x5DEE;&#x4E5F;&#x5C31;&#x5931;&#x53BB;&#x4E86;&#x5224;&#x65AD;&#x4F9D;&#x636E;&#x3002;&#x4F18;&#x5316;&#x5931;&#x53BB;&#x65B9;&#x5411;&#xFF0C;&#x8FD9;&#x662F;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x5347;&#x7684;&#x96BE;&#x70B9;&#x3002; &#x4E0D;&#x8FC7;&#x5728;&#x5F88;&#x591A;&#x65B9;&#x9762;&#xFF0C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5DF2;&#x7ECF;&#x8D85;&#x8D8A;&#x4E86;&#x4EBA;&#x7C7B;&#xFF0C;&#x5982;&#xFF1A;&#x5728;&#x7EBF;&#x5E7F;&#x544A;&#x3001;&#x76F8;&#x5173;&#x4EA7;&#x54C1;&#x63A8;&#x8350;&#x3001;&#x7269;&#x6D41;&#x9884;&#x6D4B;&#x3001;&#x8D37;&#x6B3E;&#x98CE;&#x63A7;&#x7B49;&#x3002;&#x4EBA;&#x7C7B;&#x64C5;&#x957F;&#x66F4;&#x76F4;&#x89C2;&#x7684;&#x81EA;&#x7136;&#x611F;&#x77E5;&#xFF0C;&#x5982;&#x8BC6;&#x56FE;&#x3001;&#x542C;&#x58F0;&#x3002;&#x4E0D;&#x8FC7;&#x5373;&#x4F7F;&#x5728;&#x8FD9;&#x4E9B;&#x9886;&#x57DF;&#xFF0C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E5F;&#x6B63;&#x5728;&#x8D85;&#x8D8A;&#x4EBA;&#x7C7B;&#x3002; 1.12 &#x6539;&#x5584;&#x4F60;&#x7684;&#x6A21;&#x578B;&#x8868;&#x73B0; &#x672C;&#x8282;&#x662F;&#x5BF9;&#x4EE5;&#x4E0A;&#x5185;&#x5BB9;&#x7684;&#x603B;&#x7ED3;&#xFF0C;&#x5B8C;&#x6210;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x7684;&#x4E24;&#x4E2A;&#x57FA;&#x672C;&#x8981;&#x70B9;&#xFF1A; 1. &#x8BA9;&#x6A21;&#x578B;&#x5F88;&#x597D;&#x5730;&#x62DF;&#x5408;&#x8BAD;&#x7EC3;&#x96C6;&#x8FBE;&#x5230;&#x4F4E;&#x504F;&#x5DEE; 2. &#x8BA9;&#x6A21;&#x578B;&#x5F88;&#x597D;&#x5730;&#x62DF;&#x5408;&#x5F00;&#x53D1;&#x96C6;&#x8FBE;&#x5230;&#x4F4E;&#x65B9;&#x5DEE; &#x5728;&#x6B63;&#x4EA4;&#x5316;&#x7684;&#x601D;&#x60F3;&#x4E0B;&#x5206;&#x522B;&#x8FBE;&#x6210;&#x4E24;&#x4E2A;&#x76EE;&#x6807;&#x3002;&#x5728;&#x91CF;&#x5316;&#x6548;&#x679C;&#x65F6;&#x62C9;&#x51FA;&#x4E09;&#x6761;&#x7EBF;&#xFF1A; &#x5982;&#x679C;&#x53EF;&#x907F;&#x514D;&#x504F;&#x5DEE;&#x8FC7;&#x5927;&#x5219;&#x5E94;&#x4F7F;&#x7528;&#x89C4;&#x6A21;&#x66F4;&#x5927;&#x7684;&#x6A21;&#x578B;&#x6216;&#x66F4;&#x6362;&#x66F4;&#x4F18;&#x5316;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x6BD4;&#x5982;&#x52A0;&#x5165;momentum&#x6216;RMSprop&#x6216;Adam&#x6216;&#x5BFB;&#x627E;&#x66F4;&#x597D;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x67B6;&#x6784;&#x6216;&#x4F18;&#x5316;&#x66F4;&#x597D;&#x7684;&#x8D85;&#x53C2;&#x6570;&#x3002; &#x5982;&#x679C;&#x65B9;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x5219;&#x5E94;&#x4E3A;&#x8BAD;&#x7EC3;&#x96C6;&#x6536;&#x96C6;&#x66F4;&#x591A;&#x7684;&#x6570;&#x636E;&#x6216;&#x4F7F;&#x7528;&#x6B63;&#x5219;&#x5316;&#x5305;&#x62EC;L2&#x6B63;&#x5219;&#x5316;&#x3001;Dropout&#x6B63;&#x5219;&#x5316;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x67B6;&#x6784;&#x3001;&#x8D85;&#x53C2;&#x6570;&#x641C;&#x7D22;&#x7B49;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（六）]]></title>
    <url>%2F2018%2F03%2F29%2F2018%2F0329DeepLearningAI07%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x6539;&#x5584;&#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF1A;&#x8D85;&#x53C2;&#x6570;&#x8C03;&#x8BD5;&#x3001;&#x6B63;&#x5219;&#x5316;&#x4EE5;&#x53CA;&#x4F18;&#x5316;&#x300B;&#x7B2C;&#x4E09;&#x5468;&#x300A;&#x8D85;&#x53C2;&#x6570;&#x8C03;&#x8BD5;&#x3001;Batch&#x6B63;&#x5219;&#x5316;&#x548C;&#x7A0B;&#x5E8F;&#x6846;&#x67B6;&#x300B;&#x3002; &#x672C;&#x8282;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7834;&#x8327;&#x6210;&#x8776;&#x7684;&#x4E00;&#x8282;&#x8BFE;&#x3002;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x4E00;&#x76F4;&#x8BB2;&#x89E3;&#x7406;&#x8BBA;&#xFF0C;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;&#x642D;&#x5EFA;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x3001;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x3001;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x4EE5;&#x53CA;&#x5404;&#x4E2A;&#x73AF;&#x8282;&#x7684;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#x3002;&#x73B0;&#x5B9E;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x57FA;&#x4E8E;&#x6210;&#x719F;&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5E93;&#xFF0C;&#x901A;&#x5E38;&#x53EA;&#x9700;&#x51E0;&#x884C;&#x8C03;&#x7528;&#x5C31;&#x80FD;&#x5B8C;&#x6210;&#x8FD9;&#x4E9B;&#x5DE5;&#x4F5C;&#x3002;&#x672C;&#x8282;&#x7EC8;&#x4E8E;&#x5F00;&#x59CB;&#x4ECB;&#x7ECD;TensorFlow&#xFF0C;&#x7136;&#x800C;&#x5728;&#x4F7F;&#x7528;&#x9AD8;&#x7EA7;&#x73A9;&#x610F;&#x513F;&#x4E4B;&#x524D;&#xFF0C;&#x8FD8;&#x5F97;&#x518D;&#x5B66;&#x4E60;&#x4E00;&#x5468;&#x7684;&#x8D85;&#x53C2;&#x6570;&#x8C03;&#x8BD5;&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x628A;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x65B9;&#x6CD5;&#x6269;&#x5C55;&#x5230;&#x591A;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x4E0A;&#x6765;&#x3002; 3.1 &#x8C03;&#x8BD5;&#x5904;&#x7406; &#x5230;&#x76EE;&#x524D;&#x63A5;&#x89E6;&#x8FC7;&#x7684;&#x8D85;&#x53C2;&#x6570;&#x6709;&#xFF1A;&#x5B66;&#x4E60;&#x7387;&#x3B1;&#x3001;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x53C2;&#x6570;&#x3B2;&#x3001;\(&#x3B2;_1&#x3001;&#x3B2;_2&#x3001;&#x3B5;\)&#x3001;&#x5C42;&#x6570;#layers&#x3001;&#x5404;&#x9690;&#x85CF;&#x5C42;&#x8282;&#x70B9;&#x6570;#hidden units&#x3001;&#x5B66;&#x4E60;&#x8870;&#x51CF;&#x7387;learning rate decay&#x3001;&#x6BCF;&#x4E2A;Mini-Batch&#x5B50;&#x96C6;&#x89C4;&#x6A21;Mini-Batch size&#x3002;&#x6309;&#x7167;&#x91CD;&#x8981;&#x7A0B;&#x5EA6;&#xFF08;&#x7ECF;&#x5E38;&#x8C03;&#x8BD5;&#x7684;&#x9891;&#x7387;&#xFF09;&#xFF0C;&#x5C06;&#x5B83;&#x4EEC;&#x6392;&#x5E8F;&#x5982;&#x4E0B;&#xFF1A; &#x3B1; &#x3B2;&#x3001;#hidden units&#x548C;Mini-Batch #layers&#x3001;learning rate decay &#x51E0;&#x4E4E;&#x4ECE;&#x6765;&#x4E0D;&#x4F1A;&#x8C03;&#x8BD5;\(&#x3B2;_1&#x3001;&#x3B2;_2&#x3001;&#x3B5;\) &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x4E24;&#x4E2A;&#x9009;&#x53D6;&#x8D85;&#x60E8;&#x7684;&#x539F;&#x5219;&#xFF1A; 1. &#x968F;&#x673A;&#x9009;&#x53D6;&#x3002;&#x5047;&#x8BBE;&#x7CFB;&#x7EDF;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x8D85;&#x53C2;&#xFF0C;&#x4E8B;&#x5148;&#x4E0D;&#x77E5;&#x9053;&#x54EA;&#x4E2A;&#x8D85;&#x53C2;&#x66F4;&#x91CD;&#x8981;&#x65F6;&#xFF0C;&#x5E94;&#x5F53;&#x968F;&#x673A;&#x9009;&#x53D6;&#xFF0C;&#x91C7;&#x7528;&#x65B9;&#x6848;&#x4E8C;&#x3002;&#x56E0;&#x4E3A;&#x540C;&#x6837;&#x7684;&#x70B9;&#x6570;&#xFF0C;&#x5047;&#x5982;&#x8D85;&#x53C2;2&#x5BF9;&#x7CFB;&#x7EDF;&#x7684;&#x5F71;&#x54CD;&#x5FAE;&#x4E0D;&#x8DB3;&#x9053;&#xFF0C;&#x90A3;&#x4E48;&#x65B9;&#x6848;&#x4E00;&#x76F8;&#x5F53;&#x4E8E;&#x53EA;&#x9009;&#x4E86;5&#x4E2A;&#x70B9;&#xFF0C;&#x800C;&#x65B9;&#x6848;&#x4E8C;&#x5219;&#x662F;&#x6240;&#x6709;&#x70B9;&#x5728;&#x7EB5;&#x8F74;&#x4E0A;&#x7684;&#x6295;&#x5F71;&#x4E2A;&#x6570;&#xFF0C;&#x663E;&#x7136;&#x591A;&#x4E8E;&#x65B9;&#x6848;&#x4E00;&#xFF0C;&#x800C;&#x5B83;&#x4EEC;&#x7684;&#x8FD0;&#x7B97;&#x6210;&#x672C;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002; 2. &#x7C97;&#x8C03;-&#x5FAE;&#x8C03;&#x3002;&#x8FD9;&#x4E00;&#x6761;&#x5F88;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x67D0;&#x4E2A;&#x533A;&#x57DF;&#x8BAD;&#x7EC3;&#x6548;&#x679C;&#x6BD4;&#x8F83;&#x597D;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5E94;&#x8BE5;&#x5728;&#x8FD9;&#x4E00;&#x533A;&#x57DF;&#x66F4;&#x5BC6;&#x96C6;&#x5730;&#x5C1D;&#x8BD5;&#x8D85;&#x53C2;&#x3002; &#x539F;&#x7406;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x96BE;&#x70B9;&#x5728;&#x4E8E;&#x6570;&#x636E;&#x7684;&#x53EF;&#x89C6;&#x5316;&#xFF0C;&#x5C24;&#x5176;&#x6709;&#x66F4;&#x591A;&#x8D85;&#x53C2;&#x9700;&#x8981;&#x8C03;&#x8BD5;&#xFF0C;&#x5728;&#x591A;&#x7EF4;&#x6570;&#x636E;&#x4E0A;&#xFF0C;&#x600E;&#x4E48;&#x4F53;&#x73B0;&#x51FA;&#x53D6;&#x503C;&#x548C;&#x7ED3;&#x679C;&#x7684;&#x89C4;&#x5F8B;&#x6027;&#x662F;&#x6709;&#x96BE;&#x5EA6;&#x7684;&#x3002; 3.2 &#x4E3A;&#x8D85;&#x53C2;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x8303;&#x56F4; &#x6709;&#x7684;&#x8D85;&#x53C2;&#x6BD4;&#x5982;&#x6BCF;&#x5C42;&#x8282;&#x70B9;&#x4E2A;&#x6570;&#x6216;&#x5C42;&#x6570;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x4E0D;&#x8DE8;&#x8D8A;&#x91CF;&#x7EA7;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x8303;&#x56F4;&#x5185;&#x7EBF;&#x6027;&#x5747;&#x5300;&#x53D6;&#x70B9;&#x3002;&#x800C;&#x53E6;&#x4E00;&#x7C7B;&#x8D85;&#x53C2;&#xFF0C;&#x5982;&#x5B66;&#x4E60;&#x7387;&#x3B1;&#x6216;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x7684;&#x3B2;&#xFF0C;&#x8DE8;&#x8D8A;&#x91CF;&#x7EA7;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5219;&#x5E94;&#x5148;&#x9009;&#x62E9;&#x91CF;&#x7EA7;&#x8303;&#x56F4;&#xFF0C;&#x518D;&#x5728;&#x6BCF;&#x4E2A;&#x8303;&#x56F4;&#x5185;&#x5747;&#x5300;&#x53D6;&#x70B9;&#x3002; &#x5982;&#x3B1;&#x7684;&#x8303;&#x56F4;&#x5728;0.0001~0.1&#x4E4B;&#x95F4;&#xFF0C;&#x9996;&#x5148;&#x5212;&#x5206;&#x91CF;&#x7EA7;&#x8303;&#x56F4;&#xFF1A; &#x518D;&#x5728;&#x6BCF;&#x4E2A;&#x8303;&#x56F4;&#x5185;&#x53D6;&#x70B9;&#xFF1A; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x5373;&#x5728;&#x6307;&#x6570;&#x7EA7;&#x4E0A;&#x9009;&#x53D6;&#x968F;&#x673A;&#x6570;&#xFF1A; 123456n = 4np.random.seed()r = -1 * n * np.random.rand(n)alpha = 10 ** rfor i in range(n): logging.info(&apos;%.5f&apos; % alpha[i]) &#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x7684;&#x8D85;&#x53C2;&#x3B2;&#x4E5F;&#x7C7B;&#x4F3C;&#xFF0C;&#x5B83;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x5728;0.9~0.999&#xFF0C;&#x5B83;&#x8868;&#x8FBE;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5411;&#x524D;&#x8FFD;&#x6EAF;\(\frac{1}{1-&#x3B2;}\)&#x4E2A;&#x6837;&#x672C;&#x7684;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x56E0;&#x6B64;&#x5176;&#x5B9E;&#x5E94;&#x5F53;&#x5148;&#x8003;&#x8651;\(\frac{1}{1-&#x3B2;}\)&#x6216;1-&#x3B2;&#x7684;&#x91CF;&#x7EA7;&#x8303;&#x56F4;&#xFF0C;&#x518D;&#x8BA1;&#x7B97;&#x3B2;&#xFF1A; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789np.random.seed()r = 1 + 2 * np.random.rand(4)logging.info(&apos;1-&#x3B2;&#xFF1A;&apos;)for i in range(4): logging.info(&apos;%.5f&apos; % (10 ** (-r[i])))beta = 1 - 10 **(-r)logging.info(&apos;&#x3B2;&#xFF1A;&apos;)for i in range(4): logging.info(&apos;%.5f&apos; % beta[i]) &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 121-&#x3B2;&#xFF1A; 0.00219 0.02956 0.01752 0.00592&#x3B2;&#xFF1A; 0.99781 0.97044 0.98248 0.99408 &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x5BF9;&#x4E8E;&#x91CF;&#x7EA7;&#x8DE8;&#x8D8A;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x8D85;&#x53C2;&#xFF0C;&#x6709;&#x5FC5;&#x8981;&#x5148;&#x7406;&#x89E3;&#x8D85;&#x53C2;&#x80CC;&#x540E;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x518D;&#x786E;&#x5B9A;&#x5B83;&#x7684;&#x9009;&#x53D6;&#x7B56;&#x7565;&#x3002; 3.3 &#x8D85;&#x53C2;&#x8BAD;&#x7EC3;&#x7684;&#x5B9E;&#x8DF5;&#xFF1A;Pandas VS Caviar &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x4E24;&#x79CD;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x7684;&#x6D41;&#x6D3E;&#xFF1A;&#x718A;&#x732B;&#x548C;&#x9C7C;&#x3002;&#x524D;&#x8005;&#x4E0D;&#x65AD;&#x6253;&#x78E8;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x4E0D;&#x65AD;&#x7CBE;&#x8FDB;&#xFF1B;&#x540E;&#x8005;&#x540C;&#x65F6;&#x8BAD;&#x7EC3;&#x591A;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x4F18;&#x80DC;&#x7565;&#x6C70;&#x3002; &#x6211;&#x7684;&#x7406;&#x89E3;&#x662F;&#xFF1A;&#x6A21;&#x578B;&#x7684;&#x672C;&#x8D28;&#x5C31;&#x662F;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x8D85;&#x53C2;&#x6570;&#x4E4B;&#x4E0B;&#x8FED;&#x4EE3;&#x51FA;&#x7684;&#x53C2;&#x6570;&#x5E8F;&#x5217;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x4F5C;&#x8005;&#x5728;&#x4ECB;&#x7ECD;&#x718A;&#x732B;&#x6D3E;&#x65F6;&#x4E5F;&#x63D0;&#x5230;&#x5728;&#x7CBE;&#x8FDB;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x4FEE;&#x6539;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E0D;&#x5C31;&#x6210;&#x8BAD;&#x7EC3;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#x4E86;&#x5417;&#xFF1F; &#x6211;&#x60F3;&#x5230;&#x7684;&#x7B54;&#x6848;&#x662F;&#xFF1A;&#x5DEE;&#x5F02;&#x5728;&#x4E8E;&#x662F;&#x5426;&#x5E76;&#x884C;&#x3002;&#x524D;&#x8005;&#x4E5F;&#x5E76;&#x975E;&#x59CB;&#x7EC8;&#x90FD;&#x5728;&#x8BAD;&#x7EC3;&#x540C;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x793A;&#x610F;&#x56FE;&#x4E0A;&#xFF0C;&#x9B54;&#x6027;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5E76;&#x4E0D;&#x662F;&#x5B8C;&#x5168;&#x8FDE;&#x7EED;&#x7684;&#x3002;&#x718A;&#x732B;&#x6D3E;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x540C;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x53EA;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x9C7C;&#x6D3E;&#x5219;&#x662F;&#x540C;&#x65F6;&#x5E76;&#x884C;&#x591A;&#x4E2A;&#x6A21;&#x578B;&#x3002;&#x663E;&#x7136;&#xFF0C;&#x53EA;&#x8981;&#x8BA1;&#x7B97;&#x8D44;&#x6E90;&#x8DB3;&#x591F;&#xFF0C;&#x80AF;&#x5B9A;&#x9009;&#x540E;&#x8005;&#x3002;&#x6211;&#x7406;&#x89E3;&#x8FD9;&#x5176;&#x5B9E;&#x4E0D;&#x662F;&#x6D41;&#x6D3E;&#x95EE;&#x9898;&#xFF0C;&#x5730;&#x4E3B;&#x8001;&#x8D22;&#x6709;&#x94B1;&#x5F53;&#x7136;&#x591A;&#x529E;&#x4E8B;&#x54AF;~ 3.4 &#x6B63;&#x5219;&#x5316;&#x7F51;&#x7EDC;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570; &#x524D;&#x9762;&#x7AE0;&#x8282;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;&#x6B63;&#x5219;&#x5316;&#x8F93;&#x5165;&#x5C42;&#x6709;&#x5229;&#x4E8E;&#x5C06;&#x539F;&#x672C;&#x72ED;&#x957F;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7B49;&#x9AD8;&#x7EBF;&#x56FE;&#x62C9;&#x4F38;&#x6210;&#x5404;&#x65B9;&#x5411;&#x5747;&#x5300;&#x7684;&#x7B49;&#x9AD8;&#x7EBF;&#x56FE;&#xFF0C;&#x5B83;&#x7684;&#x672C;&#x8D28;&#x5176;&#x5B9E;&#x7B49;&#x6548;&#x4E8E;&#x201C;&#x907F;&#x514D;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6BCF;&#x4E00;&#x6B65;&#x7684;&#x65B9;&#x5411;&#x53D8;&#x5316;&#x7387;&#x5939;&#x89D2;&#x592A;&#x5927;&#x201D;&#x3002;&#x65E2;&#x7136;&#x5728;&#x8F93;&#x5165;&#x5C42;&#x6709;&#x6548;&#xFF0C;&#x60F3;&#x5FC5;&#x5728;&#x9690;&#x85CF;&#x5C42;&#x5E94;&#x8BE5;&#x4E5F;&#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;&#x9690;&#x85CF;&#x5C42;&#x4E5F;&#x662F;&#x4E0B;&#x4E00;&#x5C42;&#x7684;&#x8F93;&#x5165;&#x5C42;&#x3002;&#x6240;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x901A;&#x5E38;&#x5BF9;&#x9690;&#x85CF;&#x5C42;&#x7684;z&#x800C;&#x975E;a&#x505A;&#x6B63;&#x5219;&#x5316;&#x3002; &#x5BF9;&#x4E8E;&#x67D0;&#x4E2A;&#x6307;&#x5B9A;&#x7684;&#x9690;&#x85CF;&#x5C42;&#xFF0C;&#x5176;z&#x8282;&#x70B9;&#x5206;&#x522B;&#x4E3A;\(z^{[1](1)}, z^{[1](2)}, z^{[1](3)}, ..., z^{[1](m)}\)&#xFF0C;&#x7B80;&#x5199;&#x4E3A;\(z^{(1)}, z^{(2)}, z^{(3)}, ..., z^{(m)}\) \(&#x3BC;=\frac{1}{m}\sum_{i=1}^{m}z^{(i)}\\ &#x3B4;^2=\frac{1}{m}\sum_{i=1}^{m}(z^{(i)}-&#x3BC;)^2\\ z_{norm}^{(i)}=\frac{z^{(i)}-&#x3BC;}{\sqrt{&#x3B4;^2+&#x3B5;}}&#x3000;&#x3000;&#x589E;&#x52A0;&#x3B5;&#x662F;&#x9632;&#x6B62;&#x5206;&#x6BCD;&#x4E3A;0\\ \tilde{z}^{(i)} = &#x3B3;&#xB7;z_{norm}^{(i)}+&#x3B2;\) &#x6709;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E0D;&#x5E0C;&#x671B;&#x6B63;&#x5219;&#x5316;&#x540E;&#x7684;z&#x5747;&#x503C;&#x4E3A;0&#xFF0C;&#x65B9;&#x5DEE;&#x4E3A;1&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x52A0;&#x5165;&#x4E24;&#x4E2A;&#x8D85;&#x53C2;&#x6570;&#x3B3;&#x548C;&#x3B2;&#x6765;&#x63A7;&#x5236;&#x6B63;&#x5219;&#x5316;&#x540E;&#x7684;&#x5747;&#x503C;&#x548C;&#x65B9;&#x5DEE;&#x3002; &#x5F53;\(&#x3B3;=\sqrt{&#x3B4;^2+&#x3B5;}&#xFF0C; &#x3B2;=&#x3BC;\)&#x65F6;&#xFF0C;\(\tilde{z}^{(i)}\)&#x5C31;&#x9000;&#x5316;&#x6210;&#x4E86;\(z^{(i)}\)&#x3002; 3.5 &#x5C06;Batch Norm&#x62DF;&#x5408;&#x8FDB;&#x795E;&#x7ECF;&#x7F51;&#x7EDC; &#x4E0B;&#x9762;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#x5F88;&#x6E05;&#x6670;&#x5730;&#x63CF;&#x8FF0;&#x4E86;&#x5F15;&#x5165;Batch Norm&#x540E;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7B97;&#x6CD5;&#xFF1A; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;\(z^{[l]}=w{[l]}&#xB7;&#x3B1;^{[l-1]}+b^{[l]}\) &#x7531;\(z^{[l]} \;&#x2192;\; z_{norm}^{[l]}\)&#x65F6;&#x9700;&#x8981;&#x51CF;&#x53BB;&#x5747;&#x503C;&#x3BC;&#xFF0C;&#x56E0;&#x6B64;\(b^{[l]}\)&#x4F1A;&#x5931;&#x6548;&#xFF0C; &#x7531;\(z_{norm}^{[l]} \;&#x2192;\; \tilde{z}^{[l]}\)&#x65F6;&#xFF0C;&#x901A;&#x8FC7;\(&#x3B2;^{[l]}\)&#x4F53;&#x73B0;&#x51FA;&#x504F;&#x79FB;&#xFF1A;\(\tilde{z}^{[l]}=&#x3B3;^{[l]}&#xB7;z_{norm}^{[l]}+&#x3B2;^{[l]}\) &#x56E0;&#x6B64;&#xFF0C;&#x5F15;&#x5165;Batch Norm&#x65B9;&#x6CD5;&#x540E;&#xFF0C;&#x6BCF;&#x4E00;&#x5C42;&#x7684;b&#x53C2;&#x6570;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x4E86;&#x3002; 3.6 Batch Norm&#x4E3A;&#x4EC0;&#x4E48;&#x594F;&#x6548;&#xFF1F; &#x9664;&#x4E86;&#x524D;&#x9762;&#x8BB2;&#x5230;&#x7684;&#x6B63;&#x5219;&#x5316;&#x53EF;&#x4EE5;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7B49;&#x9AD8;&#x7EBF;&#x56FE;&#x66F4;&#x5747;&#x5300;&#xFF0C;Batch Norm&#x8FD8;&#x6709;&#x66F4;&#x6DF1;&#x5C42;&#x7684;&#x4F5C;&#x7528;&#x2014;&#x2014;&#x5B83;&#x53EF;&#x4EE5;&#x8BA9;&#x7F51;&#x7EDC;&#x4E2D;&#x6BCF;&#x4E00;&#x5C42;&#x6709;&#x66F4;&#x5F3A;&#x7684;&#x9002;&#x5E94;&#x6027;&#x3002;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x672C;&#x8D28;&#x662F;&#x7ECF;&#x8FC7;&#x8BAD;&#x7EC3;&#x5F97;&#x51FA;&#x7684;&#x6BCF;&#x4E00;&#x5C42;W&#x3001;b&#x53C2;&#x6570;: &#x5982;&#x679C;&#x6837;&#x672C;&#x7684;&#x53C2;&#x6570;&#x4E0D;&#x591F;&#x5747;&#x5300;&#xFF0C;&#x6709;&#x8F83;&#x5927;&#x7684;&#x65B9;&#x5DEE;&#xFF0C;&#x5B83;&#x4EEC;&#x4F1A;&#x4F20;&#x5BFC;&#x5F71;&#x54CD;&#x5230;&#x540E;&#x9762;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4F7F;&#x5F97;&#x7F51;&#x7EDC;&#x53D7;&#x566A;&#x58F0;&#x6570;&#x636E;&#x5F71;&#x54CD;&#x5C31;&#x6BD4;&#x8F83;&#x5927;&#x3002;&#x81F3;&#x4E8E;&#x8BFE;&#x4EF6;&#x4E2D;&#x8BB2;&#x7684;&#x7528;&#x9ED1;&#x732B;&#x8BAD;&#x7EC3;&#x7684;&#x6A21;&#x578B;&#x662F;&#x5426;&#x80FD;&#x8BC6;&#x522B;&#x9EC4;&#x732B;&#xFF0C;&#x6211;&#x8868;&#x793A;&#x6000;&#x7591;&#x3002;&#x4E0D;&#x592A;&#x7B26;&#x5408;&#x76F4;&#x89C9;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x662F;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x4EE5;&#x53CA;&#x7531;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x6240;&#x4F20;&#x5BFC;&#x751F;&#x6210;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x53C2;&#x6570;&#x505A;&#x4E86;&#x5F52;&#x4E00;&#x5316;&#x3002;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x6216;&#x88AB;&#x9884;&#x6D4B;&#x6570;&#x636E;&#x662F;&#x4E0D;&#x53EF;&#x80FD;&#x53C2;&#x4E0E;&#x5F52;&#x4E00;&#x5316;&#x7684;&#x3002; &#x6211;&#x6709;&#x4E00;&#x79CD;&#x57FA;&#x4E8E;&#x76F4;&#x89C9;&#x7684;&#x731C;&#x6D4B;&#xFF1A;&#x5F52;&#x4E00;&#x5316;&#x53EF;&#x80FD;&#x4EE4;&#x989C;&#x8272;&#x8FD9;&#x4E2A;&#x7EF4;&#x5EA6;&#x7684;&#x6570;&#x636E;&#x53D8;&#x5F97;&#x4E0D;&#x90A3;&#x4E48;&#x91CD;&#x8981;&#x4E86;&#xFF0C;&#x800C;&#x653E;&#x5927;&#x4E86;&#x5F62;&#x6001;&#x3001;&#x8D28;&#x611F; whatever&#x2026;&#x2026;&#x7B49;&#x7EF4;&#x5EA6;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x7F51;&#x7EDC;&#x7684;&#x9002;&#x5E94;&#x6027;&#x589E;&#x5F3A;&#x3002;&#x53EF;&#x662F;&#x7591;&#x95EE;&#x8FD8;&#x662F;&#x6709;&#x7684;&#xFF1A;&#x653E;&#x5927;&#x4EC0;&#x4E48;&#x7279;&#x5F81;&#x3001;&#x6291;&#x5236;&#x4EC0;&#x4E48;&#x7279;&#x5F81;&#xFF0C;&#x53C8;&#x600E;&#x4E48;&#x901A;&#x8FC7;&#x5982;&#x6B64;&#x62BD;&#x8C61;&#x7684;&#x6570;&#x636E;&#x6765;&#x628A;&#x63A7;&#x5462;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x53D7;&#x6291;&#x5236;&#x7684;&#x4E0D;&#x662F;&#x5176;&#x5B83;&#x7279;&#x5F81;&#x800C;&#x662F;&#x989C;&#x8272;&#x5462;&#xFF1F; 3.7 &#x6D4B;&#x8BD5;&#x662F;&#x7684;Batch Norm 3.8 Softmax&#x56DE;&#x5F52; &#x5728;&#x4EE5;&#x5F80;&#x7684;&#x7AE0;&#x8282;&#x4E2D;&#xFF0C;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x4EC5;&#x88AB;&#x6807;&#x6CE8;&#x4E3A;&#x4E24;&#x7C7B;&#x7ED3;&#x679C;&#xFF0C;&#x5982;&#x732B;&#x6216;&#x975E;&#x732B;&#x3002;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x5E38;&#x5E38;&#x8981;&#x8BC6;&#x522B;&#x66F4;&#x591A;&#x7684;&#x5206;&#x91CF;&#xFF0C;&#x5982;&#x732B;&#x3001;&#x72D7;&#x3001;&#x9E21;&#x7B49;&#x7B49;&#x3002;Softmax&#x6B63;&#x662F;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x6B64;&#x7C7B;&#x95EE;&#x9898;&#x3002; &#x548C;&#x89E3;&#x51B3;&#x4E8C;&#x5206;&#x95EE;&#x9898;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x5DEE;&#x5F02;&#x4EC5;&#x5728;&#x4E8E;Softmax&#x5728;&#x8F93;&#x51FA;&#x5C42;&#x6709;&#x591A;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x800C;&#x975E;1&#x4E2A;&#xFF1A; &#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x8868;&#x793A;&#x4ED6;&#x5BF9;&#x5E94;&#x5206;&#x7C7B;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x56E0;&#x6B64;&#x8BE5;&#x5C42;&#x8282;&#x70B9;&#x7684;&#x548C;&#x5E94;&#x4E3A;1&#x3002;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x5728;&#x8F93;&#x51FA;&#x5C42;&#x7684;&#x8BA1;&#x7B97;&#x4E0A;&#x9700;&#x505A;&#x4E00;&#x4E9B;&#x989D;&#x5916;&#x5904;&#x7406;&#xFF1A; \(z^{[L]}=w{[L]}&#xB7;a^{[L-1]}+b^{[L]}\) &#x5F15;&#x5165;&#x4E34;&#x65F6;&#x53D8;&#x91CF;\(t_i=e^{z_i^{[L]}}\)&#xFF0C;&#x4EE4;\(a^{[L]}=\frac{e^{z^{[L]}}}{\sum_{j=1}^{n^{[L]}}t_i}\) &#x5047;&#x8BBE;&#x8F93;&#x51FA;&#x5C42;&#x6709;4&#x4E2A;&#x8282;&#x70B9;&#xFF1A;\(z^{[4]}=\begin{bmatrix}5\\2\\{-1}\\3\end{bmatrix}\)&#xFF0C;&#x4E8E;&#x662F;\(t=\begin{bmatrix}e^5\\e^2\\e^{-1}\\e^3\end{bmatrix}=\begin{bmatrix}148.4\\7.4\\0.4\\20.1\end{bmatrix}\) \(\sum_{j=1}^4t_i=148.4+7.4+0.4+20.1=176.3\)&#xFF0C;&#x4E8E;&#x662F;\(a^{[L]}=\begin{bmatrix}148.4/176.3\\7.4/176.3\\0.4/176.3\\20.1/176.3\end{bmatrix}=\begin{bmatrix}0.842\\0.042\\0.002\\0.114\end{bmatrix}\) 3.9 &#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;Softmax&#x5206;&#x7C7B;&#x5668; Softmax&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x547D;&#x4E2D;&#x4E2A;&#x5206;&#x7C7B;&#x7684;&#x6982;&#x7387;\(&#x177;=\begin{bmatrix}0.842\\0.042\\0.002\\0.114\end{bmatrix}\)&#xFF0C;&#x800C;&#x6837;&#x672C;&#x6807;&#x6CE8;&#x7684;&#x662F;&#x786E;&#x5B9A;&#x7684;&#x6807;&#x7B7E;\(y=\begin{bmatrix}0\\1\\0\\0\end{bmatrix}\)&#x3002;&#x4E8C;&#x8005;&#x8C8C;&#x4F3C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x91CF;&#x7EB2;&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x600E;&#x4E48;&#x8BA1;&#x7B97;&#x5462;&#xFF1F; &#x548C;&#x4E8C;&#x5206;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7565;&#x6709;&#x4E0D;&#x540C;&#xFF0C;&#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A;\(L(&#x177;, y)=-\sum_{j=1}^{n^{[L]}}y_j\log{&#x177;_j}\)&#x3002; &#x5728;&#x4E0A;&#x4F8B;&#x4E2D;&#xFF0C;y&#x901A;&#x8FC7;0&#x8FC7;&#x6EE4;&#x6389;&#x975E;&#x76EE;&#x6807;&#x7684;&#x9009;&#x9879;&#xFF0C;&#x8981;&#x8BA9;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5C3D;&#x91CF;&#x5C0F;&#xFF0C;&#x5219;&#x5E94;&#x177;&#x5C3D;&#x91CF;&#x5927;&#x3002; &#x6545;&#x6210;&#x672C;&#x51FD;&#x6570;&#x4E3A;&#xFF1A;\(J(W^{[1]}, b^{[1]}, ...)=\frac{1}{m}\sum_{i=1}^{m}L(&#x177;^{\(i\)}, y^{\(i\)})\) &gt; &#x4F46;&#x5728;&#x540E;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x4E2D;&#xFF0C;&#x8BFE;&#x4EF6;&#x7ED9;&#x51FA;\(dz^{[L]}=&#x177;-y\)&#x8FD9;&#x662F;&#x600E;&#x4E48;&#x5F97;&#x51FA;&#x6765;&#x7684;&#x5462;&#xFF1F; &#x4F5C;&#x4E1A; &#x6267;&#x884C;Tensorflow&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4; &#x521B;&#x5EFA;Tensors&#x53D8;&#x91CF; &#x521B;&#x5EFA;&#x57FA;&#x4E8E;&#x8FD9;&#x4E9B;&#x53D8;&#x91CF;&#x7684;&#x64CD;&#x4F5C; &#x521D;&#x59CB;&#x5316;Tensors &#x521B;&#x5EFA;&#x4E00;&#x4E2A;Session &#x8FD0;&#x884C;Session &#x6765;&#x770B;&#x7B2C;&#x4E00;&#x4E2A;&#x4F8B;&#x7A0B;&#xFF1A; 12345678y_hat = tf.constant(36, name=&apos;y_hat&apos;) # &#x5B9A;&#x4E49;&#x5E38;&#x91CF; &#x177;=36y = tf.constant(39, name=&apos;y&apos;) # &#x5B9A;&#x4E49;&#x5E38;&#x91CF; y=39loss = tf.Variable((y - y_hat)**2, name=&apos;loss&apos;) # &#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;L=(y-&#x177;)^2init = tf.global_variables_initializer() # &#x521D;&#x59CB;&#x5316;Tensors&#xFF0C;&#x6B64;&#x65F6;&#x8FD8;&#x6CA1;&#x6709;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x4EFB;&#x4F55;&#x8FD0;&#x7B97;with tf.Session() as session: # &#x521B;&#x5EFA;Session session.run(init) # &#x521D;&#x59CB;&#x5316;&#x53D8;&#x91CF; print(session.run(loss)) # &#x8FD0;&#x884C;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x6253;&#x5370; &#x51FD;&#x6570;&#x3001;&#x503C;&#x90FD;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E3A;&#x53D8;&#x91CF;&#xFF0C;&#x672C;&#x4F8B;&#x5B50;&#x4E2D;&#x5C31;&#x628A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x4E3A;&#x53D8;&#x91CF;&#x3002; placeholder &#x611F;&#x89C9;placeholder&#x6709;&#x70B9;&#x683C;&#x5F0F;&#x5316;&#x8F93;&#x51FA;&#x7684;&#x610F;&#x601D;&#xFF1A; 1234x = tf.placeholder(tf.int64, name=&apos;x&apos;) # &#x5B9A;&#x4E49;&#x5360;&#x4F4D;&#x7B26;init = tf.global_variables_initializer()with tf.Session() as session: logging.info(session.run(2*x, feed_dict={x:3})) # &#x7528;&#x7684;&#x65F6;&#x5019;&#x518D;&#x8D4B;&#x503C; &#x901A;&#x8FC7;&#x5B57;&#x5178;feed_dict&#x6765;&#x5B9A;&#x4E49;&#x5B9E;&#x9645;&#x503C;&#x3002; &#x5728;sigmoid&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x4E2D;&#xFF0C;&#x6211;&#x4F7F;&#x7528;placeholder&#x548C;Variable&#x521B;&#x5EFA;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#x7B49;&#x6548;&#x7684;&#xFF1A; 123456789101112131415def sigmoid_placeholder(self, z): x = tf.placeholder(tf.float32, name=&quot;x&quot;) sigmoid = tf.sigmoid_placeholder(x) with tf.Session() as sess: result = sess.run(sigmoid, feed_dict={x:z}) return resultdef sigmoid_variable(self, z): x = tf.Variable(float(z), tf.float32) with tf.Session() as sess: sess.run(tf.global_variables_initializer()) result = sess.run(tf.sigmoid(x)) return result &#x6210;&#x672C;&#x51FD;&#x6570; tensorflow&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;&#x6BD4;&#x8F83;&#x6210;&#x719F;&#x7684;&#x5E93;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x4EE5;sigmoid&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF1A; 12345def cost(self, logits, labels): # &#x6839;&#x636E;&#x6700;&#x540E;&#x4E00;&#x5C42;z&#xFF08;&#x53C2;&#x6570;logits&#xFF09;&#x548C;y&#xFF08;&#x53C2;&#x6570;labels&#xFF09;&#x8BA1;&#x7B97;&#x4EE5;sigmoid&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x503C; ... cost = tf.nn.sigmoid_cross_entropy_with_logits(logits = z, labels = y) ... &#x638C;&#x63E1;tensorflow&#x5173;&#x952E;&#x5C31;&#x662F;&#x719F;&#x6089;&#x8FD9;&#x4E9B;&#x6210;&#x719F;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x3002;&#x5F53;&#x7136;&#x8FD8;&#x6709;&#x4E2A;&#x524D;&#x63D0;&#x662F;&#x6DF1;&#x523B;&#x7406;&#x89E3;&#x80CC;&#x540E;&#x7684;&#x539F;&#x7406;&#xFF0C;&#x5426;&#x5219;&#x53EA;&#x77E5;&#x9053;api&#x600E;&#x4E48;&#x8C03;&#x7528;&#x6CA1;&#x6709;&#x610F;&#x4E49;&#x3002; &#x95EE;&#x9898; &#x81EA;&#x5DF1;&#x5199;&#x7684;&#x7B2C;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x5C31;&#x672A;&#x83B7;&#x901A;&#x8FC7;&#xFF1A; 1234567def tc5(self): x = tf.Variable(3, dtype=tf.float32) f = tf.Variable(x**2, name=&apos;function&apos;) init = tf.global_variables_initializer() with tf.Session() as session: session.run(init) # &#x95EE;&#x9898;&#x51FA;&#x5728;&#x8FD9;&#x91CC;&#xFF01;&#xFF01;&#xFF01; logging.info(session.run(train)) &#x63D0;&#x793A;&#x8BF4;&#x662F;&#x4F7F;&#x7528;&#x4E86;&#x672A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5148;&#x5199;&#x5728;&#x8FD9;&#x5907;&#x5FD8;&#xFF0C;&#x5F85;&#x67E5;&#x5230;&#x539F;&#x56E0;&#x518D;&#x6765;&#x89E3;&#x7B54;&#x3002; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding2_3&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（五）]]></title>
    <url>%2F2018%2F03%2F28%2F2018%2F0328DeepLearningAI06%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x6539;&#x5584;&#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF1A;&#x8D85;&#x53C2;&#x6570;&#x8C03;&#x8BD5;&#x3001;&#x6B63;&#x5219;&#x5316;&#x4EE5;&#x53CA;&#x4F18;&#x5316;&#x300B;&#x7B2C;&#x4E8C;&#x5468;&#x300A;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#x300B;&#x3002; &#x672C;&#x8282;&#x4E3B;&#x8981;&#x4ECE;&#x6A21;&#x578B;&#x7684;&#x8BAD;&#x7EC3;&#x65B9;&#x6CD5;&#x4E0A;&#x7ED9;&#x51FA;&#x4E00;&#x4E9B;&#x53EF;&#x4F18;&#x5316;&#x7684;&#x70B9;&#xFF0C;&#x5305;&#x62EC;&#x53EF;&#x4EE5;&#x5C06;&#x6570;&#x636E;&#x5206;&#x800C;&#x6CBB;&#x4E4B;&#x7684;Mini-Batch&#x3001;&#x9632;&#x6B62;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x65B9;&#x5411;&#x53D8;&#x5316;&#x7387;&#x8FC7;&#x5927;&#x7684;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x4EE5;&#x53CA;RMSprop&#x548C;Adam&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#x3002; 2.1 Mini-Batch&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x5F53;&#x6837;&#x672C;&#x91CF;&#x5DE8;&#x5927;&#x65F6;&#xFF0C;&#x6709;&#x5FC5;&#x8981;&#x5C06;&#x6D77;&#x91CF;&#x6837;&#x672C;&#x62C6;&#x5206;&#x6210;&#x66F4;&#x5C0F;&#x7684;&#x5B50;&#x96C6;&#x3002;&#x56E0;&#x4E3A;&#x6D77;&#x91CF;&#x6837;&#x672C;&#x7684;&#x5411;&#x91CF;&#x5316;&#x4F1A;&#x6536;&#x5230;&#x5185;&#x5B58;&#x9650;&#x5236;&#xFF0C;&#x62C6;&#x5206;&#x8BA9;&#x5206;&#x5E03;&#x5F0F;&#x5E76;&#x884C;&#x6210;&#x4E3A;&#x53EF;&#x80FD;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x6709;5,000,000&#x6837;&#x672C;&#x65F6;&#xFF0C;&#x53EF;&#x4EE4;1000&#x4E2A;&#x6837;&#x672C;&#x4E3A;&#x4E00;&#x7EC4;&#xFF0C;&#x62C6;&#x5206;&#x6210;5000&#x4E2A;&#x5B50;&#x96C6;&#xFF1A; \[X = [\underbrace{x^{(1)} \; x^{(2)} \; ... \; x^{(1000)}} _{x^{\{1\}}\;\in\mathbb{R}^{n_x\;&#xD7;1000}} \; | \; \underbrace{x^{(1001)} \; x^{(1002)} \; ... } _{x^{\{2\}}\;\in\mathbb{R}^{n_x\;&#xD7;1000}} \; | \;...\;| \; \underbrace{ \; ...\; x^{(m)}} _{x^{\{5000\}}\;\;\in\mathbb{R}^{n_x\;&#xD7;1000}} \; ]\] \[Y = [\underbrace{y^{(1)} \; y^{(2)} \; ... \; y^{(1000)}} _{y^{\{1\}}\;\in\mathbb{R}^{n_x\;&#xD7;1000}} \; | \; \underbrace{y^{(1001)} \; y^{(1002)} \; ... } _{y^{\{2\}}\;\in\mathbb{R}^{n_x\;&#xD7;1000}} \; | \;...\;| \; \underbrace{ \; ...\; y^{(m)}} _{y^{\{5000\}}\;\;\in\mathbb{R}^{n_x\;&#xD7;1000}} \; ]\] &#x4F7F;&#x7528;&#x7B26;&#x53F7;\(x^{\{t\}}\;y^{\{t\}}\)&#x6765;&#x8868;&#x793A;&#x7B2C;t&#x4E2A;&#x6837;&#x672C;&#x5B50;&#x96C6;&#x3002; &#x76EE;&#x524D;&#x63A5;&#x89E6;&#x8FC7;&#x4E09;&#x79CD;&#x4E0A;&#x89D2;&#x6807;&#xFF1A; \(x^{(i)}&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;\\z^{[l]}&#x8868;&#x793A;&#x7B2C;l&#x5C42;&#x8282;&#x70B9;\\x^{\{t\}}&#x8868;&#x793A;&#x7B2C;t&#x4E2A;&#x6837;&#x672C;&#x5B50;&#x96C6;\) &#x4E8E;&#x662F;Mini-Batch&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; 123456789101112131415161718192021222324252627def model(self, X, Y, layers_dims, optimizer, learning_rate = 0.0007, mini_batch_size = 64, beta = 0.9, beta1 = 0.9, beta2 = 0.999, epsilon = 1e-8, num_epochs = 10000, print_cost = True): ... # &#x6784;&#x9020;&#x5404;&#x5C42;W&#x3001;b&#x7684;&#x9ED8;&#x8BA4;&#x503C; parameters = self.initialize_parameters(layers_dims) # &#x5FAA;&#x73AF;&#x4EE3;&#x6B21; for i in range(num_epochs): ... # &#x6D17;&#x724C;&#x3001;&#x5206;mini-batch&#x5B50;&#x96C6; minibatches = self.random_mini_batches(X, Y, mini_batch_size, seed) for minibatch in minibatches: # &#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x5B50;&#x96C6; # &#x83B7;&#x53D6;&#x5B50;&#x96C6;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E; (minibatch_X, minibatch_Y) = minibatch # &#x6267;&#x884C;&#x524D;&#x5411;&#x7B97;&#x6CD5; a3, caches = self.forward_propagation(minibatch_X, parameters) # &#x8BA1;&#x7B97;&#x6210;&#x672C; cost = self.compute_cost(a3, minibatch_Y) # &#x6267;&#x884C;&#x540E;&#x5411;&#x7B97;&#x6CD5; grads = self.backward_propagation(minibatch_X, minibatch_Y, caches) # &#x66F4;&#x65B0;&#x53C2;&#x6570; self.update_parameters_with_gd(parameters, grads, learning_rate) ... 2.2 &#x7406;&#x89E3;Mini-Batch&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x5206;&#x5272;&#x5C0F;&#x6279;&#x91CF;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x53EB;Batch&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#xFF0C;&#x548C;Mini-Batch&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x76F8;&#x6BD4;&#xFF0C;&#x4E8C;&#x8005;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x66F2;&#x7EBF;&#x4E0D;&#x540C;&#xFF1A; &#x7ED3;&#x5408;&#x4E0A;&#x4E00;&#x8282;&#x4EE3;&#x7801;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x8F6E;Mini-Batch&#x6267;&#x884C;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x66F4;&#x65B0;&#x751F;&#x6210;&#x7684;&#x53C2;&#x6570;W&#x3001;b&#x88AB;&#x5E94;&#x7528;&#x5230;&#x4E0B;&#x4E00;&#x8F6E;Mini-Batch&#xFF0C;&#x4E24;&#x8F6E;&#x5176;&#x5B9E;&#x662F;&#x57FA;&#x4E8E;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x751F;&#x6210;&#x7684;&#x795E;&#x7ECF;&#x5B50;&#x7F51;&#x3002;&#x5982;&#x679C;&#x6BCF;&#x4E2A;Mini-Batch&#x5B50;&#x96C6;&#x7684;&#x6570;&#x636E;&#x662F;&#x72EC;&#x7ACB;&#x540C;&#x5206;&#x5E03;&#x7684;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x53C2;&#x6570;&#x5728;&#x5404;&#x4E2A;&#x5B50;&#x96C6;&#x4E0A;&#x7684;&#x8D8B;&#x52BF;&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x7EC8;&#x7A76;&#x4F1A;&#x6709;&#x504F;&#x5DEE;&#xFF0C;&#x8FD9;&#x5C31;&#x5BFC;&#x81F4;&#x4E86;&#x4E0D;&#x53EF;&#x80FD;&#x5E73;&#x6ED1;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E00;&#x4EE3;&#x8BAD;&#x7EC3;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4F1A;&#x91CD;&#x65B0;&#x6D17;&#x724C;&#x6253;&#x4E71;&#x6837;&#x672C;&#x6B21;&#x5E8F;&#xFF0C;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x65B0;&#x7684;Mini-Batch&#x5B50;&#x96C6;&#x3002; &#x89C2;&#x5BDF;Mini-Batch&#x6BCF;&#x4E2A;&#x5B50;&#x96C6;&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x5F53;&#x5728;&#x6781;&#x7AEF;&#x60C5;&#x51B5;&#x4E0B; Size=m&#xFF0C;Mini-Batch&#x9000;&#x5316;&#x4E3A;batch&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x5B83;&#x4F1A;&#x6CBF;&#x7740;&#x7B49;&#x9AD8;&#x7EBF;&#x5207;&#x7EBF;&#x65B9;&#x5411;&#x76F4;&#x5954;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x6837;&#x672C;&#x91CF;&#x6781;&#x5927;&#x65F6;&#xFF0C;&#x673A;&#x5668;&#x4F1A;&#x627F;&#x62C5;&#x4E0D;&#x4E86;&#x6D77;&#x91CF;&#x6837;&#x672C;&#x5411;&#x91CF;&#x5316;&#x7684;&#x5185;&#x5B58;&#x5F00;&#x9500;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x8BA1;&#x7B97;&#x6027;&#x80FD;&#x4E0B;&#x964D;&#x3002; Size=1&#xFF0C;Mini-Batch&#x9000;&#x5316;&#x4E3A;m&#x4E2A;&#x5355;&#x6837;&#x672C;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x53C8;&#x79F0;&#x968F;&#x673A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF08;Stochastic gradient descent&#xFF09;&#x3002;&#x5B83;&#x5BFC;&#x81F4;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x5411;&#x66F4;&#x52A0;&#x66F2;&#x6298;&#xFF0C;&#x867D;&#x7136;&#x603B;&#x4F53;&#x4F1A;&#x50CF;&#x6700;&#x4F4E;&#x70B9;&#x6F14;&#x8FDB;&#xFF0C;&#x4F46;&#x4E2D;&#x95F4;&#x4F1A;&#x8D70;&#x5F88;&#x591A;&#x51A4;&#x6789;&#x8DEF;&#xFF0C;&#x8FD9;&#x4F1A;&#x589E;&#x52A0;&#x8BAD;&#x7EC3;&#x7684;&#x8F6E;&#x6570;&#xFF0C;&#x964D;&#x4F4E;&#x5B66;&#x4E60;&#x6027;&#x80FD;&#x3002; &#x56E0;&#x6B64;&#x5E94;&#x5F53;&#x5728;1&#x548C;m&#x4E4B;&#x95F4;&#x53D6;&#x4E00;&#x4E2A;&#x5408;&#x7406;&#x7684;&#x503C;&#xFF0C;&#x65E2;&#x80FD;&#x6709;&#x6548;&#x5229;&#x7528;&#x673A;&#x5668;&#x7684;&#x8BA1;&#x7B97;&#x8D44;&#x6E90;&#xFF0C;&#x53C8;&#x4E0D;&#x8BA9;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x8DEF;&#x5F84;&#x8FC7;&#x4E8E;&#x66F2;&#x6298;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x84DD;&#x8272;&#x662F;size=m&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x8DEF;&#x5F84;&#xFF0C;&#x7D2B;&#x8272;&#x662F;size=1&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x8DEF;&#x5F84;&#xFF0C;&#x7EFF;&#x8272;&#x7684;size&#x4ECB;&#x4E8E;&#x4E8C;&#x8005;&#x4E4B;&#x95F4;&#xFF1A; &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;Mini-Batch&#x7684;size&#x53D6;&#x503C;&#x5728;64&#xFF0C; 128&#xFF0C; 256&#xFF0C; 512&#x4E2D;&#x9009;&#x53D6;&#x3002; &gt; &#x672C;&#x8282;&#x8BA8;&#x8BBA;&#x7684;&#x662F;size&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x53CA;&#x5F71;&#x54CD;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x6D89;&#x53CA;&#x5BF9;Mini-Batch&#x7684;&#x7406;&#x89E3;&#x3002; 2.3 &#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747; &#x672C;&#x8282;&#x5F15;&#x5165;&#x7684;&#x65B9;&#x6CD5;&#x8C8C;&#x4F3C;&#x548C;&#x524D;&#x6587;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF0C;&#x5176;&#x5B9E;&#x5728;&#x540E;&#x9762;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x5B83;&#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5F53;&#x6570;&#x636E;&#x524D;&#x540E;&#x4E4B;&#x95F4;&#x6709;&#x8FDE;&#x7EED;&#x6027;&#x7684;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x65F6;&#xFF0C;&#x4EE4;&#x6BCF;&#x6761;&#x6570;&#x636E;&#x5728;&#x57FA;&#x4E8E;&#x524D;&#x5E8F;&#x82E5;&#x5E72;&#x6570;&#x636E;&#x7684;&#x52A0;&#x6743;&#x503C;&#x57FA;&#x7840;&#x4E0A;&#x518D;&#x52A0;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x3002;&#x672C;&#x8282;&#x4E3E;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x7ED9;&#x5B9A;&#x4E00;&#x5E74;&#x7684;&#x6C14;&#x6E29;&#x6837;&#x672C;&#xFF0C;&#x9884;&#x6D4B;&#x67D0;&#x4E00;&#x5929;&#x7684;&#x6E29;&#x5EA6;&#xFF0C;&#x4EE4;&#x6837;&#x672C;&#x503C;&#x4E3A;&#xFF1A;\(&#x3B8;_1 \,&#x3B8;_1 \,&#x3B8;_1 \,...\,&#x3B8;_{365}\) &#xFF0C;&#x5EFA;&#x7ACB;&#x9884;&#x6D4B;&#x6A21;&#x578B;&#xFF1A; \(v_0=0\) \(v_1=&#x3B2;&#xB7;v_0+(1-&#x3B2;)&#xB7;&#x3B8;_1\) \(v_2=&#x3B2;&#xB7;v_1+(1-&#x3B2;)&#xB7;&#x3B8;_2\) ... \(v_t=&#x3B2;&#xB7;v_{t-1}+(1-&#x3B2;)&#xB7;&#x3B8;_t\) &#x8BE5;&#x6A21;&#x578B;&#x53EF;&#x4EE5;&#x8FD1;&#x4F3C;&#x7684;&#x7406;&#x89E3;&#x4E3A;&#xFF1A;&#x5B83;&#x53D6;&#x4E86;\(\frac{1}{1-&#x3B2;}\)&#x4E2A;&#x524D;&#x5E8F;&#x6837;&#x672C;&#x7684;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x503C;&#x3002; &#x5F53;&#x3B2;=0.9&#xFF0C;&#x5373;10&#x4E2A;&#x524D;&#x5E8F;&#x6837;&#x672C;&#x7684;&#x52A0;&#x6743;&#x5E73;&#x5747;&#xFF1B; &#x5F53;&#x3B2;=0.98&#xFF0C;&#x5373;50&#x4E2A;&#x524D;&#x5E8F;&#x6837;&#x672C;&#x7684;&#x52A0;&#x6743;&#x5E73;&#x5747;&#xFF1B; &#x5F53;&#x3B2;=0.5&#xFF0C;&#x5373;2&#x4E2A;&#x524D;&#x5E8F;&#x6837;&#x672C;&#x7684;&#x52A0;&#x6743;&#x5E73;&#x5747;&#xFF1B; &#x8FD9;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x8FD1;&#x4F3C;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x6570;&#x5B66;&#x8BC1;&#x660E;&#x3002; 2.4 &#x7406;&#x89E3;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747; &#x5F53;&#x3B2;=0.9&#xFF1A; \(v_{100}=0.1&#x3B8;_{100} + 0.9v_{99}\\ = 0.1&#x3B8;_{100} + 0.9(0.1&#x3B8;_{99} + 0.9v_{98})\\ = 0.1&#x3B8;_{100} + 0.1&#xD7;0.9&#x3B8;_{99} + 0.9^2(0.1&#x3B8;_{98} + 0.9v_{97})\\ = 0.1&#x3B8;_{100} + 0.1&#xD7;0.9&#x3B8;_{99} + 0.1&#xD7;0.9^2&#x3B8;_{98} + 0.9^3(0.1&#x3B8;_{97} + 0.9 v_{97})\\ =...\) &#x6211;&#x7406;&#x89E3;&#x8FD9;&#x4E2A;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x6838;&#x5FC3;&#x662F;&#x56E0;&#x4E3A;&#x7CFB;&#x6570;0.1&#xFF0C;&#x5B83;&#x8868;&#x8FBE;&#x7684;&#x542B;&#x4E49;&#x662F;&#x53D6;&#x6700;&#x8FD1;\(\frac{1}{1-&#x3B2;}\)&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x6743;&#x91CD;&#x662F;(1-&#x3B2;)&#xFF0C;&#x4E14;&#x968F;&#x7740;&#x6837;&#x672C;&#x8D8A;&#x8FDC;&#xFF0C;&#x6309;&#x7167;&#x3B2;&#x7684;&#x6307;&#x6570;&#x7EA7;&#x9012;&#x51CF;&#xFF0C;&#x8FD9;&#x5E94;&#x8BE5;&#x662F;&#x201C;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x201D;&#x7684;&#x542B;&#x4E49;&#x3002; &#x6587;&#x4E2D;&#x6307;&#x51FA;\(0.9^{10}&#x2248;0.35&#x2248;\frac{1}{e}\)&#xFF0C;&#x6211;&#x6CA1;&#x660E;&#x767D;&#x4ED6;&#x7684;&#x7528;&#x610F;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x6211;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x5E94;&#x8BE5;&#x662F;&#x60F3;&#x8BF4;&#x8FC7;&#x4E86;&#x8FD9;&#x4E2A;&#x503C;\(\frac{1}{e}\)&#x4EE5;&#x540E;&#xFF0C;&#x5176;&#x6743;&#x91CD;&#x53EF;&#x5FFD;&#x7565;&#x4E0D;&#x8BA1;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; e&#x662F;&#x81EA;&#x7136;&#x5BF9;&#x6570;&#x7684;&#x5E95;&#x6570;&#xFF0C;\(e=\mathop{lim}\limits_{n&#x2192;&#x221E;}{1+\frac{1}{n}}^n&#x2248;2.71828\)&#xFF0C;&#x5728;&#x79D1;&#x5B66;&#x8BA1;&#x7B97;&#x4E2D;&#x901A;&#x5E38;&#x4E0D;&#x4F7F;&#x7528;&#x4EE5;10&#x4E3A;&#x5E95;&#x7684;&#x5BF9;&#x6570;&#x3002;&#x4F7F;&#x7528;&#x4EE5;e&#x4E3A;&#x5E95;&#xFF0C;&#x80FD;&#x8BA9;&#x8BB8;&#x591A;&#x7B97;&#x5F0F;&#x5F97;&#x5230;&#x7B80;&#x5316;&#xFF0C;&#x7528;&#x5B83;&#x6700;&#x201C;&#x81EA;&#x7136;&#x201D;&#xFF0C;&#x56E0;&#x6B64;&#x79F0;&#x4E3A;&#x81EA;&#x7136;&#x5BF9;&#x6570;&#x3002;btw:\(\frac{1}{e}&#x2248;0.367879\) &#x5B9E;&#x73B0;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x7684;&#x7B97;&#x6CD5;&#xFF1A; \(v_&#x3B8;=0 \\ Repeat \{\\ &#x3000;get&#x3000;next&#x3000;&#x3B8;_t\\ &#x3000;v_&#x3B8;:=&#x3B2;&#xB7;v_&#x3B8;+(1-&#x3B2;)&#xB7;&#x3B8;_t\\ \}\) 2.5 &#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x7684;&#x504F;&#x5DEE;&#x4FEE;&#x6B63; &#x4E0A;&#x4E00;&#x8282;&#x7684;&#x5B9E;&#x73B0;&#x7B97;&#x6CD5;&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x9677;&#xFF1A;&#x5728;&#x7B97;&#x6CD5;&#x521D;&#x671F;&#xFF0C;&#x7531;&#x4E8E;&#x521D;&#x503C;&#x88AB;&#x7F6E;&#x4E3A;0&#xFF0C;&#x4E14;&#x6CA1;&#x6709;&#x66F4;&#x591A;&#x7684;&#x524D;&#x5E8F;&#x6570;&#x636E;&#x62FF;&#x8FDB;&#x6765;&#x505A;&#x52A0;&#x6743;&#x5E73;&#x5747;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x521D;&#x503C;&#x504F;&#x5C0F;&#x3002;&#x7B49;&#x5230;\(\frac{1}{1-&#x3B2;}\)&#x4E2A;&#x524D;&#x5E8F;&#x6837;&#x672C;&#x90FD;&#x52A0;&#x5165;&#x8FDB;&#x6765;&#x624D;&#x56DE;&#x5F52;&#x6B63;&#x5E38;&#x3002;&#x672C;&#x8282;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x4FEE;&#x6B63;&#x7CFB;&#x6570;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; \(v_t=\frac{&#x3B2;&#xB7;v_{t-1} \;+\; (1-&#x3B2;)&#xB7;&#x3B8;_t}{1-&#x3B2;^t}\) &#x5728;&#x521D;&#x671F;t&#x5F88;&#x5C0F;&#xFF0C;\(&#x3B2;^t&#x2192;1\)&#xFF0C;&#x5206;&#x6BCD;&#x653E;&#x5927;&#x4E86;&#x7ED3;&#x679C;&#xFF1B;t&#x8D8A;&#x5927;&#xFF0C;\(&#x3B2;^t&#x2192;0\)&#xFF0C;&#x5206;&#x6BCD;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x8D8A;&#x5C0F;&#x3002;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4FEE;&#x6B63;&#x4E86;&#x521D;&#x671F;&#x6570;&#x636E;&#x3002; 2.6 &#x52A8;&#x91CF;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x672C;&#x8282;&#x662F;&#x5BF9;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x5927;&#x81F4;&#x601D;&#x60F3;&#x662F;&#xFF1A;w:=w-&#x3B1;&#xB7;dw&#xFF0C;dw&#x51B3;&#x5B9A;&#x4E86;&#x4E0B;&#x4E00;&#x6B65;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x51CF;&#x7F13;&#x6BCF;&#x4E00;&#x6B65;dw&#x7684;&#x53D8;&#x5316;&#x7387;&#xFF0C;&#x6709;&#x5229;&#x4E8E;&#x62B5;&#x6D88;&#x6298;&#x8FD4;&#x7684;&#x89D2;&#x5EA6;&#xFF0C;&#x63D0;&#x5347;&#x5B66;&#x4E60;&#x7684;&#x6548;&#x7387;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x76F4;&#x89C2;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#x628A;&#x539F;&#x672C;&#x84DD;&#x7EBF;&#x8D70;&#x8FC7;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x4FEE;&#x6B63;&#x4E3A;&#x7EA2;&#x7EBF;&#xFF0C;&#x5373;&#x51CF;&#x7F13;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x65B9;&#x5411;&#x53D8;&#x5316;&#x7387;&#xFF0C;&#x5B66;&#x4E60;&#x7387;&#x5C06;&#x5F97;&#x5230;&#x63D0;&#x5347;&#x3002;&#x5728;&#x7B97;&#x6CD5;&#x4E0A;&#xFF0C;&#x5C06;&#x539F;&#x5148;w:=w-&#x3B1;&#xB7;dw; b:=w-&#x3B1;&#xB7;db&#x4FEE;&#x6B63;&#x4E3A;&#xFF1A; \(v_{dw} = &#x3B2;&#xB7;v_{dw} + (1-&#x3B2;)&#xB7;dw\\ v_{db} = &#x3B2;&#xB7;v_{db} + (1-&#x3B2;)&#xB7;db\\ w:=w - &#x3B1;&#xB7;v_{dw}\\ b:=b - &#x3B1;&#xB7;v_{db}\) &#x7B97;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x91C7;&#x7528;&#x6307;&#x6570;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x6765;&#x4F5C;&#x7528;&#x4E8E;&#x539F;&#x5148;&#x7684;dw&#x548C;db&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x53D8;&#x5316;&#x7387;&#x7684;&#x8FDE;&#x7EED;&#x6027;&#x66F4;&#x5F3A;&#xFF0C;&#x9632;&#x6B62;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x4E2D;&#x7684;&#x6298;&#x8FD4;&#x6D88;&#x8017;&#x3002; &#x5982;&#x679C;&#x3B2;=0&#xFF0C;&#x5219;&#x52A8;&#x91CF;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x9000;&#x5316;&#x4E3A;&#x666E;&#x901A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF1B;&#x3B2;&#x8D8A;&#x5927;&#xFF0C;&#x6BCF;&#x8F6E;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x5411;&#x53D8;&#x5316;&#x8D8A;&#x5E73;&#x6ED1;&#x3002;&#x4F46;&#x662F;&#x3B2;&#x8FC7;&#x5927;&#x4E5F;&#x4F1A;&#x5BFC;&#x81F4;&#x201C;&#x8239;&#x5927;&#x4E0D;&#x597D;&#x8C03;&#x5934;&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x8BA9;&#x5B66;&#x4E60;&#x7387;&#x4E0B;&#x964D;&#x3002;&#x901A;&#x5E38;&#x3B2;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x5728;(0.8, 0,999)&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x901A;&#x5E38;&#x53D6;0.9&#x3002; 2.7 RMSprop &#x63A5;&#x4E0B;&#x6765;&#x4E24;&#x8282;&#x4ECB;&#x7ECD;&#x7684;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x601D;&#x60F3;&#x4E0A;&#x548C;&#x52A8;&#x91CF;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x90FD;&#x662F;&#x5E0C;&#x671B;&#x51CF;&#x5C0F;&#x65B9;&#x5411;&#x7684;&#x53D8;&#x5316;&#x7387;&#x3002;&#x76F4;&#x63A5;&#x4E0A;&#x7B97;&#x6CD5;&#xFF1A; \(S_{dw} = &#x3B2;_2&#xB7;S_{dw} + (1 - &#x3B2;_2)&#xB7;(dw)^2\\ S_{db} = &#x3B2;_2&#xB7;S_{db} + (1 - &#x3B2;_2)&#xB7;(db)^2\\ w:=w - &#x3B1;&#xB7;\frac{dw}{\sqrt{S_{dw} \;+\; &#x3B5;}}\\ b:=b - &#x3B1;&#xB7;\frac{db}{\sqrt{S_{db} \;+\; &#x3B5;}}\) &gt; &#x4F46;&#x672C;&#x8282;&#x5E76;&#x6CA1;&#x6709;&#x8BB2;&#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x51FA;&#x5904;&#x548C;&#x601D;&#x60F3;&#x8D77;&#x6E90;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x53D6;&#x5E73;&#x65B9;&#x5462;&#xFF1F;&#x8FD9;&#x548C;&#x52A0;&#x6743;&#x5E73;&#x5747;&#x5DEE;&#x5F02;&#x6709;&#x70B9;&#x5927;&#x3002;&#x4E0D;&#x8FC7;&#x4E5F;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x77E5;&#x9053;&#x610F;&#x56FE;&#x5E76;&#x77E5;&#x9053;&#x8FD9;&#x4E48;&#x505A;&#x662F;&#x6709;&#x6548;&#x7684;&#x5C31;&#x597D;&#x4E86;~ 2.8 Adam&#x4F18;&#x5316;&#x7B97;&#x6CD5; &#x548C;&#x524D;&#x4E24;&#x8282;&#x662F;&#x4E00;&#x6837;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x5E76;&#x4E14;&#x628A;&#x524D;&#x4E24;&#x8282;&#x7684;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x4E86;&#x3002;&#x76F4;&#x63A5;&#x4E0A;&#x4EE3;&#x7801;&#xFF1A; \(v_{dw}=0, \; S_{dw}=0, \; v_{db}=0, \; S_{db}=0\\ on \, iteration \, t:\\ &#x4F7F;&#x7528;mini-batch&#x65B9;&#x6CD5;&#x8BA1;&#x7B97;dw, db\\ v_{dw}=&#x3B2;_1&#xB7;v_{dw} + (1-&#x3B2;_1)&#xB7;dw &#x3000;&#x3000;&#x3000;v_{db}=&#x3B2;_1&#xB7;v_{db} + (1-&#x3B2;_1)&#xB7;db\\ S_{dw}=&#x3B2;_2&#xB7;S_{dw} + (1-&#x3B2;_2)&#xB7;(dw)^2&#x3000;S_{db}=&#x3B2;_2&#xB7;S_{db} + (1-&#x3B2;_2)&#xB7;(db)^2\\ v_{dw}=\frac{v_{dw}}{1-&#x3B2;_1^t}&#x3000;&#x3000;&#x3000;v_{db}=\frac{v_{db}}{1-&#x3B2;_1^t}\\ S_{dw}=\frac{S_{dw}}{1-&#x3B2;_2^t}&#x3000;&#x3000;&#x3000;S_{db}=\frac{S_{db}}{1-&#x3B2;_2^t}\\ w:=w-&#x3B1;&#xB7;\frac{v_{dw}}{\sqrt{S_{dw}} \;+\; &#x3B5;}&#x3000;&#x3000;&#x3000;b:=b-&#x3B1;&#xB7;\frac{v_{db}}{\sqrt{S_{db}} \;+\; &#x3B5;}\) &#x901A;&#x5E38;&#x8D85;&#x53C2;&#x6570;&#x9009;&#x62E9;&#xFF1A;\(&#x3B5;:10^{-8} \; \; \; &#x3B2;_1:0.9 \; \; \; &#x3B2;_2:0.999\)&#xFF0C; &#x3B1;&#x5219;&#x6839;&#x636E;&#x4E1A;&#x52A1;&#x8C03;&#x6574;&#x3002; 2.9 &#x5B66;&#x4E60;&#x7387;&#x8870;&#x51CF; &#x5B66;&#x4E60;&#x7387;&#x8870;&#x51CF;&#x7684;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x968F;&#x7740;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x8FDB;&#x884C;&#xFF0C;&#x8DDD;&#x79BB;&#x6210;&#x672C;&#x6700;&#x4F4E;&#x70B9;&#x8D8A;&#x6765;&#x8D8A;&#x8FD1;&#xFF0C;&#x5E94;&#x8BE5;&#x9010;&#x6B65;&#x8870;&#x51CF;&#x6BCF;&#x4E00;&#x8F6E;&#x7684;&#x5B66;&#x4E60;&#x6B65;&#x957F;&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x5927;&#x5E45;&#x5728;&#x6700;&#x4F4E;&#x70B9;&#x9644;&#x8FD1;&#x9707;&#x8361;&#x6D88;&#x8017;&#x3002;&#x6B64;&#x65F6;&#x7F29;&#x51CF;&#x6B65;&#x957F;&#x6709;&#x52A9;&#x4E8E;&#x903C;&#x8FD1;&#x6781;&#x503C;&#x70B9;&#x3002;&#x4ECE;&#x56FE;&#x4E0A;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x8FD9;&#x4E00;&#x70B9;&#xFF1A; &#x84DD;&#x7EBF;&#x5728;&#x5230;&#x8FBE;&#x4E86;&#x6781;&#x503C;&#x70B9;&#x9644;&#x8FD1;&#x8FD8;&#x662F;&#x4EE5;&#x540C;&#x6837;&#x7684;&#x6B65;&#x957F;&#x6765;&#x56DE;&#x9707;&#x52A8;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x540E;&#x671F;&#x7684;&#x9707;&#x8361;&#x5BF9;&#x4E8E;&#x5B66;&#x4E60;&#x4E0D;&#x518D;&#x6709;&#x6548;&#xFF1B;&#x800C;&#x7EFF;&#x7EBF;&#x7684;&#x6B65;&#x957F;&#x8D8A;&#x6765;&#x8D8A;&#x5C0F;&#xFF0C;&#x6709;&#x52A9;&#x4E8E;&#x903C;&#x8FD1;&#x6781;&#x503C;&#x70B9;&#x3002;&#x7406;&#x89E3;&#x4E86;&#x601D;&#x60F3;&#xFF0C;&#x7B97;&#x6CD5;&#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x770B;&#x61C2;&#x4E86;&#x3002; &#x65B9;&#x6CD5;&#x4E00;&#xFF1A;\(&#x3B1;:=\frac{1}{1+decay\\_rate&#xD7;epoch\\_num}\)&#xFF0C;&#x5176;&#x4E2D;decay_rate&#x4E3A;&#x8870;&#x51CF;&#x7387;&#xFF0C;epoch_num&#x4E3A;&#x8FED;&#x4EE3;&#x7684;&#x4EE3;&#x6B21;&#x3002; &#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;\(&#x3B1;:=0.95^{epoch\\_num}&#xB7;&#x3B1;\) &#x65B9;&#x6CD5;&#x4E09;&#xFF1A;\(&#x3B1;:=\frac{k}{\sqrt{epoch\\_num}}&#xB7;&#x3B1; \;&#x6216;\; &#x3B1;:=\frac{k}{\sqrt{t}}&#xB7;&#x3B1;\) &#x6700;&#x571F;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x624B;&#x52A8;&#x8C03;&#x8282;&#xFF0C;&#x603B;&#x4E4B;&#x5C31;&#x662F;&#x8BA9;&#x540E;&#x671F;&#x7684;&#x3B1;&#x80FD;&#x9010;&#x6B65;&#x8870;&#x51CF;&#x3002; &#x4F5C;&#x4E1A; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x6F14;&#x793A;&#x5404;&#x79CD;&#x4F18;&#x5316;&#x65B9;&#x6848;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x9898;&#x76EE;&#x662F;&#x4E3A;&#x53CC;&#x6708;&#x7259;&#x6563;&#x70B9;&#x56FE;&#x505A;&#x4E2A;&#x5206;&#x7C7B;&#x5668;&#x3002;&#x4EE3;&#x7801;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#xFF0C;&#x90FD;&#x662F;&#x5C40;&#x90E8;&#x7684;&#x6280;&#x672F;&#x6027;&#x4F18;&#x5316;&#xFF0C;&#x5C31;&#x4E0D;&#x5728;&#x8FD9;&#x91CC;&#x8D34;&#x4E86;&#x3002; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding2_2&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pandas使用]]></title>
    <url>%2F2018%2F03%2F27%2F2018%2F0327pandas%2F</url>
    <content type="text"><![CDATA[pandas&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x5206;&#x6790;&#xFF0C;&#x62FF;&#x5230;&#x4E00;&#x6279;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x5BF9;&#x6570;&#x636E;&#x6709;&#x4E2A;&#x5B8F;&#x89C2;&#x6DF1;&#x5165;&#x7684;&#x7406;&#x89E3;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x6BD4;&#x5982;&#x5206;&#x5E03;&#x3001;&#x5747;&#x503C;&#x3001;&#x65B9;&#x5DEE;&#x7B49;&#xFF0C;&#x8FD9;&#x662F;pandas&#x7684;&#x7528;&#x6B66;&#x4E4B;&#x5730;&#x3002; &#x89C2;&#x5BDF;&#x6570;&#x636E;&#x5206;&#x5E03; 1234data = np.array([1, 1, 1, 2, 3, 4, 5, 6], np.uint32)df = pd.DataFrame(data, columns=[&apos;number&apos;])logging.info(data)logging.info(&apos;\n%s&apos; % df.describe()) &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 123456789 numbercount 8.00000mean 2.87500 &#x5E73;&#x5747;&#x503C;std 1.95941 &#x6807;&#x51C6;&#x5DEE; min 1.00000 &#x6700;&#x5C0F;&#x6570;25% 1.00000 &#x56DB;&#x5206;&#x4F4D;&#x6570;&#xFF0C;&#x7B2C;2&#x4E2A;&#x548C;&#x7B2C;3&#x4E2A;&#x6570;&#x7684;&#x5747;&#x503C;50% 2.50000 &#x7B2C;&#x4E8C;&#x56DB;&#x5206;&#x4F4D;&#x6570;&#xFF0C;&#x7B2C;4&#x548C;&#x7B2C;5&#x4E2A;&#x6570;&#x7684;&#x5747;&#x503C;75% 4.25000 max 6.00000 &#x6700;&#x5927;&#x6570; &#x5176;&#x4E2D;&#x6807;&#x51C6;&#x5DEE;\(&#x3B4;=\sqrt{\frac{1}{N} \sum_{i=1}^{N}{ (x_i - &#x3BC;)^2 }} &#xFF0C;\; &#x5747;&#x503C;&#x3BC;=\frac{1}{N} \sum_{i=1}^{N}x_i\) &#x81EA;&#x5B9A;&#x4E49;&#x5206;&#x4F4D;&#x6570; 123data = np.array(np.linspace(1, 20, 20), np.uint32).reshape(10, 2)df = pd.DataFrame(data, columns=[&apos;a&apos;, &apos;b&apos;])logging.info(&apos;\n%s&apos; % df.describe(percentiles=[.20, .40, .60, .80])) &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A; 1234567891011 a bcount 10.000000 10.000000mean 10.000000 11.000000std 6.055301 6.055301min 1.000000 2.00000020% 4.600000 5.60000040% 8.200000 9.20000050% 10.000000 11.00000060% 11.800000 12.80000080% 15.400000 16.400000max 19.000000 20.000000]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>基础工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（四）]]></title>
    <url>%2F2018%2F03%2F22%2F2018%2F0322DeepLearningAI05%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x6539;&#x5584;&#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF1A;&#x8D85;&#x53C2;&#x6570;&#x8C03;&#x8BD5;&#x3001;&#x6B63;&#x5219;&#x5316;&#x4EE5;&#x53CA;&#x4F18;&#x5316;&#x300B;&#x7B2C;&#x4E00;&#x5468;&#x300A;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x5B9E;&#x7528;&#x5C42;&#x9762;&#x300B;&#x3002; &#x672C;&#x8282;&#x4E3B;&#x8981;&#x4ECE;&#x5982;&#x4F55;&#x521D;&#x59CB;&#x5316;W&#x3001;b&#x53C2;&#x6570;&#xFF0C;&#x6B63;&#x5219;&#x5316;&#x6B63;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x548C;&#x68AF;&#x5EA6;&#x68C0;&#x67E5;&#x4E09;&#x65B9;&#x9762;&#x6765;&#x8BA8;&#x8BBA;&#x5982;&#x4F55;&#x4F18;&#x5316;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x3002; 1.2 &#x504F;&#x5DEE;/&#x65B9;&#x5DEE; &#x504F;&#x5DEE;&#x63CF;&#x8FF0;&#x7684;&#x662F;&#x7B97;&#x6CD5;&#x9884;&#x6D4B;&#x7684;&#x5E73;&#x5747;&#x503C;&#x548C;&#x771F;&#x5B9E;&#x503C;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4F53;&#x73B0;&#x7B97;&#x6CD5;&#x7684;&#x4F60;&#x548C;&#x80FD;&#x529B;&#x3002; &#x65B9;&#x5DEE;&#x63CF;&#x8FF0;&#x540C;&#x4E00;&#x7B97;&#x6CD5;&#x5728;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x7684;&#x9884;&#x6D4B;&#x503C;&#x548C;&#x6240;&#x6709;&#x6570;&#x636E;&#x96C6;&#x7684;&#x5E73;&#x5747;&#x9884;&#x6D4B;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4F53;&#x73B0;&#x7B97;&#x6CD5;&#x7684;&#x7A33;&#x5B9A;&#x6027;&#x3002; 1.3 &#x673A;&#x5668;&#x5B66;&#x4E60;&#x57FA;&#x7840; &#x8BAD;&#x7EC3;&#x7684;&#x76EE;&#x6807;&#x662F;&#x5E0C;&#x671B;&#x5F97;&#x5230;&#x4F4E;&#x65B9;&#x5DEE;&#xFF0C;&#x4F4E;&#x504F;&#x5DEE;&#x7684;&#x6A21;&#x578B;&#x3002;&#x5F53;&#x6A21;&#x578B;&#x5448;&#x73B0;&#x9AD8;&#x504F;&#x5DEE;&#x65F6;&#xFF0C;&#x5E94;&#x5C55;&#x5F00;&#x66F4;&#x5927;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x5C42;&#x6B21;&#x66F4;&#x6DF1;&#x6216;&#x8005;&#x8282;&#x70B9;&#x66F4;&#x591A;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x63D0;&#x4F9B;&#x66F4;&#x591A;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x7684;&#x5E2E;&#x52A9;&#x5C31;&#x4E0D;&#x5927;&#x4E86;&#x3002;&#x5982;&#x679C;&#x6A21;&#x578B;&#x5448;&#x73B0;&#x9AD8;&#x65B9;&#x5DEE;&#xFF0C;&#x5219;&#x5E94;&#x63D0;&#x4F9B;&#x66F4;&#x591A;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x679C;&#x6570;&#x636E;&#x7684;&#x83B7;&#x53D6;&#x6210;&#x672C;&#x592A;&#x9AD8;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6B63;&#x5219;&#x5316;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; 1.4 &#xFF08;L2&#xFF09;&#x6B63;&#x5219;&#x5316; &#x89E3;&#x51B3;&#x9AD8;&#x65B9;&#x5DEE;&#x7684;&#x6709;&#x6548;&#x624B;&#x6BB5;&#x662F;&#x8BAD;&#x7EC3;&#x66F4;&#x591A;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x5F53;&#x6570;&#x636E;&#x6E90;&#x6709;&#x9650;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x6B63;&#x5219;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;&#x672C;&#x8282;&#x4ECB;&#x7ECD;L2&#x6B63;&#x5219;&#x5316;&#x3002; &#x5BF9;&#x4E8E;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#xFF0C;&#x5B9A;&#x4E49;&#x6210;&#x672C;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; \(J(w, b) = \frac{1}{m}\sum_{i=1}^{m}L(&#x177;, y) + \frac{&#x3BB;}{2m}\Vert{w}\Vert_{2}^{2}\) &#x5176;&#x4E2D;\(\Vert{w}\Vert_{2}^{2}=\sum_{j=1}^{n_{x}}w_{j}^{2}=w^{T}&#xB7;w\)&#x79F0;&#x4E3A;\(L_2\)&#x8303;&#x6570; &#x8BE5;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;\(L_2\)&#x6B63;&#x5219;&#x5316;&#x3002;&#x3BB;&#x88AB;&#x79F0;&#x4E3A;&#x6B63;&#x5219;&#x5316;&#x53C2;&#x6570;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x8D85;&#x53C2;&#x6570;&#x3002; &#x4E5F;&#x5B58;&#x5728;\(L_1\)&#x6B63;&#x5219;&#x5316;&#xFF1A; \(J(w, b) = \frac{1}{m}\sum_{i=1}^{m}L(&#x177;, y) + \frac{&#x3BB;}{2m}\Vert{w}\Vert_{1}\) &#x5176;&#x4E2D;\(\frac{&#x3BB;}{2m}\Vert{w}\Vert_{1}=\frac{&#x3BB;}{2m}\sum_{j=1}^{n^x}|w_j|\) &#x4F46;&#x5B83;&#x8FDC;&#x6CA1;&#x6709;\(L_2\)&#x6B63;&#x5219;&#x5316;&#x5E38;&#x7528;&#x3002; &#x5BF9;&#x4E8E;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C; \(J(W^{[1]}, b^{[1]}, ..., W^{[L]}, b^{[L]}) = \frac{1}{m}\sum_{i=1}^{m}L(&#x177;^{(i)}, y^{(i)}) + \frac{&#x3BB;}{2m}\sum_{l=1}^{L}\Vert{W^{[l]}}\Vert_{F}^2\) &#x5176;&#x4E2D;\(\Vert{W^{[l]}}\Vert_{F}^2=\sum_{i=1}^{n^{[l-1]}}\sum_{j=1}^{n^{[l]}}(W_{ij}^{[l]})^2\)&#x3000;&#x3000;&#x8BE5;&#x77E9;&#x9635;&#x8303;&#x6570;&#x88AB;&#x79F0;&#x4E3A;&#x5F17;&#x7F57;&#x8D1D;&#x5C3C;&#x4E4C;&#x65AF;&#x8303;&#x6570;&#x3002; &#x4E8E;&#x662F;&#x5728;&#x8BA1;&#x7B97;\(dW^{[l]}\)&#x65F6;&#xFF0C;\(dW^{[l]}=(&#x539F;&#x5148;&#x7684;&#x540E;&#x5411;&#x7B97;&#x6CD5;) + \frac{&#x3BB;}{m}W^{[l]}\) &#x66F4;&#x65B0;&#x53C2;&#x6570;&#xFF1A; \(W^{[l]} := W^{[l]} - &#x3B1;&#xB7;dW^{[l]}\\ =W^{[l]} - &#x3B1;&#xB7;[(from \, backpop) + \frac{&#x3BB;}{m}W^{[l]}]\\ =(1-\frac{&#x3B1;&#x3BB;}{m})W^{[l]} - &#x3B1;&#xB7;(from \, backpop)\) 1.5 &#x4E3A;&#x4EC0;&#x4E48;&#x6B63;&#x5219;&#x5316;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x8FC7;&#x62DF;&#x5408; &#x672C;&#x8282;&#x4ECE;&#x4E24;&#x4E2A;&#x89D2;&#x5EA6;&#x6765;&#x89E3;&#x91CA;&#x3002; &#x6765;&#x770B;&#x6210;&#x672C;&#x51FD;&#x6570;\(J(W{[l]}, b{[l]}) = \frac{1}{m}\sum_{i=1}^{m}L(&#x177;^{(i)}, y^{(i)}) + \frac{&#x3BB;}{2m}\Vert{W^{[l]}}\Vert_F^2\)&#xFF0C;&#x6B63;&#x5219;&#x5316;&#x53C2;&#x6570;&#x3BB;&#x8D8A;&#x5927;&#xFF0C;&#x4E3A;&#x4E86;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x8D8A;&#x5C0F;&#xFF0C;\(W{[l]}\)&#x5E94;&#x8BE5;&#x8D8A;&#x5C0F;&#xFF0C;&#x5F53;\(W{[l]}\)&#x8D8B;&#x8FD1;&#x4E8E;0&#x65F6;&#xFF0C;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x90E8;&#x5206;&#x8282;&#x70B9;&#x5931;&#x6548;&#xFF0C;&#x7F51;&#x7EDC;&#x9000;&#x5316;&#x6210;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x4E0B;&#x56FE;&#x6240;&#x8868;&#x8FBE;&#x7684;&#x60C5;&#x51B5;&#xFF1A; &#x53E6;&#x4E00;&#x4E2A;&#x89D2;&#x5EA6;&#x7684;&#x7406;&#x89E3;&#x662F;&#xFF0C;&#x5F53;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;tanh&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x3BB;&#x8D8A;&#x5927;&#xFF0C;\(W^{[l]}\)&#x8D8A;&#x5C0F;&#xFF0C;\(z^{[l]}=w^{[l]}&#xB7;a^{[l-1]}+b^{[l]}\)&#xFF0C;&#x6545;\(z^{[l]}\)&#x8D8A;&#x5C0F;&#xFF0C;&#x5728;&#x63A5;&#x8FD1;0&#x7684;&#x533A;&#x95F4;&#x5185;tanh(z)&#x5448;&#x7EBF;&#x6027;&#xFF0C;&#x5982;&#x679C;&#x7F51;&#x7EDC;&#x4E2D;&#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x5448;&#x7EBF;&#x6027;&#xFF0C;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x4E5F;&#x53EF;&#x8868;&#x8FBE;&#x4E3A;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF0C;&#x4E5F;&#x5C31;&#x4E0D;&#x4F1A;&#x5448;&#x73B0;&#x51FA;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x590D;&#x6742;&#x51FD;&#x6570;&#x3002; 1.6 Dropout&#x6B63;&#x5219;&#x5316; Dropout&#x6B63;&#x5219;&#x5316;&#x662F;&#x968F;&#x673A;&#x5C06;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x9690;&#x85CF;&#x5C42;&#x8282;&#x70B9;&#x7F6E;&#x4E3A;0&#xFF0C;&#x5E76;&#x5220;&#x9664;&#x4E0E;&#x4E4B;&#x5173;&#x8054;&#x7684;&#x8BA1;&#x7B97;&#x8DEF;&#x5F84;&#xFF0C;&#x4ECE;&#x800C;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x66F4;&#x5C11;&#x3001;&#x89C4;&#x6A21;&#x66F4;&#x5C0F;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x8BE5;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x5C31;&#x662F;&#x5C06;&#x6BCF;&#x5C42;&#x8282;&#x70B9;&#x5931;&#x6D3B;50%&#xFF1A; &#x5B9E;&#x65BD;Dropout&#x6B63;&#x5219;&#x5316;&#x7684;&#x65B9;&#x6CD5;&#xFF1A; \(d_i=np.random.rand(a_i.shape[0], a_i.shape[1])\) \(d_i=(di&lt;keep\\_prob)\)&#x3000;&#x3000;keep_prob&#x2208;[0, 1]&#x662F;&#x8BE5;&#x5C42;&#x8282;&#x70B9;&#x5B58;&#x6D3B;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x4E8E;&#x662F;\(d_i\)&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x578B;&#x77E9;&#x9635; \(a_i=np.multiply(a_i, d_i)\) &#x505A;&#x4E58;&#x6CD5;&#x65F6;&#xFF0C;\(d_i\)&#x4E2D;&#x7684;&#x5E03;&#x5C14;&#x503C;&#x88AB;&#x5F53;&#x505A;0/1&#x5904;&#x7406;&#xFF0C;&#x5B83;&#x5C06;\(a_i\)&#x6309;keep_prob&#x6982;&#x7387;&#x5931;&#x6D3B; \(a_i /= keep\\_prob\) &#x3000;&#x3000;&#x7531;&#x4E8E;&#x7B2C;i&#x5C42;&#x53EA;&#x5269;&#x4E0B;keep_prob&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x8FD9;&#x4E2A;&#x9664;&#x6CD5;&#x662F;&#x4E3A;&#x4E86;&#x786E;&#x4FDD;\(a_i\)&#x7684;&#x671F;&#x671B;&#x503C;&#x4E0D;&#x53D8; &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x8BE5;&#x65B9;&#x6CD5;&#x751F;&#x6210;&#x5931;&#x6D3B;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x662F;&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x3002;&#x5728;&#x6D4B;&#x8BD5;&#x548C;&#x9884;&#x6D4B;&#x9636;&#x6BB5;&#xFF0C;&#x5219;&#x5E94;&#x4F7F;&#x7528;&#x5B8C;&#x6574;&#x7F51;&#x7EDC;&#xFF0C;&#x56E0;&#x4E3A;&#x968F;&#x673A;&#x5931;&#x6D3B;&#x4F1A;&#x5BFC;&#x81F4;&#x7ED3;&#x679C;&#x4E0D;&#x7A33;&#x5B9A;&#x3002; 1.7 &#x7406;&#x89E3;Dropout Dropout&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x662F;&#x201C;&#x4E0D;&#x8981;&#x8FC7;&#x5EA6;&#x4F9D;&#x8D56;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x7ED3;&#x679C;&#x4E0D;&#x4F1A;&#x5BF9;&#x67D0;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#x8FC7;&#x5EA6;&#x62DF;&#x5408;&#x3002; &#x6211;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x662F;&#xFF1A;&#x6781;&#x7AEF;&#x7684;Dropout&#x4F1A;&#x8BA9;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x88AB;&#x780D;&#x6389;&#xFF0C;&#x5BFC;&#x81F4;&#x7F51;&#x7EDC;&#x9000;&#x5316;&#x6210;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF0C;&#x8FD9;&#x5F88;&#x50CF;&#x662F;L2&#x6B63;&#x5219;&#x5316;&#x7684;&#x6548;&#x679C;&#x3002;&#x7B80;&#x5355;&#x7684;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6709;&#x52A9;&#x4E8E;&#x51CF;&#x5C11;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x73B0;&#x8C61;&#x3002; &#x5728;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8282;&#x70B9;&#x6570;&#x8D8A;&#x591A;&#x7684;&#x5C42;&#xFF0C;&#x53EF;&#x8BBE;&#x7F6E;&#x8D8A;&#x9AD8;&#x7684;&#x5931;&#x6D3B;&#x6BD4;&#x4F8B;&#xFF08;&#x8F83;&#x5C0F;&#x7684;keep_prob)&#x3002; 1.8 &#x5176;&#x5B83;&#x6B63;&#x5219;&#x5316;&#x65B9;&#x6CD5; &#x5BF9;&#x4E8E;&#x56FE;&#x7247;&#x7C7B;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6C34;&#x5E73;&#x7FFB;&#x8F6C;&#xFF0C;&#x4EFB;&#x610F;&#x88C1;&#x5207;&#x6765;&#x589E;&#x52A0;&#x6837;&#x672C;&#x3002;&#x867D;&#x7136;&#x8FD9;&#x79CD;&#x201C;&#x5047;&#x6570;&#x636E;&#x201D;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x591A;&#x4FE1;&#x606F;&#x91CF;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x83B7;&#x53D6;&#x6210;&#x672C;&#xFF0C;&#x800C;&#x4E14;&#x5BF9;&#x4E8E;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x4F9D;&#x7136;&#x6709;&#x6548;&#x3002; &#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x6CD5;&#x8FD8;&#x53EF;&#x4EE5;&#x5E94;&#x7528;&#x4E0E;&#x5149;&#x5B66;&#x8BC6;&#x522B;&#x6587;&#x5B57;&#x7684;&#x6570;&#x636E;&#x4E2D;&#xFF0C;&#x4F8B;&#x5982;&#x968F;&#x610F;&#x65CB;&#x8F6C;&#x6216;&#x626D;&#x66F2;&#x6587;&#x5B57;&#x56FE;&#x7247;&#x6765;&#x6269;&#x5145;&#x6570;&#x636E;&#x3002; 1.9 &#x5F52;&#x4E00;&#x5316;&#x8F93;&#x5165; &#x5F52;&#x4E00;&#x5316;&#x8F93;&#x5165;&#x5305;&#x62EC;&#x4E24;&#x90E8;&#x5206;&#xFF1A; 1. &#x96F6;&#x5747;&#x503C;&#x5316;&#x3002;\(&#x3BC;=\frac{1}{m}\sum_{i=1}^{m}x^{(i)},&#x3000;&#x3000;x:=x-&#x3BC;\) 2. &#x5F52;&#x4E00;&#x5316;&#x65B9;&#x5DEE;&#x3002;\(&#x3C3;^2=\frac{1}{m}\sum_{i=1}^{m}x^{(i)}**2,&#x3000;x /= &#x3C3;^2\) &#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x4E0A;&#x5E94;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x3BC;&#x548C;\(&#x3C3;^2\)&#x3002; &#x5F52;&#x4E00;&#x5316;&#x8F93;&#x5165;&#x53EF;&#x4EE5;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5EF6;&#x5C55;&#x66F4;&#x5747;&#x5300;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x68AF;&#x5EA6;&#x53D8;&#x5316;&#x6162;&#xFF0C;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x53D8;&#x5316;&#x5FEB;&#x3002;&#x8FD9;&#x79CD;&#x5EF6;&#x5C55;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x63D0;&#x5347;&#x5B66;&#x4E60;&#x6548;&#x7387;&#x3002; 1.10 &#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x4E0E;&#x68AF;&#x5EA6;&#x7206;&#x70B8; &#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x548C;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x7684;&#x73B0;&#x8C61;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x6DF1;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#xFF0C;&#x5C06;&#x7EF4;&#x5EA6;&#x8BBE;&#x4E3A;2&#xFF0C;&#x4EE4;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7B80;&#x5316;&#x4E3A;g(z)=z&#xFF0C;&#x4E8E;&#x662F; \(&#x177;=W{[L]}&#xB7;a{[L-1]} \\ = W{[L]}&#xB7;(W{[L-1]}&#xB7;a{[L-2]}) \\ = ... \\ = W{[L]}&#xB7;W{[L-1]}&#xB7;...&#xB7;W{[2]}&#xB7;W{[1]}&#xB7;X\) &#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x8BF4;&#x660E;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x89C2;&#x5BDF;&#x6781;&#x7AEF;&#x60C5;&#x51B5;&#xFF0C;&#x4EE4;\(W{[l]}\)&#x4E3A;&#x5BF9;&#x89D2;&#x7EBF;&#x77E9;&#x9635;&#xFF1A;\(W{[l]}= \left\lgroup \matrix{i&amp;0 \cr 0&amp;i} \right \rgroup\)&#xFF0C;&#x4E8E;&#x662F;\(&#x177;=i^l&#xB7;x\) &#x5982;&#x679C;L&#x975E;&#x5E38;&#x5927;&#xFF0C;i&#x7A0D;&#x5FAE;&#x5927;&#x4E8E;1&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x177;&#x5448;&#x6307;&#x6570;&#x7EA7;&#x653E;&#x5927;&#xFF0C;i&#x7A0D;&#x5FAE;&#x5C0F;&#x4E8E;1&#x4E5F;&#x4F1A;&#x5BFC;&#x81F4;&#x177;&#x8D8B;&#x8FD1;&#x4E8E;0&#x3002;&#x524D;&#x8005;&#x5C31;&#x662F;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#xFF0C;&#x540E;&#x8005;&#x5C31;&#x662F;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x3002; &#x4E0B;&#x4E00;&#x8282;&#x5C06;&#x7ED9;&#x51FA;&#x5E94;&#x5BF9;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x548C;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x3002; 1.11 &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316; &#x89E3;&#x51B3;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#x548C;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x6CA1;&#x6709;&#x4E07;&#x80FD;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x672C;&#x8282;&#x7ED9;&#x51FA;&#x4E00;&#x4E9B;&#x601D;&#x8DEF;&#xFF0C;&#x672A;&#x5FC5;&#x5168;&#x90E8;&#x6709;&#x6548;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x5728;&#x9047;&#x5230;&#x95EE;&#x9898;&#x65F6;&#x4F5C;&#x4E3A;&#x5907;&#x9009;&#x65B9;&#x6848;&#x6765;&#x5C1D;&#x8BD5;&#x3002; &#x89C2;&#x5BDF;\(z=w_1x_1 + w_2x_2 + ... + w_nx_n\) \(w\)&#x8FC7;&#x5927;&#x548C;&#x8FC7;&#x5C0F;&#x4F1A;&#x5BFC;&#x81F4;&#x68AF;&#x5EA6;&#x7206;&#x70B8;&#x6216;&#x6D88;&#x5931;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x7ED9;&#x5B83;&#x8D4B;&#x4E00;&#x4E2A;&#x9002;&#x4E2D;&#x7684;&#x521D;&#x503C;&#x3002;&#x5728;&#x4E0A;&#x4E00;&#x5468;&#x7684;&#x4F5C;&#x4E1A;&#x4E2D;&#x6211;&#x5DF2;&#x7ECF;&#x6CE8;&#x610F;&#x5230;&#xFF0C;&#x8001;&#x5E08;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x521D;&#x59CB;&#x5316;w&#xFF1A; \(W{[l]}=np.random.randn(shape...)\times np.sqrt(\frac{2}{n^{[l-1]}})\) &#x5176;&#x4E2D;\(n^{[l-1]}\)&#x662F;&#x4E0A;&#x5C42;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x9002;&#x7528;&#x4E8E;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;RELU&#x7684;&#x60C5;&#x51B5;&#x3002; &#x5982;&#x679C;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x662F;tanh&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x521D;&#x59CB;&#x5316;w&#x66F4;&#x5408;&#x9002;&#xFF1A; \(W{[l]}=np.random.randn(shape\dots)\times np.sqrt(\frac{1}{n^{[l-1]}\;})\) &#x6216; \(W{[l]}=np.random.randn(shape\dots)\times np.sqrt(\frac{2}{n^{[l-1]}\; + \;n^{[l]}})\) 1.12 &#x68AF;&#x5EA6;&#x7684;&#x6570;&#x503C;&#x903C;&#x8FD1; &#x672C;&#x8282;&#x53EA;&#x662F;&#x8BB2;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7ED3;&#x8BBA;&#xFF1A;&#x53CC;&#x8FB9;&#x516C;&#x5DEE;&#x6BD4;&#x5355;&#x8FB9;&#x516C;&#x5DEE;&#x66F4;&#x63A5;&#x8FD1;&#x5BFC;&#x6570;&#xFF0C;&#x5373;&#xFF1A; \(f_{(x)}^{\prime}=\mathop{lim}\limits_{&#x3B5;&#x2192;0}\frac{f(x+&#x3B5;) - f(x-&#x3B5;)}{2&#x3B5;}\)&#x6BD4; \(f_{(x)}^{\prime}=\mathop{lim}\limits_{&#x3B5;&#x2192;0}\frac{f(x+&#x3B5;) - f(x)}{&#x3B5;}\) &#x66F4;&#x7CBE;&#x51C6;&#x3002; 1.13 &#x68AF;&#x5EA6;&#x68C0;&#x9A8C; &#x5C06;\(W^{[1]}, b^{[1]}, ..., W^{[L]}, b^{[L]}\) reshape&#x6210;&#x4E00;&#x4E2A;&#x5927;&#x5411;&#x91CF;&#x3B8;&#xFF0C; &#x5C06;\(dW^{[1]}, db^{[1]}, ..., dW^{[L]}, db^{[L]}\) reshape&#x6210;&#x4E00;&#x4E2A;&#x5927;&#x5411;&#x91CF;d&#x3B8;&#xFF0C; &#x901A;&#x8FC7;&#x8BA1;&#x7B97;&#xFF1A; \(for \; each i:\\ &#x3000;d&#x3B8;_{approx}^{[i]}=\frac{J(&#x3B8;_1, &#x3B8;_2, ..., &#x3B8;_{i+&#x3B5;}, ...) - J(&#x3B8;_1, &#x3B8;_2, ..., &#x3B8;_{i-&#x3B5;}, ...)}{2&#x3B5;}\\ d&#x3B8;^{[i]}=\frac{\partial{J}}{\partial{&#x3B8;_i}}\) &#x5982;&#x679C;\(d&#x3B8;_{approx}^{[i]}&#x2248;d&#x3B8;^{[i]}\)&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x6B63;&#x786E;&#xFF0C;&#x5426;&#x5219;&#x65E2;&#x53EF;&#x80FD;&#x6709;bug&#x3002; \(d&#x3B8;_{approx}^{[i]}&#x548C;d&#x3B8;^{[i]}\)&#x90FD;&#x662F;&#x77E9;&#x9635;&#xFF0C;&#x600E;&#x4E48;&#x5224;&#x65AD;&#x76F8;&#x4F3C;&#x6027;&#x5462;&#xFF1F;&#x53EF;&#x4EE5;&#x8003;&#x5BDF;&#x5B83;&#x4EEC;&#x7684;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#xFF1A; \(\frac{\Vert{d&#x3B8;_{approx}^{[i]} \;\;\; - \; d&#x3B8;^{[i]}}\Vert_2}{\Vert{d&#x3B8;_{approx}^{[i]} \;\;\;\Vert_2 + \; \Vert{d&#x3B8;^{[i]}}}\Vert_2}\) &#x5982;&#x679C;\(&#x3B5;&#x7684;&#x91CF;&#x7EA7;&#x5728;10^{-7}\)&#xFF0C;&#x8BE5;&#x6B27;&#x6C0F;&#x8DDD;&#x79BB;&#x91CF;&#x7EA7;&#x548C;&#x3B5;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x8BF4;&#x660E;&#x7ED3;&#x679C;&#x6B63;&#x786E;&#xFF0C;&#x5982;&#x679C;&#x9AD8;&#x51FA;&#x51E0;&#x4E2A;&#x91CF;&#x7EA7;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x4ED4;&#x7EC6;&#x68C0;&#x67E5;&#x548C;&#x8C03;&#x8BD5;&#x4E86;&#x3002; 1.14 &#x68AF;&#x5EA6;&#x68C0;&#x9A8C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E8B;&#x9879; &#x68AF;&#x5EA6;&#x68C0;&#x9A8C;&#x4EC5;&#x5E94;&#x7528;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;&#x4E0D;&#x8981;&#x5728;&#x8BAD;&#x7EC3;&#x4E2D;&#x4F7F;&#x7528;&#x5B83;&#xFF0C;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x592A;&#x9AD8;&#x4E86;&#x3002; &#x5982;&#x679C;&#x7B97;&#x6CD5;&#x7684;&#x68AF;&#x5EA6;&#x68C0;&#x9A8C;&#x5931;&#x8D25;&#xFF0C;&#x5E94;&#x68C0;&#x67E5;&#x6240;&#x6709;&#x9879;&#x3002; &#x5728;&#x4F7F;&#x7528;&#x6B63;&#x5219;&#x5316;&#x65F6;&#xFF0C;&#x5207;&#x8BB0;&#x8981;&#x5728;&#x6210;&#x672C;&#x51FD;&#x6570;&#x4E2D;&#x5305;&#x542B;&#x6B63;&#x5219;&#x9879;&#x3002; &#x68AF;&#x5EA6;&#x68C0;&#x9A8C;&#x4E0D;&#x80FD;&#x4E0E;Dropout&#x540C;&#x65F6;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x975E;&#x8981;&#x4F7F;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x5C06;keep_prob&#x8BBE;&#x4E3A;1&#xFF0C;&#x5373;&#x5173;&#x95ED;Dropout&#xFF0C;&#x68C0;&#x9A8C;&#x7B97;&#x6CD5;&#x6B63;&#x786E;&#x540E;&#xFF0C;&#x518D;&#x5E94;&#x7528;Dropout&#x3002; &#x4F5C;&#x4E1A; &#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570; &#x5728;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x4F5C;&#x4E1A;&#x4E2D;&#x6211;&#x5C31;&#x9047;&#x5230;&#x4E86;&#x56E0;&#x521D;&#x59CB;&#x53C2;&#x6570;&#x9009;&#x62E9;&#x4E0D;&#x5408;&#x9002;&#x5BFC;&#x81F4;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x5F88;&#x5FEB;&#x8D8B;&#x5E73;&#xFF0C;&#x4F46;&#x7CBE;&#x5EA6;&#x53EA;&#x6709;34%&#x7684;&#x60C5;&#x51B5;&#x3002;&#x5C06;&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;&#x7A0D;&#x5FAE;&#x8C03;&#x6574;&#x4E00;&#x4E0B;&#x5C31;&#x80FD;&#x5728;&#x540C;&#x6837;&#x7684;&#x8FED;&#x4EE3;&#x8F6E;&#x6570;&#x5185;&#xFF0C;&#x7CBE;&#x5EA6;&#x8FBE;&#x5230;&#x4E86;78%&#xFF01;&#x53EF;&#x89C1;&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;&#x5BF9;&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;&#x6709;&#x7740;&#x51B3;&#x5B9A;&#x6027;&#x7684;&#x5F71;&#x54CD;&#x3002; &#x5C06;W&#x3001;b&#x521D;&#x59CB;&#x5316;&#x4E3A;0 &#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x5B8C;&#x5168;&#x4E0B;&#x4E0D;&#x6765;&#xFF1A; &#x6CE8;&#x610F;&#x8FD9;&#x662F;&#x8BAD;&#x7EC3;&#x51FA;&#x6765;&#x7684;&#x6A21;&#x578B;&#x7B49;&#x9AD8;&#x7EBF;&#x56FE;&#xFF1A; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6240;&#x6709;&#x7684;&#x6837;&#x672C;&#x90FD;&#x88AB;&#x5224;&#x4E3A;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x770B;&#x8F93;&#x51FA;&#xFF1A; 1234On the train set:Accuracy: 0.5On the test set:Accuracy: 0.5 &#x51C6;&#x786E;&#x7387;&#x53EA;&#x6709;50%&#x3002;&#x6587;&#x4E2D;&#x6307;&#x51FA;&#x5982;&#x679C;&#x628A;&#x6240;&#x6709;W&#x521D;&#x59CB;&#x5316;&#x4E3A;0&#xFF0C;&#x4F1A;&#x4EA7;&#x751F;&#x53C2;&#x6570;&#x7684;&#x5BF9;&#x79F0;&#x6027;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x6BCF;&#x4E00;&#x5C42;&#x6240;&#x6709;&#x8282;&#x70B9;&#x8BAD;&#x7EC3;&#x51FA;&#x7684;&#x503C;&#x90FD;&#x76F8;&#x7B49;&#xFF0C;&#x8FD9;&#x4F7F;&#x5F97;&#x591A;&#x8282;&#x70B9;&#x65E0;&#x6548;&#xFF0C;&#x548C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x662F;&#x7B49;&#x6548;&#x7684;&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x8FD8;&#x662F;&#x6709;&#x70B9;&#x7591;&#x95EE;&#xFF1A; \(Z_1^{[1]}=W_1^{[1]}&#xB7;X+b_1^{[1]}, \; Z_2^{[1]}=W_2^{[1]}&#xB7;X+b_2^{[1]}\)&#xFF0C;&#x5982;&#x679C;W&#x4E3A;&#x5168;0&#x800C;b&#x4E0D;&#x4E3A;&#x5168;0&#xFF0C;&#x5219; \(A_1^{[1]}=g(Z_1^{[1]}) = g(b_1^{[1]}), \; A_2^{[1]}=g(Z_2^{[1]}) = g(b_2^{[1]})\) &#x7531;&#x4E8E;\(dW[l] = \frac{1}{m}dZ^{[l]} &#xB7; A^{[l-1]} = \frac{1}{m}dA[l]&#xB7;g[l]\prime(Z^{[l]})A^{[l-1]}\)&#x3000;&#x3000;&#x53C2;&#x89C1;&#x6B64;&#x5904; &#x8FD9;&#x4E48;&#x63A8;&#x5BFC;&#x4E0B;&#x6765;&#xFF0C;&#x5982;&#x679C;b&#x4E5F;&#x4E3A;0&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;dW&#x5404;&#x9879;&#x5B8C;&#x5168;&#x76F8;&#x7B49;&#xFF0C;&#x5982;&#x679C;b&#x4E0D;&#x4E3A;0&#xFF0C;&#x5E94;&#x8BE5;dW&#x7684;&#x4E2A;&#x5143;&#x7D20;&#x4E0D;&#x4F1A;&#x50CF;&#x7B49;&#x554A;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x76F8;&#x7B49;&#xFF0C;&#x5C31;&#x5BFC;&#x81F4;&#x4E0B;&#x4E00;&#x8F6E;&#x7684;W&#x4E2A;&#x5143;&#x7D20;&#x4E5F;&#x5C31;&#x4E0D;&#x76F8;&#x7B49;&#x4E86;&#x5427;&#xFF1F; &#x6211;&#x5C1D;&#x8BD5;&#x5C06;W&#x521D;&#x59CB;&#x5316;&#x4E3A;0&#xFF0C;&#x800C;b&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x975E;&#x96F6;&#xFF0C;&#x8BAD;&#x7EC3;&#x7684;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x786E;&#x5B9E;&#x6CA1;&#x6709;&#x672C;&#x8D28;&#x5DEE;&#x522B;&#x3002; &#x56E0;&#x6B64;&#x5F97;&#x5230;&#x7ED3;&#x8BBA;&#xFF1A; - W&#x5E94;&#x5F53;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x4EE5;&#x6253;&#x7834;&#x5BF9;&#x79F0;&#x6027; - b&#x53EF;&#x4EE5;&#x521D;&#x59CB;&#x5316;&#x4E3A;0&#xFF0C;&#x5BF9;&#x79F0;&#x6027;&#x662F;&#x7531;W&#x51B3;&#x5B9A;&#x7684; &#x5C06;W&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x968F;&#x673A;&#x6570; &#x6587;&#x4E2D;&#x4F7F;&#x7528;np.random.randn(layers_dims[l], layers_dims[l-1]) * 10&#x6765;&#x521D;&#x59CB;&#x5316;W&#xFF0C;&#x5176;&#x4E2D;np.random.randn(...) &#x751F;&#x6210;&#x7684;&#x968F;&#x673A;&#x6570;&#x670D;&#x4ECE;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;&#x5373;&#xFF1A;&#x5747;&#x503C;&#x4E3A;0&#xFF0C;&#x65B9;&#x5DEE;&#x4E3A;1&#x3002; &#x4E3A;&#x4E86;&#x8BA9;&#x6BCF;&#x6B21;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x548C;&#x4ED6;&#x76F8;&#x540C;&#x4EE5;&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;&#x5728;&#x751F;&#x6210;&#x968F;&#x673A;&#x6570;&#x4E4B;&#x524D;&#x5148;&#x6267;&#x884C;&#x4E86;np.random.seed(3)&#x3002;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x6307;&#x5B9A;&#x968F;&#x673A;&#x6570;&#x7684;&#x751F;&#x6210;&#x79CD;&#x5B50;&#xFF0C;&#x5BF9;&#x4E8E;&#x76F8;&#x540C;&#x7684;&#x79CD;&#x5B50;&#xFF0C;&#x4E4B;&#x540E;&#x751F;&#x6210;&#x7684;&#x968F;&#x673A;&#x6570;&#x5E8F;&#x5217;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#x79CD;&#x5B50;&#xFF0C;&#x5C06;&#x4EE5;&#x7CFB;&#x7EDF;&#x65F6;&#x95F4;&#x4F5C;&#x4E3A;&#x79CD;&#x5B50;&#x3002;&#x7ED3;&#x679C;&#x6BD4;&#x524D;&#x4E00;&#x8F6E;&#x6709;&#x8FDB;&#x6B65;&#xFF1A; He&#x521D;&#x59CB;&#x5316; &#x672C;&#x8282;&#x5728;&#x4E0A;&#x4E00;&#x8282;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x968F;&#x673A;&#x6570;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x4E58;&#x4EE5;\(\sqrt{\frac{2}{n^{[l-1]}}}\)&#x56E0;&#x5B50;&#xFF1A; np.random.randn(layers_dims[l], layers_dims[l-1]) * np.sqrt(2./layers_dims[l-1]) &#x4EC5;&#x4EC5;&#x662F;&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;&#x4E0D;&#x540C;&#xFF0C;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x8D28;&#x7684;&#x98DE;&#x8DC3;&#xFF1A; &#x672C;&#x8282;&#x7ED9;&#x51FA;&#x6700;&#x91CD;&#x8981;&#x4E00;&#x6761;&#x7ED3;&#x8BBA;&#x662F;&#xFF1A; He&#x521D;&#x59CB;&#x5316;&#x65B9;&#x6CD5;&#x6700;&#x9002;&#x7528;&#x4E8E;&#x5F53;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x4E3A;ReLU&#x7684;&#x60C5;&#x51B5; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding2_1_init&#x3002; &#x6B63;&#x5219;&#x5316; &#x6B63;&#x5219;&#x5316;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5F53;&#x6570;&#x636E;&#x91CF;&#x4E0D;&#x591F;&#x5927;&#xFF0C;&#x8BAD;&#x7EC3;&#x51FA;&#x7684;&#x6A21;&#x578B;&#x80FD;&#x5F88;&#x597D;&#x5730;&#x62DF;&#x5408;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x4F46;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x6BD4;&#x8F83;&#x5F31;&#xFF0C;&#x4E0D;&#x80FD;&#x5F88;&#x597D;&#x5730;&#x9884;&#x6D4B;&#x4ECE;&#x6CA1;&#x89C1;&#x8FC7;&#x7684;&#x6570;&#x636E;&#x3002; &#x672C;&#x8282;&#x7684;&#x9898;&#x76EE;&#x662F;&#xFF1A;&#x5F53;&#x6CD5;&#x56FD;&#x961F;&#x95E8;&#x5C06;&#x5F00;&#x7403;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED9;&#x4ED6;&#x4E00;&#x4E2A;&#x7403;&#x843D;&#x70B9;&#x7684;&#x5EFA;&#x8BAE;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x8BE5;&#x7403;&#x603B;&#x80FD;&#x88AB;&#x6CD5;&#x56FD;&#x961F;&#x5458;&#x9876;&#x5230;&#x3002;&#x9898;&#x76EE;&#x7ED9;&#x51FA;&#x4E86;&#x524D;10&#x573A;&#x7684;&#x6240;&#x6709;&#x843D;&#x70B9;&#x4EE5;&#x53CA;&#x662F;&#x5426;&#x88AB;&#x672C;&#x7403;&#x961F;&#x961F;&#x5458;&#x9876;&#x5230;&#x7684;&#x5386;&#x53F2;&#x8BB0;&#x5F55;&#xFF0C;&#x70B9;&#x7684;&#x5750;&#x6807;&#x8868;&#x793A;&#x7403;&#x7684;&#x843D;&#x70B9;&#xFF0C;&#x84DD;&#x8272;&#x4EE3;&#x8868;&#x6CD5;&#x56FD;&#x961F;&#x63A7;&#x7403;&#xFF0C;&#x7EA2;&#x8272;&#x4EE3;&#x8868;&#x5BF9;&#x65B9;&#x63A7;&#x7403;&#xFF1A; &#x4E0D;&#x4F7F;&#x7528;&#x6B63;&#x5219;&#x5316;&#x7684;&#x7248;&#x672C; &#x6267;&#x884C;Coding2_1_reg.tc2&#xFF0C;&#x5B83;&#x8BBE;&#x7F6E;keep_prob=1&#xFF0C;lambd=0&#xFF0C;&#x8FD9;&#x5C06;&#x4E0D;&#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x6B63;&#x5219;&#x5316;&#x65B9;&#x6CD5;&#xFF1A; 1$ python3 -m mywork Coding2_1_reg.tc2 &#x4F7F;&#x7528;L2&#x6B63;&#x5219; &#x63A5;&#x4E0B;&#x6765;&#x4F7F;&#x7528;L2&#x6B63;&#x5219;&#xFF0C;&#x548C;base&#x7248;&#x672C;&#x76F8;&#x6BD4;&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x5904;&#x53D8;&#x5316;&#xFF1A;&#x5728;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x52A0;&#x4E0A;&#x6B63;&#x5219;&#x53C2;&#x6570;&#xFF1A; \[J_{regularized} = \small \underbrace{-\frac{1}{m} \sum\limits_{i = 1}^{m} \large{(}\small y^{(i)}\log\left(a^{[L](i)}\right) + (1-y^{(i)})\log\left(1- a^{[L](i)}\right) \large{)} }_\text{cross-entropy cost} + \underbrace{\frac{1}{m} \frac{\lambda}{2} \sum\limits_l\sum\limits_k\sum\limits_j W_{k,j}^{[l]2} }_\text{L2 regularization cost}\] &#x5728;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x5BF9;\(dW^{[l]}\)&#x7684;&#x8BA1;&#x7B97;&#xFF1A; \[dW^{[l]} = \frac{1}{m}dZ^{[l]}&#xB7;A^{[l-1]} + \underbrace{\frac{&#x3BB;}{m}W^{[l]}}_\text{&#x4E3A;&#x6210;&#x672C;&#x51FD;&#x6570;&#x6DFB;&#x52A0;&#x6B63;&#x5219;&#x53C2;&#x6570;&#x5F15;&#x8D77;&#x7684;&#x53D8;&#x5316;}\] &#x4F7F;&#x7528;L2&#x6B63;&#x5219;&#x5316;&#x4E4B;&#x540E;&#x7684;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; L2&#x6B63;&#x5219;&#x5316;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x8D85;&#x53C2;&#x6570;&#x3BB;&#xFF0C;&#x672C;&#x8282;&#x8BFE;&#x7A0B;&#x5E76;&#x6CA1;&#x6709;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x8BBE;&#x7F6E;&#x5408;&#x7406;&#x7684;&#x3BB;&#x3002;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E00;&#x4E2A;&#x8D8B;&#x52BF;&#xFF1A;&#x3BB;&#x8D8A;&#x5927;&#xFF0C;&#x5BFC;&#x81F4;W&#x8D8A;&#x5C0F;&#xFF0C;&#x5BFC;&#x81F4;&#x6A21;&#x578B;&#x8D8A;&#x503E;&#x5411;&#x4E8E;&#x7EBF;&#x6027;&#xFF0C;&#x4E5F;&#x5C31;&#x6709;&#x66F4;&#x5C0F;&#x7684;&#x65B9;&#x5DEE;&#xFF0C;&#x540C;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x653E;&#x5927;&#x504F;&#x5DEE;&#x3002; &#x4F7F;&#x7528;Dropout&#x6B63;&#x5219; &#x5728;&#x524D;&#x9762;&#x7684;&#x7B14;&#x8BB0;&#x90E8;&#x5206;&#x5DF2;&#x7ECF;&#x8BB2;&#x89E3;&#x4E86;Dropout&#x7684;&#x539F;&#x7406;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#x5206;&#x4E24;&#x6B65;&#xFF1A;&#x4E00;&#x3001;&#x5728;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x65F6;&#x4F7F;&#x7528;&#x56DB;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; 1234D1 = np.random.rand(A1.shape[0], A1.shape[1]) # 1&#x3001;&#x7528;&#x968F;&#x673A;&#x6570;&#x521D;&#x59CB;&#x5316;&#x77E9;&#x9635;D&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x2208;[0, 1]D1 = (D1 &lt; keep_prob) # 2&#x3001;&#x4F7F;&#x7528;keep_prob&#x5C06;&#x77E9;&#x9635;&#x8F6C;&#x6210;0/1&#x503C;A1 = np.multiply(A1, D1) # 3&#x3001;&#x901A;&#x8FC7;&#x548C;D1&#x76F8;&#x4E58;&#x8BA9;A1&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x5931;&#x6D3B;A1 = A1 / keep_prob # 4&#x3001;&#x9664;&#x4EE5;keep_prob&#x786E;&#x4FDD;A1&#x671F;&#x671B;&#x503C;&#x4E0D;&#x53D8; &#x4E8C;&#x3001;&#x5728;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x65F6;&#xFF0C;&#x9664;&#x4E86;&#x6B63;&#x5E38;&#x7684;&#x6B65;&#x9AA4;&#x5B8C;&#x6210;&#x8BA1;&#x7B97;&#x540E;&#xFF0C;&#x8981;&#x4F7F;&#x7528;&#x540C;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#x5BF9;A&#x5B9E;&#x65BD;Dropout&#xFF1A; 1234567dZ3 = A3 - YdW3 = 1./m * np.dot(dZ3, A2.T)db3 = 1./m * np.sum(dZ3, axis=1, keepdims = True)dA2 = np.dot(W3.T, dZ3)dA2 = np.multiply(dA2, D2) dA2 = dA2 / keep_prob &#x65E2;&#x7136;&#x5728;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7684;&#x65F6;&#x5019;&#x5DF2;&#x7ECF;&#x5C06;&#x76F8;&#x5173;&#x7684;&#x8282;&#x70B9;&#x505A;&#x8FC7;&#x5931;&#x6D3B;&#x5904;&#x7406;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x4E0D;&#x5C31;&#x5E94;&#x8BE5;&#x662F;&#x201C;&#x9609;&#x5272;&#x201D;&#x6389;&#x8FD9;&#x4E9B;&#x8282;&#x70B9;&#x7684;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x8FD8;&#x8981;&#x518D;&#x505A;&#x5931;&#x6D3B;&#x624B;&#x672F;&#x5462;&#xFF1F;&#x539F;&#x56E0;&#x662F;&#x5931;&#x6D3B;&#x624B;&#x672F;&#x5E76;&#x6CA1;&#x6709;&#x628A;&#x8282;&#x70B9;&#x6458;&#x9664;&#x6389;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x5931;&#x6D3B;&#x56E0;&#x5B50;&#x4EE4;&#x5176;&#x4E0D;&#x80FD;&#x8D77;&#x4F5C;&#x7528;&#xFF0C;&#x5176;&#x5B9E;&#x8282;&#x70B9;&#x8FD8;&#x5728;&#x3002;&#x800C;&#x5728;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x65F6;&#xFF0C;dA&#x662F;&#x7531;W&#x548C;dZ&#x76F8;&#x4E58;&#x800C;&#x5F97;&#xFF0C;W&#x5E76;&#x6CA1;&#x6709;&#x88AB;&#x5931;&#x6D3B;&#xFF0C;&#x56E0;&#x6B64;&#x8FD8;&#x9700;&#x8981;&#x518D;&#x5BF9;dA&#x505A;&#x4E00;&#x6B21;&#x5931;&#x6D3B;&#x624B;&#x672F;&#x3002; &#x8FD9;&#x662F;&#x4F7F;&#x7528;&#x4E86;Dropout&#x6B63;&#x5219;&#x540E;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6BD4;L2&#x6B63;&#x5219;&#x7565;&#x597D;&#x4E00;&#x4E9B;&#xFF1A; &#x6CE8;&#x610F;&#xFF1A;Dropout&#x6B63;&#x5219;&#x662F;&#x5728;&#x6BCF;&#x8F6E;&#x8FED;&#x4EE3;&#x65F6;&#x90FD;&#x968F;&#x673A;&#x5931;&#x6D3B;&#x67D0;&#x4E9B;&#x8282;&#x70B9;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x6A21;&#x578B;&#x4E0D;&#x8FC7;&#x5EA6;&#x4F9D;&#x8D56;&#x4EFB;&#x4F55;&#x4E00;&#x64AE;&#x8282;&#x70B9;&#x3002; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding2_1_reg&#x3002; &#x68AF;&#x5EA6;&#x68C0;&#x67E5; &#x5728;&#x8BFE;&#x7A0B;&#x5F53;&#x4E2D;&#xFF0C;&#x68AF;&#x5EA6;&#x68C0;&#x67E5;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x7406;&#x89E3;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x8FD0;&#x7528;&#x5BFC;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5F53;&#x3B5;&#x6781;&#x5C0F;&#x65F6;&#x8BA1;&#x7B97;\(f\prime(x)&#x548C;\frac{f(x+&#x3B5;)-f(x-&#x3B5;)}{2&#x3B5;}\)&#x7684;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x975E;&#x5E38;&#x63A5;&#x8FD1;&#xFF0C;&#x8BF4;&#x660E;&#x5BFC;&#x6570;&#x6C42;&#x89E3;&#x662F;&#x6B63;&#x786E;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x5DEE;&#x8F83;&#x5927;&#xFF0C;&#x8BF4;&#x660E;&#x5F88;&#x53EF;&#x80FD;&#x51FA;&#x9519;&#x4E86;&#x3002;&#x53EF;&#x662F;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x7528;&#xFF0C;&#x8BFE;&#x7A0B;&#x5F53;&#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x8BB2;&#x3002; &#x4F5C;&#x4E1A;&#x91CC;&#x8BE6;&#x7EC6;&#x5C55;&#x793A;&#x4E86;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x7528;&#x9014;&#xFF1A;&#x4ED6;&#x8BA4;&#x4E3A;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x77E9;&#x9635;&#x7684;&#x4E00;&#x6B21;&#x8FD0;&#x7B97;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;numpy&#x7684;&#x652F;&#x6301;&#xFF0C;&#x8FD0;&#x7B97;&#x8D77;&#x6765;&#x5C31;&#x50CF;&#x4E24;&#x4E2A;&#x6570;&#x503C;&#x7684;&#x4E00;&#x6B21;&#x8FD0;&#x7B97;&#x4E00;&#x6837;&#xFF0C;&#x51FA;&#x9519;&#x7684;&#x6982;&#x7387;&#x6781;&#x4F4E;&#x3002;&#x4F46;&#x5728;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x4E2D;&#xFF0C;&#x6D89;&#x53CA;&#x6C42;&#x5BFC;&#x8FD0;&#x7B97;&#xFF0C;&#x51FA;&#x9519;&#x7684;&#x6982;&#x7387;&#x5F88;&#x5927;&#xFF0C;&#x800C;&#x4E14;&#x6BCF;&#x8F6E;&#x8FED;&#x4EE3;&#x6D89;&#x53CA;&#x7684;&#x6570;&#x636E;&#x91CF;&#x4E5F;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x4E00;&#x65E6;&#x51FA;&#x4E86;&#x9519;&#xFF0C;&#x5F88;&#x96BE;&#x8FFD;&#x67E5;&#x3002;&#x6240;&#x4EE5;&#x68AF;&#x5EA6;&#x68C0;&#x67E5;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5B9A;&#x4F4D;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x5177;&#x4F53;&#x8FC7;&#x7A0B;&#x662F;&#xFF1A; &#x968F;&#x673A;&#x521D;&#x59CB;&#x5316;\(X, Y, W^{[1]}, b^{[1]}, W^{[2]}, b^{[2]}, ..., W^{[L]}, b^{[L]}\) &#x901A;&#x8FC7;&#x4E00;&#x8F6E;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x548C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA; \[dW^{[1]}, db^{[1]}, dW^{[2]}, db^{[2]}, ..., dW^{[L]}, db^{[L]}\] &#x5C06;&#x8FD9;&#x4E9B;&#x77E9;&#x9635;&#x6241;&#x5E73;&#x5316;&#x4E3A;&#x591A;&#x884C;&#x4E00;&#x5217;&#x7684;&#x5411;&#x91CF;&#xFF1A; \[grad=\left\lgroup \matrix{dW_1^{[1]} \cr dW_2^{[1]} \cr ... \cr dW_{n^{[1]}}^{[1]} \cr ... \cr db_1^{[1]}\cr db_2^{[1]} \cr ... \cr dW_1^{[2]} \cr ... \cr db_{n^{[L]}}^{[L]}} \right \rgroup\] &#x5C06;&#x6210;&#x672C;&#x51FD;&#x6570;\(J(W^{[1]}, b^{[1]}, W^{[2]}, b^{[2]}, ..., W^{[L]}, b^{[L]})\)&#x6241;&#x5E73;&#x5316;&#x4E3A;&#xFF1A; \[J(W_1^{[1]}, W_2^{[1]}, ..., W_{n^{[1]}}^{[1]}, ..., b_1^{[1]}, b_2^{[1]}, ..., W_1^{[2]} \; , ..., b_{n^{[L]}}^{[L]})\] &#x8BA1;&#x7B97;&#xFF1A; \[gradapprox=\left\lgroup \matrix{\mathop{lim}\limits_{&#x3B5;&#x2192;0}\frac{J(W_1^{[1]}+&#x3B5;) - J(W_1^{[1]}-&#x3B5;)}{2&#x3B5;}) \cr \mathop{lim}\limits_{&#x3B5;&#x2192;0}\frac{J(W_2^{[1]}+&#x3B5;) - J(W_2^{[1]}-&#x3B5;)}{2&#x3B5;}) \cr ... \cr \mathop{lim}\limits_{&#x3B5;&#x2192;0}\frac{J(b_{n^{[L]}}^{[L]}+&#x3B5;) - J(b_{n^{[L]}}^{[L]}-&#x3B5;)}{2&#x3B5;}} \right \rgroup\] &#x4EE3;&#x5165;&#x6B27;&#x5F0F;&#x8DDD;&#x79BB;&#x516C;&#x5F0F;&#xFF1A; \[\frac{\Vert{grad - gradapprox}\Vert_2}{\Vert{grad}\Vert_2 + \Vert{gradapprox}\Vert_2}\] &#x5982;&#x679C;&#x8BE5;&#x503C;&#x5C0F;&#x4E8E;1-e7&#x5219;&#x8BF4;&#x660E;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x662F;&#x6B63;&#x786E;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x6709;bug&#x3002; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding2_1_gc&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（三）]]></title>
    <url>%2F2018%2F03%2F17%2F2018%2F0317DeepLearningAI04%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x300B;&#x7B2C;&#x56DB;&#x5468;&#x300A;&#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x3002; &#x672C;&#x8282;&#x7684;&#x9898;&#x76EE;&#x662F;&#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x53EA;&#x662F;&#x628A;&#x7F51;&#x7EDC;&#x7684;&#x5C42;&#x6570;&#x5EF6;&#x5C55;&#x4E3A;&#x53D8;&#x91CF;&#x3002;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x8FD8;&#x662F;&#x524D;&#x4E24;&#x8282;&#x7684;&#x65B9;&#x6CD5;&#x2014;&#x2014;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x3001;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x3001;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x3002; 4.1 &#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC; &#x672C;&#x8282;&#x5185;&#x5BB9;&#x662F;&#x5728;&#x4E0A;&#x4E00;&#x8282;&#x53CC;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5C06;&#x7F51;&#x7EDC;&#x5C42;&#x6570;&#x6269;&#x5C55;&#x4E3A;&#x53D8;&#x91CF;&#x3002;&#x8BA8;&#x8BBA;L&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6B63;&#x5411;&#x548C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5E76;&#x6CA1;&#x6709;&#x5F15;&#x5165;&#x4EC0;&#x4E48;&#x65B0;&#x77E5;&#x8BC6;&#x3002; &#x5728;&#x547D;&#x540D;&#x4F53;&#x7CFB;&#x4E2D;&#x5F15;&#x5165;&#x4E86;L&#x8868;&#x793A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5C42;&#x6570;&#xFF0C;\(n^{[l]}\)&#x8868;&#x793A;&#x7B2C;l&#x5C42;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#xFF0C;\(a^{[l]}\)&#x8868;&#x793A;&#x7B2C;l&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x3002; &#x5728;&#x4E0B;&#x56FE;&#x4E2D;&#xFF1A; L=4&#xFF0C; \(n^{[1]}=5, n^{[2]}=5, n^{[3]}=3, n{[4]}=1\) 4.2 &#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x524D;&#x5411;&#x4F20;&#x64AD; &#x8F93;&#x5165;X&#xFF1A; \(\begin{cases}z^{[1]}=w^{[1]}&#xB7;x + b^{[1]}=w^{[1]}&#xB7;a^{[0]} + b^{[1]} \\ a^{[1]} = g^{[1]}(z^{[1]}) \end{cases}\\ \begin{cases}z^{[2]}=w^{[2]}&#xB7;a^{[1]} + b^{[2]} \\ a^{[2]} = g^{[2]}(z^{[2]})\end{cases}\\ ... \\ \begin{cases}z^{[L]}=w^{[L]}&#xB7;a^{[L-1]} + b^{[L]} \\ a^{[L]} = g^{[L]}(z^{[L]})=&#x177;\end{cases}\) &#x5411;&#x91CF;&#x5316;&#x540E;&#xFF1A; \(\begin{cases}Z^{[1]}=W^{[1]}&#xB7;X + b^{[1]}=W^{[1]}&#xB7;A^{[0]} + b^{[1]} \\ A^{[1]} = g^{[1]}(Z^{[1]}) \end{cases}\\ \begin{cases}Z^{[2]}=W^{[2]}&#xB7;A^{[1]} + b^{[2]} \\ A^{[2]} = g^{[2]}(Z^{[2]})\end{cases}\\ ... \\ \begin{cases}Z^{[L]}=W^{[L]}&#xB7;A^{[L-1]} + b^{[L]} \\ A^{[L]} = g^{[L]}(Z^{[L]})=&#x176;\end{cases}\) 4.3 &#x6838;&#x5BF9;&#x77E9;&#x9635;&#x7684;&#x7EF4;&#x6570; \(X=\begin{bmatrix}x_{1}\\x_{2}\\\cdots\\x_{(n^{[0]})}\end{bmatrix}\in\mathbb{R}^{n^{[0]}&#xD7;1}&#xFF0C;\; W^{[1]}=\begin{bmatrix}&#x2014;w_{1}^{[1]}&#x2014; \cr &#x2014;w_{2}^{[1]}&#x2014; \cr ... \cr &#x2014;w_{n^{[1]}}^{[1]}&#x2014; \end{bmatrix}\in\mathbb{R}^{n^{[1]}&#xD7;n^{[0]}}&#xFF0C;\; b^{[1]}\in\mathbb{R}^{n^{[1]}&#xD7;1}\\ &#x4E8E;&#x662F;W^{[1]}&#xB7;X\in\mathbb{R}^{n^{[1]}&#xD7;1} &#xFF0C;\; Z^{[1]}=W^{[1]}&#xB7;X + b^{[1]}\in\mathbb{R}^{n^{[1]}&#xD7;1} &#xFF0C;\; A^{[1]}\in\mathbb{R}^{n^{[1]}&#xD7;1}\) \(W^{[2]}=\begin{bmatrix}&#x2014;w_{1}^{[2]}&#x2014; \cr &#x2014;w_{2}^{[2]}&#x2014; \cr ... \cr &#x2014;w_{n^{[2]}}^{[2]}&#x2014; \end{bmatrix}\in\mathbb{R}^{n^{[2]}&#xD7;n^{[1]}}&#xFF0C;\; b^{[2]}\in\mathbb{R}^{n^{[2]}&#xD7;1}\\ &#x4E8E;&#x662F;W^{[2]}&#xB7;A^{[1]}\in\mathbb{R}^{n^{[2]}&#xD7;1} &#xFF0C;\; Z^{[2]}=W^{[2]}&#xB7;A^{[1]} + b^{[2]}\in\mathbb{R}^{n^{[2]}&#xD7;1} &#xFF0C;\; A^{[2]}\in\mathbb{R}^{n^{[2]}&#xD7;1}\) \(&#x540C;&#x7406;W^{[l]}&#xB7;A^{[l]}\in\mathbb{R}^{n^{[l]}&#xD7;1} &#xFF0C;\; Z^{[l]}=W^{[l]}&#xB7;A^{[l-1]} + b^{[l]}\in\mathbb{R}^{n^{[l]}&#xD7;1} &#xFF0C;\; A^{[l]}\in\mathbb{R}^{n^{[l]}&#xD7;1}\) 4.4 &#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x6DF1;&#x5C42;&#x8868;&#x793A; &#x672C;&#x8282;&#x4EE5;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x4E3A;&#x4F8B;&#xFF0C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x6D45;&#x5C42;&#x795E;&#x7ECF;&#x5143;&#x53CD;&#x6620;&#x7684;&#x662F;&#x56FE;&#x50CF;&#x7684;&#x7EC6;&#x90E8;&#x7279;&#x5F81;&#xFF0C;&#x6BD4;&#x5982;&#x68F1;&#x89D2;&#x3001;&#x8FB9;&#x7F18;&#xFF0C;&#x8D8A;&#x5F80;&#x6DF1;&#x5C42;&#xFF0C;&#x8D8A;&#x53CD;&#x5E94;&#x56FE;&#x50CF;&#x7684;&#x6574;&#x4F53;&#x7279;&#x5F81;&#xFF0C;&#x4F8B;&#x5982;&#x65E0;&#x5173;&#x3001;&#x4EE5;&#x53CA;&#x518D;&#x5F80;&#x6DF1;&#x4E86;&#x53CD;&#x6620;&#x51FA;&#x76F8;&#x8C8C;&#x7279;&#x5F81;&#x3002; &#x6240;&#x4EE5;&#x76F4;&#x89C2;&#x5730;&#x7406;&#x89E3;&#xFF0C;&#x5982;&#x679C;&#x8BC6;&#x522B;&#x201C;&#x56FE;&#x50CF;&#x662F;&#x5173;&#x4E8E;&#x4EBA;&#x3001;&#x72D7;&#x3001;&#x8FD8;&#x662F;&#x732B;&#x201D;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x7528;&#x8F83;&#x6D45;&#x5C42;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x8BC6;&#x522B;&#x5177;&#x4F53;&#x662F;&#x54EA;&#x4E2A;&#x4EBA;&#x3001;&#x54EA;&#x6761;&#x72D7;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x66F4;&#x6DF1;&#x5C42;&#x7F51;&#x7EDC;&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x89E3;&#x91CA;&#x4F9D;&#x7136;&#x662F;&#x9A97;&#x76F4;&#x89C9;&#x7684;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5C42;&#x6B21;&#x8D8A;&#x6DF1;&#x8D8A;&#x80FD;&#x62BD;&#x8C61;&#x6574;&#x4F53;&#x7279;&#x5F81;&#xFF1F;&#x4EE5;&#x53CA;&#x7A76;&#x7ADF;&#x9700;&#x8981;&#x591A;&#x6DF1;&#xFF0C;&#x672C;&#x6587;&#x5E76;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x89E3;&#x91CA;&#x3002; 4.5 &#x642D;&#x5EFA;&#x6DF1;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5757; &#x6839;&#x636E;&#x672C;&#x8282;4.2&#x5DF2;&#x7ECF;&#x5F97;&#x51FA;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#xFF1A; \(\begin{cases}Z^{[l]}=W^{[l]}&#xB7;A^{[l-1]} + b^{[l]} &#x2026;&#x2460;\\ A^{[l]} = g^{[l]}(Z^{[l]}) &#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2461;\end{cases}\) &#x518D;&#x770B;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#xFF0C;&#x56DE;&#x987E;&#x5728;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x548C;&#x6210;&#x672C;&#x51FD;&#x6570;&#x4E2D;&#x5F15;&#x5165;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A; \(L(&#x177;, y)=-(y\log&#x177; + (1-y)\log(1-&#x177;))\) &#x56E0;&#x6B64;&#x5BF9;&#x4E8E;L&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6765;&#x8BF4;&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x5173;&#x4E8E;y&#x548C;&#x8F93;&#x51FA;&#x5C42;&#x7684;&#x51FD;&#x6570;&#xFF1A; \(L(a, y)=-(y\log{a} + (1-y)\log{(1-a)})\) &#x5176;&#x4E2D;a&#x5373;\(A^{[L]}\)&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x7531;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x4E2D;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x53EF;&#x77E5;&#xFF1A; \(da^{[L]}=-\frac{y}{a^{[L]}} + \frac{(1-y)}{(1-a^{[L]}}\) \(dZ^{[L]}=\frac{dL}{da^{[L]}}&#xB7;\frac{da^{[L]}}{dZ^{[L]}}=da^{[L]}&#xB7;g^{[L]}\prime(Z^{[L]})&#x3000;&#x3000;&#x540E;&#x534A;&#x90E8;&#x5206;&#x662F;&#x6839;&#x636E;&#x2461;&#x5F97;&#x51FA;\) \(dW^{[L]}=\frac{dL}{dZ^{[L]}}&#xB7;\frac{dZ^{[L]}}{dW^{[L]}}=\frac{1}{m}dZ^{[L]}&#xB7;A^{[L-1]}&#x3000;&#x3000;&#x540E;&#x534A;&#x90E8;&#x5206;&#x662F;&#x6839;&#x636E;&#x2460;&#x5F97;&#x51FA;\) \(db^{[L]}=\frac{1}{m}np.sum(dZ^{[L]}, axis=1, keepdims=True)\) \(dA^{[L-1]}\)&#x600E;&#x4E48;&#x6C42;&#x5462;&#xFF1F;&#x5B83;&#x662F;\(\frac{dL}{dA^{[L-1]}}\)&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x53EF;&#x662F;dL&#x662F;&#x5173;&#x4E8E;\(A^{[L]}\)&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x770B;&#x4E0D;&#x51FA;&#x4E0E;\(A^{[L]}\)&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x2460;&#x548C;&#x2461;&#x53EF;&#x5F97;&#x5230;\(A^{[L]}&#x548C;A^{[L-1]}\)&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x6839;&#x636E;&#x94FE;&#x5F0F;&#x6CD5;&#x5219;&#xFF1A; \(dA^{[L-1]}=\frac{dL}{dA^{[L]}}&#xB7;\frac{dA^{[L]}}{dA^{[L-1]}}\\ =\frac{dL}{dA^{[L]}}&#xB7;\frac{dA^{[L]}}{dZ^{[L]}}&#xB7;\frac{dZ^{[L]}}{dA^{[L-1]}}&#x3000;&#x3000;&#x6839;&#x636E;&#x2461;\\ =\frac{dL}{dZ^{[L]}}&#xB7;\frac{dZ^{[L]}}{dA^{[L-1]}}&#x3000;&#x3000;&#x5408;&#x5E76;&#x524D;&#x4E24;&#x9879;\\ =dZ^{[L]}&#xB7;W^{[L]}&#x3000;&#x3000;&#x6839;&#x636E;&#x2460;\\\) &#x53CD;&#x5411;&#x4F20;&#x64AD;&#x603B;&#x7ED3;&#x5982;&#x4E0B;&#xFF1A; \(\begin{cases}dZ^{[l]}=da^{[l]}&#xB7;g^{[l]}\prime(Z^{[l]})\\ dW^{[l]}=\frac{1}{m}dZ^{[l]}&#xB7;A^{[l-1]} \\ db^{[l]}=\frac{1}{m}np.sum(dZ^{[l]}, axis=1, keepdims=True)\\ dA^{[l-1]}=dZ^{[l]}&#xB7;W^{[l]}\end{cases}\) &#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x6784;&#x9020;Z&#x548C;A&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#x6839;&#x636E;Z&#x3001;A&#x8BA1;&#x7B97;dW&#x548C;db&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x7B97;&#x6CD5;&#x4E3B;&#x4F53;&#x5219;&#x662F;&#x6839;&#x636E;&#x8D85;&#x53C2;&#x6570;&#x5FAA;&#x73AF;&#x8BA1;&#x7B97;W&#x548C;b&#xFF1A; 4.6 &#x524D;&#x5411;&#x4F20;&#x64AD;&#x548C;&#x53CD;&#x5411;&#x4F20;&#x64AD; &#x4E0A;&#x4E00;&#x8282;&#x5DF2;&#x7ECF;&#x628A;&#x4E24;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x63A8;&#x5BFC;&#x51FA;&#x6765;&#x4E86;&#x3002; 4.7 &#x53C2;&#x6570;VS&#x8D85;&#x53C2;&#x6570; &#x5728;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7B97;&#x6CD5;&#x4E2D;&#xFF0C;&#x53C2;&#x6570;&#x662F;&#x6307;&#xFF1A;\(W^{[1]}&#x3001;b^{[1]}&#x3001;W^{[2]}&#x3001;b^{[2]}&#x2026;&#x2026;\) &#x8D85;&#x53C2;&#x6570;&#x662F;&#x6307;&#xFF1A;&#x5B66;&#x4E60;&#x7387;&#x3B1;&#x3001;&#x8FED;&#x4EE3;&#x6B21;&#x6570;#iterations&#x3001;&#x9690;&#x85CF;&#x5C42;&#x6570; #hidden layers&#x3001;&#x6FC0;&#x6D3B;&#x51FD;&#x6570; 4.8 &#x8FD9;&#x548C;&#x5927;&#x8111;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB; &#x672C;&#x8282;&#x89E3;&#x91CA;&#x4E86;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x4E0E;&#x5927;&#x8111;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x5F62;&#x4F3C;&#x4E4B;&#x5904;&#xFF0C;&#x4F46;Andrew&#x4E5F;&#x63D0;&#x5230;&#x8FD9;&#x79CD;&#x5F62;&#x4F3C;&#x88AB;&#x8D8A;&#x6765;&#x8D8A;&#x5C11;&#x5F97;&#x63D0;&#x53CA;&#xFF0C;&#x56E0;&#x4E3A;&#x4EBA;&#x8111;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x81F3;&#x4ECA;&#x5E76;&#x672A;&#x5B8C;&#x5168;&#x5F04;&#x6E05;&#x695A;&#x3002;&#x201C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x201D;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x542C;&#x8D77;&#x6765;&#x5F88;&#x9AD8;&#x5927;&#x4E0A;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5176;&#x5B9E;&#x4E0E;&#x4EBA;&#x8111;&#x5E76;&#x6CA1;&#x6709;&#x592A;&#x5927;&#x5173;&#x7CFB;&#x3002; &#x4F5C;&#x4E1A; &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x6846;&#x67B6; &#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;W&#x548C;b &#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x5B8C;&#x6210;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#xFF0C;&#x8BA1;&#x7B97;&#x5404;&#x5C42;&#x7684;Z&#x548C;A&#xFF1A; \(Z^{[l]}=W^{[l]}&#xB7;A^{[l-1]}&#xFF0C;\; A^{[l]}=g^{[l]}(Z^{[l]})\) &#x7B2C;&#x4E09;&#x6B65;&#xFF0C;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF0C;\(cost=-\sum(Y\log{A^{[L]} + (1 - Y)log{(1-A^{[L]})}}\) &#x7B2C;&#x56DB;&#x6B65;&#xFF0C;&#x5B8C;&#x6210;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#xFF0C;&#x8BA1;&#x7B97;&#x5404;&#x5C42;&#x7684;dW&#x3001;db&#x548C;&#x540E;&#x4E00;&#x5C42;dA&#xFF1A; \(dW^{[l]}=\frac{1}{m}dZ^{[l]}&#xFF0C; \; db^{[l]}=\frac{1}{m}np.sum(dZ^{[l]})&#xFF0C; \; dA^{[l-1]}=dZ^{[l]}&#xB7; W^{[l]}\) &#x7B2C;&#x4E94;&#x6B65;&#xFF0C;&#x66F4;&#x65B0;W&#x548C;b&#xFF1A; \(W := W - &#x3B1;&#xB7;dW&#xFF0C; \; b := b - &#x3B1;&#xB7; db\) &#x7B2C;&#x516D;&#x6B65;&#xFF0C;&#x8DF3;&#x5230;&#x7B2C;&#x4E8C;&#x6B65;&#x4E0D;&#x65AD;&#x5FAA;&#x73AF;&#xFF0C;&#x76F4;&#x5230;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7684;&#x53D8;&#x5316;&#x7387;&#x4F4E;&#x4E8E;&#x67D0;&#x4E2A;&#x9608;&#x503C; &#x7B2C;&#x4E03;&#x6B65;&#xFF0C;&#x4F7F;&#x7528;&#x8FED;&#x4EE3;&#x8BAD;&#x7EC3;&#x51FA;&#x7684;W&#x548C;b&#xFF0C;&#x8F93;&#x5165;&#x5F85;&#x9884;&#x6D4B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8BA1;&#x7B97;&#x8F93;&#x51FA;&#x5C42;&#xFF0C;&#x5F97;&#x5230;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x3002; &#x5176;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B65;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x4ECE;&#x8F93;&#x5165;&#x5C42;&#x5230;&#x8F93;&#x51FA;&#x5C42;&#x9010;&#x5C42;&#x8BA1;&#x7B97;&#x51FA;&#x5404;&#x5C42;&#x5404;&#x8282;&#x70B9;&#x7684;A&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x4E0B;&#x4E00;&#x6B65;&#x8BA1;&#x7B97;&#x51FA;&#x6210;&#x672C;&#x51FD;&#x6570;&#x3002;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x6BD4;&#x8F83;&#x4E24;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7684;&#x53D8;&#x5316;&#x7387;&#xFF0C;&#x4EE5;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x505C;&#x6B62;&#x5B66;&#x4E60;&#x3002;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x4ECE;&#x8F93;&#x51FA;&#x5C42;&#x5230;&#x8F93;&#x5165;&#x5C42;&#x9010;&#x5C42;&#x8BA1;&#x7B97;&#x5404;&#x5C42;&#x5404;&#x8282;&#x70B9;&#x7684;dW&#x548C;db&#xFF0C;&#x4EE5;&#x4FBF;&#x8BA1;&#x7B97;&#x51FA;&#x4E0B;&#x4E00;&#x8F6E;&#x8FED;&#x4EE3;&#x7684;W&#x548C;b&#x3002; &#x53C2;&#x6570;&#x521D;&#x59CB;&#x5316; &#x8BE5;&#x51FD;&#x6570;&#x4F20;&#x5165;&#x5404;&#x5C42;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x751F;&#x6210;&#x5404;&#x5C42;&#x8282;&#x70B9;&#x7684;W&#x3001;b&#x7684;&#x521D;&#x59CB;&#x5316;&#x503C;&#xFF1A; 12345678910111213141516171819def initialize_parameters_deep(self, layer_dims): &quot;&quot;&quot; Arguments: layer_dims -- &#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x8282;&#x70B9;&#x4E2A;&#x6570;[n0, n1, ..., nl] Returns: parameters -- {&apos;W1&apos;:n1&#xD7;n0&#x7684;&#x6570;&#x7EC4;, &apos;b1&apos;:n1&#xD7;1&#x7684;&#x6570;&#x7EC4;, &apos;W2&apos;:n2&#xD7;n1&#x7684;&#x6570;&#x7EC4;, &apos;b2&apos;:n2&#xD7;1&#x7684;&#x6570;&#x7EC4;, ...} W&#x6570;&#x7EC4;&#x4F7F;&#x7528;randn*0.01&#x586B;&#x5145;&#xFF0C;b&#x6570;&#x7EC4;&#x4F7F;&#x7528;0&#x586B;&#x5145; &quot;&quot;&quot; np.random.seed(3) parameters = {} L = len(layer_dims) # number of layers in the network for l in range(1, L): parameters[&apos;W&apos; + str(l)] = np.random.randn(layer_dims[l],layer_dims[l-1]) * 0.01 parameters[&apos;b&apos; + str(l)] = np.zeros((layer_dims[l], 1)) ... return parameters &#x524D;&#x5411;&#x4F20;&#x64AD; &#x524D;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x7531;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x5B8C;&#x6210;&#xFF1A;linear_forward&#x3001;linear_activation_forward&#x3001;L_model_forward&#x3002; L_model_forward&#x662F;&#x524D;&#x5411;&#x4F20;&#x64AD;&#x7684;&#x4E3B;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x63A5;&#x6536;&#x8F93;&#x5165;&#x5C42;&#x53C2;&#x6570;X&#x548C;&#x5404;&#x5C42;W&#x3001;b&#xFF0C;&#x4ECE;&#x5DE6;&#x5411;&#x53F3;&#x904D;&#x5386;&#xFF0C;&#x6839;&#x636E;&#x524D;&#x4E00;&#x5C42;&#x7684;A&#x8BA1;&#x7B97;&#x540E;&#x4E00;&#x5C42;&#x7684;A&#xFF0C;&#x5E76;&#x7F13;&#x5B58;&#x5404;&#x5C42;(Z&#x3001;W&#x548C;b)&#xFF1A; 1234567891011121314151617181920212223242526272829def L_model_forward(self, X, parameters): &quot;&quot;&quot; &#x5B9E;&#x73B0;&#x524D;&#x5411;&#x7B97;&#x6CD5;&#xFF0C;&#x6839;&#x636E;&#x8F93;&#x5165;&#x5C42;X&#x548C;&#x5404;&#x5C42;W&#x3001;b&#x8BA1;&#x7B97;&#x5404;&#x5C42;Z&#x3001;A&#x3002;&#x9690;&#x85CF;&#x5C42;&#x4F7F;&#x7528;RELU&#x3001;&#x8F93;&#x51FA;&#x5C42;&#x4F7F;&#x7528;sigmoid&#x3002; Arguments: X -- &#x8F93;&#x5165;&#x5C42; parameters -- &#x5404;&#x5C42;W&#x548C;b Returns: AL -- &#x8F93;&#x51FA;&#x5C42;A caches -- &#x5404;&#x5C42;(Z, prev_A, W, b) &quot;&quot;&quot; caches = [] A = X L = len(parameters) // 2 # number of layers in the neural network # Implement [LINEAR -&gt; RELU]*(L-1). Add &quot;cache&quot; to the &quot;caches&quot; list. for l in range(1, L): A_prev = A ... A, cache = self.linear_activation_forward(A_prev, parameters[&quot;W&quot; + str(l)], parameters[&quot;b&quot; + str(l)], activation = &apos;relu&apos;) caches.append(cache) ... AL, cache = self.linear_activation_forward(A, parameters[&quot;W&quot; + str(L)], parameters[&quot;b&quot; + str(L)], activation = &apos;sigmoid&apos;) caches.append(cache) ... return AL, caches &#x9690;&#x85CF;&#x5C42;&#x4F7F;&#x7528;&#x7684;&#x662F;RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x8F93;&#x51FA;&#x5C42;&#x4F7F;&#x7528;sigmoid&#x4F5C;&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x8F93;&#x51FA;&#x5C42;&#x7684;A&#x548C;&#x5404;&#x5C42;(Z, prev_A, W, b) &#x6210;&#x672C;&#x51FD;&#x6570; &#x6210;&#x672C;&#x51FD;&#x6570;&#x662F;&#x8FDE;&#x63A5;&#x524D;&#x5411;&#x4F20;&#x64AD;&#x548C;&#x540E;&#x5411;&#x4F20;&#x64AD;&#x7684;&#x67A2;&#x7EBD;&#xFF0C;&#x56E0;&#x4E3A;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x8FED;&#x4EE3; \(W:=W-&#x3B1;&#xB7;dW \\ b:=b-&#x3B1;&#xB7;db\) &#x4E0D;&#x65AD;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;\(cost = -&#x3A3;(Y\log{A^{[L]}} + (1-Y)\log{(1-A^{[L]})})\)&#x662F;&#x6307;&#x53D8;&#x5316;&#x7387;&#x8FBE;&#x5230;&#x67D0;&#x4E2A;&#x9608;&#x503C;&#x4EE5;&#x4E0B;&#x3002; 123456789def compute_cost(self, AL, Y): ... m = Y.shape[1] ... cost = -np.sum(np.multiply(Y, np.log(AL)) + np.multiply(1-Y, np.log(1-AL))) / m cost = np.squeeze(cost) ... return cost &#x540E;&#x5411;&#x4F20;&#x64AD; &#x540E;&#x5411;&#x4F20;&#x64AD;&#x7684;&#x6838;&#x5FC3;&#x7B97;&#x6CD5;&#x5C31;&#x662F;&#xFF0C;&#x4ECE;&#x53F3;&#x5411;&#x5DE6;&#x9010;&#x5C42;&#x904D;&#x5386;&#xFF0C;&#x6839;&#x636E;&#x5404;&#x5C42;\(dA^{[l]}\)&#x8BA1;&#x7B97;\(dW^{[l]}&#x3001;db^{[l]}&#x548C;dA^{[l-1]}\)&#x3002;&#x6839;&#x636E;&#x6210;&#x672C;&#x51FD;&#x6570;&#x53EF;&#x77E5;&#xFF1A; \(dA^{L} = -\frac{Y}{A^{L}} - \frac{1-Y}{1-A^{L}}\) &#x5728;&#x540E;&#x5411;&#x4F20;&#x64AD;&#x4E2D;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x516C;&#x5F0F;&#x662F;&#xFF1A; \(dW^{[l]} = \frac{1}{m}dZ^{[l]}&#xB7;A^{[l-1]}\) \(db^{[l]} = \frac{1}{m}np.sum(dZ^{[l]})\) \(dA^{[l-1]} = dZ^{[l]}&#xB7;W^{[l]}\) 123456789101112131415161718192021222324def L_model_backward(self, AL, Y, caches): &quot;&quot;&quot; &#x6839;&#x636E;AL&#x548C;Y&#x8BA1;&#x7B97;&#x5404;&#x5C42;dA&#x3001;dW&#x548C;db &quot;&quot;&quot; grads = {} L = len(caches) # the number of layers m = AL.shape[1] Y = Y.reshape(AL.shape) # after this line, Y is the same shape as AL dAL = - (np.divide(Y, AL) - np.divide(1 - Y, 1 - AL)) ... current_cache = caches[L - 1] grads[&quot;dA&quot; + str(L)], grads[&quot;dW&quot; + str(L)], grads[&quot;db&quot; + str(L)] = self.linear_activation_backward(dAL, current_cache, activation = &quot;sigmoid&quot;) # &#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#xFF0C;&#x9010;&#x5C42;&#x904D;&#x5386;&#xFF0C;&#x8BA1;&#x7B97;&#x6BCF;&#x4E00;&#x5C42;&#x7684;dA&#x3001;dW&#x548C;db for l in reversed(range(L - 1)): ... current_cache = caches[l] dA_prev_temp, dW_temp, db_temp = self.linear_activation_backward(grads[&quot;dA&quot; + str(l + 2)], current_cache, activation = &quot;relu&quot;) grads[&quot;dA&quot; + str(l + 1)] = dA_prev_temp grads[&quot;dW&quot; + str(l + 1)] = dW_temp grads[&quot;db&quot; + str(l + 1)] = db_temp return grads &#x524D;&#x5411;&#x4F20;&#x64AD;&#x548C;&#x540E;&#x5411;&#x4F20;&#x64AD;&#x7684;&#x4E3B;&#x903B;&#x8F91;&#x90FD;&#x5F88;&#x6E05;&#x6670;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x5F80;&#x5B50;&#x51FD;&#x6570;&#x91CC;&#x6DF1;&#x5165;&#x4E86;&#x3002; &#x5728;&#x8BA1;&#x7B97;dAL&#x65F6;&#x4F7F;&#x7528;&#x4E86;&#x77E9;&#x9635;&#x7684;&#x9664;&#x6CD5;&#xFF0C;&#x8FD9;&#x662F;&#x600E;&#x4E48;&#x7B97;&#x7684;&#x5462;&#xFF1F; &#x66F4;&#x65B0;&#x53C2;&#x6570; &#x6B63;&#x5411;&#x4F20;&#x64AD;+&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x5B8C;&#x6210;&#x4E00;&#x8F6E;&#x7684;&#x6700;&#x7EC8;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x66F4;&#x65B0;&#x53C2;&#x6570;&#xFF1A;\(W:=W-&#x3B1;&#xB7;dW &#xFF0C;\; b:=b-&#x3B1;&#xB7;db\) 123456789def update_parameters(self, parameters, grads, learning_rate): ... L = len(parameters) // 2 # number of layers in the neural network ... for l in range(L): parameters[&quot;W&quot; + str(l+1)] = parameters[&quot;W&quot; + str(l+1)] - learning_rate * grads[&quot;dW&quot; + str(l+1)] parameters[&quot;b&quot; + str(l+1)] = parameters[&quot;b&quot; + str(l+1)] - learning_rate * grads[&quot;db&quot; + str(l+1)] return parameters &#x6A21;&#x578B;&#x4E3B;&#x4F53;&#x903B;&#x8F91; &#x6A21;&#x578B;&#x7684;&#x4E3B;&#x4F53;&#x903B;&#x8F91;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x548C;&#x6E05;&#x6670;&#xFF1A; 12345678910111213141516171819def L_layer_model(self, X, Y, layers_dims, learning_rate = 0.0075, num_iterations = 3000, print_cost=False):#lr was 0.009 np.random.seed(1) costs = [] # keep track of cost # &#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570; parameters = self.initialize_parameters_deep(layers_dims) # &#x7ECF;&#x8FC7;num_iterations&#x8F6E;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D; for i in range(0, num_iterations): # &#x524D;&#x5411;&#x4F20;&#x64AD; AL, caches = self.L_model_forward(X, parameters) # &#x6210;&#x672C;&#x51FD;&#x6570; cost = self.compute_cost(AL, Y) # &#x540E;&#x5411;&#x4F20;&#x64AD; grads = self.L_model_backward(AL, Y, caches) # &#x66F4;&#x65B0;&#x53C2;&#x6570; parameters = self.update_parameters(parameters, grads, learning_rate) ... ... return parameters &#x95EE;&#x9898; &#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7B97;&#x6CD5;&#x5176;&#x5B9E;&#x548C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5E76;&#x6CA1;&#x6709;&#x592A;&#x5927;&#x5173;&#x8054;&#xFF0C;&#x4ED6;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x6309;&#x7167;&#x56FA;&#x5B9A;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x9009;&#x62E9;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x5582;&#x5165;&#x6570;&#x636E;&#x3002; &#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF0C;&#x4E00;&#x52B3;&#x6C38;&#x9038;&#xFF01;&#x4F46;&#x662F;&#x522B;&#x9AD8;&#x5174;&#x592A;&#x65E9;&#x4E86;&#xFF0C;&#x4E5F;&#x6B63;&#x56E0;&#x4E3A;&#x6B64;&#xFF0C;&#x8DD1;&#x8FD9;&#x6837;&#x7684;&#x4EE3;&#x7801;&#x603B;&#x611F;&#x89C9;&#x6709;&#x70B9;&#x50CF;&#x649E;&#x5927;&#x8FD0;&#xFF0C;&#x5982;&#x679C;&#x5F97;&#x4E0D;&#x5230;&#x9884;&#x671F;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5B8C;&#x5168;&#x4E0D;&#x77E5;&#x9053;&#x4ECE;&#x4F55;&#x4E0B;&#x624B;&#x6765;&#x6539;&#x8FDB;&#x3002; &#x6211;&#x6700;&#x521D;&#x8DD1;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728$ python3 -m mywork Coding1_3.tc3Cost after iteration 0: 0.693148Cost after iteration 100: 0.678011Cost after iteration 200: 0.667600Cost after iteration 300: 0.660422Cost after iteration 400: 0.655458Cost after iteration 500: 0.652013Cost after iteration 600: 0.649616Cost after iteration 700: 0.647942Cost after iteration 800: 0.646770Cost after iteration 900: 0.645947Cost after iteration 1000: 0.645368Cost after iteration 1100: 0.644961Cost after iteration 1200: 0.644673Cost after iteration 1300: 0.644469Cost after iteration 1400: 0.644325Cost after iteration 1500: 0.644223Cost after iteration 1600: 0.644151Cost after iteration 1700: 0.644100Cost after iteration 1800: 0.644063Cost after iteration 1900: 0.644037Cost after iteration 2000: 0.644019Cost after iteration 2100: 0.644006Cost after iteration 2200: 0.643997Cost after iteration 2300: 0.643990Cost after iteration 2400: 0.64398521:33 1236 INFO Accuracy: 0.65550239234421:33 1236 INFO Accuracy: 0.34 &#x6210;&#x672C;&#x6B7B;&#x6D3B;&#x4E0B;&#x4E0D;&#x53BB;&#xFF0C;&#x6211;&#x5C1D;&#x8BD5;&#x8C03;&#x6574;&#x5B66;&#x4E60;&#x7387;&#x548C;&#x8FED;&#x4EE3;&#x6B21;&#x6570;&#xFF0C;&#x6536;&#x6548;&#x751A;&#x5FAE;&#x3002;&#x597D;&#x5728;&#x6211;&#x8DD1;jupyter notebook&#x7248;&#x672C;&#x7684;assignment4_2&#x7684;&#x65F6;&#x5019;&#x80FD;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x6211;&#x6700;&#x521D;&#x60F3;&#x5230;&#x7684;debug&#x65B9;&#x6CD5;&#x662F;&#x7ED9;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x704C;&#x5165;&#x548C;jupyter&#x7248;&#x672C;&#x4E00;&#x6837;&#x7684;&#x521D;&#x59CB;&#x53C2;&#x6570;&#x503C;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x5E94;&#x8BE5;&#x5F97;&#x51FA;&#x4E00;&#x6837;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x4F46;&#x662F;&#x53C2;&#x6570;&#x592A;&#x591A;&#xFF0C;&#x8FED;&#x4EE3;&#x7684;&#x6B21;&#x6570;&#x4E5F;&#x5F88;&#x591A;&#xFF0C;&#x4E00;&#x4E00;&#x6BD4;&#x8F83;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#x3002; &#x540E;&#x6765;&#x6211;&#x5C1D;&#x8BD5;&#x7528;jupyter&#x7248;&#x4E2D;&#x7684;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#x3001;&#x524D;&#x5411;&#x4F20;&#x64AD;&#x3001;&#x540E;&#x5411;&#x4F20;&#x64AD;&#x7B49;&#x6A21;&#x5757;&#x66FF;&#x6362;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x56E0;&#x4E3A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x975E;&#x5E38;&#x72EC;&#x7ACB;&#xFF0C;&#x8FD9;&#x79CD;&#x66FF;&#x6362;&#x662F;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x3002;&#x679C;&#x7136;&#x5F88;&#x5FEB;&#x53D1;&#x73B0;&#x95EE;&#x9898;&#xFF1A;&#x6211;&#x53D1;&#x73B0;&#x5728;assignment4_1&#x4E2D;&#x5728;&#x521D;&#x59CB;&#x5316;W&#x65F6;&#x662F;&#x8FD9;&#x4E48;&#x5199;&#x7684;&#xFF1A; 12parameters[&apos;W&apos; + str(l)] = np.random.randn(layer_dims[l],layer_dims[l-1]) * 0.01 &#x800C;&#x5728;assignment4_2&#x4E2D;&#x6539;&#x6210;&#x4E86;&#x9171;&#x7D2B;&#xFF1A; 12parameters[&apos;W&apos; + str(l)] = np.random.randn(layer_dims[l], layer_dims[l-1]) / np.sqrt(layer_dims[l-1]) &#x524D;&#x8005;&#x4E5F;&#x662F;&#x6BD4;&#x8F83;&#x5C0F;&#x7684;&#x6570;&#xFF0C;&#x800C;&#x4E14;&#x6BD4;&#x540E;&#x8005;&#x66F4;&#x5C0F;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x5728;&#x6807;&#x51C6;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x968F;&#x673A;&#x6570;&#x4E0A;&#x9664;&#x4EE5;layer_dims[l-1]&#x7684;&#x5F00;&#x65B9;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x540E;&#x8005;&#x5B66;&#x4E60;&#x6548;&#x7387;&#x9AD8;&#x51FA;&#x8FD9;&#x4E48;&#x591A;&#xFF1F;&#x672C;&#x4F8B;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x786E;&#x7684;&#x793A;&#x8303;&#x544A;&#x8BC9;&#x6211;&#x600E;&#x4E48;&#x505A;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x6211;&#x81EA;&#x5DF1;&#x6765;&#x89E3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x9047;&#x5230;&#x5B66;&#x4E60;&#x6548;&#x7387;&#x592A;&#x4F4E;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8BE5;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x5462;&#xFF1F; &#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6548;&#x679C;&#x7ACB;&#x523B;&#x663E;&#x73B0;&#x51FA;&#x6765;&#x4E86;&#xFF1A; 12345678910111213141516171819202122232425262728$ python3 -m mywork Coding1_3.MainCost after iteration 0: 0.715732Cost after iteration 100: 0.674738Cost after iteration 200: 0.660337Cost after iteration 300: 0.646289Cost after iteration 400: 0.629813Cost after iteration 500: 0.606006Cost after iteration 600: 0.569004Cost after iteration 700: 0.519797Cost after iteration 800: 0.464157Cost after iteration 900: 0.408420Cost after iteration 1000: 0.373155Cost after iteration 1100: 0.305724Cost after iteration 1200: 0.268102Cost after iteration 1300: 0.238725Cost after iteration 1400: 0.206323Cost after iteration 1500: 0.179439Cost after iteration 1600: 0.157987Cost after iteration 1700: 0.142404Cost after iteration 1800: 0.128652Cost after iteration 1900: 0.112443Cost after iteration 2000: 0.085056Cost after iteration 2100: 0.057584Cost after iteration 2200: 0.044568Cost after iteration 2300: 0.038083Cost after iteration 2400: 0.03441122:05 1238 INFO Accuracy: 0.99521531100522:05 1238 INFO Accuracy: 0.78 &#x521D;&#x59CB;&#x503C;&#x7684;&#x9009;&#x53D6;&#x5BF9;&#x4E8E;&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;&#x6709;&#x7740;&#x51B3;&#x5B9A;&#x6027;&#x7684;&#x4F5C;&#x7528;&#xFF01;&#x8BE5;&#x600E;&#x4E48;&#x8C03;&#x53C2;&#x3001;&#x4F18;&#x5316;&#xFF1F;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x5427;&#xFF01; &#x672C;&#x8282;&#x4F5C;&#x4E1A;&#x53EF;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.pyclass Coding1_3&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（二）]]></title>
    <url>%2F2018%2F03%2F12%2F2018%2F0312DeepLearningAI03%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x300B;&#x7B2C;&#x4E09;&#x5468;&#x300A;&#x6D45;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x300B;&#x3002; &#x672C;&#x8282;&#x7684;&#x9898;&#x76EE;&#x662F;&#x6D45;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5F00;&#x59CB;&#x63A5;&#x89E6;&#x591A;&#x5C42;&#x7ED3;&#x6784;&#xFF0C;&#x6B64;&#x65F6;&#x624D;&#x771F;&#x6B63;&#x63A5;&#x89E6;&#x5230;&#x4E86;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x3002;&#x5176;&#x5B9E;&#x8FD0;&#x7528;&#x5230;&#x7684;&#x7406;&#x8BBA;&#x77E5;&#x8BC6;&#x548C;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x76F8;&#x6BD4;&#xFF0C;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x65B0;&#x4E1C;&#x897F;&#x3002; &#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x63CF;&#x8FF0;&#xFF0C;&#x6211;&#x628A;&#x524D;&#x4E00;&#x8282;&#x8FD0;&#x7B97;&#x51FA;&#x6765;&#x7684;a&#x79F0;&#x4E3A;&#x4E00;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#xFF08;&#x8FD9;&#x662F;&#x6211;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#xFF0C;&#x5E76;&#x65E0;&#x51FA;&#x5904;~&#xFF09;&#xFF0C;&#x8BE5;&#x795E;&#x7ECF;&#x5143;&#x4E0E;&#x8F93;&#x5165;&#x6570;&#x636E;&#x76F4;&#x63A5;&#x5173;&#x8054;&#xFF0C;&#x5E76;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x4E3A;&#x4E8C;&#x5206;&#x7ED3;&#x679C;&#x3002;&#x771F;&#x5B9E;&#x4E16;&#x754C;&#x4EBA;&#x8111;&#x7684;&#x601D;&#x8003;&#x8FC7;&#x7A0B;&#x901A;&#x5E38;&#x6CA1;&#x6709;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x4E0E;&#x4E4B;&#x76F8;&#x5173;&#x7684;&#x6210;&#x8BED;&#x6BD4;&#x5982;&#x201C;&#x6DF1;&#x601D;&#x719F;&#x8651;&#x201D;&#x3001;&#x201C;&#x4E09;&#x601D;&#x800C;&#x884C;&#x201D;&#x3001;&#x201C;&#x6DF1;&#x8C0B;&#x8FDC;&#x8651;&#x201D;&#x2026;&#x2026;&#x90FD;&#x662F;&#x6307;&#x6709;&#x6DF1;&#x5EA6;&#x3001;&#x53CD;&#x590D;&#x7684;&#x601D;&#x8003;&#x3002;&#x672C;&#x8282;&#x8BFE;&#x7A0B;&#x6B63;&#x662F;&#x901A;&#x8FC7;&#x589E;&#x52A0;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x5C42;&#x6B21;&#x3001;&#x4EE5;&#x53CA;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x4E2A;&#x6570;&#x6765;&#x589E;&#x5F3A;&#x601D;&#x8003;&#x7684;&#x6DF1;&#x5EA6;&#x548C;&#x5E7F;&#x5EA6;&#x3002; 3.1 &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6982;&#x89C8; &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x901A;&#x5E38;&#x662F;&#x5177;&#x5907;&#x4E24;&#x5C42;&#x4EE5;&#x4E0A;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x4F46;&#x5728;&#x539F;&#x7406;&#x4E0A;&#xFF0C;&#x4EC5;&#x662F;&#x4E0A;&#x4E00;&#x8282;&#x5185;&#x5BB9;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x589E;&#x52A0;&#x65B0;&#x7684;&#x7406;&#x8BBA;&#x77E5;&#x8BC6;&#x3002;&#x5728;&#x7B26;&#x53F7;&#x8868;&#x793A;&#x4E0A;&#x4F7F;&#x7528;&#x65B9;&#x62EC;&#x53F7;&#x4E0A;&#x6807;\(z^{[1]}&#x3001;a^{[1]}\)&#x6765;&#x8868;&#x793A;&#x7B2C;&#x51E0;&#x5C42;&#xFF0C;&#x8FD9;&#x4E0E;&#x4E0A;&#x4E00;&#x8282;&#x7684;\(x^{(i)}\)&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x540E;&#x8005;&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x6837;&#x672C;&#x3002; &#x5728;&#x6982;&#x5FF5;&#x4E0A;&#xFF0C;&#x4E2D;&#x95F4;&#x5C42;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x662F;&#x5E94;&#x7528;&#x4E86;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5BF9;&#x4E8E;&#x5355;&#x6837;&#x672C;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#xFF0C;&#x6A21;&#x578B;&#x5982;&#x4E0B;&#xFF1A; &#x7531;&#x6B64;&#x6839;&#x636E;&#x6B63;&#x5411;&#x7B97;&#x6CD5;&#x90A3;&#x8BA1;&#x7B97;&#x795E;&#x7ECF;&#x5143;&#x548C;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF1A; &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5219;&#x5728;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x589E;&#x52A0;&#x4E86;&#x4E2D;&#x95F4;&#x7684;z/a&#x5C42;&#xFF0C;&#x4EE5;&#x53CA;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x591A;&#x4E2A;&#x8282;&#x70B9;&#xFF1A; &#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5BF9;&#x4E0A;&#x4E00;&#x5C42;&#x8282;&#x70B9;&#x5747;&#x4F7F;&#x7528;&#x4E86;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7684;&#x6B63;&#x5411;&#x7B97;&#x6CD5;&#xFF0C;&#x6700;&#x540E;&#x901A;&#x8FC7;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x51FD;&#x6570;\(L(a^{[2]}, y)\)&#xFF1A; 3.2 &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x8868;&#x793A; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x7B80;&#x5355;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5B83;&#x5177;&#x6709;&#x53CC;&#x5C42;&#x7ED3;&#x6784;&#xFF0C;&#x8FD9;&#x4E24;&#x5C42;&#x6307;&#x7684;&#x662F;&#x9690;&#x85CF;&#x5C42;&#x548C;&#x8F93;&#x51FA;&#x5C42;&#xFF1A; &#x8F93;&#x5165;&#x5C42;&#x901A;&#x5E38;&#x4E0D;&#x4F5C;&#x4E3A;&#x4E00;&#x5C42;&#xFF0C;&#x56E0;&#x4E3A;\(a^{[1]}\)&#x662F;&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x5C42;X&#x4E0E;&#x6784;&#x9020;&#x51FA;&#x7684;&#x53C2;&#x6570;\(W^{[1]}&#x548C;b^{[1]}\)&#x53E0;&#x52A0;&#x8FD0;&#x7B97;&#x800C;&#x6210;&#xFF0C;&#x800C;\(a^{[2]}\)&#x662F;\(a^{[1]}\)&#x4E0E;&#x6784;&#x9020;&#x51FA;&#x7684;&#x53C2;&#x6570;\(W^{[2]}&#x548C;b^{[2]}\)&#x53E0;&#x52A0;&#x8FD0;&#x7B97;&#x800C;&#x6210;&#x3002;W&#x548C;b&#x6784;&#x6210;&#x4E86;&#x6A21;&#x578B;&#x7684;&#x672C;&#x8D28;&#xFF0C;&#x5B83;&#x4EEC;&#x53EA;&#x6709;&#x4E24;&#x5C42;&#xFF0C;&#x56E0;&#x6B64;&#x8BF4;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x53CC;&#x5C42;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x3002; &#x5BF9;&#x4E8E;&#x5355;&#x6837;&#x672C;&#xFF0C;&#x5047;&#x8BBE;&#x8F93;&#x5165;&#x5C42;&#x5171;\(n^{[0]}\)&#x4E2A;&#x7279;&#x5F81;&#xFF0C;&#x9690;&#x85CF;&#x5C42;&#x5171;\(n^{[1]}\)&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x8F93;&#x51FA;&#x5C42;&#x5171;\(n^{[2]}\)&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x663E;&#x7136;\(n^{[2]}\)=1&#xFF0C;&#x5219; \(X= \left\lgroup \matrix{x_{1} \cr x_{2} \cr ... \cr x_{n_{[0]}} } \right \rgroup \\ z_{1}^{[1]} = w_{1}^{[1]}&#xB7;X + b^{[1]} = [w_{1}, w_{2}, ..., w_{n^{[0]}}] &#xB7; \left\lgroup \matrix{x_{1} \cr x_{2} \cr ... \cr x_{n^{[0]}} } \right \rgroup + b^{[1]} \in \mathbb{R}\) &#x9690;&#x85CF;&#x5C42;&#x5171;&#x6709;\(n^{[1]}\)&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E8E;&#x662F;&#xFF1A; \(z^{[1]}=\left\lgroup \matrix{z_{1}^{[1]} \cr z_{2}^{[1]} \cr ... \cr z_{n^{[1]}}^{[1]} } \right \rgroup \in \mathbb{R}^{n^{[1]}\,&#xD7; 1} &#x3000;&#x3000;\; w^{[1]}=\begin{bmatrix}&#x2014;w_{1}&#x2014;\\&#x2014;w_{2}&#x2014;\\\vdots\\&#x2014;w_{n^{[1]}}&#x2014;\end{bmatrix} \in \mathbb{R}^{n^{[1]}\,&#xD7;n^{[0]}}\) 3.3 &#x8BA1;&#x7B97;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA; &#x8BA1;&#x7B97;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#x5C31;&#x662F;&#x5E94;&#x7528;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8BA1;&#x7B97;&#x6CD5;&#x5219;&#xFF0C;&#x9010;&#x4E2A;&#x8282;&#x70B9;&#x6C42;&#x89E3;&#xFF1A; \(z^{[1]}=\left\lgroup \matrix{z_{1}^{[1]} \cr z_{2}^{[1]} \cr ... \cr x_{n_{[1]}}^{[1]} } \right \rgroup=\left\lgroup \matrix{w_{1}^{[1]}&#xB7;X + b_{1}^{[1]} \cr w_{2}^{[1]}&#xB7;X + b_{2}^{[1]} \cr ... \cr w_{n^{[1]}}^{[1]}&#xB7;X + b_{n^{[1]}}^{[1]} } \right \rgroup=\begin{bmatrix}&#x2014;w_{1}^{[1]}&#x2014; \cr &#x2014;w_{2}^{[1]}&#x2014; \cr ... \cr &#x2014;w_{n^{[1]}}^{[1]}&#x2014; \end{bmatrix}&#xB7;X + \begin{bmatrix}b_{1}^{[1]} \cr b_{2}^{[1]} \cr ... \cr b_{n^{[1]}}^{[1]} \end{bmatrix}\) \(a^{[1]} = \begin{bmatrix}a_{1}^{[1]} \cr a_{2}^{[1]} \cr ... \cr a_{n^{[1]}}^{[1]} \end{bmatrix}=&#x3C3;(z^{[1]})\) &#x540C;&#x7406;&#x603B;&#x7ED3;&#x5982;&#x4E0B;&#xFF1A; \(z^{[1]}=w^{[1]}&#xB7;x + b^{[1]} \\ a^{[1]} = &#x3C3;(z^{[1]}) \\ z^{[2]}=w^{[2]}&#xB7;a^{[1]} + b^{[2]} \\ a^{[2]} = &#x3C3;(z^{[2]})\) 3.4 &#x591A;&#x6837;&#x672C;&#x7684;&#x5411;&#x91CF;&#x5316; &#x5F53;&#x6709;m&#x4E2A;&#x6837;&#x672C;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x5F53;&#x7136;&#x5B9E;&#x9645;&#x64CD;&#x4F5C;&#x662F;&#x4F7F;&#x7528;&#x5411;&#x91CF;&#x5316;&#x800C;&#x4E0D;&#x662F;&#x5FAA;&#x73AF;&#xFF0C;&#x518D;&#x5229;&#x7528;&#x524D;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x6C42;&#x89E3;&#x177;&#x3002;&#x5FAA;&#x73AF;&#x7684;&#x4F2A;&#x7801;&#x5F62;&#x5F0F;&#x548C;&#x5411;&#x91CF;&#x5316;&#x7684;&#x8868;&#x8FBE;&#x5206;&#x522B;&#x4E3A;&#xFF1A; \(for \, i \, in \, range(1, m):\) &#x3000;\(z^{[1]{(}i{)}} = w^{[1]}&#xB7; x^{(i)} + b^{[1]}\) &#x3000;&#x3000;&#x3000;&#x3010;&#x5411;&#x91CF;&#x5316;&#x3011; \(Z^{[1]} = W^{[1]}&#xB7;X + b^{[1]}\) &#x3000;\(a^{[1]{(}i{)}} = &#x3C3;(z^{[1]{(}i{)}}) &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3010;&#x5411;&#x91CF;&#x5316;&#x3011;A^{[1]} = &#x3C3;(Z^{[1]})\) &#x3000;\(z^{[2]{(}i{)}} = w^{[2]}&#xB7;a^{[1]{(}i{)}} + b^{[2]} &#x3000;&#x3000;&#x3010;&#x5411;&#x91CF;&#x5316;&#x3011;Z^{[2]}=W^{[2]}&#xB7;A^{[1]}+b^{[2]}\) &#x3000;\(a^{[2]{(}i{)}}=&#x3C3;(z^{[2]{(}i{)}}) &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3010;&#x5411;&#x91CF;&#x5316;&#x3011;A^{[2]}=&#x3C3;(Z^{[2]})\) &#x4E8E;&#x662F;&#x5F97;&#x51FA;\(Z^{[1]}=\begin{bmatrix}\mid&amp;\mid&amp;&amp;\mid\\Z^{[1]{(}1{)}}&amp;Z^{[1] {(}2{)}} &amp; \cdots &amp;Z^{[1]{(}m{)}}\\\mid&amp;\mid&amp;&amp;\mid\end{bmatrix}\)&#xFF0C;&#x6A2A;&#x5411;&#x8868;&#x793A;&#x4E0D;&#x540C;&#x6837;&#x672C;&#x7684;&#x5904;&#x7684;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x4E2A;&#x6570;&#x7B49;&#x4E8E;&#x6837;&#x672C;&#x6570;&#xFF1B;&#x7EB5;&#x5411;&#x8868;&#x793A;&#x4E0D;&#x540C;&#x7279;&#x5F81;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x4E2A;&#x6570;&#x7B49;&#x4E8E;&#x4E0A;&#x4E00;&#x5C42;&#x7684;&#x8282;&#x70B9;&#x6570;&#x3002; 3.5 &#x5411;&#x91CF;&#x5316;&#x5B9E;&#x73B0;&#x7684;&#x89E3;&#x91CA; \(Z^{[1]}=\begin{bmatrix}\mid&amp;\mid&amp;&amp;\mid\\Z^{[1]{(}1{)}}&amp;Z^{[1]{(}2{)}}&amp;\cdots&amp;Z^{[1]{(}m{)}}\\\mid&amp;\mid&amp;&amp;\mid\end{bmatrix}\) \(=\begin{bmatrix}w_{1}^{[1]}&#xB7;x^{(1)}+b^{[1]} &amp; w_{1}^{[1]}&#xB7;x^{(2)}+b^{[1]} &amp; ... &amp; w_{1}^{[1]}&#xB7;x^{(m)}+b^{[1]} \cr w_{2}^{[1]}&#xB7;x^{(1)}+b^{[1]} &amp; w_{2}^{[1]}&#xB7;x^{(2)}+b^{[1]} &amp; ... &amp; w_{2}^{[1]}&#xB7;x^{(m)}+b^{[1]} \cr ... &amp; ... &amp; ... &amp; ... \cr w_{1}^{[1]}&#xB7;x^{(1)}+b^{[1]} &amp; w_{1}^{[1]}&#xB7;x^{(2)}+b^{[1]} &amp; ... &amp; w_{1}^{[1]}&#xB7;x^{(m)}+b^{[1]} \end{bmatrix} \\ =\begin{bmatrix}&#x2014;w_{1}^{[1]}&#x2014; \cr &#x2014;w_{2}^{[1]}&#x2014; \cr ... \cr &#x2014;w_{n^{[1]}}^{[1]}&#x2014; \end{bmatrix}&#xB7;\begin{bmatrix}\mid&amp;\mid&amp;&amp;\mid\\x^{(1)}&amp;x^{(2)}&amp;\cdots&amp;x^{(m)}\\ \mid&amp;\mid&amp;&amp;\mid\end{bmatrix} + b^{[1]} \\ =W^{[1]}&#xB7;X+b^{[1]}\) 3.6 &#x6FC0;&#x6D3B;&#x51FD;&#x6570; &#x5728;&#x4EE5;&#x524D;&#x7684;&#x7AE0;&#x8282;&#x4E2D;&#xFF0C;&#x90FD;&#x91C7;&#x7528;&#x3C3;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x901A;&#x5E38;&#x4F7F;&#x7528;&#x5B83;&#x7684;&#x53D8;&#x79CD;\(tanh(z)=\frac{e^{z}-e^{z}}{e^{z}+e^{z}}\)&#x6765;&#x4F5C;&#x4E3A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x662F;&#x5C06;&#x3C3;&#x51FD;&#x6570;&#x5411;&#x4E0B;&#x5E73;&#x79FB;0.5&#xFF1A; &#x6211;&#x4EEC;&#x7528;g(z)&#x6765;&#x8868;&#x793A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x66F4;&#x5E38;&#x7528;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x662F;ReLU&#xFF08;&#x4FEE;&#x6B63;&#x7EBF;&#x6027;&#x5355;&#x5143; Rectified linear unit&#xFF09;&#xFF0C;g(z)=max(0, z)&#xFF1A; &#x4EE5;&#x53CA;&#x5B83;&#x7684;&#x53D8;&#x79CD;Leaky ReLU&#xFF0C;gz(z)=max(0.01z, z)&#xFF1A; tanh&#x548C;&#x3C3;&#x51FD;&#x6570;&#x6709;&#x4E00;&#x4E2A;&#x5171;&#x540C;&#x7684;&#x7F3A;&#x9677;&#x662F;&#x5F53;z&#x53D6;&#x503C;&#x8FC7;&#x5927;&#x65F6;&#xFF0C;g&#x7684;&#x53D8;&#x5316;&#x7387;&#x8FC7;&#x5C0F;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x6BCF;&#x8F6E;&#x8BAD;&#x7EC3;&#x6548;&#x679C;&#x4E0D;&#x660E;&#x663E;&#xFF0C;&#x5B66;&#x4E60;&#x901F;&#x5EA6;&#x5F88;&#x6162;&#x3002;ReLU&#x7CFB;&#x51FD;&#x6570;&#x5219;&#x6CA1;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x7F3A;&#x70B9;&#x3002;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F53;&#x4E0D;&#x786E;&#x5B9A;&#x9690;&#x85CF;&#x5C42;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x8BE5;&#x7528;&#x4EC0;&#x4E48;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x5C31;&#x91C7;&#x7528;ReLU&#x3002; &#x5C3D;&#x7BA1;&#x5BF9;&#x4E8E;ReLU&#x5F53;z&#xFF1C;0&#x65F6;&#x659C;&#x7387;&#x4E3A;0&#xFF0C;&#x4F46;&#x5728;&#x5B9E;&#x8DF5;&#x4E2D;&#x6709;&#x8DB3;&#x591F;&#x591A;&#x7684;&#x9690;&#x85CF;&#x5355;&#x5143;&#x4EE4;z&#xFF1E;0&#xFF0C;&#x6240;&#x4EE5;&#x901A;&#x5E38;&#x4F7F;&#x7528;ReLU&#x5C31;&#x8DB3;&#x591F;&#x4E86;&#x3002; 3.7 &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;&#x975E;&#x7EBF;&#x6027;&#x6FC0;&#x6D3B;&#x51FD;&#x6570; \(z^{[1]}=w^{[1]}&#xB7;x + b^{[1]} \\ a^{[1]} = g^{[1]}(z^{[1]}) \\ z^{[2]}=w^{[2]}&#xB7;a^{[1]} + b^{[2]} \\ a^{[2]} = g^{[1]}(z^{[2]})\) \(&#x5982;&#x679C;a^{[1]}=z^{[1]}\\ &#x5219;z^{[2]}=w^{[2]}(w^{[1]}&#xB7;x+b^{[1]}) + b^{[2]}=w&apos;&#xB7;x+b&apos;\) &#x8FD9;&#x548C;&#x5355;&#x5C42;&#x7F51;&#x7EDC;&#x662F;&#x7B49;&#x6548;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5B83;&#x4F1A;&#x4EE4;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5C42;&#x6B21;&#x5931;&#x6548;&#xFF0C;&#x56E0;&#x6B64;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x975E;&#x7EBF;&#x6027;&#x51FD;&#x6570;&#x3002; 3.8 &#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x7684;&#x5BFC;&#x6570; &#x5BF9;&#x4E8E;tanh&#x51FD;&#x6570; \(g(z) = tanh(z) = \frac{e^{z} - e^{-z}}{e^{z} + e^{-z}}\) \(g&apos;(z) = (e^{z} - e^{-z})&apos;&#xB7;(e^{z} + e^{-z}) + (e^{z} - e^{-z})[(e^{z} + e^{-z})]&apos;\\=\frac{(e^{z} - e^{-z})}{(e^{z} + e^{-z})} + (e^{z} - e^{-z})(-1)(e^{z} + e^{-z})^{-2}(e^{z} - e^{-z})\\=1-(\frac{(e^{z} - e^{-z})}{(e^{z} + e^{-z})})^{2}\\=1-tanh^{2}(z)\) &#x6B64;&#x5904;&#x5E94;&#x7528;&#x7684;&#x94FE;&#x5F0F;&#x6CD5;&#x5219;&#x662F;&#xFF1A;\([g(x)&#xB7;f(x)]&apos;=g&apos;(x)&#xB7;f(x)+g(x)&#xB7;f&apos;(x)\) &#x5BF9;&#x4E8E;ReLU \(g(z)=max(0, z)\\g&apos;(z)=\begin{cases}0&#x3000;z&#xFF1C;0\\1&#x3000;z&#x2265;0\end{cases}\) \(g(z)=max(0.01z, z)\\g&apos;(z)=\begin{cases}0.01&#x3000;z&#xFF1C;0\\1&#x3000;&#x3000;&#x3000;z&#x2265;0\end{cases}\) &#x5F53;z=0&#x65F6;&#xFF0C;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x5747;&#x4E0D;&#x53EF;&#x5BFC;&#xFF0C;&#x4F46;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;z&#x53D6;0&#x7684;&#x6982;&#x7387;&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x6B64;&#x65F6;&#x5BFC;&#x6570;&#x53D6;&#x4EC0;&#x4E48;&#x503C;&#xFF0C;&#x95EE;&#x9898;&#x90FD;&#x4E0D;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5C06;&#x6B64;&#x65F6;&#x5BFC;&#x6570;&#x5B9A;&#x4E49;&#x4E3A;1&#x3002; 3.9 &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x5BF9;&#x4E8E;&#x6210;&#x672C;&#x51FD;&#x6570;\(J(w^{[1]}&#xFF0C;b^{[1]}&#xFF0C;w^{[2]}&#xFF0C;b^{[2]})=\frac{1}{m}\sum_{i=1}^{m}L(&#x177;, y)\)&#xFF0C;&#x5176;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x53EF;&#x5199;&#x4F5C;&#xFF1A; \(Repeat\{ \\&#x3000;dw^{[1]}=\frac{dL}{dw^{[1]}}, \; db^{[1]}=\frac{dL}{db^{[1]}} \\&#x3000;dw^{[2]}=\frac{dL}{dw^{[2]}}, \; db^{[2]}=\frac{dL}{db^{[2]}} \\&#x3000;w^{[1]}:=w^{[1]} - &#x3B1;&#xB7;dw^{[1]}, \; b^{[1]}:=b^{[1]} - &#x3B1;&#xB7;db^{[1]} \\&#x3000;w^{[2]}:=w^{[2]} - &#x3B1;&#xB7;dw^{[2]}, \; b^{[2]}:=b^{[2]} - &#x3B1;&#xB7;db^{[2]} \\\}\) &#x4F7F;&#x7528;&#x524D;&#x5411;&#x7B97;&#x6CD5;&#xFF1A; \(Z^{[1]}=W^{[1]}&#xB7;X + b^{[1]}\\ A^{[1]}=g^{[1]}(Z^{[1]})\\ Z^{[2]}=W^{[2]}&#xB7;A^{[1]} + b^{[2]}\\ A^{[2]}=g^{[2]}(Z^{[2]})\) &#x4F7F;&#x7528;&#x540E;&#x5411;&#x7B97;&#x6CD5;&#xFF1A; \(dZ^{[2]}=A^{[2]}-Y&#xFF0C;&#x5176;&#x4E2D;Y=[y^{(1)} y^{(1)} ... y^{(1)}]\\ dW^{[2]}=\frac{1}{m}dZ^{[2]}&#xB7;A^{[1]}\\ db^{[2]}=\frac{1}{m}np.sum(dZ^{[2]}, axis=1, keepdims=True)\\ dZ^{[1]}=W^{[2]}&#xB7;dZ^{[2]}&#xB7;g^{&apos;[1]}(z^{[1]})&#x3000;&#x3000;&#x2460;\\ dW^{[1]}=\frac{1}{m}dZ^{[1]}X\\ db^{[1]}=\frac{1}{m}np.sum(dZ^{[1]}, axis=1, keepdims=True)\) &#x5176;&#x4E2D;&#x2460;&#x7684;&#x8BA1;&#x7B97;&#x601D;&#x8DEF;&#xFF0C;&#x6839;&#x636E;&#x94FE;&#x5F0F;&#x89C4;&#x5219;&#xFF1A; \(dZ^{[1]}=\frac{dL}{dz^{[1]}}=\frac{dL}{da^{[2]}}&#xB7;\frac{da^{[2]}}{dz^{[2]}}&#xB7;\frac{dZ^{[2]}}{da^{[1]}}&#xB7;\frac{da^{[1]}}{dz^{[1]}}&#x3000;&#x2026;&#x2026;&#x524D;&#x4E24;&#x9879;=dZ^{[2]}&#xFF0C;&#x7B2C;&#x4E09;&#x9879;=W^{[2]}\\ =dZ^{[2]}&#xB7;W^{[2]}&#xB7;g^{&apos;[1]}(z^{[1]})\) 3.11 &#x968F;&#x673A;&#x521D;&#x59CB;&#x5316; &#x5728;&#x8BBE;&#x5B9A;&#x521D;&#x59CB;&#x5316;&#x53C2;&#x6570;\(w^{[1]}&#x548C;b^{[1]}\)&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x6CE8;&#x610F;&#x4E0D;&#x8981;&#x628A;\(w_{1}^{[1]}&#x3001;w_{2}^{[1]}...&#x3001;w_{n^{[1]}}^{[1]}\)&#x8BBE;&#x6210;&#x76F8;&#x7B49;&#x7684;&#x503C;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x8BE5;&#x5C42;&#x795E;&#x7ECF;&#x5143;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#xFF0C;&#x8FD9;&#x5E94;&#x8BE5;&#x5C31;&#x662F;&#x6240;&#x8C13;&#x7684;&#x201C;&#x4E00;&#x6839;&#x7B4B;&#x201D;&#x5427;~ &#x5176;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x5728;&#x8BE5;&#x5C42;&#x8BBE;&#x7F6E;&#x7684;&#x591A;&#x4E2A;&#x8282;&#x70B9;&#x5C31;&#x5931;&#x6548;&#x4E86;&#x3002;&#x8FD9;&#x548C;&#x4EBA;&#x8111;&#x7684;&#x601D;&#x8003;&#x4E5F;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x8981;&#x505A;&#x5230;&#x201C;&#x517C;&#x542C;&#x5219;&#x660E;&#x201D;&#xFF0C;&#x591A;&#x89D2;&#x5EA6;&#x8003;&#x8651;&#x3002;&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF1A; \(W^{[1]}=np.random.rand((n^{[1]}, n^{[0]}))&#xD7;0.01\\ b^{[1]}=np.zeros((n^{[1]}, 1))\\ W^{[2]}=np.random.rand((1, n^{[1]}))&#xD7;0.01\\ b^{[2]}=np.zeros((n^{[1]}, 1))\) &#x5176;&#x4E2D;\(W^{[1]}&#x548C;W{[2]}\)&#x4E58;&#x4EE5;0.01&#x7684;&#x7CFB;&#x6570;&#x662F;&#x4E3A;&#x4E86;&#x786E;&#x4FDD;&#x53D6;&#x503C;&#x5C3D;&#x91CF;&#x9760;&#x8FD1;0&#x70B9;&#xFF0C;&#x662F;&#x7684;&#x5F53;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x53D6;&#x3C3;&#x6216;tanh&#x65F6;&#xFF0C;&#x6709;&#x8F83;&#x5927;&#x7684;&#x5B66;&#x4E60;&#x7387;&#xFF0C;&#x4ECE;&#x800C;&#x5F97;&#x5230;&#x8F83;&#x5FEB;&#x7684;&#x5B66;&#x4E60;&#x901F;&#x5EA6;&#x3002; &#x4F5C;&#x4E1A; &#x672C;&#x8282;&#x7684;&#x4F5C;&#x4E1A;&#x662F;&#x968F;&#x673A;&#x751F;&#x6210;400&#x4E2A;&#x70B9;&#xFF0C;&#x4E00;&#x534A;&#x662F;&#x7EA2;&#x8272;&#x4E00;&#x534A;&#x662F;&#x84DD;&#x8272;&#xFF0C;&#x8981;&#x6C42;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x53EF;&#x4EE5;&#x628A;&#x4E24;&#x7C7B;&#x70B9;&#x5206;&#x5F00;&#xFF1A; &#x4E0B;&#x9762;&#x662F;&#x91C7;&#x7528;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x8BA1;&#x7B97;&#x7684;&#x7ED3;&#x679C;&#xFF1A; &#x9700;&#x8981;&#x7279;&#x522B;&#x5173;&#x6CE8;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x56FE;&#x5F62;&#x7684;&#x7ED8;&#x5236;&#x2014;&#x2014;&#x5B83;&#x7684;&#x80CC;&#x666F;&#x662F;&#x901A;&#x8FC7;&#x7ED8;&#x5236;&#x5E26;&#x586B;&#x5145;&#x8272;&#x7684;&#x7B49;&#x9AD8;&#x7EBF;&#x56FE;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5B83;&#x628A;&#x539F;&#x5148;&#x7684;&#x7EA2;&#x84DD;&#x8C46;&#x8C46;&#x56FE;&#x6309;&#x7167;&#x6B65;&#x957F;&#x4E3A;0.01&#x7ED8;&#x5236;&#x7EB5;&#x6A2A;&#x7F51;&#x683C;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x7F51;&#x683C;&#x6BCF;&#x4E00;&#x4E2A;&#x4EA4;&#x53C9;&#x70B9;&#x4F5C;&#x4E3A;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#x8F93;&#x5165;&#x7ED9;&#x6A21;&#x578B;&#xFF0C;&#x5F97;&#x5230;&#x6BCF;&#x4E2A;&#x70B9;&#x7684;&#x9884;&#x6D4B;&#x989C;&#x8272;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x70B9;&#x7ED8;&#x5236;&#x5E26;&#x586B;&#x5145;&#x8272;&#x7684;&#x7B49;&#x9AD8;&#x7EBF;&#x56FE;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x6548;&#x679C;&#x4E86;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x4F7F;&#x7528;&#x9690;&#x85CF;&#x5C42;&#x6709;4&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x53CC;&#x5C42;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x6CE8;&#x610F;&#xFF1A;&#x7F51;&#x4E0A;&#x7684;&#x7248;&#x672C;&#x6709;&#x4E2A;bug&#xFF1A;load_planar_dataset()&#x51FD;&#x6570;&#x8FD4;&#x56DE;\(X\in (2, 400)&#xFF0C; Y\in(1, 400)\)&#xFF0C;&#x800C;&#x5728;&#x7ED8;&#x5236;&#x8FD9;&#x4E9B;&#x70B9;&#x7684;&#x65F6;&#x5019; plt.scatter(X[0, :], X[1, :], c=y, cmap=plt.cm.Spectral) &#x5176;&#x4E2D;&#x7684;&#x989C;&#x8272;&#x53C2;&#x6570;c&#x76F4;&#x63A5;&#x4F20;&#x5165;Y&#x662F;&#x6709;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x505A;&#x5982;&#x4E0B;&#x8F6C;&#x6362;&#xFF1A; plt.scatter(X[0, :], X[1, :], c=y.reshape(X.shape[1]), cmap=plt.cm.Spectral) &#x6211;&#x5F00;&#x59CB;&#x4F53;&#x4F1A;&#x5230;&#x4E86;&#x4F7F;&#x7528;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x662F;&#x4E00;&#x79CD;&#x7F16;&#x7A0B;&#x601D;&#x7EF4;&#x7684;&#x5207;&#x6362;&#x3002; &#x672C;&#x8282;&#x7684;&#x4F5C;&#x4E1A;&#x5728;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.py&#x4E2D;&#x7684;class Coding1_2&#x3002; &#x601D;&#x8003; &#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E00;&#x65B9;&#x9762;&#x589E;&#x52A0;&#x4E86;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x5C42;&#x6B21;&#xFF0C;&#x63D0;&#x9AD8;&#x601D;&#x8003;&#x7684;&#x6DF1;&#x5EA6;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x4E5F;&#x5728;&#x540C;&#x4E00;&#x5C42;&#x6B21;&#x4E0A;&#x5E03;&#x5C40;&#x4E86;&#x591A;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x63D0;&#x9AD8;&#x4E86;&#x601D;&#x8003;&#x7684;&#x5E7F;&#x5EA6;&#x3002;&#x8FD9;&#x4E9B;&#x795E;&#x7ECF;&#x5143;&#x5F7C;&#x6B64;&#x8FDE;&#x63A5;&#x4FBF;&#x6210;&#x4E86;&#x201C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x201D;&#x3002;&#x518D;&#x6B21;&#x7533;&#x660E;&#xFF0C;&#x8FD9;&#x90FD;&#x662F;&#x6211;&#x7684;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x7406;&#x8BBA;&#x4F9D;&#x636E;&#x3002;&#x8FD9;&#x4E48;&#x505A;&#x589E;&#x52A0;&#x4E86;&#x601D;&#x8003;&#x7684;&#x62BD;&#x8C61;&#x7A0B;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x66F4;&#x52A0;&#x8BA9;&#x601D;&#x8003;&#x8FC7;&#x7A0B;&#x53D8;&#x5F97;&#x8D8A;&#x53D1;&#x4E0D;&#x53EF;&#x7406;&#x89E3;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x7ECF;&#x8FC7;&#x8FD9;&#x4E48;&#x591A;&#x5C42;&#x7684;&#x8FD0;&#x7B97;&#x5C31;&#x6BD4;&#x7B80;&#x5355;&#x201C;&#x795E;&#x7ECF;&#x5143;&#x201D;&#x6709;&#x6548;&#xFF1F;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x542B;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6DF1;&#x5EA6;&#x3001;&#x6BCF;&#x4E00;&#x5C42;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x4E2A;&#x6570;&#x4E0E;&#x6A21;&#x578B;&#x7684;&#x6548;&#x679C;&#x662F;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#xFF01;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x5427;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning.ai笔记（一）]]></title>
    <url>%2F2018%2F03%2F11%2F2018%2F0311DeepLearningAI02%2F</url>
    <content type="text"><![CDATA[&#x300A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x300B;&#xFF0C;&#x7B2C;&#x4E8C;&#x5468;&#x300A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x57FA;&#x7840;&#x300B;&#x3002; &#x7F51;&#x4E0A;&#x5173;&#x4E8E;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x7B14;&#x8BB0;&#x3001;&#x4F5C;&#x4E1A;&#x5F88;&#x591A;&#xFF0C;&#x4E5F;&#x5F88;&#x6709;&#x4EF7;&#x503C;&#x3002;&#x8FD9;&#x7248;&#x7B14;&#x8BB0;&#x8FD9;&#x662F;&#x9488;&#x5BF9;&#x6211;&#x81EA;&#x5DF1;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x611F;&#x609F;&#x3001;&#x91CD;&#x70B9;&#x505A;&#x4E2A;&#x8BB0;&#x5F55;&#xFF0C;&#x4FBF;&#x4E8E;&#x81EA;&#x5DF1;&#x5FEB;&#x901F;&#x67E5;&#x9605;&#x3002;&#x672C;&#x6587;&#x7684;&#x6807;&#x9898;&#x53F7;&#x548C;&#x8BFE;&#x7A0B;&#x53F7;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#xFF0C;&#x4EE5;&#x65B9;&#x4FBF;&#x67E5;&#x9605;&#x3002; 2.1 &#x6837;&#x672C;&#x7684;&#x8868;&#x793A; &#x9898;&#x76EE;&#x7684;&#x76EE;&#x6807;&#x662F;&#x5224;&#x65AD;&#x56FE;&#x7247;&#x4E2D;&#x662F;&#x5426;&#x6709;&#x732B;&#xFF0C;&#x5047;&#x8BBE;&#x4E00;&#x5F20;&#x56FE;&#x662F;64&#xD7;64&#x50CF;&#x7D20;&#xFF0C;3&#x901A;&#x9053;&#xFF0C;&#x5373;R&#x3001;G&#x3001;B&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;64&#xD7;64&#x7684;&#x77E9;&#x9635;&#xFF1A; R = \(\left\lgroup \matrix{R_{1\,1} &amp; R_{1\,2} &amp; ... &amp; R_{1\,64} \cr R_{2\,1} &amp; R_{2\,2} &amp; ... &amp; R_{2\,64} \cr ... &amp; ... &amp; ... \cr R_{64\,1} &amp; R_{64\,2} &amp; ... &amp; R_{64\,64} } \right \rgroup\) \(\;\) G = \(\left\lgroup \matrix{G_{1\,1} &amp; G_{1\,2} &amp; ... &amp; G_{1\,64} \cr G_{2\,1} &amp; G_{2\,2} &amp; ... &amp; G_{2\,64} \cr ... &amp; ... &amp; ... \cr G_{64\,1} &amp; G_{64\,2} &amp; ... &amp; G_{64\,64} } \right \rgroup\) \(\;\) B = \(\left\lgroup \matrix{B_{1\,1} &amp; B_{1\,2} &amp; ... &amp; B_{1\,64} \cr B_{2\,1} &amp; B_{2\,2} &amp; ... &amp; B_{2\,64} \cr ... &amp; ... &amp; ... \cr B_{64\,1} &amp; B_{64\,2} &amp; ... &amp; B_{64\,64} } \right \rgroup\) &#x9700;&#x8981;&#x5C06;&#x8BE5;&#x6837;&#x672C;&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;&#x4E00;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x4EE5;&#x65B9;&#x4FBF;&#x540E;&#x9762;&#x7684;&#x8FD0;&#x7B97;&#x3002;&#x56E0;&#x6B64;&#x5C06;&#x8BE5;&#x6837;&#x672C;&#x8F6C;&#x6362;&#x6210;&#xFF1A; x = \(\left\lgroup \matrix{R_{1\,1} \cr R_{1\,2} \cr ... \cr R_{2\,1} \cr R_{2\,2} \cr ... \cr G_{1\,1} \cr G_{1\,2} \cr ... \cr B_{1\,1} \cr B_{1\,2} \cr ... } \right \rgroup\) &#x5B83;&#x5305;&#x542B;64&#xD7;64&#xD7;3=12288&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5199;&#x4F5C;&#xFF1A;\(n_{x}\)=12288&#xFF0C;&#x8FD9;&#x662F;&#x6837;&#x672C;&#x7684;&#x7EF4;&#x6570;&#x3002; &#x5047;&#x8BBE;&#x5171;&#x6709;m&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; \(X=\begin{bmatrix}\mid&amp;\mid&amp;&amp;\mid\\x^{(1)}&amp;x^{(2)}&amp;\cdots&amp;x^{(m)}\\ \mid&amp;\mid&amp;&amp;\mid\end{bmatrix} , Y=[y^{(1)} y^{(2)} ... y^{(m)}] \;\) &#x5176;&#x4E2D;: \(x^{(i)}\in \mathbb{R}^{n_{x}}&#xFF0C;y^{(i)}\in \{0, 1\}; \\ X\in\mathbb{R}^{n_{x}&#xD7;m}&#xFF0C;X.shape=(n_{x}, m); \\ Y\in \mathbb{R}&#xFF0C; Y.shape=(1, m)\) 2.2 &#x903B;&#x8F91;&#x56DE;&#x5F52;&#x95EE;&#x9898; &#x5BF9;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x5224;&#x732B;&#x7684;&#x95EE;&#x9898;&#x662F;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x95EE;&#x9898;&#x3002; &#x5373;&#xFF1A;&#x7ED9;&#x5B9A;x&#xFF0C;&#x6C42;&#x89E3;&#x177;=P(y=1|x)&#xFF0C;&#x5373;y=1&#x7684;&#x6982;&#x7387;&#x3002; &#x5BF9;&#x4E8E;&#x56FE;&#x7247;\(x\in(n_{x}, 1)\)&#xFF0C;&#x4EE4;\(&#x177;=&#x3C3;(w^{T}x+b)\)&#xFF0C; &#x5176;&#x4E2D;\(w\in\mathbb{R}^{n_{x}}, b\in\mathbb{R}\) &#x8BE5;&#x51FD;&#x6570;&#x5C06;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x6620;&#x5C04;&#x4E3A;&#x4ECB;&#x4E8E;(0, 1)&#x4E4B;&#x95F4;&#x7684;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x8BE5;&#x6570;&#x5B57;&#x5C31;&#x8868;&#x793A;&#x5176;&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;&#x732B;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x56FE;&#x50CF;&#x5982;&#x4E0B;&#xFF1A; &#x5176;&#x4E2D;\(z=w^{T}x+b &#xFF0C;\; \; \; &#x3C3;(z)=\frac{1}{1+e^{-z}}\) &#x5F53;\(z&#x2192;+\infty, \; &#x3C3;(z)&#x2248;\frac{1}{1+0}=1\) &#x5F53;\(z&#x2190;-\infty, \; &#x3C3;(z)&#x2248;\frac{1}{1+\infty}=0\) &#x4E8E;&#x662F;&#x672C;&#x8282;&#x9898;&#x76EE;&#x5C31;&#x662F;&#x8981;&#x627E;&#x5230;&#x5408;&#x9002;&#x7684;w&#x548C;b&#x4F7F;&#x5F97;&#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x6837;&#x672C;x&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x177;&#x90FD;&#x80FD;&#x903C;&#x8FD1;y&#x3002; 2.3 &#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x548C;&#x6210;&#x672C;&#x51FD;&#x6570; &#x5BF9;&#x4E8E;&#x7ED9;&#x5B9A;&#x6837;&#x672C;\(&#x177;=&#x3C3;(w^{T}x+b)\)&#xFF0C;&#x5176;&#x4E2D;\(&#x3C3;(z)=\frac{1}{1+e^{-z}}\)&#xFF0C; &#x5B9A;&#x4E49;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A;\(L(&#x177;, y)=\frac{1}{2}(&#x177;-y)^{2}\) &#x53EA;&#x9700;&#x8981;&#x627E;&#x5230;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x503C;&#x6700;&#x5C0F;&#x7684;w&#x548C;b&#x5373;&#x53EF;&#x3002; &#x4F46;&#x7531;&#x4E8E;&#x8BE5;&#x51FD;&#x6570;&#x662F;&#x4E2A;&#x975E;&#x51F8;&#x51FD;&#x6570;&#xFF0C;&#x627E;&#x5B83;&#x7684;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x6BD4;&#x8F83;&#x56F0;&#x96BE;&#xFF0C;&#x901A;&#x5E38;&#x91C7;&#x7528;&#x53D8;&#x901A;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x4EE4;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A;\(L(&#x177;, y)=-[y\log&#x177; + (1-y)\log(1-&#x177;)]\) &#x5F53;y=1&#xFF0C;\(L(&#x177;, y)=-\log&#x177;\)&#xFF0C;&#x5E0C;&#x671B;L(&#x177;, y)&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x5C31;&#x8981;&#x6C42;\(\log&#x177;\)&#x8DB3;&#x591F;&#x5927;&#xFF0C;&#x8FD9;&#x8981;&#x6C42;&#x177;&#x8DB3;&#x591F;&#x5927;&#xFF0C;&#x4F46;&#x177;&#x662F;&#x3C3;&#x51FD;&#x6570;&#xFF0C;&#x6700;&#x5927;&#x4E5F;&#x5C31;&#x65E0;&#x9650;&#x63A5;&#x8FD1;1&#xFF1B; &#x5F53;y=0&#xFF0C;\(L(&#x177;, y)=-\log(1-&#x177;)\)&#xFF0C; &#x5E0C;&#x671B;L(&#x177;, y)&#x975E;&#x5E38;&#x5C0F;&#xFF0C;&#x5C31;&#x8981;&#x6C42;\(\log(1-&#x177;)\)&#x8DB3;&#x591F;&#x5927;&#xFF0C;&#x8FD9;&#x8981;&#x6C42;&#x177;&#x8DB3;&#x591F;&#x5C0F;&#xFF0C;&#x4F46;&#x177;&#x662F;&#x3C3;&#x51FD;&#x6570;&#xFF0C;&#x6700;&#x5927;&#x4E5F;&#x5C31;&#x65E0;&#x9650;&#x63A5;&#x8FD1;0&#xFF1B; &#x4ECE;&#x4E0A;&#x9762;&#x7684;&#x8D8B;&#x52BF;&#x5206;&#x6790;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x201C;&#x177;&#x65E0;&#x9650;&#x63A5;&#x8FD1;y&#x201D;&#x548C;&#x201C;L(&#x177;, y)&#x8DB3;&#x591F;&#x5C0F;&#x201D;&#x7684;&#x8D8B;&#x52BF;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002; &#x6211;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;&#x5E94;&#x8BE5;&#x8BA9;&#x635F;&#x5931;&#x51FD;&#x6570;L(&#x177;, y)&#x8D8B;&#x8FD1;&#x4E8E;0&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x65E0;&#x9650;&#x5C0F;&#x5230;&#x8D1F;&#x6570;&#x5427;&#xFF1F;&#x56E0;&#x4E3A;&#x4ECE;&#x76F4;&#x89C2;&#x610F;&#x4E49;&#x4E0A;&#x6765;&#x770B;&#x635F;&#x5931;&#x51FD;&#x6570;&#x8868;&#x793A;&#x177;&#x548C;y&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x8DDD;&#xFF0C;&#x592A;&#x5927;&#x548C;&#x592A;&#x5C0F;&#x90FD;&#x4E0D;&#x5BF9;&#x5440;&#xFF1F; &#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x4F5C;&#x4E3A;&#x5355;&#x6837;&#x672C;&#x800C;&#x8A00;&#x7684;&#xFF0C;&#x5BF9;&#x4E8E;&#x6574;&#x4E2A;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#xFF0C;&#x5219;&#x8981;&#x8003;&#x5BDF;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF1A; \(J(w, b) = -\frac{1}{m}\sum_{i=1}^{m} [y^{(i)}\log&#x177;^{(i)} + (1-y^{(i)})\log(1-&#x177;^{(i)})]\) 2.4 &#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x5BF9;&#x4E8E;&#x4E00;&#x7EF4;&#x51F8;&#x51FD;&#x6570; \(Repeat\{ \\ &#x3000;w := w - \alpha\frac{dJ_{(w)}}{dw} \\ \}\) &#x5148;&#x968F;&#x673A;&#x627E;&#x4E00;&#x4E2A;&#x70B9;&#xFF0C;&#x8BA1;&#x7B97;&#x51FD;&#x6570;&#x5728;&#x6B64;&#x5904;&#x7684;&#x5BFC;&#x6570;&#xFF0C;&#x518D;&#x4E0D;&#x65AD;&#x91CD;&#x590D;&#x8FD0;&#x7B97;\(w := w - \alpha\frac{dJ_{(w)}}{dw}\)&#x76F4;&#x5230;&#x51FD;&#x6570;&#x4E0E;&#x524D;&#x4E00;&#x4E2A;&#x70B9;&#x7684;&#x5DEE;&#x503C;&#x5C0F;&#x4E8E;&#x67D0;&#x4E2A;&#x9608;&#x503C;&#x3002;&#x3B1;&#x53EB;&#x505A;&#x5B66;&#x4E60;&#x7387;&#xFF0C;&#x662F;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x6B65;&#x957F;&#x3002;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x627E;&#x5230;&#x51FD;&#x6570;&#x7684;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x3002; &#x5BF9;&#x4E8E;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x6709;&#x591A;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x4E0E;&#x4E00;&#x7EF4;&#x51FD;&#x6570;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#x539F;&#x6765;&#x7684;&#x6C42;&#x5BFC;&#x8FD0;&#x7B97;&#x8981;&#x6539;&#x6210;&#x6C42;&#x504F;&#x5BFC;&#xFF0C;&#x539F;&#x7406;&#x548C;&#x4E00;&#x7EF4;&#x51FD;&#x6570;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;&#x5BF9;&#x4E8E;J(w, b)&#xFF1A; \(Repeat\{ \\ &#x3000;w := w - \alpha\frac{dJ(w, b)}{dw} \\ &#x3000;b := b - \alpha\frac{dJ(w, b)}{db} \\ \}\) &#x5BF9;&#x4E8E;&#x4E00;&#x7EF4;&#x51FD;&#x6570;&#xFF0C;&#x4E3A;&#x5565;&#x4E0D;&#x8BA9;&#x3B1;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x51E0;&#x4F55;&#x610F;&#x4E49;&#xFF1F;&#x6211;&#x76F4;&#x89C2;&#x7406;&#x89E3;&#x8BA4;&#x4E3A;&#x3B1;&#x672C;&#x5E94;&#x662F;&#x5F26;&#x957F;&#xFF0C;&#x4F46;&#x4E0D;&#x5E78;&#x7684;&#x662F;\(\frac{dJ(w)}{dw}\)&#x662F;&#x659C;&#x7387;&#x800C;&#x4E0D;&#x662F;cos&#xFF01;&#x56E0;&#x6B64;&#x6240;&#x8C13;&#x7684;&#x6B65;&#x957F;&#x3B1;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x5176;&#x4E58;&#x6570;\(\frac{dJ(w)}{dw}\)&#x4E5F;&#x53EA;&#x8868;&#x660E;&#x4E00;&#x4E2A;&#x5927;&#x81F4;&#x7684;&#x65B9;&#x5411;&#x3002; 2.8 &#x5BFC;&#x6570;&#x8BA1;&#x7B97;&#x4E4B;&#x8BA1;&#x7B97;&#x56FE; &#x672C;&#x8282;&#x9996;&#x6B21;&#x63D0;&#x5230;&#x4E86;&#x201C;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x201D;&#x548C;&#x201C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x201D;&#xFF0C;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x5C31;&#x662F;&#x5C06;&#x5404;&#x53D8;&#x91CF;&#x7EC4;&#x7EC7;&#x6210;&#x590D;&#x5408;&#x51FD;&#x6570;&#xFF0C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x5C31;&#x662F;&#x5BF9;&#x590D;&#x5408;&#x51FD;&#x6570;&#x9010;&#x7EA7;&#x6C42;&#x5BFC;&#x3002;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#x7684;&#x8FC7;&#x7A0B;&#x4E3A;&#x4EC0;&#x4E48;&#x79F0;&#x4E3A;&#x201C;&#x6B63;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x201D;&#x548C;&#x201C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x7B97;&#x6CD5;&#x201D;&#x5462;&#xFF1F; 2.9 &#x903B;&#x8F91;&#x56DE;&#x5F52;&#x4E2D;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x7ED9;&#x5B9A;: \(z = w^{T}x+b\) &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;... &#x2460; \(&#x177; = a = &#x3C3;(z)=\frac{1}{1+e^{-z}}\) &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;... &#x2461; \(L(a, y) = -[y\log(a) + (1-y)\log(1-a)]\) &#x3000;... &#x2462; &#x63A5;&#x4E0B;&#x9010;&#x7EA7;&#x7EC4;&#x7EC7;&#x590D;&#x5408;&#x51FD;&#x6570;&#xFF1A; &#x518D;&#x5229;&#x7528;&#x8BA1;&#x7B97;&#x56FE;&#x6C42;&#x5BFC;&#x2463;&#xFF1A; \(da = \frac{dL(a, y)}{da} = -\frac{y}{a} + \frac{(1-y)}{(1-a)}\) &#x6C42;&#x5BFC;&#x2464;&#xFF1A; \(dz = \frac{dL}{dz} = \frac{dL}{da} \frac{da}{dz}\) &#x3000;&#x3000;\(= (-\frac{y}{a} + \frac{(1-y)}{(1-a)}) (-1)(1+e^{-z})^{-2}(-1)e^{-z}\) &#x3000;&#x3000;&#x3010;&#x5C06;&#x2463;&#x4EE3;&#x5165;\(\frac{dL}{da}\)&#xFF0C;&#x5E76;&#x5BF9;&#x2461;&#x6C42;&#x5BFC;&#x3011; &#x3000;&#x3000;\(= (-\frac{y}{a} + \frac{(1-y)}{(1-a)}) \frac{1}{1+e^{-z}} \frac{e^{-z}}{1+e^{-z}}\) &#x3000;&#x3000;\(=(-\frac{y}{a} + \frac{(1-y)}{(1-a)})a(1-a)\) &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3010;&#x5C06;&#x2461;&#x4EE3;&#x5165;&#x3011; &#x3000;&#x3000;\(=-y(1-a) + a(1-y) \\ =a - y\) &#x6C42;&#x5BFC;&#x2465;&#xFF1A; \(dw_{1} = \frac{dL}{dw_{1}} = \frac{dL}{dz} \frac{dz}{dw_{1}} = dz x_{1} = x_{1} dz\) \(dw_{2} = x_{2} dz\) \(db = dz\) &#x5C06;&#x2465;&#x4EE3;&#x5165;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x5F97;&#x5230;&#xFF1A; \(Repeat\{ \\ &#x3000;w_{1} := w_{1} - &#x3B1; &#xB7; dw_{1} \\ &#x3000;w_{2} := w_{2} - &#x3B1; &#xB7; dw_{2} \\ &#x3000;b := b - &#x3B1; &#xB7; db \\ \}\) 2.10 &#x6709;m&#x4E2A;&#x6837;&#x672C;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x7ED3;&#x5408;&#x4E0A;&#x4E00;&#x8282;&#x7ED3;&#x8BBA;&#xFF0C;&#x5F53;&#x6709;m&#x4E2A;&#x6837;&#x672C;&#x65F6;&#xFF0C;&#x6210;&#x672C;&#x51FD;&#x6570;&#xFF1A;\(J(w, b) = \frac{1}{m} \sum_{i=1}^{m}L(a^{(i)}, y^{(i)})\) &#x5176;&#x4E2D;&#xFF1A;\(a^{(i)} = &#x177;^{(i)} = &#x3C3;(z^{(i)}) = &#x3C3;(w^Tx^{(i)} + b)\) &#x4E8E;&#x662F;&#xFF1A;\(\frac{dJ(w,b)}{dw} = \frac{1}{m}\sum_{i=1}^{m}\frac{d}{dw}L(a^{(i)}, y{(i)})\) &#x5E94;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x4F2A;&#x4EE3;&#x7801;&#x8868;&#x4E3A;&#xFF1A; \(J=0; dw_{1}=0; dw_{2}=0; db=0; \\ For i=1..m &#x3000;&#x3000; &#x3010;&#x5FAA;&#x73AF;I&#x3011; \\ &#x3000;z^{(i)}=w^{T}x^{(i)}+b \\ &#x3000;a^{(i)} = &#x3C3;(z^{(i)}) \\ &#x3000;J += -[y^{(i)}\log a^{(i)} + (1-y^{(i)})\log(1-a^{(i)})] \\ &#x3000;dz^{(i)} = a^{(i)} - y^{(i)} &#x3000;&#x3000;&#x3010;&#x5C06;&#x2464;&#x4EE3;&#x5165;&#x3011;&#x3000; \\ &#x3000;dw_{1} += {x_{1}}^{(i)}dz^{(i)} &#x3000; &#x3010;&#x5C06;&#x2465;&#x4EE3;&#x5165;&#x3011; &#x3010;&#x5FAA;&#x73AF;II&#x3011; \\ &#x3000;dw_{2} += {x_{2}}^{(i)}dz^{(i)} \\ &#x3000;db += dz^{(i)} \\ J=J/m; \; dw_{1}=dw_{1}/m; \; dw_{2}=dw_{2}/m; \; db=db/m; \\ w_{1} := w_{1} - &#x3B1;&#xB7;dw_{1} \\ w_{2} := w_{2} - &#x3B1;&#xB7;dw_{2} \\ b := b - &#x3B1;&#xB7;db\) &#x8FD9;&#x53EA;&#x5E94;&#x7528;&#x4E86;&#x4E00;&#x8F6E;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x5FAA;&#x73AF;&#xFF1A;&#x3010;&#x5FAA;&#x73AF;I&#x3011;&#x662F;&#x904D;&#x5386;&#x6240;&#x6709;&#x6837;&#x672C;&#xFF0C;&#x3010;&#x5FAA;&#x73AF;II&#x3011;&#x662F;&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x91CC;&#x7684;&#x6240;&#x6709;&#x7279;&#x5F81;&#x3002; 2.11&#x5411;&#x91CF;&#x5316; &#x7406;&#x8BBA;&#x5DF2;&#x7ECF;&#x8BB2;&#x5B8C;&#x4E86;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x5411;&#x91CF;&#x5316;&#x6D88;&#x9664;&#x524D;&#x4E00;&#x5C0F;&#x8282;&#x4E2D;&#x7684;&#x4E24;&#x4E2A;&#x5FAA;&#x73AF;&#xFF0C;&#x8BA9;&#x4EE3;&#x7801;&#x8DD1;&#x5F97;&#x66F4;&#x6709;&#x6548;&#x7387;&#x3002; 123456789import numpy as npa = np.random.rand(100000)b = np.random.rand(100000)c = np.dot(a, b) # &#x2460;for i in range(100000): # &#x2461; c += a[i]*b[i] &#x4EE3;&#x7801;&#x2460;&#x548C;&#x2461;&#x5728;&#x7ED3;&#x679C;&#x4E0A;&#x662F;&#x7B49;&#x4EF7;&#x7684;&#xFF0C;&#x524D;&#x8005;&#x5C31;&#x662F;&#x5411;&#x91CF;&#x5316;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x66F4;&#x7B80;&#x6D01;&#x4E14;&#x66F4;&#x6709;&#x6548;&#x7387;&#x3002; &#x5BF9;&#x4E8E;\(z=w^{T}x+b\)&#xFF0C;&#x5176;&#x4E2D;\(w=\left\lgroup \matrix{w_{1} \cr w_{2} \cr ... \cr w_{n_{x}} }\right \rgroup\)&#xFF0C;\(x=\left\lgroup \matrix{x_{1} \cr x_{2} \cr ... \cr x_{n_{x}} }\right \rgroup\)&#xFF0C; \(w\in\mathbb{R}^n_{x}, \;x\in\mathbb{R}^n_{x}\) &#x6C42;&#x89E3;z&#x975E;&#x5411;&#x91CF;&#x5316;&#x7684;&#x5199;&#x6CD5;&#xFF1A; 1234z=0for i in range(nx): z += w[i] * x[i]z += b &#x5411;&#x91CF;&#x5316;&#x7684;&#x5199;&#x6CD5;&#x53EA;&#x9700;&#x8981;&#xFF1A; 12import numpy as npz = np.dot(w, x) + b CPU&#x548C;GPU&#x90FD;&#x6709;&#x5E76;&#x884C;&#x5316;&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x53C8;&#x53EB;SIMD&#xFF08;&#x5355;&#x6307;&#x4EE4;&#x6D41;&#x591A;&#x6570;&#x636E;&#x6D41; single instruments multiple data&#xFF09;&#xFF0C;&#x5728;python&#x4E2D;&#x6709;&#x4F7F;&#x7528;SIMD&#x7684;&#x5185;&#x7F6E;&#x51FD;&#x6570;&#xFF0C;&#x5982;np.function&#xFF0C;GPU&#x66F4;&#x64C5;&#x957F;&#x6267;&#x884C;SIMD&#x3002; 2.12 &#x66F4;&#x591A;&#x5411;&#x91CF;&#x5316;&#x7684;&#x4F8B;&#x5B50; &#x5C3D;&#x91CF;&#x4F7F;&#x7528;np&#x7684;&#x5411;&#x91CF;&#x753B;&#x51FD;&#x6570;&#x6765;&#x53D6;&#x4EE3;for&#x5FAA;&#x73AF;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; \(v=\left\lgroup \matrix{v_{1} \cr v_{2} \cr ... \cr v_{n} }\right \rgroup\)&#xFF0C;&#x6C42;\(u=\left\lgroup \matrix{e^{v_{1}} \cr e^{v_{2}} \cr ... \cr e^{v_{n}} }\right \rgroup\) 12345u = np.zeros((n, 1))for i in range(n): # &#x975E;&#x5411;&#x91CF;&#x5316;&#x7684;&#x5199;&#x6CD5; u[i] = math.exp(v[i]) u = np.exp(v) # &#x5411;&#x91CF;&#x5316;&#x7684;&#x5199;&#x6CD5; &#x63A5;&#x4E0B;&#x6765;&#x5229;&#x7528;&#x5411;&#x91CF;&#x5316;&#x5C06;2.10&#x4F2A;&#x7801;&#x4E2D;&#x7684;for&#x5FAA;&#x73AF;&#x6D88;&#x9664;&#x6389;&#xFF1A; \(J=0; \\ dw_{1}=0; dw_{2}=0; &#x3000;&#x3010;&#x66FF;&#x6362;&#x4E3A;dw = np.zeros((n_x, 1))&#x3011; \\ db=0; \\ For i=1..m \\ &#x3000;z^{(i)}=w^{T}x^{(i)}+b &#x3000;&#x3010;&#x66FF;&#x6362;&#x4E3A;Z=W.T * X + b = np.dot(W.T, X) + b&#x3011; \\ &#x3000;a^{(i)} = &#x3C3;(z^{(i)}) &#x3000; &#x3000; &#x3000;&#x3010;&#x66FF;&#x6362;&#x4E3A;A = sigmoid(Z)&#x3011; \\ &#x3000;J += -[y^{(i)}\log a^{(i)} + (1-y^{(i)})\log(1-a^{(i)})] \\ &#x3000;dz^{(i)} = a^{(i)} - y^{(i)} &#x3000;&#x3010;&#x66FF;&#x6362;&#x4E3A;dZ = A - Y&#x3011; \\ &#x3000;dw_{1} += {x_{1}}^{(i)}dz^{(i)} &#x3000; &#x3010;&#x66FF;&#x6362;&#x4E3A;dW = (1/m) * X * dZ&#x3011; \\ &#x3000;dw_{2} += {x_{2}}^{(i)}dz^{(i)} \\ &#x3000;db += dz^{(i)} &#x3000; &#x3000; &#x3000;&#x3000; &#x3000;&#x3010;&#x66FF;&#x6362;&#x4E3A;db = (1/m) * np.sum(dZ)&#x3011; \\ J=J/m; \\ dw_{1}=dw_{1}/m; \; dw_{2}=dw_{2}/m; &#x3000; &#x3010;&#x66FF;&#x6362;&#x4E3A;dW /= m&#x3011; \\ db=db/m; \\ w_{1} := w_{1} - &#x3B1;&#xB7;dw_{1} \\ w_{2} := w_{2} - &#x3B1;&#xB7;dw_{2} \\ b := b - &#x3B1;&#xB7;db\) 2.13 &#x6709;m&#x4E2A;&#x6837;&#x672C;&#x7684;&#x5411;&#x91CF;&#x5316;&#x903B;&#x8F91;&#x56DE;&#x5F52; &#x5BF9;&#x4E8E;&#x6709;m&#x4E2A;&#x6837;&#x672C;&#xFF1A; \(z^{(1)} = w^{T}x^{(1)} + b\)&#xFF0C;\(z^{(2)} = w^{T}x^{(2)} + b\)&#xFF0C;\(z^{(m)} = w^{T}x^{(m)} + b\) \(a^{(1)}=&#x3C3;(z^{(1)})\)&#xFF0C;\(a^{(2)}=&#x3C3;(z^{(2)})\)&#xFF0C;\(a^{(m)}=&#x3C3;(z^{(m)})\) &#x53EF;&#x4EE4;\(X=\begin{bmatrix}\mid&amp;\mid&amp;&amp;\mid\\x^{(1)}&amp;x^{(2)}&amp;\cdots&amp;x^{(m)}\\ \mid&amp;\mid&amp;&amp;\mid\end{bmatrix} \; \in \mathbb{R}^{n_{x}&#xD7;m}\) &#x5219;$Z = [Z^{(1)} , Z^{(2)} , ... , Z^{(m)}] = W^{T}&#xB7;X + [b, b, ..., b] $ &#x4F7F;&#x7528;&#x5411;&#x91CF;&#x5316;&#x7684;&#x4EE3;&#x7801;&#x5199;&#x4F5C;&#xFF1A; 1Z = np.dot(W.T, X) + b &#x5B9E;&#x6570;b&#x88AB;&#x81EA;&#x52A8;&#x6269;&#x5C55;&#x4E3A;&#x77E9;&#x9635;&#xFF0C;&#x8FD9;&#x5728;python&#x4E2D;&#x88AB;&#x79F0;&#x4F5C;&#x5E7F;&#x64AD;&#x3002; \(A = [a^{(1)}, a^{(2)}, ..., a^{(m)}] = &#x3C3;(Z)\) 2.14 &#x5411;&#x91CF;&#x5316;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x6210;&#x672C;&#x51FD;&#x6570;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5; &#x7EE7;&#x7EED;&#x5411;&#x91CF;&#x5316;2.12&#x4E2D;&#x7684;&#x4F2A;&#x7801;&#xFF1A; \(A = [a^{(1)}, a^{(2)}, ..., a^{(m)}] \; \; \; \\ Y = [y^{(1)}, y^{(2)}, ..., y^{(m)}] \\ Z = W^{T}X + b = np.dot(W.T, X) + b \\ A = &#x3C3;(Z) \\ dZ = A - Y \\ dW = \frac{1}{m}XdZ^{T} \\ db = \frac{1}{m} np.sum(dZ) \\ W := W - &#x3B1;&#xB7;dW \\ b := b - &#x3B1;&#xB7;db\) &#x4EE5;&#x4E0A;&#x662F;&#x4E00;&#x6B21;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x8FED;&#x4EE3;&#xFF0C;&#x82E5;&#x8981;&#x8FDB;&#x884C;n&#x8F6E;&#x8FED;&#x4EE3;&#xFF0C;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x4E00;&#x4E2A;n&#x7684;&#x5FAA;&#x73AF;&#xFF0C;&#x8FD9;&#x4E2A;&#x6700;&#x5916;&#x5C42;&#x5FAA;&#x73AF;&#x662F;&#x65E0;&#x6CD5;&#x907F;&#x514D;&#x7684;&#x3002; &#x4F5C;&#x4E1A; &#x4F5C;&#x4E1A;&#x9898;&#x76EE;&#x4EE5;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x6570;&#x636E;&#x5728;&#x7F51;&#x4E0A;&#x53EF;&#x4EE5;&#x627E;&#x5F97;&#x5230;&#xFF0C;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x91CF;&#x592A;&#x5927;&#xFF0C;&#x5C31;&#x4E0D;&#x4E0A;&#x4F20;&#x4E86;&#x3002; &#x9898;&#x76EE; &#x7ED9;&#x5B9A;209&#x4E2A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x548C;50&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#xFF0C;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x5305;&#x542B;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x5E76;&#x6807;&#x6CE8;&#x4E86;&#x8BE5;&#x56FE;&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;&#x732B;&#xFF0C;&#x4F7F;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x7528;&#x6765;&#x8BC6;&#x522B;&#x7ED9;&#x5B9A;&#x7684;&#x56FE;&#x7247;&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;&#x732B;&#x3002;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x548C;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x5305;&#x542B;&#x4E09;&#x4E2A;dataset&#xFF1A; 123456789101112131415/list_classes, shape:(2, ) value:[b&apos;non-cat&apos; b&apos;cat&apos;]&#x3000;&#x3000;&#x3000;# &#x6807;&#x6CE8;&#x8BCD;&#x5178;&#xFF0C;&#x8868;&#x793A;&#x6CA1;&#x732B;&#x548C;&#x6709;&#x732B;&#x7684;&#x6587;&#x5B57;&#x8868;&#x8FF0; /train_set_x, shape:(209, 64, 64, 3) # &#x5171;209&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x6BCF;&#x5F20;&#x56FE;&#x7247;&#x662F;64 * 64 * 3 value:[[[[ 17 31 56] # &#x56FE;&#x7247;&#x6570;&#x636E; [ 22 33 59] [ 25 35 62] ..., [ 1 28 57] [ 1 26 56] [ 1 22 51]] ... /train_set_y, shape:(209,) # &#x5171;209&#x4E2A;&#x6807;&#x6CE8; value:[0 0 1 ... 0 0 0] &#x4E3B;&#x5E72;&#x903B;&#x8F91; &#x4E3B;&#x5E72;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526# &#x8FD4;&#x56DE;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x548C;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x7684;&#x6570;&#x636E;&#x3001;&#x6807;&#x6CE8;&#xFF0C;classes&#x662F;&#x6807;&#x6CE8;&#x5BF9;&#x5E94;&#x7684;&#x542B;&#x4E49;train_set_x_orig, train_set_y, test_set_x_orig, test_set_y, classes = self.load_dataset()m_train = train_set_x_orig.shape[0] # &#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x4E2A;&#x6570;&#xFF1A;209m_test = test_set_x_orig.shape[0] # &#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x7684;&#x4E2A;&#x6570;&#xFF1A;50num_px = train_set_x_orig.shape[1] # &#x56FE;&#x7247;&#x7684;&#x5BBD;&#x3001;&#x9AD8;&#x50CF;&#x7D20;&#x6570;&#xFF1A;64# &#x5C06;&#x8BAD;&#x7EC3;&#x548C;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x6241;&#x5E73;&#x5316;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x5F20;&#x56FE;&#xFF0C;&#x5C06; (64, 64, 3) &#x7684;&#x56FE;&#x7247;&#x8F6C;&#x6210;(64*64*3, 1)# &#x5BF9;&#x4E8E;&#x6574;&#x4E2A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;&#x5C06;(209, 64, 64, 3)&#x8F6C;&#x6210;(209, -1).T&#xFF0C;&#x6CE8;&#x610F;&#x6709;&#x4E2A;&#x8F6C;&#x7F6E;&#xFF0C;&#x8F6C;&#x7F6E;&#x540E;&#x6BCF;&#x4E00;&#x5217;&#x662F;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#xFF0C;# &#x67D0;&#x5217;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#x662F;&#x56FE;&#x7247;&#x7684;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#x3002;&#x8BAD;&#x7EC3;&#x96C6;&#x5171;209&#x884C;&#xFF08;&#x4E2A;&#x6837;&#x672C;&#xFF09;&#xFF0C;12288&#x4E2A;&#x7279;&#x5F81;&#x3002;&#x53C2;&#x89C1;&#x7B14;&#x8BB0;2.1&#x3002;train_set_x_flatten = train_set_x_orig.reshape(train_set_x_orig.shape[0],-1).Ttest_set_x_flatten = test_set_x_orig.reshape(test_set_x_orig.shape[0],-1).T# &#x6807;&#x51C6;&#x5316;&#x6570;&#x636E;&#xFF0C;&#x8BA9;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x2208;[0, 1]train_set_x = train_set_x_flatten / 255.test_set_x = test_set_x_flatten / 255.# &#x8BAD;&#x7EC3;&#x51FA;&#x6A21;&#x578B; &#x1F3C1;d = self.model(train_set_x, train_set_y, test_set_x, test_set_y, num_iterations = 2000, learning_rate = 0.005, print_cost = True)# &#x9A8C;&#x8BC1;&#x6A21;&#x578B;fname = os.path.join(self.imagesDir, &apos;my_image2.jpg&apos;)image = np.array(ndimage.imread(fname, flatten=False))my_image = scipy.misc.imresize(image, size=(num_px, num_px)).reshape((1, num_px*num_px*3)).Tmy_predicted_image = self.predict(d[&apos;w&apos;], d[&apos;b&apos;], my_image)logging.info(my_predicted_image) &#x8BAD;&#x7EC3;&#x6A21;&#x578B; &#x4E3B;&#x5E72;&#x903B;&#x8F91;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x65E0;&#x9700;&#x8FC7;&#x591A;&#x89E3;&#x91CA;&#xFF0C;&#x6DF1;&#x5165;&#x6A21;&#x578B;&#x8BAD;&#x7EC3;&#x90E8;&#x5206;&#xFF1A; 12345678910111213141516171819202122232425def model(self, X_train, Y_train, X_test, Y_test, num_iterations = 2000, learning_rate = 0.5, print_cost = False): w, b = self.initialize_with_zeros(X_train.shape[0]) # w&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x7B49;&#x4E8E;&#x7279;&#x5F81;&#x6570;&#xFF0C;b&#x662F;&#x4E00;&#x4E2A;&#x5B9E;&#x6570;&#xFF0C;&#x5C06;&#x4ED6;&#x4EEC;&#x521D;&#x59CB;&#x5316;&#x4E3A;0 # &#x5B66;&#x4E60;&#x7387;&#x4E3A;learning_rate&#xFF0C;&#x7ECF;&#x8FC7;num_iterations&#x8F6E;&#x8FED;&#x4EE3;&#xFF0C;&#x83B7;&#x5F97;&#x6A21;&#x578B;&#x53C2;&#x6570; &#x1F3C1; parameters, grads, costs = self.optimize(w, b, X_train, Y_train, num_iterations, learning_rate, print_cost=True) w = parameters[&quot;w&quot;] b = parameters[&quot;b&quot;] # &#x9A8C;&#x8BC1;&#x6A21;&#x578B;&#x5728;&#x8BAD;&#x7EC3;&#x96C6;&#x548C;&#x6D4B;&#x8BD5;&#x96C6;&#x4E0A;&#x7684;&#x51C6;&#x786E;&#x7387; Y_prediction_test = self.predict(w, b, X_test) Y_prediction_train = self.predict(w, b, X_train) print(&quot;train accuracy: {} %&quot;.format(100 - np.mean(np.abs(Y_prediction_train - Y_train)) * 100)) print(&quot;test accuracy: {} %&quot;.format(100 - np.mean(np.abs(Y_prediction_test - Y_test)) * 100)) # &#x8FD9;&#x662F;&#x6784;&#x6210;&#x6A21;&#x578B;&#x7684;&#x5168;&#x90E8;&#x5143;&#x7D20;&#xFF0C;&#x5BF9;&#x672A;&#x6765;&#x6709;&#x7528;&#x7684;&#x5C31;&#x662F;w&#x548C;b d = {&quot;costs&quot;: costs, &quot;Y_prediction_test&quot;: Y_prediction_test, &quot;Y_prediction_train&quot; : Y_prediction_train, &quot;w&quot; : w, &quot;b&quot; : b, &quot;learning_rate&quot; : learning_rate, &quot;num_iterations&quot;: num_iterations} return d &#x591A;&#x8F6E;&#x8FED;&#x4EE3; &#x6240;&#x8C13;&#x201C;&#x6A21;&#x578B;&#x201D;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#x7ECF;&#x8FC7;&#x82E5;&#x5E72;&#x8F6E;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x7684;&#x8FED;&#x4EE3;&#xFF0C;&#x5F97;&#x5230;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x6700;&#x5C0F;&#x7684;w&#x548C;b&#xFF0C;&#x8BAD;&#x7EC3;&#x7684;&#x6838;&#x5FC3;&#x903B;&#x8F91;&#x5728;&#x51FD;&#x6570;optimize(...)&#x4E2D;&#xFF1A; 1234567891011121314151617181920212223def optimize(self, w, b, X, Y, num_iterations, learning_rate, print_cost = False): costs = [] for i in range(num_iterations): grads, cost = self.propagate(w, b, X, Y) # &#x4E00;&#x6B21;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x1F3C1; dw = grads[&quot;dw&quot;] db = grads[&quot;db&quot;] w = w - learning_rate * dw b = b - learning_rate * db # Record the costs if i % 100 == 0: costs.append(cost) ... params = {&quot;w&quot;: w, &quot;b&quot;: b} grads = {&quot;dw&quot;: dw, &quot;db&quot;: db} return params, grads, costs &#x68AF;&#x5EA6;&#x4E0B;&#x964D; propagate(...)&#x4E2D;&#x662F;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7684;&#x6838;&#x5FC3;&#x903B;&#x8F91;&#xFF0C;&#x5BF9;&#x5E94;&#x7B14;&#x8BB0;&#x7684;2.14&#xFF1A; 123456789101112131415def propagate(self, w, b, X, Y): m = X.shape[1] A = self.sigmoid(np.dot(w.T,X) + b) # compute activation cost = -(np.sum(np.dot(Y,np.log(A).T)+np.dot((1-Y),np.log(1-A).T)))/m # compute cost dw = (np.dot(X,(A-Y).T))/m db = (np.sum(A-Y))/m ... cost = np.squeeze(cost) grads = {&quot;dw&quot;: dw, &quot;db&quot;: db} return grads, cost &#x8FC7;&#x7A0B;&#x8FD8;&#x662F;&#x975E;&#x5E38;&#x6E05;&#x6670;&#x7684;&#xFF0C;&#x6A21;&#x578B;&#x8BAD;&#x7EC3;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5C06;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x548C;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x4EE3;&#x5165;&#x6A21;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x7CBE;&#x5EA6;&#x662F;99%&#xFF0C;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x7684;&#x7CBE;&#x5EA6;&#x662F;70%&#xFF1A; 12train accuracy: 99.04306220095694 %test accuracy: 70.0 % &#x968F;&#x4FBF;&#x627E;&#x5F20;&#x56FE;&#xFF0C;&#x5E26;&#x5165;predict(...)&#x51FD;&#x6570;&#xFF0C;&#x5373;&#x53EF;&#x9A8C;&#x8BC1;&#x6709;&#x6548;&#x6027;&#x3002; &#x601D;&#x8003; &#x786E;&#x5B9E;&#x548C;&#x4F20;&#x7EDF;&#x7684;&#x7F16;&#x7A0B;&#x601D;&#x8DEF;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#xFF1A;&#x4F20;&#x7EDF;&#x7684;&#x7F16;&#x7A0B;&#x601D;&#x8DEF;&#x4E2D;&#x5BF9;/&#x9519;&#x662F;&#x4E2A;&#x786E;&#x5B9A;&#x7684;&#x503C;&#xFF0C;&#x6B63;&#x5982;if/else&#x6216;true/false&#xFF0C;&#x975E;&#x6B64;&#x5373;&#x5F7C;&#x7684;&#x3002;&#x5F53;&#x7ED3;&#x679C;&#x548C;&#x9884;&#x671F;&#x53D1;&#x751F;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x90A3;&#x53EB;bug&#xFF0C;&#x987A;&#x7740;&#x4EE3;&#x7801;&#x5F80;&#x91CC;&#x67E5;&#xFF0C;&#x4E00;&#x5B9A;&#x80FD;&#x67E5;&#x5230;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x539F;&#x56E0;&#x3002; &#x800C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4F3C;&#x4E4E;&#x66F4;&#x9760;&#x8FD1;&#x771F;&#x5B9E;&#x4E16;&#x754C;&#xFF0C;&#x56E0;&#x4E3A;&#x771F;&#x5B9E;&#x4E16;&#x754C;&#x4E2D;&#x5F88;&#x591A;&#x5224;&#x65AD;&#x4E0D;&#x662F;&#x975E;&#x9ED1;&#x5373;&#x767D;&#xFF0C;&#x800C;&#x662F;&#x6982;&#x7387;&#x7684;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x4E16;&#x754C;&#x7684;&#x672C;&#x8D28;&#x3002;&#x4F46;&#x8FD9;&#x7ED9;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x5E26;&#x6765;&#x9EBB;&#x70E6;&#x2014;&#x2014;&#x5F53;&#x7ED3;&#x679C;&#x548C;&#x9884;&#x671F;&#x4E0D;&#x4E00;&#x81F4;&#x65F6;&#xFF0C;&#x4F60;&#x6CA1;&#x6709;&#x53EF;&#x987A;&#x85E4;&#x6478;&#x74DC;&#x7684;&#x903B;&#x8F91;&#x70B9;&#x6765;&#x8868;&#x660E;&#x5230;&#x5E95;&#x54EA;&#x91CC;&#x51FA;&#x4E86;&#x95EE;&#x9898;&#x3002;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x786E;&#x8BA4;&#x201C;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x201D;&#x7684;&#x7B97;&#x6CD5;&#x662F;&#x4E0D;&#x662F;&#x6B63;&#x786E;&#xFF0C;&#x6A21;&#x578B;&#x4EA7;&#x751F;&#x7684;&#x662F;&#x4E00;&#x6279;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x9488;&#x5BF9;&#x5177;&#x4F53;&#x7684;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x65E0;&#x6CD5;&#x4EBA;&#x8089;&#x5224;&#x65AD;&#x67D0;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x6743;&#x91CD;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002; &#x4F5C;&#x4E1A;&#x91CC;images/&#x4E2D;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x6A21;&#x578B;&#x90FD;&#x80FD;&#x5224;&#x65AD;&#x6B63;&#x786E;&#xFF0C;&#x4F46;&#x6211;&#x4ECE;&#x7F51;&#x4E0A;&#x968F;&#x4FBF;&#x627E;&#x51E0;&#x5F20;&#x732B;&#x56FE;&#x6254;&#x7ED9;&#x6A21;&#x578B;&#xFF0C;&#x7ED3;&#x679C;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x3002;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x8BE5;&#x5982;&#x4F55;&#x6539;&#x8FDB;&#x624D;&#x80FD;&#x8BA9;&#x65B0;&#x56FE;&#x8BC6;&#x522B;&#x6B63;&#x786E;&#x3002;&#x76F4;&#x89C2;&#x7684;&#x60F3;&#x6CD5;&#x53EF;&#x80FD;&#x662F;&#x5582;&#x7ED9;&#x6A21;&#x578B;&#x66F4;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;&#x53EF;&#x662F;&#x5982;&#x4F55;&#x505A;&#x51FA;&#x4E00;&#x4E2A;&#x91CF;&#x5316;&#x7684;&#x9884;&#x6D4B;&#x5462;&#xFF1F;&#x9700;&#x8981;&#x5582;&#x591A;&#x5C11;&#xFF1F;&#x80FD;&#x8FBE;&#x5230;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x6C34;&#x5E73;&#xFF1F;&#x4E0D;&#x540C;&#x7684;&#x4EBA;&#x7C7B;&#x5927;&#x8111;&#x5BF9;&#x4E8E;&#x65B0;&#x4E8B;&#x7269;&#x7684;&#x5B66;&#x4E60;&#x6548;&#x7387;&#x4E5F;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x6279;&#x6837;&#x672C;&#xFF0C;&#x6709;&#x6CA1;&#x6709;&#x53EF;&#x80FD;&#x6539;&#x8FDB;&#x6A21;&#x578B;&#xFF0C;&#x4EE4;&#x5176;&#x6548;&#x679C;&#x5F97;&#x5230;&#x63D0;&#x5347;&#x5462;&#xFF1F;&#x600E;&#x4E48;&#x6539;&#x8FDB;&#xFF1F; &#x6211;&#x76F8;&#x4FE1;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x5728;&#x672A;&#x6765;&#x7684;&#x8BFE;&#x7A0B;&#x4E2D;&#x4F1A;&#x6709;&#x89E3;&#x7B54;&#xFF0C;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x5427;&#xFF01; &#x672C;&#x6587;&#x4EE3;&#x7801;&#x53C2;&#x89C1;https://github.com/palanceli/MachineLearningSample/blob/master/DeepLearningAIHomeWorks/mywork.py&#x7684;class Coding1_1&#x90E8;&#x5206;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepLearning开悟]]></title>
    <url>%2F2018%2F03%2F09%2F2018%2F0309DeepLearningAI01%2F</url>
    <content type="text"><![CDATA[&#x5B8C;&#x6210;DeepLearning.AI&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7F16;&#x7A0B;&#x4F5C;&#x4E1A;&#x540E;&#xFF0C;&#x7A81;&#x7136;&#x89C9;&#x5F97;&#x5BF9;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x5F00;&#x609F;&#x4E86;&#x3002;&#x628A;&#x4E4B;&#x524D;&#x7684;&#x5B66;&#x4E60;&#x3001;&#x611F;&#x609F;&#x548C;&#x4F5C;&#x4E1A;&#x4EE3;&#x7801;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002; &#x524D;&#x51E0;&#x4E2A;&#x6708;&#x7684;&#x5B66;&#x4E60;&#x8981;&#x4E48;&#x592A;&#x504F;&#x5411;&#x7406;&#x8BBA;&#x8BFE;&#x7A0B;&#xFF0C;&#x8981;&#x4E48;&#x53C8;&#x662F;&#x5982;&#x4F55;&#x64CD;&#x4F5C;API&#x7684;&#x6240;&#x8C13;&#x5B9E;&#x6218;&#x3002;&#x524D;&#x8005;&#x6211;&#x5543;&#x4E86;&#x597D;&#x591A;&#x904D;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#xFF0C;&#x603B;&#x4E0D;&#x77E5;&#x9053;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x8DDF;&#x56FE;&#x7247;&#x8BC6;&#x522B;&#x3001;&#x7FFB;&#x8BD1;&#x3001;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x6709;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1B;&#x540E;&#x8005;&#x6211;&#x867D;&#x7136;&#x80FD;&#x8FD0;&#x7528;TensorFlow&#x505A;&#x4E00;&#x4E9B;&#x4E8B;&#x60C5;&#xFF0C;&#x4F46;&#x4EC5;&#x4EC5;&#x662F;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x64CD;&#x4F5C;API&#x800C;&#x5DF2;&#xFF0C;&#x90A3;&#x548C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x539F;&#x7406;&#x5176;&#x5B9E;&#x6CA1;&#x5565;&#x5173;&#x7CFB;&#x3002; &#x505A;&#x5B8C;DeepLearning.AI&#x7B2C;&#x4E00;&#x4E2A;&#x7F16;&#x7A0B;&#x4F5C;&#x4E1A;&#x540E;&#xFF0C;&#x7EC8;&#x4E8E;&#x80FD;&#x591F;&#x628A;&#x7406;&#x8BBA;&#x548C;&#x5B9E;&#x8DF5;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x4E86;&#xFF0C;&#x611F;&#x89C9;&#x5C31;&#x597D;&#x50CF;&#x8D8A;&#x8FC7;&#x4E86;&#x4E00;&#x9053;&#x5C71;&#x4E18;&#xFF0C;&#x773C;&#x524D;&#x4E00;&#x4EAE;&#x770B;&#x5230;&#x68A6;&#x5BD0;&#x5DF2;&#x4E45;&#x7684;&#x7F8E;&#x4E3D;&#x5929;&#x5730;&#x3002; &#x6211;&#x6240;&#x7406;&#x89E3;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC; &#x4EBA;&#x8111;&#x7684;&#x5DE5;&#x4F5C;&#x57FA;&#x7840;&#x662F;&#x57FA;&#x4E8E;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x6BCF;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x6709;&#x5F00;/&#x95ED;&#x4E24;&#x79CD;&#x72B6;&#x6001;&#x3002;&#x4EBA;&#x8111;&#x91CC;&#x6709;&#x4E0A;&#x4EBF;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x770B;&#x5230;&#x4E00;&#x53EA;&#x732B;&#x4F1A;&#x89E6;&#x53D1;&#x5927;&#x8111;&#x91CC;&#x82E5;&#x5E72;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x901A;&#x8DEF;&#x95ED;&#x5408;&#xFF0C;&#x8FD9;&#x5C31;&#x628A;&#x201C;&#x732B;&#x201D;&#x548C;&#x8FD9;&#x4E9B;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x72B6;&#x6001;&#x5EFA;&#x7ACB;&#x4E86;&#x5173;&#x8054;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x80FD;&#x4E0D;&#x80FD;&#x627E;&#x5230;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x7B49;&#x5F0F;&#xFF1A; x1 * w1 + x2 * w2 + ... + xn * wn = P &#x5176;&#x4E2D;x1..xn&#x662F;&#x82E5;&#x5E72;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#xFF0C;w1..wn&#xFF08;&#x8BB0;&#x4F5C;W&#xFF09;&#x662F;&#x82E5;&#x5E72;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6BCF;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x6743;&#x91CD;&#xFF0C;P&#x662F;&#x8FD9;&#x5F20;&#x56FE;&#x662F;&#x5426;&#x6709;&#x732B;&#x7684;&#x6982;&#x7387;&#x3002;&#x5177;&#x4F53;&#x9700;&#x8981;&#x591A;&#x5C11;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#x5462;&#xFF1F;&#x5BF9;&#x4E8E;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x6765;&#x8BF4;&#xFF0C;&#x80FD;&#x51B3;&#x5B9A;&#x5B83;&#x6709;&#x6CA1;&#x6709;&#x732B;&#x7684;&#x662F;&#x6BCF;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x56E0;&#x6B64;&#x50CF;&#x7D20;&#x6570;&#x5C31;&#x662F;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x76F4;&#x89C2;&#x7684;&#x60F3;&#x6CD5;&#x3002; &#x8FD9;&#x4E2A;&#x7B49;&#x5F0F;&#x7684;&#x542B;&#x4E49;&#x5C31;&#x662F;&#xFF1A;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x627E;&#x5230;&#x4E00;&#x5957;&#x666E;&#x9002;&#x7684;&#x6743;&#x91CD;&#x5E8F;&#x5217;&#xFF0C;&#x628A;&#x6BCF;&#x5F20;&#x56FE;&#x7247;&#x7684;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x6254;&#x7ED9;&#x5B83;&#x4EEC;&#xFF0C;&#x5C31;&#x80FD;&#x5F97;&#x51FA;&#x56FE;&#x7247;&#x662F;&#x5426;&#x5305;&#x542B;&#x732B;&#x7684;&#x5224;&#x65AD;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x3002; &#x600E;&#x4E48;&#x627E;&#x5230;&#x8FD9;&#x6279;&#x666E;&#x9002;&#x7684;&#x6743;&#x91CD;&#x5E8F;&#x5217;W&#x5462;&#xFF1F;&#x5982;&#x679C;&#x80FD;&#x591F;&#x4EE3;&#x5165;m&#x5F20;&#x56FE;&#xFF0C;&#x5BF9;&#x4E8E;&#x6709;&#x732B;&#x7684;&#x80FD;&#x8BA9;&#x7ED3;&#x679C;&#x4E3A;1&#xFF0C;&#x6CA1;&#x732B;&#x7684;&#x7ED3;&#x679C;&#x4E3A;0&#xFF0C;&#x6211;&#x4EEC;&#x8BA4;&#x4E3A;&#x8FD9;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x7406;&#x60F3;&#x7684;W&#xFF0C;&#x4EE5;&#x540E;&#x518D;&#x4EE3;&#x5165;&#x4ECE;&#x6CA1;&#x89C1;&#x8FC7;&#x7684;&#x65B0;&#x56FE;&#xFF0C;&#x5F88;&#x53EF;&#x80FD;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;P&#x5C31;&#x80FD;&#x53CD;&#x6620;&#x51FA;&#x662F;&#x5426;&#x6709;&#x732B;&#x4E86;&#x3002; &#x5177;&#x4F53;&#x600E;&#x4E48;&#x8BA1;&#x7B97;&#x8FD9;&#x5957;W&#x5462;&#xFF1F;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x7528;&#x5230;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x4E86;&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x975E;&#x51F8;&#x7684;&#x6210;&#x672C;&#x51FD;&#x6570;L&#x6765;&#x53CD;&#x5E94;&#x5728;&#x4E00;&#x5957;&#x56FA;&#x5B9A;&#x7684;&#x6743;&#x91CD;W&#x4E0B;&#xFF0C;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x548C;&#x5B9E;&#x9645;&#x7ED3;&#x679C;&#x4E4B;&#x95F4;&#x7684;&#x504F;&#x5DEE;&#x3002;&#x5148;&#x968F;&#x673A;&#x53D6;&#x4E00;&#x5957;W&#xFF0C;&#x901A;&#x8FC7;&#x6C42;&#x504F;&#x5BFC;&#x73AF;&#x987E;&#x56DB;&#x5468;&#xFF0C;&#x627E;&#x5230;&#x4EE4;&#x6210;&#x672C;&#x51FD;&#x6570;&#x4E0B;&#x964D;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x8BA9;W&#x5411;&#x8FD9;&#x4E2A;&#x65B9;&#x5411;&#x4FEE;&#x6B63;&#xFF0C;&#x4E0D;&#x65AD;&#x5FAA;&#x73AF;&#x8FED;&#x4EE3;&#xFF0C;&#x76F4;&#x5230;&#x518D;&#x4E5F;&#x627E;&#x4E0D;&#x5230;&#x80FD;&#x8BA9;L&#x503C;&#x66F4;&#x5C0F;&#x7684;&#x70B9;&#xFF0C;&#x5C31;&#x7B97;&#x627E;&#x5230;&#x4E86;&#x6700;&#x4F18;W&#x3002; &#x4EE5;&#x4E0A;&#x5C31;&#x662F;&#x6211;&#x5BF9;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6700;&#x6734;&#x7D20;&#x7684;&#x7406;&#x89E3;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8FD8;&#x662F;&#x66F4;&#x89C4;&#x8303;&#x4E00;&#x4E9B;&#xFF0C;&#x6574;&#x7406;&#x51FA;&#x6211;&#x5BF9;&#x8BFE;&#x7A0B;&#x7406;&#x89E3;&#x7684;&#x7B14;&#x8BB0;&#x3002; &#x8BFE;&#x7A0B;&#x662F;&#x5728;&#x7F51;&#x6613;&#x4E91;&#x8BFE;&#x5802;&#x7684;&#x300A;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x300B;&#xFF0C;&#x548C;Coursera&#x76F8;&#x6BD4;&#x5B83;&#x662F;&#x514D;&#x8D39;&#x7684;&#xFF0C;&#x8BFE;&#x7A0B;&#x7684;&#x5185;&#x5BB9;&#x90FD;&#x4E00;&#x6837;&#xFF0C;&#x4F46;&#x662F;&#x5C11;&#x4E86;&#x4F5C;&#x4E1A;&#x90E8;&#x5206;&#x3002;&#x4F5C;&#x4E1A;&#x90E8;&#x5206;&#x53EF;&#x4EE5;&#x5728;&#x7F51;&#x4E0A;&#x5F88;&#x5BB9;&#x6613;&#x627E;&#x5230;&#xFF0C;&#x5185;&#x5BB9;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x4E0A;&#x4F20;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Hexo中通过Mathjax支持数学公式]]></title>
    <url>%2F2018%2F03%2F08%2F2018%2F0308HexoLatex%2F</url>
    <content type="text"><![CDATA[&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x5728;&#x535A;&#x5BA2;&#x91CC;&#x7528;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x9891;&#x7E41;&#xFF0C;&#x627E;&#x5230;hexo&#x7684;&#x63D2;&#x4EF6;&#x53EF;&#x4EE5;&#x5B8C;&#x7F8E;&#x652F;&#x6301;&#xFF0C;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x5B89;&#x88C5;&#x63D2;&#x4EF6; 1234npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-mathjax --savenpm install hexo-renderer-pandoc --savenpm install hexo-renderer-kramed --save &#x6253;&#x5F00;/node_modules/hexo-renderer-mathjax/mathjax.html&#xFF0C;&#x628A;&lt;script&gt;&#x66F4;&#x6539;&#x4E3A;&#xFF1A; 1&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;&lt;/script&gt; &#x4FEE;&#x6539;&#x914D;&#x7F6E; &#x5728;hexo&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#x4E2D;&#x6DFB;&#x52A0;&#xFF1A; 1234# MathJax Supportmathjax: enable: true per_page: true &#x5728;&#x4E3B;&#x9898;&#x6587;&#x4EF6;_next-theme-config.yml&#x4E2D;&#x4FEE;&#x6539;&#xFF1A; 12mathjax: enable: true &#x4FEE;&#x6539;&#x8F6C;&#x4E49;&#x7B56;&#x7565; &#x627E;&#x5230;node_modules\kramed\lib\rules\inline.js&#xFF0C;&#x628A;&#x7B2C;11&#x884C;&#x7684;escape&#x53D8;&#x91CF;&#x7684;&#x503C;&#x505A;&#x76F8;&#x5E94;&#x7684;&#x4FEE;&#x6539;&#xFF1A; 1// escape: /^\\([\\`*{}\[\]()#$+\-.!_&gt;])/, &#x4FEE;&#x6539;&#x4E3A;&#xFF1A; 1escape: /^\\([`*\[\]()# +\-.!_&gt;])/, &#x8FD9;&#x4E00;&#x6B65;&#x662F;&#x5728;&#x539F;&#x57FA;&#x7840;&#x4E0A;&#x53D6;&#x6D88;&#x4E86;&#x5BF9;,{,}&#x7684;&#x8F6C;&#x4E49;(escape)&#x3002;&#x540C;&#x65F6;&#x628A;&#x7B2C;20&#x884C;&#x7684;em&#x53D8;&#x91CF;&#x4E5F;&#x8981;&#x505A;&#x76F8;&#x5E94;&#x7684;&#x4FEE;&#x6539;&#x3002; 1// em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, &#x4FEE;&#x6539;&#x4E3A;&#xFF1A; 1em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, &#x66F4;&#x6539;/node_modules/hexo-renderer-kramed/lib/renderer.js&#xFF1A; 12345// Change inline math rulefunction formatText(text) { // Fit kramed&apos;s rule: $$ + \1 + $$ return text.replace(/`\$(.*?)\$`/g, &apos;$$$$$1$$$$&apos;);} &#x4FEE;&#x6539;&#x4E3A;&#xFF1A; 1234// Change inline math rulefunction formatText(text) { return text;}]]></content>
      <categories>
        <category>环境、配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[h5py]]></title>
    <url>%2F2018%2F03%2F07%2F2018%2F0307h5py%2F</url>
    <content type="text"><![CDATA[&#x6982;&#x5FF5; h5py&#x662F;&#x7528;&#x6765;&#x64CD;&#x4F5C;HDF5&#x683C;&#x5F0F;&#x7684;Python&#x5E93;&#x3002;HDF5&#x683C;&#x5F0F;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x7528;&#x4E8E;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x6D77;&#x91CF;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x683C;&#x5F0F;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5176;&#x4E2D;&#x5305;&#x62EC;&#x4E24;&#x7C7B;&#x5BF9;&#x8C61;&#xFF1A;dataset&#x548C;group&#xFF0C;dataset&#x662F;&#x7C7B;&#x4F3C;&#x4E8E;&#x6570;&#x7EC4;&#x7684;&#x6570;&#x636E;&#x96C6;&#xFF0C;group&#x662F;&#x7C7B;&#x4F3C;&#x6587;&#x4EF6;&#x5939;&#x7684;&#x5BB9;&#x5668;&#x3002; HDF5&#x7684;&#x8BFB;&#x5199;&#x64CD;&#x4F5C; &#x521B;&#x5EFA;dataset 123456789101112131415161718192021222324import h5pyimport numpy as npimport osif os.path.exists(&apos;test.h5&apos;): os.remove(&apos;test.h5&apos;) f = h5py.File(&apos;test.h5&apos;, &apos;w&apos;) # &#x521B;&#x5EFA;&#x6587;&#x4EF6;# &#x65B9;&#x5F0F;&#x2460;d1 = f.create_dataset(&apos;dataset1&apos;, (5, ), &apos;i&apos;) # &#x521B;&#x5EFA;dataset&#xFF0C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x540D;&#x79F0;, shape, &#x7C7B;&#x578B;d1[...] = np.arange(5) # &#x8D4B;&#x503C;# &#x65B9;&#x5F0F;&#x2461;f[&apos;dataset2&apos;] = np.arange(8).reshape(4, 2) # &#x521B;&#x5EFA; + &#x8D4B;&#x503C;# &#x65B9;&#x5F0F;&#x2462;f.create_dataset(&apos;dataset3&apos;, data = np.arange(4))for key in f.keys(): print(key) print(f[key].name) print(f[key].shape) print(f[key].value) &#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF1A; 123456789101112131415dataset1/dataset1(5,)[0 1 2 3 4]dataset2/dataset2(4, 2)[[0 1] [2 3] [4 5] [6 7]]dataset3/dataset3(4,)[0 1 2 3] &#x521B;&#x5EFA;group 12345678g1 = f.create_group(&apos;group1&apos;) # &#x521B;&#x5EFA;groupg1[&apos;dataset1&apos;] = np.arange(8).reshape(2, 4) # &#x5728;group&#x5185;&#x521B;&#x5EFA;datasetd = g1.create_dataset(&apos;dataset2&apos;, data = np.arange(5))for key in g1.keys(): print(g1[key].name) print(g1[key].value) &#x6267;&#x884C;&#x7ED3;&#x679C; 12345/group1/dataset1[[0 1 2 3] [4 5 6 7]]/group1/dataset2[0 1 2 3 4] &#x8BFB;&#x6587;&#x4EF6; 123456789101112h5 = h5py.File(&apos;test.h5&apos;, &apos;r&apos;)for key in h5.keys(): if isinstance(h5[key], h5py.Group): # &#x5982;&#x679C;&#x662F;group&#xFF0C;&#x518D;&#x904D;&#x5386;&#x5668;&#x5185;&#x90E8;&#x6570;&#x636E; group = h5[key] for childkey in group.keys(): print(group[childkey].name) print(group[childkey].value) else: # &#x5982;&#x679C;&#x662F;dataset&#xFF0C;&#x76F4;&#x63A5;&#x6253;&#x5370;&#x7ED3;&#x679C; dataset = h5[key] print(dataset.name) print(dataset.shape) print(dataset.value) &#x6267;&#x884C;&#x7ED3;&#x679C; 1234567891011121314151617/dataset1(5,)[0 1 2 3 4]/dataset2(4, 2)[[0 1] [2 3] [4 5] [6 7]]/dataset3(4,)[0 1 2 3]/group1/dataset1[[0 1 2 3] [4 5 6 7]]/group1/dataset2[0 1 2 3 4] &#x53C2;&#x8003;&#x8D44;&#x6599;&#xFF1A; HDF5 for Python &#x672C;&#x6587;@github]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走进2018]]></title>
    <url>%2F2018%2F01%2F01%2F2018%2F0101HappyNewYear%2F</url>
    <content type="text"><![CDATA[&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x963B;&#x6321; &#x6211;&#x5BF9;&#x81EA;&#x7531;&#x7684;&#x5411;&#x5F80; &#x6211;&#x6700;&#x559C;&#x6B22;&#x7684;&#x4E00;&#x53E5;&#x6B4C;&#x8BCD;&#xFF0C;&#x7136;&#x800C;&#x8DF5;&#x884C;&#x8D77;&#x6765;&#x9700;&#x8981;&#x5DE8;&#x5927;&#x7684;&#x5E95;&#x6C14;&#x3002;&#x7EDD;&#x5927;&#x591A;&#x6570;&#x65F6;&#x5019;&#x53EA;&#x80FD;&#x5728;&#x751F;&#x6D3B;&#x7684;&#x538B;&#x529B;&#x548C;&#x751F;&#x547D;&#x7684;&#x5C0A;&#x4E25;&#x4E4B;&#x95F4;&#x505A;&#x51FA;&#x6BEB;&#x65E0;&#x60AC;&#x5FF5;&#x7684;&#x9009;&#x62E9;&#x3002;&#x1F606; &#x4F46;&#x662F;&#x8FD9;&#x9897;&#x79CD;&#x5B50;&#x59CB;&#x7EC8;&#x5728;&#x5185;&#x5FC3;&#x5F53;&#x4E2D;&#x4F3A;&#x673A;&#x800C;&#x52A8;&#xFF0C;&#x5341;&#x5E74;&#x3001;&#x4E8C;&#x5341;&#x5E74;&#xFF0C;&#x5B83;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x8010;&#x5FC3;&#x6162;&#x6162;&#x751F;&#x957F;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x5929;&#x8981;&#x7834;&#x571F;&#x800C;&#x51FA;&#x3002; 2018&#x5E74;&#xFF0C;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x7684;&#x4EBA;&#x751F;&#x53D8;&#x5F97;&#x539A;&#x91CD;&#x3002;&#x8BFB;&#x4E66;&#x3001;&#x64B8;&#x7801;&#x3001;&#x5F39;&#x7434;&#xFF0C;&#x5E0C;&#x671B;&#x6709;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x6295;&#x5165;&#x5230;&#x8FD9;&#x4E09;&#x5927;&#x7231;&#x597D;&#x4E2D;&#x3002; 2018&#x5E74;&#xFF0C;&#x5E0C;&#x671B;&#x81EA;&#x5DF1;&#x5B66;&#x4F1A;&#x67D4;&#x8F6F;&#xFF0C;&#x4E0D;&#x518D;&#x7528;&#x804C;&#x573A;&#x4E0A;&#x90A3;&#x526F;&#x81ED;&#x9762;&#x5B54;&#x9762;&#x5BF9;&#x751F;&#x6D3B;&#xFF0C;&#x8BA9;&#x9519;&#x4E71;&#x7684;&#x4EBA;&#x751F;&#x53D8;&#x5F97;&#x8C03;&#x548C;&#x3002; &#x8FC7;&#x53BB;&#x7684;2017&#xFF0C;&#x5E74;&#x5EA6;&#x76EE;&#x6807;&#x5B8C;&#x6210;&#x4E86;&#x4E09;&#x5206;&#x4E4B;&#x4E8C;&#xFF1B;2018&#x7EE7;&#x7EED;&#x524D;&#x884C;&#xFF0C;&#x6210;&#x957F;&#x3001;&#x91CD;&#x751F;&#x4ECD;&#x7136;&#x662F;&#x751F;&#x547D;&#x7684;&#x4E3B;&#x9898;&#x3002;]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git瘦身]]></title>
    <url>%2F2017%2F12%2F18%2F2017%2F1218GitReduceSize%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x5728;&#x51E0;&#x53F0;&#x673A;&#x5668;&#x4E0A;&#x9891;&#x7E41;clone dlib-android&#x548C;dlib-android-app&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x5E93;&#x90FD;&#x5DE8;&#x5927;&#xFF0C;&#x5176;&#x4E2D;&#x56E0;&#x4E3A;&#x6709;&#x4E00;&#x4E2A;99M&#x7684;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x6A21;&#x578B;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x81EA;&#x5DF1;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;16.6M&#x7684;&#x5C0F;&#x6A21;&#x578B;&#xFF0C;&#x66FF;&#x6362;&#x540E;&#x53D1;&#x73B0;&#x4E24;&#x4E2A;git&#x76EE;&#x5F55;&#x5C3A;&#x5BF8;&#x5E76;&#x6CA1;&#x6709;&#x51CF;&#x5C0F;&#x3002;&#x539F;&#x56E0;&#x662F;.git&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x91CC;&#x8BB0;&#x5F55;&#x4E86;&#x6240;&#x6709;&#x5386;&#x53F2;&#x6570;&#x636E;&#xFF0C;&#x672C;&#x6587;&#x8BB0;&#x5F55;&#x8BE5;&#x76EE;&#x5F55;&#x7684;&#x7626;&#x8EAB;&#x8FC7;&#x7A0B;&#x3002; &#x5148;&#x8BF4;&#x4E00;&#x4E0B;&#x9020;&#x6210;git&#x81C3;&#x80BF;&#x7684;&#x539F;&#x56E0;&#xFF1A;&#x5386;&#x53F2;&#x4E0A;&#x53EF;&#x80FD;&#x8BEF;&#x63D0;&#x4EA4;&#x8FC7;&#x4E00;&#x4E9B;&#x5927;&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x8005;&#x4E00;&#x6279;&#x672C;&#x4E0D;&#x8BE5;&#x63D0;&#x4EA4;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x5386;&#x53F2;&#x8BB0;&#x5F55;&#x88AB;&#x6C38;&#x4E45;&#x4FDD;&#x5B58;&#x5230;.git&#x91CC;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x5386;&#x53F2;&#x8BB0;&#x5F55;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x610F;&#x4E49;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x901A;&#x8FC7;&#x5220;&#x9664;&#x8FD9;&#x4E9B;&#x5783;&#x573E;&#x8BB0;&#x5F55;&#x662F;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x3002;&#x672C;&#x6587;&#x4E3B;&#x8981;&#x4E5F;&#x662F;&#x9488;&#x5BF9;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x53D1;&#x73B0;&#x4F5C;&#x8005;&#x66FE;&#x7ECF;&#x628A;&#x5927;&#x91CF;&#x7684;.a&#x3001;.so&#x7B49;&#x672C;&#x6765;&#x53EF;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x4E5F;&#x63D0;&#x4EA4;git&#x4E86;&#x3002; &#x7626;&#x8EAB;&#x65B9;&#x6CD5; &#x7F51;&#x4E0A;&#x6709;&#x4E0D;&#x5C11;&#x6587;&#x7AE0;&#x4ECB;&#x7ECD;git&#x7684;&#x7626;&#x8EAB;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x5728;&#x6211;&#x8FD9;&#x91CC;&#x90FD;&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x6216;&#x8005;&#x751F;&#x6548;&#x4E86;&#x4E5F;&#x65E0;&#x6CD5;push&#x5230;&#x8FDC;&#x7AEF;&#x7684;&#x4ED3;&#x5E93;&#x3002;&#x7ECF;&#x8FC7;&#x591A;&#x6B21;&#x8BD5;&#x9A8C;&#xFF0C;&#x53D1;&#x73B0;&#x672C;&#x5730;&#x7626;&#x8EAB;&#x7684;&#x65B9;&#x6CD5;&#x6CA1;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#xFF1A; &#x67E5;&#x627E;&#x5220;&#x9664;&#x5927;&#x7D22;&#x5F15;&#x6587;&#x4EF6; 123456789# &#x67E5;&#x627E;&#x5927;&#x6587;&#x4EF6;$ git rev-list --objects --all | grep &quot;$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk &apos;{print$1}&apos;)&quot;e759ec9c69f570834b6b078614261744a6f035f4 data/lena.bmp...f06aa74a57ce3a4129340cd4407ef3c0558e3193 &lt;some-big-file-path&gt;# &#x5220;&#x9664;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x53CA;&#x76F8;&#x5173;&#x8BB0;&#x5F55;$ git filter-branch --force --index-filter &apos;git rm -rf --cached --ignore-unmatch &lt;some-big-file-path&gt;&apos; --prune-empty --tag-name-filter cat -- --all &#x4F7F;&#x7528;&#x547D;&#x4EE4;git rev-list --objects --all&#x5217;&#x51FA;&#x6240;&#x6709;&#x66FE;&#x7ECF;&#x63D0;&#x4EA4;&#x8FC7;&#x7684;&#x6587;&#x4EF6;&#x53CA;hash&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x5728;&#x6B64;&#x540E;&#x8FD8;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x5982;&#x679C;&#x66FE;&#x7ECF;&#x63D0;&#x4EA4;&#x8FC7;&#x5C11;&#x6570;&#x51E0;&#x4E2A;&#x5927;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5F88;&#x5FEB;&#x7626;&#x8EAB;&#x3002; &#x5220;&#x9664;&#x4E00;&#x6279;&#x788E;&#x6587;&#x4EF6; &#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#x662F;&#xFF1A;&#x63D0;&#x4EA4;&#x8FC7;&#x4E00;&#x6279;&#x788E;&#x6587;&#x4EF6;&#xFF0C;&#x518D;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x5C31;&#x5F88;&#x9EBB;&#x70E6;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x53EA;&#x7528;git rev-list --objects --all&#x547D;&#x4EE4;&#x627E;&#x5230;&#x8FD9;&#x7C7B;&#x6587;&#x4EF6;&#xFF0C;&#x518D;&#x901A;&#x8FC7;&#x901A;&#x914D;&#x7B26;&#x5220;&#x9664;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#xFF1A; 1234567891011# &#x5217;&#x51FA;&#x66FE;&#x7ECF;&#x63D0;&#x4EA4;&#x8FC7;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;$ git rev-list --objects --allea026732036637ce181e487a56f7ff9ad055d56a jni/testsa7a11e6eb9d4d15de46c91a30bcbbb5f290bac55 jni/tests/Android.mk6022a20f24bf1bbd6a9fc993c35475081f4de0e3 jni/tests/README.mda6f141e3626348c81f714acb6f83459d105bb584 jni/tests/TestSelectiveSearch.cppd49af47035339a1bcb19ccaa7619d613fbf84a17 jni/tests/face_landmark_detection_ex.cpp...# &#x5047;&#x8BBE;jni/tests/&#x76EE;&#x5F55;&#x662F;&#x672C;&#x4E0D;&#x8BE5;&#x63D0;&#x4EA4;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x8BE5;&#x76EE;&#x5F55;$ git filter-branch --force --index-filter &apos;git rm -rf --cached --ignore-unmatch jni/tests/*&apos; --prune-empty --tag-name-filter cat -- --all &#x9700;&#x8981;&#x6307;&#x51FA;&#x672C;&#x6587;&#x7626;&#x8EAB;&#x53EA;&#x9002;&#x7528;&#x4E8E;&#x5783;&#x573E;&#x7C7B;&#x5386;&#x53F2;&#x8BB0;&#x5F55;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x6709;&#x610F;&#x4E49;&#x7684;&#x63D0;&#x4EA4;&#x8BB0;&#x5F55;&#xFF0C;&#x6700;&#x597D;&#x4FDD;&#x7559;&#x3002;&#x7406;&#x8BBA;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x4EEC;&#x4E5F;&#x4E0D;&#x5E94;&#x8BE5;&#x592A;&#x5927;&#x3002; &#x538B;&#x7F29;&#x5E76;&#x63D0;&#x4EA4; &#x9700;&#x8981;&#x6267;&#x884C;reflog&#x548C;gc&#x538B;&#x7F29;&#x624D;&#x80FD;&#x770B;&#x5230;&#x7626;&#x8EAB;&#x540E;&#x7684;&#x6548;&#x679C;&#xFF1A; 12$ git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive$ git push --mirror &#x6700;&#x540E;&#x4E00;&#x6B65;&#x63D0;&#x4EA4;&#x4E00;&#x5B9A;&#x8981;&#x5E26;&#x4E0A;--mirror&#x53C2;&#x6570;&#xFF0C;&#x5426;&#x5219;.git&#x76EE;&#x5F55;&#x7684;&#x7626;&#x8EAB;&#x59CB;&#x7EC8;&#x4E0D;&#x4F1A;&#x88AB;&#x63D0;&#x4EA4;&#x5230;&#x8FDC;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x8FD9;&#x662F;&#x5927;&#x90E8;&#x5206;&#x7F51;&#x4E0A;&#x7684;&#x6587;&#x7AE0;&#x6CA1;&#x63D0;&#x5230;&#x7684;&#x3002;&#x6211;&#x5728;&#x8FD9;&#x4E00;&#x6B65;&#x4E0A;&#x6298;&#x817E;&#x7684;&#x4E5F;&#x662F;&#x6700;&#x591A;&#x7684;&#xFF0C;&#x6700;&#x540E;&#x8FD8;&#x662F;&#x770B;&#x4E86;BFG&#x5DE5;&#x5177;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x624D;&#x53D7;&#x5230;&#x542F;&#x53D1;&#x3002; &#x53C2;&#x8003; &#x5BFB;&#x627E;&#x5E76;&#x5220;&#x9664;Git&#x8BB0;&#x5F55;&#x4E2D;&#x7684;&#x5927;&#x6587;&#x4EF6; BFG Repo-Cleaner &#x4F7F;&#x7528;BFG&#x79FB;&#x9664;git&#x5E93;&#x4E2D;&#x7684;&#x5927;&#x6587;&#x4EF6;&#x6216;&#x6C61;&#x70B9;&#x63D0;&#x4EA4;]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dlib提取人脸关键点的性能]]></title>
    <url>%2F2017%2F12%2F12%2F2017%2F1212dlib%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - dlib&#x63D0;&#x53D6;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x7684;&#x65F6;&#x95F4;&#x6027;&#x80FD;&#x548C;&#x5C3A;&#x5BF8; &#x6765;&#x5355;&#x72EC;&#x804A;&#x804A;dlib&#x63D0;&#x53D6;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x7684;&#x65F6;&#x95F4;&#x3001;&#x7A7A;&#x95F4;&#x6027;&#x80FD;&#x3002;&#x4F5C;&#x8005;&#x8BAD;&#x7EC3;&#x7684;http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2&#x6A21;&#x578B;&#x538B;&#x7F29;&#x540E;&#x6709;61M&#xFF0C;&#x89E3;&#x538B;&#x540E;99M&#xFF0C;&#x8DD1;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x8FD9;&#x4E0D;&#x7B97;&#x4EC0;&#x4E48;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x653E;&#x5728;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x4EA7;&#x54C1;&#x91CC;&#x8FD9;&#x4E48;&#x5927;&#x7684;&#x5C3A;&#x5BF8;&#x662F;&#x4E0D;&#x80FD;&#x63A5;&#x53D7;&#x7684;&#x3002; &#x65F6;&#x95F4;&#x6027;&#x80FD;&#x4F18;&#x5316; &#x65F6;&#x95F4;&#x6027;&#x80FD;&#x5F00;&#x9500;&#x66F4;&#x662F;&#x6162;&#x5F97;&#x50CF;&#x5C4E;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x5728;mac book pro 2013&#x4E0B;&#xFF0C;&#x7528;python&#x5728;&#x6BCF;&#x4E2A;&#x89C6;&#x9891;&#x5E27;&#x4E0A;&#x6807;&#x51FA;landmarks&#xFF0C;&#x6211;&#x53D1;&#x73B0;&#x6BCF;&#x6B21;&#x63D0;&#x53D6;&#x5173;&#x952E;&#x70B9;&#x9700;&#x8981;700ms&#x5DE6;&#x53F3;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152class DLibHelper(object): def __init__(self): self.mParams = {&apos;predictorPath&apos;:&apos;extdata/shape_predictor_68_face_landmarks.dat&apos;, &apos;faceRecModelPath&apos;:&apos;extdata/dlib_face_recognition_resnet_model_v1.dat&apos;} self.ReloadFunctions() def ReloadFunctions(self): self.funcShapePredictor = dlib.shape_predictor(self.mParams[&apos;predictorPath&apos;]) self.funcFaceRecognize = dlib.face_recognition_model_v1(self.mParams[&apos;faceRecModelPath&apos;]) self.funcDetector = dlib.get_frontal_face_detector() def GetFaces(self, img): # &#x8FD4;&#x56DE;&#x6240;&#x6709;&#x8138;&#x76D8; return self.funcDetector(img, 1) def GetFaceLandmarks(self, img, faceRect): # &#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x8138;&#x76D8;&#x7684;landmarks keyPts = self.funcShapePredictor(img, faceRect).parts() landmarks = numpy.matrix([[p.x, p.y] for p in keyPts]) return landmarksclass DLibPerfUT(unittest.TestCase): def setUp(self): logFmt = &apos;%(asctime)s %(lineno)04d %(levelname)-8s %(message)s&apos; logging.basicConfig(level=logging.DEBUG, format=logFmt, datefmt=&apos;%H:%M&apos;,) def test02(self): &apos;&apos;&apos; &#x4ECE;&#x6444;&#x50CF;&#x5934;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x5E76;&#x663E;&#x793A; &apos;&apos;&apos; dlibHelper = DLibHelper() cap = cv2.VideoCapture(0) img = cap.read()[1] while True: img = cap.read()[1] t0= timeit.default_timer() faceRects = dlibHelper.GetFaces(img) # &#x68C0;&#x6D4B;&#x4EBA;&#x8138;rect if len(faceRects) == 0: continue t1= timeit.default_timer() faceRect = faceRects[0] landmarks = dlibHelper.GetFaceLandmarks(img, faceRect) # &#x63D0;&#x53D6;landmarks t2 = timeit.default_timer() logging.debug(&apos;GetFaces:%5.3f, GetFaceLandmarks:%5.3f&apos; % (t1-t0, t2-t1)) pts = numpy.array(landmarks, numpy.int32) cv2.polylines(img, pts.reshape(-1, 1, 2), True, (0, 255, 0), 2) cv2.imshow(&apos;image&apos;, img) key = cv2.waitKey(1) if key == 27: break &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 123456789101112$ python -m unittest sample.DLibPerfUT.test0223:36 0096 DEBUG GetFaces:0.719, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.730, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.703, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.699, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.724, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.733, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.691, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.695, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.684, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.684, GetFaceLandmarks:0.00423:37 0096 DEBUG GetFaces:0.685, GetFaceLandmarks:0.004 &#x8FD9;&#x4E48;&#x6162;&#x7684;&#x901F;&#x5EA6;&#x6839;&#x672C;&#x6CA1;&#x6CD5;&#x5E94;&#x7528;&#x5230;&#x5B9E;&#x65F6;&#x89C6;&#x9891;&#x4E0A;&#xFF0C;&#x4E0D;&#x8FC7;&#x5F88;&#x5BB9;&#x6613;&#x5173;&#x6CE8;&#x5230;&#x74F6;&#x9888;&#x70B9;&#x662F;&#x5728;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x4E0A;&#xFF0C;&#x5373;&#x8138;&#x90E8;&#x77E9;&#x5F62;&#x7684;&#x68C0;&#x6D4B;&#x4E0A;&#xFF0C;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x5012;&#x662F;&#x633A;&#x5FEB;&#x7684;&#x3002; &#x4FEE;&#x6539;&#x4EBA;&#x8138;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x53C2;&#x6570; &#x6211;&#x5728;face_detector.py&#x4E2D;&#x627E;&#x5230;&#x5982;&#x4E0B;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A; 1234567... img = io.imread(f) # The 1 in the second argument indicates that we should upsample the image # 1 time. This will make everything bigger and allow us to detect more # faces. dets = detector(img, 1) ... &#x8FD9;&#x6BB5;&#x6CE8;&#x91CA;&#x662F;&#x8BF4;&#xFF1A;detector&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;1&#x8868;&#x793A;&#x4F1A;&#x628A;&#x56FE;&#x7247;&#x6269;&#x5927;1&#x500D;&#xFF0C;&#x4EE5;&#x4FBF;&#x53D1;&#x73B0;&#x66F4;&#x591A;&#x7684;&#x9762;&#x5B54;&#xFF0C;&#x8FD9;&#x4E5F;&#x610F;&#x5473;&#x7740;&#x8981;&#x4ED8;&#x51FA;&#x66F4;&#x5927;&#x7684;&#x6027;&#x80FD;&#x4EE3;&#x4EF7;&#x3002;&#x5982;&#x679C;&#x5E94;&#x7528;&#x573A;&#x666F;&#x786E;&#x5B9A;&#x662F;&#x5355;&#x9762;&#x5B54;&#xFF0C;&#x5176;&#x5B9E;&#x6CA1;&#x5FC5;&#x8981;&#x6269;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x628A;&#x8FD9;&#x4E2A;&#x6570;&#x503C;&#x6539;&#x4E3A;0&#xFF0C;&#x53D1;&#x73B0;&#x65F6;&#x95F4;&#x6D88;&#x8017;&#x53EA;&#x5269;&#x539F;&#x6765;&#x7684;1/4&#xFF01; 123456789palancedeMacBook-Pro:faceRek palance$ python -m unittest sample.DLibPerfUT.test0223:47 0096 DEBUG GetFaces:0.171, GetFaceLandmarks:0.00723:47 0096 DEBUG GetFaces:0.165, GetFaceLandmarks:0.00423:47 0096 DEBUG GetFaces:0.164, GetFaceLandmarks:0.00423:47 0096 DEBUG GetFaces:0.162, GetFaceLandmarks:0.00423:47 0096 DEBUG GetFaces:0.163, GetFaceLandmarks:0.00423:47 0096 DEBUG GetFaces:0.160, GetFaceLandmarks:0.00423:47 0096 DEBUG GetFaces:0.159, GetFaceLandmarks:0.00423:47 0096 DEBUG GetFaces:0.164, GetFaceLandmarks:0.004 &#x5728;&#x5C0F;&#x56FE;&#x4E0A;&#x505A;&#x4EBA;&#x8138;&#x68C0;&#x6D4B; &#x5DF2;&#x7ECF;&#x5F88;&#x68D2;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x4E0D;&#x591F;&#x3002;&#x4E00;&#x822C;&#x89C6;&#x9891;&#x6BCF;&#x79D2;&#x949F;&#x5728;20~30&#x5E27;&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x5E27;&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x5FC5;&#x987B;&#x63A7;&#x5236;&#x5728;30ms&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x89C6;&#x9891;&#x6D41;&#x7545;&#x3002;&#x65E2;&#x7136;&#x7F29;&#x5C0F;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x51CF;&#x5C11;&#x65F6;&#x95F4;&#x5F00;&#x9500;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x6CBF;&#x7740;&#x8FD9;&#x4E2A;&#x601D;&#x8DEF;&#x505A;&#x4F18;&#x5316;&#x3002;&#x5982;&#x679C;&#x5E94;&#x7528;&#x7684;&#x573A;&#x666F;&#x4E2D;&#x9762;&#x5B54;&#x4E0D;&#x662F;&#x5F88;&#x591A;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x7F29;&#x5C0F;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#xFF0C;&#x4F7F;&#x7528;&#x7F29;&#x5C0F;&#x7684;&#x56FE;&#x7247;&#x505A;&#x4EBA;&#x8138;&#x68C0;&#x6D4B;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x7B49;&#x6BD4;&#x6269;&#x5927;&#x5230;&#x521D;&#x59CB;&#x5C3A;&#x5BF8;&#xFF0C;&#x505A;landmark&#x63D0;&#x53D6;&#x3002;&#x7531;&#x4E8E;&#x4EBA;&#x8138;&#x5728;&#x56FE;&#x7247;&#x4E2D;&#x7684;&#x9762;&#x79EF;&#x901A;&#x5E38;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x7F29;&#x653E;&#x51E0;&#x4E4E;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x7CBE;&#x5EA6;&#xFF0C;landmarks&#x63D0;&#x53D6;&#x8FD8;&#x662F;&#x5728;&#x539F;&#x59CB;&#x56FE;&#x7247;&#x4E0A;&#x505A;&#x7684;&#xFF0C;&#x7CBE;&#x5EA6;&#x4E5F;&#x4E0D;&#x53D7;&#x5F71;&#x54CD;&#x3002;&#x6211;&#x628A;&#x4EE3;&#x7801;&#x6539;&#x6210;&#x8FD9;&#x6837;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334... def test02(self): &apos;&apos;&apos; &#x4ECE;&#x6444;&#x50CF;&#x5934;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x5E76;&#x663E;&#x793A; &apos;&apos;&apos; dlibHelper = DLibHelper() cap = cv2.VideoCapture(0) img = cap.read()[1] while True: img = cap.read()[1] t0= timeit.default_timer() imgZoomed = cv2.resize(img, None, fx=0.25, fy=0.25, interpolation=cv2.INTER_CUBIC) # &#x7F29;&#x5C0F;&#x56DB;&#x5206;&#x4E4B;&#x4E00; t1= timeit.default_timer() faceRects = dlibHelper.GetFaces(imgZoomed) # &#x68C0;&#x6D4B;&#x4EBA;&#x8138;rect if len(faceRects) == 0: continue t2= timeit.default_timer() faceRect = faceRects[0] faceRect = dlib.rectangle(faceRects[0].left()*4, faceRects[0].top()*4, faceRects[0].right()*4, faceRects[0].bottom()*4) cv2.rectangle(img, (faceRect.left(), faceRect.top()), (faceRect.right(), faceRect.bottom()), (0, 255, 0), 1) landmarks = dlibHelper.GetFaceLandmarks(img, faceRect) # &#x63D0;&#x53D6;landmarks t3 = timeit.default_timer() logging.debug(&apos;GetFaces:%5.3f, GetFaceLandmarks:%5.3f&apos; % (t2-t1, t3-t2)) pts = numpy.array(landmarks, numpy.int32) cv2.polylines(img, pts.reshape(-1, 1, 2), True, (0, 255, 0), 2) cv2.imshow(&apos;image&apos;, img) key = cv2.waitKey(1) if key == 27: break &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314$ python -m unittest sample.DLibPerfUT.test0223:58 0095 DEBUG GetFaces:0.013, GetFaceLandmarks:0.00923:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.011, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.011, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.017, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.011, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.012, GetFaceLandmarks:0.00423:58 0095 DEBUG GetFaces:0.011, GetFaceLandmarks:0.004 &#x54C8;&#x54C8;&#x7B80;&#x76F4;&#x5065;&#x6B65;&#x5982;&#x98DE;&#xFF01;&#x64AD;&#x653E;&#x89C6;&#x9891;&#x5DF2;&#x7ECF;&#x6CA1;&#x95EE;&#x9898;&#x4E86;&#x3002; &#x4F7F;&#x7528;correlation_tracker&#x8DDF;&#x8E2A;&#x8138;&#x90E8;&#x533A;&#x57DF; &#x8FD8;&#x53D1;&#x73B0;&#x53E6;&#x4E00;&#x79CD;&#x66F4;&#x5FEB;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;&#x4F7F;&#x7528;dlib.correlation_tracker()&#x8DDF;&#x8E2A;&#xFF0C;&#x5B83;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x5927;&#x81F4;&#x662F;&#xFF1A;&#x5728;&#x7B2C;&#x4E00;&#x5E27;&#x91C7;&#x7528;&#x5E38;&#x89C4;&#x65B9;&#x5F0F;&#x6293;&#x53D6;&#x8138;&#x90E8;&#x533A;&#x57DF;&#xFF0C;&#x4E4B;&#x540E;&#x4F7F;&#x7528;tracker&#x57FA;&#x4E8E;&#x524D;&#x4E00;&#x5E27;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x5E27;&#x7684;&#x8138;&#x90E8;&#x533A;&#x57DF;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637def test03(self): &apos;&apos;&apos; &#x4ECE;&#x6444;&#x50CF;&#x5934;&#x8BFB;&#x53D6;&#x56FE;&#x50CF;&#x5E76;&#x663E;&#x793A; &apos;&apos;&apos; dlibHelper = DLibHelper() cap = cv2.VideoCapture(0) img = cap.read()[1] tracker = dlib.correlation_tracker() # &#x521D;&#x59CB;&#x5316;tracker faceRect = None while True: img = cap.read()[1] # logging.debug(tracker.get_position()) t0 = timeit.default_timer() if faceRect is None: faceRects = dlibHelper.GetFaces(img) # &#x9996;&#x5E27;&#x91C7;&#x7528;&#x5E38;&#x89C4;&#x65B9;&#x6CD5;&#x6293;&#x53D6;&#x8138;&#x90E8;&#x533A;&#x57DF; if len(faceRects) == 0: continue faceRect = dlib.rectangle(faceRects[0].left(), faceRects[0].top(), faceRects[0].right(), faceRects[0].bottom()) tracker.start_track(img, faceRect) else: tracker.update(img) # &#x975E;&#x9996;&#x5E27;&#x91C7;&#x7528;&#x8DDF;&#x8E2A;&#x5668; rect = tracker.get_position() faceRect = dlib.rectangle(int(rect.left()), int(rect.top()), int(rect.right()), int(rect.bottom())) t1 = timeit.default_timer() cv2.rectangle(img, (faceRect.left(), faceRect.top()), (faceRect.right(), faceRect.bottom()), (0, 255, 0), 1) landmarks = dlibHelper.GetFaceLandmarks(img, faceRect) t2 = timeit.default_timer() logging.debug(&apos;GetFaceRect:%5.3f, GetFaceLandmarks:%5.3f&apos; % (t1-t0, t2-t1)) pts = numpy.array(landmarks, numpy.int32) cv2.polylines(img, pts.reshape(-1, 1, 2), True, (0, 255, 0), 2) cv2.imshow(&apos;image&apos;, img) key = cv2.waitKey(1) if key == 27: break &#x6211;&#x628A;&#x56FE;&#x7247;&#x7F29;&#x653E;&#x7684;&#x4EE3;&#x7801;&#x53BB;&#x6389;&#xFF0C;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 12345678910$ python -m unittest sample.DLibPerfUT.test0319:48 0131 DEBUG GetFaceRect:0.123, GetFaceLandmarks:0.00419:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.00119:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.00119:48 0131 DEBUG GetFaceRect:0.010, GetFaceLandmarks:0.00119:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.00119:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.00119:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.00219:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.00119:48 0131 DEBUG GetFaceRect:0.009, GetFaceLandmarks:0.001 &#x79FB;&#x690D;&#x5230;Android &#x8FD9;&#x4E2A;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#x79FB;&#x690D;&#x5230;Android&#x9700;&#x8981;&#x4FEE;&#x6539;dlib-android&#x7684;&#x4EE3;&#x7801;&#x5E76;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;so&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x628A;&#x79FB;&#x690D;&#x65B9;&#x6CD5;&#x4E5F;&#x505A;&#x4E00;&#x904D;&#x3002; 123$ git clone --recursive https://github.com/tzutalin/dlib-android.git$ cd dlib-android$ ./envsetup ./envsetup&#x4F1A;&#x4E0B;&#x8F7D;opencv-android&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x7279;&#x522B;&#x6162;&#xFF0C;&#x5EFA;&#x8BAE;&#x81EA;&#x5DF1;&#x4E0B;&#x8F7D;&#x6700;&#x65B0;&#x7248;&#x672C;&#xFF0C;&#x5C06;opencv--android-sdk.zip&#x6587;&#x4EF6;&#x653E;&#x5230;dlib-android/thrid_party/&#xFF0C;&#x5E76;&#x4FEE;&#x6539;envsetup&#xFF0C;&#x5C06;&#x51FD;&#x6570;def downloadPrebuiltOpencv(prefix=&apos;.&apos;, out_prefix=&apos;.&apos;, version=&apos;3.3.1&apos;)&#x53C2;&#x6570;version&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x6539;&#x4E3A;&#x5BF9;&#x5E94;&#x7684;&#x7248;&#x672C;&#x53F7;&#x3002; envsetup&#x8FD8;&#x4F1A;clonedlib-android-app&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x901A;&#x8FC7;&#x4E0B;&#x8F7D;&#x5DE5;&#x5177;&#x628A;&#x5B83;&#x4E0B;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x5728;&#x89E3;&#x538B;&#x5230;dlib-android/androidstudio-examples/dlib-android-app&#x3002; &#x7136;&#x540E;&#x518D;&#x6267;&#x884C;./envsetup&#x3002; &#x53BB;Android website&#x4E0B;&#x8F7D;Android-NDK&#xFF0C;&#x5728;~/.bashrc&#x4E2D;&#x6DFB;&#x52A0;&#xFF1A; 12export ANDROID_NDK_HOME=[NDK_PATH]/android-ndk-[version]export PATH=$PATH:$ANDROID_NDK_HOME &#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x5E76;&#x6267;&#x884C;&#xFF1A;source ~/.bashrc &#x6267;&#x884C; 12$ cd dlib-android$ python build.py &#x641E;&#x5B9A;&#xFF01; &#x7F16;&#x8BD1;dlib-android-app &#x6253;&#x5F00;dlib-android/androidstudio-examples/dlib-android-app&#xFF0C;&#x7F16;&#x8BD1;&#x9047;&#x5230;&#x5982;&#x4E0B;&#x95EE;&#x9898;&#xFF1A; 12Error:A problem occurred configuring project &apos;:app&apos;. &gt; android-apt plugin is incompatible with the Android Gradle plugin. Please use &apos;annotationProcessor&apos; configuration instead. &#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF1A; 1&#x3001;&#x5728;app/build.gradle&#x4E2D;&#x5220;&#x9664;classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.4&apos;&#x548C;apply plugin: &apos;com.neenbedankt.android-apt&apos; 2&#x3001;&#x5C06;apt &quot;org.androidannotations:androidannotations:$AAVersion&quot;&#x66FF;&#x6362;&#x4E3A;annotationProcessor &quot;org.androidannotations:androidannotations:$AAVersion&quot; &#x518D;&#x7F16;&#x8BD1;&#x9047;&#x5230;&#x5982;&#x4E0B;&#x95EE;&#x9898;&#xFF1A; 12345678.../dlib-android/androidstudio-examples/dlib-android-app/app/build/intermediates/res/merged/debug/raw_shape_predictor_68_face_landmarks.dat.flatError:error: failed to read data meta data.Error:failed parsing overlays.Error:java.util.concurrent.ExecutionException: java.util.concurrent.ExecutionException: com.android.tools.aapt2.Aapt2Exception: AAPT2 error: check logs for detailsError:java.util.concurrent.ExecutionException: com.android.tools.aapt2.Aapt2Exception: AAPT2 error: check logs for detailsError:com.android.tools.aapt2.Aapt2Exception: AAPT2 error: check logs for detailsError:Execution failed for task &apos;:app:processDebugResources&apos;.&gt; Failed to execute aapt &#x8FD9;&#x662F;AAPT&#x7684;bug&#xFF0C;&#x5F53;raw&#x6587;&#x4EF6;&#x8D85;&#x8FC7;68M&#x5C31;&#x4F1A;&#x51FA;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5173;&#x4E8E;bug&#x7684;&#x8BA8;&#x8BBA;&#x8BE6;&#x89C1;&#x8FD9;&#x91CC;&#xFF0C;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6709;&#x4E24;&#x4E2A;&#xFF1A; 1&#x3001;&#x4FEE;&#x6539;gradle.properties&#x6587;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;android.enableAapt2=false&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;&#x5728;&#x8FD9;&#x91CC;&#x6709;&#x8BA8;&#x8BBA;&#x3002; 2&#x3001;&#x628A;dlib-android/androidstudio-examples/dlib-android-app/app/src/main/res/raw/shape_predictor_68_face_landmarks.dat&#x66FF;&#x6362;&#x4E3A;&#x4E00;&#x4E2A;&#x66F4;&#x5C0F;&#x7684;&#x6A21;&#x578B; &#x7EE7;&#x7EED;&#x7F16;&#x8BD1;&#x7EC8;&#x4E8E;&#x641E;&#x5B9A;&#x4E86;&#x3002; &#x5C3A;&#x5BF8;&#x6027;&#x80FD;&#x4F18;&#x5316; &#x6700;&#x5927;&#x7684;&#x74F6;&#x9888;&#x5728;&#x6A21;&#x578B;&#x6570;&#x636E;&#x4E0A;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x5148;&#x4ECE;&#x6A21;&#x578B;&#x5165;&#x624B;&#x8BAD;&#x7EC3;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x96C6;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x770B;&#x770B;&#x6570;&#x636E;&#x3001;&#x7279;&#x5F81;&#x70B9;&#x3001;&#x5C3A;&#x5BF8;&#x4E4B;&#x95F4;&#x662F;&#x4E2A;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#x3002;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x5728;&#x300A;&#x8BAD;&#x7EC3;&#x81EA;&#x5DF1;&#x7684;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x6A21;&#x578B;&#x300B;&#x5DF2;&#x7ECF;&#x8BF4;&#x8FC7;&#x4E86;&#x3002;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x7684;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x662F;http://dlib.net/files/data/ibug_300W_large_face_landmark_dataset.tar.gz&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x7ED3;&#x8BBA;&#xFF1A;landmarks&#x5BF9;&#x4E8E;&#x6A21;&#x578B;&#x7684;&#x5927;&#x5C0F;&#x6709;&#x7740;&#x51B3;&#x5B9A;&#x6027;&#x4F5C;&#x7528;&#xFF0C;&#x800C;&#x4E14;&#x6210;&#x6B63;&#x6BD4;&#xFF0C;&#x589E;&#x52A0;&#x56FE;&#x7247;&#x6570;&#x91CF;&#x5BF9;&#x4E8E;&#x6A21;&#x578B;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#xFF0C;&#x5BF9;&#x4E8E;&#x51C6;&#x786E;&#x7387;&#x6709;&#x63D0;&#x5347;&#x3002; &#x4F46;&#x662F;&#x4F5C;&#x8005;&#x53F7;&#x79F0;ibug&#x6709;300&#x4E07;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5E94;&#x8BE5;&#x6307;&#x7684;&#x662F;landmarks&#x70B9;&#xFF0C;&#x6211;&#x628A;&#x56FE;&#x7247;&#x5168;&#x90E8;&#x4E0B;&#x8F7D;&#x4E5F;&#x5C31;6000&#x591A;&#x5F20;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x8DD1;&#x5B8C;&#x4E86;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E5F;&#x53EA;&#x6709;16.6M&#x5462;&#xFF1F;&#x8FD9;&#x91CC;&#x4F5C;&#x8005;&#x63D0;&#x5230;&#x4ED6;&#x4FEE;&#x6539;&#x4E86;&#x5B66;&#x4E60;&#x6DF1;&#x5EA6;&#x4ECE;10&#x6539;&#x5230;15&#xFF0C;&#x6211;&#x731C;&#x6D4B;&#x8DDF;&#x8FD9;&#x4E2A;&#x6709;&#x5173;&#xFF0C;&#x6CA1;&#x9A8C;&#x8BC1;&#x8FC7;&#x3002; &#x5BF9;&#x4E8E;&#x4E00;&#x822C;&#x7684;&#x5A31;&#x4E50;&#x5E94;&#x7528;&#xFF0C;&#x80FD;&#x8FBE;&#x5230;90%&#x7684;&#x51C6;&#x786E;&#x7387;&#xFF0C;&#x5728;&#x76F4;&#x89C2;&#x4F53;&#x9A8C;&#x4E0A;&#x5DF2;&#x7ECF;&#x6CA1;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x5728;&#x5B9E;&#x65F6;&#x89C6;&#x9891;&#x4E0B;&#x5708;&#x51FA;landmarks&#x7684;&#x611F;&#x53D7;&#x3002; &#x53C2;&#x8003; Speeding up Dlib&#x2019;s Facial Landmark Detector dlib-android Real-Time Face Pose Estimation]]></content>
      <categories>
        <category>人脸识别</category>
      </categories>
      <tags>
        <tag>dlib</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dlib的使用]]></title>
    <url>%2F2017%2F11%2F26%2F2017%2F1126dlib%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - dlib&#x7684;&#x5B89;&#x88C5; - dlib&#x7B80;&#x5355;&#x4F7F;&#x7528; - &#x4EBA;&#x8138;&#x68C0;&#x6D4B;&#x3001;&#x8BC6;&#x522B; - &#x4EBA;&#x8138;&#x5408;&#x6210; - &#x8BAD;&#x7EC3;&#x81EA;&#x5DF1;&#x7684;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x6A21;&#x578B; &#x56E0;&#x4E3A;&#x8981;&#x7528;dlib&#x505A;&#x4E00;&#x4E2A;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#xFF0C;&#x6628;&#x665A;&#x641E;&#x4E86;&#x4E00;&#x4E0B;dlib python&#x7684;&#x5B89;&#x88C5;&#x548C;&#x4F7F;&#x7528;&#xFF0C;&#x5728;macOS&#x4E0B;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x3002; # dlib&#x7684;&#x5B89;&#x88C5; &#x4E3B;&#x8981;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x5982;&#x679C;pip&#x80FD;&#x81EA;&#x5DF1;&#x641E;&#x5B9A;&#x4F9D;&#x8D56;&#x95EE;&#x9898;&#x5C31;&#x597D;&#x4E86;&#x3002; ## &#x5B89;&#x88C5;&#x6B65;&#x9AA4; dlib&#x4F9D;&#x8D56;boost&#xFF0C;&#x6240;&#x4EE5;&#x7406;&#x60F3;&#x60C5;&#x51B5;&#x4E0B;&#x53EA;&#x9700;&#x8981; 123$ brew install boost-python$ sudo pip install dlib$ sudo pip install scikit-image &#x56E0;&#x4E3A;&#x4E0B;&#x9762;&#x8981;&#x8DD1;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x7684;&#x9700;&#x8981;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x6B65;&#x5B89;&#x88C5;&#x4E86;scikit-image&#x3002; &#x5173;&#x95ED;SIP &#x5982;&#x679C;&#x7CFB;&#x7EDF;&#x5F00;&#x542F;&#x4E86;&#x7CFB;&#x7EDF;&#x5B8C;&#x6574;&#x6027;&#x4FDD;&#x62A4;SIP&#xFF08;SystemIntegrity Protection&#xFF09;&#xFF0C;&#x9700;&#x8981;&#xFF1A; - &#x91CD;&#x542F;OS&#xFF0C;&#x6309;&#x4F4F;&#x2318;+R - &#x4ECE;&#x83DC;&#x5355;&#x4E2D;&#x8FDB;&#x5165;&#x7EC8;&#x7AEF;&#xFF0C;&#x8F93;&#x5165;csrutil disable&#xFF0C;&#x5173;&#x95ED;SIP - &#x91CD;&#x542F;OS &#x5B8C;&#x6210;&#x8FD9;&#x4E9B;&#x6B65;&#x9AA4;&#x4E4B;&#x540E;&#x518D;&#x64CD;&#x4F5C;&#x524D;&#x9762;&#x7684;dlib&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#xFF0C;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x540E;&#x8BB0;&#x5F97;&#x540C;&#x6837;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x901A;&#x8FC7;&#x547D;&#x4EE4;csrutil enable&#x6062;&#x590D;SIP &#x9047;&#x5230;&#x7684;&#x95EE;&#x9898; &#x6298;&#x817E;&#x6700;&#x4E45;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#xFF1A; 12345#error &quot;DLIB_NO_GUI_SUPPORT is defined so you can&apos;t use the GUI code. Turn DLIB_NO_GUI_SUPPORT off if you want to use it.&quot; ^ /usr/local/include/dlib/gui_core/gui_core_kernel_2.h:12:2: error: &quot;Also make sure you have libx11-dev installed on your system&quot; #error &quot;Also make sure you have libx11-dev installed on your system&quot; ^ &#x4E0D;&#x77E5;&#x9053;&#x6700;&#x6839;&#x672C;&#x7684;&#x539F;&#x56E0;&#x662F;&#x5565;&#xFF0C;&#x5C1D;&#x8BD5;&#x4E86;N&#x79CD;&#x529E;&#x6CD5;&#xFF0C;&#x6700;&#x540E;&#x6211;&#x66F4;&#x65B0;&#x4E86;&#x4E00;&#x628A;Xcode&#xFF1A; $ sudo xcode-select --install &#x5C31;OK&#x4E86;&#x3002; dlib&#x7684;&#x4F7F;&#x7528; &#x68C0;&#x6D4B;&#x4EBA;&#x8138;&#x533A;&#x57DF; 123456img = cv2.imread(&apos;images/girls.jpg&apos;)rgbImg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)detector = dlib.get_frontal_face_detector() # &#x6B63;&#x8138;&#x68C0;&#x6D4B;&#x5668;faces = detector(rgbImg, 1) # &#x8FD4;&#x56DE;&#x8138;&#x7684;&#x4FE1;&#x606F;for face in faces: # &#x6846;&#x51FA;&#x6BCF;&#x5F20;&#x8138; cv2.rectangle(img, (face.left(), face.top()), (face.right(), face.bottom()), (0, 255, 0), 1) &#x5982;&#x56FE;&#xFF0C;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x591A;&#x4EBA;&#x56FE;&#x7247;&#xFF0C;&#x901A;&#x8FC7;&#x6B63;&#x8138;&#x68C0;&#x6D4B;&#x5668;&#x53EF;&#x4EE5;&#x68C0;&#x6D4B;&#x51FA;&#x6BCF;&#x5F20;&#x8138;&#x7684;&#x77E9;&#x5F62;&#x533A;&#x57DF; &#x68C0;&#x6D4B;&#x4EBA;&#x8138;&#x7279;&#x5F81;&#x70B9; 1234567891011img = cv2.imread(&apos;images/girls.jpg&apos;)rgbImg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)detector = dlib.get_frontal_face_detector()faces = detector(rgbImg, 1)for face in faces: # &#x8BC6;&#x522B;&#x51FA;&#x5173;&#x952E;&#x70B9;&#xFF0C;keyPts&#x7684;&#x7C7B;&#x578B;&#x662F;dlib.points keyPts = self.shapePredictor(img, face).parts() landmarks = numpy.matrix([[p.x,p.y] for p in keyPts]) # &#x753B;&#x51FA;&#x5173;&#x952E;&#x70B9; pts = numpy.array([landmarks], numpy.int32) cv2.polylines(img, pts.reshape(-1, 1, 2), True, (0, 255, 0), 2) &#x8BA1;&#x7B97;&#x4EBA;&#x8138;&#x7279;&#x5F81; 1234567891011121314151617181920img = io.imread(imgFile) # &#x8F93;&#x5165;&#x5355;&#x4EBA;&#x5934;&#x50CF;detector = dlib.get_frontal_face_detector()# &#x68C0;&#x6D4B;&#x51FA;&#x4EBA;&#x8138;&#x533A;&#x57DF;faces = detector(img, 1)...faceRect = faces[0]# &#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x5668;&#x6570;&#x636E;predictorPath = &apos;extdata/shape_predictor_68_face_landmarks.dat&apos;# &#x8BAD;&#x7EC3;&#x597D;&#x7684;ResNet&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x6A21;&#x578B;faceRecModelPath = &apos;extdata/dlib_face_recognition_resnet_model_v1.dat&apos;shapePredictor = dlib.shape_predictor(predictorPath) # &#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x76D1;&#x6D4B;&#x5668;faceRec = dlib.face_recognition_model_v1(faceRecModelPath) # &#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x6A21;&#x578B;# &#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;shape = shapePredictor(img, faceRect)# &#x63CF;&#x8FF0;&#x9879;&#x63D0;&#x53D6;&#xFF0C; 128D&#x5411;&#x91CF;faceDescriptor = faceRec.compute_face_descriptor(img, shape)# &#x8F6C;&#x6362;&#x4E3A;numpu arrayreturn numpy.array(faceDescriptor) &#x5176;&#x4E2D;&#xFF1A; shape_predictor_68_face_landmarks.dat&#x662F;&#x5DF2;&#x7ECF;&#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x5668;&#x6570;&#x636E;&#x3002; dlib_face_recognition_resnet_model_v1.dat&#x662F;&#x5DF2;&#x7ECF;&#x8BAD;&#x7EC3;&#x597D;&#x7684;ResNet&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x6A21;&#x578B;&#x3002; &#x6211;&#x5728;faceRek/setup.sh&#x4E2D;&#x5199;&#x4E86;&#x5DE5;&#x7A0B;&#x4F9D;&#x8D56;&#x7684;&#x5916;&#x90E8;&#x6570;&#x636E;&#xFF0C;&#x8FD0;&#x884C;python&#x4EE3;&#x7801;&#x524D;&#x5148;&#x6267;&#x884C; sh setup.sh &#x8BE5;&#x6BB5;&#x4EE3;&#x7801;&#x63D0;&#x53D6;&#x5230;&#x7684;128D&#x5411;&#x91CF;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; 1234567$ python -m unittest sample.DLibUT.test0214:40 0117 DEBUG [ -1.32817209e-01 7.43134990e-02 7.68444687e-02 -1.05091885e-01 -1.46399811e-01 4.86346148e-03 -1.23881295e-01 -1.71705186e-01 ... ... ... ... -1.90864969e-03 1.68816522e-02 -2.53906399e-01 1.30065437e-02 1.57092661e-01 -9.88340452e-02 9.43705738e-02 5.99186197e-02] &#x4EBA;&#x8138;&#x8BC6;&#x522B; &#x73B0;&#x6709;&#x4E00;&#x5806;&#x5019;&#x9009;&#x4EBA;&#x7167;&#x7247;&#xFF0C;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x5F85;&#x8BC6;&#x522B;&#x4EBA;&#x7167;&#x7247;&#xFF0C;&#x8BC6;&#x522B;&#x51FA;&#x4ED6;&#x662F;&#x5019;&#x9009;&#x4EBA;&#x4E2D;&#x7684;&#x54EA;&#x4E00;&#x4E2A;&#xFF0C;&#x8FD9;&#x662F;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x89E3;&#x51B3;&#x7684;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x3002;&#x5E94;&#x7528;&#x4E0A;&#x4E00;&#x8282;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x4EBA;&#x8138;&#x7279;&#x5F81;&#xFF0C;&#x8BA1;&#x7B97;&#x5F85;&#x8BC6;&#x522B;&#x4EBA;&#x548C;&#x6BCF;&#x4F4D;&#x5019;&#x9009;&#x4EBA;&#x4E4B;&#x95F4;&#x7684;&#x7279;&#x5F81;&#x5DEE;&#xFF0C;&#x6C42;&#x6700;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x5019;&#x9009;&#x4EBA;&#xFF0C;&#x5C31;&#x662F;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x4E3B;&#x8981;&#x65B9;&#x6CD5;&#x3002; &#x4F7F;&#x7528;numpy.linalg.norm(candDesc - testDesc)&#x53EF;&#x4EE5;&#x5C06;128D&#x5411;&#x91CF;&#x8F6C;&#x5316;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#x503C;&#xFF0C;&#x6C42;&#x8FD9;&#x4E2A;&#x6700;&#x5C0F;&#x503C;&#x5373;&#x53EF;&#x3002;&#x5728;faceRek/sample.DLibUT.test03&#x6709;&#x5B8C;&#x6574;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8BC6;&#x522B;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF0C;&#x84DD;&#x8272;&#x662F;&#x8BC6;&#x522B;&#x6B63;&#x786E;&#x7684;&#xFF0C;&#x7EA2;&#x8272;&#x662F;&#x8BC6;&#x522B;&#x9519;&#x8BEF;&#x7684;&#xFF1A; &#x5B83;&#x628A;&#x83AB;&#x6587;&#x851A;&#x8BC6;&#x6210;&#x4E86;ruru &#x1F602; &#x4EBA;&#x8138;&#x5408;&#x6210; &#x6211;&#x672C;&#x6765;&#x60F3;&#x627E;&#x7684;&#x5408;&#x6210;&#x662F;&#x6839;&#x636E;&#x4E00;&#x5F20;&#x9762;&#x5B54;&#x7684;&#x7279;&#x5F81;&#x53BB;&#x53D8;&#x6362;&#x53E6;&#x4E00;&#x5F20;&#x9762;&#x5B54;&#xFF0C;&#x4F46;&#x6211;&#x53EA;&#x627E;&#x5230;&#x4E86;&#x4E24;&#x5F20;&#x9762;&#x5B54;&#x7279;&#x5F81;&#x90E8;&#x5206;&#x7684;&#x53E0;&#x52A0;&#xFF0C;&#x6682;&#x65F6;&#x4E5F;&#x5148;&#x6536;&#x7740;&#x5427;&#x3002;&#x4E0D;&#x5FCD;&#x5FC3;&#x62FF;&#x7F8E;&#x5973;&#x5F00;&#x5200;&#xFF0C;&#x5C31;&#x7528;&#x6211;&#x81EA;&#x5DF1;&#x7684;&#x770B;&#x6548;&#x679C;&#x5427;&#x1F923; &#x8BAD;&#x7EC3;&#x81EA;&#x5DF1;&#x7684;&#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x6A21;&#x578B; &#x5728;dlib-models&#x4E2D;Davis King&#x63D0;&#x5230;&#xFF1A;shape_predictor_68_face_landmarks.dat&#x6240;&#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x96C6;&#x8BB8;&#x53EF;&#x8BC1;&#x4E0D;&#x5305;&#x62EC;&#x5546;&#x4E1A;&#x7528;&#x9014;&#xFF0C;&#x56E0;&#x6B64;&#x8BE5;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x4E5F;&#x4E0D;&#x80FD;&#x7528;&#x4E8E;&#x5546;&#x4E1A;&#x4EA7;&#x54C1;&#x3002; &#x800C;&#x4E14;&#x8BE5;&#x6A21;&#x578B;&#x538B;&#x7F29;&#x5C3A;&#x5BF8;&#x6709;61M&#xFF0C;&#x89E3;&#x5F00;&#x540E;99M&#xFF0C;&#x4F5C;&#x8005;&#x5728;Real-Time Face Pose Estimation&#x7684;&#x4E2D;&#x6709;&#x5927;&#x91CF;&#x7684;&#x7B54;&#x7591;&#xFF0C;&#x5173;&#x4E8E;&#x6027;&#x80FD;&#x3001;&#x548C;&#x7F16;&#x8BD1;&#x7B49;&#x95EE;&#x9898;&#xFF0C;Davis King&#x771F;&#x662F;&#x52E4;&#x594B;&#xFF01; - &#x8FD9;&#x91CC;&#x63D0;&#x5230;&#xFF1A;&#x5982;&#x679C;&#x60F3;&#x5F97;&#x5230;&#x66F4;&#x5C0F;&#x7684;&#x6570;&#x636E;&#x6A21;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x539F;&#x5148;&#x7684;&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x5220;&#x51CF;&#x4E00;&#x4E9B;landmarks&#xFF0C;&#x5E76;&#x81EA;&#x5DF1;&#x5B8C;&#x6210;&#x8BAD;&#x7EC3;&#xFF0C;&#x539F;&#x5148;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x4ECE;http://dlib.net/files/data/ibug_300W_large_face_landmark_dataset.tar.gz&#x4E0B;&#x8F7D;&#xFF1B;&#x8BAD;&#x7EC3;&#x4EE3;&#x7801;&#x53C2;&#x89C1;http://dlib.net/train_shape_predictor_ex.cpp.html&#xFF0C;&#x8BE5;&#x4EE3;&#x7801;&#x4F4D;&#x4E8E;dlib/examples/train_shape_predictor_ex.cpp&#x3002;&#x8FD9;&#x91CC;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;5 landmarks&#x7684;&#x8BAD;&#x7EC3;&#x96C6;http://dlib.net/files/data/dlib_faces_5points.tar. - &#x8FD9;&#x91CC;&#x63D0;&#x5230;&#xFF1A;&#x53EF;&#x4EE5;&#x4ECE;HELEN&#x6570;&#x636E;&#x96C6;http://www.ifp.illinois.edu/~vuongle2/helen/&#x4E2D;&#x83B7;&#x53D6;194 landmarks&#x7684;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#xFF0C;&#x5B8C;&#x6210;&#x81EA;&#x5DF1;&#x7684;&#x8BAD;&#x7EC3;&#x3002; - &#x8FD9;&#x91CC;&#x63D0;&#x5230;&#xFF1A;&#x6A21;&#x578B;shape_predictor_68_face_landmarks.dat.bz2&#x7684;&#x6570;&#x636E;&#x6E90;&#x6765;&#x81EA;https://ibug.doc.ic.ac.uk/resources/facial-point-annotations/&#xFF0C;&#x8FD9;&#x662F;300&#x4E07;&#x6570;&#x636E;&#x96C6;&#x3002; &#x4F5C;&#x8005;&#x63D0;&#x4F9B;&#x7684;&#x7D20;&#x6750;&#x5C31;&#x8FD9;&#x4E9B;&#xFF0C;&#x8DB3;&#x591F;&#x4E86;&#xFF01;&#x6211;&#x7684;&#x7F16;&#x8BD1;&#x73AF;&#x5883;&#x662F;mac OS&#xFF0C;git clone dlib&#x5230;&#x672C;&#x5730;&#xFF0C;&#x521B;&#x5EFA;&#x76EE;&#x5F55;dlib/examples/build&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;cmake&#xFF1A; &#x6709;&#x4E00;&#x4E2A;&#x8B66;&#x544A;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x3002;&#x4F7F;&#x7528;Xcode&#x6253;&#x5F00;project&#xFF0C;&#x6211;&#x6253;&#x7B97;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x96C6;dlib_faces_5points&#xFF0C;&#x5C06;&#x5176;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x4E24;&#x4E2A;xml&#x6587;&#x4EF6;&#x5206;&#x522B;&#x6539;&#x540D;&#x4E3A;&#xFF1A; test_cleaned.xml =&gt; testing_with_face_landmarks.xml train_cleaned.xml =&gt; training_with_face_landmarks.xml &#x5728;Xcode&#x4E2D;&#x70B9;&#x51FB;&#x83DC;&#x5355;Product &gt; Scheme &gt; Edit Scheme...&#xFF0C;&#x8BBE;&#x7F6E;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x8F93;&#x5165;&#x53C2;&#x6570;&#xFF1A; &#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x4E86;&#xFF0C;&#x4E0D;&#x8FC7;&#x8981;&#x505A;&#x597D;&#x601D;&#x60F3;&#x51C6;&#x5907;&#xFF0C;&#x6211;&#x628A;training_with_face_landmarks.xml&#x4E2D;&#x7684;5000&#x591A;&#x5F20;&#x56FE;&#x780D;&#x5230;200&#x591A;&#x5F20;&#xFF0C;&#x6574;&#x4E2A;&#x8BAD;&#x7EC3;&#x548C;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x9700;&#x8981;&#x534A;&#x4E2A;&#x5C0F;&#x65F6;&#xFF1B;&#x5982;&#x679C;&#x628A;5000&#x591A;&#x5F20;&#x56FE;&#x8DD1;&#x4E00;&#x904D;&#xFF0C;&#x4ECE;log&#x8F93;&#x51FA;&#x7684;&#x63D0;&#x793A;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x9700;&#x8981;24&#x5C0F;&#x65F6;&#xFF01;&#x6211;&#x4E0D;&#x77E5;&#x9053;&#x90A3;300&#x591A;&#x4E07;&#x5F20;ibug&#x7684;&#x6570;&#x636E;&#x8DD1;&#x5B8C;&#x5F97;&#x8981;&#x591A;&#x957F;&#x65F6;&#x95F4;&#x3002; &#x8BAD;&#x7EC3;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x8DD1;&#x51FA;&#x8BC4;&#x6D4B;&#x7ED3;&#x679C;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x8FD8;&#x4E0D;&#x9519;&#xFF1A; 12mean training error: 0.011435mean testing error: 0.00745601 &#x63A5;&#x4E0B;&#x6765;&#x7528;python&#x9A8C;&#x8BC1;&#x4E00;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536class DLibTrainingUT(unittest.TestCase): def setUp(self): ... self.mDetector = dlib.get_frontal_face_detector() # &#x6B63;&#x8138;&#x68C0;&#x6D4B;&#x5668; def getFaceLandmarksFromImg(self, img, predictorPath): # &#x68C0;&#x6D4B;&#x51FA;&#x4EBA;&#x8138;&#x533A;&#x57DF; faces = self.mDetector(img, 1) ... faceRect = faces[0] self.mShapePredictor = dlib.shape_predictor(predictorPath) # &#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x76D1;&#x6D4B;&#x5668; # &#x63D0;&#x53D6;&#x5173;&#x952E;&#x70B9; keyPts = self.mShapePredictor(img, faceRect).parts() landmarks = numpy.matrix([[p.x, p.y] for p in keyPts]) return landmarks def test01(self): &apos;&apos;&apos; &#x9A8C;&#x8BC1;&#x81EA;&#x5DF1;&#x8BAD;&#x7EC3;&#x7684;&#x6A21;&#x578B;&#x6548;&#x679C; &apos;&apos;&apos; imgFile = &apos;images/2-0.jpg&apos; img = cv2.imread(imgFile) modelPath = &apos;/Users/palance/Documents/SubVersions/dlib/examples/build/Debug/sp.dat&apos; landmarks = self.getFaceLandmarksFromImg(img, modelPath) pts = numpy.array(landmarks, numpy.int32) cv2.polylines(img, pts.reshape(-1, 1, 2), True, (0, 255, 0), 2) font = cv2.FONT_HERSHEY_SIMPLEX index = 0 for pt in landmarks: x, y = pt[0, 0], pt[0, 1] text = &apos;%d&apos; % index cv2.putText(img, text, (x, y), font, 0.5, (255, 0, 0)) index += 1 self.waitToClose(img) &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x867D;&#x7136;&#x53EA;&#x7528;&#x4E86;200&#x591A;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x7ED3;&#x679C;&#x597D;&#x50CF;&#x8FD8;&#x4E0D;&#x9519;&#xFF01; &#x53C2;&#x8003; dlib github dlib &#x5B98;&#x7F51; scikit-image &#x5B98;&#x7F51; scikit-learn &#x5B98;&#x7F51; &#x300A;40&#x884C;&#x4EE3;&#x7801;&#x7684;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x5B9E;&#x8DF5;&#x300B; &#x300A;OpenCV&#x5B9E;&#x8DF5;&#x4E4B;&#x8DEF;&#x2014;&#x2014;&#x7528;dlib&#x5E93;&#x8FDB;&#x884C;&#x4EBA;&#x8138;&#x68C0;&#x6D4B;&#x4E0E;&#x4EBA;&#x8138;&#x6807;&#x8BB0;&#xFF08;Python&#xFF09;&#x300B; &#x300A;One Millisecond Face Alignment with an Ensemble of Regression Trees&#x300B; &#x300A;Orthogonal Procrustes problem&#x300B; &#x300A;Transformation matrix&#x300B; &#x300A;Switching Eds: Face swapping with Python, dlib, and OpenCV&#x300B; &#x300A;&#x6559;&#x4F60;&#x7528;200&#x884C;Python&#x4EE3;&#x7801;&#x201C;&#x6362;&#x8138;&#x201D;&#x300B; &#x300A;&#x624B;&#x628A;&#x624B;&#xFF1A;&#x4F7F;&#x7528;OpenCV&#x8FDB;&#x884C;&#x9762;&#x90E8;&#x5408;&#x6210;&#x2014; C++ / Python&#x300B; https://github.com/iamwx/FaceMorph &#x4EBA;&#x8138;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x8BAD;&#x7EC3; &#x672C;&#x6587;&#x6D89;&#x53CA;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x90FD;&#x5DF2;&#x63D0;&#x4EA4;&#x5230;github&#x4E0A;&#xFF1A; https://github.com/palanceli/facemojiSample/tree/master/faceRek&#x3002;]]></content>
      <categories>
        <category>人脸识别</category>
      </categories>
      <tags>
        <tag>dlib</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三十五]]></title>
    <url>%2F2017%2F11%2F15%2F2017%2F1115AndroidProgrammingBNRG35%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x662F;&#x5BF9;Material Design&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x603B;&#x7ED3;&#x3002; &#x7B14;&#x8BB0;&#x5C31;&#x4E0D;&#x591A;&#x5199;&#x4E86;&#xFF0C;&#x8FD8;&#x662F;&#x76F4;&#x63A5;&#x770B;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x5427;&#x3002;&#x7EC8;&#x4E8E;&#x628A;&#x8FD9;&#x672C;&#x4E66;&#x5543;&#x5B8C;&#x4E86;&#xFF0C;&#x8FD9;&#x672C;&#x4E66;&#x76F8;&#x6BD4;&#x300A;iOS Programming BNRG&#x300B;&#x54C1;&#x8D28;&#x7565;&#x5DEE;&#xFF0C;&#x4E3B;&#x8981;&#x4E0D;&#x8DB3;&#x662F;&#x7ED3;&#x6784;&#x4E0D;&#x662F;&#x5F88;&#x7D27;&#x51D1;&#xFF0C;&#x4E00;&#x4E9B;&#x673A;&#x5236;&#x672C;&#x6765;&#x5C5E;&#x4E8E;&#x4E00;&#x8109;&#x7684;&#x4F53;&#x7CFB;&#xFF0C;&#x88AB;&#x5206;&#x5272;&#x5230;&#x591A;&#x4E2A;&#x7AE0;&#x8282;&#xFF0C;&#x6216;&#x8005;&#x88AB;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x6253;&#x6563;&#x4E86;&#x3002;&#x5B66;&#x4E60;&#x5E73;&#x53F0;&#x7684;&#x673A;&#x5236;&#x662F;&#x5B66;&#x4E60;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x4E3B;&#x8981;&#x76EE;&#x6807;&#x3002; &#x8FD9;&#x672C;&#x4E66;&#x7684;&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;&#x8981;&#x70B9;&#x5217;&#x51FA;&#x5982;&#x4E0B;&#xFF0C;&#x4FBF;&#x4E8E;&#x81EA;&#x5DF1;&#x672A;&#x6765;&#x67E5;&#x9605;&#x3002; &#x7B14;&#x8BB0;&#x4E00; - &#x4F7F;&#x7528;Interface Builder&#x6784;&#x5EFA;&#x754C;&#x9762;&#x5E03;&#x5C40; - &#x4E3A;&#x63A7;&#x4EF6;&#x5173;&#x8054;&#x4EE3;&#x7801;&#x53D8;&#x91CF;&#x548C;&#x54CD;&#x5E94;&#x51FD;&#x6570; - &#x4F7F;&#x7528;&#x7EA6;&#x675F;&#x786E;&#x4FDD;&#x517C;&#x5BB9;&#x4E0D;&#x540C;&#x7684;&#x5C3A;&#x5BF8;&#x7684;&#x8BBE;&#x5907; - &#x4FEE;&#x6539;app&#x56FE;&#x6807; - iOS&#x5E94;&#x7528;&#x7684;UI&#x5237;&#x65B0;&#x673A;&#x5236; &#x7B14;&#x8BB0;&#x4E8C; - &#x6570;&#x636E;&#x7C7B;&#x578B; - optional&#x53D8;&#x91CF; - &#x5B57;&#x7B26;&#x4E32;&#x63D2;&#x503C; &#x7B14;&#x8BB0;&#x4E09; - &#x70B9;&#x548C;&#x50CF;&#x7D20; &#x7B14;&#x8BB0;&#x56DB; - &#x54CD;&#x5E94;TextField&#x7684;&#x53D8;&#x5316;&#x4E8B;&#x4EF6; - &#x5728;TextField&#x5931;&#x53BB;&#x7126;&#x70B9;&#x540E;&#x6536;&#x8D77;&#x952E;&#x76D8; - Property observer - &#x534F;&#x8BAE;&#x548C;&#x4EE3;&#x7406; &#x7B14;&#x8BB0;&#x4E94; - TabBarViewController&#x7684;&#x4F7F;&#x7528; - &#x5177;&#x6709;&#x591A;&#x4E2A;ViewController&#x7684;&#x5E94;&#x7528; - framework - &#x5728;&#x9879;&#x76EE;&#x4E2D;&#x6DFB;&#x52A0;&#x56FE;&#x7247;&#x8D44;&#x6E90; &#x7B14;&#x8BB0;&#x516D; - Android API level&#x7248;&#x672C;&#x53F7;&#x548C;&#x53D1;&#x884C;&#x7248;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB; - &#x8BBE;&#x7F6E;VC&#x7684;View - &#x521B;&#x5EFA;&#x7EA6;&#x675F;&#x6761;&#x4EF6; - &#x4E3A;&#x63A7;&#x4EF6;&#x5173;&#x8054;&#x4E8B;&#x4EF6; &#x7B14;&#x8BB0;&#x4E03; - Fragment&#x7684;&#x6982;&#x5FF5;&#x3001;&#x4F7F;&#x7528;&#x6B65;&#x9AA4; - Localization&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5; - &#x63A7;&#x4EF6;&#x5C3A;&#x5BF8;&#x6821;&#x9A8C; &#x7B14;&#x8BB0;&#x516B; - animate&#x51FD;&#x6570;&#x7684;&#x4F7F;&#x7528; &#x7B14;&#x8BB0;&#x4E5D; - &#x8C03;&#x8BD5;&#x6280;&#x5DE7; &#x7B14;&#x8BB0;&#x5341; - UITableView&#x7684;&#x8FD0;&#x4F5C;&#x539F;&#x7406; - &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570; - &#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219; &#x7B14;&#x8BB0;&#x5341;&#x4E00; - UITableView&#x7684;&#x7F16;&#x8F91;&#x6A21;&#x5F0F; - Alerts&#x7684;&#x4F7F;&#x7528; &#x7B14;&#x8BB0;&#x5341;&#x4E8C; - &#x5B50;&#x7C7B;&#x5316;UITableViewCell - &#x8BA9;&#x5B57;&#x4F53;&#x968F;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x52A8;&#x6001;&#x8C03;&#x6574; &#x7B14;&#x8BB0;&#x5341;&#x4E09; - &#x521B;&#x5EFA;&#x83DC;&#x5355;&#xFF0C;&#x5E76;&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570; - &#x6DFB;&#x52A0;&#x7CFB;&#x7EDF;&#x56FE;&#x6807; - &#x8BBE;&#x7F6E;&#x5C42;&#x7EA7;&#x5BFC;&#x822A;&#x5173;&#x7CFB; &#x7B14;&#x8BB0;&#x5341;&#x56DB; - SQLite&#x6570;&#x636E;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4; &#x7B14;&#x8BB0;&#x5341;&#x4E94; - &#x5728;&#x5B57;&#x7B26;&#x4E32;&#x8D44;&#x6E90;&#x4E2D;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x5316;&#x5B57;&#x7B26; - &#x4F7F;&#x7528;&#x9690;&#x5F0F;Intents &#x7B14;&#x8BB0;&#x5341;&#x516D; - &#x6444;&#x50CF;&#x5934;&#x7684;&#x4F7F;&#x7528; - Bitmap&#x7C7B;&#x7684;&#x4F7F;&#x7528; - users-feature&#x58F0;&#x660E; &#x7B14;&#x8BB0;&#x5341;&#x4E03; - &#x4E3A;&#x8D44;&#x6E90;&#x521B;&#x5EFA;&#x522B;&#x540D; - &#x4E3A;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x5C4F;&#x5E55;&#x521B;&#x5EFA;&#x4E0D;&#x540C;&#x7684;&#x5E03;&#x5C40; &#x7B14;&#x8BB0;&#x5341;&#x516B; - &#x6DFB;&#x52A0;&#x4E0D;&#x540C;&#x7684;&#x8BED;&#x79CD;&#x5B57;&#x7B26;&#x8D44;&#x6E90; &#x7B14;&#x8BB0;&#x5341;&#x4E5D; - TalkBack &#x7B14;&#x8BB0;&#x4E8C;&#x5341; - Data Binding - MVVM vs MVC - assets &#x8D44;&#x6E90; &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x4E00; - &#x64AD;&#x653E;&#x97F3;&#x9891; - &#x4F7F;&#x7528;JUnit&#x7F16;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5; - &#x4F7F;&#x7528;mockito&#x548C;hamcrest - &#x4F7F;&#x7528;Data Binding&#x5728;XML&#x4E2D;&#x4E3A;widget&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570; - retain Fragment &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x4E8C; - style&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x5E94;&#x7528; - theme&#x7684;&#x4FEE;&#x6539;&#x548C;&#x8986;&#x76D6; &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x4E09; - drawable&#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; - shape drawable&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; - State List Drawable&#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; - &#x6839;&#x636E;&#x5C4F;&#x5BC6;&#x5EA6;&#x5206;&#x5272;apk&#x548C;mipmap&#x8D44;&#x6E90; - 9&#x6BB5;&#x62C9;&#x4F38;&#x56FE;&#x7247; &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x56DB; - &#x904D;&#x5386;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x5E94;&#x7528; - &#x4EFB;&#x52A1;&#x548C;&#x8FDB;&#x7A0B; - concurrent documents &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x4E94; - &#x8054;&#x7F51;&#x64CD;&#x4F5C; - json&#x6570;&#x636E;&#x89E3;&#x6790; - &#x4E3B;&#x7EBF;&#x7A0B;&#x548C;&#x540E;&#x53F0;&#x7EBF;&#x7A0B; &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x516D; - Looper/MessageQueue/Message/Handler - Picasso - StrictMode &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x4E03; - Shared Preferences - &#x4F7F;&#x7528;SearchView &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x516B; - Service - &#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x662F;&#x5426;&#x53EF;&#x7528; - AlarmManager - PendingIntent - Notifications &#x7B14;&#x8BB0;&#x4E8C;&#x5341;&#x4E5D; - &#x521B;&#x5EFA;&#x3001;&#x6CE8;&#x518C;standalone receiver - &#x521B;&#x5EFA;&#x3001;&#x6CE8;&#x518C;dynamic reciever - &#x4F7F;&#x7528;receiver - &#x9650;&#x5B9A;broadcast&#x7684;&#x4F20;&#x64AD;&#x8303;&#x56F4; - &#x6709;&#x5E8F;&#x5E7F;&#x64AD; &#x7B14;&#x8BB0;&#x4E09;&#x5341; - &#x4F7F;&#x7528;WebView - &#x4EE4;Activity&#x4E0D;&#x968F;&#x8F6C;&#x5C4F;&#x91CD;&#x5EFA; &#x7B14;&#x8BB0;&#x4E09;&#x5341;&#x4E00; - &#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x89C6;&#x56FE; - &#x5728;View&#x4E0A;&#x7ED8;&#x5236; &#x7B14;&#x8BB0;&#x4E09;&#x5341;&#x4E8C; - Property Animation - Animation Set &#x7B14;&#x8BB0;&#x4E09;&#x5341;&#x4E09; - Google Play Services - LocationService&#xFF0C;&#x7533;&#x8BF7;&#x6743;&#x9650;&#xFF0C;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#xFF0C;&#x4F7F;&#x7528;&#x7ED3;&#x679C; - &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x6A21;&#x62DF;&#x4F4D;&#x7F6E;&#x53D8;&#x5316; &#x7B14;&#x8BB0;&#x4E09;&#x5341;&#x56DB; - &#x83B7;&#x53D6;Google&#x5730;&#x56FE;API key - &#x663E;&#x793A;Google&#x5730;&#x56FE; - &#x5728;Google&#x5730;&#x56FE;&#x4E0A;&#x6807;&#x6CE8;&#x4F4D;&#x7F6E;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三十四]]></title>
    <url>%2F2017%2F11%2F14%2F2017%2F1114AndroidProgrammingBNRG34%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x4F1A;&#x628A;&#x9644;&#x8FD1;&#x56FE;&#x7247;&#x7684;&#x7ECF;&#x7EAC;&#x5EA6;&#x6807;&#x5230;&#x5730;&#x56FE;&#x4E0A;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x83B7;&#x53D6;Google&#x5730;&#x56FE;API key - &#x663E;&#x793A;Google&#x5730;&#x56FE; - &#x5728;Google&#x5730;&#x56FE;&#x4E0A;&#x6807;&#x6CE8;&#x4F4D;&#x7F6E; &#x83B7;&#x53D6;&#x5730;&#x56FE;API key &#x4F7F;&#x7528;Map API&#x9700;&#x8981;&#x5728;AndroidManifest.xml&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;API key&#xFF0C;&#x8BE5;API key&#x662F;&#x7528;&#x6765;&#x8BC1;&#x660E;&#x6B64;app&#x5DF2;&#x7ECF;&#x83B7;&#x5F97;&#x4E86;Google Map Service&#x7684;&#x6388;&#x6743;&#x3002;&#x5728;&#x300A;Google Maps API&#x300B;&#x6709;&#x5B98;&#x65B9;&#x8BF4;&#x660E;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x53EF;&#x4EE5;follow AndroidStudio&#x7684;&#x6307;&#x793A;&#xFF0C;&#x5305;&#x540D;&#x53F3;&#x952E; &gt; New &gt; Activity &gt; Gallery &#x9009;&#x62E9;Google Maps Activity&#xFF1A; &#x8FD9;&#x4F1A;&#x751F;&#x6210;MapsActivity.java&#x548C;google_maps_api.xml&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5F00;&#x540E;&#x8005;&#xFF1A; 123456789101112&lt;resources&gt; &lt;!-- TODO: Before you run your application, you need a Google Maps API key. To get one, follow this link, follow the directions and press &quot;Create&quot; at the end: https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&amp;keyType=CLIENT_SIDE_ANDROID&amp;r=84:99:B8:6F:79:C0:48:5E:A0:3D:F5:2B:3A:E3:EC:ED:A3:BE:A6:A8%3Bcom.bnrg.locatr ... --&gt; &lt;string name=&quot;google_maps_key&quot; templateMergeStrategy=&quot;preserve&quot; translatable=&quot;false&quot;&gt;AIzaSyBFYVpfsIF7k4MJa3vxDHZDpbmKNS9UPxA&lt;/string&gt;&lt;/resources&gt; &#x6309;&#x7167;&#x63D0;&#x793A;&#x751F;&#x6210;API&#x5BC6;&#x94A5;&#xFF0C;&#x5C06;&#x5176;&#x586B;&#x5165;google_maps_key&#xFF0C;&#x6CE8;&#x610F;&#x8981;&#x8BBE;&#x7F6E;&#x5BC6;&#x94A5;&#x9650;&#x5236;&#x4E3A;Android&#x5E94;&#x7528;&#x3002;&#x6211;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x662F;&#x51FA;&#x73B0;&#x4E86;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; 1234567E/Google&#xA0;Maps&#xA0;Android&#xA0;API: Authorization failure. Please see https://developers.google.com/maps/documentation/android-api/start for how to correctly set up the map.E/Google&#xA0;Maps&#xA0;Android&#xA0;API: In the Google Developer Console (https://console.developers.google.com) Ensure that the &quot;Google Maps Android API v2&quot; is enabled. Ensure that the following Android Key exists: API Key: xxxxxx Android Application (&lt;cert_fingerprint&gt;;&lt;package_name&gt;):xx:xx:xx:xx....;com.bnrg.locatr &#x53EF;&#x4EE5;&#x5C06;&#x63D0;&#x793A;&#x4E2D;&#x6307;&#x51FA;&#x7684;&#x8BC1;&#x4E66;&#x6307;&#x7EB9;&#x548C;&#x5305;&#x540D;&#x6DFB;&#x52A0;&#x5230;&#x670D;&#x52A1;&#x7AEF;&#x5373;&#x53EF;&#xFF1A; &#x4E66;&#x4E2D;&#x63D0;&#x5230;&#xFF1A;&#x5F15;&#x5165;MapsActivity&#x4F1A;&#x81EA;&#x52A8;&#x6DFB;&#x52A0;&#x4F9D;&#x8D56;com.google.android.gms:pla-services&#xFF0C;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x4F1A;&#x5E26;&#x6765;&#x5DE8;&#x5927;&#x7684;&#x4EE3;&#x7801;&#x91CF;&#xFF0C;&#x5BFC;&#x81F4;method limit&#x7206;&#x8868;&#x3002;&#x56E0;&#x4E3A;Android app&#x652F;&#x6301;&#x7684;&#x6700;&#x5927;&#x65B9;&#x6CD5;&#x6570;&#x662F;65536&#x4E2A;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x591A;&#x4E8E;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6570;&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x4F7F;&#x7528;multidex&#x3002;&#x672C;&#x8282;&#x7ED9;&#x51FA;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5728;app/build.gradle&#x4E2D;&#x5220;&#x9664;compile &apos;com.google.android.gms:play.services:11.6.0&apos;&#x3002;&#x4F46;&#x662F;&#x6211;&#x5728;&#x5F15;&#x5165;MapsActivity&#x4E4B;&#x540E;&#x5E76;&#x6CA1;&#x6709;&#x5728;gradle&#x6587;&#x4EF6;&#x4E2D;&#x627E;&#x5230;&#x8FD9;&#x4E48;&#x4E00;&#x884C;&#x3002; &#x663E;&#x793A;&#x5730;&#x56FE; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;MapView&#x6765;&#x663E;&#x793A;&#x5730;&#x56FE;&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x548C;&#x666E;&#x901A;&#x7684;View&#x6700;&#x5927;&#x7684;&#x5DEE;&#x522B;&#x5728;&#x4E8E;&#xFF1A;&#x5FC5;&#x987B;&#x8981;&#x628A;&#x6240;&#x6709;&#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x8F6C;&#x53D1;&#x7ED9;&#x5B83;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 123456@Overridepublic void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); ... mMapView.onCreate(savedInstanceState);} &#x597D;&#x70E6;&#xFF01;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;SupportMapFragment&#x8BA9;&#x5B83;&#x5B8C;&#x6210;&#x8FD9;&#x4E9B;&#x8F6C;&#x53D1;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x53EA;&#x662F;&#x8BA9;&#x6211;&#x4EEC;&#x7684;Fragment&#x6210;&#x4E3A;&#x5B83;&#x7684;&#x5B50;&#x7C7B;&#x5373;&#x53EF;&#xFF0C;SupportMapFragment&#x5185;&#x90E8;&#x7EF4;&#x62A4;&#x7740;&#x4E00;&#x4E2A;MapView&#x5B9E;&#x4F8B;&#x3002; &#x4ECE;Flickr&#x83B7;&#x53D6;&#x8FD4;&#x56DE;&#x7684;&#x4F4D;&#x7F6E;&#x6570;&#x636E; &#x5728;&#x524D;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x8BF7;&#x6C42;Flickr&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x4F1A;&#x5E26;&#x4E0A;&#x5F53;&#x524D;&#x6240;&#x5728;&#x4F4D;&#x7F6E;&#xFF1A; 12345678// FlickrFetchr.java private String buildUrl(Location location){ return ENDPOINT.buildUpon() .appendQueryParameter(&quot;method&quot;, SEARCH_METHOD) .appendQueryParameter(&quot;lat&quot;, &quot;&quot; + location.getLatitude()) .appendQueryParameter(&quot;lon&quot;, &quot;&quot; + location.getLongitude()) .build().toString(); // lat&#x548C;lon&#x4E3A;&#x5F53;&#x524D;&#x4F4D;&#x7F6E; } &#x73B0;&#x5728;&#x8FD8;&#x9700;&#x8981;&#x544A;&#x8BC9;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#xFF1A;&#x8BF7;&#x5728;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x4E2D;&#x5305;&#x542B;&#x6BCF;&#x5F20;&#x56FE;&#x7247;&#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;&#xFF1A; 12345678// FlickrFetchr.java private static final Uri ENDPOINT = Uri.parse(&quot;https://api.flickr.com/services/rest/&quot;) .buildUpon() .appendQueryParameter(&quot;api_key&quot;, API_KEY) .appendQueryParameter(&quot;format&quot;, &quot;json&quot;) .appendQueryParameter(&quot;nojsoncallback&quot;, &quot;1&quot;) .appendQueryParameter(&quot;extras&quot;, &quot;url_s,geo&quot;) // geo&#x8981;&#x6C42;&#x8FD4;&#x56DE;&#x56FE;&#x7247;&#x4F4D;&#x7F6E; .build(); &#x5F53;&#x8BF7;&#x6C42;&#x6536;&#x5230;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x89E3;&#x6790;&#x5E76;&#x83B7;&#x53D6;&#x56FE;&#x7247;&#x7684;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#xFF1A; 12345678910111213// FlickrFetchr.java private void parseItems(List&lt;GalleryItem&gt; items, JSONObject jsonBody)...{ JSONObject photosJsonObject = jsonBody.getJSONObject(&quot;photos&quot;); JSONArray photoJsonArray = photosJsonObject.getJSONArray(&quot;photo&quot;); for(int i=0; i&lt;photoJsonArray.length(); i++){ JSONObject photoJsonObject = photoJsonArray.getJSONObject(i); GalleryItem item = new GalleryItem(); ... item.setLat(photoJsonObject.getDouble(&quot;latitude&quot;)); item.setLon(photoJsonObject.getDouble(&quot;longitude&quot;)); items.add(item); } } &#x628A;&#x524D;&#x9762;&#x7684;&#x673A;&#x5236;&#x5C42;&#x4E32;&#x5728;&#x4E00;&#x8D77;&#xFF1A;&#x5E26;&#x7740;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x8BF7;&#x6C42;Flickr&#xFF0C;&#x5F97;&#x5230;&#x8DDD;&#x79BB;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x6700;&#x8FD1;&#x7684;item&#xFF0C;&#x5E76;&#x83B7;&#x53D6;&#x56FE;&#x7247;&#xFF1A; 12345678910111213141516171819202122232425262728// FlickrFetchr.java private class SearchTask extends AsyncTask&lt;Location, Void, Void&gt;{ private GalleryItem mGalleryItem; private Bitmap mBitmap; private Location mLocation; @Override protected Void doInBackground(Location ... params){ mLocation = params[0]; // &#x4F20;&#x5165;&#x7684;&#x5F53;&#x524D;&#x4F4D;&#x7F6E; FlickrFetchr fetchr = new FlickrFetchr(); List&lt;GalleryItem&gt; items = fetchr.searchPhotos(params[0]); ... mGalleryItem = items.get(0); // &#x79BB;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x6700;&#x8FD1;&#x7684;item try{ // &#x83B7;&#x53D6;&#x6700;&#x8FD1;&#x7684;item&#x5305;&#x542B;&#x7684;&#x56FE;&#x7247; byte[] bytes = fetchr.getUrlBytes(mGalleryItem.getUrl()); mBitmap = BitmapFactory.decodeByteArray(bytes, 0, bytes.length); }... } @Override protected void onPostExecute(Void result){ // &#x5C06;&#x6210;&#x529F;&#x4E0B;&#x8F7D;&#x5230;&#x7684;&#x6570;&#x636E;&#x66F4;&#x65B0;&#x7ED9;&#x5BBF;&#x4E3B;&#x7C7B;LocatrFragment mMapImage = mBitmap; mMapItem = mGalleryItem; mCurrentLocation = mLocation; updateUI(); } } &#x663E;&#x793A;&#x5730;&#x56FE;&#x5E76;&#x6807;&#x6CE8;&#x4F4D;&#x7F6E; SupportMapFragment&#x5185;&#x90E8;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;MapView&#x5B9E;&#x4F8B;&#xFF0C;&#x4F46;&#x8981;&#x60F3;&#x63D0;&#x9886;&#x5230;&#x8BE5;&#x5B9E;&#x4F8B;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x51FD;&#x6570;getMapAsync(...)&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556// LocatrFragment.javapublic class LocatrFragment extends SupportMapFragment { @Override public void onCreate(Bundle savedInstanceState){ ... getMapAsync(new OnMapReadyCallback() { @Override public void onMapReady(GoogleMap googleMap) { mMap = googleMap; // &#x2460; &#x5F53;&#x5F97;&#x5230;ViewMap&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x4F1A;&#x901A;&#x8FC7;&#x56DE;&#x8C03;&#x8D4B;&#x7ED9;mMap&#x3002; updateUI(); // &#x2461;a } }); } private class SearchTask extends AsyncTask&lt;Location, Void, Void&gt;{ ... @Override protected void onPostExecute(Void result){ mMapImage = mBitmap; mMapItem = mGalleryItem; mCurrentLocation = mLocation; updateUI(); // &#x2461;b } }} private void updateUI(){ ... LatLng itemPoint = new LatLng(mMapItem.getLat(), mMapItem.getLon()); // &#x9644;&#x8FD1;&#x56FE;&#x7247;&#x7ECF;&#x7EAC;&#x5EA6; LatLng myPoint = new LatLng(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude()); // &#x5F53;&#x524D;&#x6240;&#x5728;&#x7ECF;&#x7EAC;&#x5EA6; BitmapDescriptor itemBitmap = BitmapDescriptorFactory.fromBitmap(mMapImage); MarkerOptions itemMarker = new MarkerOptions() .position(itemPoint) .icon(itemBitmap); // &#x9644;&#x8FD1;&#x56FE;&#x7247;&#x76F4;&#x63A5;&#x663E;&#x793A;&#x5728;&#x5730;&#x56FE;&#x4E0A; MarkerOptions myMarker = new MarkerOptions() .position(myPoint); // &#x5F53;&#x524D;&#x6240;&#x5728;&#x7ECF;&#x7EAC;&#x5EA6;&#x663E;&#x793A;&#x56FE;&#x9489; mMap.clear(); mMap.addMarker(itemMarker); mMap.addMarker(myMarker); // &#x2462;&#x6DFB;&#x52A0;&#x5B9A;&#x4F4D;&#x70B9; LatLngBounds bounds = new LatLngBounds.Builder() .include(itemPoint) .include(myPoint) .build(); // &#x2463; int margin = getResources().getDimensionPixelOffset( R.dimen.map_inset_margin); // &#x2464; CameraUpdate update = CameraUpdateFactory.newLatLngBounds(bounds, margin); mMap.animateCamera(update); // &#x2465; } ...} &#x2461;&#x5F53;&#x521D;&#x59CB;&#x5316;&#x5B8C;&#x6210;&#x6216;&#x8005;&#x5F53;&#x4E0B;&#x5230;&#x65B0;&#x7684;&#x9644;&#x8FD1;&#x56FE;&#x7247;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5C06;&#x5237;&#x65B0;&#x5730;&#x56FE;&#x754C;&#x9762;&#x3002; &#x2462;&#x5728;&#x5730;&#x56FE;&#x4E0A;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x5B9A;&#x4F4D;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;&#x7528;&#x56FE;&#x9489;&#x8868;&#x793A;&#xFF1B;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x9644;&#x8FD1;&#x56FE;&#x7247;&#xFF0C;&#x76F4;&#x63A5;&#x5728;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x4E0A;&#x663E;&#x793A;&#x56FE;&#x7247;&#x3002; &#x2463;&#x6784;&#x9020;&#x4E00;&#x4E2A;LatLngBounds&#x5B9E;&#x4F8B;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5708;&#x5B9A;&#x5730;&#x56FE;&#x663E;&#x793A;&#x7684;&#x8303;&#x56F4;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x4F60;&#x5173;&#x5FC3;&#x7684;&#x70B9;include&#x5230;LatLngBounds&#x91CC;&#xFF0C;build()&#x4F1A;&#x751F;&#x6210;&#x5305;&#x542B;&#x8FD9;&#x4E9B;&#x70B9;&#x7684;&#x77E9;&#x5F62;&#x533A;&#x57DF;&#x3002; &#x2464;&#x6307;&#x5B9A;LatLngBounds&#x533A;&#x57DF;&#x8DDD;&#x79BB;MapView&#x7684;&#x8FB9;&#x8DDD;&#x3002;&#x2463;&#x548C;&#x2464;&#x5171;&#x540C;&#x7EC4;&#x6210;&#x4E86;&#x5730;&#x56FE;&#x5F53;&#x524D;&#x663E;&#x793A;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x6BD4;&#x4F8B;&#x5C3A;&#x3002; &#x2465;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x66F4;&#x65B0;&#x5730;&#x56FE;&#xFF1A;moveCamera(CameraUpdate)&#x6216;animateCamera(CameraUpdate) &#x8FD0;&#x884C;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x53EF;&#x4EE5;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x7684;Extended control&#x4E2D;&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x3002;&#x5B87;&#x5B99;&#x4E2D;&#x5FC3;&#x7684;&#x7ECF;&#x7EAC;&#x5EA6;&#x662F;&#xFF1A;&#x4E1C;&#x7ECF;116.332&#xB0;, &#x5317;&#x7EAC;39.993&#xB0;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三十三]]></title>
    <url>%2F2017%2F11%2F13%2F2017%2F1113AndroidProgrammingBNRG33%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x968F;Google Play Services&#x5E26;&#x7684;LocationService&#xFF0C;&#x4F7F;&#x7528;&#x5730;&#x7406;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5411;Flickr&#x8BF7;&#x6C42;&#x548C;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x76F8;&#x5173;&#x7684;&#x56FE;&#x7247;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Google Play Services - LocationService&#xFF0C;&#x7533;&#x8BF7;&#x6743;&#x9650;&#xFF0C;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#xFF0C;&#x4F7F;&#x7528;&#x7ED3;&#x679C; - &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x6A21;&#x62DF;&#x4F4D;&#x7F6E;&#x53D8;&#x5316; Play Services &#x9664;&#x4E86;&#x968F;Android&#x7CFB;&#x7EDF;&#x5E26;&#x7684;&#x6807;&#x51C6;&#x5E93;&#x5916;&#xFF0C;Android&#x8FD8;&#x901A;&#x8FC7;Google Play Service&#x4E0B;&#x53D1;&#x548C;&#x66F4;&#x65B0;API&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x8FD9;&#x7C7B;&#x529F;&#x80FD;&#x7684;&#x66F4;&#x65B0;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#xFF0C;location service&#x5C31;&#x5C5E;&#x4E8E;&#x8FD9;&#x4E00;&#x7C7B;&#x578B;&#xFF0C;&#x88AB;&#x79F0;&#x4E3A;Fused Location Provider&#x3002;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x8FD9;&#x7C7B;API&#xFF0C;&#x5C31;&#x8981;&#x6C42;&#x8BBE;&#x5907;&#x5FC5;&#x987B;&#x5B89;&#x88C5;&#x4E86;Google Play Service&#x3002; &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x5B89;&#x88C5;Play Services Android Studio&#x83DC;&#x5355;Tools &gt; Android &gt; SDK Manager&#xFF0C;&#x52FE;&#x9009;&#x201C;Show Package Details&#x201D;&#xFF0C;&#x786E;&#x4FDD;&#x548C;&#x6A21;&#x62DF;&#x5668;&#x5BF9;&#x5E94;&#x7248;&#x672C;&#x7684;&#x201C;Google APIs Intel x86 Atom System Imange&#x201D;&#x88AB;&#x52FE;&#x9009;&#xFF1A; &#x6765;&#x5230;Android Virutal Device Manager&#xFF0C;&#x786E;&#x4FDD;&#x6A21;&#x62DF;&#x5668;Target&#x91CC;&#x6709;&#x201C;Google APIs&#x201D;&#x5B57;&#x6837;&#xFF1A; &#x4F7F;&#x7528;Google Play Services 1.&#x6DFB;&#x52A0;&#x4F9D;&#x8D56; &#x5728;AndroidStudio&#x4E2D;&#xFF0C;&#x2318;+; &gt; Project Structure &gt; app &gt; Dependencies &gt; + &gt; Library dependency &#x8F93;&#x5165;com.agoogle.android.gms&#xFF0C;&#x6CE8;&#x610F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x662F;com.agoogle.android.gms:play-services-location:11.6.0&#x8FD9;&#x5728;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x91CC;&#x6CA1;&#x6709;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8865;&#x4E0A;&#x5B8C;&#x6574;&#x7684;&#x540D;&#x79F0;&#xFF1A; &#x5982;&#x679C;&#x4E0D;&#x77E5;&#x9053;&#x5B8C;&#x6574;&#x7684;&#x5199;&#x6CD5;&#x8BE5;&#x5982;&#x4F55;&#x662F;&#x597D;&#xFF1F; 2.&#x68C0;&#x67E5;Google Play Services&#x662F;&#x5426;&#x53EF;&#x7528; &#x6211;&#x4EEC;&#x5728;Activity&#x5373;&#x5C06;&#x5F39;&#x51FA;&#x65F6;&#x68C0;&#x67E5;&#x670D;&#x52A1;&#x662F;&#x5426;&#x53EF;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x53EF;&#x7528;&#x5219;&#x5F39;&#x51FA;&#x63D0;&#x793A;&#x3002; 123456789101112131415161718192021222324// LocatrActivity.javapublic class LocatrActivity extends SingleFragmentActivity { private static final int REQUEST_ERROR = 0; ... @Override protected void onResume(){ super.onResume(); GoogleApiAvailability apiAvailability = GoogleApiAvailability.getInstance(); int errorCode = apiAvailability.isGooglePlayServicesAvailable(this); if(errorCode != ConnectionResult.SUCCESS){ // &#x5982;&#x679C;&#x670D;&#x52A1;&#x4E0D;&#x53EF;&#x7528;&#xFF0C;&#x5219;&#x5F39;&#x63D0;&#x793A; Dialog errorDialog = apiAvailability.getErrorDialog(this, errorCode, REQUEST_ERROR, new DialogInterface.OnCancelListener() { @Override public void onCancel(DialogInterface dialogInterface) { finish(); } }); errorDialog.show(); } }} 3.&#x7533;&#x8BF7;&#x6743;&#x9650; &#x5728;AndroidManifest.xml&#x4E2D;&#x58F0;&#x660E;&#x6743;&#x9650; 123456&lt;manifest ...&gt; &lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt; &lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot;/&gt; &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt; &lt;application.../&gt;&lt;/manifest&gt; &#x5176;&#x4E2D;FINE_LOCATION&#x6765;&#x81EA;GPS&#xFF0C;&#x4FE1;&#x53F7;&#x66F4;&#x7CBE;&#x51C6;&#xFF1B;COARSE_LOCATION&#x6765;&#x81EA;&#x57FA;&#x7AD9;&#x6216;WiFi&#xFF0C;&#x4FE1;&#x53F7;&#x7CBE;&#x5EA6;&#x8F83;&#x5DEE;&#x3002;&#x4E8C;&#x8005;&#x90FD;&#x5C5E;&#x4E8E;dangerous&#x7C7B;&#x578B;&#x7684;&#x6743;&#x9650;&#xFF0C;&#x8FD9;&#x7C7B;&#x6743;&#x9650;&#x4EC5;&#x5728;AndroidManifest.xml&#x91CC;&#x58F0;&#x660E;&#x662F;&#x4E0D;&#x591F;&#x7684;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x518D;&#x5B9E;&#x65F6;&#x7533;&#x8BF7;&#x3002; &#x5728;&#x8FD0;&#x884C;&#x65F6;&#x7533;&#x8BF7; dangerous&#x7C7B;&#x578B;&#x7684;&#x6743;&#x9650;&#x88AB;&#x5F52;&#x6210;&#x4E86;&#x51E0;&#x7C7B;&#xFF1A; table th:nth-of-type(1){ width: 30px; } table th:nth-of-type(2){ width: 80px; } table th:nth-of-type(3){ width: 30px; } table th:nth-of-type(4){ width: 80px; } Permission Group Permissions CALENDAR READ_CALENDARWRITE_CALENDAR CONTACTS READ_CONTACTSWRITE_CONTACTSGET_ACCOUNTS MICROPHONE RECORD_AUDIO PHONE READ_PHONE_STATECALL_PHONEREAD_CALL_LOGWRITE_CALL_LOGADD_VOICEMAILUSE_SIPPROCESS_OUTGOING_CALLS STORAGE READ_EXTERNAL_STORAGEWRITE_EXTERNAL_STORAGE &#x7533;&#x8BF7;&#x548C;&#x6388;&#x6743;&#x662F;&#x6309;&#x7167;Permissions&#x64CD;&#x4F5C;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x7533;&#x8BF7;&#x5230;&#x4E86;Group&#x4E2D;&#x67D0;&#x4E2A;&#x6743;&#x9650;&#xFF0C;&#x8BE5;Group&#x4E2D;&#x5176;&#x5B83;&#x6743;&#x9650;&#x4E5F;&#x5C31;&#x90FD;&#x5177;&#x5907;&#x4E86;&#x3002;&#x8FD0;&#x884C;&#x65F6;&#x68C0;&#x67E5;&#x548C;&#x7533;&#x8BF7;&#x6743;&#x9650;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647// LocatrFragment.javapublic class LocatrFragment extends Fragment { private static final String TAG = &quot;LocatrFragment&quot;; private static final String[] LOCATION_PERMISSIONS = new String[]{ Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION, }; private static final int REQUEST_LOCATION_PERMISSION = 0; ... @Override public boolean onOptionsItemSelected(MenuItem item){ switch (item.getItemId()){ case R.id.action_locate: if(hasLocationPermission()) { // &#x2461; findImage(); }else {// &#x2462; requestPermissions(LOCATION_PERMISSIONS, REQUEST_LOCATION_PERMISSION); } return true; ... } } @Override // &#x2463; public void onRequestPermissionsResult(int requestCode, String[] permission, int[] grantResults){ switch (requestCode){ case REQUEST_LOCATION_PERMISSION: if(hasLocationPermission()){ findImage(); } default: super.onRequestPermissionsResult(requestCode, permission, grantResults); } } private void findImage(){ ... // &#x4F7F;&#x7528;LocationService } private boolean hasLocationPermission(){ // &#x2460; int result = ContextCompat.checkSelfPermission(getActivity(), LOCATION_PERMISSIONS[0]); return result == PackageManager.PERMISSION_GRANTED; }} &#x2460;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x5177;&#x5907;LOCATION&#x6743;&#x9650;&#x3002; &#x2461;&#x5F53;&#x70B9;&#x51FB;&#x53F3;&#x4E0A;&#x89D2;&#x201C;&#x5B9A;&#x4F4D;&#x201D;&#x56FE;&#x6807;&#x65F6;&#xFF0C;&#x5224;&#x65AD;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x6709;LOCATION&#x6743;&#x9650;&#xFF0C;&#x5219;&#x8C03;&#x7528;findImage()&#x4F7F;&#x7528;Location Service&#xFF1B;&#x5426;&#x5219;&#x7533;&#x8BF7;LOCATION&#x6743;&#x9650;&#x3002; &#x2462;requestPermissions(...)&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x8BF7;&#x6C42;&#xFF0C;&#x5B83;&#x4F1A;&#x89E6;&#x53D1;Android&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x6743;&#x9650;&#x7684;&#x5BF9;&#x8BDD;&#x6846;&#x3002; &#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8BF7;&#x6C42;&#x7684;&#x6743;&#x9650;&#x5217;&#x8868;&#xFF1B;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;requestCode&#xFF0C;&#x7528;&#x6765;&#x533A;&#x5206;&#x6BCF;&#x4E2A;&#x8BF7;&#x6C42;&#x3002;&#x5F53;&#x7528;&#x6237;&#x9009;&#x62E9;&#x5141;&#x8BB8;&#x6216;&#x8005;&#x62D2;&#x7EDD;&#x6743;&#x9650;&#x7533;&#x8BF7;&#x540E;&#xFF0C;&#x4F1A;&#x6536;&#x5230;&#x56DE;&#x8C03;&#xFF0C;&#x8FD9;&#x662F;&#x2463;&#x5E72;&#x7684;&#x4E8B;&#x513F;&#x4E86;&#x3002; &#x2463;&#x5728;&#x56DE;&#x8C03;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x6839;&#x636E;requestCode&#x5206;&#x8FA8;&#x662F;&#x54EA;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x3002;&#x7136;&#x540E;&#x5224;&#x65AD;&#x5982;&#x679C;&#x5177;&#x5907;&#x4E86;LOCATION&#x6743;&#x9650;&#xFF0C;&#x8BF4;&#x660E;&#x7528;&#x6237;&#x901A;&#x8FC7;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;findImage()&#x4F7F;&#x7528;Location Service&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x53C2;&#x6570;grantResults&#xFF0C;&#x8FD9;&#x662F;&#x5F97;&#x5230;&#x6388;&#x6743;&#x7684;&#x6743;&#x9650;&#x3002; 4.&#x4F7F;&#x7528;Location Service 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384// LocatrFragment.javapublic class LocatrFragment extends Fragment { private ImageView mImageView; private GoogleApiClient mClient; ... @Override public void onCreate(Bundle savedInstanceState){ ... mClient = new GoogleApiClient.Builder(getActivity()) .addApi(LocationServices.API) .addConnectionCallbacks( new GoogleApiClient.ConnectionCallbacks() { @Override public void onConnected(@Nullable Bundle bundle) { getActivity().invalidateOptionsMenu(); } @Override public void onConnectionSuspended(int i) { } }) .build(); // &#x2460; } @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ View v = inflater.inflate(R.layout.fragment_locatr, container, false); mImageView = (ImageView)v.findViewById(R.id.image); return v; } @Override public void onStart(){ super.onStart(); getActivity().invalidateOptionsMenu(); mClient.connect(); // &#x2461; } @Override public void onStop(){ super.onStop(); mClient.disconnect(); // &#x2462; } @Override public void onCreateOptionsMenu(Menu menu, MenuInflater inflater){ super.onCreateOptionsMenu(menu, inflater); inflater.inflate(R.menu.fragment_locatr, menu); MenuItem searchItem = menu.findItem(R.id.action_locate); searchItem.setEnabled(mClient.isConnected()); } @Override public boolean onOptionsItemSelected(MenuItem item){ switch (item.getItemId()){ case R.id.action_locate: if(hasLocationPermission()) { findImage(); }... return true; ... } } ... private void findImage(){ LocationRequest request = LocationRequest.create(); // &#x2463; request.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY); request.setNumUpdates(1);// &#x66F4;&#x65B0;&#x591A;&#x5C11;&#x6B21; request.setInterval(0); // &#x66F4;&#x65B0;&#x7684;&#x9891;&#x6B21;&#xFF0C;0&#x8868;&#x793A;&#x5C3D;&#x53EF;&#x80FD;&#x9891;&#x7E41; LocationServices.FusedLocationApi .requestLocationUpdates(mClient, request, new LocationListener() { @Override public void onLocationChanged(Location location) { Log.i(TAG, &quot;Got a fix: &quot; + location); } }); // &#x2464; } ...} &#x2460;&#x51E1;&#x4F7F;&#x7528;Play Services&#xFF0C;&#x5FC5;&#x987B;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;GoogleApiClient&#x5B9E;&#x4F8B;&#xFF0C;&#x4F7F;&#x7528;GoogleApiClient.Builder&#x5B8C;&#x6210;&#x521B;&#x5EFA;&#x3002; &#x2460;&#x548C;&#x2461;&#x2462;&#x662F;&#x4E00;&#x5957;&#x7EC4;&#x5408;&#x62F3;&#xFF1A;&#x7531;&#x4E8E;Play Service&#x6765;&#x81EA;Google Play Store app&#xFF0C;&#x8FD9;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#xFF0C;Google&#x5EFA;&#x8BAE;&#x5728;Fragment&#x7684;onStart()&#x4E2D;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF0C;&#x5728;onStop()&#x4E2D;&#x91CA;&#x653E;&#x94FE;&#x63A5;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x2461;&#x548C;&#x2462;&#x4E2D;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x3002; &#x4E00;&#x65E6;&#x8FDE;&#x63A5;&#x6210;&#x529F;&#xFF0C;&#x9700;&#x8981;&#x8BA9;&#x83DC;&#x5355;&#x4E2D;&#x7684;&#x201C;&#x5B9A;&#x4F4D;&#x201D;&#x56FE;&#x6807;&#x53D8;&#x6210;enabled&#x72B6;&#x6001;&#xFF0C;&#x5426;&#x5219;&#x4E3A;disabled&#x72B6;&#x6001;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x521B;&#x5EFA;Client&#x65F6;&#xFF0C;&#x8C03;&#x7528;addConnectionCallbacks(...)&#x8BBE;&#x7F6E;&#x8FDE;&#x63A5;&#x6210;&#x529F;&#x7684;&#x56DE;&#x8C03;&#x3002; &#x2463;&#x6784;&#x9020;&#x4E00;&#x4E2A;LocationRequest&#xFF0C;&#x5F85;&#x4F1A;&#x513F;&#x4F1A;&#x628A;&#x5B83;&#x53D1;&#x9001;&#x7ED9;LocationServices&#x3002;&#x9664;&#x4E86;&#x8FD9;&#x91CC;&#x8BBE;&#x5B9A;&#x7684;&#x66F4;&#x65B0;&#x9891;&#x6B21;&#x3001;&#x6B21;&#x6570;&#x3001;&#x7CBE;&#x5EA6;&#x7EA7;&#x522B;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x5230;&#x671F;&#x65F6;&#x95F4;&#xFF0C;&#x89E6;&#x53D1;Location&#x66F4;&#x65B0;&#x7684;&#x6700;&#x5C0F;&#x79FB;&#x52A8;&#x8DDD;&#x79BB;&#x3002; &#x2464;&#x5C06;LocationRequest&#x53D1;&#x7ED9;LocationServices&#xFF0C;&#x5982;&#x679C;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5C06;&#x6536;&#x5230;&#x56DE;&#x8C03;onLocationChanged(...)&#xFF0C;&#x901A;&#x8FC7;&#x6A21;&#x62DF;&#x5668;&#x7684;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x7ECF;&#x7EAC;&#x5EA6;&#xFF0C;&#x70B9;&#x51FB;SEND&#x5373;&#x53EF;&#x66F4;&#x65B0;&#x5230;&#x6A21;&#x62DF;&#x5668;&#xFF1A; &#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x63A5;&#x6536;&#x5230;&#x4F4D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x540E;&#xFF0C;&#x6253;&#x5370;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#xFF1A; 11-24 02:10:54.348 3017-3017/com.bnrg.locatr I/LocatrFragment: Got a fix: Location[fused 37.421998,-122.099998 hAcc=20 et=+1m33s663ms alt=0.0 vAcc=??? sAcc=??? bAcc=???] 5.&#x4F7F;&#x7528;Location&#x7ED3;&#x679C; &#x4ECE;LocationServices&#x8BF7;&#x6C42;&#x5F97;&#x5230;&#x7684;&#x662F;&#x4E00;&#x4E2A;Location&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x5176;&#x6210;&#x5458;&#x51FD;&#x6570;&#x83B7;&#x53D6;&#x7ECF;&#x7EAC;&#x5EA6;&#xFF1A; 12345678// FlickrFetchr.java private String buildUrl(Location location){ return ENDPOINT.buildUpon() .appendQueryParameter(&quot;method&quot;, SEARCH_METHOD) .appendQueryParameter(&quot;lat&quot;, &quot;&quot; + location.getLatitude()) .appendQueryParameter(&quot;lon&quot;, &quot;&quot; + location.getLongitude()) .build().toString(); } &#x672C;&#x8282;&#x5269;&#x4E0B;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x662F;&#x7EAF;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E86;&#x2014;&#x2014;&#x628A;&#x7ECF;&#x7EAC;&#x5EA6;&#x4FE1;&#x606F;&#x4F20;&#x5165;url&#x4E2D;&#xFF0C;&#x83B7;&#x53D6;&#x548C;&#x4F4D;&#x7F6E;&#x76F8;&#x5173;&#x7684;&#x56FE;&#x7247;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三十二]]></title>
    <url>%2F2017%2F11%2F12%2F2017%2F1112AndroidProgrammingBNRG32%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x592A;&#x9633;&#x843D;&#x5C71;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x4E3B;&#x8981;&#x91C7;&#x7528;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x7684;&#x65B9;&#x5F0F;&#x641E;&#x5B9A;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Property Animation - Animation Set &#x5C5E;&#x6027;&#x52A8;&#x753B; &#x672C;&#x8282;&#x5F15;&#x5165;&#x7684;&#x52A8;&#x753B;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x8BA9;&#x592A;&#x9633;&#x4ECE;&#x5929;&#x7A7A;&#x843D;&#x5230;&#x6D77;&#x5E73;&#x9762;&#x4EE5;&#x4E0B;&#xFF0C;&#x8FD9;&#x662F;&#x521D;&#x59CB;&#x72B6;&#x6001;&#xFF1A; &#x70B9;&#x51FB;&#x84DD;&#x5929;&#x80CC;&#x666F;&#x540E;&#xFF0C;&#x592A;&#x9633;&#x843D;&#x5230;&#x6D77;&#x5E73;&#x9762;&#x4EE5;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class SunsetFragment extends Fragment { private View mSceneView; private View mSunView; private View mSkyView; private int mBlueSkyColor; private int mSunsetSkyColor; private int mNightSkyColor; ... @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ View view = inflater.inflate(R.layout.fragment_sunset, container, false); mSceneView = view; mSunView = view.findViewById(R.id.sun); mSkyView = view.findViewById(R.id.sky); Resources resources = getResources(); mBlueSkyColor = resources.getColor(R.color.blue_sky); mSunsetSkyColor = resources.getColor(R.color.sunset_sky); mNightSkyColor = resources.getColor(R.color.night_sky); // &#x70B9;&#x51FB;&#x80CC;&#x666F;&#x64AD;&#x653E;&#x52A8;&#x753B; mSceneView.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ startAnimation(); } }); return view; } private void startAnimation(){ float sunYStart = mSunView.getTop(); float sunYEnd = mSkyView.getHeight(); // &#x2460; &#x79FB;&#x52A8;&#x592A;&#x9633;&#x52A8;&#x753B; ObjectAnimator heightAnimator = ObjectAnimator.ofFloat( mSunView, &quot;y&quot;, sunYStart, sunYEnd) .setDuration(3000); // &#x8BBE;&#x7F6E;&#x65F6;&#x95F4;&#x63D2;&#x503C; heightAnimator.setInterpolator(new AccelerateInterpolator()); // &#x2461; &#x84DD;&#x5929;&#x80CC;&#x666F;&#x8272;&#x8FC7;&#x6E21;&#x52A8;&#x753B; ObjectAnimator sunsetSkyAnimator = ObjectAnimator.ofInt(mSkyView, &quot;backgroundColor&quot;, mBlueSkyColor, mSunsetSkyColor) .setDuration(3000); // &#x8BBE;&#x7F6E;&#x989C;&#x8272;&#x63D2;&#x503C; sunsetSkyAnimator.setEvaluator(new ArgbEvaluator()); // &#x6267;&#x884C;&#x52A8;&#x753B; heightAnimator.start(); sunsetSkyAnimator.start(); }} &#x672C;&#x4F8B;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x63D2;&#x503C;&#x91CD;&#x590D;&#x8C03;&#x7528;&#x6307;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;setter&#x65B9;&#x6CD5;&#x3002;&#x4F8B;&#x5982;&#xFF1A;ObjectAnimator.ofFloat(mSunView, &quot;y&quot;, 0, 1)&#x5C31;&#x662F;&#x4F7F;&#x7528;[0, 1]&#x4E4B;&#x95F4;&#x7684;&#x6D6E;&#x70B9;&#x6570;&#xFF0C;&#x91CD;&#x590D;&#x8C03;&#x7528;mSunView.setY(float)&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x2460;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x7D27;&#x63A5;&#x7740;&#x5B83;&#x53C8;&#x63D2;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x5DEE;&#x503C;&#xFF0C;&#x7528;&#x6765;&#x63A7;&#x5236;&#x901F;&#x5EA6;&#x3002; &#x2461;&#x662F;&#x5BF9;&#x84DD;&#x5929;&#x80CC;&#x666F;&#x8272;&#x505A;&#x4E86;&#x8FC7;&#x6E21;&#x52A8;&#x753B;&#xFF0C;&#x5BF9;&#x989C;&#x8272;&#x8BBE;&#x7F6E;&#x63D2;&#x503C;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x8272;&#x503C;&#x662F;&#x7531;&#x56DB;&#x4E2A;&#x66F4;&#x5C0F;&#x7684;&#x6570;&#x503C;&#x62FC;&#x5408;&#x800C;&#x6210;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4ECE;&#x4E00;&#x4E2A;&#x8272;&#x503C;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x8272;&#x503C;&#x7684;&#x8FC7;&#x6E21;&#x5E76;&#x4E0D;&#x662F;&#x4E24;&#x4E2A;&#x6570;&#x503C;&#x7684;&#x7B80;&#x5355;&#x9012;&#x589E;&#x6216;&#x9012;&#x51CF;&#xFF0C;ArgbEvaluator&#x6B63;&#x662F;&#x5B8C;&#x6210;&#x8272;&#x503C;&#x8FC7;&#x6E21;&#x7684;&#x63D2;&#x503C;&#x5668;&#x3002; &#x9664;&#x4E86;&#x53D8;&#x6362;&#x4F4D;&#x7F6E;&#x5750;&#x6807;&#xFF0C;&#x8FD8;&#x6709;&#x4E09;&#x79CD;&#x53D8;&#x6362;&#x65B9;&#x5F0F;&#xFF1A; 1. &#x65CB;&#x8F6C;&#xFF0C;X&#x8F74;&#x504F;&#x79FB;&#xFF0C;Y&#x8F74;&#x504F;&#x79FB; 2. &#x6A2A;&#x5411;&#x7F29;&#x653E;&#x6BD4;&#x4F8B;&#xFF0C;&#x7EB5;&#x5411;&#x7F29;&#x653E;&#x6BD4;&#x4F8B; 3. X&#x8F74;&#x504F;&#x79FB;&#xFF0C;Y&#x8F74;&#x504F;&#x79FB; &#x8FD8;&#x53EF;&#x4EE5;&#x4E3A;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x6DFB;&#x52A0;&#x65F6;&#x95F4;&#x63D2;&#x503C;&#xFF0C;&#x5728;&#x672C;&#x8282;&#x4E2D;&#x8BBE;&#x7F6E;AccelerateInterpolator&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x52A0;&#x901F;&#x63D2;&#x503C;&#x5668;&#xFF0C;Android&#x63D0;&#x4F9B;&#x4E86;&#x7C7B;&#x578B;&#x4E30;&#x5BCC;&#x7684;&#x65F6;&#x95F4;&#x63D2;&#x503C;&#x5668;&#x3002; &#x5236;&#x4F5C;&#x52A8;&#x753B;&#x811A;&#x672C; &#x5BF9;&#x4E8E;&#x66F4;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;AnimatorListener&#x6216;&#x8005;AnimatorSet&#xFF0C;&#x540E;&#x8005;&#x66F4;&#x65B9;&#x4FBF;&#x4E00;&#x4E9B;&#x3002;&#x56E0;&#x4E3A;Listener&#x7684;&#x4EE3;&#x7801;&#x8DE8;&#x5EA6;&#x66F4;&#x5927;&#xFF0C;&#x800C;AnimatorSet&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x5355;&#x5B50;&#x91CC;&#x5217;&#x51FA;&#x4E86;&#x8981;&#x64AD;&#x653E;&#x7684;&#x52A8;&#x753B;&#x53CA;&#x51FA;&#x573A;&#x987A;&#x5E8F;&#xFF0C;&#x5C31;&#x597D;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x52A8;&#x753B;&#x811A;&#x672C;&#x3002; 1234567891011121314// SunsetFragment.java // &#x592A;&#x9633;&#x843D;&#x5C71;&#x52A8;&#x753B; ObjectAnimator heightAnimator = ... // &#x84DD;&#x5929;&#x80CC;&#x666F;&#x8272;&#x8FC7;&#x6E21;&#x52A8;&#x753B; ObjectAnimator sunsetSkyAnimator = ... // &#x592A;&#x9633;&#x843D;&#x5C71;&#x540E;&#x5929;&#x9ED1;&#x52A8;&#x753B; ObjectAnimator nightSkyAnimator = ... ... // &#x5B9A;&#x4E49;&#x548C;&#x64AD;&#x653E;&#x52A8;&#x753B;&#x96C6;&#x5408; AnimatorSet animationSet = new AnimatorSet(); animationSet.play(heightAnimator) .with(sunsetSkyAnimator) .before(nightSkyAnimator); animationSet.start(); &#x201C;&#x64AD;&#x653E;&#x52A8;&#x753B;&#x96C6;&#x5408;&#x201D;&#x90A3;&#x4E00;&#x4E32;&#x8C03;&#x7528;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF1A;&#x201C;play height animator with sunset sky animator before night sky animator&#x201D;&#x2014;&#x2014;&#x5728;&#x5929;&#x9ED1;&#x4E4B;&#x524D;&#xFF0C;&#x592A;&#x9633;&#x843D;&#x5C71;&#x540C;&#x65F6;&#x5929;&#x8FD1;&#x9EC4;&#x660F;&#x3002; &#x5EF6;&#x4F38;&#x9605;&#x8BFB; &#x5728;Android4.4&#x5F15;&#x5165;&#x4E86;&#x900F;&#x660E;&#x52A8;&#x753B;&#xFF08;transitions framework&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5728;&#x4E24;&#x4E2A;&#x89C6;&#x56FE;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#xFF0C;&#x4E66;&#x91CC;&#x53EA;&#x662F;&#x63D0;&#x4E86;&#x4E00;&#x5634;&#x3002;&#x7A0D;&#x540E;&#x518D;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三十一]]></title>
    <url>%2F2017%2F11%2F11%2F2017%2F1111AndroidProgrammingBNRG31%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x53C8;&#x5F00;&#x59CB;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x672C;&#x7AE0;&#x5B50;&#x7C7B;&#x5316;&#x4E00;&#x4E2A;View&#xFF0C;&#x5904;&#x7406;&#x89E6;&#x6478;&#x4E8B;&#x4EF6;&#x3002;&#x5728;&#x4E3B;&#x754C;&#x9762;&#x4E0A;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x62D6;&#x51FA;&#x4E00;&#x4E2A;&#x4E2A;&#x7684;&#x957F;&#x65B9;&#x5F62;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x89C6;&#x56FE; - &#x5728;View&#x4E0A;&#x7ED8;&#x5236; &#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x89C6;&#x56FE; &#x4EE5;&#x524D;&#x521B;&#x5EFA;&#x7684;&#x90FD;&#x662F;Activity&#x3001;Fragment&#x5C5E;&#x4E8E;Controller&#x7684;&#x8303;&#x7574;&#xFF0C;&#x672C;&#x8282;&#x7B2C;&#x4E00;&#x6B21;&#x81EA;&#x5B9A;&#x4E49;View&#x3002; ## 1.&#x6D3E;&#x751F;View&#x7684;&#x5B50;&#x7C7B; BoxDrawingView&#x6709;&#x4E24;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x6216;&#x4ECE;layout&#x6587;&#x4EF6;&#x6784;&#x9020;&#x5B9E;&#x4F8B;&#xFF0C;&#x540E;&#x8005;&#x4F1A;&#x4F7F;&#x7528;&#x5E26;AttributeSet&#x53C2;&#x6570;&#x7684;&#x7248;&#x672C;&#x3002; 12345678910// BoxDrawingView.javapublic class BoxDrawingView extends View { public BoxDrawingView(Context context){ this(context, null); } public BoxDrawingView(Context context, AttributeSet attrs){ super(context, attrs); }} 2.&#x5E03;&#x5C40;&#x6587;&#x4EF6; fragment_drag_and_draw.xml&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x5FC5;&#x987B;&#x4F7F;&#x7528;BoxDrawingView&#x7684;&#x5168;&#x8DEF;&#x5F84;&#x540D;&#xFF0C;&#x8FD9;&#x6837;inflater&#x624D;&#x80FD;&#x627E;&#x5230;&#x5B83;&#x3002; 1234&lt;com.bnrg.draganddraw.BoxDrawingView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;/&gt; &#x6211;&#x5BF9;inflater&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x7684;&#x7B2C;&#x4E00;&#x5370;&#x8C61;&#x5C31;&#x662F;&#x300A;&#x4E09;&#x4F53;&#x300B;&#x4E2D;&#x7684;&#x8131;&#x6C34;&#xFF0C;&#x4E09;&#x4F53;&#x4EBA;&#x8131;&#x6C34;&#x540E;&#x53D8;&#x6210;&#x4E00;&#x5F20;&#x7EB8;&#xFF0C;&#x5145;&#x6C34;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x4EBA;&#x8089;&#x3002;&#x8FD9;&#x91CC;&#x8131;&#x6C34;&#x7684;&#x4EBA;&#x76AE;&#x7EB8;&#x5C31;&#x662F;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#xFF0C;inflater&#x4F1A;&#x628A;&#x5B83;&#x5145;&#x6C34;&#x53D8;&#x6210;&#x9C9C;&#x6D3B;&#x7684;&#x754C;&#x9762;&#x5E03;&#x5C40;&#x3002; 3.&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;View 1234567891011// DragAndDrawFragment.javapublic class DragAndDrawFragment extends Fragment { ... @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ // &#x6839;&#x636E;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x751F;&#x6210;View View v = inflater.inflate(R.layout.fragment_drag_and_draw, container, false); return v; }} &#x8BA9;View&#x5904;&#x7406;&#x89E6;&#x5C4F;&#x4E8B;&#x4EF6; &#x8986;&#x76D6;&#x51FD;&#x6570;public boolean View::onTouchEvent(MotionEvent event)&#xFF0C;&#x8BA9;View&#x7684;&#x5B50;&#x7C7B;&#x5904;&#x7406;&#x89E6;&#x5C4F;&#x65F6;&#x95F4;&#x3002;&#x5176;&#x4E2D;MotionEvent&#x63CF;&#x8FF0;&#x4E86;&#x52A8;&#x4F5C;&#x53D1;&#x751F;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x884C;&#x4E3A;&#xFF0C;&#x884C;&#x4E3A;&#x5305;&#x62EC;&#xFF1A; Action constants Description ACTION_DOWN &#x6307;&#x5934;&#x89E6;&#x5230;&#x5C4F;&#x5E55; ACTION_MOVE &#x6307;&#x5934;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x79FB;&#x52A8; ACTION_UP &#x6307;&#x5934;&#x79BB;&#x5F00;&#x5C4F;&#x5E55; ACTION_CANCEL &#x7236;&#x89C6;&#x56FE;&#x62E6;&#x622A;&#x4E86;&#x89E6;&#x5C4F;&#x4E8B;&#x4EF6; &#x5728;View&#x4E0A;&#x7ED8;&#x5236; &#x548C;Windows&#x4E0B;&#x7684;&#x7ED8;&#x5236;&#x6709;&#x7C7B;&#x4F3C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;View&#x7684;&#x8BBE;&#x7F6E;&#x4E3A;&#x65E0;&#x6548;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x4E0B;&#x4E00;&#x8F6E;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x4E2D;&#x8C03;&#x7528;&#x5176;onDraw()&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x91CD;&#x7ED8;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x5904;&#x7406;&#x89E6;&#x5C4F;&#x4E8B;&#x4EF6;&#x548C;&#x7ED8;&#x5236;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950// BoxDrawingView.javapublic class BoxDrawingView extends View { private static final String TAG = &quot;BoxDrawingView&quot;; private Box mCurrentBox; private List&lt;Box&gt; mBoxen = new ArrayList&lt;&gt;(); private Paint mBoxPaint; private Paint mBackgroundPaint; ... @Override public boolean onTouchEvent(MotionEvent event){ PointF current = new PointF(event.getX(), event.getY()); String action = &quot;&quot;; switch (event.getAction()){ case MotionEvent.ACTION_DOWN: ... mCurrentBox = new Box(current); // &#x65B0;&#x5EFA;Box mBoxen.add(mCurrentBox); break; case MotionEvent.ACTION_MOVE: ... if(mCurrentBox != null){ mCurrentBox.setCurrent(current); // &#x8BBE;&#x7F6E;Box invalidate(); // &#x8BBE;&#x7F6E;&#x65E0;&#x6548; } break; case MotionEvent.ACTION_UP: ... mCurrentBox = null; // &#x5B8C;&#x6210;Box&#x521B;&#x5EFA; break; case MotionEvent.ACTION_CANCEL: ... mCurrentBox = null; break; } ... return true; } @Override protected void onDraw(Canvas canvas){ canvas.drawPaint(mBackgroundPaint); for(Box box:mBoxen){ // &#x904D;&#x5386;&#x7ED8;&#x5236;Box float left = Math.min(box.getOrigin().x, box.getCurrent().x); float right = Math.max(box.getOrigin().x, box.getCurrent().x); float top = Math.min(box.getOrigin().y, box.getCurrent().y); float bottom = Math.max(box.getOrigin().y, box.getCurrent().y); canvas.drawRect(left, top, right, bottom, mBoxPaint); } }}]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三十]]></title>
    <url>%2F2017%2F11%2F10%2F2017%2F1110AndroidProgrammingBNRG30%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x7EE7;&#x7EED;PhotoGallery&#xFF0C;&#x70B9;&#x51FB;&#x56FE;&#x7247;&#x7F29;&#x7565;&#x56FE;&#x540E;&#x5C06;&#x6D4F;&#x89C8;&#x8BE5;&#x56FE;&#x7247;&#x6240;&#x5728;&#x7684;&#x7F51;&#x9875;&#xFF0C;&#x672C;&#x7AE0;&#x4F7F;&#x7528;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x6D4F;&#x89C8;&#xFF1A;1&#x3001;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x6D4F;&#x89C8;&#x5668;&#xFF1B;2&#x3001;&#x4F7F;&#x7528;WebView&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x4F7F;&#x7528;WebView - &#x4EE4;Activity&#x4E0D;&#x968F;&#x8F6C;&#x5C4F;&#x91CD;&#x5EFA; &#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x6D4F;&#x89C8;&#x5668;&#x6253;&#x5F00;&#x7F29;&#x7565;&#x56FE;&#x6240;&#x5728;&#x7F51;&#x9875; &#x8FD9;&#x6761;&#x8DEF;&#x5F84;&#x4E0A;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x65B0;&#x4E1C;&#x897F;&#xFF0C;&#x53EF;&#x4EE5;&#x590D;&#x4E60;&#x4E00;&#x4E0B;RecyclerView&#x70B9;&#x51FB;item&#x7684;&#x8DEF;&#x5F84;&#xFF1A; &#x2460; &#x8BA9;PhotoHolder&#x5B9E;&#x73B0;&#x63A5;&#x53E3;View.OnClickListener &#x2461; &#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x51FD;&#x6570;onClick(...) &#x2462; &#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x8BBE;&#x7F6E;&#x5C06;&#x70B9;&#x51FB;&#x76D1;&#x542C;&#x8BBE;&#x4E3A;&#x81EA;&#x5DF1; &#x2463; &#x63D0;&#x4F9B;&#x63A5;&#x53E3;&#x8BBE;&#x7F6E;galleryItem &#x2464; &#x5728;Adapter::onBindViewHolder(...)&#x5C06;galleryItem&#x8D4B;&#x7ED9;Holder 123456789101112131415161718192021222324252627282930313233343536// PhotoGalleryFragment.javapublic class PhotoGalleryFragment extends VisibleFragment { ... private class PhotoHolder extends RecyclerView.ViewHolder implements View.OnClickListener{ // &#x2460; ... private GalleryItem mGalleryItem; public PhotoHolder(View itemView){ ... itemView.setOnClickListener(this); // &#x2462; } // &#x2463; public void bindGalleryItem(GalleryItem galleryItem){ mGalleryItem = galleryItem; } @Override public void onClick(View v){ // &#x2461; Intent i = new Intent(Intent.ACTION_VIEW, mGalleryItem.getPhotoPageUri()); startActivity(i); } } private class PhotoAdapter extends RecyclerView.Adapter&lt;PhotoHolder&gt;{ ... @Override public void onBindViewHolder(PhotoHolder photoHolder, int position){ ... photoHolder.bindGalleryItem(galleryItem); // &#x2464; ... } ... }} &#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x6D4F;&#x89C8;&#x5668;&#x6253;&#x5F00;url&#x5C31;&#x5728;&#x7B2C;&#x2461;&#x6B65;&#xFF0C;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x91C7;&#x7528;ACTION_VIEW&#x5BF9;Url&#x6784;&#x9020;Intent&#x5373;&#x53EF;&#x3002; &#x4F7F;&#x7528;WebView&#x6253;&#x5F00;&#x7F51;&#x9875; 1.&#x6784;&#x9020;&#x5E03;&#x5C40;&#x6587;&#x4EF6; &#x5728;&#x5E03;&#x5C40;&#x6587;&#x4EF6;fragment_photo_page.xml&#x4E2D;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;widget&#x2014;&#x2014;&#x4E0A;&#x9762;&#x662F;&#x8FDB;&#x5EA6;&#x6761;&#xFF0C;&#x4E0B;&#x9762;&#x662F;WebView&#xFF1A; 1234567891011121314151617181920212223242526&lt;android.support.constraint.ConstraintLayout ...&gt; &lt;ProgressBar android:id=&quot;@+id/progress_bar&quot; style=&quot;?android:attr/progressBarStyleHorizontal&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_marginEnd=&quot;8dp&quot; android:layout_marginStart=&quot;8dp&quot; app:layout_constraintBottom_toTopOf=&quot;@+id/web_view&quot; app:layout_constraintEnd_toEndOf=&quot;parent&quot; app:layout_constraintStart_toStartOf=&quot;parent&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt; &lt;WebView android:id=&quot;@+id/web_view&quot; android:layout_width=&quot;368dp&quot; android:layout_height=&quot;495dp&quot; android:layout_marginBottom=&quot;8dp&quot; android:layout_marginEnd=&quot;8dp&quot; android:layout_marginStart=&quot;8dp&quot; android:layout_marginTop=&quot;8dp&quot; app:layout_constraintBottom_toBottomOf=&quot;parent&quot; app:layout_constraintEnd_toEndOf=&quot;parent&quot; app:layout_constraintStart_toStartOf=&quot;parent&quot; app:layout_constraintTop_toBottomOf=&quot;@+id/progress_bar&quot; /&gt;&lt;/android.support.constraint.ConstraintLayout&gt; 2.&#x6784;&#x9020;Fragment &#x8BE5;Fragment&#x6240;&#x5728;&#x7684;Activity&#x7EE7;&#x627F;&#x81EA;SingleFragmentActivity&#xFF0C;&#x5728;&#x8BE5;Activity&#x7684;SingleFragmentActivity::onCreate(...)&#x4E2D;&#x8C03;&#x7528;SingleFragmentActivity::createFragment()&#xFF0C;&#x540E;&#x8005;&#x518D;&#x8C03;&#x7528;Fragment::newInstance(...)&#x521B;&#x5EFA;Fragment&#x3002;&#x8FD9;&#x662F;&#x2460;&#x63D0;&#x4F9B;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x4ED6;&#x8981;&#x6C42;&#x521B;&#x5EFA;&#x8005;&#x5FC5;&#x987B;&#x4F20;&#x5165;url&#xFF0C;&#x5E76;&#x5728;&#x2461;&#x4E2D;&#x89E3;&#x6790;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// PhotoPageFragment.javapublic class PhotoPageFragment extends VisibleFragment { private static final String ARG_URI = &quot;photo_page_url&quot;; private Uri mUri; private WebView mWebView; private ProgressBar mProgressBar; // &#x2460;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#xFF0C;&#x585E;&#x5165;&#x5BF9;&#x5E94;&#x56FE;&#x7247;&#x6240;&#x5728;&#x7684;url public static PhotoPageFragment newInstance(Uri uri){ Bundle args = new Bundle(); args.putParcelable(ARG_URI, uri); PhotoPageFragment fragment = new PhotoPageFragment(); fragment.setArguments(args); return fragment; } // &#x2461;&#x89E3;&#x6790;url @Override public void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); mUri = getArguments().getParcelable(ARG_URI); } @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ View v = inflater.inflate(R.layout.fragment_photo_page, container, false); // &#x2462; &#x8BBE;&#x7F6E;&#x8FDB;&#x5EA6;&#x6761; mProgressBar = (ProgressBar)v.findViewById(R.id.progress_bar); mProgressBar.setMax(100); // &#x2463; &#x8BBE;&#x7F6E;WebView mWebView = (WebView)v.findViewById(R.id.web_view); mWebView.getSettings().setJavaScriptEnabled(true); // &#x2463;-1 mWebView.setWebChromeClient(new WebChromeClient(){ // &#x2463;-2 public void onProgressChanged(WebView webView, int newProgress){ if(newProgress == 100){ mProgressBar.setVisibility(View.GONE); }else{ mProgressBar.setVisibility(View.VISIBLE); mProgressBar.setProgress(newProgress); } } public void onReceivedTitle(WebView webView, String title){ AppCompatActivity activity = (AppCompatActivity)getActivity(); activity.getSupportActionBar().setSubtitle(title); } }); mWebView.setWebViewClient(new WebViewClient()); // &#x2463;-3 mWebView.loadUrl(mUri.toString());// &#x2464;&#x52A0;&#x8F7D;url return v; }} &#x5728;&#x2462;&#x4E2D;&#x63D0;&#x9886;&#x5230;&#x8FDB;&#x5EA6;&#x6761;&#x4EE5;&#x5907;&#x540E;&#x9762;&#x64CD;&#x7EB5;&#x3002; &#x2463;&#x9700;&#x8981;&#x5C55;&#x5F00;&#x770B;&#xFF1A; - &#x2463;-1&#x5B83;&#x6253;&#x5F00;&#x4E86;JavaScript&#x652F;&#x6301;&#xFF0C;&#x8FD9;&#x4E2A;&#x5F00;&#x5173;&#x9ED8;&#x8BA4;&#x662F;&#x5173;&#x95ED;&#x7684;&#x3002;&#x662F;&#x5426;&#x8981;&#x6253;&#x5F00;&#x89C6;&#x5373;&#x5C06;&#x6253;&#x5F00;&#x7684;&#x7F51;&#x9875;&#x5185;&#x5BB9;&#x800C;&#x5B9A;&#x3002; - &#x2463;-2&#x8BBE;&#x7F6E;WebChromeClient&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x6539;&#x53D8;&#x6D4F;&#x89C8;&#x5668;&#x5468;&#x8FB9;&#x754C;&#x9762;&#x72B6;&#x6001;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x6BD4;&#x5982;JavaScript&#x63D0;&#x9192;&#xFF0C;&#x56FE;&#x6807;&#xFF0C;loading&#x8FDB;&#x5EA6;&#xFF0C;&#x5F53;&#x524D;&#x7F51;&#x9875;&#x7684;&#x6807;&#x9898;&#x3002;&#x5728;&#x672C;&#x8282;&#x4E2D;&#x8986;&#x76D6;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x6765;&#x66F4;&#x65B0;loading&#x8FDB;&#x5EA6;&#x548C;&#x6807;&#x9898;&#x3002; - &#x2463;-3&#x8BBE;&#x7F6E;WebViewClient&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x6E32;&#x67D3;&#x4E8B;&#x4EF6;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x8BBE;&#x7F6E;WebViewClient&#xFF0C;&#x76F4;&#x63A5;&#x8DF3;&#x5230;&#x2464;&#x4E5F;&#x53EF;&#x4EE5;&#x6253;&#x5F00;&#x7F51;&#x9875;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x70B9;&#x51FB;&#x7F51;&#x9875;&#x4E2D;&#x7684;&#x94FE;&#x63A5;&#xFF0C;WebView&#x4F1A;&#x8BF7;&#x6C42;ActivityManager&#x67E5;&#x627E;&#x5339;&#x914D;&#x7684;Activity&#x6765;&#x6253;&#x5F00;&#x8BE5;&#x7F51;&#x9875;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1B;&#x5982;&#x679C;&#x5728;WebView&#x5185;&#x8BBE;&#x7F6E;&#x4E86;WebViewClient&#xFF0C;&#x8BE5;&#x8BF7;&#x6C42;&#x5C06;&#x53D1;&#x9001;&#x7ED9;WebViewClient&#xFF0C;&#x5B83;&#x4F1A;&#x7528;&#x81EA;&#x5DF1;&#x6253;&#x5F00;&#x8BE5;&#x7F51;&#x9875;&#x3002; - &#x2464;&#x6253;&#x5F00;&#x7F51;&#x9875; &#x4E0D;&#x968F;&#x8F6C;&#x5C4F;&#x800C;&#x91CD;&#x6784;&#x7684;Activity &#x901A;&#x8FC7;&#x4E3A;Activity&#x8BBE;&#x7F6E;android:configChanges&#x5C5E;&#x6027;&#xFF0C;&#x4EE4;Activity&#x4E0D;&#x968F;&#x8F6C;&#x5C4F;&#x6216;&#x5C4F;&#x5E55;&#x53D8;&#x5316;&#x7B49;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x53D8;&#x5316;&#x800C;&#x91CD;&#x5EFA;&#xFF1A; 1234... &lt;activity android:name=&quot;.PhotoPageActivity&quot; android:configChanges=&quot;keyboardHidden|orientation|screenSize&quot;/&gt;... keyboardHidden&#x662F;&#x4EC0;&#x4E48;&#x9B3C;&#xFF1F;&#x4E66;&#x4E2D;&#x8BF4;&#x662F;&#x952E;&#x76D8;&#x6253;&#x5F00;&#x6216;&#x6536;&#x8D77;&#xFF0C;&#x539F;&#x672C;&#x4E5F;&#x4E0D;&#x4F1A;&#x5BFC;&#x81F4;Activity&#x91CD;&#x5EFA;&#x5440;&#xFF1F; &#x542C;&#x8D77;&#x6765;&#x5F88;&#x7F8E;&#x597D;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x4E07;&#x4E0D;&#x5F97;&#x5DF2;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x539F;&#x56E0;&#x5982;&#x4E0B;&#xFF1A; - &#x6240;&#x6709;&#x57FA;&#x4E8E;&#x8BBE;&#x5907;&#x7684;&#x8D44;&#x6E90;&#x81EA;&#x52A8;&#x9002;&#x914D;&#x5C06;&#x65E0;&#x6548;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x81EA;&#x5DF1;&#x624B;&#x52A8;&#x5B8C;&#x6210;&#x9002;&#x914D;&#x548C;&#x52A0;&#x8F7D;&#x3002; - &#x5373;&#x4F7F;&#x5728;&#x4F4E;&#x5185;&#x5B58;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x6740;&#x6389;&#x8FDB;&#x7A0B;&#x4EE5;&#x56DE;&#x6536;&#x5185;&#x5B58;&#xFF0C;&#x5728;&#x6B64;&#x4E4B;&#x524D;Activity&#x4E5F;&#x5C06;&#x4E0D;&#x4F1A;&#x5728;&#x6536;&#x5230;Activity::onSavedInstanceState(...)`&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4F60;&#x6CA1;&#x673A;&#x4F1A;&#x5728;&#x9500;&#x6BC1;&#x524D;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x3002; &#x5EF6;&#x4F38;&#x5185;&#x5BB9; &#x6CE8;&#x5165;JavaScript&#x5BF9;&#x8C61; &#x901A;&#x8FC7;&#x7F51;&#x9875;&#x53EF;&#x4EE5;&#x8C03;&#x7528;Android&#x7AEF;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x300A;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xB7;WebView&#x300B;&#x4E2D;&#x6709;&#x4ECB;&#x7ECD;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十九]]></title>
    <url>%2F2017%2F11%2F09%2F2017%2F1109AndroidProgrammingBNRG29%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;&#x5404;&#x79CD;&#x5E7F;&#x64AD;&#xFF0C;&#x5F53;&#x540E;&#x53F0;&#x4E0B;&#x8F7D;&#x7F29;&#x7565;&#x56FE;&#x7684;&#x7EBF;&#x7A0B;&#x4E0B;&#x5230;&#x65B0;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F1A;&#x53D1;&#x9001;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;GalleryFragment&#x5728;&#x524D;&#x53F0;&#x65F6;&#x4F1A;&#x6CE8;&#x518C;&#x52A8;&#x6001;receiver&#xFF0C;&#x63A8;&#x5012;&#x540E;&#x53F0;&#x5219;&#x6CE8;&#x9500;&#xFF0C;&#x8BE5;&#x52A8;&#x6001;receiver&#x8BBE;&#x7F6E;&#x5E7F;&#x64AD;&#x7684;resultCode&#x4E3A;Activity.RESULT_CANCEL&#x3002;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x4F4E;&#x7EA7;&#x522B;&#x7684;standalone receiver&#xFF0C;&#x53D1;&#x73B0;resultCode&#x4E0D;&#x7B49;&#x4E8E;Activity.RESULT_OK&#x65F6;&#x76F4;&#x63A5;&#x9000;&#x51FA;&#x3002;&#x901A;&#x8FC7;&#x8FD9;&#x6837;&#x7684;&#x914D;&#x5408;&#xFF0C;&#x4F7F;&#x5F97;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4EC5;&#x5728;&#x540E;&#x53F0;&#x65F6;&#xFF0C;&#x5E7F;&#x64AD;&#x624D;&#x6709;&#x6548;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x521B;&#x5EFA;&#x3001;&#x6CE8;&#x518C;standalone receiver - &#x521B;&#x5EFA;&#x3001;&#x6CE8;&#x518C;dynamic reciever - &#x4F7F;&#x7528;receiver - &#x9650;&#x5B9A;broadcast&#x7684;&#x4F20;&#x64AD;&#x8303;&#x56F4; - &#x6709;&#x5E8F;&#x5E7F;&#x64AD; Broadcast Intents Broadcast intents&#x548C;&#x666E;&#x901A;&#x7684;intents&#x7C7B;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#x5B83;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x88AB;&#x591A;&#x4E2A;&#x7EC4;&#x4EF6;&#x63A5;&#x6536;&#x3002; &#x672C;&#x8282;&#x5F15;&#x5165;Boradcast&#x662F;&#x56E0;&#x4E3A;&#xFF1A;&#x5C3D;&#x7BA1;Alarm&#x53EF;&#x4EE5;&#x5728;&#x8FDB;&#x7A0B;&#x88AB;&#x6740;&#x6389;&#x4F9D;&#x7136;&#x5B58;&#x6D3B;&#xFF0C;&#x4F46;&#x5F53;&#x906D;&#x9047;&#x7CFB;&#x7EDF;&#x91CD;&#x542F;&#x5B83;&#x5C31;&#x53EA;&#x80FD;&#x4E2D;&#x65AD;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;Alarm&#x3002;&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x8BA9;app&#x63A5;&#x6536;&#x7CFB;&#x7EDF;&#x7684;BOOT_COMPLETED&#x5E7F;&#x64AD;&#x3002;&#x5F53;&#x7CFB;&#x7EDF;&#x542F;&#x52A8;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;BOOT_COMPLETED&#x5E7F;&#x64AD;&#x3002;app&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x6CE8;&#x518C;&#x5E76;&#x521B;&#x5EFA;standalone broadcast receiver&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;&#x5904;&#x7406;&#x903B;&#x8F91;&#x3002; standalone broadcast receiver&#x9700;&#x8981;&#x5728;manifest&#x58F0;&#x660E;&#xFF0C;&#x8FD9;&#x6837;&#x5373;&#x4F7F;app&#x6CA1;&#x6709;&#x88AB;&#x542F;&#x52A8;&#xFF0C;&#x4F9D;&#x7136;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x5B83;&#x58F0;&#x660E;&#x7684;broadcast&#x3002;&#x4E0E;&#x4E4B;&#x76F8;&#x5BF9;&#x7684;&#x662F;dynamic receiver&#xFF0C;&#x5B83;&#x4E0D;&#x9700;&#x8981;&#x5728;manifest&#x58F0;&#x660E;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#xFF0C;&#x4EC5;&#x5728;app&#x5904;&#x4E8E;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#x65F6;&#xFF0C;&#x5B83;&#x624D;&#x80FD;&#x6536;&#x5230;broadcast&#x3002; &#x521B;&#x5EFA;&#x6CE8;&#x518C;standalone receiver &#x521B;&#x5EFA;broadcast receiver&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x5176;onReceive(...)&#x65B9;&#x6CD5;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;intent&#x88AB;StartupReceiver(...)&#x8C03;&#x7528;&#xFF0C;&#x5176;&#x5BF9;&#x5E94;&#x7684;broadcast receiver&#x7684;onReceive(...)&#x65B9;&#x6CD5;&#x5C06;&#x88AB;&#x56DE;&#x8C03;&#x3002; 123456789// StartupReceiver.javapublic class StartupReceiver extends BroadcastReceiver { private static final String TAG = &quot;StartupReceiver&quot;; @Override public void onReceive(Context context, Intent intent){ Log.i(TAG, &quot;Received broadcast intent: &quot; + intent.getAction()); }} &#x548C;Service&#x548C;Activity&#x4E00;&#x6837;&#xFF0C;broadcast receiver&#x5FC5;&#x987B;&#x4E8B;&#x5148;&#x5411;&#x7CFB;&#x7EDF;&#x6CE8;&#x518C;&#xFF0C;&#x8FD9;&#x6837;&#x5F53;&#x5E7F;&#x64AD;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x624D;&#x77E5;&#x9053;&#x8C03;&#x7528;&#x5176;&#x56DE;&#x8C03;&#x63A5;&#x53E3;&#x3002;&#x5728;AndroidManifest.xml&#x4E2D;&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#xFF1A; 12345678910111213&lt;manifest ...&gt; ... &lt;uses-permission android:name=&quot;android.permission.RECEIVE_BOOT_COMPLETED&quot;/&gt; &lt;application ...&gt; ... &lt;receiver android:name=&quot;.StartupReceiver&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.BOOT_COMPLETED&quot;/&gt; &lt;/intent-filter&gt; &lt;/receiver&gt; &lt;/application&gt;&lt;/manifest&gt; &#x2460;&#x6DFB;&#x52A0;receiver&#x6807;&#x7B7E;&#xFF0C;&#x4EE5;&#x53CA;intent-filter&#x5C5E;&#x6027;&#xFF0C;&#x8FD9;&#x6837;StartupReceiver&#x5C31;&#x53EF;&#x4EE5;&#x76D1;&#x542C;BOOT_COMPLETED&#x4E8B;&#x4EF6;&#x3002;&#x2461;&#x8FD9;&#x9700;&#x8981;&#x76F8;&#x5E94;&#x7684;&#x6743;&#x9650;&#xFF0C;&#x56E0;&#x6B64;&#x6DFB;&#x52A0;uses-permission&#x6807;&#x7B7E;&#xFF0C;&#x58F0;&#x660E;RECEIVE_BOOT_COMPLETED&#x6743;&#x9650;&#x3002; OK&#x4E86;&#xFF0C;&#x5F53;&#x6536;&#x5230;filter&#x4E2D;&#x6307;&#x5B9A;&#x7684;broadcast&#xFF0C;&#x8BE5;receiver&#x5C06;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x5E76;&#x8C03;&#x7528;&#x5176;onReceive(...)&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;receiver&#x5C06;&#x88AB;&#x9500;&#x6BC1;&#x3002; &#x4F7F;&#x7528;Android Device Montiro&#x8DDF;&#x8E2A;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#xFF1A;Android Studio &gt; Tools &gt; Android &gt; Android Device Monitor&#xFF1A; &#x7A0D;&#x540E;&#x4F1A;&#x53D1;&#x73B0;&#x8BE5;app&#x4F1A;&#x9000;&#x51FA;&#x3002; &#x4F7F;&#x7528;receiver &#x5728;&#x4F7F;&#x7528;receiver&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A; - &#x4E0D;&#x8981;&#x5728;onReceive(...)&#x4E2D;&#x4F7F;&#x7528;&#x5F02;&#x6B65;API&#xFF0C;&#x4F8B;&#x5982;&#x6CE8;&#x518C;&#x4EFB;&#x4F55;listeners&#xFF0C;&#x56E0;&#x4E3A;&#x5728;onReceive(...)&#x6267;&#x884C;&#x5B8C;&#x6210;&#x540E;&#x4E0D;&#x4E45;&#xFF0C;&#x8BE5;receiver&#x5C06;&#x88AB;&#x9500;&#x6BC1;&#xFF0C;&#x751A;&#x81F3;&#x5B83;&#x6240;&#x5728;&#x7684;app&#x90FD;&#x4F1A;&#x9000;&#x51FA;&#x3002; - &#x4E0D;&#x8981;&#x5728;onReceive(...)&#x4E2D;&#x6267;&#x884C;&#x957F;&#x7A0B;&#x64CD;&#x4F5C;&#xFF08;&#x5982;&#x7F51;&#x7EDC;&#x64CD;&#x4F5C;&#x6216;&#x8005;&#x5927;&#x91CF;&#x7684;I/O&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x8BE5;&#x51FD;&#x6570;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x957F;&#x7A0B;&#x64CD;&#x4F5C;&#x4F1A;&#x5BFC;&#x81F4;&#x4E3B;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x800C;&#x5F15;&#x53D1;ANR&#x3002; &#x53EF;&#x4EE5;&#x5C06;receiver&#x5F53;&#x505A;&#x903B;&#x8F91;&#x6700;&#x521D;&#x7684;&#x8D77;&#x70B9;&#xFF0C;&#x5728;&#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x4E2A;Activity&#x6216;&#x8005;Service&#x7B49;&#x7B49;&#x3002; &#x672C;&#x8282;&#x5728;SharedPreference&#x4E2D;&#x8BB0;&#x5F55;&#x4E86;&#x662F;&#x5426;&#x5F00;&#x542F;alarm&#xFF0C;&#x5728;receiver&#x4E2D;&#x5224;&#x65AD;&#x8BE5;&#x8BB0;&#x5F55;&#xFF0C;&#x5982;&#x679C;&#x4E3A;true&#x5219;&#x542F;&#x52A8;alarm service&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657public class QueryPreferences { ... private static final String PREF_IS_ALARM_ON = &quot;isAlarmOn&quot;; ... public static boolean isAlarmOn(Context context){ return PreferenceManager.getDefaultSharedPreferences(context) .getBoolean(PREF_IS_ALARM_ON, false); } public static void setAlarmOn(Context context, boolean isOn){ // &#x2462; PreferenceManager.getDefaultSharedPreferences(context) .edit() .putBoolean(PREF_IS_ALARM_ON, isOn) .apply(); }}// PollService.javapublic class PollService extends IntentService { ... public static void setServiceAlarm(Context context, boolean isOn){ ... QueryPreferences.setAlarmOn(context, isOn);// &#x2461; } ...}// PhotoGalleryFragment.javapublic class PhotoGalleryFragment extends Fragment { ... @Override public boolean onOptionsItemSelected(MenuItem item){ switch(item.getItemId()){ ... case R.id.menu_item_toggle_polling: boolean shouldStartAlarm = !PollService.isServiceAlarmOn(getActivity()); PollService.setServiceAlarm(getActivity(), shouldStartAlarm);// &#x2460; getActivity().invalidateOptionsMenu(); return true; ... } } ...}// StartupReceiver.javapublic class StartupReceiver extends BroadcastReceiver { ... @Override public void onReceive(Context context, Intent intent){ ... boolean isOn = QueryPreferences.isAlarmOn(context); // &#x2463; PollService.setServiceAlarm(context, isOn); }} &#x2460;&#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;Start polling&#x83DC;&#x5355;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;ServiceAlarm&#x4E3A;&#x5F00;&#x542F;&#x72B6;&#x6001;&#x3002; &#x2461;&#x2462;&#x8BE5;&#x72B6;&#x6001;&#x88AB;&#x5199;&#x5165;SharedPreference&#x3002; &#x2463;&#x5F53;&#x7CFB;&#x7EDF;&#x542F;&#x52A8;&#x540E;&#xFF0C;StartupReceiver&#x6536;&#x5230;&#x542F;&#x52A8;&#x5E7F;&#x64AD;&#xFF0C;&#x8BFB;&#x53D6;SharedPreference&#xFF0C;&#x5982;&#x679C;ServiceAlarm&#x7684;&#x542F;&#x52A8;&#x6807;&#x8BB0;&#x4E3A;true&#xFF0C;&#x5219;&#x542F;&#x52A8;&#x8BE5;&#x670D;&#x52A1;&#x3002; &#x521B;&#x5EFA;dynamic receiver dynamic receiver&#x7684;&#x5173;&#x952E;&#x70B9;&#x5728;&#x4E8E;&#x6CE8;&#x518C;/&#x53CD;&#x6CE8;&#x518C;&#x4EE5;&#x53CA;&#x5B9E;&#x73B0;onReceive(...)&#xFF0C;&#x672C;&#x8282;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;VisibleFragment&#xFF0C;&#x5E76;&#x5728;&#x5176;onStart()&#x548C;onStop()&#x56DE;&#x8C03;&#x4E2D;&#x5206;&#x522B;&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#x548C;&#x53CD;&#x6CE8;&#x518C;&#xFF1A; 123456789101112131415161718192021222324public abstract class VisibleFragment extends Fragment { private static final String TAG = &quot;VisibleFragment&quot;; @Override public void onStart(){ super.onStart(); IntentFilter filter = new IntentFilter(PollService.ACTION_SHOW_NOTIFICATION); getActivity().registerReceiver(mOnShowNotification, filter); } @Override public void onStop(){ super.onStop(); getActivity().unregisterReceiver(mOnShowNotification); } private BroadcastReceiver mOnShowNotification = new BroadcastReceiver() { @Override public void onReceive(Context context, Intent intent) { Toast.makeText(getActivity(), &quot;Got a broadcast: &quot; + intent.getAction(), Toast.LENGTH_LONG).show(); } };} &#x5728;&#x6CE8;&#x518C;dynamic reciever&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x4F20;&#x5165;&#x4E00;&#x4E2A;BoradcastReceiver&#x548C;&#x4E00;&#x4E2A;IntentFilter&#x5B9E;&#x4F8B;&#x3002;&#x5B9A;&#x4E49;&#x5185;&#x90E8;&#x7C7B;&#x5E76;&#x5B9E;&#x4F8B;&#x5316;mOnShowNotification&#xFF0C;IntentFilter&#x5219;&#x4E0E;XML&#x6587;&#x4EF6;&#x4E2D;&#x7B49;&#x6548;&#xFF0C;&#x76F8;&#x5E94;&#x7684;&#x53EF;&#x4EE5;&#x8C03;&#x7528;addCategory(String)&#x3001;addAction(String)&#x6216;addDataPath(String)&#x6765;&#x914D;&#x7F6E;&#x3002; &#x4EE5;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x4E0D;&#x6D89;&#x53CA;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x5177;&#x4F53;&#x5230;&#x672C;&#x8282;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A; &#x6211;&#x548B;&#x89C9;&#x5F97;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x548C;&#x5B9E;&#x9645;&#x65B9;&#x6848;&#x662F;&#x53CD;&#x7684;&#xFF1F;&#x4ED6;&#x5E0C;&#x671B;&#x4EC5;&#x5728;&#x5E94;&#x7528;&#x6CA1;&#x6709;&#x6253;&#x5F00;&#x7684;&#x65F6;&#x5019;&#x5F97;&#x5230;notification&#xFF0C;&#x800C;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x6C42;&#x5E94;&#x7528;&#x5728;&#x6253;&#x5F00;&#x7684;&#x65F6;&#x5019;&#x624D;&#x80FD;&#x6536;&#x5230;notification&#xFF01; &#x5B83;&#x5728;PollService.java&#x4E2D;&#x5F53;&#x6536;&#x5230;&#x65B0;&#x56FE;&#x7247;&#x65F6;&#x5C06;&#x53D1;&#x9001;dynamic broadcast&#xFF1A; 12345678910111213141516171819// PollService.javapublic class PollService extends IntentService { ... public static final String ACTION_SHOW_NOTIFICATION = &quot;com.bnrg.photogallery.SHOW_NOTIFICATION&quot;; ... @Override protected void onHandleIntent(Intent intent){ ... if(resultId.equals(lastResultId)){ Log.i(TAG, &quot;Got an old result: &quot; + resultId); }else{ Log.i(TAG, &quot;Got a new result: &quot; + resultId); doNotifiy(); sendBroadcast(new Intent(ACTION_SHOW_NOTIFICATION)); } ... } ...} &#x518D;&#x8BA9;PhotoGalleryFragment&#x7EE7;&#x627F;&#x81EA;VisibleFragment&#x5373;&#x53EF;&#xFF1A; 1234// PhotoGalleryFragment.javapublic class PhotoGalleryFragment extends VisibleFragment { ...} &#x9650;&#x5B9A;broadcast&#x7684;&#x4F20;&#x64AD;&#x8303;&#x56F4; &#x672C;&#x8282;&#x5E0C;&#x671B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x51FA;&#x7684;&#x5E7F;&#x64AD;&#x4EC5;&#x80FD;&#x88AB;&#x81EA;&#x5DF1;&#x63A5;&#x6536;&#x5230;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;&#x4E24;&#x4E2A;&#x65B9;&#x6848;&#xFF1A; ### 1.&#x4E3A;receiver&#x6DFB;&#x52A0;exported&#x5C5E;&#x6027; &#x5728;AndroidManifest.xml&#x7684;receiver&#x6807;&#x7B7E;&#x4E2D;&#x6DFB;&#x52A0;android:exported=&quot;false&quot;&#x5C5E;&#x6027;&#xFF0C;&#x4EE5;&#x58F0;&#x660E;&#x8BE5;receiver&#x4EC5;&#x7528;&#x4E8E;&#x5185;&#x90E8;&#x5E94;&#x7528;&#x3002;&#x6211;&#x7684;&#x7591;&#x95EE;&#x662F;&#xFF1A;&#x96BE;&#x9053;&#x4E0D;&#x5E94;&#x8BE5;&#x5728;broadcast&#x6E90;&#x58F0;&#x660E;&#x4EC5;&#x5185;&#x90E8;receiver&#x624D;&#x80FD;&#x63A5;&#x6536;&#x4E48;&#xFF1F;&#x5728;&#x7AEF;&#x5904;&#x58F0;&#x660E;&#x6211;&#x4EC5;&#x80FD;&#x63A5;&#x6536;&#x5185;&#x90E8;broadcast&#x963B;&#x6321;&#x4E0D;&#x4F4F;&#x5E94;&#x7528;&#x5916;&#x7684;receiver&#x622A;&#x80E1;&#x5427;&#xFF1F; 2.&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;permission &#x5728;AndroidManifest.xml&#x4E2D;&#x52A0;&#x5165;permission&#x6807;&#x7B7E;&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x6743;&#x9650;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x4F7F;&#x7528;uses-permission&#x6765;&#x58F0;&#x660E;&#x4F7F;&#x7528;&#x8BE5;&#x6743;&#x9650;&#xFF0C;&#x548C;&#x58F0;&#x660E;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x9884;&#x5B9A;&#x4E49;&#x7684;&#x6743;&#x9650;&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x662F;&#x8BE5;&#x6743;&#x9650;&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#xFF1A; 123456789101112&lt;manifest ...&gt; &lt;permission android:name=&quot;com.bnrg.photogallery.PRIVATE&quot; android:protectionLevel=&quot;signature&quot;/&gt;&lt;!-- &#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x6743;&#x9650; --&gt; ... &lt;uses-permission android:name=&quot;android.permission.RECEIVE_BOOT_COMPLETED&quot;/&gt; &lt;!-- &#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x6743;&#x9650; --&gt; &lt;uses-permission android:name=&quot;com.bnrg.photogallery.PRIVATE&quot;/&gt; &lt;application ...&gt; ... &lt;/application&gt;&lt;/manifest&gt; &#x6700;&#x540E;&#x5728;&#x53D1;&#x9001;&#x5E7F;&#x64AD;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6307;&#x5B9A;&#x63A5;&#x6536;&#x8303;&#x56F4;&#xFF1A; 1234567891011121314// PollService.javapublic class PollService extends IntentService { ... public static final String ACTION_SHOW_NOTIFICATION = &quot;com.bnrg.photogallery.SHOW_NOTIFICATION&quot;; public static final String PERM_PRIVATE = &quot;com.bnrg.photogallery.PRIVATE&quot;; @Override protected void onHandleIntent(Intent intent){ ... sendBroadcast(new Intent(ACTION_SHOW_NOTIFICATION), PERM_PRIVATE); ... } ...} &#x8FD9;&#x6837;&#xFF0C;&#x53EA;&#x6709;&#x58F0;&#x660E;&#x4E86;&#x8BE5;&#x6743;&#x9650;&#x7684;&#x5E94;&#x7528;&#x624D;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x8BE5;&#x5E7F;&#x64AD;&#x3002;&#x5982;&#x679C;&#x522B;&#x7684;&#x5E94;&#x7528;&#x77E5;&#x9053;&#x4E86;&#x6211;&#x7684;&#x79C1;&#x6709;&#x6743;&#x9650;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x4E5F;&#x80FD;&#x76D7;&#x7528;&#x76D1;&#x542C;&#x5230;&#x6211;&#x7684;&#x79C1;&#x6709;&#x5E7F;&#x64AD;&#x5462;&#xFF1F;&#x80FD;&#x5C4F;&#x853D;&#x5417;&#xFF1F; &#x6700;&#x6700;&#x540E;&#xFF0C;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x6211;&#x7684;receiver&#x8FD8;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x5176;&#x5B83;&#x5E94;&#x7528;&#x53D1;&#x9001;&#x540C;&#x6837;&#x7684;&#x5E7F;&#x64AD;&#xFF0C;&#x5F15;&#x8BF1;&#x6211;&#x6267;&#x884C;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6CE8;&#x518C;receiver&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x7F00;&#x4E0A;&#x79C1;&#x6709;&#x6743;&#x9650;&#xFF1A; 123456789public abstract class VisibleFragment extends Fragment { ... @Override public void onStart(){ ... IntentFilter filter = new IntentFilter(PollService.ACTION_SHOW_NOTIFICATION); getActivity().registerReceiver(mOnShowNotification, filter, PollService.PERM_PRIVATE, null); } &#x8FD8;&#x662F;&#x6CA1;&#x6709;&#x592A;&#x7406;&#x89E3;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x79C1;&#x6709;&#x6743;&#x9650;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6211;&#x7406;&#x89E3;&#x548C;&#x5E7F;&#x64AD;&#x7684;&#x540D;&#x79F0;&#x5E76;&#x6CA1;&#x6709;&#x672C;&#x8D28;&#x533A;&#x522B;&#x5427;&#xFF1F;&#x5982;&#x679C;&#x88AB;&#x6CC4;&#x9732;&#x4E86;&#xFF0C;&#x4E0D;&#x4E00;&#x6837;&#x4F1A;&#x88AB;&#x5F15;&#x8BF1;&#x6267;&#x884C;&#x5417;&#xFF1F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#x7531;protection levels&#x89E3;&#x51B3;&#x7684;&#x3002; 3.protection levels &#x5728;&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x6743;&#x9650;&#x65F6;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x6BB5;android:protectionLevel=&quot;signature&quot;&#x5C5E;&#x6027;&#xFF0C;signature&#x8868;&#x793A;&#x5982;&#x679C;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x8BE5;&#x6743;&#x9650;&#xFF0C;&#x4ED6;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x548C;&#x672C;&#x5E94;&#x7528;&#x4E00;&#x6837;&#x7684;&#x7B7E;&#x540D;&#x3002;&#x5176;&#x5B83;&#x7684;&#x5F00;&#x53D1;&#x8005;&#x4E0D;&#x53EF;&#x80FD;&#x62FF;&#x5230;&#x4F60;&#x7684;&#x7B7E;&#x540D;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;signature&#x662F;&#x9650;&#x5B9A;&#x5E94;&#x7528;&#x5185;&#x6743;&#x9650;&#x7684;&#x6709;&#x6548;&#x65B9;&#x5F0F;&#x3002;&#x53D1;&#x51FA;broadcast&#x65F6;&#xFF0C;&#x6CA1;&#x6709;&#x76F8;&#x540C;&#x7B7E;&#x540D;&#x7684;&#x5176;&#x5B83;&#x5E94;&#x7528;&#x7684;receiver&#x6536;&#x4E0D;&#x5230;&#xFF1B;&#x63A5;&#x6536;broadcast&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x9001;&#x8005;&#x6CA1;&#x6709;&#x548C;&#x6211;&#x76F8;&#x540C;&#x7684;&#x7B7E;&#x540D;&#xFF0C;&#x4E5F;&#x65E0;&#x6CD5;&#x6B3A;&#x9A97;&#x8BA9;&#x6211;&#x63A5;&#x6536;&#x3002; protection levels&#x7684;&#x6240;&#x6709;&#x53D6;&#x503C;&#x548C;&#x542B;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; table th:nth-of-type(1){ width: 80px; } table th:nth-of-type(2){ width: 200px; } &#x53D6;&#x503C; &#x542B;&#x4E49; normal &#x9ED8;&#x8BA4;&#x503C;&#x3002;&#x4EFB;&#x4F55;&#x5E94;&#x7528;&#x90FD;&#x53EF;&#x4EE5;&#x7533;&#x8BF7;&#xFF0C;&#x5B89;&#x88C5;&#x5E94;&#x7528;&#x65F6;&#xFF0C;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x63D0;&#x793A;&#x7528;&#x6237;&#xFF0C;&#x70B9;&#x51FB;&#x5168;&#x90E8;&#x624D;&#x4F1A;&#x5C55;&#x793A;&#x3002; dangerous &#x4EFB;&#x4F55;&#x5E94;&#x7528;&#x90FD;&#x53EF;&#x4EE5;&#x7533;&#x8BF7;&#xFF0C;&#x5728;&#x5B89;&#x88C5;&#x5E94;&#x7528;&#x65F6;&#xFF0C;&#x4F1A;&#x76F4;&#x63A5;&#x63D0;&#x793A;&#x7ED9;&#x7528;&#x6237;&#x3002; signature &#x53EA;&#x6709;&#x548C;&#x8BE5;apk&#x7528;&#x76F8;&#x540C;&#x7684;&#x79C1;&#x94A5;&#x7B7E;&#x540D;&#x7684;&#x5E94;&#x7528;&#x624D;&#x53EF;&#x4EE5;&#x7533;&#x8BF7;&#x8BE5;&#x6743;&#x9650;&#x3002; signatureOrSystem &#x6709;&#x4E24;&#x79CD;&#x5E94;&#x7528;&#x53EF;&#x4EE5;&#x7533;&#x8BF7;&#x8BE5;&#x6743;&#x9650;&#xFF1A;&#x2460;&#x548C;&#x8BE5;apk&#x7528;&#x76F8;&#x540C;&#x7684;&#x79C1;&#x94A5;&#x7B7E;&#x540D;&#x7684;&#x5E94;&#x7528;&#xFF1B;&#x2461;&#x5728;/system/app&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x5E94;&#x7528; &#x6709;&#x5E8F;&#x5E7F;&#x64AD; &#x672C;&#x8282;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;&#x8BA9;&#x524D;&#x9762;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;receiver&#x80FD;&#x4F18;&#x5148;&#x63A5;&#x6536;&#x5230;PollService.ACTION_SHOW_NOTIFICATION&#x5E7F;&#x64AD;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x518D;&#x8BA9;&#x5E7F;&#x64AD;&#x7EE7;&#x7EED;&#x4F20;&#x64AD;&#x3002;&#x4E4B;&#x524D;&#x4ECB;&#x7ECD;&#x7684;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x6A21;&#x578B;&#x662F;&#x5355;&#x5411;&#x65E0;&#x5E8F;&#x7684;&#xFF1A; &#x672C;&#x8282;&#x5F15;&#x5165;&#x4E86;&#x6709;&#x5E8F;&#x5E7F;&#x64AD; &#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x50CF;&#x662F;&#x6563;&#x5F39;&#x67AA;&#xFF0C;&#x6253;&#x51FA;&#x53BB;&#x591A;&#x5C11;&#x4EBA;&#x4E2D;&#x67AA;&#xFF0C;&#x8C01;&#x5148;&#x8C01;&#x540E;&#x662F;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#xFF1B;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x5219;&#x50CF;&#x662F;&#x51FB;&#x9F13;&#x4F20;&#x82B1;&#xFF0C;&#x5927;&#x5BB6;&#x6392;&#x6392;&#x5750;&#xFF0C;&#x786E;&#x4FDD;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x7684;&#x63A5;&#x6536;&#x8005;&#x8FD8;&#x53EF;&#x4EE5;&#x518D;&#x88AB;&#x4F20;&#x9012;&#x7684;&#x82B1;&#x4E2D;&#x9644;&#x4E0A;&#x81EA;&#x5DF1;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x672C;&#x8282;&#x6B63;&#x662F;&#x5229;&#x7528;&#x8FD9;&#x4E00;&#x7279;&#x6027;&#x5B9E;&#x73B0;&#x4E86;&#xFF1A;&#x5F53;app&#x5728;&#x524D;&#x53F0;&#x65F6;&#x4E0D;&#x5904;&#x7406;&#x5E7F;&#x64AD;&#xFF0C;&#x4EC5;&#x5728;app&#x5904;&#x4E8E;&#x540E;&#x53F0;&#x65F6;&#x624D;&#x5904;&#x7406;&#x5E7F;&#x64AD;&#xFF0C;&#x5F39;&#x51FA;&#x901A;&#x77E5;&#x3002; &#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x503C; &#x5728;&#x63A5;&#x6536;&#x7AEF;&#x548C;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;setResultCode(int code)&#x6765;&#x8BBE;&#x7F6E;&#x81EA;&#x5DF1;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x3002; &#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;setResultData(String)&#x3001;setResultExtras(Bundle)&#x6216;setResult(int, String, Bundle)&#x8FD4;&#x56DE;&#x66F4;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E00;&#x65E6;&#x8BBE;&#x7F6E;&#x4E86;&#x8FD9;&#x4E9B;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x540E;&#x7EED;&#x6240;&#x6709;&#x7684;receiver&#x90FD;&#x80FD;&#x6536;&#x5230;&#x3002;&#x7ED3;&#x5408;&#x6709;&#x5E8F;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x4EE4;&#x9AD8;&#x7EA7;&#x522B;&#x7684;receiver&#x5728;&#x7B26;&#x5408;&#x4E00;&#x5B9A;&#x6761;&#x4EF6;&#x65F6;&#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x4F4E;&#x7EA7;&#x522B;&#x7684;receiver&#x5728;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x540E;&#x6839;&#x636E;&#x8FD4;&#x56DE;&#x503C;&#x51B3;&#x5B9A;&#x8981;&#x4E0D;&#x8981;&#x7EE7;&#x7EED;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x5B9E;&#x73B0;&#x5E7F;&#x64AD;&#x7684;&#x8FC7;&#x6EE4;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x901A;&#x8FC7;&#x9AD8;&#x7EA7;&#x522B;&#x7684;receiver&#x7EC8;&#x6B62;&#x4E86;&#x5E7F;&#x64AD;&#x7684;&#x7EE7;&#x7EED;&#x5904;&#x7406;&#x3002; &#x53D1;&#x9001;&#x6709;&#x5E8F;&#x5E7F;&#x64AD; &#x8C03;&#x7528;sendOrderedBroadcast(...)&#x53D1;&#x9001;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x8BF4;&#x660E;&#x5982;&#x4E0B;&#xFF1A; 1234567void sendOrderedBroadcast (Intent intent, // &#x5F85;&#x5E7F;&#x64AD;&#x7684;Intent String receiverPermission, // receiver&#x5FC5;&#x987B;&#x5177;&#x5907;&#x7684;&#x6743;&#x9650; BroadcastReceiver resultReceiver, // &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x63A5;&#x6536;&#x5E7F;&#x64AD;&#x7684;receiver Handler scheduler, // &#x81EA;&#x5B9A;&#x4E49;&#x7684;handler&#xFF0C;&#x7528;&#x6765;&#x6267;&#x884C;resultReceiver&#x7684;&#x56DE;&#x8C03;&#xFF0C;&#x5982;&#x679C;&#x4E3A;null&#x5219;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C; int initialCode, // resultCode&#x7684;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x901A;&#x5E38;&#x4E3A;null&#xFF0C;&#x901A;&#x5E38;&#x4E3A;Activity.RESULT_OK String initialData, // resultData&#x7684;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x901A;&#x5E38;&#x4E3A;null Bundle initialExtras)// resultExtras&#x7684;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x901A;&#x5E38;&#x4E3A;null &#x548C;&#x201C;&#x51FB;&#x9F13;&#x4F20;&#x82B1;&#x201D;&#x7C7B;&#x4F3C;&#xFF0C;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x7684;&#x6709;&#x5E8F;&#x6027;&#x662F;&#x901A;&#x8FC7;&#x63A5;&#x6536;&#x8005;&#x7684;&#x5EA7;&#x6B21;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;receiver&#x6709;&#x4E00;&#x4E2A;android:priority&#x5C5E;&#x6027;&#xFF0C;&#x4ECB;&#x4E8E;(SYSTEM_LOW_PRIORITY, SYSTEM_HIGH_PRIORITY)&#x4E4B;&#x95F4;&#xFF08;&#x5373;-1000 ~ 1000&#xFF0C;&#x8BE6;&#x60C5;&#x53C2;&#x89C1;intent-filter&#xFF09;&#x3002;&#x672C;&#x8282;&#x5F15;&#x5165;&#x4E86;&#x4E24;&#x4E2A;receiver&#xFF0C;&#x4E00;&#x4E2A;&#x662F;standalone&#xFF0C;&#x5728;AndroidManifest.xml&#x4E2D;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 123456&lt;receiver android:name=&quot;.NotificationReceiver&quot; android:exported=&quot;false&quot;&gt; &lt;intent-filter android:priority=&quot;-999&quot;&gt; &lt;action android:name=&quot;com.bnrg.photogallery.SHOW_NOTIFICATION&quot;/&gt; &lt;/intent-filter&gt;&lt;/receiver&gt; &#x53E6;&#x4E00;&#x4E2A;&#x662F;dynamic receiver&#xFF0C;&#x6CA1;&#x6709;&#x663E;&#x5F0F;&#x5B9A;&#x4E49;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;0&#x3002;&#x56E0;&#x6B64;&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x8BE5;dynamic receiver&#x5148;&#x6536;&#x5230;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;&#x4E4B;&#x540E;&#x624D;&#x662F;NotificationReceiver&#x3002; &#x603B;&#x7ED3; &#x672C;&#x8282;&#x7684;&#x903B;&#x8F91;&#x6709;&#x70B9;&#x6DF1;&#xFF0C;&#x8BFB;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x76EE;&#x7684;&#x662F;&#x5B66;&#x4E60;Android&#x7CFB;&#x7EDF;&#x673A;&#x5236;&#xFF0C;&#x4F46;&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x673A;&#x5236;&#x7ED3;&#x5408;&#x903B;&#x8F91;&#x8BBE;&#x8BA1;&#x5171;&#x540C;&#x5B8C;&#x6210;&#x4E86;&#x7279;&#x5B9A;&#x6548;&#x679C;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x8FD8;&#x662F;&#x6709;&#x5FC5;&#x8981;&#x628A;&#x903B;&#x8F91;&#x68B3;&#x7406;&#x4E00;&#x4E0B;&#x3002; &#x672C;&#x8282;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x4E66;&#x4E0A;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;&#x4E3A;&#x4E86;&#x9002;&#x914D;AndroidO&#xFF0C;&#x6211;&#x628A;&#x5F39;&#x51FA;&#x901A;&#x77E5;&#x7684;&#x4E00;&#x5768;&#x4EE3;&#x7801;&#x5C01;&#x88C5;&#x6210;doNotify(...)&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x53BB;PhotoGallery&#x4E0B;&#x8F7D;&#x3002; &#x5E7F;&#x64AD;&#x53D1;&#x51FA;&#x540E;&#xFF0C;&#x5982;&#x679C;PhotoGalleryFragment&#x5904;&#x4E8E;&#x524D;&#x53F0;&#xFF0C;&#x5FC5;&#x5B9A;&#x8C03;&#x7528;&#x8FC7;onStart()&#x51FD;&#x6570;&#xFF0C;&#x6CE8;&#x518C;&#x4E86;&#x52A8;&#x6001;receiver&#xFF0C;&#x5B83;&#x4F1A;&#x5148;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#xFF0C;&#x5E76;&#x4E14;&#x8BBE;&#x7F6E;resultCode&#x4E3A;RESULT_CANCELED&#xFF0C;&#x8F6E;&#x5230;NotificationReceiver&#x63A5;&#x6536;&#x5E7F;&#x64AD;&#x65F6;&#x5C31;&#x4E0D;&#x518D;&#x5904;&#x7406;&#x4E86;&#x3002;&#x6B64;&#x65F6;&#x5E7F;&#x64AD;&#x7684;&#x6D41;&#x5411;&#x8DEF;&#x5F84;&#x662F;A-B&#x3002; &#x5982;&#x679C;PhotoGalleryFragment&#x5904;&#x4E8E;&#x540E;&#x53F0;&#xFF0C;&#x5FC5;&#x5B9A;&#x8C03;&#x7528;&#x8FC7;onStop()&#x51FD;&#x6570;&#xFF0C;&#x6CE8;&#x9500;&#x4E86;&#x52A8;&#x6001;receiver&#xFF0C;&#x5E7F;&#x64AD;&#x6D41;&#x5411;&#x76F4;&#x63A5;&#x8D70;C&#xFF0C;NotificationReceiver&#x6536;&#x5230;&#x5E7F;&#x64AD;fA&#x7EBF;resultCode&#x4E3A;RESULT_OK&#xFF0C;&#x5219;&#x53D1;&#x51FA;&#x901A;&#x77E5;&#x3002; &#x4F46;&#x662F;&#x6211;&#x53D1;&#x73B0;&#x5982;&#x679C;PhotoGalleryFragment&#x5904;&#x4E8E;&#x540E;&#x53F0;&#xFF0C;&#x5F53;&#x53D1;&#x51FA;&#x7B2C;&#x4E00;&#x6B21;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x540E;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x7EE7;&#x7EED;&#x53D1;&#x9001;&#x4E86;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x6765;&#x8BF4;&#x53EA;&#x8981;&#x5B9A;&#x65F6;&#x5668;&#x6EE1;&#x8DB3;&#x5E94;&#x8BE5;&#x4E0D;&#x65AD;&#x53D1;&#x9001;&#x624D;&#x5BF9;&#xFF0C;&#x6211;&#x8FD8;&#x6CA1;&#x641E;&#x660E;&#x767D;&#x4E3A;&#x4EC0;&#x4E48;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4EE5;&#x540E;&#x5F85;&#x67E5;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十八]]></title>
    <url>%2F2017%2F11%2F08%2F2017%2F1108AndroidProgrammingBNRG28%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;Service&#xFF0C;&#x7528;&#x6765;&#x4E0B;&#x8F7D;&#x7F29;&#x7565;&#x56FE;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5219;&#x5F39;&#x51FA;&#x901A;&#x77E5;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Service - &#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x662F;&#x5426;&#x53EF;&#x7528; - AlarmManager - PendingIntent - Notifications Service Service&#x7528;&#x4E8E;&#x65E0;&#x9700;&#x754C;&#x9762;&#x5C55;&#x73B0;&#x3001;&#x4EA4;&#x4E92;&#xFF0C;&#x53EA;&#x9700;&#x5728;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x4F7F;&#x7528;&#x7EBF;&#x7A0B;&#xFF1F; &#x521B;&#x5EFA;IntentService 1.&#x5B9A;&#x4E49;IntentService&#x7C7B; 123456789101112131415// PollService.javapublic class PollService extends IntentService { // &#x2460; private static final String TAG = &quot;PollService&quot;; public static Intent newIntent(Context context){ return new Intent(context, PollService.class); } public PollService(){ super(TAG); } @Override protected void onHandleIntent(Intent intent){ // &#x2461; Log.i(TAG, &quot;Received an intent: &quot; + intent); }} &#x2460; &#x5B9A;&#x4E49;&#x6D3E;&#x751F;&#x81EA;IntentService&#x7684;&#x7C7B;&#x3002; &#x2461; &#x5B9E;&#x73B0;onHandleIntent(...)&#x65B9;&#x6CD5;&#x3002; Service&#x7684;Intent&#x88AB;&#x79F0;&#x4E3A;&#x547D;&#x4EE4;&#xFF0C;&#x547D;&#x4EE4;&#x88AB;&#x53D1;&#x9001;&#x7ED9;Service&#x901A;&#x77E5;&#x5B83;&#x5B8C;&#x6210;&#x7EA6;&#x5B9A;&#x7684;&#x4EFB;&#x52A1;&#x3002; &#x5F53;&#x6536;&#x5230;&#x7B2C;&#x4E00;&#x6761;&#x547D;&#x4EE4;&#xFF0C;IntentService&#x88AB;&#x542F;&#x52A8;&#xFF0C;&#x5E76;&#x542F;&#x52A8;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;&#x5C06;&#x547D;&#x4EE4;&#x6392;&#x961F;&#x3002;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;IntentService&#x8C03;&#x7528;onHandleIntent(...)&#x65B9;&#x6CD5;&#x4F9D;&#x6B21;&#x5904;&#x7406;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#x3002;&#x65B0;&#x7684;&#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x5165;&#x961F;&#xFF0C;&#x5F53;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#x88AB;&#x5904;&#x7406;&#x5B8C;&#xFF0C;Service&#x5C06;&#x7EC8;&#x6B62;&#x548C;&#x9500;&#x6BC1;&#x3002;&#x4E0B;&#x56FE;&#x5C55;&#x73B0;&#x4E86;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#xFF1A; 2.&#x5728;AndroidManifest.xml&#x58F0;&#x660E; &#x548C;Activity&#x7C7B;&#x4F3C;&#xFF0C;Service&#x9700;&#x8981;&#x54CD;&#x5E94;&#x6765;&#x81EA;&#x5185;&#x90E8;&#x6216;&#x5916;&#x90E8;&#x7684;intents&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x5728;AndroidManifest.xml&#x4E2D;&#x58F0;&#x660E;&#xFF1A; 1234567&lt;manifest ...&gt; ... &lt;application ...&gt; ... &lt;service android:name=&quot;.PollService&quot;/&gt; &lt;/application&gt;&lt;/manifest&gt; 3.&#x8C03;&#x7528; 12Intent i = PollService.newIntent(getActivity());getActivity().startService(i); &#x4E0D;&#x662F;&#x8BF4;&#x597D;&#x6536;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x547D;&#x4EE4;&#x540E;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x6863;&#x8C03;&#x8D77;&#x5417;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x6B64;&#x5904;&#x53D8;&#x624B;&#x52A8;&#x6321;&#x5462;&#xFF1F;&#x81EA;&#x52A8;&#x6321;&#x5728;&#x4E0B;&#x9762;&#x5F15;&#x5165;&#x5B9A;&#x65F6;Alarm&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7528;&#x4E0A;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x5B9A;&#x65F6;&#x5411;PollService&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#xFF1A; 123456789101112// &#x6BCF;10&#x79D2;&#x949F;&#x53D1;&#x4E00;&#x6B21;private static final long POLL_INTERVAL_MS = TimeUnit.SECONDS.toMillis(10);...Intent i = new Intent(context, PollService.class);PendingIntent pi = PendingIntent.getService(context, 0, i, 0);AlarmManager alarmManager = (AlarmManager)context.getSystemService(Context.ALARM_SERVICE);alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME, SystemClock.elapsedRealtime(),POLL_INTERVAL_MS, pi);... Service&#x662F;&#x4EC0;&#x4E48; &#x548C;Activity&#x4E00;&#x6837;&#xFF0C;Service&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x7C7B;&#x7EC4;&#x4EF6;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x4E9B;&#x56DE;&#x8C03;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;&#x7684;&#x3002;&#x5927;&#x90E8;&#x5206;&#x7684;Service&#x90FD;&#x9700;&#x8981;&#x914D;&#x5907;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x8F85;&#x4EE5;&#x5DE5;&#x4F5C;&#xFF0C;IntentService&#x63D0;&#x4F9B;&#x4E86;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x5E76;&#x7BA1;&#x7406;&#x5B83;&#xFF0C;&#x6240;&#x4EE5;&#x901A;&#x5E38;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;IntentService&#x3002; Service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F; onCreate(...) &#x5728;Service&#x88AB;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#x3002; onStartCommand(Intent, int, int) &#x6BCF;&#x6B21;&#x901A;&#x8FC7;startService(Intent)&#x542F;&#x52A8;service&#x7684;&#x65F6;&#x5019;&#x90FD;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x6574;&#x578B;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x5FD7;&#x4F4D;&#xFF0C;&#x8868;&#x660E;&#x8BE5;Intent&#x662F;&#x88AB;&#x91CD;&#x590D;&#x53D1;&#x9001;&#x8FD8;&#x662F;&#x9996;&#x6B21;&#x53D1;&#x9001;&#xFF1B;&#x7B2C;&#x4E8C;&#x4E2A;&#x6574;&#x578B;&#x53C2;&#x6570;&#x7684;&#x503C;&#x6BCF;&#x6B21;&#x90FD;&#x4E0D;&#x540C;&#xFF0C;&#x7528;&#x6765;&#x533A;&#x5206;&#x6BCF;&#x6B21;&#x8C03;&#x7528;&#x7684;startID&#x3002; onDestroy() Service&#x5728;&#x9500;&#x6BC1;&#x524D;&#x88AB;&#x8C03;&#x7528;&#x3002;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;Service&#xFF0C;onDestroy()&#x7684;&#x8C03;&#x7528;&#x65F6;&#x673A;&#x4F1A;&#x6709;&#x4E0D;&#x540C;&#x3002;onStartCommand(Intent, int, int)&#x7528;&#x8FD4;&#x56DE;&#x503C;&#x6765;&#x8868;&#x660E;Service&#x7684;&#x7C7B;&#x578B;&#x3002; Service&#x7684;&#x7C7B;&#x578B; &#x6309;&#x7167;&#x662F;&#x5426;Sticky&#x5206;&#x4E3A;&#x4E24;&#x7C7B;&#xFF1A; - Non-sticky Service &#x8BE5;&#x7C7B;&#x578B;&#x7684;Service&#x4E3B;&#x52A8;&#x58F0;&#x660E;&#x81EA;&#x5DF1;&#x505C;&#x6B62;&#xFF0C;onStartCommand(Intent, int, int)&#x8FD4;&#x56DE;START_NOT_STICKY&#x6216;START_REDELIVER_INTENT&#x65F6;&#xFF0C;&#x5C5E;&#x4E8E;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x3002;Service&#x901A;&#x8FC7;&#x8C03;&#x7528;stopSelf()&#x6216;stopSelf(int)&#x6765;&#x7EC8;&#x6B62;&#x81EA;&#x5DF1;&#xFF0C;&#x524D;&#x8005;&#x662F;&#x65E0;&#x6761;&#x4EF6;&#x7EC8;&#x6B62;&#xFF0C;&#x4E0D;&#x7BA1;onStartCommand(...)&#x88AB;&#x8C03;&#x7528;&#x8FC7;&#x591A;&#x5C11;&#x6B21;&#xFF1B;&#x540E;&#x8005;&#x5219;&#x6839;&#x636E;onStartCommand(...)&#x7684;&#x53C2;&#x6570;startID&#xFF0C;&#x505C;&#x6B62;&#x4E0E;&#x5B83;&#x6700;&#x63A5;&#x8FD1;&#x7684;&#x90A3;&#x4E2A;&#x3002; - Sticky Service &#x8BE5;&#x7C7B;&#x578B;&#x7684;Service&#x9700;&#x8981;&#x7B49;&#x522B;&#x4EBA;&#x8C03;&#x7528;Context.stopService(Intent)&#x624D;&#x4F1A;&#x505C;&#x6B62;&#x3002;onStartCommand(Intent, int, int)&#x8FD4;&#x56DE;START_STICKY&#x65F6;&#xFF0C;&#x5C5E;&#x4E8E;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x3002; &#x66F4;&#x7EC6;&#x7684;&#xFF0C;&#x6309;&#x7167;onStartCommand(...)&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x5206;&#x4E3A;&#x4E09;&#x7C7B;&#xFF1A; - START_NOT_STICKY &#x5F53;Service&#x8FD0;&#x884C;&#x7684;&#x8FDB;&#x7A0B;&#x88AB;Android&#x7CFB;&#x7EDF;&#x5F3A;&#x5236;&#x6740;&#x6389;&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x4F1A;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x8BE5;Service&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x91CD;&#x65B0;&#x5B9E;&#x4F8B;&#x5316;&#x8BE5;Service&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x91CD;&#x65B0;&#x8C03;&#x7528;startService(...)&#x6765;&#x542F;&#x52A8;&#x3002;&#x5982;&#x679C;Service&#x5728;&#x6267;&#x884C;&#x5DE5;&#x4F5C;&#x4E2D;&#x88AB;&#x4E2D;&#x65AD;&#x51E0;&#x6B21;&#x65E0;&#x5173;&#x7D27;&#x8981;&#x6216;&#x8005;&#x5BF9;&#x201C;Android&#x5185;&#x5B58;&#x7D27;&#x5F20;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x9700;&#x8981;&#x88AB;&#x6740;&#x6389;&#x4E14;&#x4E0D;&#x7ACB;&#x5373;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x201D;&#x4E5F;&#x53EF;&#x63A5;&#x53D7;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x8BE5;&#x503C;&#xFF0C;&#x5982;&#x5B9A;&#x65F6;&#x4ECE;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x6570;&#x636E;&#x3002; - START_REDELIVER_INTENT &#x5F53;Service&#x8FD0;&#x884C;&#x7684;&#x8FDB;&#x7A0B;&#x88AB;Android&#x7CFB;&#x7EDF;&#x5F3A;&#x5236;&#x6740;&#x6389;&#x4E4B;&#x540E;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x4F1A;&#x5C06;&#x518D;&#x6B21;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x8BE5;Service&#xFF0C;&#x5E76;&#x6267;&#x884C;onStartCommand(...)&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x5C06;Service&#x5728;&#x88AB;&#x6740;&#x6389;&#x4E4B;&#x524D;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x4F20;&#x5165;onStartCommand&#x65B9;&#x6CD5;&#x4E2D;&#x7684;Intent&#x518D;&#x6B21;&#x4FDD;&#x7559;&#x4E0B;&#x6765;&#x5E76;&#x518D;&#x6B21;&#x4F20;&#x5165;&#x5230;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x7684;Service&#x7684;onStartCommand(...)&#x65B9;&#x6CD5;&#x4E2D;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x7684;Service&#x9700;&#x8981;&#x4F9D;&#x8D56;&#x5177;&#x4F53;&#x7684;Intent&#x624D;&#x80FD;&#x8FD0;&#x884C;&#xFF08;&#x9700;&#x8981;&#x4ECE;Intent&#x4E2D;&#x8BFB;&#x53D6;&#x76F8;&#x5173;&#x6570;&#x636E;&#x4FE1;&#x606F;&#x7B49;&#xFF09;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5F3A;&#x5236;&#x9500;&#x6BC1;&#x540E;&#x6709;&#x5FC5;&#x8981;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x8FD0;&#x884C;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x5C31;&#x9002;&#x5408;&#x4F7F;&#x7528;START_REDELIVER_INTENT&#x3002; - START_STICKY &#x5F53;Service&#x8FD0;&#x884C;&#x7684;&#x8FDB;&#x7A0B;&#x88AB;Android&#x7CFB;&#x7EDF;&#x5F3A;&#x5236;&#x6740;&#x6389;&#x4E4B;&#x540E;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x4F1A;&#x5C06;&#x8BE5;Service&#x4F9D;&#x7136;&#x8BBE;&#x7F6E;&#x4E3A;started&#x72B6;&#x6001;&#xFF08;&#x5373;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x518D;&#x4FDD;&#x5B58;onStartCommand&#x65B9;&#x6CD5;&#x4F20;&#x5165;&#x7684;intent&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;Android&#x7CFB;&#x7EDF;&#x4F1A;&#x5C1D;&#x8BD5;&#x518D;&#x6B21;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x8BE5;Service&#xFF0C;&#x5E76;&#x6267;&#x884C;onStartCommand(...)&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x65F6;&#x8BE5;&#x56DE;&#x8C03;&#x7684;Intent&#x53C2;&#x6570;&#x4E3A;null&#xFF0C;&#x5373;&#x867D;&#x7136;&#x4F1A;&#x6267;&#x884C;&#x4F46;&#x662F;&#x83B7;&#x53D6;&#x4E0D;&#x5230;intent&#x4FE1;&#x606F;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7684;Service&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x65F6;&#x523B;&#x8FD0;&#x884C;&#x6216;&#x7ED3;&#x675F;&#x90FD;&#x6CA1;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x9700;&#x8981;intent&#x4FE1;&#x606F;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x64AD;&#x653E;&#x80CC;&#x666F;&#x97F3;&#x4E50;&#x7684;Service&#x5C31;&#x9002;&#x5408;&#x8FD4;&#x56DE;&#x8BE5;&#x503C;&#x3002; bind Service &#x8C03;&#x7528;bindService(Intent, ServiceConnection, int)&#xFF0C;&#x53EF;&#x4EE5;&#x6709;&#x673A;&#x4F1A;&#x76F4;&#x63A5;&#x8C03;&#x7528;Service&#x7684;&#x65B9;&#x6CD5;&#x3002;ServiceConnection&#x7528;&#x6765;&#x63A5;&#x6536;&#x548C;binding&#x76F8;&#x5173;&#x7684;&#x56DE;&#x8C03;&#x3002;&#x4E66;&#x4E2D;&#x63D0;&#x4F9B;&#x8FD9;&#x6837;&#x4E00;&#x6BB5;&#x793A;&#x4F8B;&#xFF1A; 123456789101112131415161718private ServiceConnection mServiceConnection = new ServiceConnection(){ public void onServiceConnected(ComponentName className, IBinder service){ MyBinder binder = (MyBinder)service; } public void onServiceDisconnected(ComponentName className){ }};@Overridepublic void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); Intent i = new Intent(getActivity(), MyService.class); getActivity().bindService(i, mServiceConnection, 0);}@Overridepublic void onDestroy(){ super.onDestroy(); getActivity().unbindService(mServiceConnection);} &#x5728;Service&#x4FA7;&#xFF0C;binding&#x5F15;&#x5165;&#x4E86;&#x4E24;&#x4E2A;&#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#xFF1A; - onBind(Intent) &#x6BCF;&#x6B21;Service&#x88AB;bind&#xFF0C;&#x5E76;&#x901A;&#x8FC7;ServiceConnection::onServiceConnected(...)&#x8FD4;&#x56DE;IBind&#x5BF9;&#x8C61;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#x3002; - onUnbind(Intent) &#x6BCF;&#x6B21;binding&#x7EC8;&#x6B62;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#x3002; &#x672C;&#x5730;service binding &#x5982;&#x679C;service&#x5B58;&#x5728;&#x4E8E;&#x672C;&#x8FDB;&#x7A0B;&#x5185;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x672C;&#x5730;binding&#xFF0C;&#x6B64;&#x65F6;&#x5B83;&#x4F1A;&#x63D0;&#x4F9B;&#x76F4;&#x63A5;&#x8C03;&#x7528;service&#x7684;&#x51FD;&#x6570;&#xFF1A; 123456789private class MyBinder extends IBinder{ public MyService getService(){ return MyService.this; } @Override public void onBind(Intent intent){ return enw MyBinder(); }}; &#x4F46;&#x662F;&#x4E0D;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5982;&#x679C;MyBinder&#x5B58;&#x5728;&#x4E8E;&#x672C;&#x5730;&#xFF0C;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x901A;&#x8FC7;Binder&#x6765;&#x7ED5;&#x5F2F;&#x5B50;&#xFF1F; &#x8FDC;&#x7AEF;service binding &#x8FD9;&#x662F;binding Service&#x7684;&#x4E3B;&#x8981;&#x7528;&#x9014;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x8DE8;&#x8FDB;&#x7A0B;&#x8C03;&#x7528;&#x7684;&#x673A;&#x5236;&#x3002; &#x672C;&#x4E66;&#x6CA1;&#x6709;&#x8BE6;&#x7EC6;&#x8BB2;&#x89E3;&#x5177;&#x4F53;&#x7528;&#x6CD5;&#xFF0C;&#x7A0D;&#x540E;&#x5E94;&#x8BE5;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x628A;&#x5B83;&#x548C;android&#x6E90;&#x7801;&#x7684;binder&#x6253;&#x901A;&#x3002; &#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;&#x7F51;&#x7EDC;&#x53EF;&#x7528; &#x5728;Android&#x7CFB;&#x7EDF;&#x4E0B;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5173;&#x95ED;&#x540E;&#x53F0;&#x5E94;&#x7528;&#x7684;&#x8054;&#x7F51;&#x6743;&#x9650;&#xFF0C;&#x8FD9;&#x5BF9;&#x4E8E;&#x63A7;&#x5236;&#x624B;&#x673A;&#x7684;&#x4F4E;&#x529F;&#x8017;&#x8FD0;&#x884C;&#x975E;&#x5E38;&#x6709;&#x5E2E;&#x52A9;&#x3002;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x5BF9;&#x6B64;&#x4F5C;&#x51FA;&#x5224;&#x65AD;&#xFF0C;&#x5982;&#x679C;&#x7F51;&#x7EDC;&#x4E0D;&#x53EF;&#x7528;&#xFF0C;&#x5C31;&#x4E0D;&#x8981;&#x518D;&#x505A;&#x540E;&#x7EED;&#x7684;&#x8054;&#x7F51;&#x5C1D;&#x8BD5;&#x4E86;&#x3002; 1234567891011private boolean isNetworkAvailableAndConnected(){ ConnectivityManager cm = (ConnectivityManager) getSystemService(CONNECTIVITY_SERVICE); // &#x2460;&#x5982;&#x679C;&#x7CFB;&#x7EDF;&#x5173;&#x95ED;&#x4E86;&#x201C;&#x5141;&#x8BB8;&#x540E;&#x53F0;&#x8054;&#x7F51;&#x7684;&#x5F00;&#x5173;&#x201D; boolean isNetworkAvailable = (cm.getActiveNetworkInfo() != null); // &#x2461;&#x5982;&#x679C;&#x5F00;&#x5173;&#x662F;&#x6253;&#x5F00;&#x7684;&#xFF0C;&#x4F46;&#x7F51;&#x7EDC;&#x8FDE;&#x4E0D;&#x4E0A; boolean isNetConnected = (isNetworkAvailable &amp;&amp; cm.getActiveNetworkInfo().isConnected()); return isNetConnected;} &#x5728;AndroidManifest.xml&#x4E2D;&#x58F0;&#x660E;ACCESS_NETWORK_STATE&#x624D;&#x6709;&#x6743;&#x9650;&#x8C03;&#x7528;&#x4EE5;&#x4E0A;&#x51FD;&#x6570;&#xFF1A; 12345678&lt;manifest ...&gt; ... &lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot;/&gt; &lt;application ...&gt; ... &lt;/application&gt;&lt;/manifest&gt; &#x5B9A;&#x671F;&#x88AB;&#x52A8;&#x901A;&#x77E5; &#x672C;&#x8282;&#x4E2D;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x673A;&#x5236;&#xFF0C;&#x80FD;&#x5B9A;&#x671F;&#x53D1;&#x9001;Service&#x547D;&#x4EE4;&#xFF0C;&#x8BA9;&#x540E;&#x53F0;Service&#x5DE5;&#x4F5C;&#x8D77;&#x6765;&#x3002; &#x4E00;&#x79CD;&#x5907;&#x9009;&#x65B9;&#x6848;&#x662F;Handle::sendMessageDelayed(...)&#x6216;Handle::PostDelayed(...)&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6848;&#x7684;&#x7F3A;&#x9677;&#x5728;&#x4E8E;&#xFF1A;&#x5982;&#x679C;&#x7528;&#x6237;&#x9000;&#x51FA;&#x4E86;&#x6240;&#x6709;Activity&#xFF0C;&#x8FDB;&#x7A0B;&#x4E5F;&#x5C06;&#x9000;&#x51FA;&#xFF0C;&#x6240;&#x6709;Handle&#x5C31;&#x4E0D;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x4E86;&#x3002; &#x66F4;&#x597D;&#x7684;&#x65B9;&#x6848;&#x662F;&#x91C7;&#x7528;AlarmManager&#xFF0C;&#x5B83;&#x501F;&#x52A9;&#x7CFB;&#x7EDF;&#x670D;&#x52A1;&#x53EF;&#x4EE5;&#x5411;&#x4F60;&#x53D1;&#x9001;Intents&#xFF0C;&#x4E0D;&#x7BA1;&#x53D1;&#x9001;&#x65B9;&#x7684;&#x8FDB;&#x7A0B;&#x662F;&#x5426;&#x8FD8;&#x6D3B;&#x7740;&#x3002; 12345678910111213141516private static final long POLL_INTERVAL_MS = TimeUnit.MINUTES.toMillis(1);...public static void setServiceAlarm(Context context, boolean isOn){ Intent i = PollService.newIntent(context); PendingIntent pi = PendingIntent.getService(context, 0, i, 0); AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE); if(isOn){ alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME, SystemClock.elapsedRealtime(), POLL_INTERVAL_MS, pi); }else{ alarmManager.cancel(pi); pi.cancel(); }} PendingIntent PendingIntent&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;Intent&#xFF0C;&#x4E3B;&#x8981;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;Intent&#x7ACB;&#x523B;&#x6267;&#x884C;&#xFF0C;&#x968F;&#x6240;&#x5728;&#x7684;activity &#x6D88;&#x5931;&#x800C;&#x6D88;&#x5931;&#x3002;&#x800C;PendingIntent&#x4E0D;&#x662F;&#x7ACB;&#x523B;&#x6267;&#x884C;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x5BF9;intent&#x7684;&#x5305;&#x88C5;&#xFF0C;&#x5B83;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x5B9E;&#x8D28;&#x4E0A;&#x662F;&#x53C2;&#x6570;Intent&#x4F20;&#x8FDB;&#x6765;&#x7684;&#x7684;&#x64CD;&#x4F5C;&#x3002; &#x901A;&#x5E38;&#x7528;getActivity(...)&#x3001;getBroadcast(...)&#x3001;getService(...)&#x6765;&#x5F97;&#x5230;PendingIntent&#x7684;&#x5B9E;&#x4F8B;&#xFF1A; 12345PendingIntent getService ( Context context, // &#x542F;&#x52A8;service&#x7684;context int requestCode, // &#x7528;&#x6765;&#x533A;&#x5206;&#x53D1;&#x9001;&#x7AEF; Intent intent, // &#x63CF;&#x8FF0;&#x5F85;&#x542F;&#x52A8;service&#x7684;intent int flags) // &#x63A7;&#x5236;&#x521B;&#x5EFA;PendingItent&#x7684;&#x6807;&#x5FD7;&#x4F4D; &#x5F53;&#x524D;Activity&#x5E76;&#x4E0D;&#x9A6C;&#x4E0A;&#x542F;&#x52A8;PendingIntent&#x6240;&#x5305;&#x542B;&#x7684;Intent&#xFF0C;&#x800C;&#x662F;&#x5728;&#x5916;&#x90E8;&#x6267;&#x884C;PendingIntent&#x65F6;&#xFF0C;&#x8C03;&#x7528;Intent&#x3002; &#x7531;&#x4E8E;&#x5728;PendingIntent&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;&#x5F53;&#x524D;App&#x7684;Context&#xFF0C;&#x4F7F;&#x5B83;&#x8D4B;&#x4E88;&#x5916;&#x90E8;App&#x53EF;&#x4EE5;&#x5982;&#x540C;&#x5F53;&#x524D;App&#x4E00;&#x6837;&#x7684;&#x6267;&#x884C;PendingIntent&#x91CC;&#x7684; Intent&#xFF0C;&#x5C31;&#x7B97;&#x5728;&#x6267;&#x884C;&#x65F6;&#x5F53;&#x524D;App&#x5DF2;&#x7ECF;&#x4E0D;&#x5B58;&#x5728;&#x4E86;&#xFF0C;&#x4E5F;&#x80FD;&#x901A;&#x8FC7;PendingIntent&#x91CC;&#x7684;Context&#x6267;&#x884C;Intent&#x3002; Intent&#x4E00;&#x822C;&#x662F;&#x7528;&#x4F5C;Activity&#x3001;Sercvice&#x3001;BroadcastReceiver&#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E;&#xFF0C;&#x800C;Pendingintent&#xFF0C;&#x4E00;&#x822C;&#x7528;&#x5728; Notification&#x4E0A;&#x3002; &#x53EF;&#x4EE5;&#x8C03;&#x7528;PendingIntent::send()&#x7ACB;&#x523B;&#x53D1;&#x51FA;Intent&#xFF0C;&#x6B64;&#x65F6;&#x6267;&#x884C;&#x53D1;&#x51FA;&#x7684;&#x662F;&#x7CFB;&#x7EDF;&#xFF0C;&#x53D1;&#x51FA;&#x8005;&#x4ECD;&#x7136;&#x662F;&#x5F53;&#x524D;app&#x3002;&#x53EF;&#x4EE5;&#x628A;PendingIntent&#x8F6C;&#x4EA4;&#x7ED9;&#x5176;&#x4ED6;&#x4EBA;&#x53D1;&#x51FA;&#xFF0C;&#x6B64;&#x65F6;&#x53D1;&#x51FA;&#x8005;&#x8FD8;&#x662F;&#x5F53;&#x524D;app&#x3002;&#x8C03;&#x7528;&#x4E86;cancel()&#x7684;PendingIntent&#xFF0C;&#x5373;&#x4F7F;send()&#x4E5F;&#x4E0D;&#x4F1A;&#x518D;&#x88AB;&#x53D1;&#x51FA;&#x4E86;&#x3002; &#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;Intentqq&#x8BF7;&#x6C42;&#x4E24;&#x6B21;PendingIntent&#x5F97;&#x5230;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002;&#x5728;flag&#x4E2D;&#x4F20;&#x5165;PendingIntent::FLAG_NO_CREATE&#xFF0C;&#x5F53;PendingIntent&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x8FD4;&#x56DE;&#x8BE5;&#x5B58;&#x5728;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x8FD4;&#x56DE;null&#x3002; AlarmManager 1234void setRepeating (int type, // alarm&#x7C7B;&#x578B; long triggerAtMillis, // &#x9996;&#x6B21;&#x542F;&#x52A8;alarm&#x7684;&#x65F6;&#x95F4; long intervalMillis, // &#x6BCF;&#x6B21;&#x95F4;&#x9694;&#x6BEB;&#x79D2;&#x6570; PendingIntent operation)// &#x8981;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C; &#x5176;&#x4E2D;type&#x53EF;&#x4EE5;&#x53D6;&#x503C;&#x4E3A;RTC_WAKEUP&#x3001;RTC&#x3001;ELAPSED_REALTIME_WAKEUP&#x6216;ELAPSED_REALTIME&#x3002; RTCxxx&#x8868;&#x793A;&#x7EDD;&#x5BF9;&#x65F6;&#x95F4;&#xFF08;System.currentTimeMillis()&#xFF09; ELAPSED_REALTIMExxx&#x8868;&#x793A;&#x76F8;&#x5BF9;&#x4E8E;&#x7CFB;&#x7EDF;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x95F4;&#xFF08;SystemClock.elapsedRealtime()&#xFF09; xxx_WAKEUP &#x5982;&#x679C;&#x8BBE;&#x5907;&#x5904;&#x4E8E;&#x4F11;&#x7720;&#x6A21;&#x5F0F;&#xFF0C;&#x5982;&#x706D;&#x5C4F;&#x65F6;&#xFF0C;&#x5F3A;&#x5236;alarm&#x5524;&#x9192;&#x8BBE;&#x5907; &#x6CA1;&#x6709;_WAKEUP &#x7684;&#x7248;&#x672C;&#x5F53;&#x8BBE;&#x5907;&#x5904;&#x4E8E;&#x4F11;&#x7720;&#x6A21;&#x5F0F;&#x65F6;&#xFF0C;&#x4E0D;&#x4F1A;&#x5F3A;&#x5236;&#x5524;&#x9192;&#x8BBE;&#x5907; setRepeating(...)&#x5E76;&#x4E0D;&#x4F1A;&#x7CBE;&#x786E;&#x5730;&#x6309;&#x7167;intervalMillis&#x5524;&#x9192;alarm&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x7CFB;&#x7EDF;&#x5904;&#x4E8E;&#x529F;&#x8017;&#x7684;&#x8003;&#x8651;&#x3002;&#x5982;&#x679C;&#x7CFB;&#x7EDF;&#x6709;10&#x4E2A;&#x5E94;&#x7528;&#xFF0C;&#x5206;&#x522B;15&#x5206;&#x949F;&#x5524;&#x9192;&#x4E00;&#x6B21;&#xFF0C;&#x5982;&#x679C;&#x4ED6;&#x4EEC;&#x5B8C;&#x5168;&#x9519;&#x5F00;&#xFF0C;&#x6700;&#x5DEE;&#x7684;&#x60C5;&#x51B5;&#x4F1A;&#x8BA9;&#x7CFB;&#x7EDF;&#x5728;&#x4E00;&#x5C0F;&#x65F6;&#x5185;&#x88AB;&#x5524;&#x9192;40&#x6B21;&#x3002;&#x7CFB;&#x7EDF;&#x4F1A;&#x5C3D;&#x91CF;&#x628A;&#x4ED6;&#x4EEC;&#x7684;&#x5524;&#x9192;&#x65F6;&#x95F4;&#x5B89;&#x6392;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x60C5;&#x51B5;&#x662F;&#x4E00;&#x5C0F;&#x65F6;&#x5185;&#x7CFB;&#x7EDF;&#x53EA;&#x88AB;&#x5524;&#x9192;4&#x6B21;&#x4E86;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x7EDD;&#x5BF9;&#x7CBE;&#x51C6;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;AlarmManager::setWindow(...)&#x6216;AlarmManager::setExact(...) AlarmManager::Cancel(Pending)&#x7528;&#x4E8E;&#x53D6;&#x6D88;alarm&#x3002; Notifications &#x7CFB;&#x7EDF;&#x9876;&#x90E8;&#x6709;&#x901A;&#x77E5;&#x680F;&#xFF0C;&#x4E0B;&#x62C9;&#x663E;&#x793A;&#x901A;&#x77E5;&#x5217;&#x8868;&#x3002;&#x4F46;&#x662F;&#x6309;&#x7167;&#x672C;&#x4E66;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x5728;AndroidO&#x4E0A;&#x4E0D;&#x80FD;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#xFF0C;&#x4F1A;&#x5F39;&#x51FA;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; &#x56E0;&#x4E3A;&#x5728;AndroidO&#x4E2D;&#x5F15;&#x5165;&#x4E86;&#x901A;&#x77E5;&#x9891;&#x9053;&#xFF08;Notification Channel&#xFF09;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x4E3A;&#x9700;&#x8981;&#x53D1;&#x9001;&#x7684;&#x6BCF;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x901A;&#x77E5;&#x7C7B;&#x578B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x901A;&#x77E5;&#x6E20;&#x9053;&#xFF0C;&#x6240;&#x6709;&#x53D1;&#x5E03;&#x81F3;&#x901A;&#x77E5;&#x6E20;&#x9053;&#x7684;&#x901A;&#x77E5;&#x90FD;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x5F53;&#x7528;&#x6237;&#x4FEE;&#x6539;&#x4EFB;&#x4F55;&#x91CD;&#x8981;&#x6027;&#x3001;&#x58F0;&#x97F3;&#x3001;&#x5149;&#x3001;&#x632F;&#x52A8;&#x3001;&#x5728;&#x9501;&#x5C4F;&#x4E0A;&#x663E;&#x793A;&#x3001;&#x66FF;&#x6362;&#x514D;&#x6253;&#x6270;&#x6A21;&#x5F0F;&#x8FD9;&#x4E9B;&#x7279;&#x6027;&#x7684;&#x884C;&#x4E3A;&#x65F6;&#xFF0C;&#x4FEE;&#x6539;&#x5C06;&#x4F5C;&#x7528;&#x4E8E;&#x901A;&#x77E5;&#x6E20;&#x9053;&#x3002; &#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x901A;&#x77E5;&#x7684;&#x4EA4;&#x4E92;&#x903B;&#x8F91;&#x548C;&#x5BF9;&#x5E94;&#x5B57;&#x6BB5;&#xFF1A; &#x521B;&#x5EFA;Notification&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x53D1;&#x9001;&#x901A;&#x77E5;&#x3002;&#x4E00;&#x4E2A;Notification&#x81F3;&#x5C11;&#x9700;&#x8981;&#x5305;&#x542B;&#xFF1A; &#x6B64;&#x5904;&#x5E94;&#x8BE5;&#x8D34;&#x4E2A;&#x56FE; &#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536private void doNotifiy(){ Resources resources = getResources(); Intent i = PhotoGalleryActivity.newIntent(this); PendingIntent pi = PendingIntent.getActivity(this, 0, i, 0); NotificationManager notificationManager = (NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE); // &#x521B;&#x5EFA;&#x901A;&#x77E5;&#x9891;&#x9053; String notificationChannelId = getString(R.string.notify_channel_id); CharSequence channelName = getString(R.string.notify_channel_name); String channelDescription = getString(R.string.notify_channel_description); int channelImportance = NotificationManager.IMPORTANCE_HIGH; // &#x4F20;&#x5165;&#x9891;&#x9053;ID&#x3001;&#x540D;&#x79F0;&#x548C;&#x7EA7;&#x522B; NotificationChannel notificationChannel = new NotificationChannel( notificationChannelId, channelName, channelImportance); notificationChannel.setDescription(channelDescription); notificationChannel.enableLights(true); // &#x95EA;&#x5149;&#x706F;&#x548C;&#x989C;&#x8272; notificationChannel.setLightColor(Color.RED); notificationChannel.enableVibration(true); // &#x9707;&#x52A8;&#x548C;&#x8282;&#x594F; notificationChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400}); notificationManager.createNotificationChannel(notificationChannel); // &#x521B;&#x5EFA;&#x901A;&#x77E5;Builder Notification notification = new Notification.Builder(this) .setTicker(resources.getString(R.string.new_pictures_title)) .setSmallIcon(android.R.drawable.ic_menu_report_image) .setContentTitle(resources.getString(R.string.new_pictures_title)) .setContentText(resources.getString(R.string.new_pictures_text)) .setContentIntent(pi) .setAutoCancel(true) .setChannelId(notificationChannelId) .build(); // &#x5F39;&#x51FA;&#x901A;&#x77E5; notificationManager.notify(0, notification);} JobScheduler &#x548C;JobService Android Lollipop&#x5F15;&#x5165;&#x4E86;JobScheduler&#x548C;JobService&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x65B9;&#x4FBF;&#x5730;&#x5B8C;&#x6210;&#x8BF8;&#x5982;&#x672C;&#x8282;&#x7684;&#x201C;&#x5B9A;&#x671F;&#x8DD1;&#x4EFB;&#x52A1;&#xFF0C;&#x8DD1;&#x8D77;&#x4E4B;&#x524D;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6709;&#x8BE5;&#x4EFB;&#x52A1;&#x5728;&#x8DD1;&#xFF0C;&#x68C0;&#x67E5;&#x7F51;&#x7EDC;&#x662F;&#x5426;&#x53EF;&#x7528;&#x201D;&#x8FD9;&#x5957;&#x7EC4;&#x5408;&#x62F3;&#x3002; &#x4F46;&#x662F;&#x672C;&#x8282;&#x8BB2;&#x5F97;&#x592A;&#x6D45;&#xFF0C;&#x5C31;&#x4E0D;&#x5728;&#x8FD9;&#x603B;&#x7ED3;&#x4E86;&#x3002;&#x56DE;&#x5934;&#x5E94;&#x8BE5;&#x8FDB;&#x4E00;&#x6B65;&#x6269;&#x5C55;&#x9605;&#x8BFB;&#xFF0C;&#x8865;&#x4E0A;&#x8FD9;&#x4E00;&#x8282;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十七]]></title>
    <url>%2F2017%2F11%2F07%2F2017%2F1107AndroidProgrammingBNRG27%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5728;toolbar&#x4E2D;&#x653E;&#x5165;&#x4E86;&#x641C;&#x7D22;&#x6846;&#xFF0C;&#x8F93;&#x5165;&#x5173;&#x952E;&#x8BCD;&#x5C06;&#x5411;Flickr&#x8BF7;&#x6C42;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x56FE;&#x7247;&#xFF1A; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Shared Preferences - &#x4F7F;&#x7528;SearchView Shared Preferences Shared Preferences&#x662F;&#x6307;&#x4FDD;&#x5B58;&#x5728;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x901A;&#x8FC7;SharedPreferences&#x7C7B;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x7684;&#x6570;&#x636E;&#x3002;SharedPreferences&#x63D0;&#x4F9B;&#x4E86;key-value&#x7684;&#x8BBF;&#x95EE;&#x5F62;&#x5F0F;&#xFF0C;&#x548C;Bundle&#x7C7B;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;Bundle&#x4E0D;&#x4FDD;&#x5B58;&#x5728;&#x78C1;&#x76D8;&#x3002;Shared Preference&#x7684;&#x5E95;&#x5C42;&#x662F;&#x901A;&#x8FC7;XML&#x6587;&#x4EF6;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x6587;&#x4EF6;&#x4FDD;&#x5B58;&#x5728;&#x5E94;&#x7528;&#x7684;&#x6C99;&#x76D2;&#x76EE;&#x5F55;&#x3002; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;Context.getSharedPreference(int)&#x6765;&#x83B7;&#x5F97;SharedPreferences&#x5B9E;&#x4F8B;&#xFF0C;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x8005;&#x5E76;&#x4E0D;&#x5173;&#x6CE8;&#x4F7F;&#x7528;&#x5177;&#x4F53;&#x54EA;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x56E0;&#x6B64;&#x66F4;&#x5E38;&#x7528;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x901A;&#x8FC7;PreferenceManager.getDefaultSharedPreferences(Context)&#x6765;&#x83B7;&#x5F97;&#x3002;&#x5177;&#x4F53;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#xFF1A; 123456789101112private static final String PREF_SEARCH_QUERY = &quot;searchQuery&quot;;// &#x8BFB;&#x53D6;PREF_SEARCH_QUERY&#x7684;&#x503C;String query = PreferenceManager.getDefaultSharedPreferences(context) .getString(PREF_SEARCH_QUERY, null);...// &#x8BBE;&#x7F6E;PREF_SEARCH_QUERY&#x7684;&#x503C;PreferenceManager.getDefaultSharedPreferences(context) .edit() .putString(PREF_SEARCH_QUERY,query) .apply(); } &#x5176;&#x4E2D;SharedPreferences.edit()&#x8FD4;&#x56DE;SharedPreferences.Editor&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x5BF9;&#x8C61;&#x4E0A;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x591A;&#x6B21;putString(...)&#x4E4B;&#x7C7B;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x6700;&#x540E;&#x6267;&#x884C;apply()&#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x5199;&#x5165;&#x7684;&#x539F;&#x5B50;&#x6027;&#x3002;apply()&#x901A;&#x8FC7;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x5B8C;&#x6210;&#x6587;&#x4EF6;&#x5199;&#x5165;&#x3002;&#x5728;&#x300A;&#x7B14;&#x8BB0;26&#xB7;StrictMode&#x300B;&#x4E2D;&#x66FE;&#x63D0;&#x5230;&#x8FC7;&#xFF1A;&#x4E0D;&#x8981;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x8BFB;&#x5199;&#x78C1;&#x76D8;&#x3002; &#x4F7F;&#x7528;SearchView SearchView&#x662F;&#x4E00;&#x4E2A;action view&#x2014;&#x2014;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x5728;toolbar&#x4E2D;&#x7684;view&#x3002;&#x5B83;&#x5C55;&#x73B0;&#x51FA;&#x4E00;&#x4E2A;&#x641C;&#x7D22;&#x680F;&#x7684;&#x5F62;&#x6001;&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x4F60;&#x8F93;&#x5165;&#x5173;&#x952E;&#x8BCD;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#x3002; 1. &#x6DFB;&#x52A0;XML&#x8D44;&#x6E90; &#x53F3;&#x952E;res &gt; New &gt; Android resource file&#xFF0C;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x9009;&#x62E9;Menu&#xFF0C;&#x6DFB;&#x52A0;&#x83DC;&#x5355;&#x8D44;&#x6E90;&#xFF0C;fragment_photo_gallery.xml&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12345678910&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt; &lt;item android:id=&quot;@+id/menu_item_search&quot; android:title=&quot;@string/search&quot; app:actionViewClass=&quot;android.support.v7.widget.SearchView&quot; app:showAsAction=&quot;ifRoom&quot;/&gt; &lt;item android:id=&quot;@+id/menu_item_clear&quot; android:title=&quot;@string/clear_search&quot; app:showAsAction=&quot;never&quot;/&gt;&lt;/menu&gt; &#x83DC;&#x5355;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5C31;&#x662F;SearchView&#x3002; 2.&#x5728;Java&#x4EE3;&#x7801;&#x4E2D;&#x521B;&#x5EFA;&#x83DC;&#x5355; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960// PhotoGalleryFragment.javapublic class PhotoGalleryFragment extends Fragment { ... @Override public void onCreate(Bundle savedInstanceState){ ... setHasOptionsMenu(true); // &#x2460; ... } @Override public void onCreateOptionsMenu(Menu menu, MenuInflater menuInflater){ // &#x2461; super.onCreateOptionsMenu(menu, menuInflater); menuInflater.inflate(R.menu.fragment_photo_gallery, menu); // &#x2462; MenuItem searchItem = menu.findItem(R.id.menu_item_search); final SearchView searchView = (SearchView)searchItem.getActionView(); // &#x2463; searchView.setOnQueryTextListener( new SearchView.OnQueryTextListener(){ @Override public boolean onQueryTextSubmit(String s){ Log.d(TAG, &quot;QueryTextSubmit: &quot; + s); QueryPreferences.setStoredQuery(getActivity(), s); updateItems(); return true; } @Override public boolean onQueryTextChange(String s){ Log.d(TAG, &quot;QueryTextChange: &quot; + s); return false; } }); // &#x2464; searchView.setOnSearchClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ String query = QueryPreferences.getStoredQuery(getActivity()); searchView.setQuery(query, false); } }); } @Override // &#x2465; public boolean onOptionsItemSelected(MenuItem item){ switch(item.getItemId()){ case R.id.menu_item_clear: QueryPreferences.setStoredQuery(getActivity(), null); updateItems(); return true; default: return super.onOptionsItemSelected(item); } } ...} &#x2460;&#x548C;&#x2461;&#x5728;&#x300A;&#x7B14;&#x8BB0;13&#xB7;&#x600E;&#x4E48;&#x521B;&#x5EFA;&#x83DC;&#x5355;&#x300B;&#x5DF2;&#x7ECF;&#x8BB2;&#x8FC7;&#x3002; &#x2462; &#x62FF;&#x5230;SearchView&#x5BF9;&#x8C61;&#x3002; &#x2463; &#x901A;&#x8FC7;&#x8BBE;&#x7F6E;Listener&#x54CD;&#x5E94;&#x641C;&#x7D22;&#x4E8B;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;onQueryTextSubmit(...)&#x54CD;&#x5E94;&#x641C;&#x7D22;&#x63D0;&#x4EA4;&#xFF0C;onQueryTextChange(...)&#x54CD;&#x5E94;&#x6587;&#x5B57;&#x53D8;&#x5316;&#x3002; &#x2464; &#x5F53;&#x70B9;&#x51FB;&#x641C;&#x7D22;&#x6846;&#xFF0C;&#x5C06;&#x4E0A;&#x6B21;&#x7684;&#x641C;&#x7D22;&#x8BCD;&#x5C55;&#x73B0;&#x5728;&#x641C;&#x7D22;&#x6846;&#x5185;&#x3002; &#x2465; &#x54CD;&#x5E94;&#x70B9;&#x51FB;&#xD7;&#x6309;&#x94AE;&#xFF0C;&#x6E05;&#x9664;&#x5173;&#x952E;&#x8BCD;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十六]]></title>
    <url>%2F2017%2F11%2F06%2F2017%2F1106AndroidProgrammingBNRG26%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x5E26;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x628A;&#x9700;&#x8981;&#x5448;&#x73B0;&#x7684;&#x56FE;&#x7247;&#x7684;url&#x53D1;&#x9001;&#x7ED9;&#x8BE5;&#x5B50;&#x7EBF;&#x7A0B;&#xFF0C;&#x5B50;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;&#x56FE;&#x7247;&#xFF0C;&#x518D;&#x901A;&#x77E5;&#x4E3B;&#x7EBF;&#x7A0B;&#x66F4;&#x65B0;&#x754C;&#x9762;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Looper/MessageQueue/Message/Handler - Picasso - StrictMode &#x672C;&#x7AE0;&#x903B;&#x8F91;&#x68B3;&#x7406; &#x68B3;&#x7406;&#x4E00;&#x4E0B;&#x5230;&#x300A;&#x7B14;&#x8BB0;25&#xB7;&#x4ECE;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x56DE;&#x5F52;&#x5230;&#x524D;&#x53F0;&#x300B;&#x4E3A;&#x6B62;&#x7684;&#x6D41;&#x7A0B;&#xFF1A; &#x2460;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#xFF0C;PhotoGalleryFragment::onCreate(...)&#x521B;&#x5EFA;&#x5E76;&#x8FD0;&#x884C;&#x5B50;&#x7EBF;&#x7A0B;FetchItemsTask&#xFF0C;&#x4E4B;&#x540E;&#x8FDB;&#x5165;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x3002; &#x2461;&#x5728;&#x5B50;&#x7EBF;&#x7A0B;FetchItemsTask::doInBackground(...)&#x4E0B;&#x8F7D;&#x5E76;&#x89E3;&#x6790;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C;&#x7EC4;&#x7EC7;&#x6210;List&#xFF0C;&#x5B8C;&#x6210;&#x540E;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;FetchItemsTask::onPostExecute(List&lt;GalleryItem&gt; items)&#x3002; &#x2462;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;FetchItemsTask::onPostExecute(List&lt;GalleryItem&gt; items)&#x4E2D;&#xFF0C;&#x5C06;items&#x8D4B;&#x7ED9;PhotoGalleryFragment::mItems&#xFF1B;&#x4E3A;RecyclerView&#x8BBE;&#x7F6E;Adapter&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;RecyclerView&#x4E3A;&#x53EF;&#x89C1;&#x7684;item&#x7ED1;&#x5B9A;Holder&#x3002; &#x2463;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;PhotoAdapter::onBindViewHolder(...)&#x4E2D;&#x6839;&#x636E;&#x4F4D;&#x7F6E;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;GalleryItem&#x3002; &#x672C;&#x8282;&#x8981;&#x7EE7;&#x7EED;&#x6839;&#x636E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x4E0B;&#x8F7D;&#x7F29;&#x7565;&#x56FE;&#xFF0C;&#x5C55;&#x73B0;&#x5728;&#x4E3B;&#x754C;&#x9762;&#x7684;RecyclerView&#x4E0A;&#x3002;&#x6700;&#x76F4;&#x89C2;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x540E;&#x53F0;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;FetchItemsTask::doInBackground(...)&#x5E72;&#x8FD9;&#x4EF6;&#x4E8B;&#xFF0C;&#x4F46;&#x8FD9;&#x4E48;&#x505A;&#x663E;&#x7136;&#x95EE;&#x9898;&#x5F88;&#x5927;&#x2014;&#x2014;&#x6240;&#x6709;&#x7684;&#x7F29;&#x7565;&#x56FE;&#x5FC5;&#x987B;&#x5168;&#x90E8;&#x4E0B;&#x8F7D;&#x5B8C;&#x624D;&#x80FD;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x800C;&#x4E14;&#x53EA;&#x80FD;&#x5C55;&#x73B0;&#x4E00;&#x5C4F;&#x3002;&#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x8BA9;RecyclerView&#x754C;&#x9762;&#x6765;&#x9A71;&#x52A8;&#x540E;&#x53F0;&#x4E0B;&#x8F7D;&#x7EBF;&#x7A0B;&#xFF0C;&#x663E;&#x793A;&#x5230;&#x54EA;&#x4E00;&#x683C;&#x624D;&#x4E0B;&#x8F7D;&#x8FD9;&#x4E00;&#x683C;&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x7247;&#x3002; &#x4E8E;&#x662F;&#xFF0C;&#x672C;&#x8282;&#x521B;&#x5EFA;&#x4E86;&#x53E6;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;ThumbnailDownloader&#xFF0C;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x3002;&#x4ECE;PhotoAdapter::onBindViewHolder(...)&#x5165;&#x624B;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x91CC;&#x662F;&#x663E;&#x793A;&#x7684;&#x8D77;&#x70B9;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x7C7B;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x4E0B;&#x8F7D;&#x56FE;&#x7247;&#xFF1A; &#x2464;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;PhotoGalleryFragment::onCreate(...)&#x4E2D;&#x521B;&#x5EFA;&#x53E6;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;ThumbnailDownloader&#xFF0C;&#x8BE5;&#x7EBF;&#x7A0B;&#x6709;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#xFF0C;&#x63A5;&#x6536;&#x4E0B;&#x8F7D;&#x56FE;&#x7247;&#x7684;&#x4EFB;&#x52A1;&#x3002; &#x2465;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;PhotoAdapter::onBindViewHolder(...)&#x4E2D;&#x8C03;&#x7528;mThumbnailDownloader.queueThumbnail(photoHolder, galleryItem.getUrl())&#xFF0C;&#x540E;&#x8005;&#x505A;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;1&#x3001;&#x5C06;&#xFF1C;holder, url&#xFF1E;&#x8BB0;&#x5165;&#x7EBF;&#x7A0B;&#xFF1B;2&#x3001;&#x5411;&#x7EBF;&#x7A0B;ThumbnailDownloader&#x53D1;&#x9001;MESSAGE_DOWNLOAD&#x6D88;&#x606F; &#x2466;&#x5728;&#x7EBF;&#x7A0B;ThumbnailDownloader&#x4E2D;&#x54CD;&#x5E94;MESSAGE_DOWNLOAD&#x6D88;&#x606F;&#xFF0C;&#x6267;&#x884C;ThumbnailDownloader::handleRequest(...)&#xFF0C;&#x4E0B;&#x8F7D;&#x7F29;&#x7565;&#x56FE;&#xFF1B;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x5411;&#x4E3B;&#x7EBF;&#x7A0B;&#x7684;mResponseHandlerpost&#x4E00;&#x4E2A;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x8BE5;&#x6D88;&#x606F;&#x7531;Runnable&#x5BF9;&#x8C61;&#x5B9E;&#x73B0;&#x56DE;&#x8C03;&#x3002; &#x2467;&#x5728;Runnable::run()&#x56DE;&#x8C03;&#x5C06;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x5B8C;&#x6210;&#xFF0C;&#x5B83;&#x5220;&#x9664;ThumbnailDownloader&#x7EBF;&#x7A0B;&#x4E2D;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x7684;&#xFF1C;holder, url&#xFF1E;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x4E3A;holder&#x7ED1;&#x5B9A;&#x4E0B;&#x8F7D;&#x5230;&#x7684;&#x56FE;&#x7247;&#x3002; MessageQueue/Looper/Message/Handler &#x6982;&#x5FF5;&#x6A21;&#x578B; &#x5728;Android&#x4E2D;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x6709;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#xFF0C;&#x6700;&#x591A;&#x4E5F;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x3002;Looper&#x7684;&#x89D2;&#x8272;&#x662F;&#x6D88;&#x606F;&#x6CF5;&#xFF0C;&#x8D1F;&#x8D23;&#x4ECE;&#x6D88;&#x606F;&#x961F;&#x5217;MessageQueue&#x4E2D;&#x83B7;&#x53D6;&#x6D88;&#x606F;Message&#xFF0C;&#x6BCF;&#x4E2A;&#x6D88;&#x606F;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x5BF9;&#x8C61;Handler&#xFF0C;&#x7531;&#x5B83;&#x8D1F;&#x8D23;&#x54CD;&#x5E94;&#x6D88;&#x606F;&#x3002; &#x505A;&#x4E00;&#x4E2A;&#x7C7B;&#x6BD4;&#xFF1A;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x751F;&#x4EA7;&#x8F66;&#x95F4;&#x91CC;&#x751F;&#x4EA7;&#x4E0D;&#x540C;&#x578B;&#x53F7;&#x7684;MP3&#x64AD;&#x653E;&#x5668;&#xFF0C;&#x6BCF;&#x4E2A;&#x8F66;&#x95F4;&#x6709;&#x4E00;&#x5957;&#x6D41;&#x6C34;&#x7EBF;&#x2014;&#x2014;&#x5728;&#x4F20;&#x9001;&#x5E26;&#x4E0A;&#x6446;&#x653E;MP3&#x5957;&#x88C5;&#xFF0C;&#x8F6E;&#x5230;&#x88AB;&#x5904;&#x7406;&#x65F6;&#xFF0C;&#x751F;&#x4EA7;&#x7EBF;&#x4F1A;&#x6839;&#x636E;&#x5957;&#x88C5;&#x91CC;&#x6307;&#x5B9A;&#x7684;&#x64AD;&#x653E;&#x6761;&#x76EE;&#x4F7F;&#x7528;&#x64AD;&#x653E;&#x5668;&#x6765;&#x64AD;&#x653E;&#x3002; &#x751F;&#x4EA7;&#x8F66;&#x95F4;&#x5C31;&#x662F;Android&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x6D41;&#x6C34;&#x7EBF;&#x5C31;&#x662F;Looper&#xFF0C;&#x4F20;&#x9001;&#x5E26;&#x5C31;&#x662F;MessageQueue&#xFF0C;MP3&#x5957;&#x88C5;&#x5C31;&#x662F;Message&#xFF0C;&#x5176;&#x4E2D;&#x7684;MP3&#x64AD;&#x653E;&#x5668;&#x5C31;&#x662F;Handler&#x3002;&#x751F;&#x4EA7;&#x8005;&#x5728;&#x5F80;&#x4F20;&#x9001;&#x5E26;&#x4E0A;&#x653E;&#x7F6E;&#x5957;&#x88C5;&#x5C31;&#x662F;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x9644;&#x5E26;&#x53C2;&#x6570;&#xFF0C;&#x5C31;&#x662F;&#x64AD;&#x653E;&#x5217;&#x8868;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x9644;&#x5E26;&#x590D;&#x6742;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x662F;&#x5728;&#x5957;&#x88C5;&#x91CC;&#x9644;&#x5E26;&#x4E86;&#x95EA;&#x5B58;&#x3002; &#x4E0D;&#x540C;&#x578B;&#x53F7;&#x7684;MP3&#x53EA;&#x80FD;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x8F66;&#x95F4;&#x91CC;&#x88AB;&#x5904;&#x7406;&#x2014;&#x2014;&#x4F60;&#x53EF;&#x4EE5;&#x5728;A&#x8F66;&#x95F4;&#x91CC;&#x62FF;&#x4E00;&#x4E2A;MP3&#x5957;&#x88C5;&#xFF0C;&#x5199;&#x5165;&#x6307;&#x5B9A;&#x7684;&#x64AD;&#x653E;&#x5217;&#x8868;&#xFF0C;&#x4F46;&#x53EA;&#x80FD;&#x628A;&#x5957;&#x88C5;&#x653E;&#x56DE;A&#x8F66;&#x95F4;&#x7684;&#x6D41;&#x6C34;&#x7EBF;&#x4E0A;&#x624D;&#x80FD;&#x88AB;&#x5904;&#x7406;&#x3002; &#x6620;&#x5C04;&#x5230;Android&#x4E16;&#x754C;&#x7684;&#x6545;&#x4E8B;&#x662F;&#xFF1A;Android&#x7684;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x5FAA;&#x73AF;Looper&#xFF0C;&#x6BCF;&#x4E2A;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;MessageQueue&#xFF0C;&#x5728;&#x54EA;&#x4E2A;&#x7EBF;&#x7A0B;&#x91CC;&#x521B;&#x5EFA;&#x7684;Handler&#xFF0C;&#x5B83;&#x4EA7;&#x751F;&#x7684;&#x6D88;&#x606F;&#x53EA;&#x80FD;&#x5728;&#x672C;&#x7EBF;&#x7A0B;&#x88AB;&#x6267;&#x884C;&#x3002; &#x6A21;&#x578B;&#x5B9E;&#x73B0; &#x542F;&#x52A8;&#x5E26;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5B50;&#x7EBF;&#x7A0B; 1234567891011121314151617...Handler responseHandler = new Handler();mThumbnailDownloader = new ThumbnailDownloader&lt;&gt;(responseHandler);//&#x2460;mThumbnailDownloader.setThumbnailDownloaderListener( new ThumbnailDownloader.ThumbnailDownloaderListener&lt;PhotoHolder&gt;() { @Override public void onThumbnailDownloaded(PhotoHolder photoHolder, Bitmap bitmap) { Drawable drawable = new BitmapDrawable(getResources(), bitmap); photoHolder.bindDrawable(drawable); } });mThumbnailDownloader.start();// &#x2461;mThumbnailDownloader.getLooper();// &#x2462;...// &#x2463;mThumbnailDownloader.queueThumbnail(photoHolder, galleryItem.getUrl()); &#x2460; &#x521B;&#x5EFA;ThumbnailDownloader&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;ThumbnailDownloader&#x6D3E;&#x751F;&#x81EA;HandlerThread&#x3002; &#x2461; &#x8C03;&#x7528;mThumbnailDownloader&#x7684;start()&#x542F;&#x52A8;&#x7EBF;&#x7A0B; &#x2462; &#x8C03;&#x7528;getLooper()&#x786E;&#x4FDD;&#x7EBF;&#x7A0B;&#x7684;mLooper&#x88AB;&#x521B;&#x5EFA;&#x5B8C;&#x6BD5;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x8981;&#x7B49;&#x5F85;&#x662F;&#x56E0;&#x4E3A;&#x7B2C;&#x2463;&#x6B65;&#x5C06;&#x4F9D;&#x8D56;mLooper&#x7684;&#x521B;&#x5EFA; &#x2463; queueThumbnail(...)&#x662F;&#x4E00;&#x4E2A;helper&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x662F;&#x5411;&#x5176;handler&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x8BE5;handler&#x662F;&#x5728;&#x5B50;&#x7EBF;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#x3002; &#x6DF1;&#x5165;Android&#x6E90;&#x7801;HandlerThread::getLooper()&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5982;&#x679C;mLooper&#x6CA1;&#x6709;&#x521B;&#x5EFA;&#x5B8C;&#x6210;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5C06;&#x963B;&#x585E;&#xFF1A; 123456789101112131415161718192021222324252627282930public Looper getLooper() { //&#x5148;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x542F;&#x52A8;&#x4E86; if (!isAlive()) { return null; } // If the thread has been started, wait until the looper has been created. synchronized (this) { while (isAlive() &amp;&amp; mLooper == null) { try { wait();//&#x7B49;&#x5F85;&#x5524;&#x9192; } catch (InterruptedException e) { } } } return mLooper;}@Overridepublic void run() { mTid = Process.myTid(); Looper.prepare(); synchronized (this) { mLooper = Looper.myLooper(); notifyAll(); //&#x5524;&#x9192;&#x7B49;&#x5F85;&#x7EBF;&#x7A0B; } Process.setThreadPriority(mPriority); onLooperPrepared(); Looper.loop(); mTid = -1; } &#x4E66;&#x4E2D;&#x8BF4;&#x8C03;&#x7528;&#x2462;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;HandlerThread::onLooperPrepared()&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x4ECE;&#x6E90;&#x7801;&#x6765;&#x770B;&#x5176;&#x5B9E;&#x4ECD;&#x7136;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#xFF0C;&#x5B83;&#x53EA;&#x80FD;&#x4FDD;&#x8BC1;mLooper&#x88AB;&#x521B;&#x5EFA;&#xFF0C;&#x5728;HandlerThread::run()&#x4E2D;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;mLooper&#x88AB;&#x521B;&#x5EFA;&#x548C;onLooperPrepared()&#x88AB;&#x8C03;&#x7528;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x539F;&#x5B50;&#x6027;&#x3002;&#x5982;&#x679C;&#x5728;&#x8FD9;&#x4E2D;&#x95F4;&#x8C03;&#x7528;&#x4E86;mThumbnailDownloader.queueThumbnail&#x4F9D;&#x7136;&#x4F1A;&#x5BFC;&#x81F4;Handler&#x4E3A;&#x7A7A;&#x3002; ### &#x5B9E;&#x73B0;&#x5E26;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5B50;&#x7EBF;&#x7A0B; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667...public class ThumbnailDownloader&lt;T&gt; extends HandlerThread { // &#x2460; private static final String TAG = &quot;ThumbnailDownloader&quot;; private static final int MESSAGE_DOWNLOAD = 0; private boolean mHasQuit = false; private Handler mRequestHandler; private ConcurrentMap&lt;T, String&gt; mRequestMap = new ConcurrentHashMap&lt;&gt;(); private Handler mResponseHandler; private ThumbnailDownloaderListener&lt;T&gt; mThumbnailDownloaderListener; public interface ThumbnailDownloaderListener&lt;T&gt;{ void onThumbnailDownloaded(T target, Bitmap thumbnail); } public void setThumbnailDownloaderListener(ThumbnailDownloaderListener listener){ mThumbnailDownloaderListener = listener; } public ThumbnailDownloader(Handler responseHandler){ super(TAG); mResponseHandler = responseHandler; } @Override protected void onLooperPrepared(){ // &#x2461; mRequestHandler = new Handler(){ @Override public void handleMessage(Message msg){ if(msg.what == MESSAGE_DOWNLOAD){ T target = (T)msg.obj; ... handleRequest(target); } } }; } private void handleRequest(final T target){ // &#x2462; try{ final String url = mRequestMap.get(target); ... byte[] bitmapBytes = new FlickrFetchr().getUrlBytes(url); final Bitmap bitmap = BitmapFactory.decodeByteArray(bitmapBytes, 0, bitmapBytes.length); // &#x2463; mResponseHandler.post(new Runnable() { @Override public void run() { if(mRequestMap.get(target) != url || mHasQuit){ return; } mRequestMap.remove(target); mThumbnailDownloaderListener.onThumbnailDownloaded(target, bitmap); } }); }... } public void queueThumbnail(T target, String url){ ... mRequestMap.put(target, url); mRequestHandler.obtainMessage(MESSAGE_DOWNLOAD, target) .sendToTarget();//&#x2464; ... } ...} &#x2460; &#x4ECE;HandlerThread&#x6D3E;&#x751F;&#x5B50;&#x7C7B;&#x3002; &#x2461; &#x5728;onLooperPrepared()&#x4E2D;&#x521B;&#x5EFA;Handler&#x5B9E;&#x4F8B;&#xFF0C;&#x8BE5;&#x56DE;&#x8C03;&#x662F;&#x5728;&#x5B50;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x56E0;&#x6B64;Handler&#x5C5E;&#x4E8E;&#x5B50;&#x7EBF;&#x7A0B;&#x3002; &#x2462; &#x5B9E;&#x73B0;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#xFF0C;&#x5B8C;&#x6210;&#x4E0B;&#x8F7D;&#x540E;&#xFF0C;&#x518D;&#x5411;mResponseHandlerpost&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x3002; &#x2463; post Runnable&#x5BF9;&#x8C61;&#x76F8;&#x5F53;&#x4E8E;&#x5411;mResponseHandler&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#xFF08;&#x4E0D;&#x6307;&#x5B9A;ID&#x7684;&#xFF09;&#x6D88;&#x606F;&#xFF0C;&#x5F53;mResponseHandler&#x63A5;&#x6536;&#x5230;&#x8BE5;&#x6D88;&#x606F;&#x540E;&#xFF0C;&#x5C06;&#x5728;&#x5B83;&#x6240;&#x5728;&#x7684;&#x7EBF;&#x7A0B;&#x6267;&#x884C;run()&#x51FD;&#x6570;&#x3002;mResponseHandler&#x662F;&#x5728;&#x542F;&#x52A8;&#x5E26;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684;&#x2460;&#xFF0C;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x521B;&#x5EFA;&#x5E76;&#x4F20;&#x5165;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x7684;&#x6267;&#x884C;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x3002;&#x6B64;&#x5904;&#x8FBE;&#x5230;&#x7684;&#x6548;&#x679C;&#x662F;&#x5F53;&#x56FE;&#x7247;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x901A;&#x77E5;&#x4E3B;&#x7EBF;&#x7A0B;&#x66F4;&#x65B0;&#x754C;&#x9762;&#x3002; &#x2464; obtainMessage(...)&#x4ECE;&#x7A7A;&#x95F2;&#x6D88;&#x606F;&#x6C60;&#x4E2D;&#x53D6;&#x51FA;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x6309;&#x7167;&#x53C2;&#x6570;&#x7EC4;&#x88C5;&#x6210;Message&#xFF1B;sendToTarget()&#x5C06;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x7ED9;Handler&#x3002; &#x2463;&#x548C;&#x2464; &#x7684;&#x505A;&#x6CD5;&#x662F;&#x7B49;&#x4EF7;&#x7684;&#xFF0C;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#xFF1A;&#x5F53;&#x7EBF;&#x7A0B;A&#x5411;&#x7EBF;&#x7A0B;B&#x53D1;&#x9001;&#x6D88;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x90FD;&#x5728;&#x7EBF;&#x7A0B;B&#x4E2D;&#x5B8C;&#x6210;&#xFF0C;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x2464;&#xFF0C;&#x5982;&#x679C;&#x4E24;&#x7AEF;&#x90FD;&#x6709;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x8981;&#x6267;&#x884C;&#xFF0C;&#x91C7;&#x7528;&#x2463;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E24;&#x6BB5;&#x7684;&#x4EE3;&#x7801;&#x5199;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5728;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x4E0A;&#x66F4;&#x6E05;&#x6670;&#x4E00;&#x4E9B;&#x3002;&#x6211;&#x662F;&#x8FD9;&#x4E48;&#x7406;&#x89E3;&#x7684;&#x3002; Picasso &#x672C;&#x8282;&#x7684;&#x7ED3;&#x5C3E;&#xFF0C;&#x4ECB;&#x7ECD;&#x4E86;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;Picasso&#xFF0C;&#x4F7F;&#x7528;&#x8BE5;&#x5E93;&#x53EF;&#x4EE5;&#x66FF;&#x4EE3;&#x672C;&#x8282;&#x4E2D;ThumbnailDownloader&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x800C;&#x4E14;&#x4EE3;&#x7801;&#x66F4;&#x7B80;&#x6D01;&#xFF1A; 12345678private class PhotoHolder extends RecyclerView.ViewHolder{ ... public void bindGalleryItem(GalleryItem galleryItem){ Picasso.with(getActivity()).load(galleryItem.getUrl()) .placeHolder(R.drawable.bill_up_close) .into(mItemImageView); }} &#x5176;&#x4E2D;load(...)&#x5B8C;&#x6210;&#x4E0B;&#x8F7D;&#xFF0C;&#x5C14;&#x540E;&#x5C06;&#x4E0B;&#x5230;&#x7684;image&#x901A;&#x8FC7;into(...)&#x66F4;&#x65B0;&#x5230;ImageView&#xFF0C;&#x901A;&#x8FC7;placeHolder(...)&#x8BBE;&#x5B9A;&#x5728;&#x56FE;&#x7247;&#x8FD8;&#x672A;&#x4E0B;&#x5230;&#x65F6;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x8D44;&#x6E90;&#x5360;&#x4F4D;&#x3002; &#x6240;&#x4EE5;&#x5728;&#x81EA;&#x5DF1;&#x9020;&#x8F6E;&#x5B50;&#x4E4B;&#x524D;&#xFF0C;&#x8981;&#x5145;&#x5206;&#x8C03;&#x7814;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6709;&#x66F4;&#x597D;&#x7684;&#x4E1C;&#x897F;&#x53EF;&#x7528;&#x3002; StrictMode &#x5F00;&#x542F;StrictMode&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x4F60;&#x53D1;&#x73B0;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x6F5C;&#x5728;&#x95EE;&#x9898;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; - &#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7684;&#x7F51;&#x7EDC;&#x64CD;&#x4F5C; - &#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x8BFB;&#x5199;&#x78C1;&#x76D8; - Activity&#x5728;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E4B;&#x5916;&#x4F9D;&#x7136;&#x6D3B;&#x7740;&#xFF08;&#x4FD7;&#x79F0;Activity&#x6CC4;&#x9732;&#xFF09; - &#x6CA1;&#x6709;&#x5173;&#x95ED;&#x7684;SQLite cursor - &#x6CA1;&#x6709;&#x4F7F;&#x7528;SSL/TLS&#x7684;&#x660E;&#x6587;&#x7F51;&#x7EDC;&#x4F20;&#x8F93; &#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x8C03;&#x7528;StrictMode.enableDefaults()&#x53EF;&#x4EE5;&#x5F00;&#x542F;StrictMode&#x3002;&#x8BE6;&#x60C5;&#x53C2;&#x89C1;&#x300A;StrictMode&#x300B;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十五]]></title>
    <url>%2F2017%2F11%2F05%2F2017%2F1105AndroidProgrammingBNRG25%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x642D;&#x8D77;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x6846;&#x67B6;&#xFF0C;&#x901A;&#x8FC7;http&#x8BF7;&#x6C42;flickr&#x56FE;&#x7247;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x8054;&#x7F51;&#x64CD;&#x4F5C; - json&#x6570;&#x636E;&#x89E3;&#x6790; - &#x4E3B;&#x7EBF;&#x7A0B;&#x548C;&#x540E;&#x53F0;&#x7EBF;&#x7A0B; &#x8054;&#x7F51;&#x64CD;&#x4F5C; &#x6743;&#x9650;&#x7533;&#x8BF7; &#x8054;&#x7F51;&#x64CD;&#x4F5C;&#x88AB;Android&#x89C6;&#x4E3A;&#x4E00;&#x822C;&#x6027;&#x6743;&#x9650;&#xFF0C;&#x5927;&#x90E8;&#x5206;app&#x90FD;&#x9700;&#x8981;&#x6539;&#x6743;&#x9650;&#x3002;&#x53EA;&#x9700;&#x8981;&#x5728;AndroidManifest.xml&#x4E2D;&#x58F0;&#x660E;&#x8BE5;&#x6743;&#x9650;&#x5373;&#x53EF;&#xFF0C;&#x5728;&#x5B89;&#x88C5;app&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8BE2;&#x95EE;&#x7528;&#x6237;&#x662F;&#x5426;&#x5141;&#x8BB8;&#xFF0C;&#x66F4;&#x52A0;&#x9690;&#x79C1;&#x7684;&#x6743;&#x9650;&#x5E38;&#x5E38;&#x9700;&#x8981;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x7533;&#x8BF7;&#x7684;&#x3002;AndroidManifest.xml&#x7684;&#x58F0;&#x660E;&#x5982;&#x4E0B;&#xFF1A; 12345678&lt;manifest ...&gt; &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt; &lt;application ...&gt; ... &lt;/application&gt;&lt;/manifest&gt; &#x8BF7;&#x6C42;&#x6570;&#x636E; &#x5F88;&#x7A0B;&#x5F0F;&#x5316;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x76F4;&#x63A5;&#x5728;&#x4EE3;&#x7801;&#x91CC;&#x6CE8;&#x91CA;&#x4E86;&#xFF1A; 123456789101112131415161718192021222324// FlickrFetchr.javapublic byte[] getUrlBytes(String urlSpec) throws IOException{ URL url = new URL(urlSpec); // &#x2460; &#x521B;&#x5EFA;&#x8FDE;&#x63A5;&#x5BF9;&#x8C61; HttpURLConnection connection = (HttpURLConnection)url.openConnection(); try{ ByteArrayOutputStream out = new ByteArrayOutputStream(); // &#x2461; &#x53D1;&#x8D77;&#x8FDE;&#x63A5;&#xFF0C;&#x5BF9;&#x4E8E;POST&#x53EF;&#x4EE5;&#x8C03;&#x7528;getOutputStream() InputStream in = connection.getInputStream(); // &#x2462; &#x83B7;&#x5F97;&#x54CD;&#x5E94;&#x7801; if(connection.getResponseCode() != HttpURLConnection.HTTP_OK) { throw new IOException(connection.getResponseMessage() + &quot;: with &quot; + urlSpec); } int bytesRead = 0; byte[] buffer = new byte[1024]; while((bytesRead = in.read(buffer)) &gt; 0){ // &#x2463; &#x8BFB;&#x53D6;&#x6570;&#x636E; out.write(buffer, 0, bytesRead); } out.close(); return out.toByteArray(); }finally { connection.disconnect(); // &#x2464; &#x5173;&#x95ED;&#x8FDE;&#x63A5; }} &#x7EC4;&#x7EC7;URL &#x9700;&#x8981;&#x5427;&#x57DF;&#x540D;&#x3001;&#x53C2;&#x6570;&#x7EC4;&#x7EC7;&#x5728;&#x4E00;&#x8D77;&#xFF1A; 123456789101112131415// FlickrFetchr.javapublic void fetchItems(){ try{ String url = Uri.parse(&quot;https://api.flickr.com/services/rest/&quot;) .buildUpon() .appendQueryParameter(&quot;method&quot;, &quot;flickr.photos.getRecent&quot;) .appendQueryParameter(&quot;api_key&quot;, API_KEY) .appendQueryParameter(&quot;format&quot;, &quot;json&quot;) .appendQueryParameter(&quot;nojsoncallback&quot;, &quot;1&quot;) .appendQueryParameter(&quot;extras&quot;, &quot;url_s&quot;) .build().toString(); String jsonString = getUrlString(url); ... }...} &#x5B83;&#x7EC4;&#x7EC7;&#x8D77;&#x6765;&#x7684;url&#x4E3A;&#xFF1A; https://api.flickr.com/services/rest/?method=flickr.photos.getRecent&amp;api_key=&lt;API_KEY&gt;&amp;format=json&amp;nojsoncallback=1 &#x89E3;&#x6790;Json&#x6570;&#x636E; &#x8FD4;&#x56DE;&#x7684;json&#x6570;&#x636E;&#x5F62;&#x5982;&#xFF1A; 12345678910111213141516171819202122{&quot;photos&quot;:{ &quot;page&quot;:1, &quot;pages&quot;:10, &quot;perpage&quot;:100, &quot;total&quot;:1000, &quot;photo&quot;:[ { &quot;id&quot;:&quot;24560174998&quot;, &quot;owner&quot;:&quot;140909859@N05&quot;, &quot;secret&quot;:&quot;bb960eabc6&quot;, &quot;server&quot;:&quot;4530&quot;, &quot;farm&quot;:5, &quot;title&quot;:&quot;imsi20171115033551&quot;, &quot;ispublic&quot;:1, &quot;isfriend&quot;:0, &quot;isfamily&quot;:0 },..., { &quot;id&quot;:&quot;38431317441&quot;, &quot;owner&quot;:&quot;153803854@N08&quot;, &quot;secret&quot;:&quot;7851f9d792&quot;, &quot;server&quot;:&quot;4581&quot;, &quot;farm&quot;:5,&quot;title&quot;:&quot;\u6797\u90c1\u8ed2_3&quot;, &quot;ispublic&quot;:1, &quot;isfriend&quot;:0, &quot;isfamily&quot;:0 } ] },&quot;stat&quot;:&quot;ok&quot;} &#x89E3;&#x6790;&#x8FD9;&#x6BB5;&#x6570;&#x636E;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819// FlickrFetchr.javaprivate void parseItems(List&lt;GalleryItem&gt; items, JSONObject jsonBody) throws IOException, JSONException{ // &#x89E3;&#x6790;&#x6839;&#x90E8;&#x5B57;&#x5178; JSONObject photosJsonObject = jsonBody.getJSONObject(&quot;photos&quot;); // &#x89E3;&#x6790;photo&#x6570;&#x7EC4; JSONArray photoJsonArray = photosJsonObject.getJSONArray(&quot;photo&quot;); for(int i=0; i&lt;photoJsonArray.length(); i++){ // &#x89E3;&#x6790;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E00;&#x9879; JSONObject photoJsonObject = photoJsonArray.getJSONObject(i); GalleryItem item = new GalleryItem(); item.setId(photoJsonObject.getString(&quot;id&quot;)); item.setCaption(photoJsonObject.getString(&quot;title&quot;)); if(!photoJsonObject.has(&quot;url_s&quot;)){ continue; } item.setUrl(photoJsonObject.getString(&quot;url_s&quot;)); items.add(item); }} &#x4E3B;&#x7EBF;&#x7A0B;&#x548C;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B; Android&#x4E0D;&#x5141;&#x8BB8;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x505A;&#x957F;&#x7A0B;&#x64CD;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x7F51;&#x7EDC;&#x963B;&#x585E;&#x4F1A;&#x5BFC;&#x81F4;NetworkOnMainThreadException&#x5F02;&#x5E38;&#x3002;&#x4E3B;&#x7EBF;&#x7A0B;&#x8D1F;&#x8D23;&#x8FD0;&#x884C;&#x6240;&#x6709;&#x4E0E;UI&#x54CD;&#x5E94;&#x3001;&#x66F4;&#x65B0;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5305;&#x62EC;&#x54CD;&#x5E94;&#x4E0D;&#x540C;&#x7684;UI&#x4E8B;&#x4EF6;&#x2014;&#x2014;&#x542F;&#x52A8;Activity&#x3001;&#x6309;&#x94AE;&#x6309;&#x4E0B;&#x7B49;&#x7B49;&#x3002;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E5F;&#x5E38;&#x5E38;&#x88AB;&#x79F0;&#x4E3A;UI&#x7EBF;&#x7A0B;&#x3002; &#x5F53;Android&#x7684;watchdog&#x53D1;&#x73B0;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x5931;&#x53BB;&#x54CD;&#x5E94;&#xFF0C;&#x5C06;&#x4F1A;&#x89E6;&#x53D1;ANR&#x3002;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;&#x73B0;&#x6210;&#x6765;&#x5B8C;&#x6210;&#x8BF8;&#x5982;&#x7F51;&#x7EDC;&#x64CD;&#x4F5C;&#x8FD9;&#x7C7B;&#x7684;&#x957F;&#x7A0B;&#x64CD;&#x4F5C;&#x3002; &#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF1A; 12345678910111213141516171819// PhotoGalleryFragment.java// &#x2460; &#x5B9A;&#x4E49;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x7C7B;private class FetchItemsTask extends AsyncTask&lt;Void, Void, Void&gt;{ @Override protected Void doInBackground(Void ... params){ // &#x2461; &#x5B9E;&#x73B0;&#x5DE5;&#x4F5C;&#x63A5;&#x53E3; try{ String result = new FlickrFetchr() .getUrlString(&quot;https://www.bignerdranch.com&quot;); ... }... return null; }}@Overridepublic void onCreate(Bundle savedInstanceState){ ... new FetchItemsTask().execute(); // &#x2462; &#x6267;&#x884C;} &#x4ECE;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x56DE;&#x5F52;&#x5230;&#x524D;&#x53F0; &#x5728;&#x672C;&#x8282;&#xFF0C;Fragment&#x88AB;&#x52A0;&#x8F7D;&#x540E;&#xFF0C;&#x9996;&#x5148;&#x542F;&#x52A8;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#xFF0C;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x8BE5;&#x7EBF;&#x7A0B;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x4E0B;&#x8F7D;&#x540E;&#x518D;&#x66F4;&#x65B0;&#x754C;&#x9762;&#xFF0C;&#x600E;&#x4E48;&#x5B8C;&#x6210;&#x7531;&#x540E;&#x53F0;&#x5230;&#x524D;&#x53F0;&#x7684;&#x901A;&#x77E5;&#x5462;&#xFF1F;&#x5728;AsyncTask::doInBackground(...)&#x5B8C;&#x6210;&#x540E;&#xFF0C;AsyncTask::onPostExecute(...)&#x5C06;&#x88AB;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x4E14;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x91CC;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6B63;&#x7B26;&#x5408;&#x6211;&#x4EEC;&#x7684;&#x8BC9;&#x6C42;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8D34;&#x51FA;PhotoGalleryFragment.java&#x7684;&#x5B8C;&#x6574;&#x4EE3;&#x7801;&#xFF0C;&#x6D89;&#x53CA;&#x5230;RecyclerView&#x7684;&#x914D;&#x5408;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x2460;&#x2461;&#x2462;&#x6765;&#x6807;&#x51FA;&#x903B;&#x8F91;&#x987A;&#x5E8F;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485// PhotoGalleryFragment.javapublic class PhotoGalleryFragment extends Fragment { private static final String TAG = &quot;PhotoGalleryFragment&quot;; private RecyclerView mPhotoRecyclerView; private List&lt;GalleryItem&gt; mItems = new ArrayList&lt;&gt;(); private class FetchItemsTask extends AsyncTask&lt;Void, Void, List&lt;GalleryItem&gt;&gt;{ @Override protected List&lt;GalleryItem&gt; doInBackground(Void ... params){ return new FlickrFetchr().fetchItems(); // &#x2461; &#x4E0B;&#x8F7D;&#x6570;&#x636E; } @Override protected void onPostExecute(List&lt;GalleryItem&gt; items){ mItems = items; setupAdapter(); // &#x2462; &#x8FD4;&#x56DE;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x66F4;&#x65B0;&#x754C;&#x9762; } } public static PhotoGalleryFragment newInstance(){ return new PhotoGalleryFragment(); } @Override public void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setRetainInstance(true); new FetchItemsTask().execute();// &#x2460;&#x542F;&#x52A8;&#x540E;&#x53F0;&#x7EBF;&#x7A0B; } @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ View v = inflater.inflate(R.layout.fragment_photo_gallery, container, false); mPhotoRecyclerView = (RecyclerView)v.findViewById(R.id.photo_recycler_view); mPhotoRecyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 3)); setupAdapter(); return v; } private void setupAdapter(){ if(isAdded()){ // &#x2463; &#x8BBE;&#x7F6E;adapter mPhotoRecyclerView.setAdapter(new PhotoAdapter(mItems)); } } private class PhotoHolder extends RecyclerView.ViewHolder{ private TextView mTitleTextView; public PhotoHolder(View itemView){ super(itemView); mTitleTextView = (TextView)itemView; } public void bindGalleryItem(GalleryItem itme){ mTitleTextView.setText(itemView.toString()); } } private class PhotoAdapter extends RecyclerView.Adapter&lt;PhotoHolder&gt;{ private List&lt;GalleryItem&gt; mGalleryItems; public PhotoAdapter(List&lt;GalleryItem&gt; galleryItems){ mGalleryItems = galleryItems; } @Override public PhotoHolder onCreateViewHolder(ViewGroup viewGroup, int viewType){ TextView textView = new TextView(getActivity()); return new PhotoHolder(textView); } @Override public void onBindViewHolder(PhotoHolder photoHolder, int position){ GalleryItem galleryItem = mGalleryItems.get(position); photoHolder.bindGalleryItem(galleryItem); } @Override public int getItemCount(){ return mGalleryItems.size(); } }} &#x6709;&#x51E0;&#x5904;&#x9700;&#x8981;&#x8BF4;&#x660E;&#xFF1A; - FetchItemsTask&#x7C7B;&#x7684;&#x7B2C;1&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x8868;&#x793A;&#x4F20;&#x5165;execute()&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x5C06;&#x88AB;&#x4F20;&#x5165;doInBackground(...)&#x3002;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x4E3A;&#xFF1A; 123456789AsyncTask&lt;String, Void, Void&gt; task = new AsyncTask&lt;String, Void, Void&gt;(){ public Void doInBackground(String ... params){ for(String parameter : params){ Log.i(TAG, &quot;Received parameter:&quot; + parameter); } }}...task.execute(&quot;First parameter&quot;, &quot;Second parameter&quot;, &quot;Etc.&quot;); FetchItemsTask&#x7C7B;&#x7684;&#x7B2C;2&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x7528;&#x6765;&#x8868;&#x793A;&#x8FDB;&#x5EA6;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;publishProgress(...)&#x8BBE;&#x7F6E;&#x8FDB;&#x5EA6;&#xFF0C;UI&#x7EBF;&#x7A0B;&#x5C06;&#x8C03;&#x7528;onProgressUpdate(...)&#x663E;&#x793A;&#x8FDB;&#x5EA6;&#xFF1A; 12345678910111213141516final ProgressBar gestationProgressBar = gestationProgressBar.setMax(42);AsyncTask&lt;Void, Integer, Void&gt; task = new AsyncTask&lt;Void, Integer, Void&gt;(){ public Void doInBackground(Void ... params){ for(int i=0; i&lt;10; i++){ Integer progress = new Integer(i); publishProgress(progress); sleep(1000); } } public void onProgressUpdate(Integer ... params){ int progress = params[0]; gestationProgressBar.setProgress(progress); }}...task.execute(); FetchItemsTask&#x7C7B;&#x7684;&#x7B2C;3&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x8868;&#x793A;doInBackground(...)&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4EE5;&#x53CA;onPostExecute(...)&#x7684;&#x8F93;&#x5165;&#x53C2;&#x6570;&#xFF0C;&#x5F53;doInBackground(...)&#x88AB;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x628A;&#x8FD4;&#x56DE;&#x503C;&#x4F20;&#x5165;onPostExecute(...)&#x3002; &#x2463; &#x5728;&#x8BBE;&#x7F6E;adapter&#x4E4B;&#x524D;&#x5148;&#x8C03;&#x7528;&#x4E86;isAdded()&#xFF0C;&#x7528;&#x6765;&#x5224;&#x65AD;Fragment&#x662F;&#x5426;&#x88AB;attach&#x5230;Activity&#xFF0C;&#x53EA;&#x6709;activity&#x5C31;&#x7EEA;&#x4E86;&#xFF0C;&#x624D;&#x80FD;&#x8BBE;&#x7F6E;adapter&#x3002;&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x505A;&#x8FC7;&#x6B64;&#x5224;&#x65AD;&#x662F;&#x56E0;&#x4E3A;&#x4EE5;&#x524D;fragment&#x7684;&#x51FD;&#x6570;&#x90FD;&#x662F;&#x88AB;activity&#x56DE;&#x8C03;&#x7684;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x80FD;&#x88AB;&#x4F1A;&#x8C03;&#x8BF4;&#x660E;activity&#x4E00;&#x5B9A;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x4E86;&#x3002;&#x800C;&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;fragment&#x7684;&#x51FD;&#x6570;&#x6709;&#x53EF;&#x80FD;&#x88AB;&#x8BE5;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;&#xFF0C;&#x90A3;&#x5C31;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;activity&#x4E00;&#x5B9A;&#x5C31;&#x7EEA;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x6709;isAdded()&#x7684;&#x5224;&#x65AD;&#x3002; &#x7ED3;&#x675F;&#x540E;&#x53F0;&#x7EBF;&#x7A0B; &#x8C03;&#x7528;AsyncTask::cancel(boolean)&#x53EF;&#x4EE5;&#x7EC8;&#x6B62;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A; - AsyncTask::cancel(false)&#x662F;&#x4E00;&#x79CD;&#x66F4;&#x67D4;&#x548C;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5B83;&#x5C06;isCancelled()&#x7F6E;&#x4E3A;true&#xFF0C;&#x5728;doInBackground(...)&#x4F1A;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x503C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x9000;&#x51FA;&#x3002; - AsyncTask::cancel(true)&#x5219;&#x66F4;&#x7C97;&#x66B4;&#xFF0C;&#x5B83;&#x76F4;&#x63A5;&#x7EC8;&#x6B62;&#x7EBF;&#x7A0B;&#xFF0C;&#x5E94;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x8FD9;&#x4E48;&#x4F7F;&#x7528;&#x3002; &#x672C;&#x8282;&#x7684;&#x6700;&#x540E;&#x7B80;&#x5355;&#x63D0;&#x5230;&#x4E86;AsyncTaskLoader&#xFF0C;&#x5F53;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x800C;&#x5BFC;&#x81F4;&#x91CD;&#x5EFA;&#x65F6;&#xFF0C;LoaderManager&#x4F1A;&#x786E;&#x4FDD;loader&#x4E0D;&#x4F1A;&#x56E0;&#x6B64;&#x5BFC;&#x81F4;&#x91CD;&#x5EFA;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x6709;&#x66F4;&#x597D;&#x7684;&#x6570;&#x636E;&#x5EF6;&#x7EED;&#x6027;&#x3002;&#x6B64;&#x5904;&#x9700;&#x8981;&#x8FDB;&#x4E00;&#x6B65;&#x786E;&#x8BA4;&#xFF1A;&#x666E;&#x901A;&#x7684;AsyncTask&#x4E5F;&#x4E0D;&#x4F1A;&#x88AB;&#x91CD;&#x5EFA;&#x5427;&#xFF1F;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十四]]></title>
    <url>%2F2017%2F11%2F04%2F2017%2F1104AndroidProgrammingBNRG24%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x4F8B;&#x7A0B;&#xFF1A;&#x5217;&#x51FA;&#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;app&#xFF0C;&#x70B9;&#x51FB;&#x540E;&#x542F;&#x52A8;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x904D;&#x5386;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x5E94;&#x7528; - &#x4EFB;&#x52A1;&#x548C;&#x8FDB;&#x7A0B; - concurrent documents &#x904D;&#x5386;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x5E94;&#x7528; &#x6240;&#x8C13;&#x7684;&#x201C;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x5E94;&#x7528;&#x201D;&#x662F;&#x6307;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x684C;&#x9762;&#x56FE;&#x6807;&#x6216;&#x8005;launcher&#x56FE;&#x6807;&#x53EF;&#x4EE5;&#x542F;&#x52A8;&#x7684;&#x5E94;&#x7528;&#x3002;&#x8FD9;&#x7C7B;&#x5E94;&#x7528;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x53EF;&#x542F;&#x52A8;&#x7684;&#x4E3B;Activity&#x2014;&#x2014;&#x5373;Activity&#x7684;intent filter&#x5305;&#x542B;MAIN action&#x548C;LAUNCHER category&#xFF1A; 1234567&lt;activity android:name=&quot;.NerdLauncherActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt;&lt;/activity&gt; 1234567891011// &#x6784;&#x9020;&#x67E5;&#x8BE2;&#x7684;IntentIntent startupIntent = new Intent(Intent.ACTION_MAIN);startupIntent.addCategory(Intent.CATEGORY_LAUNCHER);// &#x67E5;&#x8BE2;MAIN/LAUNCHER&#x7684;ActivityPackageManager pm = getActivity().getPackageManager();List&lt;ResolveInfo&gt; activities = pm.queryIntentActivities(startupIntent, 0);...resolveInfo = activities.get(i)PackageManager pm = getActivity().getPackageManager();String appName = resolveInfo.loadLabel(pm).toString(); // &#x83B7;&#x5F97;&#x540D;&#x5B57;mNameTextView.setText(appName); &#x5728;&#x672C;&#x8282;&#x4E2D;&#x7684;&#x5B9E;&#x73B0; &#x672C;&#x8282;&#x4F7F;&#x7528;&#x4E86;RecyclerView&#x6765;&#x5C55;&#x73B0;&#x6240;&#x6709;&#x5E94;&#x7528;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283// NerdLauncherFragment.javapublic class NerdLauncherFragment extends Fragment { private RecyclerView mRecyclerView; private static final String TAG = &quot;NerdLauncherFragment&quot;; public static NerdLauncherFragment newInstance(){ return new NerdLauncherFragment(); } @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ View v = inflater.inflate(R.layout.fragment_nerd_launcher, container, false); mRecyclerView = (RecyclerView)v.findViewById(R.id.app_recycler_view); mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity())); setupAdapter(); return v; } private void setupAdapter(){ Intent startupIntent = new Intent(Intent.ACTION_MAIN); startupIntent.addCategory(Intent.CATEGORY_LAUNCHER); PackageManager pm = getActivity().getPackageManager(); List&lt;ResolveInfo&gt; activities = pm.queryIntentActivities(startupIntent, 0); Collections.sort(activities, new Comparator&lt;ResolveInfo&gt;() { @Override public int compare(ResolveInfo resolveInfo, ResolveInfo t1) { PackageManager pm = getActivity().getPackageManager(); return String.CASE_INSENSITIVE_ORDER.compare(resolveInfo.loadLabel(pm).toString(), t1.loadLabel(pm).toString()); } }); Log.i(TAG, &quot;Found &quot; + activities.size() + &quot; activities.&quot;); // &#x2465; &#x8BBE;&#x7F6E;Adapter mRecyclerView.setAdapter(new ActivityAdapter(activities)); } private class ActivityHolder extends RecyclerView.ViewHolder{ private ResolveInfo mResolveInfo; private TextView mNameTextView; public ActivityHolder(View itemView){ super(itemView); mNameTextView = (TextView)itemView; } // &#x2464; &#x663E;&#x793A;app&#x7684;&#x540D;&#x5B57; public void bindActivity(ResolveInfo resolveInfo){ mResolveInfo = resolveInfo; PackageManager pm = getActivity().getPackageManager(); String appName = mResolveInfo.loadLabel(pm).toString(); mNameTextView.setText(appName); } } // &#x2460; &#x521B;&#x5EFA;Adapter private class ActivityAdapter extends RecyclerView.Adapter&lt;ActivityHolder&gt;{ private final List&lt;ResolveInfo&gt; mActivities; public ActivityAdapter(List&lt;ResolveInfo&gt; activities){ mActivities = activities; } // &#x2461; &#x521B;&#x5EFA;ViewHolder @Override public ActivityHolder onCreateViewHolder(ViewGroup parent, int viewType){ LayoutInflater layoutInflater = LayoutInflater.from(getActivity()); View view = layoutInflater.inflate(android.R.layout.simple_list_item_1, parent, false); return new ActivityHolder(view); } // &#x2462; &#x7ED1;&#x5B9A;ViewHolder @Override public void onBindViewHolder(ActivityHolder holder, int position){ ResolveInfo resolveInfo = mActivities.get(position); holder.bindActivity(resolveInfo); } // &#x2463; &#x8FD4;&#x56DE;item&#x7684;&#x4E2A;&#x6570; @Override public int getItemCount(){ return mActivities.size(); } }} &#x5728;&#x7B14;&#x8BB0;&#x516B;&#xB7;RecyclerView&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x4E2D;&#x5BF9;RecyclerView&#x5DF2;&#x6709;&#x4ECB;&#x7ECD;&#xFF0C;&#x6B64;&#x5904;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002; &#x70B9;&#x51FB;item&#x542F;&#x52A8;app 123456// NerdLauncherFragment.java ActivityInfo activityInfo = mResolveInfo.activityInfo; Intent i = new Intent(Intent.ACTION_MAIN) .setClassName(activityInfo.applicationInfo.packageName, activityInfo.name); startActivity(i); &#x5176;&#x4E2D;&#xFF0C;mResolveInfo&#x662F;PackageManager::queryIntentActivities(...)&#x8FD4;&#x56DE;&#x7684;List&#x7684;&#x5143;&#x7D20;&#xFF1A; List&lt;ResolveInfo&gt; activities = pm.queryIntentActivities(startupIntent, 0);&#x3002; &#x8FD9;&#x91CC;&#x521B;&#x5EFA;&#x4E86;&#x663E;&#x5F0F;Intent&#xFF0C;&#x5E76;&#x542F;&#x52A8;Activity&#x3002;&#x548C;&#x4E4B;&#x524D;&#x7684;&#x663E;&#x5F0F;Intent&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x5199;&#x6CD5;&#x4E3A;&#xFF1A; 12Intent intent = new Intent(getActivity(), CrimePagerActivity.class);startActivity(intent); &#x4EE5;&#x524D;&#x7684;&#x5199;&#x6CD5;&#x662F;&#x5E94;&#x7528;&#x5185;&#x8C03;&#x7528;&#xFF0C;&#x7ED9;&#x51FA;className&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5E94;&#x7528;&#x95F4;&#x8C03;&#x7528;&#xFF0C;&#x9700;&#x8981;&#x7ED9;&#x51FA;&#x5305;&#x540D;&#x548C;&#x7C7B;&#x540D;&#x3002; &#x4EFB;&#x52A1;&#x548C;&#x8FD4;&#x56DE;&#x6808; &#x5728;Android&#x4E0B;&#xFF0C;&#x6BCF;&#x4E2A;&#x4F7F;&#x7528;default launcher&#x6253;&#x5F00;&#x7684;app&#xFF0C;Android&#x4F1A;&#x4E3A;&#x4E4B;&#x521B;&#x5EFA;&#x4EFB;&#x52A1;&#xFF1B;&#x901A;&#x8FC7;&#x672C;&#x8282;&#x7684;NerdLauncher&#x5374;&#x4E0D;&#x4F1A;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x6548;&#x679C;&#x3002; &#x70B9;&#x51FB;&#x25A1;&#x6309;&#x94AE;&#xFF0C;&#x6E05;&#x9664;&#x6389;&#x6240;&#x6709;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x5E94;&#x7528;&#x3002;&#x542F;&#x52A8;NerdLauncher&#xFF0C;&#x518D;&#x542F;&#x52A8;&#x8BA1;&#x7B97;&#x5668;&#xFF0C;&#x70B9;&#x51FB;&#x25A1;&#x6309;&#x94AE;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5F53;&#x524D;&#x8FD0;&#x884C;&#x7684;&#x5E94;&#x7528;&#x53EA;&#x6709;NerdLauncher&#xFF1A; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x25A1;&#x770B;&#x5230;&#x7684;&#x5361;&#x7247;&#x6808;&#x662F;&#x4EFB;&#x52A1;&#x6808;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8FDB;&#x7A0B;&#x3002; &#x4F46;&#x662F;&#x6211;&#x53D1;&#x73B0;&#x8FD9;&#x79CD;&#x73B0;&#x8C61;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x5728;&#x6709;&#x7684;Android&#x7CFB;&#x7EDF;&#x4E0A;&#xFF0C;&#x542F;&#x52A8;&#x4E0D;&#x540C;&#x7684;app&#x8868;&#x73B0;&#x4E0D;&#x4E00;&#x6837;&#xFF1B;&#x540C;&#x4E00;&#x4E2A;app&#x5728;&#x4E0D;&#x540C;&#x7684;Android&#x7CFB;&#x7EDF;&#x4E0A;&#x8868;&#x73B0;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F; &#x8C03;&#x7528;Intent::setFags(Intent.FLAG_ACTIVITY_NEW_TASK)&#x53EF;&#x4EE5;&#x5728;&#x65B0;&#x4EFB;&#x52A1;&#x4E2D;&#x542F;&#x52A8;Activity&#xFF0C;&#x5982;&#x679C;&#x8BE5;Activity&#x5DF2;&#x7ECF;&#x5728;&#x8FD0;&#x884C;&#xFF0C;&#x5219;&#x53EA;&#x662F;&#x5C06;&#x5176;&#x5207;&#x5230;&#x4EFB;&#x52A1;&#x6808;&#x9876;&#xFF1A; 123456// NerdLauncherFragment.javaActivityInfo activityInfo = mResolveInfo.activityInfo;Intent i = new Intent(Intent.ACTION_MAIN) .setClassName(activityInfo.applicationInfo.packageName, activityInfo.name).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);startActivity(i); &#x5C06;NerdLauncher&#x8BBE;&#x7F6E;&#x4E3A;Home Screen &#x8FD9;&#x4E00;&#x8282;&#x7684;&#x5185;&#x5BB9;&#x6709;&#x70B9;&#x70AB;&#x6280;&#x4E86;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E0D;&#x53EF;&#x601D;&#x8BAE;&#xFF0C;&#x5C45;&#x7136;&#x8FD9;&#x4E48;&#x65B9;&#x4FBF;&#x5C31;&#x53EF;&#x4EE5;&#x66F4;&#x6362;&#x684C;&#x9762;&#x3002;&#x4FEE;&#x6539;AndroidManifest.xml&#xFF0C;&#x4E3A;activity&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;category&#xFF1A; 12345678910&lt;activity android:name=&quot;.NerdLauncherActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;category android:name=&quot;android.intent.category.HOME&quot;/&gt; &lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt; &lt;/intent-filter&gt;&lt;/activity&gt; &#x70B9;&#x51FB;&#x25CB;&#x952E;&#xFF0C;&#x7CFB;&#x7EDF;&#x8BE2;&#x95EE;&#x9009;&#x62E9;&#x9ED8;&#x8BA4;Launcher&#x8FD8;&#x662F;NerdLauncher&#xFF1A; &#x8FDB;&#x7A0B; vs &#x4EFB;&#x52A1; &#x8FDB;&#x7A0B;&#x662F;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x8D44;&#x6E90;&#x7684;&#x57FA;&#x672C;&#x5355;&#x4F4D;&#xFF0C;&#x5982;&#x5185;&#x5B58;&#x3001;&#x7F51;&#x7EDC;&#x3001;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#x7B49;&#x3002;&#x800C;&#x4EFB;&#x52A1;&#x662F;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x6982;&#x5FF5;&#xFF0C;&#x4EC5;&#x5305;&#x542B;&#x53EF;&#x80FD;&#x6765;&#x81EA;&#x4E0D;&#x540C;&#x8FDB;&#x7A0B;&#x7684;Activity&#x3002;&#x7CFB;&#x7EDF;&#x4F7F;&#x7528;&#x5E94;&#x7528;&#x540D;&#x6765;&#x547D;&#x540D;&#x8FDB;&#x7A0B;&#x548C;&#x4EFB;&#x52A1;&#xFF0C;&#x8FD9;&#x8BA9;&#x4E8C;&#x8005;&#x5F88;&#x5BB9;&#x6613;&#x88AB;&#x6DF7;&#x6DC6;&#x3002; &#x70B9;&#x51FB;&#x25A1;&#x5220;&#x9664;&#x4EFB;&#x52A1;&#x4F1A;&#x5BFC;&#x81F4;&#x8FDB;&#x7A0B;&#x4E5F;&#x88AB;&#x5220;&#x9664;&#x5417;&#xFF1F; &#x5220;&#x9664;&#x300A;&#x4EFB;&#x52A1;&#x548C;&#x8FD4;&#x56DE;&#x6808;&#x300B;&#x4E2D;.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK)&#x7684;&#x8C03;&#x7528;&#x2014;&#x2014;&#x8BA9;NerdLauncher&#x6BCF;&#x6B21;&#x542F;&#x52A8;Activity&#x65F6;&#x4E0D;&#x8981;&#x8D77;&#x65B0;&#x4EFB;&#x52A1;&#x3002; &#x5148;&#x6E05;&#x7A7A;&#x7CFB;&#x7EDF;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x542F;&#x52A8;&#x8BA1;&#x7B97;&#x5668;&#xFF0C;&#x56DE;&#x5230;&#x684C;&#x9762;&#x8FD0;&#x884C;NerdLauncher&#xFF0C;&#x5728;&#x5176;&#x4E2D;&#x542F;&#x52A8;&#x8BA1;&#x7B97;&#x5668;&#xFF0C;&#x518D;&#x70B9;&#x51FB;&#x25A1;&#xFF0C;&#x5220;&#x9664;&#x8BA1;&#x7B97;&#x5668;&#x4EFB;&#x52A1;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;NerdLauncher&#x4E2D;&#x7684;&#x8BA1;&#x7B97;&#x5668;&#x8FD8;&#x5728;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;&#x7CFB;&#x7EDF;&#x4E0D;&#x4F1A;&#x628A;&#x8FDB;&#x7A0B;&#x5E72;&#x6389;&#x3002; concurrent documents Android Lollipop&#x53CA;&#x4E4B;&#x540E;&#x7684;&#x7248;&#x672C;&#x652F;&#x6301;concurrent documents&#x7684;&#x6982;&#x5FF5;&#x2014;&#x2014;&#x4F7F;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x6253;&#x5F00;&#x591A;&#x4E2A;&#x6587;&#x6863;&#xFF0C;&#x6B64;&#x65F6;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x52A1;&#x6808;&#x4E2D;&#x770B;&#x5230;&#x540C;&#x4E00;&#x4E2A;app Activity&#x7684;&#x591A;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF1A; 1. &#x542F;&#x52A8;Activity&#x65F6;&#xFF0C;&#x5BF9;Intent&#x6DFB;&#x52A0;FLAG_ACTIVITY_NEW_DOCUMENT&#x548C;FLAG_ACTIVITY_MULTIPLE_TASK&#x6807;&#x8BB0;&#xFF1A; 123456ActivityInfo activityInfo = mResolveInfo.activityInfo;Intent i = new Intent(Intent.ACTION_MAIN) .setClassName(activityInfo.applicationInfo.packageName, activityInfo.name).setFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT) .addFlags(Intent. FLAG_ACTIVITY_MULTIPLE_TASK);startActivity(i); &#x5728;NerdLauncher&#x7684;AndroidManifest.xml&#x4E2D;&#x8BBE;&#x7F6E;Activity&#x7684;android:documentLaunchMode&#x5C5E;&#x6027;&#xFF1A; 1234567&lt;activity android:name=&quot;.NerdLauncherActivity&quot; android:documentLaunchMode=&quot;intoExisting&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt;&lt;/activity&gt; &#x5728;&#x300A;&#x6982;&#x89C8;&#x5C4F;&#x5E55;&#x300B;&#x4E2D;&#x5BF9;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x6709;&#x8BE6;&#x7EC6;&#x7684;&#x4ECB;&#x7ECD;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十三]]></title>
    <url>%2F2017%2F11%2F03%2F2017%2F1103AndroidProgrammingBNRG23%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x901A;&#x8FC7;&#x4FEE;&#x6539;drawables&#x8D44;&#x6E90;&#xFF0C;&#x6539;&#x53D8;&#x6309;&#x94AE;&#x5F62;&#x72B6;&#x548C;&#x4EA4;&#x4E92;&#xFF1A;&#x6309;&#x94AE;&#x53D8;&#x6210;&#x5706;&#x5F62;&#xFF0C;&#x70B9;&#x51FB;&#x53D8;&#x6210;&#x7EA2;&#x8272;&#x80CC;&#x666F; &#x4EC5;&#x4FEE;&#x6539;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x5C31;&#x80FD;&#x641E;&#x5B9A;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x633A;&#x9177;&#x7684;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - drawable&#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; - shape drawable&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; - State List Drawable&#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; - &#x6839;&#x636E;&#x5C4F;&#x5BC6;&#x5EA6;&#x5206;&#x5272;apk&#x548C;mipmap&#x8D44;&#x6E90; - 9&#x6BB5;&#x62C9;&#x4F38;&#x56FE;&#x7247; shape&#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; &#x672C;&#x8282;&#x5C06;&#x6309;&#x94AE;&#x5B9A;&#x4E49;&#x6210;&#x5706;&#x5F62;&#xFF0C;&#x9996;&#x5148;&#x9700;&#x8981;&#x5B9A;&#x4E49;drawable&#x8D44;&#x6E90;res/drawable/button_beat_box_normal.xml&#xFF1A; 1234&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:shape=&quot;oval&quot;&gt; &lt;solid android:color=&quot;@color/dark_blue&quot;/&gt;&lt;/shape&gt; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F62;&#x72B6;&#x8D44;&#x6E90;&#xFF0C;Android&#x8FD8;&#x652F;&#x6301;&#x66F4;&#x591A;&#x5F62;&#x72B6;&#xFF0C;&#x53EF;&#x53C2;&#x89C1;&#x300A;&#x53EF;&#x7ED8;&#x5236;&#x5BF9;&#x8C61;&#x8D44;&#x6E90;&#x300B; &#x7B2C;&#x4E8C;&#x6B65;&#x5C31;&#x662F;&#x5728;&#x6309;&#x94AE;&#x4E2D;&#x5E94;&#x7528;&#x6B64;&#x8D44;&#x6E90;&#xFF0C;res/values/styles.xml&#xFF1A; 123456&lt;resources&gt; ... &lt;style name=&quot;BeatBoxButton&quot; parent=&quot;Widget.AppCompat.Button&quot;&gt; &lt;item name=&quot;android:background&quot;&gt;@drawable/button_beat_box_normal&lt;/item&gt; &lt;/style&gt;&lt;/resources&gt; &#x8F7B;&#x677E;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x6548;&#x679C;&#xFF1A; State List &#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; &#x6309;&#x94AE;&#x662F;&#x4E00;&#x4E2A;&#x4E24;&#x6001;&#x4EA4;&#x4E92;&#x63A7;&#x4EF6;&#xFF0C;&#x5206;&#x6309;&#x4E0B;&#x548C;&#x62AC;&#x8D77;&#xFF0C;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x4E24;&#x79CD;&#x72B6;&#x6001;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5C55;&#x73B0;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x7528;&#x5230;Stat List Drawable&#x4E86;&#x3002; &#x2460; &#x521B;&#x5EFA;&#x6309;&#x4E0B;&#x8D44;&#x6E90;res/drawable/button_beat_box_pressed.xml&#xFF1A; 1234&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:shape=&quot;oval&quot;&gt; &lt;solid android:color=&quot;@color/red&quot;/&gt;&lt;/shape&gt; &#x2461; &#x521B;&#x5EFA;state list drawable&#x8D44;&#x6E90;res/drawable/button_beat_box.xml&#xFF1A; 12345&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item android:drawable=&quot;@drawable/button_beat_box_pressed&quot; android:state_pressed=&quot;true&quot;/&gt; &lt;item android:drawable=&quot;@drawable/button_beat_box_normal&quot;/&gt;&lt;/selector&gt; &#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x6001;&#x4E0B;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x7684;drawable&#x8D44;&#x6E90;&#x3002; &#x2462; &#x5C06;state list drawable&#x8D44;&#x6E90;&#x5E94;&#x7528;&#x5230;&#x6309;&#x94AE;res/values/styles.xml&#xFF1A; 123456&lt;resources&gt; ... &lt;style name=&quot;BeatBoxButton&quot; parent=&quot;Widget.AppCompat.Button&quot;&gt; &lt;item name=&quot;android:background&quot;&gt;@drawable/button_beat_box&lt;/item&gt; &lt;/style&gt;&lt;/resources&gt; &#x8FD9;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4E24;&#x6001;&#x4E0D;&#x540C;&#x7684;&#x6548;&#x679C;&#x3002;state list drawable&#x8FD8;&#x652F;&#x6301;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x5305;&#x62EC;disabled&#x3001;focused&#x3001;activated&#x7B49;&#xFF0C;&#x8BE6;&#x60C5;&#x53EF;&#x53C2;&#x89C1;&#x300A;&#x72B6;&#x6001;&#x5217;&#x8868;&#x300B;&#x3002; Layer List &#x8D44;&#x6E90;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528; Layer List&#x53EF;&#x4EE5;&#x4EE4;&#x591A;&#x4E2A;&#x8D44;&#x6E90;&#x5173;&#x8054;&#x5230;&#x540C;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;&#x4E0A;&#xFF0C;&#x6BD4;&#x5982;&#x672C;&#x8282;&#x5F53;&#x6309;&#x94AE;&#x6309;&#x4E0B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9664;&#x4E86;&#x5E0C;&#x671B;&#x80CC;&#x666F;&#x79F0;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x8FD8;&#x60F3;&#x5728;&#x5916;&#x56F4;&#x52A0;&#x4E00;&#x4E2A;&#x7070;&#x8272;&#x7684;&#x73AF;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x53EA;&#x6709;&#x4E00;&#x6B65;&#xFF0C;&#x5728;button_beat_box_pressed.xml&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;layer list&#x5373;&#x53EF;&#xFF1A; 1234567891011121314&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item&gt; &lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:shape=&quot;oval&quot;&gt; &lt;solid android:color=&quot;@color/red&quot;/&gt; &lt;/shape&gt; &lt;/item&gt; &lt;item&gt; &lt;shape android:shape=&quot;oval&quot;&gt; &lt;stroke android:width=&quot;4dp&quot; android:color=&quot;@color/gray&quot;/&gt; &lt;/shape&gt; &lt;/item&gt;&lt;/layer-list&gt; &#x4E8E;&#x662F;&#xFF0C;&#x5F53;&#x6309;&#x94AE;&#x88AB;&#x6309;&#x4E0B;&#x65F6;&#xFF0C;&#x9664;&#x4E86;&#x753B;&#x7B2C;&#x4E00;&#x4E2A;item&#xFF0C;&#x8FD8;&#x4F1A;&#x5728;&#x4E0A;&#x9762;&#x518D;&#x753B;&#x7B2C;&#x4E8C;&#x4E2A;item&#x3002;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; Mipmap&#x8D44;&#x6E90; drawable&#x8D44;&#x6E90;&#x662F;&#x4E0E;&#x5C4F;&#x5E55;&#x5EA6;&#x65E0;&#x5173;&#x7684;&#xFF0C;&#x5176;&#x5B83;&#x7684;&#x6BD4;&#x5982;&#x56FE;&#x7247;&#x8D44;&#x6E90;&#x4F1A;&#x6309;&#x7167;&#x5C4F;&#x5E55;&#x5EA6;&#x63D0;&#x4F9B;&#x5B83;&#x6240;&#x652F;&#x6301;&#x7684;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;apk&#x7684;&#x81A8;&#x80C0;&#xFF0C;&#x5F88;&#x591A;&#x548C;&#x5C4F;&#x5BC6;&#x5EA6;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x5728;&#x9488;&#x5BF9;&#x5177;&#x4F53;&#x8BBE;&#x5907;&#x65F6;&#x5176;&#x5B9E;&#x662F;&#x6CA1;&#x7528;&#x7684;&#x3002;AndroidStudio&#x63D0;&#x4F9B;&#x4E86;apk&#x5206;&#x5272;&#x7684;&#x5DE5;&#x5177;:Build Multiple APKs&#x53EF;&#x4EE5;&#x5C06;apk&#x5206;&#x5272;&#x6210;&#x4F9B;mdpi&#x4F7F;&#x7528;&#x7684;apk&#x3001;&#x4F9B;hdpi&#x4F7F;&#x7528;&#x7684;apk&#x2026;&#x2026; &#x4F46;&#x662F;&#x603B;&#x6709;&#x4F8B;&#x5916;&#xFF0C;&#x6BD4;&#x5982;&#x542F;&#x52A8;&#x56FE;&#x6807;&#x3002;&#x6709;&#x7684;launcher&#x4F1A;&#x4F7F;&#x7528;&#x66F4;&#x9AD8;&#x5BC6;&#x5EA6;&#x7248;&#x672C;&#x7684;&#x56FE;&#x6807;&#x4F5C;&#x4E3A;app&#x7684;&#x542F;&#x52A8;&#x56FE;&#x6807;&#xFF0C;&#x8FD9;&#x6837;&#x80FD;&#x8BA9;&#x56FE;&#x6807;&#x770B;&#x8D77;&#x6765;&#x66F4;&#x6E05;&#x6670;&#x3002;&#x4F8B;&#x5982;&#x5728;hdpi&#x7684;&#x8BBE;&#x5907;&#x4E0B;&#xFF0C;launcher&#x4F1A;&#x4F7F;&#x7528;xdpi&#x56FE;&#x6807;&#x3002;&#x56E0;&#x6B64;&#x6309;&#x7167;&#x5E73;&#x7C73;&#x5EA6;&#x5206;&#x5272;apk&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x5E0C;&#x671B;&#x8FD9;&#x7C7B;&#x8D44;&#x6E90;&#x88AB;&#x5206;&#x5272;&#x3002;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x7C7B;&#x8D44;&#x6E90;&#x653E;&#x5230;res/mipmap&#x4E0B;&#xFF1A; &#x5EFA;&#x8BAE;&#x5728;mipmap&#x4E0B;&#x53EA;&#x653E;&#x542F;&#x52A8;&#x56FE;&#x6807;&#x3002; 9&#x6BB5;&#x62C9;&#x4F38;&#x7684;&#x56FE;&#x7247; &#x5982;&#x679C;&#x6307;&#x5B9A;&#x4E86;9&#x6BB5;&#x62C9;&#x4F38;&#xFF0C;&#x8BE5;&#x56FE;&#x7247;&#x5C31;&#x4E0E;&#x5C4F;&#x5BC6;&#x5EA6;&#x65E0;&#x5173;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x5E94;&#x5F53;&#x653E;&#x5230;res/drawable&#x4E0B;&#x3002;9&#x6BB5;&#x62C9;&#x4F38;&#x7684;&#x56FE;&#x7247;&#x548C;&#x666E;&#x901A;&#x56FE;&#x7247;&#x7684;&#x5DEE;&#x522B;&#x5728;&#x4E8E;&#xFF1A; 1. &#x6587;&#x4EF6;&#x540D;&#x4EE5;.9.png&#x7ED3;&#x5C3E;&#x3002; 2. &#x5728;&#x539F;&#x56FE;&#x8FB9;&#x7F18;&#x591A;&#x51FA;1&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x7528;&#x6765;&#x6307;&#x793A;&#x62C9;&#x4F38;&#x533A;&#x57DF;&#x3002;&#x6539;&#x8FC7;&#x540D;&#x4E4B;&#x540E;&#x7528;AndroidStudio&#x6253;&#x5F00;&#x56FE;&#x7247;&#xFF0C;&#x7F16;&#x8F91;&#x5668;&#x4F1A;&#x652F;&#x6301;&#x8BBE;&#x7F6E;&#x62C9;&#x4F38;&#x533A;&#x57DF;&#x3002; &#x5982;&#x56FE;&#x8C03;&#x6574;&#x9876;&#x90E8;&#x548C;&#x5DE6;&#x4FA7;&#x7684;&#x9ED1;&#x8FB9;&#x4EE5;&#x8BBE;&#x7F6E;&#x62C9;&#x4F38;&#x533A;&#x57DF; &#x6211;&#x53D1;&#x73B0;&#x53F3;&#x4FA7;&#x548C;&#x5E95;&#x90E8;&#x4E5F;&#x6709;&#x9ED1;&#x8FB9;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD9;&#x662F;&#x7528;&#x6765;&#x8BBE;&#x7F6E;&#x6587;&#x5B57;&#x663E;&#x793A;&#x7684;&#x533A;&#x57DF;&#x3002;&#x4F8B;&#x5982;&#x6309;&#x7167;&#x4E0A;&#x9762;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD0;&#x884C;&#x540E;&#x7684;&#x6548;&#x679C;&#x662F;&#xFF1A; &#x5982;&#x679C;&#x628A;&#x5E95;&#x90E8;&#x7684;&#x9ED1;&#x8FB9;&#x4E5F;&#x6536;&#x7A84;&#xFF1A; &#x8FD0;&#x884C;&#x540E;&#x7684;&#x6548;&#x679C;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#xFF1A;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十二]]></title>
    <url>%2F2017%2F11%2F02%2F2017%2F1102AndroidProgrammingBNRG22%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x4ECB;&#x7ECD;&#x4E86;&#x5982;&#x4F55;&#x4FEE;&#x6539;&#x4E00;&#x4E2A;view&#x7684;style&#xFF0C;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x4FEE;&#x6539;theme&#x5F71;&#x54CD;&#x6574;&#x4E2A;app&#x7684;&#x5C55;&#x73B0;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - style&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x5E94;&#x7528; - theme&#x7684;&#x4FEE;&#x6539;&#x548C;&#x8986;&#x76D6; Style &#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5730;&#x4FEE;&#x6539;&#x51E0;&#x4E2A;&#x914D;&#x7F6E;&#x5B8C;&#x6210;style&#x7684;&#x4FEE;&#x6539;&#x3002; &#x9996;&#x5148;&#x5B9A;&#x4E49;style&#xFF1A; styles.xml 12345678910&lt;resources&gt;... &lt;style name=&quot;BeatBoxButton&quot;&gt; &lt;item name=&quot;android:background&quot;&gt;@color/dark_blue&lt;/item&gt; &lt;/style&gt; &lt;style name=&quot;BeatBoxButton.Strong&quot;&gt; &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt; &lt;/style&gt;&lt;/resources&gt; &#x5728;&#x8FD9;&#x91CC;&#x6DFB;&#x52A0;style&#xFF0C;&#x5176;&#x4E2D;BeatBoxButton.Strong&#x8868;&#x793A;&#x7EE7;&#x627F;&#x81EA;BeatBoxButton&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x7B49;&#x4EF7;&#x7684;&#x5199;&#x6CD5;&#x662F;&#xFF1A; 1234&lt;style name=&quot;StrongBeatBoxButton&quot;parent=&quot;@string/BeatBoxButton&quot;&gt; &lt;item name=&quot;android:textStyle&quot;&gt;bold&lt;/item&gt;&lt;/style&gt; &#x5C06;&#x5B9A;&#x4E49;&#x7684;&#x5E94;&#x7528;&#x5230;Button&#xFF1A; 1234&lt;Button style=&quot;@style/BeatBoxButton.Strong&quot; ... tools:text=&quot;Sound name&quot;/&gt; &#x5F88;&#x5FEB;&#x5C31;&#x80FD;&#x5F97;&#x5230;&#x80CC;&#x666F;&#x8272;&#x4E3A;&#x84DD;&#x8272;&#xFF0C;&#x5B57;&#x4F53;&#x52A0;&#x7C97;&#x7684;&#x6309;&#x94AE;&#xFF1A; Theme &#x4F7F;&#x7528;style&#x9700;&#x8981;&#x9488;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;wdiget&#x8BBE;&#x7F6E;&#xFF0C;&#x800C;theme&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x5957;&#x81EA;&#x52A8;&#x5E94;&#x7528;&#x4E8E;app&#x6240;&#x6709;wdiget&#x7684;&#x5C5E;&#x6027;&#x3002;&#x5728;&#x300A;&#x7B14;&#x8BB0;&#x4E5D;&#xB7;Styles-themes&#x548C;theme-attributes&#x300B;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;theme&#x5B9A;&#x4E49;&#x5728;AndroidManifest.xml&#xFF1A; 12345678&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.bnrg.beatbox&quot;&gt; &lt;application ... android:theme=&quot;@style/AppTheme&quot;&gt; ... &lt;/application&gt;&lt;/manifest&gt; AppTheme&#x5B9A;&#x4E49;&#x5728;res/values/styles.xml&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 12345678910&lt;resources&gt; &lt;!-- Base application theme. --&gt; &lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat&quot;&gt; &lt;!-- Customize your theme here. --&gt; &lt;item name=&quot;colorPrimary&quot;&gt;@color/red&lt;/item&gt; &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/dark_red&lt;/item&gt; &lt;item name=&quot;colorAccent&quot;&gt;@color/gray&lt;/item&gt; &lt;/style&gt; ...&lt;/resources&gt; &#x5F62;&#x5F0F;&#x4E0A;&#xFF0C;theme&#x5C31;&#x662F;&#x4E00;&#x4E2A;style&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x5B9A;&#x4E49;&#x7684;&#x8303;&#x56F4;&#x6BD4;style&#x66F4;&#x5E7F;&#x3002;AppTheme&#x7EE7;&#x627F;&#x81EA;Theme.AppCompat&#xFF0C;&#x8FD9;&#x662F;&#x88AB;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x7248;&#x672C;&#xFF0C;AppCompat&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;theme&#xFF1A; - Theme.AppCompat &#x9ED1;&#x8272;&#x4E3B;&#x9898; - Theme.AppCompat.Light &#x6D45;&#x8272;&#x4E3B;&#x9898; - Theme.AppCompat.LightDark &#x7070;&#x8272;&#x4E3B;&#x9898; &#x672C;&#x8282;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5C5E;&#x6027;&#xFF1A; - colorPrimary &#x662F;app&#x7684;&#x4E3B;&#x8272;&#x8C03;&#xFF0C;&#x4E3B;&#x8981;&#x5E94;&#x7528;&#x4E8E;toolbar&#x7684;&#x80CC;&#x666F; - colorPrimaryDark &#x7528;&#x4E8E;&#x72B6;&#x6001;&#x680F;&#xFF0C;&#x901A;&#x5E38;&#x6BD4;colorPrimary&#x6DF1;&#x4E00;&#x70B9; - colorAccent &#x5E94;&#x5F53;&#x4E0E;colorPrimary&#x5F62;&#x6210;&#x9C9C;&#x660E;&#x5BF9;&#x6BD4;&#xFF0C;&#x5B83;&#x7528;&#x4E8E;&#x4E3A;&#x4E00;&#x4E9B;widget&#x6D82;&#x8272;&#xFF0C;&#x5728;&#x672C;&#x8282;&#x4E2D;&#x6CA1;&#x6709;&#x4F53;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x56E0;&#x4E3A;Button&#x4E0D;&#x652F;&#x6301;&#x6D82;&#x8272;&#x3002; &#x901A;&#x5E38;&#x5728;&#x8BBE;&#x7F6E;app&#x4E3B;&#x9898;&#x65F6;&#x5E94;&#x5F53;&#x540C;&#x65F6;&#x5B8C;&#x6210;&#x8FD9;&#x4E09;&#x4E2A;&#x5C5E;&#x6027;&#xFF0C;&#x4ED6;&#x4EEC;&#x76F8;&#x4E92;&#x914D;&#x5408;&#x5F62;&#x6210;app&#x7684;&#x57FA;&#x672C;&#x914D;&#x8272;&#x3002; &#x8986;&#x76D6;theme&#x4E2D;&#x7684;&#x5C5E;&#x6027; &#x4FEE;&#x6539;theme&#x4E2D;&#x67D0;&#x4E2A;&#x5C5E;&#x6027;&#x662F;&#x4E2A;&#x633A;&#x9EBB;&#x70E6;&#x7684;&#x4E8B;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5B8C;&#x6574;&#x7684;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x89E3;&#x91CA;&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5728;&#x4EE3;&#x7801;&#x91CC;&#x627E;&#x3002;&#x672C;&#x8282;&#x4FEE;&#x6539;&#x7684;&#x662F;&#x7A97;&#x4F53;&#x7684;&#x80CC;&#x666F;&#x8272;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x4FEE;&#x6539;&#x67D0;&#x4E00;&#x4E2A;widget&#xFF0C;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x5176;android:background&#x5C5E;&#x6027;&#xFF0C;&#x5728;theme&#x4E2D;&#x4FEE;&#x6539;&#x7684;&#x9EBB;&#x70E6;&#x5728;&#x4E8E;&#x8981;&#x5148;&#x627E;&#x5230;&#x8BE5;&#x5C5E;&#x6027;&#x5BF9;&#x5E94;&#x7684;&#x5173;&#x952E;&#x5B57;&#x3002;&#x5728;res/values/styles.xml&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF1A;AppTheme&#x7EE7;&#x627F;&#x81EA;Theme.AppCompat 123&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat&quot;&gt; ... &lt;/style&gt; &#x2318;+&#x53F3;&#x952E;Theme.AppCompat&#xFF0C;&#x627E;&#x5230;&#x5176;&#x5B9A;&#x4E49;&#xFF0C;&#x53D1;&#x73B0;&#x5B83;&#x53C8;&#x7EE7;&#x627F;&#x81EA;Base.Theme.AppCompat&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0A;&#x627E;&#xFF0C;&#x53D1;&#x73B0;&#x4ED6;&#x4EEC;&#x7684;&#x7EE7;&#x627F;&#x8109;&#x7EDC;&#x4E3A;&#xFF1A;AppTheme &gt; Theme.AppCompat &gt; Base.Theme.AppCompat &gt; Base.V7.Theme.AppCompat &gt; Platform.AppCompat&#xFF08;&#x4E2D;&#x95F4;&#x6709;&#x591A;&#x9009;&#x65F6;&#x9009;&#x62E9;.../values/values.xml&#xFF09;&#xFF0C;&#x6700;&#x540E;&#x5728;&#x8FD9;&#x91CC;&#x627E;&#x5230;&#x4E86;android:windowBackground&#x5C5E;&#x6027;&#xFF0C;&#x6839;&#x636E;&#x5B57;&#x9762;&#x610F;&#x601D;&#x731C;&#x6D4B;&#x4ED6;&#x5C31;&#x662F;&#x7528;&#x6765;&#x5B9A;&#x4E49;&#x7A97;&#x4F53;&#x80CC;&#x666F;&#x8272;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x5728;res/values/styles.xml&#x4E2D;&#x4FEE;&#x6539;&#x5982;&#x4E0B;&#xFF1A; 1234&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat&quot;&gt; ... &lt;item name=&quot;android:windowBackground&quot;&gt;@color/soothing_blue&lt;/item&gt;&lt;/style&gt; &#x8FD9;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4FEE;&#x6539;theme&#x4E2D;&#x7684;&#x9ED8;&#x8BA4;&#x5C5E;&#x6027;&#x3002; &#x6309;&#x7167;&#x540C;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x672C;&#x8282;&#x8FD8;&#x8986;&#x76D6;&#x4E86;&#x6309;&#x94AE;&#x7684;&#x5C5E;&#x6027;&#xFF1A; 1. &#x627E;&#x5230;&#x7EE7;&#x627F;&#x5173;&#x7CFB;AppTheme &gt; Theme.AppCompat &gt; Base.Theme.AppCompat &gt; Base.V7.Theme.AppCompat 2. &#x627E;&#x5230;&#x6309;&#x94AE;&#x98CE;&#x683C;&#x5B9A;&#x4E49;&#xFF1A; 123456&lt;style name=&quot;Base.V7.Theme.AppCompat&quot; parent=&quot;Platform.AppCompat&quot;&gt; ... &lt;!-- Button styles --&gt; &lt;item name=&quot;buttonStyle&quot;&gt;@style/Widget.AppCompat.Button&lt;/item&gt; ...&lt;/style&gt; &#x7EE7;&#x7EED;&#x627E;&#x7EE7;&#x627F;&#x5173;&#x7CFB;Widget.AppCompat.Button &gt; Base.Widget.AppCompat.Button &#x627E;&#x5230;&#x6309;&#x94AE;&#x5C5E;&#x6027;&#x5B9A;&#x4E49;&#xFF1A; 12345678&lt;style name=&quot;Base.Widget.AppCompat.Button&quot; parent=&quot;android:Widget&quot;&gt; &lt;item name=&quot;android:background&quot;&gt;@drawable/abc_btn_default_mtrl_shape&lt;/item&gt; &lt;item name=&quot;android:textAppearance&quot;&gt;?android:attr/textAppearanceButton&lt;/item&gt; &lt;item name=&quot;android:minHeight&quot;&gt;48dip&lt;/item&gt; &lt;item name=&quot;android:minWidth&quot;&gt;88dip&lt;/item&gt; &lt;item name=&quot;android:focusable&quot;&gt;true&lt;/item&gt; &lt;item name=&quot;android:clickable&quot;&gt;true&lt;/item&gt; &lt;item name=&quot;android:gravity&quot;&gt;center_vertical|center_horizontal&lt;/item&gt; &#x5728;res/values/styles.xml&#x4E2D;&#x8986;&#x76D6;&#x8BE5;&#x5C5E;&#x6027;&#xFF1A; 12345678&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat&quot;&gt; ... &lt;item name=&quot;buttonStyle&quot;&gt;@style/BeatBoxButton&lt;/item&gt;&lt;/style&gt;&lt;style name=&quot;BeatBoxButton&quot; parent=&quot;Widget.AppCompat.Button&quot;&gt; &lt;item name=&quot;android:background&quot;&gt;@color/dark_blue&lt;/item&gt;&lt;/style&gt; BeatBoxButton&#x7EE7;&#x627F;&#x81EA;Widget.AppCompat.Button&#xFF0C;&#x53EA;&#x4FEE;&#x6539;&#x4E86;android:background&#x5C5E;&#x6027;&#x3002;&#x7136;&#x540E;&#x5728;AppTheme&#x4E2D;&#x5C06;&#x8BE5;&#x98CE;&#x683C;&#x5E94;&#x7528;&#x5230;buttonStyle&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x6709;&#x7684;&#x5C5E;&#x6027;&#x662F;&#x4EE5;android:&#x4E3A;&#x524D;&#x7F00;&#x7684;&#xFF0C;&#x8868;&#x793A;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x662F;&#x56FA;&#x5316;&#x5728;AndroidOS&#x4E2D;&#xFF1B;&#x6709;&#x7684;&#x6CA1;&#x6709;&#xFF0C;&#x5982;buttonStyle&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6765;&#x81EA;AppCompat&#xFF0C;&#x800C;&#x4E0D;&#x662F;AndroidOS&#x3002; &#x5305;&#x5185;&#x7EE7;&#x627F;&#x548C;&#x4FDD;&#x5916;&#x7EE7;&#x627F; &#x5728;Style&#x4E00;&#x8282;&#x4E2D;&#x63D0;&#x5230;&#x4ECE;style&#x7684;&#x547D;&#x540D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x5B83;&#x6D3E;&#x751F;&#x81EA;&#x54EA;&#x91CC;&#xFF0C;&#x5B83;&#x7684;&#x7B49;&#x4EF7;&#x505A;&#x6CD5;&#x662F;&#x6DFB;&#x52A0;parent&#x5C5E;&#x6027;&#x663E;&#x5F0F;&#x5B9A;&#x4E49;&#x6D3E;&#x751F;&#x6E90;&#x3002;&#x4F46;&#x662F;&#x5728;&#x67E5;&#x627E;&#x7CFB;&#x7EDF;style&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6709;&#x7684;&#x540D;&#x5B57;&#x5DF2;&#x7ECF;&#x4F53;&#x73B0;&#x4E86;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x8FD8;&#x4F1A;&#x663E;&#x5F0F;&#x6DFB;&#x52A0;parent&#x5C5E;&#x6027;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;`style name=&quot;Platform.AppCompat&quot; parent=&quot;android:Theme&quot;&gt;&#x6B64;&#x65F6;&#x4F18;&#x5148;&#x6309;&#x7167;&#x663E;&#x5F0F;&#x58F0;&#x660E;&#x5B9E;&#x73B0;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x3002; &#x901A;&#x8FC7;&#x547D;&#x540D;&#x6307;&#x5B9A;&#x7236;theme&#x7684;&#x505A;&#x6CD5;&#x4EC5;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x5305;&#x5185;&#x751F;&#x6548;&#xFF0C;&#x4E00;&#x65E6;&#x8DE8;&#x5305;&#x7EE7;&#x627F;&#xFF0C;&#x4F8B;&#x5982;AppCompat&#x7EE7;&#x627F;android&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x90A3;&#x5C31;&#x9700;&#x8981;&#x663E;&#x5F0F;&#x6307;&#x5B9A;parent&#x5C5E;&#x6027;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十一]]></title>
    <url>%2F2017%2F11%2F01%2F2017%2F1101AndroidProgrammingBNRG21%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x7684;&#x5185;&#x5BB9;&#x6709;&#x70B9;&#x6742;&#xFF0C;&#x70B9;&#x51FB;&#x4E86;&#x6309;&#x94AE;&#x540E;&#x53EF;&#x4EE5;&#x64AD;&#x653E;&#x97F3;&#x9891;&#x4E86;&#x3002;&#x672C;&#x7AE0;&#x8FD8;&#x5F15;&#x5165;&#x4E86;mockitot&#x3001;hamcrest&#x7B49;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002;&#x8FDB;&#x4E00;&#x6B65;&#x5B8C;&#x5584;&#x4E86;Data Binding&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#xFF0C;&#x5728;XML&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#x4E3A;widget&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x3002;&#x6700;&#x540E;&#x8FD8;&#x5F15;&#x5165;&#x4E86;retain Fragment&#xFF0C;&#x4E3A;&#x8F6C;&#x5C4F;&#x91CD;&#x5EFA;&#x65F6;&#x4FDD;&#x7559;&#x73B0;&#x573A;&#x63D0;&#x4F9B;&#x4E86;&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6848;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x64AD;&#x653E;&#x97F3;&#x9891; - &#x4F7F;&#x7528;JUnit&#x7F16;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5; - &#x4F7F;&#x7528;mockito&#x548C;hamcrest - &#x4F7F;&#x7528;Data Binding&#x5728;XML&#x4E2D;&#x4E3A;widget&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570; - retain Fragment &#x64AD;&#x653E;&#x97F3;&#x9891; SoundPool&#x53EF;&#x4EE5;&#x52A0;&#x8F7D;&#x591A;&#x6761;&#x97F3;&#x9891;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x63A7;&#x5236;&#x540C;&#x65F6;&#x64AD;&#x653E;&#x7684;&#x6570;&#x91CF; 123456789mSoundPool = new SoundPool(MAX_SOUNDS, AudioManager.STREAM_MUSIC, 0);//&#x2460;...AssetFileDescriptor afd = mAssets.openFd(sound.getAssetPath());int soundId = mSoundPool.load(afd, 1); // &#x2461;sound.setSoundId(soundId);...Integer soundId = sound.getSoundId();mSoundPool.play(soundId, 1.0f, 1.0f, 1, 0, 1.0f); // &#x2462; 1.&#x6784;&#x9020;SoundPool&#x5B9E;&#x4F8B; SoundPool&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49;&#x5206;&#x522B;&#x4E3A;&#xFF1A; 1. &#x540C;&#x65F6;&#x64AD;&#x653E;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x8FC7;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;SoundPool&#x5C06;&#x505C;&#x6B62;&#x64AD;&#x653E;&#x961F;&#x5217;&#x4E2D;&#x9996;&#x4E2A;&#x97F3;&#x9891; 2. &#x97F3;&#x9891;&#x6D41;&#x7C7B;&#x578B;&#xFF0C;&#x5B89;&#x5353;&#x5B9A;&#x4E49;&#x4E86;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x97F3;&#x9891;&#x6D41;&#xFF0C;&#x6BCF;&#x79CD;&#x7C7B;&#x578B;&#x6709;&#x5404;&#x81EA;&#x72EC;&#x7ACB;&#x7684;&#x97F3;&#x91CF;&#x8BBE;&#x7F6E;&#x3002;&#x5F53;&#x5173;&#x95ED;&#x97F3;&#x4E50;&#x97F3;&#x91CF;&#x65F6;&#xFF0C;&#x95F9;&#x949F;&#x97F3;&#x91CF;&#x4E0D;&#x53D7;&#x5F71;&#x54CD;&#xFF0C;&#x5C31;&#x662F;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x5C5E;&#x4E8E;&#x4E0D;&#x540C;&#x7684;&#x97F3;&#x9891;&#x6D41;&#x7C7B;&#x578B;&#x3002; 3. &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x88AB;&#x5FFD;&#x7565;&#x3002; 2.&#x52A0;&#x8F7D;&#x97F3;&#x9891;&#x6587;&#x4EF6; SoundPool::load(...)&#x52A0;&#x8F7D;&#x97F3;&#x9891;&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x5907;&#x64AD;&#x653E;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;ID&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5728;&#x64AD;&#x653E;&#x7684;&#x65F6;&#x5019;&#x5C06;&#x4F7F;&#x7528;&#x8BE5;ID&#x3002; 3.&#x64AD;&#x653E;&#x97F3;&#x9891;&#x6587;&#x4EF6; SoundPool::play(...)&#x64AD;&#x653E;&#x97F3;&#x9891;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;6&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A; 1. &#x7531;SoundPool::load(...)&#x8FD4;&#x56DE;&#x7684;soundID 2. &#x5DE6;&#x58F0;&#x9053;&#x58F0;&#x97F3; 3. &#x53F3;&#x58F0;&#x9053;&#x58F0;&#x97F3; 4. &#x5FFD;&#x7565; 5. &#x662F;&#x5426;&#x5FAA;&#x73AF;&#x64AD;&#x653E; 6. &#x64AD;&#x653E;&#x901F;&#x7387; 4.&#x91CA;&#x653E;&#x97F3;&#x9891;&#x6587;&#x4EF6; 12345678910111213141516171819// BeatBox.javapublic class BeatBox { ... public void release(){ mSoundPool.release(); } ...}// BeatBoxFragment.javapublic class BeatBoxFragment extends Fragment { ... @Override public void onDestroy(){ super.onDestroy(); mBeatBox.release(); } ...} &#x5F53;BeatBoxFragment&#x88AB;&#x9500;&#x6BC1;&#x65F6;&#xFF0C;&#x8C03;&#x7528;SoundPool::release()&#xFF0C;&#x5982;&#x679C;&#x64AD;&#x653E;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x8F83;&#x957F;&#x7684;&#x97F3;&#x9891;&#xFF0C;&#x5C1A;&#x672A;&#x7ED3;&#x675F;&#x6309;&#x4E0B;Back&#x6309;&#x94AE;&#xFF0C;&#x5B83;&#x4F1A;&#x786E;&#x4FDD;&#x64AD;&#x653E;&#x505C;&#x6B62;&#xFF0C;&#x5E76;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#x3002; &#x4F7F;&#x7528;mockito&#x548C;hamcrest&#x8FDB;&#x884C;UnitTest &#x5F15;&#x5165;mockito&#x548C;hamcrest&#x4F9D;&#x8D56; mockito&#x5E93;&#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x7B80;&#x5355;&#x7684;mock&#x5BF9;&#x8C61;&#xFF1B;hamcrest&#x5E93;&#x7528;&#x4E8E;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#x7684;&#x7B80;&#x5316;&#x5904;&#x7406;&#x3002;&#x9996;&#x5148;&#x8981;&#x5728;&#x5DE5;&#x7A0B;&#x4E2D;&#x6DFB;&#x52A0;&#x5BF9;&#x4ED6;&#x4EEC;&#x7684;&#x4F9D;&#x8D56;&#x3002;&#x53F3;&#x952E;app &gt; Open Module Settings &gt; app &gt; Dependencies &gt; &#x6DFB;&#x52A0;&#xFF1A; &#x67E5;&#x627E;&#x5E76;&#x9009;&#x62E9;mockito&#x548C;hamcrest&#xFF1A; &#x4FEE;&#x6539;Gradle Scripts/build.gradle(Module:app)&#xFF1A; 12345678...dependencies { compile &apos;com.android.support:appcompat-v7:26.0.2&apos; compile &apos;com.android.support:recyclerview-v7:26.0.2&apos; ... testCompile &apos;org.mockito:mockito-core:2.12.0&apos; testCompile &apos;org.hamcrest:hamcrest-junit:2.0.0.0&apos;} testCompile&#x662F;&#x544A;&#x8BC9;&#x7F16;&#x8BD1;&#x5668;&#x8FD9;&#x4E24;&#x4E2A;&#x4F9D;&#x8D56;&#x4EC5;&#x7528;&#x4E8E;&#x9879;&#x76EE;&#x4E2D;&#x7684;test&#x6A21;&#x5757;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4E0D;&#x4F1A;&#x5728;apk&#x4E2D;&#x6253;&#x5165;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x4EE3;&#x7801;&#x3002; &#x4E3A;&#x6307;&#x5B9A;&#x7684;class&#x6DFB;&#x52A0;UT &#x6253;&#x5F00;&#x5F85;UT&#x7684;&#x7C7B;&#x6587;&#x4EF6;&#xFF0C;&#x2318;+Shift+T &gt; Create New Test... &#x52FE;&#x9009;setUp/@Before &gt; OK &#x9009;&#x62E9;.../app/src/test/java/com/bnrg/beatbox&#xFF1A; &#x5176;&#x4E2D;androidTest&#x662F;&#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#xFF0C;&#x5B83;&#x7684;case&#x662F;&#x4EE5;APK&#x7684;&#x5F62;&#x5F0F;&#x8DD1;&#x5728;&#x8BBE;&#x5907;&#x4E0A;&#xFF0C;&#x5B83;&#x9700;&#x8981;Android&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x5E93;&#xFF1B;&#x800C;test&#x662F;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;&#x5B83;&#x662F;&#x8DD1;&#x5728;&#x672C;&#x673A;&#xFF0C;&#x4E0D;&#x4F9D;&#x8D56;Android&#x8FD0;&#x884C;&#x65F6;&#x5E93;&#x3002; &#x7F16;&#x5199;UT 1.setUp()&#x51FD;&#x6570; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x5F85;&#x6D4B;class&#xFF0C;&#x90FD;&#x9700;&#x8981;&#x505A;&#x4E00;&#x4E9B;&#x76F8;&#x4F3C;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#xFF1A;&#x521B;&#x5EFA;&#x5F85;&#x6D4B;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x548C;&#x5B83;&#x4F9D;&#x8D56;&#x7684;&#x5176;&#x5B83;&#x5B9E;&#x4F8B;&#x3002;JUnit&#x4E3A;&#x8FD9;&#x7C7B;&#x5DE5;&#x4F5C;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x5B57;@Before&#xFF0C;&#x5B83;&#x6807;&#x8BC6;&#x7684;&#x51FD;&#x6570;&#x5C06;&#x786E;&#x4FDD;&#x5728;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x6267;&#x884C;&#x524D;&#x88AB;&#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x6211;&#x4EEC;&#x7EA6;&#x5B9A;&#x4FD7;&#x6210;&#x5730;&#x628A;&#x5B83;&#x6807;&#x8BC6;&#x7684;&#x51FD;&#x6570;&#x53D6;&#x540D;&#x4E3A;setUp()&#x3002; 2.&#x4F7F;&#x7528;mocked&#x4F9D;&#x8D56;&#x64B0;&#x5199;case &#x5728;SoundViewModelTest::setUp()&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x521B;&#x5EFA;SoundViewModel&#x5B9E;&#x4F8B;&#xFF1A; 1SoundViewModel viewModel = new SoundViewModel(new BeatBox()); &#x5B83;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4F9D;&#x8D56;&#x4E8E;BeatBox&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x540E;&#x8005;&#x6302;&#x4E86;&#xFF0C;&#x5B83;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E5F;&#x5C06;&#x5931;&#x8D25;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;mocked BeatBox&#x5B9E;&#x4F8B;&#xFF0C;&#x8FD9;&#x4E2A;mocked&#x5B9E;&#x4F8B;&#x5176;&#x5B9E;&#x662F;BeatBox&#x5B50;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6240;&#x6709;&#x7684;&#x51FD;&#x6570;&#x90FD;&#x4E0D;&#x4F1A;&#x5E72;&#x6D3B;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x4E0D;&#x4F1A;&#x6302;&#x6389;&#x3002; 1234567891011121314151617181920212223// SoundViewModelTest.javapublic class SoundViewModelTest { private BeatBox mBeatBox; private Sound mSound; private SoundViewModel mSubject; @Before public void setUp() throws Exception { mBeatBox = mock(BeatBox.class); // &#x521B;&#x5EFA;mock&#x5B9E;&#x4F8B; mSound = new Sound(&quot;assetPath&quot;); mSubject = new SoundViewModel(mBeatBox); mSubject.setSound(mSound); } @Test public void exposesSoundNameAsTitle(){ assertThat(mSubject.getTitle(), is(mSound.getName())); // &#x2460; } @Test public void callsBeatBoxPlayOnButtonClicked(){ mSubject.onButtonClicked(); verify(mBeatBox).play(mSound); // &#x2461; }} &#x6240;&#x6709;&#x7684;test case&#x51FD;&#x6570;&#x9700;&#x8981;&#x6807;&#x6CE8;&#x4E3A;@Test&#x3002; &#x2460;assertThat(...)&#x548C;is(...)&#x5747;&#x6765;&#x81EA;hamcrest&#x5E93;&#xFF0C;&#x7528;&#x6765;&#x505A;TC&#x65AD;&#x8A00;&#x3002; &#x2461;&#x9A8C;&#x8BC1;&#x4E86;SoundViewModel::onButtonClicked()&#x51FD;&#x6570;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 123456789// SoundViewModel.javapublic class SoundViewModel extends BaseObservable{ private Sound mSound; private BeatBox mBeatBox; ... public void onButtonClicked(){ mBeatBox.play(mSound); }} verify(mBeatBox).play(mSound);&#x7528;&#x6765;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x8C03;&#x7528;&#x4E86;mBeatBox.play(...)&#x5E76;&#x4F20;&#x5165;mSound&#x53C2;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;mSubject::mSound&#x662F;&#x4E00;&#x4E2A;mock&#x5BF9;&#x8C61;&#xFF0C;Mockito&#x4F1A;&#x8DDF;&#x8E2A;&#x6240;&#x6709;mock&#x5BF9;&#x8C61;&#x88AB;&#x8C03;&#x7528;&#x4E86;&#x4EC0;&#x4E48;&#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x3002;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x4E3A;&#x4E4B;&#x4F7F;&#x7528;verify(...)&#x6765;&#x9A8C;&#x8BC1;&#x3002; 3.&#x8FD0;&#x884C;testcase &#x53F3;&#x952E;app/java// &gt; Run &apos;Test in &quot;beatbox&quot;&apos;&#xFF0C;&#x6211;&#x9047;&#x5230;&#x4E86;&#x9519;&#x8BEF; !!! JUnit version 3.8 or later expected&#x3002; &#x4FEE;&#x6539;Gradle Scripts/build.gradle(Module:app)&#xFF1A; 12345dependencies { ... testCompile &apos;junit:junit:4.12&apos; ...} &#x628A;&#x539F;&#x5148;&#x7684;testImplementation&#x6539;&#x4E3A;testCompile&#x5373;&#x53EF;&#x3002; &#x4F7F;&#x7528;Espresso&#x96C6;&#x6210;&#x6D4B;&#x8BD5; &#x5728;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x7C7B;&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x76EE;&#x7684;&#x662F;&#x9A8C;&#x8BC1;app&#x6309;&#x7167;&#x9884;&#x671F;&#x7684;&#x65B9;&#x5F0F;&#x5DE5;&#x4F5C;&#xFF1B;&#x5728;&#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x6574;&#x4E2A;app&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x76EE;&#x7684;&#x662F;&#x9A8C;&#x8BC1;app&#x505A;&#x4E86;&#x9884;&#x671F;&#x7684;&#x5DE5;&#x4F5C;&#x3002; Espresso&#x662F;Google&#x53D1;&#x5E03;&#x7684;&#x4E00;&#x5957;UI&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF0C;&#x5728;app/build.gradle&#x4E2D;&#x6DFB;&#x52A0;&#xFF1A; androidTestCompile &apos;com.android.support.test.espresso:espresso-core:3.0.1 &#x5F15;&#x5165;&#x8BE5;&#x5E93;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E66;&#x4E2D;&#x7ED9;&#x51FA;&#x7684;&#x4E00;&#x6BB5;&#x5B9E;&#x4F8B;&#xFF1A; 12345678910@RunWith(AndroidJUnit4.class)public class BeatBoxActivityTest{ @Rule public ActivityTestRule&lt;BeatBoxActivity&gt; mActivityRule = new ActivityTestRule&lt;&gt;(BeatBoxActivity.class); @Test public void showsFirstFileName(){ onView(withText(&quot;65_cjipie&quot;)).check(matches(anything())); }} @RunWith(AndroidJUnit4.class)&#x8868;&#x660E;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x4F9D;&#x8D56;Activity&#x548C;Android&#x8FD0;&#x884C;&#x65F6;&#x5E93;&#x7684;Android&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;&#x3002; @Run&#x544A;&#x8BC9;JUnit&#x5728;&#x6BCF;&#x4E2A;test case&#x8FD0;&#x884C;&#x524D;&#x9700;&#x8981;&#x542F;&#x52A8;BeatBoxActivity&#x5B9E;&#x4F8B;&#x3002; onView(withText(&quot;65_cjipie&quot;))&#x627E;&#x5230;&#x9762;&#x677F;&#x6587;&#x672C;&#x4E3A;&#x201C;65_cjipie&#x201D;&#x7684;view&#x3002; check(matches(anything())&#x65AD;&#x8A00;&#x8BE5;view&#x5B58;&#x5728;&#x3002; &#x5E38;&#x89C1;&#x7684;&#x64CD;&#x4F5C;&#x8FD8;&#x6709;&#x627E;&#x5230;view&#x540E;&#x70B9;&#x51FB;&#x5B83;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#xFF1A; onView(withText(&quot;65_cjipie&quot;)).perform(click()); Esspresso&#x6709;&#x66F4;&#x591A;&#x5173;&#x4E8E;esspresso&#x7684;&#x53C2;&#x8003;&#x6587;&#x6863;&#x3002; Mock&#x6D4B;&#x8BD5; Mock&#x5BF9;&#x8C61;&#x901A;&#x8FC7;&#x5192;&#x5145;&#x4E0E;&#x6D4B;&#x8BD5;&#x65E0;&#x5173;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x5C06;&#x6D4B;&#x8BD5;&#x5DE5;&#x4F5C;&#x805A;&#x7126;&#x5728;&#x88AB;&#x6D4B;&#x6A21;&#x5757;&#x4E0A;&#x3002;&#x5728;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x7C7B;&#x90FD;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x4E2A;&#x7C7B;&#x4E5F;&#x5C31;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x4E00;&#x5957;mock&#x5BF9;&#x8C61;&#x3002;&#x5C3D;&#x7BA1;&#x5728;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7C7B;&#x4E2D;&#x7684;mock&#x5BF9;&#x8C61;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x884C;&#x4E3A;&#x5374;&#x5E76;&#x4E0D;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x6B64;&#x5E38;&#x5E38;&#x76F4;&#x63A5;&#x4F7F;&#x7528;mock&#x5BF9;&#x8C61;&#xFF0C;mock&#x6846;&#x67B6;&#x63D0;&#x4F9B;&#x7684;&#x590D;&#x7528;&#x6027;&#x975E;&#x5E38;&#x9002;&#x5408;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002; &#x4F46;&#x662F;&#x5728;&#x96C6;&#x6210;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x7126;&#x70B9;&#x662F;&#x6574;&#x4E2A;app&#xFF0C;mock&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5C06;app&#x4E0E;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#x9694;&#x79BB;&#x5F00;&#xFF0C;&#x4F8B;&#x5982;mock&#x4E00;&#x4E2A;web service&#x6765;&#x63D0;&#x4F9B;&#x6A21;&#x62DF;&#x6570;&#x636E;&#xFF0C;&#x6B64;&#x65F6;mock&#x5BF9;&#x8C61;&#x7684;&#x884C;&#x4E3A;&#x5BF9;&#x4E8E;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x5C31;&#x5F88;&#x5173;&#x952E;&#xFF0C;&#x800C;&#x4E14;&#x6BCF;&#x4E2A;case&#x7684;&#x4E2A;&#x6027;&#x5316;&#x5F88;&#x5F3A;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x6D3E;&#x751F;mock&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;mock&#x903B;&#x8F91;&#x4E86;&#x3002; Data Binding&#x6346;&#x7ED1;&#x4EA4;&#x4E92; &#x4E0A;&#x9762;&#x4E3A;SoundViewModel&#x6DFB;&#x52A0;&#x4E86;&#x70B9;&#x51FB;&#x54CD;&#x5E94;&#x51FD;&#x6570;onButtonClicked()&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x6DFB;&#x52A0;&#x5230;&#x8FD9;&#x4E2A;&#x7C7B;&#x91CC;&#xFF1F;&#x539F;&#x5148;&#x662F;&#x7531;Controller&#x8D1F;&#x8D23;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#xFF0C;&#x73B0;&#x5728;&#x4E0D;&#x662F;MVVM&#x4E86;&#x561B;&#xFF0C;Data Binding&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x53EF;&#x4EE5;&#x5728;XML&#x548C;Java&#x4EE3;&#x7801;&#x95F4;&#x4E92;&#x901A;&#x6570;&#x636E;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x4E92;&#x901A;&#x884C;&#x4E3A;&#x548C;&#x4EA4;&#x4E92;&#xFF1A; 123456&lt;Button android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;120dp&quot; android:onClick=&quot;@{()-&gt;viewModel.onButtonClicked()}&quot; android:text=&quot;@{viewModel.title}&quot; tools:text=&quot;Sound name&quot;/&gt; &#x5F53;&#x6309;&#x94AE;&#x88AB;&#x70B9;&#x51FB;&#xFF0C;&#x5C06;&#x8C03;&#x7528;android:onClick&#x6307;&#x5B9A;&#x7684;&#x51FD;&#x6570;viewModel.onButtonClicked()&#xFF0C;-&gt;&#x4E4B;&#x524D;&#x662F;&#x51FD;&#x6570;&#x539F;&#x578B;&#xFF0C;&#x6709;&#x70B9;&#x50CF;lambda&#x7684;&#x8BED;&#x6CD5;&#x3002; Parcelable&#x7C7B; &#x901A;&#x8FC7;&#x5B9E;&#x73B0;Parcelable&#x63A5;&#x53E3;&#x800C;&#x6210;&#x4E3A;Parcelable&#x7C7B;&#xFF0C;&#x8BE5;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x53EF;&#x88AB;&#x5E8F;&#x5217;&#x5316;&#x4FDD;&#x5B58;&#x5230;&#x78C1;&#x76D8;&#x4E0A;&#x3002;&#x4F46;&#x662F;&#x6709;&#x4E9B;&#x5BF9;&#x8C61;&#x662F;&#x4E0D;&#x80FD;&#x88AB;Parcelable&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x672C;&#x8282;&#x7684;SoundPool&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x8BB0;&#x5F55;&#x4E0B;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x7684;&#x97F3;&#x9891;&#x6587;&#x4EF6;&#x5217;&#x8868;&#xFF0C;&#x786E;&#x4FDD;&#x91CD;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x6062;&#x590D;&#x539F;&#x6837;&#xFF0C;&#x4F46;&#x662F;&#x6B63;&#x5728;&#x64AD;&#x653E;&#x7684;&#x97F3;&#x9891;&#x4E00;&#x5B9A;&#x4F1A;&#x88AB;&#x91CD;&#x5EFA;&#x6253;&#x7834;&#x3002; Non-parcelable&#x662F;&#x6709;&#x4F20;&#x67D3;&#x6027;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;non-parcelable&#x5BF9;&#x8C61;&#x5BF9;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x662F;&#x4E2A;&#x5173;&#x952E;&#x5BF9;&#x8C61;&#xFF0C;&#x90A3;&#x4E48;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4E5F;&#x5C06;&#x662F;non-parcelable&#x7684;&#x3002; &#x5728;&#x672C;&#x8282;&#x4E2D;SoundPool&#x662F;non-parcelable&#x7684;&#xFF0C;&#x56E0;&#x6B64;BeatBox&#x4E5F;&#x662F;non-parcelable&#x7684;&#x3002; &#x4E66;&#x91CC;&#x662F;&#x8FD9;&#x4E48;&#x8BF4;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5728;&#x6062;&#x590D;&#x7684;&#x65F6;&#x5019;&#x63A5;&#x7740;&#x4E0A;&#x6B21;&#x64AD;&#x653E;&#x7684;&#x4F4D;&#x7F6E;&#x7EE7;&#x7EED;&#x64AD;&#x653E;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5C31;&#x4E0D;&#x80FD;Parcelable&#x4E86;&#x5462;&#xFF1F;&#x800C;&#x4E14;non-parcelable&#x7684;&#x5B9A;&#x4E49;&#x4E0D;&#x662F;&#x5F88;&#x4E25;&#x8C28;&#xFF0C;&#x4EC0;&#x4E48;&#x53EB;&#x5173;&#x952E;&#x5BF9;&#x8C61;&#x5462;&#xFF1F;&#x662F;&#x6839;&#x672C;&#x65E0;&#x6CD5;&#x5199;&#x5165;&#x78C1;&#x76D8;&#xFF0C;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x5199;&#x5165;&#xFF0C;&#x53EA;&#x662F;&#x6CA1;&#x6709;&#x903B;&#x8F91;&#x610F;&#x4E49;&#xFF1F;&#x6211;&#x8BA4;&#x4E3A;&#x65E2;&#x53EF;&#x4EE5;&#x5DF2;&#x5199;&#x5165;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5177;&#x5907;&#x903B;&#x8F91;&#x610F;&#x4E49;&#x3002; &#x4E66;&#x4E2D;&#x5F15;&#x5165;non-parcelable&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x5F53;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x800C;&#x5BFC;&#x81F4;Activity&#x91CD;&#x5EFA;&#xFF0C;&#x6B63;&#x5728;&#x64AD;&#x653E;&#x7684;&#x97F3;&#x9891;&#x88AB;&#x4E2D;&#x65AD;&#x7684;&#x95EE;&#x9898;&#x3002;&#x65E0;&#x8BBA;&#x600E;&#x4E48;&#x6062;&#x590D;&#xFF0C;&#x53EA;&#x8981;&#x9500;&#x6BC1;-&#x91CD;&#x5EFA;&#x53D1;&#x751F;&#xFF0C;&#x4E2D;&#x65AD;&#x4E00;&#x5B9A;&#x4F1A;&#x53D1;&#x751F;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#x672C;&#x8EAB;&#x786E;&#x5B9E;&#x4E0D;&#x4E25;&#x8C28;&#xFF0C;&#x56E0;&#x4E3A;&#x5373;&#x4F7F;&#x662F;parcelable&#x7C7B;&#xFF0C;&#x4E5F;&#x662F;&#x8981;&#x9500;&#x6BC1;-&#x91CD;&#x5EFA;&#x7684;&#x3002; &#x4E3A;&#x4E86;&#x4E0D;&#x8BA9;&#x4E2D;&#x65AD;&#x53D1;&#x751F;&#xFF0C;&#x53C8;&#x5F15;&#x5165;&#x4E86;retain fragment&#x7684;&#x6982;&#x5FF5;&#x3002; &#x4F46;&#x662F;&#x6211;&#x60CA;&#x5947;&#x5730;&#x53D1;&#x73B0;&#x5F53;&#x65CB;&#x8F6C;&#x624B;&#x673A;&#x65F6;&#xFF0C;&#x97F3;&#x9891;&#x5E76;&#x6CA1;&#x6709;&#x4E2D;&#x65AD;&#xFF0C;&#x800C;&#x662F;&#x7B49;&#x5230;&#x64AD;&#x653E;&#x5B8C;&#x6210;&#x540E;&#x754C;&#x9762;&#x624D;&#x53D1;&#x751F;&#x8C03;&#x6574;&#x3002;&#x4E0D;&#x77E5;&#x9053;&#x662F;&#x4E0D;&#x662F;&#x7CFB;&#x7EDF;&#x505A;&#x51FA;&#x7684;&#x4F18;&#x5316;&#xFF1F;&#x53EF;&#x4EE5;&#x8C03;&#x67E5;&#x4E00;&#x4E0B;&#x754C;&#x9762;&#x91CD;&#x5EFA;&#x7684;&#x65F6;&#x673A;&#x3002; Retain fragment &#x53EF;&#x4EE5;&#x5728;Fragment&#x7684;onCreate(...)&#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;setRetainInstance(true)&#x5C06;&#x5B83;&#x8BBE;&#x4E3A;retain fragment&#xFF1A; 1234567891011// BeatBoxFragment.javapublic class BeatBoxFragment extends Fragment { ... @Override public void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setRetainInstance(true); ... } ...} &#x5F53;Fragment&#x6240;&#x5728;&#x7684;Activity&#x88AB;&#x91CD;&#x5EFA;&#x65F6;&#xFF0C;FragmentManager&#x4F1A;&#x9500;&#x6BC1;Fragment&#x5185;&#x90E8;&#x7684;view&#xFF0C;&#x518D;&#x6839;&#x636E;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x8FD9;&#x4E9B;view&#xFF0C;&#x7136;&#x540E;&#x904D;&#x5386;&#x5B83;&#x7BA1;&#x7406;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;Fragment&#xFF0C;&#x5982;&#x679C;retain&#x5C5E;&#x6027;&#x4E3A;false&#xFF0C;FragmentManager&#x4F1A;&#x9500;&#x6BC1;&#x5B83;&#xFF1B;&#x5982;&#x679C;retain&#x5C5E;&#x6027;&#x4E3A;true&#xFF0C;&#x5219;&#x4E0D;&#x4F1A;&#x9500;&#x6BC1;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x65B0;&#x7684;Activity&#x521B;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x7531;&#x65B0;&#x7684;FragmentManager&#x67E5;&#x627E;&#x88AB;&#x4FDD;&#x7559;&#x7684;Fragment&#xFF0C;&#x5E76;&#x91CD;&#x65B0;attach&#x5230;&#x5B83;&#x4EEC;&#x3002;&#x4E8E;&#x662F;Fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x53EF;&#x4FEE;&#x6B63;&#x4E3A;&#xFF1A; &#x591A;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;Retained&#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x4EC5;&#x5B58;&#x5728;&#x4E8E;&#x91CD;&#x5EFA;&#x7684;&#x4E00;&#x77AC;&#x95F4;&#x3002; &#x65E2;&#x7136;retain&#x5C5E;&#x6027;&#x8FD9;&#x4E48;&#x597D;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x9ED8;&#x8BA4;&#x5173;&#x95ED;&#x5462;&#xFF1F;&#x4E66;&#x4E2D;&#x8BF4;&#x82E5;&#x975E;&#x4E07;&#x4E0D;&#x5F97;&#x5DF2;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x5F00;&#x542F;&#x8BE5;&#x5C5E;&#x6027;&#xFF0C;&#x539F;&#x56E0;&#xFF1A;1&#x3001;retained fragment&#x4F1A;&#x8BA9;&#x903B;&#x8F91;&#x53D8;&#x5F97;&#x66F4;&#x590D;&#x6742;&#xFF0C;&#x51FA;&#x4E86;&#x95EE;&#x9898;&#x66F4;&#x96BE;&#x5B9A;&#x4F4D;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x6CA1;&#x6709;&#x5177;&#x4F53;&#x8BB2;&#x4E3A;&#x4EC0;&#x4E48;&#x3002;2&#x3001;retained&#x53EA;&#x80FD;&#x7528;&#x4E8E;&#x5904;&#x7406;&#x5F53;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5BF9;&#x5176;&#x5B83;&#x539F;&#x56E0;&#xFF08;&#x4F8B;&#x5982;&#x4F4E;&#x5185;&#x5B58;&#xFF09;&#x5BFC;&#x81F4;&#x7684;&#x91CD;&#x5EFA;&#x662F;&#x65E0;&#x80FD;&#x4E3A;&#x529B;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x91C7;&#x53D6;Parcel&#x4FDD;&#x5B58;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x80FD;&#x786E;&#x4FDD;&#x6570;&#x636E;&#x4E0D;&#x4E22;&#x5931;&#xFF0C;&#x800C;retain fragment&#x5219;&#x4F1A;&#x4E22;&#x6570;&#x636E;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二十]]></title>
    <url>%2F2017%2F10%2F31%2F2017%2F1031AndroidProgrammingBNRG20%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;Data Binding&#xFF0C;&#x8BA9;Java&#x4EE3;&#x7801;&#x548C;XML&#x6587;&#x4EF6;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x66F4;&#x76F4;&#x63A5;&#x5730;&#x76F8;&#x4E92;&#x8C03;&#x7528;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Data Binding - MVVM vs MVC - assets &#x8D44;&#x6E90; Data Binding &#x4EC0;&#x4E48;&#x662F;Data Binding Data Binding&#x662F;&#x8BA9;Java&#x4EE3;&#x7801;&#x548C;XML&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x76F8;&#x4E92;&#x6253;&#x901A;&#x7684;&#x6280;&#x672F;&#xFF0C;&#x5B83;&#x5305;&#x62EC;&#xFF1A; 1. &#x5728;Java&#x4EE3;&#x7801;&#x4E2D;&#x76F4;&#x63A5;&#x628A;ID&#x5F53;&#x505A;&#x53D8;&#x91CF;&#x8BBF;&#x95EE;&#x5143;&#x7D20;&#x7684;&#x80FD;&#x529B;&#x3002;&#x672C;&#x8282;&#x4E4B;&#x524D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;Java&#x4EE3;&#x7801;&#x4E2D;&#x63D0;&#x9886;XML&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x901A;&#x8FC7;findViewById(...)&#x6765;&#x67E5;&#x627E;&#x548C;&#x83B7;&#x53D6;&#x5B50;&#x63A7;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;Data Binding&#x4E4B;&#x540E;&#xFF0C;AndroidStudio&#x4F1A;&#x4E3A;XML&#x6587;&#x4EF6;&#x751F;&#x6210;Java&#x7C7B;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x628A;XML&#x6587;&#x4EF6;&#x4E2D;&#x7684;ID&#x76F4;&#x63A5;&#x5F53;&#x505A;Java&#x5BF9;&#x8C61;&#x6765;&#x8BBF;&#x95EE;&#x4E86;&#x3002; 2. &#x5728;XML&#x6587;&#x4EF6;&#x4E2D;&#x5D4C;&#x5165;Java&#x4EE3;&#x7801;&#x5B8C;&#x5584;&#x5E03;&#x5C40;&#x7684;&#x80FD;&#x529B;&#x3002;&#x5F88;&#x6709;&#x70B9;JSP&#x7684;&#x5473;&#x9053;&#x4E86;&#xFF0C;&#x672C;&#x8282;&#x4E4B;&#x524D;&#x4ECB;&#x7ECD;&#x7684;&#x5185;&#x5BB9;&#x8DB3;&#x4EE5;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x7684;&#x754C;&#x9762;&#x5C55;&#x73B0;&#x3001;&#x4EA4;&#x4E92;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x63D0;&#x4F9B;&#x8FD9;&#x79CD;&#x80FD;&#x529B;&#x5462;&#xFF1F;XML&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x89C4;&#x5B9A;&#x7684;&#x662F;&#x663E;&#x793A;&#x6A21;&#x677F;&#xFF0C;Java&#x4EE3;&#x7801;&#x63D0;&#x4F9B;&#x7684;&#x662F;&#x6570;&#x636E;&#x548C;&#x5C55;&#x73B0;&#x4EE3;&#x7801;&#xFF0C;&#x5C55;&#x73B0;&#x4EE3;&#x7801;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x6A21;&#x677F;&#x89C4;&#x5B9A;&#x7684;&#x65B9;&#x5F0F;&#x5DE5;&#x4F5C;&#x2014;&#x2014;&#x6BD4;&#x5982;&#x754C;&#x9762;&#x4E0A;&#x6709;&#x51E0;&#x4E2A;widget&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x6570;&#x636E;&#x7684;&#x4EC0;&#x4E48;&#x5B57;&#x6BB5;&#x2014;&#x2014;&#x6A21;&#x677F;&#x548C;&#x4EE3;&#x7801;&#x7D27;&#x7D27;&#x5730;&#x8026;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x3002; &#x6253;&#x4E2A;&#x6BD4;&#x65B9;&#xFF1A;&#x4E00;&#x4E2A;&#x624B;&#x673A;&#x751F;&#x4EA7;&#x5382;&#x5546;&#x59D4;&#x6258;A&#x751F;&#x4EA7;&#x5305;&#x88C5;&#x76D2;&#xFF0C;B&#x751F;&#x4EA7;&#x624B;&#x673A;&#x53CA;&#x914D;&#x4EF6;&#x3002;&#x672C;&#x8282;&#x4E4B;&#x524D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x7531;B&#x8D1F;&#x8D23;&#x51FA;&#x5382;&#x5305;&#x88C5;&#xFF0C;&#x5982;&#x679C;A&#x751F;&#x4EA7;&#x7684;&#x5305;&#x88C5;&#x76D2;&#x5185;&#x90E8;&#x5E03;&#x5C40;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x5F71;&#x54CD;B&#x5728;&#x5305;&#x88C5;&#x6D41;&#x6C34;&#x7EBF;&#x4E2D;&#x7684;&#x5206;&#x5DE5;&#x534F;&#x4F5C;&#x3002;&#x5F15;&#x5165;&#x4E86;Data Binding&#x673A;&#x5236;&#x4E4B;&#x540E;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x628A;&#x51FA;&#x5382;&#x5305;&#x88C5;&#x7684;&#x6D3B;&#x4EA4;&#x7ED9;&#x4E86;A&#xFF0C;A&#x548C;B&#x4E4B;&#x95F4;&#x53EA;&#x8981;&#x5546;&#x5B9A;&#x597D;&#x624B;&#x673A;&#x548C;&#x914D;&#x4EF6;&#x5C3A;&#x5BF8;&#x89C4;&#x683C;&#x5373;&#x53EF;&#x2014;&#x2014;&#x8FD9;&#x662F;&#x4E24;&#x5BB6;&#x516C;&#x53F8;&#x5FC5;&#x987B;&#x4E86;&#x89E3;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x81F3;&#x4E8E;&#x516C;&#x53F8;A&#x600E;&#x4E48;&#x8BBE;&#x8BA1;&#x5305;&#x88C5;&#x76D2;&#xFF0C;B&#x5C31;&#x4E0D;&#x7BA1;&#x4E86;&#xFF0C;&#x4ED6;&#x53EA;&#x8D1F;&#x8D23;&#x628A;&#x751F;&#x4EA7;&#x597D;&#x7684;&#x624B;&#x673A;&#x548C;&#x914D;&#x4EF6;&#x4EA4;&#x7ED9;A&#xFF0C;&#x5982;&#x679C;A&#x6539;&#x52A8;&#x4E86;&#x5305;&#x88C5;&#x5E03;&#x5C40;&#xFF0C;&#x5B83;&#x81EA;&#x7136;&#x77E5;&#x9053;&#x8BE5;&#x600E;&#x4E48;&#x8C03;&#x6574;&#x51FA;&#x5382;&#x5305;&#x88C5;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x5206;&#x5DE5;&#x5B89;&#x6392;&#x66F4;&#x5408;&#x7406;&#x3002; &#x8BA9;Java&#x4EE3;&#x7801;&#x8BBF;&#x95EE;XML&#x5E03;&#x5C40;&#x5143;&#x7D20; 1.&#x914D;&#x7F6E;app/build.gradle 12345678android { ... defaultConfig { ... } buildTypes { ... } dataBinding{ enabled = true }} &#x5F00;&#x542F;&#x4E86;dataBinding&#xFF0C;IDE&#x4F1A;&#x81EA;&#x52A8;&#x751F;&#x6210;data binding class&#xFF0C;&#x5E76;&#x96C6;&#x6210;&#x5230;&#x9879;&#x76EE;&#x5F53;&#x4E2D;&#x4F9B;&#x4F60;&#x4F7F;&#x7528;&#x3002; ### 2.&#x7528;layout&#x5305;&#x88F9;&#x76EE;&#x6807;&#x5E03;&#x5C40; // fragment_beat_box.xml 123456&lt;layout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;android.support.v7.widget.RecyclerView android:id=&quot;@+id/recycler_view&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;/&gt;&lt;/layout&gt; &#x6309;&#x7167;&#x4E4B;&#x524D;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x53EA;&#x653E;RecyclerView&#xFF0C;&#x73B0;&#x5728;&#x9700;&#x8981;&#x5728;&#x5916;&#x9762;&#x88F9;&#x4E00;&#x5C42;layout&#x6807;&#x7B7E;&#xFF0C;&#x8FD9;&#x5C42;&#x6807;&#x7B7E;&#x4F1A;&#x4EE4;data binding tool&#x81EA;&#x52A8;&#x751F;&#x6210;binding class&#xFF0C;&#x9ED8;&#x8BA4;&#x7C7B;&#x540D;&#x6839;&#x636E;&#x8BE5;&#x5E03;&#x5C40;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x751F;&#x6210;&#xFF0C;&#x6240;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x540D;&#x662F;xxx_yyy.xml&#x800C;&#x7C7B;&#x540D;&#x662F;XxxYyy&#x3002;&#x5728;&#x672C;&#x8282;&#x4E3A;fragment_beat_box.xml&#x751F;&#x6210;&#x7684;data binding class&#x4E3A;FragmentBeatBoxBinding&#x3002; &#x6309;&#x7167;&#x4EE5;&#x524D;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;Activity&#x9700;&#x8981;&#x5728;onCreate(...)&#x51FD;&#x6570;&#x4E2D;inflate&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#xFF0C;&#x518D;&#x6839;&#x636E;id&#x63D0;&#x53D6;widget&#xFF1A; 123456789@Overrideprotected void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setContentView(R.layout.activity_crime_pager); // &#x52A0;&#x8F7D;&#x5E03;&#x5C40;&#x6587;&#x4EF6; ... // &#x6839;&#x636E;id&#x63D0;&#x9886;&#x5B50;&#x89C6;&#x56FE; mViewPager = (ViewPager)findViewById(R.id.crime_view_pager); ...} &#x4F7F;&#x7528;&#x4E86;data binding&#xFF0C;&#x5219;&#x9700;&#x8981;&#x4ECE;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;inflate&#x51FA;data binding instance&#xFF1A; 12345678910@Overridepublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ // &#x4ECE;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x63D0;&#x9886;data binding&#x5B9E;&#x4F8B; FragmentBeatBoxBinding binding = DataBindingUtil.inflate(inflater, R.layout.fragment_beat_box, container, false); // &#x6839;&#x636E;data binding&#x5B9E;&#x4F8B;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5E03;&#x5C40;&#x4E2D;&#x7684;&#x5B50;&#x89C6;&#x56FE;recyclerView binding.recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 3)); return binding.getRoot();} &#x8BE5;&#x5B9E;&#x4F8B;&#x7684;getRoot()&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x5E03;&#x5C40;&#x4E2D;&#x7956;&#x5148;&#x8282;&#x70B9;&#xFF0C;&#x6B64;&#x5916;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;id&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5E03;&#x5C40;&#x4E2D;&#x7684;&#x5B50;&#x89C6;&#x56FE;&#xFF0C;&#x5982;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;binding.recyclerView&#x3002; &#x6709;&#x65F6;&#x5019;AndroidStudio&#x4F1A;&#x62A5;&#x544A;&#x627E;&#x4E0D;&#x5230;FragmentBeatBoxBinding&#x8FD9;&#x4E2A;&#x7B26;&#x53F7;&#xFF0C;&#x53EF;&#x4EE5;&#x624B;&#x52A8;&#x6DFB;&#x52A0;import com.bnrg.beatbox.databinding.FragmentBeatBoxBinding;&#x3002; &#x5728;XML&#x6587;&#x4EF6;&#x4E2D;&#x8BBF;&#x95EE;Java&#x5BF9;&#x8C61; 1.&#x5728;XML&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; // list_item_sound.xml 123456789101112&lt;layout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt; &lt;data&gt; &lt;variable name=&quot;viewModel&quot; type=&quot;com.bnrg.beatbox.SoundViewModel&quot;/&gt; &lt;/data&gt; &lt;Button android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;120dp&quot; android:text=&quot;@{viewModel.title}&quot; tools:text=&quot;Sound name&quot;/&gt;&lt;/layout&gt; &#x5728;data&#x90E8;&#x5206;&#x58F0;&#x660E;&#x4E86;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x548C;&#x53D8;&#x91CF;viewModel&#xFF0C;Data Binding Tools&#x4F1A;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x751F;&#x6210;getter/setter&#x65B9;&#x6CD5;&#x5728;&#xFF0C;Widget&#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x548C;&#x6570;&#x636E;&#x6210;&#x5458;&#xFF0C;&#x5982;&#x4E0A;&#x4F8B;&#x4E2D;&#x7684;@{viewModel.title}&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E9B;&#x7B80;&#x5199;&#x7684;&#x7EA6;&#x5B9A;&#xFF0C;&#x4F8B;&#x5982;viewModel.title&#x662F;viewModel.getTitle()&#x7684;&#x7B80;&#x5199;&#x3002; &#x4E0B;&#x4E00;&#x6B65;&#x80AF;&#x5B9A;&#x5C31;&#x9700;&#x8981;&#x628A;&#x6570;&#x636E;&#x4F20;&#x5165;xml&#x3002; ### 2.&#x5C06;&#x6570;&#x636E;&#x4F20;&#x5165;XML&#x6587;&#x4EF6; &#x56DE;&#x987E;&#x7B14;&#x8BB0;&#x516B;&#xB7;RecyclerView&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#xFF0C;Adapter&#x4F5C;&#x4E3A;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#x8D1F;&#x8D23;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#x7684;&#x751F;&#x4EA7;&#x548C;&#x88C5;&#x914D;&#xFF0C;onCreateViewHolder()&#x8D1F;&#x8D23;&#x751F;&#x4EA7;&#xFF0C;onBindViewHolder()&#x8D1F;&#x8D23;&#x88C5;&#x914D;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637// BeatBoxFragment.javaprivate class SoundHolder extends RecyclerView.ViewHolder{ private ListItemSoundBinding mBinding; private SoundHolder(ListItemSoundBinding binding){ super(binding.getRoot()); mBinding = binding; mBinding.setViewModel(new SoundViewModel(mBeatBox)); // &#x2461; } public void bind(Sound sound){ mBinding.getViewModel().setSound(sound); // &#x2463; mBinding.executePendingBindings(); }}private class SoundAdapter extends RecyclerView.Adapter&lt;SoundHolder&gt;{ private List&lt;Sound&gt; mSounds; public SoundAdapter(List&lt;Sound&gt; sounds){mSounds = sounds;} @Override public SoundHolder onCreateViewHolder(ViewGroup parent, int viewType){ LayoutInflater inflater = LayoutInflater.from(getActivity()); ListItemSoundBinding binding = DataBindingUtil.inflate(inflater, R.layout.list_item_sound, parent, false); return new SoundHolder(binding); // &#x2460; } @Override public void onBindViewHolder(SoundHolder holder, int position){ Sound sound = mSounds.get(position); holder.bind(sound); // &#x2462; } @Override public int getItemCount(){return mSounds.size();}} &#x2460;&#x751F;&#x4EA7;&#x96C6;&#x88C5;&#x7BB1;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;Data Binding&#x5C06;Binding&#x5BF9;&#x8C61;&#x4F20;&#x5165;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;ViewHolder &#x2461;&#x5728;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;ViewHolder&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x901A;&#x8FC7;mBinding.setViewModel(...)&#x5C06;Java&#x5BF9;&#x8C61;&#x4F20;&#x5165;XML &#x2462;&#x2463;&#x5F53;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x88C5;&#x914D;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;mBinding.getViewModel()&#x83B7;&#x5F97;XML&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x91CD;&#x65B0;&#x4E3A;&#x4E4B;&#x8BBE;&#x7F6E;Sound &#x5728;SoundHolder::bind(...)&#x7684;&#x672B;&#x4F4D;&#x6709;&#x4E00;&#x884C;mBinding.executePendingBindings();&#x8C03;&#x7528;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5F53;RecyclerView&#x5237;&#x65B0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x786E;&#x4FDD;layout&#x7ACB;&#x523B;&#x5237;&#x65B0;&#x81EA;&#x5DF1;&#xFF0C;&#x4E0D;&#x8981;&#x5EF6;&#x8FDF;&#x3002; &#x6211;&#x53D1;&#x73B0;SoundHolder&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x662F;private&#xFF0C;Singleton&#x624D;&#x4F1A;&#x8FD9;&#x4E48;&#x5199;&#xFF0C;&#x8FD9;&#x4F1A;&#x8BA9;&#x5916;&#x90E8;&#x65E0;&#x6CD5;&#x521B;&#x5EFA;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;SoundAdapter::onCreateViewHolder(...)&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x5462;&#xFF1F; &#x518D;&#x6765;&#x770B;&#x770B;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#x91CC;&#x5B58;&#x653E;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6BCF;&#x4E2A;&#x96C6;&#x88C5;&#x7BB1;&#x91CC;&#x5B58;&#x653E;&#x7684;&#x6838;&#x5FC3;&#x6570;&#x636E;&#x5C31;&#x662F;Sound&#x5BF9;&#x8C61;&#xFF1A; 1234567891011121314151617181920212223// SoundViewModelpublic class SoundViewModel extends BaseObservable{ private Sound mSound; private BeatBox mBeatBox; public SoundViewModel(BeatBox beatBox){ mBeatBox = beatBox; } @Bindable public String getTitle(){ return mSound.getName(); } public Sound getSound(){ return mSound; } public void setSound(Sound sound){ mSound = sound; notifyChange(); }} &#x5176;&#x4E2D;setSound(...)&#x6709;&#x4E00;&#x884C;notifyChange();&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5F53;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;SoundHolder&#x53D1;&#x751F;&#x91CD;&#x65B0;&#x88C5;&#x914D;bind(...)&#x65F6;&#xFF0C;layout&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x8FD9;&#x4EF6;&#x4E8B;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x754C;&#x9762;&#x9519;&#x4E71;&#x3002;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x9700;&#x8981;&#x6709;&#x4E00;&#x79CD;&#x673A;&#x5236;&#x5F53;&#x67D0;&#x4E2A;&#x96C6;&#x88C5;&#x7BB1;&#x53D1;&#x751F;&#x91CD;&#x65B0;&#x88C5;&#x914D;&#x65F6;&#xFF0C;&#x5E94;&#x901A;&#x77E5;layout&#x5237;&#x65B0;&#xFF0C;notifyChange();&#x6B63;&#x662F;&#x8D77;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x4F5C;&#x7528;&#x3002;&#x5B83;&#x901A;&#x77E5;Binding class&#x6240;&#x6709;&#x6807;&#x6CE8;&#x4E3A;@Bindable&#x7684;&#x5B57;&#x6BB5;&#x90FD;&#x9700;&#x8981;&#x66F4;&#x65B0;&#xFF0C;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x5C31;&#x662F;getTitle()&#x3002; MVVM&#xFF08;Model-View-ViewModel&#xFF09; &#x56DE;&#x987E;&#x4E00;&#x4E0B;&#x672C;&#x8282;&#x4E2D;BeatBoxFragment&#xFF0C;&#x5B83;&#x672C;&#x6765;&#x5E94;&#x5F53;&#x627F;&#x62C5;Controller&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x5E94;&#x5F53;&#x8D1F;&#x8D23;&#x53D6;&#x51FA;Model&#x5BF9;&#x8C61;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x8BBE;&#x7F6E;&#x5230;View&#x7684;&#x67D0;&#x4E2A;&#x5B50;&#x63A7;&#x4EF6;&#x4E0A;&#x53BB;&#x3002;&#x4F46;&#x5728;&#x672C;&#x8282;&#x91CC;&#x56E0;&#x4E3A;&#x5F15;&#x5165;&#x4E86;Data Binding&#xFF0C;&#x90FD;&#x65E0;&#x9700;&#x8FD9;&#x4E48;&#x505A;&#x4E86;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x5730;&#x628A;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x6254;&#x7ED9;XML&#x3002;&#x8FD9;&#x4F3C;&#x4E4E;&#x6539;&#x53D8;&#x4E86;&#x539F;&#x672C;&#x7684;MVC&#x683C;&#x5C40;&#xFF0C;&#x5F31;&#x5316;&#x4E86;C&#x7684;&#x804C;&#x8D23;&#x3002;&#x4F46;&#x8FD9;&#x4E5F;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x539F;&#x672C;&#x4E0D;&#x5B58;&#x5728;&#x7684;SoundViewModel&#x3002; &#x6211;&#x4EEC;&#x518D;&#x56DE;&#x5230;&#x624B;&#x673A;&#x751F;&#x4EA7;&#x5546;&#x7684;&#x7C7B;&#x6BD4;&#x4E0A;&#x6765;&#xFF1A;&#x539F;&#x5148;&#x6709;&#x4E13;&#x95E8;&#x8D1F;&#x8D23;&#x5305;&#x88C5;&#x7684;Controller&#x516C;&#x53F8;&#xFF0C;&#x4ED6;&#x4ECE;&#x5305;&#x88C5;&#x751F;&#x4EA7;&#x5546;View&#x62FF;&#x5230;&#x5305;&#x88C5;&#x76D2;&#xFF0C;&#x4ECE;&#x624B;&#x673A;/&#x914D;&#x4EF6;&#x751F;&#x4EA7;&#x5546;Model&#x62FF;&#x5230;&#x786C;&#x4EF6;&#xFF0C;&#x628A;&#x4ED6;&#x4EEC;&#x5305;&#x88C5;&#x6210;&#x76D2;&#xFF0C;&#x5B8C;&#x6210;&#x5851;&#x5C01;&#x3002;&#x73B0;&#x5728;&#x6539;&#x7531;&#x5305;&#x88C5;&#x751F;&#x4EA7;&#x5546;View&#x76F4;&#x63A5;&#x4ECE;&#x624B;&#x673A;/&#x914D;&#x4EF6;&#x751F;&#x4EA7;&#x5546;Model&#x62FF;&#x5230;&#x786C;&#x4EF6;&#x5B8C;&#x6210;&#x5305;&#x88C5;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;Model&#x76F4;&#x63A5;&#x628A;&#x4E00;&#x5806;&#x624B;&#x673A;&#x3001;&#x914D;&#x4EF6;&#x6DF7;&#x5728;&#x4E00;&#x8D77;&#xFF0C;View&#x8FD8;&#x9700;&#x8981;&#x518D;&#x5206;&#x62E3;&#xFF0C;&#x4E8E;&#x662F;&#x4E24;&#x4EBA;&#x534F;&#x5546;&#xFF0C;Model&#x7684;&#x4EA4;&#x4ED8;&#x7269;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x6613;&#x5305;&#x88C5;&#xFF0C;&#x5B83;&#x628A;&#x4E00;&#x5957;&#x624B;&#x673A;&#x53CA;&#x914D;&#x4EF6;&#x5C01;&#x5165;&#x7B80;&#x6613;&#x5305;&#x88C5;&#x518D;&#x4EA4;&#x7ED9;View&#xFF0C;&#x8FD9;&#x4E2A;&#x7B80;&#x6613;&#x5305;&#x88C5;&#x5C31;&#x662F;ViewModel&#x3002; &#x5728;&#x672C;&#x8282;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;list_item_sound.xml&#x53EA;&#x4F7F;&#x7528;&#x4E86;&#x4E00;&#x4E2A;Sound&#x6210;&#x5458;&#xFF0C;&#x6240;&#x4EE5;&#x770B;&#x8D77;&#x6765;SoundViewModel&#x4F3C;&#x4E4E;&#x591A;&#x4F59;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;list_item_sound.xml&#x4F7F;&#x7528;&#x4E86;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;SoundViewModel&#x5C31;&#x5FC5;&#x8981;&#x4E86;&#xFF1A; 1&#x3001;&#x8D1F;&#x8D23;&#x6536;&#x7EB3;&#x201C;&#x4E00;&#x5957;&#x201D;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;list_item_sound.xml&#x4E0A;&#x73B0;&#x5B9E;&#x7684;&#x6570;&#x636E;&#xFF1B; 2&#x3001;&#x8D1F;&#x8D23;&#x5411;list_item_sound.xml&#x63D0;&#x4F9B;&#x9700;&#x8981;&#x7684;&#x6570;&#x636E;&#x63A5;&#x53E3;&#xFF0C;SoundViewModel::getTitle()&#x6B63;&#x662F;&#x8FD9;&#x7C7B;&#x63A5;&#x53E3;&#x3002; &#x672C;&#x8282;&#x7ED8;&#x5236;MVVM&#x7684;&#x6A21;&#x578B;&#x5982;&#x4E0B;&#xFF1A; &#x6DFB;&#x52A0;Assets&#x8D44;&#x6E90; Assets&#x8D44;&#x6E90;&#x4F1A;&#x88AB;&#x539F;&#x5C01;&#x4E0D;&#x52A8;&#x5730;&#x6253;&#x5165;apk&#x5305;&#xFF0C;&#x548C;&#x4E00;&#x822C;&#x7684;&#x8D44;&#x6E90;&#x76F8;&#x6BD4;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x7CFB;&#x7EDF;&#x5DE5;&#x5177;&#x5E2E;&#x52A9;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;assets&#x8D44;&#x6E90;&#x2014;&#x2014;&#x4E0D;&#x4F1A;&#x6839;&#x636E;&#x8BBE;&#x5907;&#x5206;&#x8FA8;&#x7387;&#x3001;&#x8BED;&#x8A00;&#x3001;&#x6A2A;&#x7AD6;&#x5C4F;&#x4E0D;&#x540C;&#x800C;&#x5339;&#x914D;&#x4E0D;&#x540C;&#x8D44;&#x6E90;&#xFF0C;&#x4E0D;&#x80FD;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x901A;&#x8FC7;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x6216;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x63D0;&#x53D6;&#x5230;assets&#x8D44;&#x6E90;&#x3002; &#x8FD9;&#x4E48;&#x591A;&#x4E0D;&#x4FBF;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x4F7F;&#x7528;Assets&#x8D44;&#x6E90;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;Assets&#x5C31;&#x50CF;&#x968F;&#x5305;&#x5E26;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x5B83;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x3002;&#x6BD4;&#x5982;&#x5728;&#x672C;&#x4F8B;&#x4E2D;&#x6709;20&#x591A;&#x4E2A;&#x97F3;&#x9891;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x679C;&#x5F53;&#x505A;&#x4E00;&#x822C;&#x8D44;&#x6E90;&#x5BFC;&#x5165;&#xFF0C;&#x4EE3;&#x7801;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x8D44;&#x6E90;ID&#x6765;&#x64CD;&#x4F5C;&#x6BCF;&#x4E00;&#x4E2A;&#x97F3;&#x9891;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x5BFC;&#x5165;&#x6210;Assets&#x540E;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x904D;&#x5386;&#x76EE;&#x5F55;&#xFF0C;&#x9010;&#x4E2A;&#x83B7;&#x53D6;&#x6587;&#x4EF6;&#x5373;&#x53EF;&#xFF0C;&#x4EE5;&#x540E;&#x5982;&#x679C;&#x8981;&#x6DFB;&#x52A0;&#x6216;&#x5220;&#x9664;&#x97F3;&#x9891;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x52A0;&#x5165;&#x6216;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x5373;&#x53EF;&#xFF0C;&#x4EE3;&#x7801;&#x5B8C;&#x5168;&#x4E0D;&#x7528;&#x4FEE;&#x6539;&#x3002;&#x6DFB;&#x52A0;assets&#x8D44;&#x6E90;&#x7684;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; &#x5728;app&#x53F3;&#x952E; &gt; New &gt; Folder &gt; Assets Folder&#xFF1A; &#x5728;&#x5F39;&#x51FA;&#x7A97;&#x53E3;&#x4E2D;&#x70B9;&#x51FB;Finish&#xFF1A; &#x518D;&#x5728;assets&#x53F3;&#x952E; &gt; New &gt; Directory&#xFF0C;&#x521B;&#x5EFA;&#x65B0;&#x76EE;&#x5F55;sample_sounds&#x3002;&#x5C06;&#x97F3;&#x9891;&#x6587;&#x4EF6;&#x76F4;&#x63A5;&#x62F7;&#x8D1D;&#x5230;&#x76EE;&#x5F55;BeatBox/app/src/main/assets/sample_sounds/&#xFF0C;&#x5B83;&#x4EEC;&#x5C06;&#x81EA;&#x52A8;&#x5C55;&#x73B0;&#x5230;AndroidStudio&#x9879;&#x76EE;&#x5185;&#xFF1A; &#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x83B7;&#x53D6;&#x8D44;&#x6E90;&#xFF1A; 1234567AssetManager assets = context.getAssets();// &#x83B7;&#x53D6;assets/sample_sounds/&#x4E0B;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x540D;String[] soundNames = assets.list(&quot;sample_sounds&quot;);// &#x83B7;&#x5F97;&#x9996;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x6570;&#x636E;InputStream soundData = assets.open(soundNames[0]);// &#x83B7;&#x5F97;&#x7B2C;&#x4E8C;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x6570;&#x636E;AssetFileDescriptor assetFd = assets.openFd(soundNames[1]); &#x8BBF;&#x95EE;Assets&#x8D44;&#x6E90;&#x5FC5;&#x987B;&#x901A;&#x8FC7;AssetManager&#xFF0C;&#x4F7F;&#x7528;File&#x64CD;&#x4F5C;Assets&#x662F;&#x4E0D;&#x7075;&#x7684;&#x3002; &#x5176;&#x4E2D;context&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;Activity&#xFF0C;&#x901A;&#x8FC7;assets.list(&quot;sample_sounds&quot;)&#x51FD;&#x6570;&#x5217;&#x51FA;assets/sample_sounds&#x76EE;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x540D;&#x79F0;&#x3002; &#x6253;&#x5F00;&#x6587;&#x4EF6;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;open(...)&#x83B7;&#x5F97;InputStream&#x5B9E;&#x4F8B;&#xFF1B;&#x4F7F;&#x7528;openFd(...)&#x83B7;&#x5F97;AssetFileDescriptor&#x5B9E;&#x4F8B;&#x3002; &#x5728;&#x521B;&#x5EFA;project&#x7684;&#x65F6;&#x5019;&#x6709;&#x4E00;&#x4E2A;&#x201C;&#x662F;&#x5426;&#x652F;&#x6301;kotlin&quot;&#x9009;&#x9879;&#xFF0C;&#x8FD9;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十九]]></title>
    <url>%2F2017%2F10%2F30%2F2017%2F1030AndroidProgrammingBNRG19%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x52A0;&#x5165;&#x4E86;&#x65E0;&#x969C;&#x788D;&#x652F;&#x6301;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - TalkBack TalkBack TalkBack&#x662F;Android&#x7684;&#x8BFB;&#x5C4F;&#x670D;&#x52A1;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;accessibility service&#xFF0C;&#x8BE5;&#x670D;&#x52A1;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x5C4F;&#x5E55;&#x4E0A;&#x7684;&#x6587;&#x5B57;&#xFF0C;&#x5373;&#x4F7F;&#x6587;&#x5B57;&#x4E0D;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#x7684;app&#xFF0C;&#x7B2C;&#x4E09;&#x65B9;&#x4E5F;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x8BE5;&#x670D;&#x52A1;&#x3002; &#x5728;&#x7CFB;&#x7EDF;&#x4E2D;&#x5F00;&#x542F;&#x8BE5;&#x670D;&#x52A1;&#x540E;&#xFF0C;&#x5355;&#x51FB;&#x52A8;&#x4F5C;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5C06;&#x7126;&#x70B9;&#x5207;&#x6362;&#x5230;&#x89C6;&#x56FE;&#xFF0C;&#x53CC;&#x51FB;&#x7684;&#x542B;&#x4E49;&#x624D;&#x662F;&#x6B63;&#x5E38;&#x6A21;&#x5F0F;&#x4E0B;&#x7684;&#x70B9;&#x51FB;&#x3002;&#x5F53;&#x67D0;&#x4E2A;&#x89C6;&#x56FE;&#x83B7;&#x5F97;&#x7126;&#x70B9;&#x540E;&#xFF0C;&#x5DE6;&#x5212;/&#x53F3;&#x5212;&#x5206;&#x522B;&#x8868;&#x793A;&#x5C06;&#x7126;&#x70B9;&#x79FB;&#x52A8;&#x5230;&#x524D;&#x5E8F;&#x89C6;&#x56FE;&#x548C;&#x540E;&#x5E8F;&#x89C6;&#x56FE;&#x3002; &#x4E3A;&#x6CA1;&#x6709;&#x6587;&#x5B57;&#x7684;&#x89C6;&#x56FE;&#x6DFB;&#x52A0;&#x8BFB;&#x5C4F;&#x652F;&#x6301;&#x6587;&#x5B57; &#x6BD4;&#x5982;&#x56FE;&#x6807;&#x6309;&#x94AE;&#xFF0C;&#x5F53;&#x5B83;&#x83B7;&#x5F97;&#x7126;&#x70B9;&#x65F6;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x8BFB;&#x5C4F;&#x670D;&#x52A1;&#x4E5F;&#x80FD;&#x8BFB;&#x51FA;&#x6587;&#x5B57;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x7ED9;&#x8BE5;&#x89C6;&#x56FE;&#x8865;&#x5145;&#x4E00;&#x4E2A;contenDescription&#x5C5E;&#x6027;&#x65E2;&#x53EF;&#xFF1A; 12345678&lt;ImageView android:id=&quot;@+id/crime_photo&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; app:layout_constraintLeft_toLeftOf=&quot;parent&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; app:srcCompat=&quot;@mipmap/ic_launcher&quot; android:contentDescription=&quot;@string/crime_hpoto_no_image_description&quot;/&gt; &#x8BA9;&#x89C6;&#x56FE;&#x53EF;&#x83B7;&#x5F97;&#x7684;&#x7126;&#x70B9; &#x4F8B;&#x5982;ImageView&#x8FD9;&#x7C7B;&#x89C6;&#x56FE;&#x5B83;&#x539F;&#x672C;&#x662F;&#x4E0D;&#x80FD;&#x83B7;&#x5F97;&#x7126;&#x70B9;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x5B83;&#x5728;&#x8BFB;&#x5C4F;&#x65F6;&#x4E5F;&#x80FD;&#x83B7;&#x5F97;&#x7126;&#x70B9;&#xFF0C;&#x9700;&#x8981;&#x4E3A;&#x4E4B;&#x6DFB;&#x52A0;focusable&#x5C5E;&#x6027;&#xFF1A; 123456789&lt;ImageView android:id=&quot;@+id/crime_photo&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; app:layout_constraintLeft_toLeftOf=&quot;parent&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; app:srcCompat=&quot;@mipmap/ic_launcher&quot; android:contentDescription=&quot;@string/crime_hpoto_no_image_description&quot; android:focusable=&quot;true&quot;/&gt;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十八]]></title>
    <url>%2F2017%2F10%2F29%2F2017%2F1029AndroidProgrammingBNRG18%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x652F;&#x6301;&#x4E86;&#x56FD;&#x9645;&#x5316;&#xFF0C;&#x5F15;&#x5165;&#x591A;&#x8BED;&#x79CD;&#x7684;&#x652F;&#x6301;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x6DFB;&#x52A0;&#x4E0D;&#x540C;&#x7684;&#x8BED;&#x79CD;&#x5B57;&#x7B26;&#x8D44;&#x6E90; &#x6DFB;&#x52A0;&#x4E0D;&#x540C;&#x8BED;&#x79CD;&#x7684;&#x5B57;&#x7B26;&#x8D44;&#x6E90; &#x4E3A;strings&#x8D44;&#x6E90;&#x521B;&#x5EFA;&#x8BED;&#x8A00;&#x76F8;&#x5173;&#x7684;&#x5B50;&#x76EE;&#x5F55;&#x5373;&#x53EF;&#x3002;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#xFF1A; &#x53F3;&#x952E;res/values &gt; New &gt; Values resource file&#xFF0C;&#x5728;Avaliable qualifier&#x9009;&#x62E9;Locale&#xFF0C;&#x8FDB;&#x800C;&#x9009;&#x62E9;&#x9700;&#x8981;&#x7684;&#x8BED;&#x8A00;&#x548C;&#x533A;&#x57DF;&#xFF1A; &#x5B83;&#x4F1A;&#x5728;res/Values&#x4E0B;&#x4E3A;strings&#x521B;&#x5EFA;&#x5BF9;&#x5E94;&#x8BED;&#x79CD;&#x7684;&#x5907;&#x9009;&#xFF1A; &#x5C06;strings&#x672C;&#x5C0A;&#x7684;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x5230;strings.xml(zh)&#x4E2D;&#xFF0C;&#x4FEE;&#x6539;&#x4E3A;&#x4E2D;&#x6587;&#x7248;&#x672C;&#x5373;&#x53EF;&#x3002; &#x4FDD;&#x7559;&#x9ED8;&#x8BA4;&#x8D44;&#x6E90; &#x5C3D;&#x7BA1;strings.xml&#x7528;&#x4E8E;&#x82F1;&#x6587;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x8981;&#x628A;&#x5B83;&#x6539;&#x540D;&#x4E3A;strings.xml(en)&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4F1A;&#x8BA9;&#x9ED8;&#x8BA4;&#x8BED;&#x79CD;&#x7A7A;&#x7F3A;&#xFF0C;&#x5F53;&#x8BBE;&#x5907;&#x7684;locale&#x6539;&#x4E3A;app&#x4E0D;&#x652F;&#x6301;&#x7684;&#x8BED;&#x79CD;&#x65F6;&#xFF0C;&#x7531;&#x4E8E;&#x6CA1;&#x6709;&#x9ED8;&#x8BA4;&#x8BED;&#x79CD;&#xFF0C;&#x5BFC;&#x81F4;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#x539F;&#x672C;&#x5E94;&#x5F53;&#x663E;&#x793A;&#x5B57;&#x4E32;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x53EA;&#x80FD;&#x663E;&#x793A;&#x5B57;&#x4E32;&#x8D44;&#x6E90;&#x7684;id&#xFF0C;&#x66F4;&#x7CDF;&#x7CD5;&#x7684;&#x662F;&#x4F1A;&#x5BFC;&#x81F4;&#x5F15;&#x7528;&#x8BE5;&#x8D44;&#x6E90;&#x7684;java&#x4EE3;&#x7801;&#x5D29;&#x6E83;&#x3002; &#x201C;&#x4FDD;&#x7559;&#x9ED8;&#x8BA4;&#x8D44;&#x6E90;&#x201D;&#x7684;&#x539F;&#x5219;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5916;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5C4F;&#x5E55;&#x5EA6;&#x3002;res/drawable&#x4E0B;&#x7684;&#x8D44;&#x6E90;&#x88AB;&#x5206;&#x4E3A;-mdpi, -xxhdpi&#x7B49;&#x7B49;&#xFF0C;&#x5F53;&#x627E;&#x4E0D;&#x5230;&#x4E0E;&#x8BBE;&#x5907;&#x5339;&#x914D;&#x7684;drawable&#x8D44;&#x6E90;&#x65F6;&#xFF0C;Android&#x5E76;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x62FF;&#x9ED8;&#x8BA4;&#x8D44;&#x6E90;&#x9876;&#x4E0A;&#xFF0C;&#x800C;&#x662F;&#x62FF;&#x548C;&#x8BBE;&#x5907;&#x5C3A;&#x5BF8;&#x3001;&#x5BC6;&#x5EA6;&#x63A5;&#x8FD1;&#x7684;&#x8D44;&#x6E90;&#x8865;&#x4E0A;&#x3002;&#x5177;&#x4F53;&#x7B56;&#x7565;&#x53EF;&#x53C2;&#x89C1;&#x300A;&#x652F;&#x6301;&#x591A;&#x79CD;&#x5C4F;&#x5E55;&#x300B;&#x3002; &#x4F7F;&#x7528;Translations Editor&#x68C0;&#x67E5;&#x7FFB;&#x8BD1;&#x8986;&#x76D6;&#x5EA6; AndroidStudio&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5DE5;&#x5177;Translations Editor&#xFF0C;&#x5C06;&#x591A;&#x79CD;&#x8BED;&#x8A00;&#x4E0B;&#x540C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x663E;&#x793A;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x4FBF;&#x4E8E;&#x68C0;&#x67E5;&#x7FFB;&#x8BD1;&#x7684;&#x8986;&#x76D6;&#x5EA6;&#xFF0C;&#x53F3;&#x952E;res/values/strings.xml &gt; Open Translations Editor&#xFF1A; &#x8BBE;&#x5907;&#x8D44;&#x6E90;&#x7C7B;&#x578B; &#x5728;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x300A;&#x5E94;&#x7528;&#x8D44;&#x6E90;&#x300B;&#x4E2D;&#x7F57;&#x5217;&#x4E86;&#x5B8C;&#x6574;&#x7684;&#x8BBE;&#x5907;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x3002; &#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#x5982;&#x679C;&#x9488;&#x5BF9;&#x51E0;&#x79CD;&#x8BBE;&#x5907;&#x7C7B;&#x578B;&#x90FD;&#x6709;&#x5BF9;&#x5E94;&#x7684;&#x7248;&#x672C;&#xFF0C;Android&#x4F1A;&#x6309;&#x7167;&#x8BE5;&#x6587;&#x6863;&#x4E2D;&#x7684;&#x987A;&#x5E8F;&#x51B3;&#x5B9A;&#x4F18;&#x5148;&#x4F7F;&#x7528;&#x54EA;&#x4E00;&#x4E2A;&#x3002;&#x4F8B;&#x5982;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;zh&#x7248;&#x672C;&#xFF0C;&#x6709;&#x63D0;&#x4F9B;&#x4E86;w600dp&#x7248;&#x672C;&#xFF0C;&#x5728;&#x5BBD;&#x5EA6;&#x4E3A;600dp&#x7684;&#x4E2D;&#x6587;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;Android&#x4F1A;&#x4F7F;&#x7528;zh&#x7248;&#x672C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;w600dp&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十七]]></title>
    <url>%2F2017%2F10%2F28%2F2017%2F1028AndroidProgrammingBNRG17%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x521B;&#x5EFA;&#x4E86;&#x9002;&#x914D;tablet&#x7684;&#x754C;&#x9762;&#x5E03;&#x5C40;&#x2014;&#x2014;&#x5728;phone&#x4E0B;&#x9ED8;&#x8BA4;&#x662F;list&#xFF0C;&#x70B9;&#x51FB;item&#x540E;&#x5C55;&#x73B0;detail&#xFF1B;&#x5728;tablet&#x4E0B;&#x662F;list|detail&#x53CC;&#x89C6;&#x56FE;&#x6A21;&#x5F0F;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x4E3A;&#x8D44;&#x6E90;&#x521B;&#x5EFA;&#x522B;&#x540D; - &#x4E3A;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x5C4F;&#x5E55;&#x521B;&#x5EFA;&#x4E0D;&#x540C;&#x7684;&#x5E03;&#x5C40; &#x4F7F;&#x7528;&#x8D44;&#x6E90;&#x522B;&#x540D; &#x5728;res/values&#x53F3;&#x952E; &gt; New &gt; Values Resource File&#xFF1A; &#x521B;&#x5EFA;&#x6587;&#x4EF6;res/values/refs.xml&#x5982;&#x4E0B;&#xFF1A; 12345&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;resources&gt; &lt;item name=&quot;activity_masterdetail&quot; type=&quot;layout&quot;&gt;@layout/activity_fragment&lt;/item&gt;&lt;/resources&gt; &#x8FD9;&#x5C31;&#x4E3A;R.layout.activity_fragment&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x522B;&#x540D;R.layout.activity_masterdetail&#xFF0C;&#x539F;&#x5148;&#x4F7F;&#x7528;&#x524D;&#x8005;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x540E;&#x8005;&#xFF1A; 123456789// CrimeListActivity.javapublic class CrimeListActivity extends SingleFragmentActivity { ... @Override protected int getLayoutResId(){ return R.layout.activity_masterdetail; // return R.layout.activity_fragment; // &#x8FD9;&#x4E24;&#x884C;&#x4EE3;&#x7801;&#x662F;&#x7B49;&#x4EF7;&#x7684; }} &#x6839;&#x636E;&#x8BBE;&#x5907;&#x5C3A;&#x5BF8;&#x4E3A;&#x6307;&#x5B9A;&#x8D44;&#x6E90;&#x751F;&#x6210;&#x4E24;&#x5957;&#x5B9E;&#x73B0; &#x672C;&#x8282;&#x4E3A;&#x8BBE;&#x5907;&#x5BBD;&#x5EA6;&#x5927;&#x4E8E;600dp&#x65F6;&#x521B;&#x5EFA;&#x4E86;refs.xml&#x7684;&#x53E6;&#x4E00;&#x5957;&#x5B9E;&#x73B0;&#xFF0C;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x4E3A;&#xFF1A;res/values&#x53F3;&#x952E; &gt; New &gt; Values Resource File &gt; &#x5F39;&#x51FA;New Resource File &gt; &#x5728;Available qualifiers&#x4E2D;&#x9009;&#x62E9;Smallest Screen Width &gt; &#x70B9;&#x51FB; &gt;&gt; &gt; &#x5728;Smallest Screen Width&#xFF1A;&#x4E2D;&#x586B;&#x5199;600 &gt; &#x70B9;&#x51FB;OK&#xFF1A; sw&#x662F;smallest width&#x7684;&#x7F29;&#x5199;&#xFF0C;sw600dp&#x8868;&#x793A;&#x5F53;&#x8BBE;&#x5907;&#x7684;&#x5BBD;&#x5EA6;&#x5927;&#x4E8E;600dp&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x7248;&#x672C;refs.xml(sw600dp)&#x5426;&#x5219;&#x4F7F;&#x7528;&#x7248;&#x672C;refs.xml&#x3002;res/values/refs.xml(sw600dp)&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; 12345&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;resources&gt; &lt;item name=&quot;activity_masterdetail&quot; type=&quot;layout&quot;&gt;@layout/activity_twopane&lt;/item&gt;&lt;/resources&gt; &#x5728;&#x5C4F;&#x5E55;&#x5BBD;&#x5EA6;&#xFF1C;600dp&#x7684;phone&#x4E0B;&#xFF0C;activity_masterdetail=@layout/activity_fragment&#xFF1B; &#x5728;&#x5C4F;&#x5E55;&#x5BBD;&#x5EA6;&#x2265;600dp&#x7684;tablet&#xFF0C;activity_masterdetail=@layout/activity_twopane&#x3002; &#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x4F7F;&#x7528;activity_masterdetail&#xFF0C;&#x540C;&#x65F6;&#x5B9E;&#x73B0;activity_twopane&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x76EE;&#x6807;&#x6548;&#x679C;&#x3002; &#x9002;&#x914D;tablet&#x7684;&#x5E03;&#x5C40; &#x76EE;&#x6807;&#x662F;&#xFF1A;&#x8BA9;&#x5E03;&#x5C40;&#x5728;phone&#x4E0B;&#x662F;List &gt; &#x70B9;&#x51FB; &gt; Details&#x6A21;&#x5F0F;&#xFF0C;&#x5728;tablet&#x4E0B;&#x662F;List|Details&#x6A21;&#x5F0F;&#xFF0C;&#x9700;&#x8981;&#x4FEE;&#x6539;&#xFF1A; 1&#x3001;&#x4FEE;&#x6539;SingleFragmentActivity&#xFF0C;&#x4F7F;&#x5F97;&#x5B83;&#x7684;&#x5E03;&#x5C40;&#x4E0D;&#x662F;hardcode&#x5199;&#x6B7B;&#x7684; 2&#x3001;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5305;&#x542B;&#x4E24;&#x4E2A;fragment&#x5BB9;&#x5668; 3&#x3001;&#x4FEE;&#x6539;CrimeListActivity&#xFF0C;&#x4F7F;&#x4E4B;&#x5728;phone&#x4E0B;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;Fragment&#x5BB9;&#x5668;&#xFF0C;&#x5728;tablet&#x4E0B;&#x52A0;&#x8F7D;&#x4E24;&#x4E2A;&#x5BB9;&#x5668; 1.&#x4FEE;&#x6539;SingleFragmentActivity 123456789101112131415161718192021public abstract class SingleFragmentActivity extends AppCompatActivity { protected abstract Fragment createFragment(); @LayoutRes protected int getLayoutResId(){ return R.layout.activity_fragment; } @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(getLayoutResId()); // &#x4FEE;&#x6539;&#x6B64;&#x5904;&#xFF0C;&#x4E0D;&#x518D;hardcode FragmentManager fm = getSupportFragmentManager(); Fragment fragment = fm.findFragmentById(R.id.fragment_container); if(fragment == null){ fragment = createFragment(); fm.beginTransaction().add(R.id.fragment_container, fragment).commit(); } }} &#x628A;&#x539F;&#x5148;&#x5199;&#x6B7B;&#x7684;&#x52A0;&#x8F7D;&#x5E03;&#x5C40;R.layout.activity_fragment&#x6539;&#x6210;&#x4E86;&#x4ECE;&#x51FD;&#x6570;&#x83B7;&#x53D6;&#xFF0C;&#x8FD9;&#x6837;&#x5B50;&#x7C7B;&#x5C31;&#x6709;&#x673A;&#x4F1A;&#x91CD;&#x5199;&#x51FD;&#x6570;getLayoutResId()&#xFF0C;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x5B50;&#x7C7B;&#x4E2D;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x7684;&#x5E03;&#x5C40;&#x4E86;&#x3002; SingleFragmentActivity&#x6709;&#x4E24;&#x4E2A;&#x5B50;&#x7C7B;&#xFF1A;CrimeListActivity&#x548C;CrimeActivity&#x3002;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x662F;&#x524D;&#x8005;&#xFF1A;&#x5728;phone&#x4E0B;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x4E2A;CrimeListFragment&#xFF0C;&#x5728;tablet&#x4E0B;&#x5305;&#x542B;CrimeListFragment&#x548C;CrimeFragment&#x3002; @LayoutRes&#x5173;&#x952E;&#x5B57; &#x524D;&#x9762;&#x90A3;&#x6BB5;&#x4EE3;&#x7801;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;@LayoutRes&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x89C1;&#x4E66;&#x4E2D;P2464&#xFF0C;&#x8868;&#x660E;&#x8BE5;&#x51FD;&#x6570;&#x4E00;&#x5B9A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5408;&#x6CD5;&#x7684;layout&#x8D44;&#x6E90;ID&#x3002; 2.&#x521B;&#x5EFA;&#x5BB9;&#x7EB3;&#x4E24;&#x4E2A;Fragment&#x7684;&#x65B0;&#x5E03;&#x5C40; activity_twopane.xml 1234567891011121314151617181920212223&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:divider=&quot;?android:attr/dividerHorizontal&quot; android:orientation=&quot;horizontal&quot; android:showDividers=&quot;middle&quot;&gt; &lt;FrameLayout android:id=&quot;@+id/fragment_container&quot; android:layout_width=&quot;0dp&quot; android:layout_height=&quot;match_parent&quot; android:layout_weight=&quot;1&quot;&gt; &lt;/FrameLayout&gt; &lt;FrameLayout android:id=&quot;@+id/detail_fragment_container&quot; android:layout_width=&quot;0dp&quot; android:layout_height=&quot;match_parent&quot; android:layout_weight=&quot;3&quot;&gt; &lt;/FrameLayout&gt;&lt;/LinearLayout&gt; 3.&#x8BA9;CrimeListActivity&#x517C;&#x5BB9;tablet 1234567891011121314// CrimeListActivity.javapublic class CrimeListActivity extends SingleFragmentActivityimplements CrimeListFragment.Callbacks, CrimeFragment.Callbacks{ @Override protected Fragment createFragment(){ return new CrimeListFragment(); } @Override protected int getLayoutResId(){ return R.layout.activity_masterdetail; } ...} &#x8FD9;&#x4E09;&#x6B65;&#x7EC4;&#x5408;&#x7684;&#x903B;&#x8F91;&#x662F;&#xFF1A;SingleFragmentActivity&#x6839;&#x636E;&#x5B50;&#x7C7B;&#x63D0;&#x4F9B;&#x7684;LayoutResId&#x51B3;&#x5B9A;&#x8981;&#x52A0;&#x8F7D;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5E76;&#x628A;&#x5B50;&#x7C7B;&#x63D0;&#x4F9B;&#x7684;Fragment&#x6DFB;&#x52A0;&#x5230;Activity&#x3002; &#x5BF9;&#x4E8E;CrimeListActivity&#xFF0C;&#x5728;&#x5C4F;&#x5E55;&#x5BBD;&#x5EA6;&#xFF1C;600dp&#x7684;phone&#x4E0B;&#xFF0C;&#x52A0;&#x8F7D;&#x5230;&#x7684;&#x5E03;&#x5C40;&#x662F;&#x5355;Fragment&#xFF0C;&#x521B;&#x5EFA;&#x7684;Fragment&#x662F;CrimeListFragment;&#x5728;&#x5C4F;&#x5E55;&#x5BBD;&#x5EA6;&#x2265;600dp&#x7684;tablet&#x4E0B;&#xFF0C;&#x52A0;&#x8F7D;&#x5230;&#x7684;&#x5E03;&#x5C40;&#x662F;&#x53CC;Fragment&#xFF0C;&#x521B;&#x5EFA;&#x7684;Fragment&#x4E5F;&#x662F;CrimeListFragment&#xFF0C;&#x5E76;&#x5BF9;&#x5E94;&#x5230;fragment_container&#x4E0A;&#x3002; &#x6709;&#x4E2A;&#x95EE;&#x9898;&#x9700;&#x8981;&#x56DE;&#x5934;&#x518D;&#x7814;&#x7A76;&#x7684;&#xFF1A;Fragment&#x548C;&#x5E03;&#x5C40;&#x91CC;&#x7684;id&#x7A76;&#x7ADF;&#x662F;&#x600E;&#x4E48;&#x5173;&#x8054;&#x8D77;&#x6765;&#x7684;&#x5462;&#xFF1F;&#x6211;&#x8BB0;&#x5F97;&#x5728;FragmentManager&#x7684;&#x4E8B;&#x52A1;&#x4E2D;&#xFF0C;id&#x4EC5;&#x7528;&#x6765;&#x505A;&#x6807;&#x8BC6;&#x7684;&#x3002; 4.&#x5C55;&#x73B0;detail&#x89C6;&#x56FE; &#x5176;&#x5B9E;&#x4EC5;&#x8FD9;&#x4E09;&#x6B65;&#x5E76;&#x6CA1;&#x6709;&#x5B8C;&#x6210;&#x5BF9;tablet&#x7684;&#x9002;&#x914D;&#xFF0C;&#x56E0;&#x4E3A;details&#x8FD8;&#x6CA1;&#x6709;&#x51FA;&#x573A;&#x3002;&#x4E00;&#x822C;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#x5728;CrimeListFragment&#x4E2D;&#x54CD;&#x5E94;item&#x70B9;&#x51FB;&#xFF0C;&#x8BA9;CrimeFragment&#x5C55;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x8FD9;&#x6837;&#x4F1A;&#x5BFC;&#x81F4;list&#x548C;detail&#x89C6;&#x56FE;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#xFF0C;&#x4ED6;&#x4EEC;&#x662F;&#x5E73;&#x7EA7;&#x7684;&#xFF0C;&#x76F8;&#x4E92;&#x4E4B;&#x95F4;&#x5E94;&#x8BE5;&#x89E3;&#x8026;&#xFF0C;&#x8FD9;&#x5C5E;&#x4E8E;&#x4E0A;&#x5C42;CrimeListActivity&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x5E94;&#x8BE5;&#x4EA4;&#x7ED9;&#x5B83;&#x5904;&#x7406;&#x3002; &#x8BBE;&#x7F6E;&#x56DE;&#x8C03; &#x56E0;&#x6B64;&#x5728;&#x672C;&#x8282;&#x7531;CrimeListActivity&#x63D0;&#x4F9B;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x7ED9;CrimeListFragment&#xFF0C;&#x5F53;item&#x88AB;&#x70B9;&#x51FB;&#x65F6;&#xFF0C;&#x540E;&#x8005;&#x53EA;&#x8D1F;&#x8D23;&#x56DE;&#x8C03;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x5176;&#x5185;&#x90E8;&#x7EC6;&#x8282;&#x3002;&#x672C;&#x8282;&#x5904;&#x7406;&#x8FD9;&#x5757;&#x7684;&#x624B;&#x6CD5;&#x975E;&#x5E38;&#x7CBE;&#x5999;&#xFF1A; 12345678910111213141516171819202122// CrimeListFragment.javapublic class CrimeListFragment extends Fragment { ... private Callbacks mCallbacks; public interface Callbacks{ void onCrimeSelected(Crime crime); } @Override public void onAttach(Context context){ super.onAttach(context); mCallbacks = (Callbacks)context; } @Override public void onDetach(){ super.onDetach(); mCallbacks = null; } ...} &#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x7C7B;&#xFF0C;&#x8BE5;&#x7C7B;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;void onCrimeUpdated(Crime crime)&#x63A5;&#x53E3;&#x3002; &#x56DE;&#x987E;&#x7B14;&#x8BB0;&#x4E03;&#xB7;fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x5F53;CrimeListFragment&#x88AB;&#x8F7D;&#x5165;Activity&#x65F6;&#xFF0C;Activity&#x4F1A;&#x8C03;&#x7528;&#x5B83;&#x7684;onAttach(Context)&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x628A;&#x81EA;&#x5DF1;&#x5F53;&#x505A;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF0C;&#x5373;&#x8FD9;&#x4E2A;Contetxt&#x5176;&#x5B9E;&#x662F;&#x5BBF;&#x4E3B;Activity&#xFF0C;&#x4ED6;&#x53C8;&#x88AB;&#x8D4B;&#x7ED9;&#x4E86;Callbacks&#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x8FD9;&#x5C31;&#x8981;&#x6C42;&#x5BBF;&#x4E3B;Activity&#x5FC5;&#x987B;&#x6709;void onCrimeUpdated(Crime crime)&#x63A5;&#x53E3;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x51FA;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#x3002; &#x5B9E;&#x73B0;&#x56DE;&#x8C03; &#x63A5;&#x4E0B;&#x6765;&#x9700;&#x8981;&#x8BA9;&#x5BBF;&#x4E3B;Activity&#x9075;&#x5B88;&#x8BE5;&#x63A5;&#x53E3;&#xFF0C;&#x5E76;&#x54CD;&#x5E94;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#xFF1A; 12345678910111213141516171819202122232425public class CrimeListActivity extends SingleFragmentActivityimplements CrimeListFragment.Callbacks, CrimeFragment.Callbacks{ @Override protected Fragment createFragment(){ return new CrimeListFragment(); } ... @Override protected int getLayoutResId(){ return R.layout.activity_masterdetail; } @Override public void onCrimeSelected(Crime crime){ if(findViewById(R.id.detail_fragment_container) == null){ Intent intent = CrimePagerActivity.newIntent(this, crime.getId()); startActivity(intent); }else{ Fragment newDetail = CrimeFragment.newInstance(crime.getId()); getSupportFragmentManager().beginTransaction().replace(R.id.detail_fragment_container, newDetail).commit(); } }} &#x56DE;&#x987E;&#x201C;&#x521B;&#x5EFA;&#x5BB9;&#x7EB3;&#x4E24;&#x4E2A;Fragment&#x7684;&#x65B0;&#x5E03;&#x5C40;&#x201D;&#xFF0C;R.id.detail_fragment_container&#x662F;&#x5728;activity_twopane.xml&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x3002; &#x518D;&#x56DE;&#x987E;&#x201C;&#x8BA9;CrimeListActivity&#x517C;&#x5BB9;tablet&#x201D;&#xFF1A; - &#x5728;phone&#x4E0B;&#x5B83;&#x63D0;&#x4F9B;&#x7684;&#x5E03;&#x5C40;&#x662F;activity_fragment&#xFF0C;&#x56E0;&#x6B64;&#x627E;&#x4E0D;&#x5230;&#x8D44;&#x6E90;R.id.detail_fragment_container&#xFF0C;if&#x5206;&#x652F;&#x4E3A;&#x771F;&#xFF0C;&#x5C06;&#x542F;&#x52A8;CrimePagerActivity&#xFF1B; - &#x5728;tablet&#x4E0B;&#x5B83;&#x63D0;&#x4F9B;&#x7684;&#x5E03;&#x5C40;&#x662F;activity_twopane&#xFF0C;&#x8D70;else&#x5206;&#x652F;&#xFF0C;&#x4F7F;&#x7528;CrimeFragment&#x66FF;&#x6362;&#x6389;R.id.detail_fragment_container&#x3002; &#x8C03;&#x7528;&#x56DE;&#x8C03; &#x6700;&#x540E;&#x4E00;&#x6B65;&#x662F;&#x5728;&#x70B9;&#x51FB;&#x83DC;&#x5355;&#x201C;+&#x201D;&#x6216;&#x70B9;&#x51FB;item&#x65F6;&#x8C03;&#x7528;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF1A; 123456789101112131415161718192021222324// CrimeListFragment.javapublic class CrimeListFragment extends Fragment { ... private class CrimeHolder extends RecyclerView.ViewHolder implements View.OnClickListener{ ... @Override public void onClick(View view){ // &#x54CD;&#x5E94;item&#x70B9;&#x51FB; mCallbacks.onCrimeSelected(mCrime); } } @Override public boolean onOptionsItemSelected(MenuItem item){ switch (item.getItemId()){ case R.id.new_crime: // &#x54CD;&#x5E94;&#x201C;+&#x201D; Crime crime = new Crime(); CrimeLab.get(getActivity()).addCrime(crime); updateUI(); mCallbacks.onCrimeSelected(crime); return true; ... } }} 5.&#x66F4;&#x65B0;CrimeListFragment &#x5B8C;&#x5584;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x5728;CrimeFragment&#x4E2D;&#x7684;&#x6570;&#x636E;&#x88AB;&#x7F16;&#x8F91;&#x66F4;&#x65B0;&#x540E;&#xFF0C;&#x540C;&#x6B65;&#x66F4;&#x65B0;&#x5DE6;&#x4FA7;&#x7684;CrimeListFragmen&#xFF0C;&#x624B;&#x6CD5;&#x548C;&#x5C55;&#x73B0;detail&#x89C6;&#x56FE;&#x662F;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x7684;&#xFF1A;&#x5728;CrimeFragment&#x4E2D;&#x5B9A;&#x4E49;&#x5185;&#x90E8;&#x63A5;&#x53E3;&#x7C7B;&#xFF0C;&#x8BA9;CrimeListActivity&#x9075;&#x5B88;&#x8BE5;&#x63A5;&#x53E3;&#x7C7B;&#xFF0C;&#x5E76;&#x5B9A;&#x4E49;&#x56DE;&#x8C03;&#xFF0C;&#x4F9B;CrimeFragment&#x8C03;&#x7528;&#x3002;&#x6CA1;&#x4EC0;&#x4E48;&#x65B0;&#x5185;&#x5BB9;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x518D;&#x91CD;&#x590D;&#x4E86;&#x3002; &#x8BBE;&#x5907;&#x5C3A;&#x5BF8;&#x51B3;&#x5B9A;&#x7684;&#x914D;&#x7F6E; &#x5728;Android3.2&#x4E4B;&#x524D;&#x4F7F;&#x7528;&#x8BBE;&#x5907;&#x7684;&#x5177;&#x4F53;&#x5C3A;&#x5BF8;&#x4FEE;&#x9970;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x5F97;&#x8BE5;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x80FD;&#x5339;&#x914D;&#x4E0D;&#x540C;&#x7684;&#x8BBE;&#x5907;&#x5C3A;&#x5BF8;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x5C3A;&#x5BF8;&#x88AB;&#x5206;&#x4E3A;&#x56DB;&#x7C7B;&#xFF1A;small, normal, large&#x548C;xlarge&#xFF0C;&#x4E0B;&#x8868;&#x7ED9;&#x51FA;&#x8FD9;&#x56DB;&#x7C7B;&#x5BF9;&#x5E94;&#x7684;&#x5C4F;&#x5E55;&#x6700;&#x5C0F;&#x5C3A;&#x5BF8;&#xFF1A; Name Minimum screen size small 320&#xD7;426dp normal 320&#xD7;470dp large 480&#xD7;640dp xlarge 720&#xD7;960dp &#x5230;&#x4E86;Android3.2&#x4E4B;&#x540E;&#x5177;&#x4F53;&#x5C3A;&#x5BF8;&#x4FEE;&#x9970;&#x65B9;&#x5F0F;&#x88AB;&#x5E9F;&#x6389;&#x4E86;&#xFF0C;&#x53D6;&#x4EE3;&#x5B83;&#x7684;&#x662F;&#x7EF4;&#x5EA6;&#x4FEE;&#x9970;&#xFF1A; Qualifier format Description wXXXdp &#x53EF;&#x7528;&#x5BBD;&#x5EA6;&#x2265;XXXdp hXXXdp &#x53EF;&#x7528;&#x9AD8;&#x5EA6;&#x2265;XXXdp swXXXdp &#x6700;&#x5C0F;&#x5BBD;&#x5EA6;&#x6216;&#x9AD8;&#x5EA6;&#x2265;XXXdp &#x4F8B;&#x5982;&#x4E3A;&#x5BBD;&#x5EA6;&#x2265;300dp&#x7684;&#x5C4F;&#x5E55;&#x521B;&#x5EFA;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#xFF0C;&#x5E94;&#x4E3A;res/layout-w300dp&#x3002; sw&#x7684;&#x542B;&#x4E49;&#x662F;&#x6700;&#x5C0F;&#x5BBD;&#x5EA6;&#xFF0C;&#x4F8B;&#x5982;&#x5728;1024&#xD7;800&#x7684;&#x5C4F;&#x5E55;sw&#x5C31;&#x662F;800&#xFF0C;&#x5728;800&#xD7;1024&#x7684;&#x5C4F;&#x5E55;&#xFF0C;sw&#x4F9D;&#x7136;&#x662F;800&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十六]]></title>
    <url>%2F2017%2F10%2F27%2F2017%2F1027AndroidProgrammingBNRG16%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x4F7F;&#x7528;&#x6444;&#x50CF;&#x5934;&#x4E3A;Details&#x754C;&#x9762;&#x6DFB;&#x52A0;&#x7167;&#x7247;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x6444;&#x50CF;&#x5934;&#x7684;&#x4F7F;&#x7528; - Bitmap&#x7C7B;&#x7684;&#x4F7F;&#x7528; - users-feature&#x58F0;&#x660E; &#x6587;&#x4EF6;&#x548C;&#x76EE;&#x5F55;&#x76F8;&#x5173;&#x7684;Context API&#x8FD4;&#x56DE;&#x4FE1;&#x606F; Android&#x5E94;&#x7528;&#x7684;&#x5185;&#x90E8;&#x5B58;&#x50A8;&#x8DEF;&#x5F84;&#x4E3A;&#xFF1A;/data/data/&lt;&#xA0;package&#xA0;name&#xA0;&gt; files&#x76F8;&#x5173; - File getFilesDir() &#x8FD4;&#x56DE;/data/data/&lt;&#xA0;package&#xA0;name&#xA0;&gt;/files/&#x7684;File&#x5BF9;&#x8C61; - FileInputStream openFileInput(String name) &#x6253;&#x5F00;files/&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x4EE5;&#x8BFB;&#x51FA;&#x6570;&#x636E;&#x3002; - FileOutputStream openFileOutput(String name)&#x6253;&#x5F00;files/&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x4EE5;&#x5199;&#x5165;&#x6570;&#x636E;&#x3002; - String[] fileList() &#x83B7;&#x53D6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x79C1;&#x6709;&#x76EE;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x540D; custome dir - File getDir(String name, int mode) &#x8FD4;&#x56DE;&#x5E94;/data/data/&lt;&#xA0;package&#xA0;name&#xA0;&gt;/&#x4E0B;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x7684;File&#x5BF9;&#x8C61; cache - File getCacheDir() &#x83B7;&#x53D6;/data/data/&lt;&#xA0;package&#xA0;name&#xA0;&gt;/cache/&#x7684;File&#x5BF9;&#x8C61;&#xFF0C;&#x6CE8;&#x610F;&#x8981;&#x4FDD;&#x6301;&#x8BE5;&#x76EE;&#x5F55;&#x6574;&#x6D01;&#x3002; &#x4F7F;&#x7528;FileProvider &#x5728;app&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;ContentProvider&#x5C06;&#x6587;&#x4EF6;&#x66B4;&#x9732;&#x51FA;&#x6765;&#x3002;&#x8FD9;&#x5728;&#x300A;&#x7B14;&#x8BB0;15&#xB7;&#x8BF7;&#x6C42;&#x901A;&#x8BAF;&#x5F55;&#x5E76;&#x63A5;&#x6536;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x300B;&#x4F7F;&#x7528;&#x8FC7;&#x3002;&#x4F7F;&#x7528;ContentProvider&#x5C06;&#x6587;&#x4EF6;&#x7684;URI&#x66B4;&#x9732;&#x51FA;&#x53BB;&#xFF0C;&#x5176;&#x5B83;app&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BE5;URI&#x4E0B;&#x8F7D;&#x6216;&#x5199;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x786E;&#x4FDD;&#x6587;&#x4EF6;&#x6240;&#x6709;&#x8005;&#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x7684;&#x53EF;&#x63A7;&#x6027;&#x3002; &#x5982;&#x679C;&#x53EA;&#x662F;&#x5E0C;&#x671B;&#x4ECE;&#x5176;&#x4ED6;app&#x63A5;&#x6536;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;ContentProvider&#x7565;&#x91CD;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;FileProvider&#x3002;&#x672C;&#x8282;&#x4EE5;&#x62CD;&#x7167;&#x4E3A;&#x4F8B;&#xFF0C;&#x8BA9;&#x76F8;&#x673A;&#x628A;&#x62CD;&#x6444;&#x7684;&#x7167;&#x7247;&#x5199;&#x5165;&#x672C;app&#xFF0C;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; ## 1.xml&#x914D;&#x7F6E;&#x8981;&#x66B4;&#x9732;&#x7684;&#x6587;&#x4EF6; res&#x53F3;&#x952E; &gt; New &gt; Android resource file &#x5728;&#x5F39;&#x51FA;&#x7A97;&#x53E3;&#x9009;&#x62E9;Resource type &#x4E3A;XML&#xFF0C;&#x521B;&#x5EFA;&#x6587;&#x4EF6;res/xml/files.xml 123&lt;paths&gt; &lt;files-path name=&quot;crime_photos&quot; path=&quot;.&quot;/&gt;&lt;/paths&gt; &#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF1A;&#x5C06;&#x79C1;&#x6709;&#x5B58;&#x50A8;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x6620;&#x5C04;&#x4E3A;crime_photos 2.AndroidManifest.xml 123456789101112131415&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.bnrg.bnrg07&quot;&gt; &lt;application ...&gt; ... &lt;provider android:authorities=&quot;com.bnrg.bnrg07.&quot; android:name=&quot;android.support.v4.content.FileProvider&quot; android:exported=&quot;false&quot; android:grantUriPermissions=&quot;true&quot;&gt; &lt;meta-data android:name=&quot;android.support.FILE_PROVIDER_PATHS&quot; android:resource=&quot;@xml/files&quot;/&gt; &lt;/provider&gt; &lt;/application&gt;&lt;/manifest&gt; &#x5176;&#x4E2D;authority&#x662F;&#x4E00;&#x4E2A;&#x8DEF;&#x5F84;&#xFF0C;&#x8868;&#x793A;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x7684;&#x4F4D;&#x7F6E;&#x3002; exported=&quot;false&quot;&#x8868;&#x793A;&#x7981;&#x6B62;&#x4EFB;&#x4F55;&#x6CA1;&#x6709;&#x7ECF;&#x8FC7;&#x4F60;&#x6388;&#x6743;&#x7684;&#x4EBA;&#x4F7F;&#x7528;&#x4F60;&#x7684;provider grantUriPermissions=&quot;true&quot;&#x8868;&#x793A;&#x5F53;&#x53D1;&#x9001;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6743;&#x9650;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x6388;&#x6743;&#x7ED9;&#x8BE5;&#x6743;&#x9650;&#x7684;URI &#x6700;&#x540E;&#x9700;&#x8981;&#x52A0;&#x4E0A;&#x914D;&#x7F6E;&#x66B4;&#x9732;&#x6587;&#x4EF6;&#x7684;xml&#x4FE1;&#x606F;&#x3002; 3.&#x542F;&#x52A8;&#x76F8;&#x673A;&#x5E94;&#x7528; 123456789101112131415161718192021222324252627282930313233343536373839404142// CrimeFragment.javapublic void onCreate(Bundle savedInstance){ ... mPhotoFile = CrimeLab.get(getActivity()).getPhotoFile(mCrime); // &#x2462;}@Overridepublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstance){ ... mPhotoButton = (ImageButton)v.findViewById(R.id.crime_camera); // &#x2460; &#x542F;&#x52A8;&#x62CD;&#x7167;app&#x7684;&#x9690;&#x5F0F;Intent final Intent captureImage = new Intent(MediaStore.ACTION_IMAGE_CAPTURE); // &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x62CD;&#x7167;&#x7684;&#x5E94;&#x7528; boolean canTakePhoto = (mPhotoFile != null &amp;&amp; captureImage.resolveActivity(packageManager) != null); mPhotoButton.setEnabled(canTakePhoto); mPhotoButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ // &#x2461; &#x5C06;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x7FFB;&#x8BD1;&#x6210;Uri Uri uri = FileProvider.getUriForFile(getActivity(), &quot;com.bnrg.bnrg07.criminalintent.fileprovider&quot;, mPhotoFile); captureImage.putExtra(MediaStore.EXTRA_OUTPUT, uri); // &#x5F97;&#x5230;&#x6BCF;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x62CD;&#x7167;&#x7684;Activity List&lt;ResolveInfo&gt; cameraActivities = getActivity().getPackageManager(). queryIntentActivities(captureImage, PackageManager.MATCH_DEFAULT_ONLY); // &#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;Activity&#x6388;&#x6743;&#xFF0C;&#x53EF;&#x4EE5;&#x5199;&#x5165;Uri for(ResolveInfo activity: cameraActivities){ getActivity().grantUriPermission( activity.activityInfo.packageName, uri, Intent.FLAG_GRANT_WRITE_URI_PERMISSION); } startActivityForResult(captureImage, REQUEST_PHOTO); } });} &#x5176;&#x4E2D;&#x2460;&#xFF0C;MediaStore.ACTION_IMAGE_CAPTURE&#x5C06;&#x542F;&#x52A8;&#x62CD;&#x7167;app&#xFF0C;&#x4F46;&#x662F;&#x9ED8;&#x8BA4;&#x5E76;&#x4E0D;&#x62CD;&#x6444;&#x5168;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x7167;&#x7247;&#xFF0C;&#x800C;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x7F29;&#x7565;&#x56FE;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x5B83;&#x585E;&#x5230;Intent&#x91CC;&#x901A;&#x8FC7;onActivityResult(...)&#x8FD4;&#x56DE;&#xFF1B;&#x8981;&#x60F3;&#x5F97;&#x5230;&#x5168;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x7167;&#x7247;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5411;&#x9690;&#x5F0F;Intent&#x7684;MediaStore.EXTRA_OUTPUT&#x5199;&#x5165;Uri&#xFF0C;&#x8FD9;&#x6837;&#x62CD;&#x7167;app&#x5C06;&#x5168;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x7167;&#x7247;&#x5199;&#x5165;&#x8BE5;Uri&#x3002; &#x5176;&#x4E2D;&#x2461;&#xFF0C;FileProvider.getUriForFile(...)&#x5C06;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x7FFB;&#x8BD1;&#x6210;Uri&#xFF0C;&#x62CD;&#x7167;app&#x5C06;&#x7167;&#x7247;&#x6587;&#x4EF6;&#x5199;&#x5165;&#x8BE5;Uri&#xFF0C;mPhotoFile&#x7684;&#x5B9E;&#x9645;&#x503C;&#x662F;/data/data/&lt;&#x5305;&#x540D;&gt;/files/IMG_xxxx.jpg&#x3002; &#x5176;&#x4E2D;&#x2462;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x7684;&#x751F;&#x6210;&#x7B56;&#x7565;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415// Crime.javapublic class Crime { ... public String getPhotoFilename(){ // &#x6587;&#x4EF6;&#x540D; return &quot;IMG_&quot; + getId().toString() + &quot;.jpg&quot;; }}// CrimeLab.javapublic class CrimeLab { ... public File getPhotoFile(Crime crime){ // &#x8DEF;&#x5F84;&#x540D; + &#x6587;&#x4EF6;&#x540D; File filesDir = mContext.getFilesDir(); return new File(filesDir, crime.getPhotoFilename()); }} 4.&#x5C06;&#x62CD;&#x5230;&#x7684;&#x7167;&#x7247;&#x663E;&#x793A;&#x51FA;&#x6765; &#x66F4;&#x65B0;&#x7167;&#x7247;&#x7684;&#x65F6;&#x673A;&#x6709;&#x4E24;&#x4E2A;&#xFF1A;1&#x3001;&#x5F53;Fragment&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E;&#xFF1B;2&#x3001;&#x91CD;&#x65B0;&#x62CD;&#x6444;&#x7167;&#x7247;&#x4E4B;&#x540E;&#x3002; &#x5BF9;&#x4E8E;1&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5728;Fragment&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E;&#xFF0C;&#x662F;&#x4E0D;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x5C3A;&#x5BF8;&#x7684;&#xFF0C;&#x5B83;&#x6700;&#x5148;&#x83B7;&#x5F97;&#x81EA;&#x5DF1;&#x7684;&#x5C3A;&#x5BF8;&#x662F;&#x5728;onCreate(...) &gt; onStart(...) &gt; onResume(...)&#x4E4B;&#x540E;&#x3002;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x8BA1;&#x7B97;Bitmap&#x5E94;&#x8BE5;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x5728;onResume(...)&#x91CC;&#x505A;&#xFF1B;&#x8981;&#x4E48;&#x662F;&#x5728;onCreateView(...)&#x91CC;&#x505A;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x80FD;&#x7C97;&#x7565;&#x4F30;&#x7B97;&#xFF0C;&#x672C;&#x8282;&#x662F;&#x91C7;&#x7528;&#x4E86;&#x540E;&#x8005;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x867D;&#x7136;&#x4E0D;&#x77E5;&#x9053;Fragment&#x7684;&#x5177;&#x4F53;&#x5C3A;&#x5BF8;&#xFF0C;&#x4F46;&#x80FD;&#x77E5;&#x9053;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#xFF0C;&#x672C;&#x8282;&#x5C31;&#x662F;&#x6839;&#x636E;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#x786E;&#x5B9A;&#x7167;&#x7247;&#x7684;&#x7F29;&#x653E;&#x6BD4;&#x4F8B;&#x3002; &#x6B64;&#x5904;&#x5F85;&#x786E;&#x8BA4; &#x52A0;&#x8F7D;Bitmap Bitmap&#x4EC5;&#x5BF9;&#x56FE;&#x50CF;&#x6587;&#x4EF6;&#x505A;&#x4E86;&#x7B80;&#x5355;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x5982;&#x679C;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x7684;&#x56FE;&#x50CF;&#x6587;&#x4EF6;&#xFF0C;&#x8F7D;&#x5165;&#x5230;Bitmap&#x5BF9;&#x8C61;&#x540E;&#xFF0C;&#x5C06;&#x88AB;&#x5B8C;&#x5168;&#x89E3;&#x538B;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;5M&#x7684;&#x538B;&#x7F29;&#x56FE;&#x7247;&#xFF0C;&#x52A0;&#x8F7D;&#x5230;Bitmap&#x7684;&#x5185;&#x5B58;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x81A8;&#x80C0;&#x597D;&#x51E0;&#x500D;&#xFF01; &#x672C;&#x8282;&#x6839;&#x636E;&#x8BBE;&#x5907;&#x7684;&#x5C3A;&#x5BF8;&#x5BF9;&#x56FE;&#x50CF;&#x505A;&#x4E86;&#x7F29;&#x653E;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122// PictureUtils.javapublic class PictureUtils { public static Bitmap getScaledBitmap(String path, int destWidth, int destHeight){ BitmapFactory.Options options = new BitmapFactory.Options(); options.inJustDecodeBounds = true; BitmapFactory.decodeFile(path, options); float srcWidth = options.outWidth; // &#x83B7;&#x5F97;&#x6E90;&#x56FE;&#x5C3A;&#x5BF8; float srcHeight = options.outHeight; int inSampleSize = 1; // &#x8BA1;&#x7B97;&#x7F29;&#x653E;&#x7CFB;&#x6570; if(srcHeight &gt; destHeight || srcWidth &gt; destWidth){ float heightScale = srcHeight / destHeight; float widthScale = srcWidth / destWidth; inSampleSize = Math.round(heightScale &gt; widthScale? heightScale: widthScale); } options = new BitmapFactory.Options(); options.inSampleSize = inSampleSize; // &#x5BF9;&#x6E90;&#x56FE;&#x7F29;&#x653E;&#xFF0C;&#x83B7;&#x5F97;&#x65B0;&#x56FE; return BitmapFactory.decodeFile(path, options); } ...} users-feature&#x58F0;&#x660E; &#x5F53;app&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4F9D;&#x8D56;&#x8BBE;&#x5907;&#x7279;&#x6027;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#x672C;&#x8282;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x76F8;&#x673A;&#xFF0C;&#x6700;&#x597D;&#x628A;&#x8FD9;&#x4E2A;&#x4FE1;&#x606F;&#x544A;&#x8BC9;Android&#x7CFB;&#x7EDF;&#xFF0C;&#x5F53;Google Play&#x5206;&#x53D1;&#x5E94;&#x7528;&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x5728;&#x7279;&#x5B9A;&#x8BBE;&#x5907;&#x4E0A;&#x5206;&#x53D1;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x662F;&#x5728;Manifest.xml&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A; 123456&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.bnrg.bnrg07&quot;&gt; &lt;uses-feature android:name=&quot;android.hardware.camera&quot; android:required=&quot;false&quot;/&gt; ...&lt;/manifest&gt; &#x5176;&#x4E2D;android:required=&quot;false&quot;&#x8868;&#x793A;&#x5373;&#x4F7F;&#x6CA1;&#x6709;&#x6444;&#x50CF;&#x5934;&#xFF0C;app&#x4E5F;&#x80FD;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#xFF0C;&#x53EA;&#x662F;&#x67D0;&#x4E9B;&#x529F;&#x80FD;&#x4F1A;&#x53D7;&#x9650;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十五]]></title>
    <url>%2F2017%2F10%2F26%2F2017%2F1026AndroidProgrammingBNRG15%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x5728;&#x5B57;&#x7B26;&#x4E32;&#x8D44;&#x6E90;&#x4E2D;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x5316;&#x5B57;&#x7B26; - &#x4F7F;&#x7528;&#x9690;&#x5F0F;Intents &#x5728;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#x5316;&#x5B57;&#x7B26;&#x4E32; &#x5728;strings.xml&#x4E2D;&#x6709;&#x5982;&#x4E0B;&#x5B9A;&#x4E49;&#xFF1A; 123&lt;string name=&quot;crime_report&quot;&gt;%1$s!The crime was discovered on %2$s. %3$s, and %4$s&lt;/string&gt; &#x5B83;&#x4F7F;&#x7528;%1\(s&#x3001;%2\)s&#x4F5C;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x53C2;&#x6570;&#x7684;&#x5360;&#x4F4D;&#x7B26;&#x3002;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x624D;&#x80FD;&#x786E;&#x5B9A;&#x5177;&#x4F53;&#x503C;&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x7684;java&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1String report = getString(R.string.crime_report, mCrime.getTitle(), dateString, solvedString, suspect); &#x4F7F;&#x7528;&#x9690;&#x5F0F;Intents &#x663E;&#x5F0F;Intents vs &#x9690;&#x5F0F;Intents &#x4F7F;&#x7528;&#x663E;&#x5F0F;Intents&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x5F85;&#x542F;&#x52A8;Activity&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x5982;&#xFF1A; 123Intent intent = new Intent(getActivity(), CrimePagerActivity.class);intent.putExtra(EXTRA_CRIME_ID, crimeId);startActivity(intent); &#x4F7F;&#x7528;&#x9690;&#x5F0F;Intent&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5411;OS&#x63CF;&#x8FF0;&#x8981;&#x5B8C;&#x6210;&#x4EC0;&#x4E48;&#x5DE5;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x6D4F;&#x89C8;&#x7F51;&#x9875;&#x3001;&#x53D1;&#x9001;&#x6570;&#x636E;&#x7B49;&#x3002; &#x5B9A;&#x4E49;&#x9690;&#x5F0F;Intent &#x4F7F;&#x7528;&#x9690;&#x5F0F;Intent&#x6765;&#x63CF;&#x8FF0;&#x8981;&#x5B8C;&#x6210;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x51E0;&#x4E2A;&#x5173;&#x952E;&#x4FE1;&#x606F;&#xFF1A; - &#x8981;&#x6267;&#x884C;&#x7684;&#x52A8;&#x4F5C;&#xFF08;action&#xFF09;&#x3002;&#x8FD9;&#x662F;&#x7531;class Intent&#x5B9A;&#x4E49;&#x7684;&#x4E00;&#x4E9B;&#x5E38;&#x91CF;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6D4F;&#x89C8;&#x4E00;&#x4E2A;URL&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Intent.ACTION_VIEW&#xFF1B;&#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Intent.ACTION_SEND&#x3002; - &#x6570;&#x636E;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x4E0D;&#x5728;&#x672C;&#x5730;&#xFF0C;&#x4F8B;&#x5982;&#x7F51;&#x9875;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;URI&#x6765;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x8005;&#x6307;&#x5411;ContentProvider&#x7684;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#x3002; - action&#x6240;&#x670D;&#x52A1;&#x7684;&#x6570;&#x636E;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;MINE&#x7C7B;&#x578B;&#xFF0C;&#x5982;text/html or audio/mpeg3&#x3002;&#x5982;&#x679C;intent&#x5305;&#x542B;&#x6570;&#x636E;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5219;&#x8BE5;&#x7C7B;&#x578B;&#x901A;&#x5E38;&#x662F;&#x6765;&#x81EA;&#x8BE5;&#x6570;&#x636E;&#x3002; - &#x5206;&#x7C7B;&#xFF08;categories&#xFF09;&#x3002;action&#x662F;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;category&#x5219;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5728;&#x54EA;&#x3001;&#x4EC0;&#x4E48;&#x65F6;&#x95F4;&#x6216;&#x8005;&#x600E;&#x6837;&#x4F7F;&#x7528;Activity&#x3002;&#x4F8B;&#x5982;&#xFF1A;android.intent.category.LAUNCHER&#x6307;&#x5B9A;&#x4E00;&#x4E2A;Activity&#x4F5C;&#x4E3A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x542F;&#x52A8;&#x9879;&#xFF1B;android.intent.category.INFO&#x6307;&#x5B9A;&#x4E00;&#x4E2A;Activity&#x5411;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x5305;&#x4FE1;&#x606F;&#x3002; &#x5339;&#x914D;Intent&#x7684;&#x8FC7;&#x7A0B; &#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x6D4F;&#x89C8;&#x7F51;&#x9875;&#x7684;&#x9690;&#x5F0F;intent&#x9700;&#x8981;&#x6307;&#x5B9A;&#xFF1A;action&#x4E3A;Intent.ACTION_VIEW &#x548C; &#x7F51;&#x9875;&#x7684;Uri&#x3002;&#x57FA;&#x4E8E;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C06;&#x5339;&#x914D;&#x5408;&#x9002;&#x7684;&#x5E94;&#x7528;&#x4EE5;&#x53CA;&#x5408;&#x9002;&#x7684;&#x7684;Activity&#xFF08;&#x5982;&#x679C;&#x5339;&#x914D;&#x5230;&#x591A;&#x4E2A;&#xFF0C;&#x5219;&#x8BE2;&#x95EE;&#x7528;&#x6237;&#x9009;&#x62E9;&#xFF09;&#x3002; Activity&#x4F1A;&#x5728;&#x5176;manifest&#x6587;&#x4EF6;&#x4E2D;&#x901A;&#x8FC7;intent filter&#x5411;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BA3;&#x544A;&#x81EA;&#x5DF1;&#x9002;&#x914D;ACTION_VIEW&#x64CD;&#x4F5C;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x5E94;&#x7528;&#x5C31;&#x9700;&#x8981;&#x5728;&#x5176;manifest&#x6587;&#x4EF6;&#x4E2D;&#x6CE8;&#x660E;&#xFF1A; 123456789101112&lt;activity android:name=&quot;.BrowserActivity&quot; android:label=&quot;@string/app_name&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.VIEW&quot;/&gt; &lt;category android:name=&quot;android.intent.category.DEFAULT&quot;/&gt; &lt;data android:scheme=&quot;http&quot; android:host=&quot;www.bignerdranch.com&quot;/&gt; &lt;/intent-filter&gt;&lt;/activity&gt; &#x9700;&#x8981;&#x7ED9;category&#x5B9A;&#x4E49;&#x4E3A;DEFAULT&#xFF0C;&#x624D;&#x80FD;&#x8BA9;&#x8BE5;Activity&#x54CD;&#x5E94;&#x9690;&#x5F0F;intent&#x3002;action&#x544A;&#x8BC9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8BE5;activity&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x4EC0;&#x4E48;&#x5DE5;&#x4F5C;&#xFF0C;DEFAULT category&#x5219;&#x544A;&#x8BC9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5F53;OS&#x4E3A;&#x67D0;&#x4E00;&#x4EFB;&#x52A1;&#x5339;&#x914D;&#x5907;&#x9009;&#x65F6;&#xFF0C;&#x5E94;&#x5F53;&#x8003;&#x8651;&#x672C;Activity&#x3002; &#x672C;&#x8282;&#x5904;&#x7406;&#x9690;&#x5F0F;Intent&#x7684;&#x4EE3;&#x7801; &#x8BF7;&#x6C42;&#x53D1;&#x9001;&#x6570;&#x636E; &#x672C;&#x8282;&#x5728;CrimeFragment&#x957F;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;crime report&#x6309;&#x94AE;&#xFF0C;&#x70B9;&#x51FB;&#x540E;&#x5C06;&#x53D1;&#x8D77;&#x4E00;&#x4E2A;&#x9690;&#x5F0F;Intent&#x8BF7;&#x6C42; 123456789101112// CrimeFragment.java mReportButton = (Button)v.findViewById(R.id.crime_report); mReportButton.setOnClickListener(new View.OnClickListener(){ public void onClick(View v){ Intent i = new Intent(Intent.ACTION_SEND); i.setType(&quot;text/plain&quot;); i.putExtra(Intent.EXTRA_TEXT, getCrimeReport()); i.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.crime_report_suspect)); i = Intent.createChooser(i, getString(R.string.send_report)); startActivity(i); } }); &#x5982;&#x679C;&#x7CFB;&#x7EDF;&#x627E;&#x5230;&#x591A;&#x4E2A;&#x53EF;&#x5904;&#x7406;ACTION_SEND&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x5C31;&#x4F1A;&#x5F39;&#x51FA;&#x9009;&#x62E9;&#x7A97;&#x53E3;&#xFF1B;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5F39;&#x51FA;&#x9009;&#x62E9;&#x7A97;&#x53E3;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#xFF1A;1&#x3001;&#x7CFB;&#x7EDF;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x80FD;&#x5904;&#x7406;ACTION_SEND&#xFF1B;2&#x3001;&#x7CFB;&#x7EDF;&#x4E3A;&#x9690;&#x5F0F;Intent&#x8BBE;&#x7F6E;&#x4E86;&#x9ED8;&#x8BA4;app&#x3002; &#x5F53;&#x6709;&#x591A;&#x4E2A;&#x5907;&#x9009;&#x5E94;&#x7528;&#x53EF;&#x7528;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x603B;&#x662F;&#x5411;&#x7528;&#x6237;&#x5F39;&#x51FA;&#x9009;&#x62E9;&#x8BE2;&#x95EE;&#x7A97;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x5982;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x8C03;&#x7528;Intent.createChooser(...)&#x3002; &#x4E0D;&#x8FC7;&#x6211;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x7684;&#x5165;&#x53E3;:( &#x8BF7;&#x6C42;&#x901A;&#x8BAF;&#x5F55;&#x5E76;&#x63A5;&#x6536;&#x8FD4;&#x56DE;&#x6570;&#x636E; &#x548C;&#x8BF7;&#x6C42;&#x53D1;&#x9001;&#x6570;&#x636E;&#x4E0D;&#x540C;&#xFF0C;&#x8BF7;&#x6C42;&#x901A;&#x8BAF;&#x5F55;&#x540E;&#x9700;&#x8981;&#x4ECE;&#x901A;&#x8BAF;&#x5F55;&#x5F97;&#x5230;&#x9009;&#x4E2D;&#x7684;&#x8054;&#x7CFB;&#x4EBA;&#xFF0C;&#x5728;&#x8BF7;&#x6C42;&#x4EE3;&#x7801;&#x5904;&#x9700;&#x8981;&#x8C03;&#x7528;startActivityForResult(...)&#xFF1A; 12345678// CrimeFragment.java mSuspectButton = (Button)v.findViewById(R.id.crime_suspect); mSuspectButton.setOnClickListener(new View.OnClickListener(){ public void onClick(View v){ Intent i = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI); startActivityForResult(i, REQUEST_CONTACT); } }); &#x5728;&#x7B14;&#x8BB0;&#x4E94;&#xB7;&#x4ECE;&#x542F;&#x52A8;&#x7684;Activity&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x4E2D;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x5F53;&#x88AB;&#x542F;&#x52A8;&#x7684;Activity&#x8FD4;&#x56DE;&#x540E;&#xFF0C;&#x542F;&#x52A8;&#x65B9;Activity&#x4F1A;&#x6536;&#x5230;onActivityResult(...)&#x56DE;&#x8C03;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031// CrimeFragment.java @Override public void onActivityResult(int requestCode, int resultCode, Intent data){ if(resultCode != Activity.RESULT_OK){ return; } if(requestCode == REQUEST_DATE){ ... }else if(requestCode == REQUEST_CONTACT &amp;&amp; data != null){ Uri contactUri = data.getData(); String[] queryFields = new String[]{ // &#x5F85;&#x67E5;&#x8BE2;&#x5B57;&#x6BB5; ContactsContract.Contacts.DISPLAY_NAME }; // &#x67E5;&#x8BE2; Cursor cursor = getActivity().getContentResolver() .query(contactUri, queryFields, null, null, null); try{ if(cursor.getCount() == 0){ return; } // &#x5F97;&#x5230;&#x7B2C;1&#x884C;&#x7B2C;1&#x5217;&#x6570;&#x636E; cursor.moveToFirst(); String suspect = cursor.getString(0); mCrime.setSuspect(suspect); mSuspectButton.setText(suspect); }finally{ cursor.close(); } } } &#x8003;&#x8651;&#x5230;&#x901A;&#x7528;&#x6027;&#xFF0C;&#x901A;&#x8BAF;&#x5F55;&#x7684;Activity&#x53EA;&#x8FD4;&#x56DE;&#x88AB;&#x9009;&#x4E2D;&#x8054;&#x7CFB;&#x4EBA;&#x7684;uri&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;ContentResolver&#x67E5;&#x8BE2;&#x5230;&#x8BE5;&#x8054;&#x7CFB;&#x4EBA;&#x7684;&#x5177;&#x4F53;&#x4FE1;&#x606F;&#xFF0C;&#x67E5;&#x8BE2;&#x65B9;&#x6CD5;&#x540C;SQLite&#x3002; &#x901A;&#x8BAF;&#x5F55;&#x8BBF;&#x95EE;&#x6743;&#x9650; &#x53EA;&#x6709;&#x5F97;&#x5230;contact app&#x7684;&#x6388;&#x6743;&#x624D;&#x80FD;&#x8BBF;&#x95EE;&#x901A;&#x8BAF;&#x5F55;&#x6570;&#x636E;&#xFF0C;contact app&#x5177;&#x5907;&#x8BBF;&#x95EE;&#x8054;&#x7CFB;&#x4EBA;&#x6570;&#x636E;&#x5E93;&#x7684;&#x6240;&#x6709;&#x6743;&#x9650;&#xFF0C;&#x5F53;contact app&#x5411;&#x7236;activity&#x8FD4;&#x56DE;URI&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x6CE8;&#x660E;Intent.FLAG_GRANT_READ_URI_PERMISSION&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x786E;&#x4FDD;&#x7236;Activity&#x53EA;&#x80FD;&#x8BBF;&#x95EE;&#x4E00;&#x6B21;&#x6570;&#x636E;&#xFF0C;&#x6709;&#x6548;&#x9632;&#x6B62;&#x8D8A;&#x6743;&#x8BFB;&#x53D6;&#x8054;&#x7CFB;&#x4EBA;&#x6570;&#x636E;&#x5E93;&#x3002; &#x8BF7;&#x6C42;&#x9690;&#x5F0F;Intent&#x5148;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x53EF;&#x54CD;&#x5E94;&#x7684;&#x5305; &#x524D;&#x9762;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x5E94;&#x7528;&#x53EF;&#x4EE5;&#x54CD;&#x5E94;&#x9690;&#x5F0F;Intent&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x5F39;&#x51FA;&#x8BE2;&#x95EE;&#x7A97;&#x53E3;&#x4F9B;&#x7528;&#x6237;&#x9009;&#x62E9;&#xFF1B;&#x4F46;&#x662F;&#x6709;&#x53EF;&#x80FD;&#x4E0D;&#x5B58;&#x5728;&#x5019;&#x9009;&#x5E94;&#x7528;&#x2014;&#x2014;&#x8C01;&#x90FD;&#x65E0;&#x6CD5;&#x5904;&#x7406;&#x8BE5;&#x9690;&#x5F0F;Intent&#xFF0C;&#x6B64;&#x65F6;&#x5982;&#x679C;&#x76F4;&#x63A5;&#x8C03;&#x7528;startActivity(...)&#x4F1A;&#x5BFC;&#x81F4;&#x5D29;&#x6E83;&#xFF0C;&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x5148;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x5019;&#x9009;&#x5E94;&#x7528;&#xFF1A; 12345678910111213// CrimeFragment.java mSuspectButton = (Button)v.findViewById(R.id.crime_suspect); Intent pickContact = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI); mSuspectButton.setOnClickListener(new View.OnClickListener(){ public void onClick(View v){ startActivityForResult(i, REQUEST_CONTACT); } }); PackageManager packageManager = getActivity().getPackageManager(); // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x5339;&#x914D;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x628A;&#x6309;&#x94AE;&#x7F6E;&#x7070; if(packageManager.resolveActivity(pickContact, PackageManager.MATCH_DEFAULT_ONLY) == null){ mSuspectButton.setEnabled(false); } PackageManager&#x77E5;&#x9053;&#x6240;&#x6709;&#x5B89;&#x88C5;&#x5728;&#x672C;&#x5730;&#x8BBE;&#x5907;&#x4E0A;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x8C03;&#x7528;&#x5176;resolveActivity(...)&#x65B9;&#x6CD5;&#x4F1A;&#x67E5;&#x627E;&#x4E0E;Intent&#x5339;&#x914D;&#x7684;Activity&#xFF0C;&#x53C2;&#x6570;MATCH_DEFAULT_ONLY&#x628A;&#x641C;&#x7D22;&#x9650;&#x5236;&#x5728;&#x6709;CATEGORY_DEFAULT&#x6807;&#x5FD7;&#x7684;Activity&#xFF0C;&#x786E;&#x4FDD;&#x548C;startActivity(Intent)&#x7684;&#x903B;&#x8F91;&#x4E00;&#x81F4;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十四]]></title>
    <url>%2F2017%2F10%2F25%2F2017%2F1025AndroidProgrammingBNRG14%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;SQLite&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x628A;&#x539F;&#x5148;&#x4F7F;&#x7528;Singleton&#x8BB0;&#x5F55;&#x5728;&#x5185;&#x5B58;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6C38;&#x4E45;&#x4FDD;&#x5B58;&#x5230;&#x4E86;&#x6570;&#x636E;&#x5E93;&#x4E0A;&#x3002;&#x4F7F;&#x5F97;app&#x5177;&#x5907;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x7684;&#x80FD;&#x529B;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - SQLite&#x6570;&#x636E;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4; &#x4F7F;&#x7528;SQLite&#x6570;&#x636E;&#x5E93; 1. &#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93; &#x9996;&#x5148;&#x6D3E;&#x751F;SQLiteOpenHelper&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x7528;&#x4E8E;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x5E93;&#xFF1A; 1234567891011121314151617181920212223// CrimeBaseHelper.javapublic class CrimeBaseHelper extends SQLiteOpenHelper{ private static final int VERSION = 1; private static final String DATABASE_NAME = &quot;crimeBase.db&quot;; public CrimeBaseHelper(Context context){ super(context, DATABASE_NAME, null, VERSION); } @Override public void onCreate(SQLiteDatabase db){ db.execSQL(&quot;create table &quot; + CrimeDbSchema.CrimeTable.NAME + &quot;(&quot; + &quot; _id integer primary key autoincrement, &quot;+ CrimeDbSchema.CrimeTable.Cols.UUID + &quot;, &quot; + CrimeDbSchema.CrimeTable.Cols.TITLE + &quot;, &quot; + CrimeDbSchema.CrimeTable.Cols.DATE + &quot;, &quot; + CrimeDbSchema.CrimeTable.Cols.SOLVED + &quot;)&quot;); } @Override public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){ }} &#x5728;&#x8C03;&#x7528;&#x7AEF;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345// CrimeLab.java private CrimeLab(Context context){ mContext = context.getApplicationContext(); mDatabase = new CrimeBaseHelper(mContext).getWritableDatabase(); } &#x5B83;&#x4E0D;&#x7528;&#x5173;&#x5FC3;&#x662F;&#x5426;&#x8981;&#x521B;&#x5EFA;&#x3001;&#x521D;&#x59CB;&#x5316;&#x6570;&#x636E;&#x5E93;&#x7B49;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x4E9B;&#x5DE5;&#x4F5C;&#x7531;CrimeBaseHelper::getWritableDatabase()&#x5B8C;&#x6210;&#xFF1A; - &#x6253;&#x5F00;&#x76EE;&#x5F55;/data/data//databases/&#xFF0C;&#x5982;&#x679C;&#x5176;&#x4E0B;&#x4E0D;&#x5B58;&#x5728;&#x6570;&#x636E;&#x5E93;&#x6587;&#x4EF6;crimeBase.db&#x5219;&#x65B0;&#x5EFA; - &#x5982;&#x679C;&#x662F;&#x9996;&#x6B21;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5219;&#x8C03;&#x7528;CrimeBaseHelper::onCreate(SQLiteDatabase)&#x5E76;&#x4FDD;&#x5B58;VERSION - &#x5982;&#x679C;&#x4E0D;&#x662F;&#x9996;&#x6B21;&#xFF0C;&#x5219;&#x68C0;&#x67E5;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5982;&#x679C;&#x4EE3;&#x7801;&#x7248;&#x672C;&#x53F7;&#x9AD8;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x6587;&#x4EF6;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5219;&#x8C03;&#x7528;onUpgrade(SQLiteDatabase, int, int)&#x5B8C;&#x6210;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x5347;&#x7EA7;&#x3002; &#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5728;onCreate(SQLiteDatabase)&#x4E2D;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x5E93;&#x521B;&#x5EFA;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5728;onUpgrade(SQLiteDatabase, int, int)&#x4E2D;&#x5B9E;&#x73B0;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x5347;&#x7EA7;&#x7684;&#x4EE3;&#x7801;&#x5373;&#x53EF;&#x3002; &#x5C01;&#x88C5;&#x6570;&#x636E;&#x5E93;Schema &#x5728;&#x4E0A;&#x6587;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8868;&#x540D;&#x3001;&#x5217;&#x540D;&#xFF0C;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x6570;&#x636E;&#x5E93;Schema&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5C01;&#x88C5;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x4E9B;&#x5E38;&#x91CF;&#xFF1A; 123456789101112// CrimeDbSchema.javapublic class CrimeDbSchema { public static final class CrimeTable{ public static final String NAME = &quot;crimes&quot;; public static final class Cols{ public static final String UUID = &quot;uuid&quot;; public static final String TITLE = &quot;title&quot;; public static final String DATE = &quot;date&quot;; public static final String SOLVED = &quot;solved&quot;; } }} 2.&#x6DFB;&#x52A0;&#x65B0;&#x6570;&#x636E; &#x7528;&#x6765;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x7684;CrimeBaseHelper&#x5B9E;&#x4F8B;&#x4FDD;&#x5B58;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;CrimeLab::mDatabase&#x4E2D;&#xFF0C;&#x5BF9;&#x5176;&#x589E;&#x5220;&#x6539;&#x67E5;&#x4E5F;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x6B64;&#x5B9E;&#x4F8B;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x4F7F;&#x7528;CrimeBaseHapler::insert(...)&#x6DFB;&#x52A0;&#x65B0;&#x6570;&#x636E;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314// CrimeLab.java public void addCrime(Crime c){ ContentValues values = getContentValues(c); mDatabase.insert(CrimeDbSchema.CrimeTable.NAME, null, values); } ... private static ContentValues getContentValues(Crime crime){ ContentValues values = new ContentValues(); values.put(CrimeDbSchema.CrimeTable.Cols.UUID, crime.getId().toString()); values.put(CrimeDbSchema.CrimeTable.Cols.TITLE, crime.getTitle()); values.put(CrimeDbSchema.CrimeTable.Cols.DATE, crime.getDate().getTime()); values.put(CrimeDbSchema.CrimeTable.Cols.SOLVED, crime.isSolved() ? 1:0); return values; } &#x4F7F;&#x7528;ContentValues &#x5199;&#x6570;&#x636E;&#x5E93;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x8FC7;&#x628A;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x6210;ContentValues&#x5B9E;&#x4F8B;&#xFF0C;&#x5B83;&#x7C7B;&#x4F3C;HashMap&#x6216;Bundle&#xFF0C;&#x5185;&#x90E8;&#x4FDD;&#x5B58;&#x4E86;key-value&#x5BF9;&#x3002;&#x5728;&#x51FD;&#x6570;getContentValues(Crime)&#x4E2D;&#xFF0C;&#x628A;&#x4E1A;&#x52A1;&#x5C42;&#x6570;&#x636E;&#x8F6C;&#x6210;ContentValues&#x5B9E;&#x4F8B;&#x3002; &#x8C03;&#x7528;insert(...)&#x65F6;&#xFF0C;&#x7B2C;1&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8868;&#x540D;&#xFF0C;&#x7B2C;3&#x4E2A;&#x662F;&#x8981;&#x63D2;&#x5165;&#x7684;&#x503C;&#x3002;&#x7B2C;2&#x4E2A;&#x53C2;&#x6570;&#x88AB;&#x79F0;&#x4E3A;nullColumnHack&#xFF0C;&#x5982;&#x679C;insert&#x7684;&#x67D0;&#x4E2A;&#x5B57;&#x6BB5;&#x4E3A;&#x7A7A;&#xFF0C;SQLite&#x7684;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x4F1A;&#x5931;&#x8D25;&#xFF0C;&#x6B64;&#x65F6;&#x7ED9;nullColumnHack&#x4F20;&#x5165;&#x4E00;&#x4E2A;uuid&#x5C31;&#x53EF;&#x4EE5;&#x7ED5;&#x8FC7;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8BBE;&#x8BA1;&#x8981;&#x6C42;&#x67D0;&#x5B57;&#x6BB5;&#x4E0D;&#x80FD;&#x4E3A;&#x7A7A;&#xFF0C;&#x8FD8;&#x662F;&#x5E94;&#x8BE5;&#x6309;&#x7167;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8BBE;&#x8BA1;&#x610F;&#x56FE;&#x586B;&#x5165;&#x5185;&#x5BB9;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7ED5;&#x8FC7;&#xFF0C;&#x56E0;&#x6B64;&#x5EFA;&#x8BAE;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;tricky&#x53C2;&#x6570;&#xFF0C;&#x603B;&#x662F;&#x4F20;&#x5165;null&#x3002; 3.&#x4FEE;&#x6539;&#x6570;&#x636E; &#x548C;&#x6DFB;&#x52A0;&#x7C7B;&#x4F3C;&#xFF0C;&#x4FEE;&#x6539;&#x4E5F;&#x662F;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x64CD;&#x4F5C;CrimeLab::mDatabase&#x5BF9;&#x8C61;&#xFF0C;&#x4F7F;&#x7528;CrimeBaseHapler::update(...)&#xFF1A; 123456789// CrimeLab.java public void updateCrime(Crime crime){ String uuidString = crime.getId().toString(); ContentValues values = getContentValues(crime); mDatabase.update(CrimeDbSchema.CrimeTable.NAME, values, CrimeDbSchema.CrimeTable.Cols.UUID + &quot;=?&quot;, // whereClause new String[]{uuidString}); // whereArgs } &#x548C;insert(...)&#x7684;&#x4E0D;&#x540C;&#x5728;&#x4E8E;&#x5B83;&#x8981;&#x6307;&#x5B9A;&#x8981;&#x4FEE;&#x6539;&#x54EA;&#x4E00;&#x6761;&#x6570;&#x636E;&#xFF0C;&#x901A;&#x8FC7;crimeId&#x6765;&#x6307;&#x5B9A;&#x3002;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x4F7F;&#x7528;where&#x8BED;&#x53E5;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;=?&#x4F20;&#x5165;&#x7B49;&#x53F7;&#x7684;&#x53F3;&#x503C;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#x5B89;&#x5168;&#x3002;&#x5982;&#x679C;&#x4F7F;&#x7528;where&#x8BED;&#x53E5;&#xFF0C;&#x5F62;&#x5F0F;&#x5982;where ABC=&#x201C;xxx&#x201D;&#xFF0C;&#x7B49;&#x53F7;&#x53F3;&#x4FA7;&#x7684;xxx&#x672C;&#x5E94;&#x4F20;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x51FA;&#x7279;&#x6B8A;&#x7684;&#x5B57;&#x4E32;&#x6765;&#x7BE1;&#x6539;&#x6574;&#x53E5;SQL&#x6587;&#xFF0C;&#x8FD9;&#x88AB;&#x79F0;&#x4E3A;SQL&#x6CE8;&#x5165;&#x653B;&#x51FB;&#x3002;&#x4F7F;&#x7528;=&#xFF1F;&#x53EF;&#x4EE5;&#x628A;&#x53F3;&#x503C;&#x53C2;&#x6570;&#x4EC5;&#x5F53;&#x4F5C;&#x5B57;&#x7B26;&#x53D8;&#x91CF;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x53D8;&#x6210;SQL&#x4EE3;&#x7801;&#xFF0C;&#x4ECE;&#x800C;&#x907F;&#x514D;&#x4E86;&#x88AB;&#x6CE8;&#x5165;&#x7684;&#x98CE;&#x9669;&#x3002; 4.&#x67E5;&#x8BE2;&#x6570;&#x636E; &#x76F4;&#x63A5;&#x4E0A;&#x4EE3;&#x7801;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041// CrimeLab.java private CrimeCursorWrapper queryCrimes(String whereClause, String[] whereArgs){ Cursor cursor = mDatabase.query(CrimeDbSchema.CrimeTable.NAME, null, // columns - null selects all columns whereClause, whereArgs, null, //groupBy null, // having null // orderBy ); return new CrimeCursorWrapper(cursor); } public List&lt;Crime&gt; getCrimes(){ List&lt;Crime&gt; crimes = new ArrayList&lt;&gt;(); CrimeCursorWrapper cursor = queryCrimes(null, null); try{ cursor.moveToFirst(); while(!cursor.isAfterLast()){ crimes.add(cursor.getCrime()); cursor.moveToNext(); } }finally{ cursor.close(); } return crimes; } public Crime getCrime(UUID id){ CrimeCursorWrapper cursor = queryCrimes(CrimeDbSchema.CrimeTable.Cols.UUID + &quot;=?&quot;, new String[] {id.toString()}); try{ if(cursor.getCount() == 0){ return null; } cursor.moveToFirst(); return cursor.getCrime(); }finally { cursor.close(); } } &#x5176;&#x4E2D;whereClause&#x548C;whereArgs&#x53C2;&#x6570;&#x548C;update&#xFF08;...)&#x4E00;&#x81F4;&#xFF0C;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x6700;&#x540E;&#x4E00;&#x53E5;CrimeCursorWrapper&#x7C7B;&#x3002;&#x524D;&#x6587;&#x8BB2;&#x8FC7;&#xFF0C;&#x5728;&#x5199;&#x6570;&#x636E;&#x5E93;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x628A;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x6210;ContentValues&#x5B9E;&#x4F8B;&#xFF0C;&#x5728;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;SQLite&#x5219;&#x662F;&#x4EE5;Cursor&#x5B9E;&#x4F8B;&#x8F93;&#x51FA;&#x7684;&#xFF0C;&#x8FD9;&#x5C5E;&#x4E8E;&#x5E95;&#x5C42;&#x673A;&#x5236;&#x5C42;&#xFF0C;CrimeCursorWrapper&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x9690;&#x85CF;&#x6389;&#x6570;&#x636E;&#x5E93;&#x7EC6;&#x8282;&#xFF0C;&#x8F6C;&#x6362;&#x6210;&#x4E1A;&#x52A1;&#x5C42;&#x6570;&#x636E;&#xFF1A; 1234567891011121314151617181920// CrimeCursorWrapper.javapublic class CrimeCursorWrapper extends CursorWrapper { public CrimeCursorWrapper(Cursor cursor){ super(cursor); // &#x5185;&#x90E8;&#x4FDD;&#x5B58;&#x4E86;cursor } public Crime getCrime(){ // &#x4ECE;cursor&#x63D0;&#x53D6;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5; String uuidString = getString(getColumnIndex(CrimeDbSchema.CrimeTable.Cols.UUID)); String title = getString(getColumnIndex(CrimeDbSchema.CrimeTable.Cols.TITLE)); long date = getLong(getColumnIndex(CrimeDbSchema.CrimeTable.Cols.DATE)); int isSolved = getInt(getColumnIndex(CrimeDbSchema.CrimeTable.Cols.SOLVED)); // &#x7EC4;&#x7EC7;&#x6210;crime&#x5B9E;&#x4F8B; Crime crime = new Crime(UUID.fromString(uuidString)); crime.setTitle(title); crime.setDate(new Date(date)); crime.setSolved(isSolved != 0); return crime; }} &#x4EE5;&#x4E0A;&#x5C31;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7684;&#x64CD;&#x4F5C;&#x90E8;&#x5206;&#xFF0C;&#x672C;&#x8282;&#x7684;&#x5269;&#x4F59;&#x90E8;&#x5206;&#x5C31;&#x662F;&#x5F15;&#x5165;&#x6570;&#x636E;&#x5E93;&#x540E;&#x5BF9;&#x4E8E;&#x4E1A;&#x52A1;&#x5C42;&#x5E26;&#x6765;&#x7684;&#x53D8;&#x5316;&#x4E86;&#x3002; &#x5F15;&#x5165;SQLite&#x7ED9;&#x4E1A;&#x52A1;&#x5C42;&#x5E26;&#x6765;&#x7684;&#x53D8;&#x5316; &#x6DFB;&#x52A0;&#x8BB0;&#x5F55; &#x70B9;&#x51FB;&#x201C;+&#x201D;&#x83DC;&#x5355;&#xFF0C;&#x7531;CrimeListFragment::onOptionsItemSelected(...)&#x54CD;&#x5E94;&#xFF1A; 12345678910111213// CrimeListFragment.java @Override public boolean onOptionsItemSelected(MenuItem item){ switch (item.getItemId()){ case R.id.new_crime: Crime crime = new Crime(); CrimeLab.get(getActivity()).addCrime(crime); Intent intent = CrimePagerActivity.newIntent(getActivity(), crime.getId()); startActivity(intent); return true; ... } } &#x5B83;&#x8C03;&#x7528;&#x5230;CrimeLab::addCrime(...)&#x5B8C;&#x6210;&#x5165;&#x5E93;&#x3002; ### &#x4FEE;&#x6539;&#x6570;&#x636E; &#x5F53;&#x4ECE;CrimeFragment&#x4E2D;&#x9000;&#x51FA;&#x56DE;&#x5230;CrimeListFragment&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x7684;&#x4FEE;&#x6539;&#xFF1A; 123456// CrimeFragment.java @Override public void onPause(){ super.onPause(); CrimeLab.get(getActivity()).updateCrime(mCrime); } &#x5B83;&#x8C03;&#x7528;&#x5230;CrimeLab::updateCrime(...)&#x5B8C;&#x6210;&#x6570;&#x636E;&#x5E93;&#x7684;&#x66F4;&#x65B0;&#x3002; ### &#x67E5;&#x8BE2;&#x6570;&#x636E; &#x5F53;CrimeListFragment&#x9996;&#x6B21;&#x52A0;&#x8F7D;&#x65F6;&#xFF0C;&#x8C03;&#x7528;CrimeListFragment::onCreateView(...) &gt; CrimeListFragment::updateUI() &gt; CrimeLab::getCrimes() ; &#x5F53;&#x4ECE;CrimeFragment&#x9000;&#x56DE;&#x5230;CrimeListFragment&#x65F6;&#xFF0C;&#x8C03;&#x7528;CrimeListFragment::onResume() &gt; CrimeListFragment::updateUI() &gt; CrimeLab::getCrimes(); CrimeLab::getCrimes()&#x3002; &#x4ECE;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x67E5;&#x8BE2;&#x5230;&#x6570;&#x636E;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;CrimeAdapter&#xFF0C;&#x5B8C;&#x6210;UI&#x66F4;&#x65B0;&#xFF1A; 12345678910111213// CrimeListFragment.java private void updateUI(){ CrimeLab crimeLab = CrimeLab.get(getActivity()); List&lt;Crime&gt; crimes = crimeLab.getCrimes(); if(mAdapter == null) { mAdapter = new CrimeAdapter(crimes); mCrimeRecyclerView.setAdapter(mAdapter); }else{ mAdapter.setCrimes(crimes); mAdapter.notifyDataSetChanged(); } updateSubtitle(); } &#x4F7F;&#x7528;Android Device Monitor&#x67E5;&#x770B;&#x6587;&#x4EF6; Android Studio&#x83DC;&#x5355; Tools &gt; Android &gt; Android Device Monitor&#xFF0C;&#x5F39;&#x51FA;Disable ADB Integration&#x5BF9;&#x8BDD;&#x6846;&#xFF0C;&#x70B9;&#x51FB;&#x201C;No&#x201D;&#xFF1A; &#x5728;Android Device Monitor&#x7684;File Explorer&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;Android&#x8BBE;&#x5907;&#x7684;&#x6587;&#x4EF6;&#x4E86;&#xFF1A;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十三]]></title>
    <url>%2F2017%2F10%2F24%2F2017%2F1024AndroidProgrammingBNRG13%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5728;app&#x9876;&#x90E8;&#x7684;toolbar&#x4E2D;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x83DC;&#x5355;&#x9879;&#xFF1A;&#x201C;+&#x201D;&#x53F7;&#x83DC;&#x5355;&#x7528;&#x4E8E;&#x6DFB;&#x52A0;&#x65B0;&#x6570;&#x636E;&#xFF0C;Hide Subtitle/Show Subtitle&#x7528;&#x4E8E;&#x663E;&#x793A;/&#x9690;&#x85CF;Crime&#x603B;&#x6570;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x521B;&#x5EFA;&#x83DC;&#x5355;&#xFF0C;&#x5E76;&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570; - &#x6DFB;&#x52A0;&#x7CFB;&#x7EDF;&#x56FE;&#x6807; - &#x8BBE;&#x7F6E;&#x5C42;&#x7EA7;&#x5BFC;&#x822A;&#x5173;&#x7CFB; &#x600E;&#x4E48;&#x521B;&#x5EFA;&#x83DC;&#x5355; 1. &#x6DFB;&#x52A0;&#x83DC;&#x5355;&#x7684;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6; &#x5728;res&#x4E0A;&#x53F3;&#x952E; &gt; New &gt; Android resource file&#xFF0C;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x9009;&#x62E9;Menu&#xFF1A; &#x6DFB;&#x52A0;&#x83DC;&#x5355;&#x9879;item&#xFF1A; 12345678&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt; &lt;item android:id=&quot;@+id/new_crime&quot; android:icon=&quot;@drawable/ic_menu_add&quot; android:title=&quot;@string/new_crime&quot; app:showAsAction=&quot;ifRoom|withText&quot;/&gt; &lt;/menu&gt; &#x5176;&#x4E2D;showAsAction&#x7528;&#x4E8E;&#x8BBE;&#x5B9A;&#x5C55;&#x73B0;&#x5F62;&#x6001;&#xFF0C;ifRoom&#x8868;&#x793A;&#x5982;&#x679C;&#x6709;&#x7A7A;&#x95F4;&#x5C31;&#x5C55;&#x73B0;&#xFF1B;&#x5426;&#x5219;&#x663E;&#x793A;...&#xFF0C;&#x7EC4;&#x5408;withText&#x540E;&#x8868;&#x793A;&#x5982;&#x679C;&#x7A7A;&#x95F4;&#x8DB3;&#x591F;&#x5219;&#x5C55;&#x73B0;&#x6587;&#x5B57;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x591F;&#x5219;&#x53EA;&#x5C55;&#x73B0;&#x56FE;&#x6807;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x4E0D;&#x591F;&#x5219;&#x5C55;&#x73B0;...&#x3002;&#x5176;&#x5B83;showAsAction&#x9009;&#x9879;&#x8FD8;&#x6709;always&#x548C;never&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;always&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x603B;&#x662F;&#x5B8C;&#x5168;&#x5C55;&#x73B0;&#xFF1B;never&#x5219;&#x662F;&#x603B;&#x5C55;&#x73B0;&#x6210;...&#x3002; 2. &#x521B;&#x5EFA;&#x83DC;&#x5355; &#x5B9E;&#x73B0;&#x56DE;&#x8C03;&#x51FD;&#x6570;onCreateOptionsMenu(Menu)&#x3002;&#x5BF9;&#x4E8E;Activity&#x548C;Fragment&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4E0E;&#x83DC;&#x5355;&#x76F8;&#x5173;&#xFF1A; public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) &#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x83DC;&#x5355; public boolean onOptionsItemSelected(MenuItem item) &#x8D1F;&#x8D23;&#x54CD;&#x5E94;&#x83DC;&#x5355;&#x9879;&#x70B9;&#x51FB; &#x8FD9;&#x662F;&#x4E24;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x521B;&#x5EFA;&#x83DC;&#x5355;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x8C03;&#x7528;Fragment::setHasOptionsMenu(boolean)&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x4E3A;true&#xFF0C;&#x544A;&#x8BC9;FragmentManager&#x201C;&#x6211;&#x8981;&#x663E;&#x793A;&#x83DC;&#x5355;&#x201D;&#xFF0C;FragmentManager&#x4F1A;&#x8C03;&#x7528;onCreateOptionsMenu(Menu)&#x5B8C;&#x6210;&#x83DC;&#x5355;&#x521B;&#x5EFA;&#x3002; &#x672C;&#x8282;&#x7684;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314// CrimeListFragment.javapublic class CrimeListFragment extends Fragment { ... @Override public void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setHasOptionsMenu(true); // &#x8981;&#x6C42;&#x521B;&#x5EFA;&#x83DC;&#x5355; } @Override // &#x5B8C;&#x6210;&#x521B;&#x5EFA;&#x83DC;&#x5355; public void onCreateOptionsMenu(Menu menu, MenuInflater inflater){ super.onCreateOptionsMenu(menu, inflater); inflater.inflate(R.menu.fragment_crime_list, menu); }} &#x9ED8;&#x8BA4;&#x7684;&#x7A7A;&#x95F4;&#x53EA;&#x591F;&#x663E;&#x793A;&#x56FE;&#x6807;&#xFF0C;&#x957F;&#x6309;&#x4F1A;&#x663E;&#x793A;&#x63D0;&#x793A;&#x6587;&#x5B57;&#xFF1A; 3. &#x54CD;&#x5E94;&#x83DC;&#x5355;&#x9879;&#x70B9;&#x51FB; &#x5728;&#x524D;&#x4E00;&#x6B65;&#x4E2D;&#x5DF2;&#x7ECF;&#x63D0;&#x5230;&#xFF0C;&#x54CD;&#x5E94;&#x83DC;&#x5355;&#x70B9;&#x51FB;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x56DE;&#x8C03;&#x51FD;&#x6570;onOptionsItemSelected(MenuItem item) 123456789101112131415161718// CrimeListFragment.javapublic class CrimeListFragment extends Fragment {...@Overridepublic boolean onOptionsItemSelected(MenuItem item){ switch (item.getItemId()){ case R.id.new_crime: // &#x5224;&#x65AD;&#x83DC;&#x5355;&#x9879;id Crime crime = new Crime(); // &#x6DFB;&#x52A0;&#x6570;&#x636E; CrimeLab.get(getActivity()).addCrime(crime); // &#x542F;&#x52A8;Activity&#x7F16;&#x8F91;&#x65B0;&#x6570;&#x636E; Intent intent = CrimePagerActivity.newIntent(getActivity(), crime.getId()); startActivity(intent); return true; default: return super.onOptionsItemSelected(item); } }} &#x600E;&#x4E48;&#x6DFB;&#x52A0;&#x7CFB;&#x7EDF;&#x7684;&#x526A;&#x8F91;&#x56FE;&#x6807; &#x5982;&#x679C;&#x8981;&#x6DFB;&#x52A0;&#x7CFB;&#x7EDF;&#x56FE;&#x6807;&#xFF0C;&#x4F8B;&#x5982;&#x201C;+&#x201D;&#x53F7;&#xFF0C;&#x53EF;&#x4EE5; &#x2460;&#x76F4;&#x63A5;&#x4F7F;&#x7528;@android.drawable/ic_menu_add&#xFF0C;&#x4F46;&#x4E0D;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x8BBE;&#x5907;&#x548C;&#x7CFB;&#x7EDF;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x56FE;&#x6807;&#x662F;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x672A;&#x5FC5;&#x603B;&#x662F;&#x9002;&#x5408;&#x81EA;&#x5DF1;&#x7684;app &#x2461;&#x4ECE;~/Library/Android/sdk/platforms/android-25/data/res&#x627E;&#x5230;&#x8FD9;&#x4E9B;&#x8D44;&#x6E90;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x5230;app&#x9879;&#x76EE;&#x91CC; &#x2462;&#x901A;&#x8FC7;AndroidStudio&#x6DFB;&#x52A0;&#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6700;&#x7B80;&#x5355;&#x3002;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; &#x5728;drawable&#x53F3;&#x952E; &gt; New &gt; Image Asset&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x9762;&#x677F;&#x4E0A;&#x9009;&#x62E9;Icon Type&#x4E3A;Action Bar and Tab Icons&#xFF0C;&#x70B9;&#x51FB;Clip Art&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x56FE;&#x7247;&#x5E93;&#x4E2D;&#x9009;&#x62E9;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x6807;&#xFF1A; &#x7136;&#x540E;&#x9009;&#x62E9;&#x9700;&#x8981;&#x652F;&#x6301;&#x7684;&#x5C4F;&#x5E55;&#x5BC6;&#x5EA6;&#x5373;&#x53EF;&#x3002; &#x52A8;&#x6001;&#x8C03;&#x6574;&#x83DC;&#x5355;&#x9879;&#x6587;&#x5B57; &#x672C;&#x8282;&#x53C8;&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x6761;Hide Subtitle/Show Subtitle&#x83DC;&#x5355;&#xFF0C;&#x7528;&#x4E8E;&#x663E;&#x793A;&#x548C;&#x9690;&#x85CF;&#x6570;&#x636E;&#x9879;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x6BCF;&#x6B21;&#x70B9;&#x51FB;&#x8BE5;&#x83DC;&#x5355;&#x9879;&#x540E;&#xFF0C;&#x83DC;&#x5355;&#x9879;&#x6587;&#x5B57;&#x4F1A;&#x968F;&#x4E4B;&#x53D8;&#x5316;&#x3002;&#x672C;&#x8282;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x521B;&#x5EFA;&#x83DC;&#x5355;&#x65F6;&#xFF0C;&#x6839;&#x636E;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x51B3;&#x5B9A;&#x663E;&#x793A;Hide Subtitle&#x8FD8;&#x662F;Show Subtitle&#xFF1A; 1234567891011121314// CrimeListFragment.java...@Overridepublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater){ super.onCreateOptionsMenu(menu, inflater); inflater.inflate(R.menu.fragment_crime_list, menu); MenuItem subtitleItem = menu.findItem(R.id.show_subtitle); if(mSubtitleVisible){ subtitleItem.setTitle(R.string.hide_subtitle); }else{ subtitleItem.setTitle(R.string.show_subtitle); }}... &#x8FD9;&#x5C31;&#x9700;&#x8981;&#x6BCF;&#x6B21;&#x70B9;&#x51FB;&#x83DC;&#x5355;&#x90FD;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x83DC;&#x5355;&#x624D;&#x884C;&#xFF0C;&#x83DC;&#x5355;&#x9879;&#x7684;&#x54CD;&#x5E94;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516// CrimeListFragment.java...@Overridepublic boolean onOptionsItemSelected(MenuItem item){ switch (item.getItemId()){ ... case R.id.show_subtitle: mSubtitleVisible = !mSubtitleVisible; // &#x5B83;&#x4F1A;&#x5BFC;&#x81F4;&#x83DC;&#x5355;&#x65E0;&#x6548;&#x800C;&#x91CD;&#x65B0;&#x521B;&#x5EFA; getActivity().invalidateOptionsMenu(); updateSubtitle(); return true; default: return super.onOptionsItemSelected(item); }} &#x4F7F;&#x7528;&#x5206;&#x5C42;&#x5BFC;&#x822A;Hierarchical Navigation &#x5728;AndroidManifest.xml&#x4E2D;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8BBE;&#x7F6E;Activity&#x4E4B;&#x95F4;&#x7684;&#x7236;&#x5B50;&#x5173;&#x7CFB;&#xFF1A; 12345678&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; ...&gt; &lt;application ... &gt; ... &lt;activity android:name=&quot;.CrimePagerActivity&quot; android:parentActivityName=&quot;.CrimeListActivity&quot;&gt; &lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; android:parentActivityName&#x4F1A;&#x5728;Activity&#x7684;&#x6807;&#x9898;&#x680F;&#x6DFB;&#x52A0;&#x5BFC;&#x822A;&#x6309;&#x94AE;&#xFF1A; &#x770B;&#x8D77;&#x6765;&#x5B83;&#x548C;&#x70B9;&#x51FB;&#x7CFB;&#x7EDF;&#x7684;Back&#x6309;&#x94AE;&#x6548;&#x679C;&#x4E00;&#x6837;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x5B83;&#x76F8;&#x5F53;&#x4E8E;&#x505A;&#x4E86;&#x5982;&#x4E0B;&#x64CD;&#x4F5C;&#xFF1A; 1234Intent intent = new Intent(this, CrimeListActivity.class);intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);startActivity(intent);finish(); FLAG_ACTIVITY_CLEAR_TOP&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF1A;&#x5728;activity&#x6808;&#x4E2D;&#x67E5;&#x627E;&#x6307;&#x5B9A;Activity&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x5F39;&#x51FA;&#x5176;&#x4E0A;&#x7684;&#x6240;&#x6709;Activity&#xFF0C;&#x76F4;&#x5230;&#x4F7F;&#x5F97;&#x8BE5;Activity&#x79F0;&#x4E3A;&#x6808;&#x9876;&#xFF1A; &#x5206;&#x5C42;&#x5BFC;&#x822A;&#x7684;&#x526F;&#x4F5C;&#x7528; &#x5728;&#x672C;&#x8282;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x5F53;&#x4ECE;CrimePagerActivity&#x4F7F;&#x7528;&#x5206;&#x5C42;&#x5BFC;&#x822A;&#x6309;&#x94AE;&#x56DE;&#x5230;CrimeListActivity&#x540E;&#xFF0C;&#x6807;&#x9898;&#x680F;&#x4E2D;&#x7684;Hide Subtitle/Show Subtitle&#x72B6;&#x6001;&#x88AB;&#x91CD;&#x7F6E;&#x4E86;&#xFF0C;&#x4F7F;&#x7528;Back&#x6309;&#x94AE;&#x5219;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x4F7F;&#x7528;&#x5206;&#x5C42;&#x5BFC;&#x822A;&#x7684;&#x5411;&#x4E0A;&#x6309;&#x94AE;&#x4F1A;&#x5BFC;&#x81F4;&#x4E0A;&#x4E00;&#x5C42;Activity&#x88AB;&#x91CD;&#x5EFA;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;Activity&#x4EFB;&#x4F55;&#x72B6;&#x6001;&#x53D8;&#x91CF;&#x4FDD;&#x5B58;&#x7684;&#x6570;&#x636E;&#x90FD;&#x4F1A;&#x6D88;&#x5931;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4ED6;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x662F;&#x5728;Activity&#x6808;&#x4E2D;&#x627E;&#x5230;&#x76EE;&#x6807;Activity&#xFF0C;&#x8BA9;&#x5B83;&#x663E;&#x793A;&#x51FA;&#x6765;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x662F;&#x5F7B;&#x5E95;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x4E86;&#x8FD9;&#x4E2A;Activity&#x3002; &#x672C;&#x8282;&#x7ED9;&#x51FA;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#xFF1A; 1&#x3001;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;navigate up&#x673A;&#x5236;&#xFF0C;&#x8BA9;CrimePagerActivity&#x5F39;&#x56DE;&#x5230;CrimeListActivity&#x3002; 2&#x3001;&#x5F53;CrimeListActivity&#x5F39;&#x51FA;CrimePagerActivity&#x65F6;&#xFF0C;&#x8BA9;&#x540E;&#x8005;&#x8BB0;&#x4F4F;&#x524D;&#x8005;&#x7684;&#x6807;&#x9898;&#xFF0C;&#x5728;&#x91CD;&#x5EFA;CrimeListActivity&#x65F6;&#xFF0C;&#x518D;&#x628A;&#x6807;&#x9898;&#x4F20;&#x56DE;&#x53BB;&#x3002; &#x6211;&#x5176;&#x5B9E;&#x6CA1;&#x6709;&#x7406;&#x89E3;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x6848;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x4F46;&#x4ED6;&#x4EEC;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x7F3A;&#x9677;&#x5C31;&#x662F;&#x7236;&#x5B50;Activity&#x7684;&#x8026;&#x5408;&#x6027;&#x592A;&#x5F3A;&#x4E86;&#x3002;&#x4E66;&#x4E2D;&#x4E5F;&#x6CA1;&#x6709;&#x7ED9;&#x51FA;&#x5F88;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x7ADF;&#x7136;&#x8BF4;&#x8BA9;&#x7528;&#x6237;&#x591A;&#x70B9;&#x4E00;&#x6B21;&#x6309;&#x94AE;&#x4E5F;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x5927;&#x95EE;&#x9898;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;Android&#x4F1A;&#x4F7F;&#x7528;&#x8FD9;&#x4E48;&#x5C4E;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;Up&#x5462;&#xFF1F;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x662F;&#x4E2A;&#x81F4;&#x547D;&#x7684;&#x7F3A;&#x9677;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十二]]></title>
    <url>%2F2017%2F10%2F23%2F2017%2F1023AndroidProgrammingBNRG12%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5728;Details&#x754C;&#x9762;&#x4E2D;&#x70B9;&#x51FB;&#x4E86;&#x65E5;&#x671F;&#x540E;&#xFF0C;&#x5F39;&#x51FA;&#x9009;&#x62E9;&#x65E5;&#x671F;&#x7684;DatePicker Dialog&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x521B;&#x5EFA;&#x548C;&#x8C03;&#x8D77;Dialog - &#x5728;&#x540C;&#x4E00;&#x4E2A;Activity&#x5185;&#x7684;&#x4E0D;&#x540C;Fragment&#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E; &#x5982;&#x4F55;&#x521B;&#x5EFA;&#x548C;&#x4F7F;&#x7528;Dialog &#x521B;&#x5EFA;Dialog &#x6D3E;&#x751F;DialogFragment&#x5B50;&#x7C7B;&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;onCreateDialog(Bundle savedInstanceState)&#x65B9;&#x6CD5; 12345678910// DatePickerFragmentpublic class DatePickerFragment extends DialogFragment { @Override public Dialog onCreateDialog(Bundle savedInstanceState){ return new android.support.v7.app.AlertDialog.Builder(getActivity()) .setTitle(R.string.date_picker_title) .setPositiveButton(android.R.string.ok, null) .create(); }} &#x5F53;Activity&#x9700;&#x8981;&#x5C06;Dialog&#x5C55;&#x73B0;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#x3002;&#x5E94;&#x8BE5;&#x5728;&#x6B64;&#x65B9;&#x6CD5;&#x5185;&#x521B;&#x5EFA;&#x5E76;&#x5C55;&#x73B0;Dialog&#x3002; &#x663E;&#x793A;Dialog &#x8C03;&#x7528;DialogFragment&#x7684;&#x4E0B;&#x9762;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A; public void show(FragmentManager manager, String tag) public void show(FragmentTransaction transaction, String tag) &#x5B83;&#x4EEC;&#x90FD;&#x80FD;&#x663E;&#x793A;Dialog&#x3002; &#x53C2;&#x6570;tag&#x662F;DialogFragment&#x5B9E;&#x4F8B;&#x7684;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#xFF1B; &#x5982;&#x679C;&#x4F20;&#x5165;&#x53C2;&#x6570;FragmentTransaction&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x548C;&#x63D0;&#x4EA4;transaction&#xFF1B; &#x5982;&#x679C;&#x4F20;&#x5165;&#x53C2;&#x6570;FragmentManager&#xFF0C;manager&#x4F1A;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x548C;&#x63D0;&#x4EA4;transaction&#x3002; &#x70B9;&#x51FB;details&#x4E2D;&#x65E5;&#x671F;&#x6309;&#x94AE;&#x7684;&#x54CD;&#x5E94;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789// CrimeFragment.javamDateButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ FragmentManager manager = getFragmentManager(); DatePickerFragment dialog = new DatePickerFragment(); dialog.show(manager, DIALOG_DATE); }}); &#x6B64;&#x65F6;&#x5F39;&#x51FA;&#x7684;Dialog&#x5982;&#x4E0B;&#xFF1A; &#x5B9A;&#x5236;Dialog&#x7684;UI &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;AlertDialog.Build&#x7684;setView(View v)&#x65B9;&#x6CD5;&#x6765;&#x5B9A;&#x5236;Dialog&#x7684;&#x9876;&#x90E8;&#x6807;&#x9898;&#x5230;&#x5E95;&#x90E8;&#x6309;&#x94AE;&#x4E4B;&#x95F4;&#x7684;UI&#x3002;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#x8FD8;&#x662F;xml+&#x4EE3;&#x7801;&#xFF1A; dialog_date.xml 123456&lt;DatePicker xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:id=&quot;@+id/dialog_date_picker&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:calendarViewShown=&quot;false&quot;&gt;&lt;/DatePicker&gt; 12345678910111213// DatePickerFragment.javapublic class DatePickerFragment extends DialogFragment { @Override public Dialog onCreateDialog(Bundle savedInstanceState){ View v = LayoutInflater.from(getActivity()) .inflate(R.layout.dialog_date, null); // &#x52A0;&#x8F7D;&#x5E03;&#x5C40; return new android.support.v7.app.AlertDialog.Builder(getActivity()) .setView(v) // &#x5B9A;&#x5236;UI .setTitle(R.string.date_picker_title) .setPositiveButton(android.R.string.ok, null) .create(); }} &#x5411;DialogFragment&#x4F20;&#x5165;&#x53C2;&#x6570; &#x4F20;&#x5165;&#x53C2;&#x6570;&#x548C;&#x7B14;&#x8BB0;&#x4E03;&#xB7; &#x5411;&#x521B;&#x5EFA;&#x7684;Fragment&#x4F20;&#x5165;&#x53C2;&#x6570;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#xFF0C;&#x4F7F;&#x7528;Argument&#x3002;&#x2460; &#x628A;&#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#x7684;&#x4EE3;&#x7801;&#x5C01;&#x88C5;&#x5230;DatePickerFragment&#x7C7B;&#x7684;&#x5185;&#x90E8;&#xFF1B;&#x2461; &#x5728;onCreateDialog(...)&#x4E2D;&#x89E3;&#x6790;&#x4F20;&#x5165;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x66F4;&#x65B0;UI&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637// DatePickerFragment.javapublic class DatePickerFragment extends DialogFragment { private static final String ARG_DATE = &quot;date&quot;; private DatePicker mDatePicker; // &#x521B;&#x5EFA;DatePickerFragment&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x4F20;&#x5165;Date&#x53C2;&#x6570; public static DatePickerFragment newInstance(Date date) { Bundle args = new Bundle(); args.putSerializable(ARG_DATE, date); DatePickerFragment fragment = new DatePickerFragment(); fragment.setArguments(args); return fragment; } @Override public Dialog onCreateDialog(Bundle savedInstanceState){ // &#x89E3;&#x6790;&#x8F93;&#x5165;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x5C55;&#x73B0;&#x5230;UI Date date = (Date)getArguments().getSerializable(ARG_DATE); Calendar calendar = Calendar.getInstance(); calendar.setTime(date); int year = calendar.get(Calendar.YEAR); int month = calendar.get(Calendar.MONTH); int day = calendar.get(Calendar.DAY_OF_MONTH); View v = LayoutInflater.from(getActivity()) .inflate(R.layout.dialog_date, null); mDatePicker = (DatePicker) v.findViewById(R.id.dialog_date_picker); mDatePicker.init(year, month, day, null); return new android.support.v7.app.AlertDialog.Builder(getActivity()) .setView(v) .setTitle(R.string.date_picker_title) .setPositiveButton(android.R.string.ok, null) .create(); }} &#x539F;&#x5148;&#x54CD;&#x5E94;Date&#x6309;&#x94AE;&#x70B9;&#x51FB;&#xFF0C;&#x521B;&#x5EFA;&#x548C;&#x663E;&#x793A;DatePickerFragment&#x7684;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x5982;&#x4E0B;&#xFF1A; 12345678910// CrimeFragment.java mDateButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ FragmentManager manager = getFragmentManager(); // &#x521B;&#x5EFA;DatePickerFragment&#xFF0C;&#x5E76;&#x4F20;&#x5165;Date&#x53C2;&#x6570; DatePickerFragment dialog = DatePickerFragment.newInstance(mCrime.getDate()); dialog.show(manager, DIALOG_DATE); } }); &#x4ECE;DialogFragment&#x8FD4;&#x56DE;&#x6570;&#x636E; &#x5728;&#x672C;&#x8282;&#x4E2D;CrimeFragment&#x548C;DatePickerFragment&#x540C;&#x5728;CrimeActivity&#x4E4B;&#x4E2D;&#xFF0C;CrimeFragment&#x542F;&#x52A8;DatePickerFragment&#x4E4B;&#x540E;&#x600E;&#x4E48;&#x4ECE;DatePickerFragment&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x5462;&#xFF1F; &#x2460; &#x628A;CrimeFragment&#x8BBE;&#x7F6E;&#x4E3A;DatePickerFragment&#x7684;TargetFragment&#xFF1A; public void setTargetFragment(Fragment fragment, int requestCode) TargetFragment&#x5C06;&#x6839;&#x636E;requestCode&#x6765;&#x5206;&#x8FA8;&#x4ECE;&#x54EA;&#x4E2A;Fragment&#x8FD4;&#x56DE;&#x3002; &#x2461; DatePickerFragment&#x8C03;&#x7528;CrimeFragment.onActivityResult(int, Intent)&#x5C06;&#x8FD4;&#x56DE;&#x503C;&#x4F20;&#x9012;&#x7ED9;CrimeFragment&#x3002;&#x5728;&#x7B14;&#x8BB0;&#x4E94;&#xB7;&#x4ECE;&#x542F;&#x52A8;&#x7684;Activity&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x4E2D;&#x8BB2;&#x5230;&#xFF0C;&#x5728;Activity&#x4E4B;&#x95F4;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x7531;ActivityManager&#x8D1F;&#x8D23;&#x8C03;&#x7528;Activity.onActivityResult(int, Intent)&#xFF0C;Activity&#x5728;&#x6536;&#x5230;&#x6B64;&#x56DE;&#x8C03;&#x540E;&#xFF0C;&#x5176;FragmentManager&#x4F1A;&#x8C03;&#x7528;&#x81EA;&#x5DF1;&#x6BCF;&#x4E2A;Fragment&#x7684;Fragment.onActivityResult(int, Intent)&#x3002; &#x6B64;&#x5904;&#x5728;Fragment&#x8FD4;&#x56DE;&#x7ED9;Fragment&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x501F;&#x7528;&#x6B64;&#x673A;&#x5236;&#x3002; &#x2462; &#x7ED9;DatePickerFragment&#x7684;OK&#x6309;&#x94AE;&#x8BBE;&#x7F6E;ClickListener&#xFF0C;&#x5F53;&#x70B9;&#x51FB;OK&#x65F6;&#x6267;&#x884C;&#x2461;&#x4E2D;&#x7684;&#x56DE;&#x4F20;&#x3002; &#x2463; &#x5B9E;&#x73B0;CrimeFragment.onActivityResult(int, Intent)&#x4EE4;&#x5176;&#x66F4;&#x65B0;&#x754C;&#x9762;&#x3002; &#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910// CrimeFragment.java mDateButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ FragmentManager manager = getFragmentManager(); DatePickerFragment dialog = DatePickerFragment.newInstance(mCrime.getDate()); dialog.setTargetFragment(CrimeFragment.this, REQUEST_DATE); // &#x2460; dialog.show(manager, DIALOG_DATE); } }); 12345678910111213141516171819202122232425262728293031323334public class DatePickerFragment extends DialogFragment { ... public static final String EXTRA_DATE = &quot;com.bnrg.bnrg07.date&quot;; private void sendResult(int resultCode, Date date){ // &#x2461; if(getTargetFragment() == null) return; Intent intent = new Intent(); intent.putExtra(EXTRA_DATE, date); getTargetFragment().onActivityResult(getTargetRequestCode(), resultCode, intent); } ... @Override public Dialog onCreateDialog(Bundle savedInstanceState){ ... return new android.support.v7.app.AlertDialog.Builder(getActivity()) .setView(v) .setTitle(R.string.date_picker_title) .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener(){ @Override public void onClick(DialogInterface dialog, int which){ // &#x2462; int year = mDatePicker.getYear(); int month = mDatePicker.getMonth(); int day = mDatePicker.getDayOfMonth(); Date date = new GregorianCalendar(year, month, day).getTime(); sendResult(Activity.RESULT_OK, date); } }) .create(); }} 12345678910111213141516171819public class CrimeFragment extends Fragment { ... @Override public void onActivityResult(int requestCode, int resultCode, Intent data){ // &#x2463; if(resultCode != Activity.RESULT_OK) return; if(requestCode == REQUEST_DATE){ Date date = (Date)data.getSerializableExtra(DatePickerFragment.EXTRA_DATE); mCrime.setDate(date); updateDate(); } } private void updateDate() { mDateButton.setText(mCrime.getDate().toString()); }}]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十一]]></title>
    <url>%2F2017%2F10%2F22%2F2017%2F1022AndroidProgrammingBNRG11%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5B8C;&#x6210;&#x4E86;Details&#x754C;&#x9762;&#x7684;&#x5DE6;&#x53F3;&#x6ED1;&#x5C4F;&#xFF0C;&#x5F15;&#x5165;&#x4E86;ViewPager&#x3002;&#x5F53;&#x8FDB;&#x5165;&#x67D0;&#x4E00;&#x6761;item&#x7684;Details&#x540E;&#xFF0C;&#x65E0;&#x9700;&#x9000;&#x56DE;list&#xFF0C;&#x5DE6;&#x53F3;&#x6ED1;&#x5C4F;&#x76F4;&#x63A5;&#x5207;&#x6362;&#x5230;&#x76F8;&#x90BB;&#x7684;item details&#x4E2D;&#xFF1A; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - ViewPager&#x7684;&#x4F7F;&#x7528; &#x521B;&#x5EFA;ViewPager&#x7684;&#x6B65;&#x9AA4; &#x5171;&#x5206;&#x4E09;&#x6B65;&#xFF1A; &#x2460; &#x521B;&#x5EFA;CrimePagerActivity&#xFF0C;&#x5E76;&#x63D0;&#x9886;ViewPager&#x5B9E;&#x4F8B; &#x2461; &#x5728;CrimePagerActivity&#x4E2D;&#xFF0C;&#x4E3A;ViewPager&#x5B9E;&#x4F8B;&#x521B;&#x5EFA;&#x548C;&#x5173;&#x8054;&#x9002;&#x914D;&#x5668; &#x2462; &#x4FEE;&#x6539;CrimeHolder.onClick(...)&#xFF0C;&#x4EE4;&#x5176;&#x542F;&#x52A8;CrimePagerActivity&#x800C;&#x4E0D;&#x662F;CrimeActivity &#x521B;&#x5EFA;CrimePagerActivity&#x7684;java&#x4EE3;&#x7801;&#x548C;xml&#x5E03;&#x5C40;&#xFF1A; 12345678910// CrimePagerActivity.javapublic class CrimePagerActivity extends AppCompatActivity { @Override protected void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setContentView(R.layout.activity_crime_pager); // &#x63D0;&#x9886;xml&#x4E2D;&#x7684;ViewPager mViewPager = (ViewPager)findViewById(R.id.crime_view_pager); }} 1234567&lt;!-- activity_crime_pager.xml --&gt;&lt;android.support.v4.view.ViewPager xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:id=&quot;@+id/crime_view_pager&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt;&lt;/android.support.v4.view.ViewPager&gt; &#x4E3A;ViewPager&#x5173;&#x8054;Adapter ViewPager&#x4E5F;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x8FD9;&#x548C;RecyclerView&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF1A;ViewPager&#x662F;&#x7801;&#x5934;&#xFF0C;&#x9002;&#x914D;&#x5668;&#x662F;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#xFF0C;&#x7531;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x96C6;&#x88C5;&#x7BB1;&#x2014;&#x2014;CrimeFragment&#xFF0C;&#x8D27;&#x7269;&#x662F;Crime&#x5B9E;&#x4F8B;&#x3002;&#x5C06;ViewPager&#x548C;&#x9002;&#x914D;&#x5668;&#x5173;&#x8054;&#x8D77;&#x6765;&#x5C31;&#x662F;&#x628A;&#x8BE5;Adapter&#x8BBE;&#x7F6E;&#x7ED9;ViewPager&#xFF0C;&#x9002;&#x914D;&#x5668;&#x9700;&#x8981;&#x5177;&#x5907;&#x7684;&#x6700;&#x5C0F;&#x63A5;&#x53E3;&#x96C6;&#x5408;&#x662F;getItem(int)&#x548C;getCount()&#xFF0C;&#x7528;&#x4E8E;&#x83B7;&#x5F97;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#x548C;&#x603B;&#x6570;&#x4FE1;&#x606F;&#x3002;&#x5173;&#x8054;&#x53D1;&#x751F;&#x5728;CrimePagerActivity&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637// CrimePagerActivity.javapublic class CrimePagerActivity extends AppCompatActivity { private ViewPager mViewPager; private List&lt;Crime&gt; mCrimes; @Override protected void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setContentView(R.layout.activity_crime_pager); mViewPager = (ViewPager)findViewById(R.id.crime_view_pager); mCrimes = CrimeLab.get(this).getCrimes(); // &#x83B7;&#x53D6;model fragmentManager = getSupportFragmentManager(); // &#x521B;&#x5EFA;Adapter&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x7ED9;mViewPager mViewPager.setAdapter(new FragmentStatePagerAdapter(fragmentManager) { @Override // &#x6839;&#x636E;&#x4F4D;&#x7F6E;&#x83B7;&#x53D6;Fragment public Fragment getItem(int position) { Crime crime = mCrimes.get(position); return CrimeFragment.newInstance(crime.getId()); } @Override // &#x83B7;&#x53D6;model&#x4E2D;&#x6570;&#x636E;&#x5143;&#x7D20;&#x7684;&#x603B;&#x6570; public int getCount() { return mCrimes.size(); } }); // &#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x7531;&#x53D1;&#x8D77;&#x65B9;&#x8BBE;&#x7F6E;&#x7684;&#xFF0C;&#x4F20;&#x5165;&#x521D;&#x59CB;&#x5E94;&#x5F53;&#x663E;&#x793A;&#x7684;crimeId UUID crimeId = (UUID)getIntent().getSerializableExtra(EXTRA_CRIME_ID); // &#x8BBE;&#x7F6E;&#x521D;&#x59CB;&#x663E;&#x793A;&#x7684;crimeId for(int i=0; i&lt;mCrimes.size(); i++){ if(mCrimes.get(i).getId().equals(crimeId)){ mViewPager.setCurrentItem(i); break; } } }} &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;ViewPager&#x4EC5;&#x52A0;&#x8F7D;&#x76F8;&#x90BB;&#x7684;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x9875;&#x9762;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x5176;setOffscreenPageLimit(int)&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x52A0;&#x8F7D;&#x76F8;&#x90BB;&#x7684;&#x51E0;&#x4E2A;&#x9875;&#x9762;&#x3002; &#x6700;&#x540E;&#x4E00;&#x6B65;&#x628A;CrimeActivity&#x6539;&#x4E3A;CrimePagerActivity&#x5C31;&#x4E0D;&#x6F14;&#x793A;&#x4E86;&#xFF0C;&#x6CA1;&#x4EC0;&#x4E48;&#x65B0;&#x4E1C;&#x897F;&#x3002;&#x53EA;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FDB;&#x5165;ViewPager&#x4E4B;&#x540E;&#x7684;&#x5DE6;&#x53F3;&#x6ED1;&#x5C4F;&#x90FD;&#x5DF2;&#x7ECF;&#x7531;ViewPager&#x81EA;&#x52A8;&#x5B8C;&#x6210;&#x4E86;&#x3002; FragmentStatePagerAdapter vs FragmentPagerAdapter &#x4E8C;&#x8005;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x5982;&#x4F55;&#x5904;&#x7406;&#x6682;&#x65F6;&#x4E0D;&#x663E;&#x793A;&#x7684;Fragment&#xFF0C;&#x4E0B;&#x56FE;&#x5F88;&#x6E05;&#x695A;&#x5730;&#x8868;&#x8FBE;&#x8FD9;&#x4E00;&#x70B9;&#xFF1A; &#x4F7F;&#x7528;FragmentStatePagerAdapter&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x7684;Fragment&#x4F1A;&#x88AB;&#x9500;&#x6BC1;&#xFF1B;&#x800C;FragmentPagerAdapter&#x53EA;&#x4F1A;&#x8C03;&#x7528;detach(Fragment)&#x800C;&#x4E0D;&#x662F;remove(Fragment)&#xFF0C;&#x8FD9;&#x53EA;&#x4F1A;&#x9500;&#x6BC1;Fragment&#x7684;View &#x800C;&#x4E0D;&#x4F1A;&#x9500;&#x6BC1;Fragment&#x3002; &#x524D;&#x8005;&#x66F4;&#x8282;&#x7701;&#x8D44;&#x6E90;&#xFF0C;&#x540E;&#x8005;&#x4F1A;&#x66F4;&#x6D41;&#x7545;&#x3002;&#x5BF9;&#x4E8E;&#x672C;&#x8282;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6570;&#x636E;&#x91CF;&#x53EF;&#x80FD;&#x5F88;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;&#x524D;&#x8005;&#xFF1B;&#x5BF9;&#x4E8E;&#x8981;&#x73B0;&#x5B9E;&#x7684;&#x9875;&#x9762;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#x51E0;&#x9875;&#xFF0C;&#x6BD4;&#x5982;tab&#x9875;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5C31;&#x6BD4;&#x8F83;&#x9002;&#x5408;&#x4F7F;&#x7528;&#x540E;&#x8005;&#x3002; &#x5728;P802&#x4E2D;&#x63D0;&#x5230;&#xFF0C;FragmentStatePagerAdapter&#x4F1A;&#x5728;&#x88AB;&#x9500;&#x6BC1;&#x7684;&#x65F6;&#x5019;&#x628A;Fragment&#x7684;&#x72B6;&#x6001;&#x4FDD;&#x5B58;&#x5230;Bundle&#xFF0C;&#x5982;&#x679C;&#x7528;&#x6237;&#x8FD4;&#x56DE;&#xFF0C;&#x5B83;&#x4F1A;&#x518D;&#x4ECE;Bundle&#x4E2D;&#x6062;&#x590D;Fragment&#x3002;&#x8FD9;&#x548C;FragmentStatePagerAdapter vs FragmentPagerAdapter&#x7684;&#x533A;&#x522B;&#x6709;&#x5173;&#x7CFB;&#x4E48;&#xFF1F;&#x662F;&#x8BF4;&#x53EA;&#x6709;&#x524D;&#x8005;&#x624D;&#x6709;&#x8FD9;&#x79CD;&#x6062;&#x590D;&#x7684;&#x80FD;&#x529B;&#xFF1F; &#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;RecyclerView? RecyclerView&#x662F;&#x7531;CrimeHolder&#x6765;&#x5145;&#x5F53;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#xFF0C;&#x7531;&#x5176;&#x57FA;&#x7C7B;ViewHolder&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x201C;&#x8D27;&#x7269;&#x201D;View&#xFF0C;&#x800C;&#x4E0D;&#x662F;Fragment&#xFF0C;&#x53EF;&#x53C2;&#x89C1;&#x4E3A;RecyclerView&#x521B;&#x5EFA;java&#x4EE3;&#x7801;&#x3002;&#x201C;&#x8D27;&#x7269;&#x201D;&#x7684;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x968F;&#x610F;&#x6307;&#x5B9A;&#xFF0C;&#x56E0;&#x6B64;Android&#x5F15;&#x5165;&#x4E86;ViewPager&#x3002; &#x5F53;ViewPager&#x76DB;&#x653E;&#x7684;&#x4E0D;&#x662F;Fragment&#x800C;&#x662F;&#x4E00;&#x822C;&#x7684;View&#x65F6;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x6D3E;&#x751F;PagerAdapter&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x63A5;&#x53E3;&#xFF1A; 123456// &#x521B;&#x5EFA;itemView&#x5E76;&#x6DFB;&#x52A0;&#x5230;containerpublic Object instantiateItem(ViewGroup container, int position)// &#x5220;&#x9664;itemViewpublic void destroyItem(ViewGroup container, int position, Object object)// &#x5224;&#x65AD;view&#x548C;object&#x662F;&#x5426;&#x4E3A;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;public abstract boolean isViewFromObject(View view, Object object) ViewPager&#x8C03;&#x7528;instantiateItem(ViewGroup, 5)&#x8FD4;&#x56DE;objA&#xFF0C;&#x5982;&#x679C;&#x8C03;&#x7528;isViewFromObject(View, objA)&#x5E76;&#x4F20;&#x5165;item5&#xFF0C;&#x5219;&#x8FD4;&#x56DE;true&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;false&#x3002; &#x4E0D;&#x8FC7;&#x672C;&#x8282;&#x5E76;&#x6CA1;&#x6709;&#x8BB2;&#x900F;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E09;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x53EA;&#x662F;&#x8BF4;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x590D;&#x6742;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8BB2;PagerAdapter&#x548C;ViewPager&#x5177;&#x4F53;&#x662F;&#x600E;&#x4E48;&#x914D;&#x5408;&#x7684;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记十]]></title>
    <url>%2F2017%2F10%2F21%2F2017%2F1021AndroidProgrammingBNRG10%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5B8C;&#x6210;&#x4E86;&#x70B9;&#x51FB;list&#x5143;&#x7D20;&#x5F39;&#x51FA;details&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002;&#x548C;Activity&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x4E2A;Activity&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x7A0D;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x662F;Fragment&#x7684;Arguments&#x673A;&#x5236;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x5728;Fragment&#x4E2D;&#x542F;&#x52A8;Activity - &#x5728;Fragment&#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E; &#x5728;Fragment&#x4E2D;&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x4E2A;Activity &#x548C;Activity&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x4E2A;Activity&#x4E00;&#x6837;&#xFF0C;Fragment&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x4E2A;Activity&#x4E5F;&#x662F;&#x8C03;&#x7528;startActivity(Intent intent)&#xFF0C;&#x4F20;&#x53C2;&#x7684;&#x65B9;&#x5F0F;&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF1A; 12345678910// CrimeActivity &#x6309;&#x7167;&#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219;&#xFF0C;&#x88AB;&#x542F;&#x52A8;&#x65B9;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;Intentpublic class CrimeActivity extends SingleFragmentActivity { public static final String EXTRA_CRIME_ID = &quot;com.bnrg.bnrg07.crime_id&quot;; public static Intent newIntent(Context packageContext, UUID crimeId){ Intent intent = new Intent(packageContext, CrimeActivity.class); intent.putExtra(EXTRA_CRIME_ID, crimeId); return intent; } ...} 12345678910111213141516// CrimeListFragment.javapublic class CrimeListFragment extends Fragment { ... private class CrimeHolder extends RecyclerView.ViewHolder implements View.OnClickListener{ ... @Override public void onClick(View view){ // &#x542F;&#x52A8;Activity&#x5E76;&#x4F20;&#x5165;crimeId Intent intent = CrimeActivity.newIntent(getActivity(), mCrime.getId()); startActivity(intent); } ... } ...} 123456789101112// CrimeFragment.javapublic class CrimeFragment extends Fragment { ... @Override public void onCreate(Bundle savedInstance){ super.onCreate(savedInstance); // &#x63A5;&#x6536;&#x3001;&#x89E3;&#x6790;crimeId&#xFF0C;&#x5E76;&#x7531;&#x6B64;&#x521B;&#x5EFA;crime UUID crimeId = (UUID)getActivity().getIntent().getSerializableExtra(CrimeActivity.EXTRA_CRIME_ID); mCrime = CrimeLab.get(getActivity()).getCrime(crimeId); } ...} &#x89E3;&#x9664;Fragment &#x5BF9;Activity&#x7684;&#x4F9D;&#x8D56; &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;Fragment&#x542F;&#x52A8;&#x540E;&#x4F1A;&#x5411;&#x53D1;&#x8D77;&#x65B9;Activity&#x8BF7;&#x6C42;Extra&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;Fragment&#x4F9D;&#x8D56;&#x4E8E;Activity&#xFF0C;&#x4F7F;&#x5F97;Fragment&#x65E0;&#x6CD5;&#x88C5;&#x914D;&#x7ED9;&#x4EFB;&#x610F;&#x7684;&#x7684;Activity&#x3002;&#x89E3;&#x8026;&#x7684;&#x65B9;&#x6848;&#x662F;&#x5728;&#x521B;&#x5EFA;Fragment&#x7684;&#x65F6;&#x5019;&#x4E3A;&#x5B83;&#x8BBE;&#x5B9A;Argument&#xFF0C;&#x628A;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x585E;&#x5165;Argument&#x4E2D;&#x3002;Argument&#x5176;&#x5B9E;&#x662F;Bundle&#x5B9E;&#x4F8B;&#xFF0C;&#x5B83;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1234Bundle args = new Bundle() // &#x521B;&#x5EFA;Bundle&#x5B9E;&#x4F8B;args.putSerializable(key, value); // &#x585E;&#x5165;key-value&#x6570;&#x636E;&#x5BF9;...fragment.setArguments(args); // &#x8BBE;&#x7F6E;&#x7ED9;Fragment &#x672C;&#x8282;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x662F;&#xFF1A;&#x2460;&#x5728;CrimeFragment&#x4E2D;&#x521B;&#x5EFA;newInstance(UUID crimeId)&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x521B;&#x5EFA;&#x81EA;&#x8EAB;&#x5E76;&#x4F20;&#x5165;Argument&#x53C2;&#x6570;&#xFF1B;&#x2461;&#x5728;CrimeActivity&#x4E2D;&#x7684;createFragment()&#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;CrimeFragment::newInstance(...)&#x751F;&#x6210;Fragment&#xFF1B;&#x2462;&#x5728;CrimeFragment::onCreate(...)&#x51FD;&#x6570;&#x4E2D;&#x89E3;&#x6790;Argument&#x53C2;&#x6570; &#x542F;&#x52A8;Fragment&#x7684;&#x4E00;&#x65B9;&#x603B;&#x662F;&#x9700;&#x8981;&#x4F20;&#x5165;crimeId&#xFF0C;&#x5982;&#x679C;&#x542F;&#x52A8;&#x65B9;&#x662F;Activity&#xFF0C;&#x4ED6;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x77E5;&#x9053;&#x4F20;&#x5165;&#x4EC0;&#x4E48;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x662F;&#x542F;&#x52A8;&#x65B9;&#x5FC5;&#x987B;&#x77E5;&#x9053;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x4F46;&#x548C;&#x524D;&#x4E00;&#x79CD;&#x542F;&#x52A8;&#x65B9;&#x6848;&#x76F8;&#x6BD4;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x6848;&#x7684;&#x597D;&#x5904;&#x662F;Fragment&#x4E0D;&#x5FC5;&#x518D;&#x53CD;&#x8FC7;&#x6765;&#x4F9D;&#x8D56;Activity&#x4E86;&#x3002; &#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122// CrimeFragment.javapublic class CrimeFragment extends Fragment { private static final String ARG_CRIME_ID = &quot;crime_id&quot;; ... // @Override public void onCreate(Bundle savedInstance){ super.onCreate(savedInstance); // &#x2462; &#x4ECE;&#x81EA;&#x8EAB;&#x7684;Argument&#x4E2D;&#x8981;&#x53C2;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x518D;&#x95EE;Activity UUID crimeId = (UUID)getArguments().getSerializable(ARG_CRIME_ID); mCrime = CrimeLab.get(getActivity()).getCrime(crimeId); } ... public static CrimeFragment newInstance(UUID crimeId){ // &#x2460; // &#x6839;&#x636E;crimeId&#x521B;&#x5EFA;Argument&#xFF0C;&#x5E76;&#x7F6E;&#x5165;Fragment Bundle args = new Bundle(); args.putSerializable(ARG_CRIME_ID, crimeId); CrimeFragment fragment = new CrimeFragment(); fragment.setArguments(args); return fragment; }} 123456789// CrimeActivity.javapublic class CrimeActivity extends SingleFragmentActivity { ... @Override protected Fragment createFragment(){ // &#x2461; UUID crimeId = (UUID)getIntent().getSerializableExtra(EXTRA_CRIME_ID); return CrimeFragment.newInstance(crimeId); // &#x8C03;&#x7528;&#x65B0;&#x7684;&#x65B9;&#x6848;&#x521B;&#x5EFA;Fragment }} &#x9000;&#x51FA;details&#x540E;&#x66F4;&#x65B0;list &#x5728;&#x7B14;&#x8BB0;&#x4E94;&#xB7;&#x4ECE;&#x542F;&#x52A8;&#x7684;Activity&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x4E2D;&#xFF0C;&#x8BB2;&#x5230;&#x4E86;Activity&#x542F;&#x52A8;Activity&#x65F6;&#xFF0C;&#x901A;&#x8FC7;startActivityForResult(...)&#x542F;&#x52A8;Activity&#xFF0C;&#x88AB;&#x542F;&#x52A8;&#x65B9;&#x8C03;&#x7528;setResult(...)&#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#xFF0C;&#x542F;&#x52A8;&#x65B9;&#x6536;&#x5230;&#x56DE;&#x8C03;onActivityResult(...)&#x63A5;&#x6536;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x3002; &#x5728;&#x4F20;&#x9012;&#x6570;&#x636E;&#x7684;&#x673A;&#x5236;&#x4E0A;&#xFF0C;Fragment&#x548C;Activity&#x53EA;&#x6709;&#x4E00;&#x70B9;&#x70B9;&#x4E0D;&#x540C;&#xFF0C;Fragment&#x6709;Fragment::startActivityForResult(...)&#x548C;Fragment::onActivityResult(...)&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;setResult(...)&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x8C03;&#x7528;&#x5B83;&#x6240;&#x5728;&#x7684;Activity&#x7684;&#x8BE5;&#x51FD;&#x6570;&#x6765;&#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x503C;&#xFF1A; 123456public class CrimeFragment extends Fragment{ ... public void returnResult(){ getActivity().setResult(Activty.RESULT_OK, null); }} &#x800C;&#x5728;&#x672C;&#x8282;&#xFF0C;&#x5176;&#x5B9E;&#x5E76;&#x6CA1;&#x6709;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x542F;&#x52A8;Activity&#x65F6;&#x4F20;&#x5165;&#x7684;&#x53EA;&#x662F;crimeId&#xFF0C;&#x88AB;&#x542F;&#x52A8;&#x7684;Fragment&#x662F;&#x5728;&#x5176;onCreateView(...)&#x51FD;&#x6570;&#x5185;&#x83B7;&#x5F97;&#x4E86;crimeId&#x5BF9;&#x5E94;&#x7684;Crime&#x5BF9;&#x8C61;&#xFF0C;&#x5728;Fragment&#x4E0A;&#x90FD;&#x662F;&#x76F4;&#x63A5;&#x4FEE;&#x6539;CrimeLab&#x5355;&#x4F53;&#x4E2D;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x66F4;&#x65B0;&#x4E86;Model&#x5C42;&#x3002;&#x56E0;&#x6B64;&#x5F53;&#x5728;Fragment&#x6309;&#x4E0B;Back&#x800C;&#x8FD4;&#x56DE;&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x901A;&#x77E5;&#x542F;&#x52A8;&#x65B9;&#xFF0C;&#x4EE4;&#x5176;&#x66F4;&#x65B0;&#x5373;&#x53EF;&#x3002; &#x4E66;&#x4E2D;&#x662F;&#x5728;CrimeListFragment::onResume()&#x56DE;&#x8C03;&#x4E2D;&#x5237;&#x65B0;&#x4E86;&#x754C;&#x9762;&#x3002;&#x5F53;&#x70B9;&#x51FB;list&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5F39;&#x51FA;CrimeActivity&#xFF0C;CrimeListActivity&#x88AB;&#x538B;&#x6808;&#x8FDB;&#x5165;Paused&#x72B6;&#x6001;&#xFF1B;&#x5728;CrimeActivity&#x70B9;&#x51FB;Back&#x540E;&#xFF0C;&#x8BE5;Activity&#x88AB;&#x9500;&#x6BC1;&#xFF0C;CrimeListActivity&#x53C8;&#x6210;&#x4E3A;&#x6808;&#x9876;&#x7EC4;&#x4EF6;&#x800C;&#x8FDB;&#x5165;Resumed&#x72B6;&#x6001;&#xFF0C;&#x56E0;&#x6B64;&#x4F1A;&#x56DE;&#x8C03;&#x5B83;&#x7684;onResume()&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5728;&#x8C03;&#x7528;&#x5176;&#x5185;&#x90E8;Fragment&#x7684;onResume()&#x51FD;&#x6570;&#x3002; &#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819// CrimeListFragment.javapublic class CrimeListFragment extends Fragment { ... @Override public void onResume(){ super.onResume(); updateUI(); // &#x66F4;&#x65B0;&#x754C;&#x9762; } private void updateUI(){ CrimeLab crimeLab = CrimeLab.get(getActivity()); List&lt;Crime&gt; crimes = crimeLab.getCrimes(); if(mAdapter == null) { mAdapter = new CrimeAdapter(crimes); mCrimeRecyclerView.setAdapter(mAdapter); }else{ mAdapter.notifyDataSetChanged(); } }} &#x5728;updateUI()&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x9996;&#x6B21;&#x66F4;&#x65B0;&#x9700;&#x8981;&#x521B;&#x5EFA;mAdapter&#x5B9E;&#x4F8B;&#xFF0C;&#x4E4B;&#x540E;&#x518D;&#x66F4;&#x65B0;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8C03;&#x7528;&#x5B83;&#x7684;notifyDataSetChanged()&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4F1A;&#x901A;&#x77E5;&#x6BCF;&#x4E00;&#x4E2A;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x3002; &#x4E00;&#x4E2A;activity&#x4ECE;&#x65E0;&#x5230;&#x6709;&#x518D;&#x5230;&#x5C55;&#x73B0;&#xFF0C;&#x7ECF;&#x5386;&#x4E86;Nonexistent &gt; Stopped &gt; Paused &gt; Resumed&#x56DB;&#x4E2A;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x679C;Activity&#x662F;&#x88AB;&#x5176;&#x5B83;&#x7684;Activity&#x8986;&#x76D6;&#xFF0C;&#x5B83;&#x4F1A;&#x8FDB;&#x5165;&#x5230;Paused&#x72B6;&#x6001;&#xFF0C;&#x800C;&#x672A;&#x5FC5;&#x8FDB;&#x5165;Stopped&#x72B6;&#x6001;&#xFF0C;&#x6240;&#x4EE5;&#x5728;onResume()&#x4E2D;&#x66F4;&#x65B0;&#x754C;&#x9762;&#x662F;&#x4E2A;&#x6BD4;&#x8F83;&#x5B89;&#x5168;&#x7684;&#x65F6;&#x673A;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;Arguments&#x800C;&#x4E0D;&#x662F;&#x4F20;&#x53C2;&#xFF1F; &#x5728;&#x7B14;&#x8BB0;&#x4E03;&#xB7;&#x5411;&#x521B;&#x5EFA;&#x7684;Fragment&#x4F20;&#x5165;&#x53C2;&#x6570;&#x4E2D;&#x5DF2;&#x7ECF;&#x63D0;&#x5230;&#x8FC7;&#x4E86;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x521B;&#x5EFA;Fragment&#x5B9E;&#x4F8B;&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;crimeId&#x53C2;&#x6570;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x5B9E;&#x4F8B;&#x6784;&#x9020;&#x5B8C;&#x6210;&#x540E;&#x901A;&#x8FC7;&#x8C03;&#x7528;setArguments(...)&#x4F20;&#x5165;crimeId&#x7684;&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x662F;&#xFF1A;&#x5F53;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x6216;&#x8005;&#x7531;&#x4E8E;&#x4F4E;&#x5185;&#x5B58;&#x800C;&#x5F15;&#x53D1;&#x5185;&#x5B58;&#x56DE;&#x6536;&#x65F6;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;fragment&#x91CD;&#x5EFA;&#x3002;&#x4F7F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F20;&#x53C2;&#xFF0C;&#x628A;&#x53C2;&#x6570;&#x4FDD;&#x5B58;&#x5728;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x4E2D;&#x7684;&#x505A;&#x6CD5;&#x4F1A;&#x5BFC;&#x81F4;&#x5728;&#x91CD;&#x5EFA;&#x65F6;&#xFF0C;&#x8BE5;&#x6570;&#x636E;&#x4E22;&#x5931;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x59CB;&#x7EC8;&#x8BB0;&#x5F97;&#x5728;fragment&#x7684;onSaveInstanceState(...)&#x51FD;&#x6570;&#x4E2D;&#x56DE;&#x5199;&#xFF0C;&#x5728;onCreate(...)&#x51FD;&#x6570;&#x4E2D;&#x8BFB;&#x5165;&#xFF0C;&#x8FD9;&#x6837;&#x5F88;&#x9EBB;&#x70E6;&#xFF1B;&#x800C;&#x4F7F;&#x7528;Arguments&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F1A;&#x5728;&#x91CD;&#x5EFA;&#x65F6;&#xFF0C;&#x81EA;&#x52A8;&#x4FDD;&#x5B58;/&#x8BFB;&#x5165;&#x53C2;&#x6570;&#x6570;&#x636E;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记九]]></title>
    <url>%2F2017%2F10%2F20%2F2017%2F1020AndroidProgrammingBNRG09%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4E86;ConstraintLayout&#x5E03;&#x5C40;&#xFF0C;&#x540C;&#x65F6;&#x4ECB;&#x7ECD;&#x4E86;AndroidStudio&#x7684;Design&#x7F16;&#x8F91;&#x5668;&#xFF0C;&#x5728;&#x4E0A;&#x4E00;&#x7AE0;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x53D8;&#x5316;&#x4E0D;&#x5927;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8D34;&#x56FE;&#x4E86;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x5728;AndroidStudio&#x7684;Design&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x8C03;&#x6574;&#x754C;&#x9762;&#x8BBE;&#x7F6E; - px/dp/sp/pt,mm,in&#x57FA;&#x672C;&#x6982;&#x5FF5; - Style, themes&#x57FA;&#x672C;&#x6982;&#x5FF5; &#x628A;LinearLayout&#x8F6C;&#x6210;ConstraintLayout &#x4E0A;&#x4E00;&#x8282;&#x5F15;&#x5165;&#x7684;list_item_crime.xml&#x662F;&#x4E00;&#x4E2A;LinearLayout&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5728;&#x672C;&#x4E66;&#x7B2C;&#x4E00;&#x7AE0;&#x7B14;&#x8BB0;&#x4E2D;&#x4ECB;&#x7ECD;&#x8FC7;ConstraintLayout&#x5C06;&#x6210;&#x4E3A;&#x672A;&#x6765;Android&#x4E3B;&#x6D41;&#x5E03;&#x5C40;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x80FD;&#x5E38;&#x5E38;&#x4F1A;&#x6709;&#x628A;&#x8001;&#x7684;&#x5E03;&#x5C40;&#x5F62;&#x5F0F;&#x8F6C;&#x6210;ConstratintLayout&#x7684;&#x9700;&#x8981;&#x3002;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; &#x6253;&#x5F00;list_item_crime.xml&#xFF0C;&#x9009;&#x62E9;Design&#x7F16;&#x8F91;&#x5668;&#xFF0C;Component Tree &gt; LiearnLayout &gt; &#x53F3;&#x952E; &gt; Convert LinearLayout to ConstraintLayout&#xFF1A; AndroidStudio&#x8BE2;&#x95EE;&#x8F6C;&#x6362;&#x7B56;&#x7565;&#xFF0C;&#x70B9;&#x51FB;OK &gt; Google&#x7684;UI&#x8BBE;&#x8BA1;&#x6BD4;&#x82F9;&#x679C;&#x7684;&#x8981;&#x5DEE;&#x597D;&#x591A;&#xFF0C;&#x5728;mac&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5F88;&#x5C11;&#x80FD;&#x770B;&#x5230;&#x8FD9;&#x79CD;&#x5927;&#x6BB5;&#x6587;&#x5B57;&#x7684;&#x63D0;&#x793A;&#x3002; Widget&#x7684;&#x4E09;&#x79CD;&#x5C3A;&#x5BF8;&#x8BBE;&#x7F6E; &#x5982;&#x4E0B;&#x56FE;&#xFF0C;AndroidStudio&#x7528;&#x4E09;&#x79CD;&#x6807;&#x5FD7;&#x6765;&#x8868;&#x793A;Widget&#x7684;&#x4E09;&#x79CD;&#x5C3A;&#x5BF8;&#x8BBE;&#x7F6E;&#xFF1A; &#x8BBE;&#x7F6E;&#x7C7B;&#x578B; &#x503C; &#x542B;&#x4E49; Fixed Xdp &#x4EE5;dp&#x4E3A;&#x5355;&#x4F4D;&#x7684;&#x56FA;&#x5B9A;&#x503C; Wrap Content wrap_content &#x6839;&#x636E;&#x89C6;&#x56FE;&#x7684;&#x5185;&#x5728;&#x9700;&#x8981;&#x5206;&#x914D;&#x5C3A;&#x5BF8;&#x3002;&#x5982;&#x5BF9;&#x4E8E;TextView&#x5C31;&#x662F;&#x8DB3;&#x591F;&#x663E;&#x793A;&#x5185;&#x5BB9; any size 0dp &#x5141;&#x8BB8;&#x89C6;&#x56FE;&#x62C9;&#x4F38;&#x4EE5;&#x9002;&#x5E94;&#x6307;&#x5B9A;&#x7684;&#x7EA6;&#x675F; any size&#x8BF4;&#x7684;&#x4E0D;&#x662F;&#x5F88;&#x6E05;&#x695A;&#xFF0C;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;&#x6BD4;&#x5982;TextView&#xFF0C;&#x8BBE;&#x7F6E;&#x4E86;&#x8DDD;&#x79BB;&#x5DE6;&#x53F3;&#x90BB;&#x5C45;&#x7684;&#x5BBD;&#x5EA6;&#x3002;&#x5982;&#x679C;&#x662F;Wrap Content&#xFF0C;&#x5176;&#x6700;&#x7EC8;&#x5BBD;&#x5EA6;&#x7531;&#x6587;&#x672C;&#x5185;&#x5BB9;&#x51B3;&#x5B9A;&#xFF1B;&#x5982;&#x679C;&#x662F;any size&#xFF0C;&#x4E0D;&#x7BA1;&#x6587;&#x672C;&#x5185;&#x5BB9;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5176;&#x6700;&#x7EC8;&#x5BBD;&#x5EA6;&#x5219;&#x7531;&#x8DDD;&#x79BB;&#x5DE6;&#x53F3;&#x90BB;&#x5C45;&#x7684;&#x5BBD;&#x5EA6;&#x51B3;&#x5B9A;&#x3002; &#x5728;&#x672C;&#x4F8B;&#x4E2D;&#xFF0C;&#x70B9;&#x51FB;Component Tree&#x4E2D;&#x7684;&#x5177;&#x4F53;widget&#xFF0C;&#x5728;&#x6700;&#x53F3;&#x4FA7;Properties&#x4E2D;&#x70B9;&#x51FB;&#x6807;&#x5FD7;&#xFF0C;&#x53EF;&#x4EE5;&#x5FAA;&#x73AF;&#x8BBE;&#x5B9A;&#x4E0D;&#x540C;&#x7684;&#x503C;&#x3002; &#x6DFB;&#x52A0;ImageView&#x5143;&#x7D20; Palette &gt; Images &gt; ImageView&#xFF0C;&#x5C06;ImageView&#x62D6;&#x5230;Component Tree&#x4E2D;&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x7684;&#x754C;&#x9762;&#x4E2D;&#x9009;&#x62E9;&#x8981;&#x690D;&#x5165;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x672C;&#x8282;&#x662F;ic_solved&#xFF1A; &#x5728;Design&#x754C;&#x9762;&#x4E2D;&#x6DFB;&#x52A0;&#x7EA6;&#x675F; &#x6211;&#x60F3;&#x8BF4;&#x7684;&#x662F;&#xFF0C;&#x5C3D;&#x91CF;&#x5728;Text&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x624B;&#x52A8;&#x7F16;&#x8F91;&#x5427;&#xFF0C;Design&#x5BF9;&#x4E8E;&#x7EA6;&#x675F;&#x7684;&#x63A7;&#x5236;&#x5B9E;&#x5728;&#x592A;&#x96BE;&#x7528;&#x4E86;&#x3002;&#x672C;&#x8282;&#x9700;&#x8981;&#x628A;ImageView&#x5BF9;&#x9F50;&#x5230;&#x5B83;&#x6240;&#x5728;&#x7684;ConstraintLayout&#x7684;&#x4E0A;&#x3001;&#x4E0B;&#x3001;&#x53F3;&#x8FB9;&#x7F18;&#x3002;&#x671F;&#x5F85;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x4ECE;ImageView&#x7684;Anchor&#x62D6;&#x5230;&#x7236;&#x5BB9;&#x5668;&#x7684;Anchor&#xFF0C;&#x4F46;&#x662F; 1. &#x5F53;&#x62D6;&#x52A8;&#x5230;&#x7236;&#x5BB9;&#x5668;&#x7684;&#x8FB9;&#x7F18;&#x65F6;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5BF9;&#x5E94;&#x7684;Anchor&#x6765;&#x63A5;&#x5E94;&#xFF0C;fuck&#x65E0;&#x95E8;&#x3002; 2. &#x8BBE;&#x5B9A;&#x4E0A;&#x4E86;&#x4E5F;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x76F8;&#x5E94;&#x7684;&#x63D0;&#x793A;&#xFF0C;&#x611F;&#x89C9;&#x50CF;&#x5978;&#x5C38;&#x3002;&#x5C3D;&#x7BA1;&#x4E66;&#x91CC;&#x8BF4;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;tip&#x63D0;&#x793A;&#xFF0C;&#x5B9E;&#x9645;&#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x3002; 3. &#x68C0;&#x9A8C;&#x4E00;&#x4E2A;widget&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#x7EA6;&#x675F;&#x7684;&#x7BAD;&#x5934;&#x6807;&#x5FD7;&#x4E5F;&#x6CA1;&#x627E;&#x5230;&#x3002; AndroidStudio&#x7684;UI&#x7F16;&#x8F91;&#x5668;&#x6BD4;Xcode&#x5DEE;&#x4E86;&#x51E0;&#x6761;&#x8857;&#x3002; &#x6240;&#x4EE5;&#x5728;Design&#x4E2D;&#x6DFB;&#x52A0;&#x7EA6;&#x675F;&#x53EF;&#x4EE5;&#x4EC5;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x8F85;&#x52A9;&#x624B;&#x6BB5;&#xFF0C;&#x5F53;&#x4E0D;&#x77E5;&#x9053;&#x5173;&#x952E;&#x5B57;&#x600E;&#x4E48;&#x5199;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x5E2E;&#x4E2A;&#x5FD9;&#x3002;&#x771F;&#x6B63;&#x8BBE;&#x7F6E;&#x8FD8;&#x662F;&#x5728;Text&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x5B8C;&#x6210;&#x3002;&#x6B64;&#x5904;&#x7684;&#x7EA6;&#x675F;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678...&lt;ImageView android:id=&quot;@+id/imageView&quot; ... app:layout_constraintRight_toRightOf=&quot;parent&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; app:layout_constraintBottom_toBottomOf=&quot;parent&quot;/&gt; ... &#x5177;&#x4F53;&#x7528;&#x6CD5;&#x5728;&#x672C;&#x4E66;&#x7B2C;&#x4E00;&#x7AE0;&#x7B14;&#x8BB0;&#x5DF2;&#x7ECF;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002; &#x52A8;&#x6001;&#x663E;&#x793A;widget &#x672C;&#x8282;&#x662F;&#x8981;&#x6839;&#x636E;&#x67D0;&#x4E2A;item&#x662F;&#x5426;&#x5904;&#x4E8E;solved&#x72B6;&#x6001;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x663E;&#x793A;&#x624B;&#x94D0;&#x56FE;&#x6807;&#x3002;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x65B0;&#x5185;&#x5BB9;&#xFF1A; 1. &#x5728;CrimeHolder&#x4E2D;&#x63D0;&#x9886;&#x5230;crime_solved &#xFF08;ImageView&#x89C6;&#x56FE;&#xFF09; 2. &#x5728;CrimeHolder::bind(...)&#x51FD;&#x6570;&#x4E2D;&#x6839;&#x636E;&#x201C;&#x8D27;&#x7269;&#x201D;&#x7684;&#x503C;&#x51B3;&#x5B9A;&#x8981;&#x4E0D;&#x8981;&#x663E;&#x793A;crime_solved 3. &#x5177;&#x4F53;&#x663E;&#x793A;&#x4EE3;&#x7801;&#x4E3A;&#xFF1A; 123...mSolvedImageView.setVisibility(crime.isSolved()? View.VISIBLE:View.GONE);... px/dp(dip)/sp/pt,mm,in table th:nth-of-type(1){ width: 40px; } &#x540D;&#x79F0; &#x89E3;&#x91CA; px pixel&#x7684;&#x7F29;&#x5199;&#x3002;&#x65E0;&#x8BBA;&#x5C4F;&#x5E55;&#x7684;&#x5BC6;&#x5EA6;&#x662F;&#x591A;&#x5C11;&#xFF0C;&#x4E00;&#x4E2A;px&#x5BF9;&#x5E94;&#x5C4F;&#x5E55;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x7269;&#x7406;&#x50CF;&#x7D20;&#x70B9;&#x3002;&#x7531;&#x4E8E;px&#x4E0D;&#x4F1A;&#x9002;&#x914D;&#x5C4F;&#x5E55;&#x7684;&#x5BC6;&#x5EA6;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;px&#x3002; dp&#x6216;dip density-independent pixel&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x6545;&#x53C8;&#x79F0;dip&#x3002;&#x901A;&#x5E38;&#x4F7F;&#x7528;dp&#x5B9A;&#x4E49;margin, padding&#x6216;&#x5176;&#x5B83;&#x5C3A;&#x5BF8;&#x76F8;&#x5173;&#x7684;&#x50CF;&#x7D20;&#x503C;&#x3002;&#x901A;&#x5E38;&#x65E0;&#x8BBA;&#x5C4F;&#x5E55;&#x5BC6;&#x5EA6;&#x5982;&#x4F55;&#xFF0C;1dp=1/160&#x82F1;&#x5BF8;&#x3002; sp scale-independent pixel&#x7684;&#x7F29;&#x5199;&#x3002;sp&#x662F;&#x8003;&#x8651;&#x4E86;&#x7528;&#x6237;&#x5B57;&#x4F53;&#x5C3A;&#x5BF8;&#x4E60;&#x60EF;&#x7684;dp&#xFF0C;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x8BBE;&#x7F6E;&#x6587;&#x672C;&#x5C3A;&#x5BF8;&#x3002; pt,mm,in &#x548C;dp&#x7C7B;&#x4F3C;&#x7684;&#x7F29;&#x653E;&#x5355;&#x5143;&#xFF0C;&#x53EA;&#x662F;&#x8BA1;&#x7B97;&#x5355;&#x4F4D;&#x662F;&#x6309;&#x7167;points(1/72&#x82F1;&#x5BF8;)&#x6216;millimeters&#x6BEB;&#x7C73;&#x6216;inches&#x82F1;&#x5BF8;&#x3002;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x8BBE;&#x5907;&#x90FD;&#x652F;&#x6301;&#x8FD9;&#x4E9B;&#x5355;&#x4F4D;&#x7684;&#x6362;&#x7B97;&#x3002; &#x672C;&#x4E66;&#x5E38;&#x7528;&#x7684;&#x8BA1;&#x91CF;&#x5355;&#x4F4D;&#x662F;dp&#x548C;sp&#xFF0C;Android&#x4F1A;&#x81EA;&#x52A8;&#x628A;&#x8FD9;&#x4E9B;&#x5355;&#x4F4D;&#x7FFB;&#x8BD1;&#x6210;&#x7269;&#x7406;&#x76F8;&#x5173;&#x7684;&#x50CF;&#x7D20;&#x3002; Margin vs Padding Margin&#x5C5E;&#x6027;&#x662F;&#x7528;&#x4E8E;&#x5E03;&#x5C40;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5B83;&#x51B3;&#x5B9A;&#x4E24;&#x4E2A;widget&#x4E4B;&#x95F4;&#x7684;&#x95F4;&#x8DDD;&#xFF1B;Padding&#x5219;&#x662F;widget&#x5185;&#x90E8;&#x5C5E;&#x6027;&#xFF0C;&#x7528;&#x6765;&#x51B3;&#x5B9A;widget&#x6BD4;&#x5B83;&#x7684;&#x5185;&#x5BB9;&#x5927;&#x51FA;&#x6765;&#x591A;&#x5C11;&#x3002;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#x56E0;&#x4E3A;&#x8981;&#x6BD4;&#x5176;&#x5185;&#x90E8;&#x6587;&#x5B57;&#x5927;&#x51FA;&#x4E00;&#x5708;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;Padding&#xFF1B;&#x56E0;&#x4E3A;&#x8981;&#x9075;&#x5B88;&#x548C;&#x90BB;&#x5C45;&#x95F4;&#x8DDD;&#x800C;&#x5927;&#x51FA;&#x4E00;&#x5708;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x4F7F;&#x7528;Margin&#x3002; Styles, themes&#x548C;theme attributes Style&#x662F;&#x63CF;&#x8FF0;widget&#x5916;&#x89C2;&#x548C;&#x884C;&#x4E3A;&#x7684;xml&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x7684;style&#x63CF;&#x8FF0;&#x4E86;&#x4E00;&#x4E2A;&#x5927;&#x5B57;&#x4F53;&#x7684;&#x5916;&#x89C2;&#xFF1A; 1234&lt;style name=&quot;BigTextStyle&quot;&gt; &lt;item name=&quot;android:textSize&quot;&gt;20sp&lt;/item&gt; &lt;item name=&quot;android:padding&quot;&gt;3dp&lt;/item&gt;&lt;/style&gt; &#x4F60;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x81EA;&#x5DF1;&#x7684;style&#x3002; theme&#x5219;&#x662F;style&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x5B83;&#x7684;&#x5C5E;&#x6027;&#x6307;&#x5411;&#x5176;&#x5B83;&#x7684;style&#x3002;Android&#x63D0;&#x4F9B;&#x4E86;&#x5E73;&#x53F0;themes&#x4F9B;app&#x4F7F;&#x7528;&#x3002;&#x6BD4;&#x5982;&#x5728;&#x672C;&#x8282;&#x7684;fragment_crime.xml&#x4E2D;&#x63CF;&#x8FF0;TextView&#xFF1A; 12345&lt;TextView...style=&quot;?android:listSeparatorTextViewStyle&quot;.../&gt; &#x8FD9;&#x662F;&#x5E26;&#x6709;&#x4E00;&#x4E2A;&#x5206;&#x5272;&#x7EBF;&#x7684;TextView&#xFF0C;&#x6BCF;&#x4E2A;Android theme&#x90FD;&#x5305;&#x542B;listSeparatorTextViewStyle&#xFF0C;&#x4ED6;&#x4EEC;&#x63CF;&#x8FF0;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x5272;&#x7EBF;&#x5916;&#x89C2;&#x3002; &#x4E00;&#x4E2A;app&#x7684;theme&#x5B9A;&#x4E49;&#x5728;AndrodiManifest.xml&#x6587;&#x4EF6;&#x4E2D;&#xFF1A; 1234567&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; ...&gt; &lt;application ... android:theme=&quot;@style/AppTheme&quot;&gt; ... &lt;/application&gt;&lt;/manifest&gt; &#x8BE5;theme&#x7684;&#x5C5E;&#x6027;&#x503C;&#x5B9A;&#x4E49;&#x5728;res/values/styles.xml&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记八]]></title>
    <url>%2F2017%2F10%2F19%2F2017%2F1019AndroidProgrammingBNRG08%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x7EE7;&#x7EED;&#x5B9E;&#x73B0;CriminalIntent&#x7684;list&#x90E8;&#x5206;&#xFF0C;&#x5E76;&#x4E14;&#x62BD;&#x8C61;&#x51FA;&#x4F9B;list&#x548C;details&#x516C;&#x7528;Fragment&#x7684;&#x5E03;&#x5C40;&#x548C;java&#x7C7B;&#x3002; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;RecyclerView&#xFF0C;&#x70B9;&#x51FB;&#x6BCF;&#x4E2A;Item&#x5F39;&#x51FA;Toast&#xFF1A; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x62BD;&#x8C61;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;Fragment&#xFF0C;&#x5305;&#x62EC;xml&#x5BB9;&#x5668;&#x548C;java&#x5B9E;&#x73B0; - RecyclerView&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#xFF0C;&#x5B9E;&#x73B0;&#x6B65;&#x9AA4; &#x4FEE;&#x6539;fragment&#x7684;&#x5BB9;&#x5668;&#x3001;java&#x6587;&#x4EF6; &#x91CD;&#x547D;&#x540D;fragment xml&#x5BB9;&#x5668;&#x6587;&#x4EF6; &#x672C;&#x8282;&#x4E3A;&#x4E86;&#x8BA9;Fragment&#x66F4;&#x901A;&#x7528;&#xFF0C;&#x628A;&#x539F;&#x5148;&#x7684;activity_crime.xml&#x6539;&#x540D;&#x4E3A;activity_fragment.xml&#xFF1A; &#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12345&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;android.support.constraint.ConstraintLayout android:id=&quot;@+id/fragment_container&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; AndroidStudio&#x4F1A;&#x81EA;&#x52A8;&#x4FEE;&#x6539;&#x5F15;&#x7528;&#x8BE5;&#x8D44;&#x6E90;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6BD4;&#x5982;CrimeActivity.java&#xFF1A; 12345678public class CrimeActivity extends AppCompatActivity { @Override protected void onCreate(Bundle savedInstanceState) { ... setContentView(R.layout.activity_fragment); // &#x81EA;&#x52A8;&#x4FEE;&#x6539; ... }} &#x5982;&#x679C;&#x6CA1;&#x6709;&#x81EA;&#x52A8;&#x4FEE;&#x6539;&#xFF0C;&#x9700;&#x8981;&#x624B;&#x52A8;&#x89E3;&#x51B3;&#x3002; ## &#x4E3A;&#x901A;&#x7528;&#x7684;Fragment&#x914D;&#x5907;&#x5BF9;&#x5E94;&#x7684;java&#x6587;&#x4EF6; xml&#x5BB9;&#x5668;&#x6587;&#x4EF6;&#x53EA;&#x662F;&#x5728;&#x547D;&#x540D;&#x4E0A;&#x4F53;&#x73B0;&#x51FA;&#x901A;&#x7528;&#x6027;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x66F4;&#x591A;&#x662F;&#x5728;java&#x4EE3;&#x7801;&#x4E0A;: 123456789101112131415161718// SingleFragmentActivity.java...public abstract class SingleFragmentActivity extends AppCompatActivity { protected abstract Fragment createFragment(); @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_fragment); FragmentManager fm = getSupportFragmentManager(); Fragment fragment = fm.findFragmentById(R.id.fragment_container); if(fragment == null){ fragment = createFragment(); fm.beginTransaction().add(R.id.fragment_container, fragment).commit(); } }} SingleFragmentActivity&#x5728;onCreate(...)&#x4E2D;&#x52A0;&#x8F7D;Fragment&#x5BB9;&#x5668;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x521B;&#x5EFA;Fragment&#x5B9E;&#x4F8B;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x4F8B;&#x7684;&#x521B;&#x5EFA;&#x5219;&#x7531;&#x6D3E;&#x751F;&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#xFF1A; 12345678// CrimeActivity.java...public class CrimeActivity extends SingleFragmentActivity { @Override protected Fragment createFragment(){ return new CrimeFragment(); }} &#x7591;&#x95EE;&#xFF1A;&#x628A;Fragment&#x7684;&#x6DFB;&#x52A0;&#x653E;&#x5230;&#x57FA;&#x7C7B;&#x91CC;&#xFF0C;&#x8FD9;&#x4E0D;&#x4F1A;&#x5BFC;&#x81F4;&#x6240;&#x6709;Fragment&#x5171;&#x7528;&#x540C;&#x4E00;&#x4E2A;id&#x4E48;&#xFF1F;FragmentManager&#x662F;&#x7ED1;&#x5B9A;&#x5728;Activity&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;Fragment ID&#x7684;&#x552F;&#x4E00;&#x6027;&#x53EA;&#x8981;&#x5728;&#x5177;&#x4F53;Activity&#x7684;&#x8303;&#x56F4;&#x5185;&#x5373;&#x53EF;&#x3002; &#x5411;manifest&#x6DFB;&#x52A0;&#x65B0;&#x7684;Activity&#x5E76;&#x7F6E;&#x4E3A;&#x542F;&#x52A8;&#x9879; &#x5728;&#x542F;&#x52A8;&#x672C;&#x5E94;&#x7528;&#x5185;&#x7684;Activity&#x7684;&#x8981;&#x6C42;&#x4E2D;&#x63D0;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x5E94;&#x7528;&#x7684;Activity&#x80FD;&#x88AB;&#x542F;&#x52A8;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x5176;manifest&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x8BE5;&#x7EC4;&#x4EF6;&#x3002; 1234567891011121314151617181920&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.bnrg.bnrg07&quot;&gt; &lt;application ... android:theme=&quot;@style/AppTheme&quot;&gt; &lt;!-- &#x65B0;&#x52A0;&#x5165;&#x7684;Activity&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x4E3A;&#x542F;&#x52A8;&#x9879; --&gt; &lt;activity android:name=&quot;.CrimeListActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;activity android:name=&quot;.CrimeActivity&quot;&gt; &lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; RecyclerView&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3; &#x6211;&#x4EEC;&#x8FD8;&#x62FF;&#x96C6;&#x88C5;&#x7BB1;&#x7801;&#x5934;&#x505A;&#x4E2A;&#x7C7B;&#x6BD4;&#xFF1A;RecyclerView&#x5C31;&#x662F;&#x96C6;&#x88C5;&#x7BB1;&#x7801;&#x5934;&#xFF0C;&#x9700;&#x8981;&#x88C5;100&#x7BB1;&#x7684;&#x8D27;&#x7269;&#x4E5F;&#x8BB8;&#x5E76;&#x4E0D;&#x9700;&#x8981;100&#x4E2A;&#x96C6;&#x88C5;&#x7BB1;&#xFF0C;10&#x4E2A;&#x53EF;&#x80FD;&#x5C31;&#x591F;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x53EF;&#x4EE5;&#x5206;&#x591A;&#x6B21;&#x8FD0;&#x8F93;&#x3002;&#x4E3A;&#x4E86;&#x8FD0;&#x4F5C;&#x8D77;&#x6765;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x51E0;&#x4E2A;&#x89D2;&#x8272;&#x5171;&#x540C;&#x914D;&#x5408;&#x3002; - Adapter&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3; &#x6839;&#x636E;&#x7801;&#x5934;&#x7684;&#x89C4;&#x6A21;&#x548C;&#x96C6;&#x88C5;&#x7BB1;&#x7684;&#x5C3A;&#x5BF8;&#x51B3;&#x5B9A;&#x8BA2;&#x505A;&#x591A;&#x5C11;&#x4E2A;&#x96C6;&#x88C5;&#x7BB1;&#xFF0C;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x8C03;&#x914D;&#x3002; - ViewHolder&#x96C6;&#x88C5;&#x7BB1; &#x8D1F;&#x8D23;&#x5305;&#x88C5;&#x8D27;&#x7269; &#x5B83;&#x4EEC;&#x548C;RecyclerView&#x5171;&#x540C;&#x5B8C;&#x6210;&#x201C;&#x53EF;&#x56DE;&#x6536;&#x89C6;&#x56FE;&#x201D;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002;&#x5728;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x6D3E;&#x751F;Adapter&#x548C;ViewHolder&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x5728;ViewHolder&#x7684;&#x5B50;&#x7C7B;&#x4E2D;&#x5B9E;&#x73B0;&#x88C5;&#x5165;&#x5177;&#x4F53;&#x7684;&#x8D27;&#x7269;&#xFF0C;&#x5728;Adapter&#x7684;&#x5B50;&#x7C7B;&#x4E2D;&#x5B9E;&#x73B0;&#x521B;&#x5EFA;&#x548C;&#x8C03;&#x914D;ViewHolder&#x7684;&#x5B50;&#x7C7B;&#x5B9E;&#x4F8B;&#x3002; ViewHolder&#x7684;&#x804C;&#x8D23; &#x5B83;&#x8D1F;&#x8D23;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x7684;View &#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;ViewHolder&#x8FD9;&#x4E00;&#x5C42;&#x62BD;&#x8C61;&#xFF1F;&#x5B83;&#x62BD;&#x8C61;&#x7684;&#x53C8;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x7B54;&#x6848;&#x8FD8;&#x53EF;&#x4EE5;&#x5957;&#x7528;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x7801;&#x5934;&#x201D;&#x7684;&#x7C7B;&#x6BD4;&#xFF1A;ViewHolder&#x5C31;&#x662F;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;&#xFF0C;&#x5B83;&#x5411;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;Adapter&#x63D0;&#x4F9B;&#x4E86;&#x7EDF;&#x4E00;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4FBF;&#x4E8E;Adapter&#x751F;&#x4EA7;&#x548C;&#x642C;&#x8FD0;&#x3002;&#x8FD9;&#x662F;&#x8FD9;&#x4E00;&#x5C42;&#x62BD;&#x8C61;&#x7684;&#x4F5C;&#x7528;&#x3002; &#x800C;&#x6BCF;&#x4E00;&#x4E2A;&#x96C6;&#x88C5;&#x7BB1;&#x4F1A;&#x8C03;&#x7528;&#x5185;&#x90E8;&#x8D27;&#x7269;&#x63A5;&#x53E3;&#xFF0C;&#x663E;&#x793A;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002;&#x672C;&#x8D28;&#x4E0A;ViewHolder&#x5C31;&#x662F;&#x4E00;&#x4E2A;View&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x4ECE;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#x83B7;&#x5F97;widget&#xFF0C;&#x518D;&#x4ECE;Model&#x5C42;&#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x5C55;&#x73B0;&#x5230;widget&#x3002; Adapter&#x7684;&#x804C;&#x8D23; Adapter&#x4F4D;&#x4E8E;RecyclerView&#x548C;Model&#x4E4B;&#x95F4;&#xFF0C;&#x5B83;&#x7684;&#x804C;&#x8D23;&#x662F;&#xFF1A; 1. &#x521B;&#x5EFA;&#x5FC5;&#x8981;&#x7684;ViewHolders 2. &#x5C06;Modle&#x5C42;&#x7684;&#x6570;&#x636E;&#x4F20;&#x5165;ViewHolder &#x5373;&#xFF1A;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x548C;&#x8C03;&#x914D;&#x96C6;&#x88C5;&#x7BB1;&#xFF0C;&#x4E5F;&#x8D1F;&#x8D23;&#x628A;&#x8D27;&#x7269;&#x88C5;&#x5165;&#x96C6;&#x88C5;&#x7BB1;&#x3002; Adapter&#x548C;RecyclerView&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A; &#x5728;P624&#x4E2D;&#x63D0;&#x5230;&#xFF1A;&#x5F53;&#x8FD9;&#x4E9B;&#x8C03;&#x7528;&#x5B8C;&#x6210;&#x540E;&#xFF0C;RecyclerView&#x5C06;&#x628A;list item&#x663E;&#x793A;&#x5230;&#x5C4F;&#x5E55;&#x4E0A;&#x3002;onCreateViewHolder(...)&#x7684;&#x8C03;&#x7528;&#x6B21;&#x6570;&#x4F1A;&#x6BD4;onBindViewHolder(...)&#x5C11;&#x5F97;&#x591A;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x65E6;&#x521B;&#x5EFA;&#x4E86;&#x8DB3;&#x591F;&#x591A;&#x7684;ViewHolder&#x4E4B;&#x540E;&#xFF0C;RecyclerView&#x5C06;&#x4E0D;&#x518D;&#x8C03;&#x7528;onCreateViewHolder(...)&#x3002; &#x53EF;&#x89C1;&#xFF0C;&#x590D;&#x7528;&#x96C6;&#x88C5;&#x7BB1;&#x7684;&#x6838;&#x5FC3;&#x903B;&#x8F91;&#x662F;&#x5199;&#x5728;RecyclerView&#x5185;&#x90E8;&#x7684;&#xFF0C;RecyclerView&#x624D;&#x662F;&#x201C;&#x590D;&#x7528;&#x201D;&#x7B56;&#x7565;&#x7684;&#x53F8;&#x4EE4;&#x90E8;&#xFF0C;Adapter&#x8FD9;&#x4E2A;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#x4E5F;&#x53EA;&#x662F;&#x8D1F;&#x8D23;&#x6267;&#x884C;&#x53F8;&#x4EE4;&#x90E8;&#x7684;&#x547D;&#x4EE4;&#x3002; RecyclerView&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x6B65;&#x9AA4; &#x6DFB;&#x52A0;RecyclerView&#x7684;&#x4F9D;&#x8D56; &#x9879;&#x76EE; &gt; &#x53F3;&#x952E; &gt; Open Module Settings&#xFF1A; app &gt; Dependencies &gt; +&#x53F7; &gt; Library dependency&#xFF1A; &#x641C;&#x7D22;recyclerview&#xFF0C;&#x5E76;&#x9009;&#x62E9;com.android.support:recyclerview-v7&#xFF1A; &#x4F46;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x662F;&#x6DFB;&#x52A0;&#x4E86;&#x6B21;&#x4F9D;&#x8D56;&#x4F1A;&#x5BFC;&#x81F4;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; &gt; Manifest merger failed : Attribute meta-data#android.support.VERSION@value value=(25.3.1) from [com.android.support:appcompat-v7:25.3.1] AndroidManifest.xml:27:9-31 is also present at [com.android.support:recyclerview-v7:26.0.0-alpha1] AndroidManifest.xml:24:9-38 value=(26.0.0-alpha1). Suggestion: add &apos;tools:replace=&quot;android:value&quot;&apos; to element at AndroidManifest.xml:25:5-27:34 to override. &#x8FD9;&#x4E3B;&#x8981;&#x662F;android.support:appcompat-v7:25.3.1&#x548C;android.support:recyclerview-v7:26.0.0-alpha1&#x6709;&#x51B2;&#x7A81;&#xFF0C;&#x4FEE;&#x6539;app/build.gradle&#xFF1A; 123456...dependencies { ... compile &apos;com.android.support:recyclerview-v7:26.0.0-alpha1&apos; compile &apos;com.android.support:appcompat-v7:26.0.0-alpha1&apos;} &#x4E3A;RecyclerView&#x521B;&#x5EFA;layout&#x5E03;&#x5C40;&#x6587;&#x4EF6; &#x547D;&#x540D;&#x4E3A;fragment_crime_list.xml 123456&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.support.v7.widget.RecyclerView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:id=&quot;@+id/crime_recycler_view&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;/&gt; &#x4E3A;RecyclerView&#x521B;&#x5EFA;java&#x4EE3;&#x7801; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263public class CrimeListFragment extends Fragment { private RecyclerView mCrimeRecyclerView; private CrimeAdapter mAdapter; // &#x2463; private class CrimeHolder extends RecyclerView.ViewHolder{ private TextView mTitleTextView; private TextView mDateTextView; private Crime mCrime; public CrimeHolder(LayoutInflater inflater, ViewGroup parent){ super(inflater.inflate(R.layout.list_item_crime, parent, false)); mTitleTextView = (TextView)itemView.findViewById(R.id.crime_title); mDateTextView = (TextView)itemView.findViewById(R.id.crime_date); } public void bind(Crime crime){ mCrime = crime; mTitleTextView.setText(mCrime.getTitle()); mDateTextView.setText(mCrime.getDate().toString()); } } // &#x2462; private class CrimeAdapter extends RecyclerView.Adapter&lt;CrimeHolder&gt;{ private List&lt;Crime&gt; mCrimes; public CrimeAdapter(List&lt;Crime&gt; crimes){ mCrimes = crimes; } @Override public CrimeHolder onCreateViewHolder(ViewGroup parent, int viewType) { LayoutInflater layoutInflater = LayoutInflater.from(getActivity()); return new CrimeHolder(layoutInflater, parent); } @Override public void onBindViewHolder(CrimeHolder holder, int position) { Crime crime = mCrimes.get(position); holder.bind(crime); } @Override public int getItemCount() { return mCrimes.size(); } } // &#x2460; public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){ View view = inflater.inflate(R.layout.fragment_crime_list, container, false); mCrimeRecyclerView = (RecyclerView)view.findViewById(R.id.crime_recycler_view); mCrimeRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity())); updateUI(); return view; } // &#x2461; private void updateUI(){ CrimeLab crimeLab = CrimeLab.get(getActivity()); List&lt;Crime&gt; crimes = crimeLab.getCrimes(); mAdapter = new CrimeAdapter(crimes); mCrimeRecyclerView.setAdapter(mAdapter); }} &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7565;&#x957F;&#xFF0C;&#x4F46;&#x662F;&#x7406;&#x89E3;&#x4E86;RecyclerView&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#xFF0C;&#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x638C;&#x63E1;&#xFF0C;&#x6211;&#x4EEC;&#x6309;&#x7167;&#x6CE8;&#x91CA;&#x4E2D;&#x6807;&#x5B9A;&#x7684;&#x987A;&#x5E8F;&#x3002; - &#x2460; &#x8F7D;&#x5165;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4ECE;&#x4E2D;&#x63D0;&#x9886;&#x5230;RecyclerView&#x5B9E;&#x4F8B; &#x6CE8;&#x610F;&#xFF1A;RecyclerView&#x5FC5;&#x987B;&#x9700;&#x8981;&#x4E00;&#x4E2A;LayoutManager&#x5B9E;&#x4F8B;&#x624D;&#x80FD;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5E76;&#x4E0D;&#x76F4;&#x63A5;&#x8D1F;&#x8D23;&#x5E03;&#x5C40;itmes&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;LayoutManager&#x5B9E;&#x4F8B;&#x6765;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x9664;&#x4E86;&#x8D1F;&#x8D23;&#x5E03;&#x5C40;&#x6BCF;&#x4E00;&#x4E2A;item&#xFF0C;LayoutManager&#x8FD8;&#x8D1F;&#x8D23;&#x5B9A;&#x4E49;&#x5982;&#x4F55;&#x6EDA;&#x52A8;&#x7684;&#x903B;&#x8F91;&#x3002; - &#x2461; &#x521B;&#x5EFA;&#x201C;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#x201D;Adapter&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x5B9E;&#x4F8B;&#x8BBE;&#x7F6E;&#x4E3A;RecyclerView&#x7684;Adapter&#x3002; - &#x2462; &#x5B9E;&#x73B0;&#x201C;&#x8C03;&#x5EA6;&#x4E2D;&#x5FC3;&#x201D;CrimeAdapter&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x51E0;&#x4E2A;&#x8981;&#x70B9;&#xFF1A;1&#x3001;&#x8FDE;&#x63A5;&#x5230;Model&#x6570;&#x636E;&#xFF0C;&#x6B64;&#x5904;&#x4E3A;mCrimes&#xFF1B;2&#x3001;&#x5B9E;&#x73B0;onCreateViewHolder(...)&#x63A5;&#x53E3;&#xFF0C;&#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x65B0;&#x7684;ViewHolder&#x5B9E;&#x4F8B;&#xFF1B;3&#x3001;&#x5B9E;&#x73B0;onBindViewHolder(...)&#x63A5;&#x53E3;&#xFF0C;&#x7528;&#x4E8E;&#x5C06;&#x67D0;&#x4E2A;&#x8D27;&#x7269;&#x88C5;&#x5165;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x96C6;&#x88C5;&#x7BB1;&#xFF1B;4&#x3001;&#x5B9E;&#x73B0;getItemCount()&#x63A5;&#x53E3;&#xFF0C;&#x8FD4;&#x56DE;&#x8D27;&#x7269;&#x7684;&#x6570;&#x91CF;&#x3002; - &#x2463; &#x5B9E;&#x73B0;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;CrimeHolder&#xFF0C;&#x5B83;&#x8D1F;&#x8D23;&#xFF1A;1&#x3001;&#x6839;&#x636E;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x63D0;&#x9886;widget&#xFF1B;2&#x3001;&#x628A;&#x4F20;&#x5165;&#x7684;&#x6570;&#x636E;&#x663E;&#x793A;&#x5230;widget&#x3002; &#x96C6;&#x88C5;&#x7BB1;&#x7684;&#x5E03;&#x5C40;&#x6587;&#x4EF6; &#x5728;&#x201C;&#x96C6;&#x88C5;&#x7BB1;&#x201D;CrimeHolder&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6839;&#x636E;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x63D0;&#x9886;widget&#xFF0C;&#x5B83;&#x7684;&#x5E03;&#x5C40;&#x6587;&#x4EF6;list_item_crime.xml&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot;&gt; &lt;TextView android:id=&quot;@+id/crime_title&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Crime Title&quot;/&gt; &lt;TextView android:id=&quot;@+id/crime_date&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Crime Date&quot;/&gt;&lt;/LinearLayout&gt; &#x5B83;&#x5305;&#x542B;&#x4E24;&#x4E2A;TextView&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x663E;&#x793A;&#x6807;&#x9898;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x663E;&#x793A;&#x65E5;&#x671F;&#x3002; &#x8BA9;RecyclerView&#x54CD;&#x5E94;&#x70B9;&#x51FB; &#x672C;&#x8282;&#x53EA;&#x662F;&#x5728;&#x70B9;&#x51FB;&#x4E86;&#x6BCF;&#x4E2A;Item&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5F39;&#x51FA;Toast&#x3002;&#x539F;&#x7406;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF1A;&#x2460;&#x3001;&#x628A;CrimeHolder::itemView&#x7684;clickListener&#x8BBE;&#x7F6E;&#x4E3A;ViewHolder&#x81EA;&#x8EAB;&#xFF1B;&#x2461;&#x3001;&#x8BA9;CrimeHolder&#x5B9E;&#x73B0;View.OnClickListener&#x63A5;&#x53E3;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617... private class CrimeHolder extends RecyclerView.ViewHolder implements View.OnClickListener{ // &#x2461; ... public CrimeHolder(LayoutInflater inflater, ViewGroup parent){ super(inflater.inflate(R.layout.list_item_crime, parent, false)); itemView.setOnClickListener(this); // &#x2460; ... } @Override public void onClick(View view){ // &#x2461; Toast.makeText(getActivity(), mCrime.getTitle() + &quot; clicked!&quot;, Toast.LENGTH_SHORT).show(); } ... }...]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记七]]></title>
    <url>%2F2017%2F10%2F18%2F2017%2F1018AndroidProgrammingBNRG07%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F00;&#x542F;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5E94;&#x7528;&#xFF0C;list-details&#x6A21;&#x5F0F;&#xFF0C;&#x5728;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x51E0;&#x7AE0;&#x4E2D;&#x90FD;&#x4F1A;&#x5B8C;&#x5584;&#x8BE5;&#x5E94;&#x7528;&#x3002;&#x672C;&#x7AE0;&#x53EA;&#x5B9E;&#x73B0;&#x4E86;details&#x7684;&#x90E8;&#x5206;&#x3002;&#x5F15;&#x5165;&#x4E86;Fragment&#xFF0C;&#x7528;&#x4E8E;&#x663E;&#x793A;details&#x7684;&#x4FE1;&#x606F;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - fragment&#x7684;&#x6982;&#x5FF5;&#x3001;&#x4F7F;&#x7528;&#x6B65;&#x9AA4;&#x3001;&#x4F7F;&#x7528;&#x539F;&#x5219; - Android&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x7684;&#x5F15;&#x5165; &#x4EC0;&#x4E48;&#x662F;fragment&#xFF1F; fragment&#x7528;&#x6765;&#x89E3;&#x51B3;UI&#x548C;&#x4E8B;&#x4EF6;&#x7684;&#x5206;&#x79BB;&#x95EE;&#x9898;&#x3002;&#x5F53;app&#x5728;&#x6A2A;&#x7AD6;&#x5C4F;&#x95F4;&#x5207;&#x6362;&#x7684;&#x65F6;&#x5019;&#xFF0C;activity&#x4F1A;&#x88AB;&#x9500;&#x6BC1;&#x91CD;&#x5EFA;&#xFF0C;&#x5982;&#x679C;&#x5176;&#x4E2D;&#x6B63;&#x5728;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x4EFB;&#x52A1;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x8F7D;&#x4EE5;&#x53CA;&#x8868;&#x793A;&#x4E0B;&#x8F7D;&#x8FDB;&#x5EA6;&#x7684;&#x8FDB;&#x5EA6;&#x6761;&#x3002;&#x5982;&#x679C;&#x8FDE;&#x8FDB;&#x5EA6;&#x6761;&#x4FE1;&#x606F;&#x90FD;&#x8981;&#x4FDD;&#x5B58;&#x548C;&#x8BFB;&#x53D6;&#xFF0C;&#x4F1A;&#x5927;&#x5927;&#x589E;&#x52A0;&#x4EE3;&#x7801;&#x7684;&#x590D;&#x6742;&#x6027;&#x3002;&#x901A;&#x8FC7;&#x5F15;&#x5165;UI fragment&#x548C;&#x5DE5;&#x4F5C;fragment&#xFF0C;&#x8BA9;&#x5DE5;&#x4F5C;&#x4E0D;&#x968F;UI&#x7684;&#x91CD;&#x5EFA;&#x800C;&#x91CD;&#x5EFA;&#x3002; fragment&#x7684;&#x4E24;&#x79CD;&#x5B9E;&#x73B0;&#x7248;&#x672C; native fragment&#x548C;support fragment&#x3002; - native fragment&#x88AB;&#x7F16;&#x8BD1;&#x5230;&#x4E86;&#x8BBE;&#x5907;&#x4E2D;&#xFF0C;&#x4E0D;&#x540C;&#x7248;&#x672C;&#x7684;Android&#x7CFB;&#x7EDF;&#x4E0B;&#xFF0C;native fragment&#x5B9E;&#x73B0;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x7EC6;&#x5FAE;&#x7684;&#x5DEE;&#x522B;&#x3002; - support fragment&#x88AB;&#x7F16;&#x8BD1;&#x5230;&#x4F60;&#x7684;app include&#x7684;&#x5E93;&#x91CC;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x7BA1;&#x5F53;&#x524D;&#x8FD0;&#x884C;&#x7684;Android&#x7248;&#x672C;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;support fragment&#x7684;&#x8868;&#x73B0;&#x662F;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x7684;&#x3002; &#x4F7F;&#x7528;support fragment&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#x5B83;&#x53EF;&#x4EE5;&#x968F;&#x4F60;&#x7684;app&#x66F4;&#x65B0;&#xFF0C;Google&#x6BCF;&#x5E74;&#x4F1A;&#x66F4;&#x65B0;support fragment&#x5F88;&#x591A;&#x6B21;&#xFF0C;&#x5F53;&#x65B0;&#x7684;feature&#x88AB;&#x6DFB;&#x52A0;&#x5230;fragment API&#xFF0C;&#x5B83;&#x4E5F;&#x540C;&#x65F6;&#x4F1A;&#x88AB;&#x6DFB;&#x52A0;&#x5230;support fragment&#x4E2D;&#x3002; &#x4E24;&#x79CD;&#x90E8;&#x7F72;fragment&#x7684;&#x65B9;&#x6CD5; &#x4F7F;&#x7528;activity&#x7684;layout&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x57FA;&#x672C;&#x4E0A;&#x6CA1;&#x4EC0;&#x4E48;&#x610F;&#x4E49;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x7F3A;&#x4E4F;&#x5F39;&#x6027;&#xFF0C;&#x4E0D;&#x80FD;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x52A8;&#x6001;&#x8C03;&#x6574;&#x3001;&#x66FF;&#x6362;fragment&#x3002;&#x800C;&#x5F15;&#x5165;fragment&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x8FD9;&#x79CD;&#x5F39;&#x6027;&#xFF0C;&#x5F15;&#x5165;&#x7684;&#x4EE3;&#x4EF7;&#x662F;&#x590D;&#x6742;&#x5EA6;&#x589E;&#x52A0;&#x3002;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x53EA;&#x6709;&#x4EE3;&#x4EF7;&#x6CA1;&#x6709;&#x597D;&#x5904;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x8BA4;&#x4E3A;&#x6CA1;&#x610F;&#x4E49;&#x3002; &#x4F7F;&#x7528;java&#x4EE3;&#x7801;&#x3002;&#x4E66;&#x4E2D;&#x8BF4;&#x5C3D;&#x7BA1;&#x4F1A;&#x5E26;&#x6765;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x4F46;&#x8FD9;&#x662F;&#x552F;&#x4E00;&#x4E00;&#x79CD;&#x80FD;&#x52A8;&#x6001;&#x8C03;&#x6574;fragment&#xFF0C;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x589E;&#x52A0;&#x3001;&#x5220;&#x9664;&#x3001;&#x66FF;&#x6362;fragment&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x6DFB;&#x52A0;fragment&#x7684;&#x6B65;&#x9AA4; &#x7B2C;&#x4E00;&#x6B65; &#x5B9A;&#x4E49;&#x5BB9;&#x7EB3;fragment&#x7684;view&#xFF0C;&#x672C;&#x8282;&#x662F;Listing7.5&#x5B9A;&#x4E49;&#x5728;activity_crime.xml&#x4E2D;&#x7684;FrameLayout&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x901A;&#x7528;&#x7684;&#x7A7A;&#x5BB9;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5BB9;&#x7EB3;&#x4EFB;&#x4F55;fragment&#x3002;activity_crime.xml&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;android.support.constraint.ConstraintLayout android:id=&quot;@+id/fragment_container&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &#x5176;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;android:id&#x6807;&#x7B7E;&#xFF0C;&#x8FD9;&#x5728;&#x540E;&#x9762;&#x5C06;Fragment&#x6DFB;&#x52A0;&#x5230;Activity&#x65F6;&#x8FD8;&#x4F1A;&#x7528;&#x5230;&#x3002; &#x7B2C;&#x4E8C;&#x6B65; &#x521B;&#x5EFA;fragment UI&#x3002;&#x8FD9;&#x4E2A;&#x6B65;&#x9AA4;&#x548C;&#x521B;&#x5EFA;activity UI&#x4E00;&#x81F4;&#xFF1A; 1. &#x5728;layout&#x6587;&#x4EF6;&#x4E2D;&#x5E03;&#x5C40;&#x63A7;&#x4EF6;&#x3002;res/layout&#x53F3;&#x952E;&#xFF0C;&#x9009;&#x62E9;New &gt; Layout resource file &#x586B;&#x5199;File name: fragment_crime&#xFF0C;Root element:LinearLayout &#x5728;&#x751F;&#x6210;&#x7684;fragment_crime.xml&#x6587;&#x4EF6;&#x4E2D;&#x5E03;&#x5C40;&#x63A7;&#x4EF6;&#xFF1A; 1234567891011121314&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.support.constraint.ConstraintLayoutxmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;xmlns:tools=&quot;http://schemas.android.com/tools&quot;android:layout_width=&quot;match_parent&quot;android:layout_height=&quot;match_parent&quot;android:layout_margin=&quot;16dp&quot;&gt; &lt;TextView .../&gt; &lt;EditText .../&gt; &lt;TextView .../&gt; &lt;Button .../&gt; &lt;CheckBox .../&gt;&lt;/android.support.constraint.ConstraintLayout&gt; &#x5728;java&#x4EE3;&#x7801;&#x4E2D;&#x6DFB;&#x52A0;&#x53D8;&#x91CF;&#xFF0C;&#x5173;&#x8054;&#x5230;&#x5E03;&#x5C40;&#x4E2D;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x5E76;&#x4E3A;&#x4E4B;&#x5B9E;&#x73B0;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x4EE3;&#x7801;&#x3002;&#x65B0;&#x5EFA;CrimeFragment.java&#xFF0C;&#x6D3E;&#x751F;&#x81EA;Fragment&#x3002;&#x7CFB;&#x7EDF;&#x6709;&#x4E24;&#x4E2A;Fragment&#xFF1A;android.app.Fragment &#x548C; android.support.v4.app.Fragment&#xFF0C;&#x524D;&#x8005;&#x662F;native fragment&#xFF0C;&#x540E;&#x8005;&#x662F;support fragment&#xFF0C;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x540E;&#x8005;&#x3002; 1234567891011121314151617181920212223242526272829...import android.support.v4.app.Fragment;...public class CrimeFragment extends Fragment { private Crime mCrime; private EditText mTitleField; @Override public void onCreate(Bundle savedInstance){ uper.onCreate(savedInstance); mCrime = new Crime(); } @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstance){ // &#x521B;&#x5EFA;Fragment View&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;container&#x662F;&#x8BE5;View&#x7684;&#x7236;View&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x662F;&#x5426;&#x628A;&#x521B;&#x5EFA;&#x7684;Fragment View&#x5B9E;&#x4F8B;&#x6DFB;&#x52A0;&#x5230;&#x5B83;&#x7684;&#x7236;View View v = inflater.inflate(R.layout.fragment_crime, container, false); // &#x5173;&#x8054;&#x5230;&#x63A7;&#x4EF6;&#xFF0C;Activity&#x8C03;&#x7528;&#x7684;&#x662F;Activity::findViewById(...)&#xFF0C;&#x6B64;&#x5904;&#x8C03;&#x7528;&#x7684;&#x662F;View::findViewById(...) mTtitleField = (EditText)v.findViewById(R.id.crime_title); mTitleField.addTextChangedListener(new TextWatcher(){ // &#x5B9E;&#x73B0;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x4EE3;&#x7801; ... @Override public void onTextChanged(CharSequence s, int start, int count){ mCrime.setTitle(s.toString()); } ... }); return v; }} &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A; - Fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x63A5;&#x53E3;&#x90FD;&#x662F;public&#xFF0C;&#x800C;Activity&#x7684;&#x5BF9;&#x5E94;&#x63A5;&#x53E3;&#x662F;protected&#x7684;&#x3002; - &#x548C;Activity&#x7C7B;&#x4F3C;&#xFF0C;Fragment&#x4E5F;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x7684;&#x72B6;&#x6001;&#x4FE1;&#x606F;&#x5B58;&#x53D6;&#x5230;bundle&#x5185;&#xFF0C;&#x901A;&#x8FC7;&#x8986;&#x76D6;Fragment::onSaveInstanceStat(...)&#x6765;&#x5B8C;&#x6210;&#x5B58;&#x53D6;&#x3002; - &#x5728;Fragment::onCreate(...)&#x4E2D;&#x53EA;&#x52A0;&#x8F7D;&#x4E86;&#x6570;&#x636E;Model&#xFF0C;&#x5728;Fragment::onCreateView(...)&#x4E2D;&#x52A0;&#x8F7D;&#x548C;&#x5173;&#x8054;&#x754C;&#x9762;&#x5143;&#x7D20;&#x3002; - &#x5728;Fragment::onCreateView(...)&#x4E2D;&#x8C03;&#x7528;inflater.inflate(...)&#x7528;&#x4E8E;&#x52A0;&#x8F7D;&#x5B50;&#x89C6;&#x56FE;&#x3002;&#x5176;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5E03;&#x5C40;&#x7684;sourceID&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8BE5;&#x5E03;&#x5C40;&#x7684;&#x7236;View&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x662F;&#x5426;&#x628A;&#x521B;&#x5EFA;&#x7684;Fragment View&#x5B9E;&#x4F8B;&#x6DFB;&#x52A0;&#x5230;container&#x4E2D;&#x3002; - &#x5728;Fragment::onCreateView(...)&#x4E2D;&#x8C03;&#x7528;View::findViewById(int)&#x6765;&#x83B7;&#x53D6;&#x89C6;&#x56FE;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x50CF;&#x5728;Activity&#x4E2D;&#x8C03;&#x7528;Activity::findViewById(int) &#x7B2C;&#x4E09;&#x6B65; &#x628A;fragment&#x52A0;&#x5165;Activity&#x3002;&#x5411;Activity&#x7684;FragmentManager&#x6DFB;&#x52A0;Fragment UI&#xFF0C;FragmentManager&#x8D1F;&#x8D23;&#x7BA1;&#x7406;Fragments&#xFF0C;&#x5E76;&#x4E14;&#x628A;&#x5B83;&#x4EEC;&#x7684;View&#x6DFB;&#x52A0;&#x5230;Activity View&#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x4E2D;&#x3002;FragmentManager&#x8D1F;&#x8D23;&#x5904;&#x7406;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;fragment&#x7684;list&#x548C;fragment&#x4E8B;&#x52A1;&#x6808;&#x3002;FragmentManager&#x548C;Activity&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718public class CrimeActivity extends AppCompatActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_crime); FragmentManager fm = getSupportFragmentManager(); // &#x5148;&#x68C0;&#x67E5;&#x8BE5;fm&#x7684;list&#x4E2D;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;fragment&#xFF0C;&#x5982;&#x679C;&#x5C4F;&#x5E55;&#x65CB;&#x8F6C;&#x5BFC;&#x81F4;activity&#x88AB;&#x9500;&#x6BC1;&#xFF0C; // FragmentManager&#x4FDD;&#x5B58;list&#xFF0C;&#x8BE5;list&#x91CC;&#x9762;&#x7684;fragment&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x65CB;&#x8F6C;&#x5C4F;&#x5E55;&#x800C;&#x91CD;&#x5EFA;&#xFF0C; // &#x5F53;activity&#x91CD;&#x5EFA;&#x540E;&#xFF0C;FragmentManager&#x4F1A;&#x52A0;&#x8F7D;&#x8BE5;list Fragment fragment = fm.findFragmentById(R.id.fragment_container); if(fragment == nuLL){ // &#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x521B;&#x5EFA; fragment = new CrimeFragment(); // &#x5411;fm&#x7684;list&#x4E2D;&#x6DFB;&#x52A0;fragment fm.beginTransaction().add(R.id.fragment_container, fragment).commit(); } }} &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A; - &#x5982;&#x679C;Activity&#x6D3E;&#x751F;&#x81EA;AppCompatActivity&#xFF0C;&#x8C03;&#x7528;getSupportFragmentManager()&#x6765;&#x83B7;&#x53D6;Support Fragment Manager&#xFF1B;&#x5982;&#x679C;Activity&#x6D3E;&#x751F;&#x81EA;Activity&#xFF0C;&#x8C03;&#x7528;getFragmentManager()&#x6765;&#x83B7;&#x53D6;Native Fragment Manager FragmentManager::beginTransaction()&#x8FD4;&#x56DE;FragmentTransaction&#x3002; FragmentTransaction::add(...)&#x7684;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;Fragment&#x7684;ContainerID&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;Fragment&#x5BF9;&#x8C61;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x662F;Fragment&#x7684;tag&#x540D;&#xFF0C;&#x6307;&#x5B9A;tag&#x7684;&#x597D;&#x5904;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Fragment1 frag = getSupportFragmentManager().findFragmentByTag(&quot;f1&quot;)&#x4ECE;FragmentManager&#x4E2D;&#x67E5;&#x627E;Fragment&#x5BF9;&#x8C61;&#x3002; ContainerID&#x6709;&#x4E24;&#x4E2A;&#x4F5C;&#x7528;&#xFF1A;1&#x3001;&#x544A;&#x8BC9;FragmentManager&#x52A0;&#x5165;&#x7684;fragment&#x5E94;&#x8BE5;&#x5C55;&#x73B0;&#x5230;activity view&#x7684;&#x4EC0;&#x4E48;&#x5730;&#x65B9;&#xFF1B;2&#x3001;&#x4F5C;&#x4E3A;Fragment list&#x4E2D;&#x7684;UID &#x5982;&#x679C;&#x4E24;&#x4E2A;Fragment&#x90FD;&#x8981;&#x52A0;&#x5165;&#x5230;&#x540C;&#x4E00;&#x4E2A;Activity&#x4E2D;&#xFF0C;&#x90A3;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x5199;&#x5462;&#xFF1F;&#x5728;&#x4E66;&#x4E2D;P578&#x63D0;&#x5230;&#xFF1A;&#x5E94;&#x8BE5;&#x4E3A;&#x6BCF;&#x4E2A;fragment&#x5206;&#x522B;&#x521B;&#x5EFA;Container View&#xFF0C;&#x6BCF;&#x4E2A;Container&#x6709;&#x5404;&#x81EA;&#x7684;ID&#x3002; &#x672C;&#x8282;&#x7684;&#x5BB9;&#x5668;&#x5C31;&#x662F;activity&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5982;&#x4F55;&#x5728;&#x4E00;&#x4E2A;Activity&#x4E2D;&#x5BB9;&#x7EB3;&#x591A;&#x4E2A;fragment&#xFF1F; commit()&#x662F;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x5185;&#x90E8;&#x901A;&#x8FC7;mManager.enqueueAction()&#x52A0;&#x5165;&#x5904;&#x7406;&#x961F;&#x5217;&#x3002;&#x5BF9;&#x5E94;&#x7684;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#x4E3A;commitNow()&#x3002;commit()&#x5185;&#x90E8;&#x4F1A;&#x6709;checkStateLoss()&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x4F7F;&#x7528;&#x4E0D;&#x5F53;&#xFF08;&#x6BD4;&#x5982;commit()&#x64CD;&#x4F5C;&#x5728;onSaveInstanceState()&#x4E4B;&#x540E;&#xFF09;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x800C;commitAllowingStateLoss()&#x65B9;&#x6CD5;&#x5219;&#x662F;&#x4E0D;&#x4F1A;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x7248;&#x672C;&#x7684;commit()&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;commit()&#xFF0C;&#x800C;&#x4E0D;&#x8981;&#x4F7F;&#x7528;commitAllowingStateLoss()&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;checkStateLoss()&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x629B;&#x5F02;&#x5E38;&#xFF1F; addToBackStack(&quot;fname&quot;)&#x662F;&#x53EF;&#x9009;&#x7684;&#x3002;FragmentManager&#x62E5;&#x6709;&#x56DE;&#x9000;&#x6808;&#xFF08;BackStack&#xFF09;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;Activity&#x7684;&#x4EFB;&#x52A1;&#x6808;&#xFF0C;&#x5982;&#x679C;&#x6DFB;&#x52A0;&#x4E86;&#x8BE5;&#x8BED;&#x53E5;&#xFF0C;&#x5C31;&#x628A;&#x8BE5;&#x4E8B;&#x52A1;&#x52A0;&#x5165;&#x56DE;&#x9000;&#x6808;&#xFF0C;&#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x8FD4;&#x56DE;&#x6309;&#x94AE;&#xFF0C;&#x4F1A;&#x56DE;&#x9000;&#x8BE5;&#x4E8B;&#x52A1;&#xFF08;&#x56DE;&#x9000;&#x6307;&#x7684;&#x662F;&#x5982;&#x679C;&#x4E8B;&#x52A1;&#x662F;add(frag1)&#xFF0C;&#x90A3;&#x4E48;&#x56DE;&#x9000;&#x64CD;&#x4F5C;&#x5C31;&#x662F;remove(frag1)&#xFF09;&#xFF1B;&#x5982;&#x679C;&#x6CA1;&#x6DFB;&#x52A0;&#x8BE5;&#x8BED;&#x53E5;&#xFF0C;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x8FD4;&#x56DE;&#x6309;&#x94AE;&#x4F1A;&#x76F4;&#x63A5;&#x9500;&#x6BC1;Activity&#x3002; &#x300A;Android&#x57FA;&#x7840;&#xFF1A;Fragment&#xFF0C;&#x770B;&#x8FD9;&#x7BC7;&#x5C31;&#x591F;&#x4E86;&#x300B;&#x4E2D;&#x63D0;&#x5230;&#xFF1A; Fragment&#x6709;&#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5373;Fragment&#x91CD;&#x53E0;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x662F;&#x7531;&#x4E8E;Fragment&#x88AB;&#x7CFB;&#x7EDF;&#x6740;&#x6389;&#xFF0C;&#x5E76;&#x91CD;&#x65B0;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x518D;&#x6B21;&#x5C06;fragment&#x52A0;&#x5165;activity&#xFF0C;&#x56E0;&#x6B64;&#x901A;&#x8FC7;&#x5728;&#x5916;&#x56F4;&#x52A0;if&#x8BED;&#x53E5;&#x80FD;&#x5224;&#x65AD;&#x6B64;&#x65F6;&#x662F;&#x5426;&#x662F;&#x88AB;&#x7CFB;&#x7EDF;&#x6740;&#x6389;&#x5E76;&#x91CD;&#x65B0;&#x521D;&#x59CB;&#x5316;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x8BE5;&#x5F02;&#x5E38;&#x51FA;&#x73B0;&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF1A;commit()&#x5728;onSaveInstanceState()&#x540E;&#x8C03;&#x7528;&#x3002;&#x9996;&#x5148;&#xFF0C;onSaveInstanceState()&#x5728;onPause()&#x4E4B;&#x540E;&#xFF0C;onStop()&#x4E4B;&#x524D;&#x8C03;&#x7528;&#x3002;onRestoreInstanceState()&#x5728;onStart()&#x4E4B;&#x540E;&#xFF0C;onResume()&#x4E4B;&#x524D;&#x3002; &#x6CA1;&#x6709;&#x7406;&#x89E3;&#x6839;&#x672C;&#x539F;&#x56E0;&#x662F;&#x4EC0;&#x4E48;&#x3002; &#x5411;&#x521B;&#x5EFA;&#x7684;Fragment&#x4F20;&#x5165;&#x53C2;&#x6570; &#x9700;&#x8981;&#x901A;&#x8FC7;setArguments(Bundle bundle)&#x7684;&#x65B9;&#x5F0F;&#x6DFB;&#x52A0;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F20;&#x5165;&#x3002;&#x56E0;&#x4E3A;&#x901A;&#x8FC7;setArguments()&#x65B9;&#x5F0F;&#x6DFB;&#x52A0;&#xFF0C;&#x5F53;&#x5185;&#x5B58;&#x7D27;&#x5F20;&#x5BFC;&#x81F4;Fragment&#x88AB;&#x7CFB;&#x7EDF;&#x6740;&#x6389;&#x5E76;&#x56DE;&#x590D;&#x65F6;&#x80FD;&#x4FDD;&#x7559;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x3002; &#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x5728;Fragment&#x7684;onAttach()&#x4E2D;&#x901A;&#x8FC7;getArgments()&#x83B7;&#x5F97;&#x3002; fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F; &#x548C;Activity&#x7684;&#x56DE;&#x8C03;&#x540D;&#x79F0;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5DEE;&#x522B;&#x5728;&#x4E8E;&#xFF1A; fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#x662F;&#x88AB;&#x5176;&#x6240;&#x5728;&#x7684;activity&#x8C03;&#x7528;&#xFF0C;&#x800C;activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#x5219;&#x662F;&#x88AB;OS&#x8C03;&#x7528;&#x7684;&#xFF0C;OS&#x5E76;&#x4E0D;&#x77E5;&#x9053;fragment&#x7684;&#x5B58;&#x5728;&#xFF0C;fragment&#x662F;activity&#x7684;&#x5185;&#x90E8;&#x903B;&#x8F91;&#x3002; &#x7531;FragmentManager&#x8D1F;&#x8D23;&#x8C03;&#x7528;fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x51FD;&#x6570;&#xFF1A; - &#x5F53;&#x5411;FragmentManager&#x6DFB;&#x52A0;fragment&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x5B83;&#x7684;onAttach(Context), onCreate(Bundle)&#x548C;onCreateView(...)&#x51FD;&#x6570; - &#x5F53;fragment&#x6240;&#x5728;&#x7684;activity&#x7684;onCreate(Bundle)&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x5B83;&#x7684;onActivityCreated(Bundle)&#x51FD;&#x6570; &#x5982;&#x679C;activity&#x5DF2;&#x7ECF;&#x5904;&#x4E8E;resumed&#x72B6;&#x6001;&#xFF0C;&#x6B64;&#x65F6;&#x518D;&#x52A0;&#x5165;fragment&#xFF0C;FragmentManager&#x4F1A;&#x904D;&#x5386;&#x5176;list&#x4E2D;&#x7684;fragments&#xFF0C;&#x5E76;&#x9010;&#x4E2A;&#x8C03;&#x7528;&#x5176;&#x751F;&#x547D;&#x5468;&#x671F;&#x51FD;&#x6570;&#xFF1A; onAttach(Context) onCreate(Bundle) onCreateView(...) onActivityCreated(Bundle) onStart() onResume() &#x786E;&#x4FDD;fragement&#x548C;&#x5176;&#x6240;&#x5728;&#x7684;activity&#x7684;&#x72B6;&#x6001;&#x662F;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x4E4B;&#x540E;activity&#x7684;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5C06;&#x540C;&#x6B65;&#x8C03;&#x7528;&#x5176;fragment&#x5BF9;&#x5E94;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x51FD;&#x6570;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;fragment&#x53EF;&#x4EE5;&#x907F;&#x514D;Activity&#x9500;&#x6BC1;&#x91CD;&#x5EFA;&#x7684;&#x590D;&#x6742;&#x6027;&#xFF1F; &#x5982;&#x679C;fragment&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8BE5;&#x590D;&#x6742;&#x6027;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x7528;activity&#xFF1F;&#x6216;&#x8005;&#x81F3;&#x5C11;&#x5E94;&#x8BE5;&#x8BA9;fragment&#x6210;&#x4E3A;Activity&#x7684;&#x6807;&#x914D;&#x5427;&#xFF1F; &#x4F7F;&#x7528;fragment&#x7684;&#x539F;&#x5219; &#x4E66;&#x4E2D;&#x63D0;&#x5230;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x7EC4;&#x4EF6;&#x90FD;&#x662F;&#x7528;fragment&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x662F;&#x4E0D;&#x5BF9;&#x7684;&#xFF1B;fragment&#x662F;&#x7528;&#x6765;&#x5C01;&#x88C5;&#x4E3B;&#x8981;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7528;&#x6765;&#x5C01;&#x88C5;&#x5E95;&#x5C42;&#x673A;&#x5236;&#x7684;&#xFF1B;&#x5EFA;&#x8BAE;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x628A;&#x5C0F;&#x7684;&#x5E95;&#x5C42;&#x7684;&#x673A;&#x5236;&#x5C42;&#x505A;&#x6210;&#x81EA;&#x5B9A;&#x4E49;view&#xFF0C;&#x628A;&#x5927;&#x7684;&#x7B56;&#x7565;&#x5C42;&#x5C01;&#x88C5;&#x6210;fragment&#xFF0C;&#x4E00;&#x4E2A;&#x754C;&#x9762;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x8D85;&#x8FC7;&#x4E09;&#x4E2A;fragment&#x3002; &#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;fragment&#xFF0C;&#x5C3D;&#x91CF;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x5F15;&#x5165;&#xFF0C;&#x800C;&#x4E0D;&#x8981;&#x5728;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x624D;&#x6DFB;&#x52A0;&#xFF0C;&#x56E0;&#x4E3A;&#x4E2D;&#x9014;&#x6DFB;&#x52A0;fragment&#x662F;&#x4E2A;&#x96F7;&#x533A;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x4E00;&#x5806;&#x7591;&#x96BE;&#x6742;&#x75C7;&#x3002;&#x6240;&#x4EE5;&#x4E66;&#x4E2D;&#x63D0;&#x51FA;AUF&#x539F;&#x5219;&#xFF1A;Always Use Fragments&#x3002; &#x5173;&#x4E8E;gradle &#x4E24;&#x4E2A;build.gradle&#x7684;&#x4F5C;&#x7528; &#x5728;&#x4F60;&#x7684;project&#x91CC;&#x9762;&#x6709;&#x4E24;&#x4E2A;build.gradle&#xFF0C;&#x4E00;&#x4E2A;&#x662F;project&#x603B;&#x7684;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;app&#x6A21;&#x5757;&#x7684;&#x3002; gradle&#x4E2D;dependence&#x662F;&#x4EC0;&#x4E48;&#x542B;&#x4E49;&#xFF1F; &#x5728;app/build.gradle&#x4E2D;&#x7684;dependencies&#x6709;&#x5982;&#x4E0B;&#x8BB0;&#x5F55;&#xFF1A; 123456dependencies { compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;]) ... compile &apos;com.android.support:appcompat-v7:25.3.1&apos; ...} &#x5176;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;compile&#x8868;&#x793A;&#x6B64;&#x5DE5;&#x7A0B;&#x4F9D;&#x8D56;&#x5176;libs&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6240;&#x6709;.jar&#x6587;&#x4EF6;&#xFF1B; &#x7B2C;&#x4E8C;&#x4E2A;compile&#x8868;&#x793A;&#x5DE5;&#x7A0B;&#x6B64;&#x5DE5;&#x7A0B;&#x4F9D;&#x8D56;&#x7531;Android Studio&#x81EA;&#x52A8;&#x5305;&#x542B;&#x7684;&#x5E93;appcompat-v7&#xFF0C;&#x5176;&#x683C;&#x5F0F;&#x4E3A;groupId:artifactId:version&#xFF0C;groupId&#xFF08;com.android.support&#xFF09;&#x4E3A;&#x8BE5;&#x5E93;&#x5728;Maven repository&#x4E2D;&#x7684;uid&#xFF0C;artifactId&#xFF08;appcompat-v7&#xFF09;&#x662F;&#x5E93;&#x540D;&#xFF0C;version&#xFF08;25.3.1&#xFF09;&#x662F;&#x6700;&#x4F4E;&#x7248;&#x672C;&#x53F7;&#x3002;&#x901A;&#x8FC7;&#x6307;&#x5B9A;dependencies&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x628A;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x76EE;&#x5F55;&#x4E2D;&#x3002;&#x5728;app&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;gradle&#x4F1A;&#x67E5;&#x627E;&#x3001;&#x4E0B;&#x8F7D;&#x5E76;&#x5305;&#x542B;&#x8FD9;&#x4E9B;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#x3002; &#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Project Sturcture&#x6765;&#x914D;&#x7F6E;&#xFF0C;&#x8FD9;&#x548C;&#x4FEE;&#x6539;build.gradle&#x662F;&#x7B49;&#x6548;&#x7684;&#xFF1A; AppCompat&#x662F;&#x8C37;&#x6B4C;&#x7684;&#x517C;&#x5BB9;&#x5E93;&#xFF0C;&#x5B83;&#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86;support fragment&#xFF0C;&#x518D;&#x6DFB;&#x52A0;&#x4E86;dependencies&#x4E4B;&#x540E;&#xFF0C;&#x8BA9;&#x4F60;&#x7684;Activity&#x6D3E;&#x751F;&#x81EA;AppCompatActivity&#xFF0C;&#x5982;&#x679C;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#xFF0C;&#x8BF4;&#x660E;&#x6DFB;&#x52A0;&#x4F9D;&#x8D56;&#x751F;&#x6548;&#x4E86;&#x3002; listSeparatorTextViewStyle&#x7684;&#x4F5C;&#x7528; P526&#x5728;&#x5E03;&#x5C40;TextView&#x65F6;&#x52A0;&#x5165;&#x4E86;listSeparatorTextViewStyle&#x7684;&#x98CE;&#x683C;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 12345678910&lt;TextViewstyle=&quot;?android:listSeparatorTextViewStyle&quot;android:layout_width=&quot;match_parent&quot;android:layout_height=&quot;wrap_content&quot;android:text=&quot;@string/crime_title_label&quot;app:layout_constraintBottom_toBottomOf=&quot;parent&quot;app:layout_constraintLeft_toLeftOf=&quot;parent&quot;app:layout_constraintRight_toRightOf=&quot;parent&quot;app:layout_constraintTop_toTopOf=&quot;parent&quot;app:layout_constraintVertical_bias=&quot;0.25&quot;/&gt; &#x8FD9;&#x4F1A;&#x5728;TextView&#x4E0B;&#x9762;&#x52A0;&#x4E00;&#x6761;&#x5206;&#x5272;&#x7EBF;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记六]]></title>
    <url>%2F2017%2F10%2F17%2F2017%2F1017AndroidProgrammingBNRG06%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x4ECB;&#x7ECD;&#x4E86;&#x7F16;&#x5199;Android&#x5E94;&#x7528;&#x65F6;&#x51E0;&#x4E2A;&#x7248;&#x672C;&#x53F7;&#x7684;&#x542B;&#x4E49;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Android API level&#x7248;&#x672C;&#x53F7;&#x548C;&#x53D1;&#x884C;&#x7248;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x3002; - compileSdkVersion&#x3001;minSdkVersion&#x548C;targetSdkVersion&#x7684;&#x542B;&#x4E49;&#x3002; Android API&#x7EA7;&#x522B;&#x548C;&#x56FA;&#x4EF6;&#x7248;&#x672C;&#x5BF9;&#x5E94;&#x5173;&#x7CFB; table th:nth-of-type(1){ width: 80px; } table th:nth-of-type(2){ width: 200px; } API level Codename Device fireware version 24 Nougat 7.0 23 Marshmallow 6.0 2221 Lollipop 5.15.0 19 KitKat 4.4 181716 Jelly Bean 4.34.24.1 15 Ice Cream Sandwich(ICS) 4.0.34.0.4 10 Gingerbread 2.3.3-2.3.7 8 Froyo 2.2 build.gradle&#x4E2D;&#x51E0;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x542B;&#x4E49; &#x5728;app/build.gradle&#x4E2D;&#x6709;&#x4E09;&#x4E2A;&#x548C;&#x7CFB;&#x7EDF;&#x76F8;&#x5173;&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF1A;compileSdkVersion&#x3001;minSdkVersion&#x548C;targetSdkVersion&#xFF1A; 1234567891011android { compileSdkVersion 25 buildToolsVersion &quot;25.0.0&quot; defaultConfig { applicationId &quot;com.palanceli.ime.bnrg01&quot; minSdkVersion 23 targetSdkVersion 25 ... } ...} Minimum SDK version&#xFF1A;&#x5E94;&#x7528;&#x5728;&#x4F4E;&#x4E8E;&#x8BE5;&#x7248;&#x672C;&#x7684;&#x7CFB;&#x7EDF;&#x4E0A;&#x5C06;&#x65E0;&#x6CD5;&#x5B89;&#x88C5;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x62D2;&#x7EDD;&#x5B89;&#x88C5;&#x8FD9;&#x6837;&#x7684;&#x5E94;&#x7528;&#x3002; Target SDK version&#xFF1A;&#x5728;&#x6307;&#x5B9A;&#x7684;SdkVersion&#x5DF2;&#x505A;&#x5145;&#x5206;&#x6D4B;&#x8BD5;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x4E0D;&#x4F1A;&#x9488;&#x5BF9;&#x6B64;&#x7248;&#x672C;&#x8FDB;&#x884C;&#x517C;&#x5BB9;&#x5904;&#x7406; &#x5982;&#x679C;app&#x8DD1;&#x5728;&#x7CFB;&#x7EDF;SdkVersion &#x7B49;&#x4E8E; targetSdkVersion&#x7684;&#x624B;&#x673A;&#x4E0A;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x4E0D;&#x4F1A;&#x505A;&#x4EFB;&#x4F55;&#x517C;&#x5BB9;&#x5904;&#x7406;&#xFF0C;&#x4ECE;&#x800C;&#x63D0;&#x9AD8;&#x4E86;&#x6027;&#x80FD; &#x5982;&#x679C;app&#x8DD1;&#x5728;&#x7CFB;&#x7EDF;SdkVersion &#x5927;&#x4E8E; targetSdkVersion&#x7684;&#x624B;&#x673A;&#x4E0A;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x505A;&#x517C;&#x5BB9;&#x5904;&#x7406;&#x4EE5;&#x4FDD;&#x969C;app&#x4ECD;&#x7136;&#x4EE5;targetSdkVersion&#x7684;&#x7279;&#x6027;&#x8FD0;&#x884C; &#x5982;&#x679C;app&#x8DD1;&#x5728;&#x7CFB;&#x7EDF;SdkVersion &#x5C0F;&#x4E8E; targetSdkVersion&#x7684;&#x624B;&#x673A;&#x4E0A;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x9519;&#x8BEF;&#xFF0C;&#x6240;&#x4EE5;&#x81F3;&#x5C11;&#x8981;&#x4FDD;&#x8BC1;app&#x5728;minSdkVersion&#x7684;&#x624B;&#x673A;&#x4E0A;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7; compileSdkVersion&#xFF1A;app&#x5728;&#x8BE5;&#x7248;&#x672C;&#x7684;SDK&#x4E0A;&#x7F16;&#x8BD1;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528;&#x67D0;&#x7248;&#x672C;&#x7684;API&#xFF0C;&#x5FC5;&#x987B;&#x5C06;compileSdkVersion&#x8BBE;&#x7F6E;&#x4E3A;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x6B64;&#x7248;&#x672C;&#x3002; &#x901A;&#x5E38;&#x7684;&#x539F;&#x5219;&#x662F;&#xFF1A;&#x6839;&#x636E;&#x4EA7;&#x54C1;&#x7B56;&#x7565;&#x9009;&#x62E9;&#x8981;&#x652F;&#x6301;&#x7684;&#x6700;&#x4F4E;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#xFF0C;&#x8BBE;&#x4E3A;minSdkVersion&#x3002; &#x6839;&#x636E;&#x7528;&#x6237;&#x5206;&#x5E03;&#xFF0C;&#x5728;&#x5206;&#x5E03;&#x6700;&#x5E7F;&#x7684;&#x7248;&#x672C;&#x4E0A;&#x91CD;&#x70B9;&#x6D4B;&#x8BD5;&#xFF0C;&#x8BBE;&#x4E3A;targetSdkVersion&#x3002; &#x6839;&#x636E;&#x7F16;&#x8BD1;&#x7684;SDK&#x7248;&#x672C;&#xFF0C;&#x8BBE;&#x4E3A;comileSdkVersion&#x3002; &#x5982;&#x679C;app&#x5B9E;&#x9645;&#x8FD0;&#x884C;&#x7684;&#x7248;&#x672C;&#x9AD8;&#x4E8E;minSdkVersion&#x4E14;&#x4F4E;&#x4E8E;compileSdkVersion&#xFF0C;&#x4E14;app&#x4F7F;&#x7528;&#x4E86;compileSdkVersion&#x7684;API&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5728;&#x4EE3;&#x7801;&#x91CC;&#x5BF9;&#x6B64;&#x505A;&#x5224;&#x65AD;&#xFF0C;&#x53EA;&#x80FD;&#x8C03;&#x7528;V&#x53CA;&#x4EE5;&#x4E0B;&#x7248;&#x672C;&#x7684;API&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x4FEE;&#x6539;&#x4E86;&#x8FD9;&#x4E9B;&#x7248;&#x672C;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x6267;&#x884C;Tools &gt; Android &gt; Sync Project with Gradle Files &#x6216;&#x8005;&#x70B9;&#x51FB;&#x5DE5;&#x5177;&#x6761; &#x901A;&#x77E5;Android Studio&#x66F4;&#x65B0;&#x3002; &#x5728;&#x8FD0;&#x884C;&#x65F6;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x6267;&#x884C;&#x4E0D;&#x540C;&#x4EE3;&#x7801; &#x5982;&#x679C;minSdkVersion=11&#xFF0C;CompileSdkVersion=23&#xFF0C;&#x5982;&#x679C;&#x4EE3;&#x7801;&#x91CC;&#x8C03;&#x7528;&#x4E86;SdkVersion=23&#x7684;API&#xFF0C;&#x800C;app&#x8FD0;&#x884C;&#x5728;20&#x7684;&#x7CFB;&#x7EDF;&#x4E0A;&#x65F6;&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x597D;&#x505A;&#x5206;&#x522B;&#x5904;&#x7406;&#x3002;&#x5982;&#xFF1A; 12345if(Build.VERION.SDK_INT&lt;23){ ... // &#x8C03;&#x7528;&#x66F4;&#x4F4E;level&#x7684;API&#xFF0C;&#x5C3D;&#x91CF;&#x8FBE;&#x6210;&#x540C;&#x6837;&#x7684;&#x6548;&#x679C;}else{ ... // &#x8C03;&#x7528;23&#x7684;API} &#x5176;&#x4E2D;Build.VERION.SDK_INT&#x5C31;&#x662F;&#x5F53;&#x524D;&#x8BBE;&#x5907;&#x7684;Android&#x7248;&#x672C;&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记五]]></title>
    <url>%2F2017%2F10%2F16%2F2017%2F1016AndroidProgrammingBNRG05%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x6DFB;&#x52A0;&#x4E86;&#x65B0;&#x7684;Activity&#xFF0C;&#x7528;&#x4E8E;&#x663E;&#x793A;&#x4F5C;&#x5F0A;&#x754C;&#x9762;&#x3002;&#x7531;&#x539F;&#x6765;&#x7684;Activity&#x53EF;&#x4EE5;&#x8DF3;&#x8F6C;&#x5230;&#x65B0;&#x754C;&#x9762;&#xFF0C;&#x5E76;&#x5728;&#x4E24;&#x4E2A;Activity&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x4F20;&#x9012;&#x6570;&#x636E;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x6DFB;&#x52A0;Activity&#xFF0C;&#x5E76;&#x4E3A;&#x4E4B;&#x751F;&#x6210;&#x5E03;&#x5C40; - &#x4ECE;&#x4E00;&#x4E2A;Activity&#x8DF3;&#x8F6C;&#x5230;&#x53E6;&#x4E00;&#x4E2A;Activity - &#x5728;&#x4E24;&#x4E2A;Activity&#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E; &#x600E;&#x6837;&#x6DFB;&#x52A0;Activity &#x5728;Android&#x89C6;&#x56FE;&#x4E2D;&#xFF0C;&#x627E;&#x5230;java/ &#x53F3;&#x952E; &gt; New &gt; Activity &gt; Empty Activity&#xFF1A; &#x5728;&#x5F39;&#x51FA;&#x7684;&#x9762;&#x677F;&#x4E2D;&#x586B;&#x5199;Activity Name &#x70B9;&#x51FB;&#x5B8C;&#x6210;&#x3002;&#x8BE5;&#x6B65;&#x9AA4;&#xFF1A; 1. &#x751F;&#x6210;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A;activity_cheat.xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#xFF0C;CheatActivity.java&#x4EE3;&#x7801;&#x6587;&#x4EF6; 2. &#x4FEE;&#x6539;AndroidManifest.xml&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x5176;&#x4E2D;&#x6DFB;&#x52A0;CheatActivity &#x6DFB;&#x52A0;Activity&#x540E;AndroidManifest&#x6587;&#x4EF6;&#x7684;&#x6539;&#x52A8; 12345678910111213&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.palanceli.ime.bnrg01&quot;&gt; &lt;application ... android:theme=&quot;@style/AppTheme&quot;&gt; &lt;activity android:name=&quot;.QuizActivity&quot;&gt; ... &lt;/activity&gt; &lt;!-- &#x4F1A;&#x5728;&#x8FD9;&#x91CC;&#x63D2;&#x5165;&#x65B0;activity --&gt; &lt;activity android:name=&quot;.CheatActivity&quot;&gt;&lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; activity&#x7684;&#x5FC5;&#x586B;&#x5C5E;&#x6027;&#x662F;android:name&#xFF0C;&#x5176;&#x503C;&#x7531;.&#x5F00;&#x5934;&#xFF0C;&#x8868;&#x793A;&#x5B83;&#x7684;&#x5305;&#x540D;&#x548C;manifest&#x7684;package&#x76F8;&#x540C;&#x3002; &#x5982;&#x4F55;&#x9884;&#x89C8;&#x6A2A;&#x7AD6;&#x5C4F;&#x5E03;&#x5C40; &#x627E;&#x5230;&#x9884;&#x89C8;&#x89C6;&#x56FE;&#x5DE6;&#x4E0A;&#x89D2;&#x7684;&#x5C4F;&#x5E55;&#x65CB;&#x8F6C;&#x6807;&#x5FD7;&#xFF0C;&#x70B9;&#x5F00;&#x9009;&#x62E9;Portrait&#x6216;Landscape&#xFF1A; tools:text&#x5C5E;&#x6027; &#x5728;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;widget&#x6DFB;&#x52A0;tools&#x5C5E;&#x6027;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8986;&#x76D6;widget&#x7684;&#x4EFB;&#x4F55;&#x5C5E;&#x6027;&#xFF0C;&#x4F7F;&#x5F97;widget&#x5728;Android Studio&#x9884;&#x89C8;&#x65F6;&#x7684;&#x6027;&#x8D28;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1234567&lt;TextView android:id=&quot;@+id/answer_text_view&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:padding=&quot;24dp&quot; tools:text=&quot;Answer&quot; /&gt; &#x8BE5;TextView&#x7684;&#x5185;&#x5BB9;&#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x8BBE;&#x7F6E;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4F1A;&#x7ED9;&#x5B83;&#x7684;android:text&#x5B9A;&#x4E49;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;tools:text&#xFF0C;&#x8FD9;&#x6837;&#x5728;Android Studio&#x9884;&#x89C8;&#x65F6;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x4E3A;Answer&#x3002; &#x542F;&#x52A8;&#x4E00;&#x4E2A;Activity &#x901A;&#x8FC7;&#x8C03;&#x7528;Activity&#x7684;startActivity(Intent intent)&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x542F;&#x52A8;&#x53E6;&#x4E00;&#x4E2A;Activity&#xFF1A; &#x8FD9;&#x4E2A;&#x8C03;&#x7528;&#x4F1A;&#x5C06;&#x542F;&#x52A8;Activity&#x7684;&#x8BF7;&#x6C42;&#x53D1;&#x9001;&#x5230;ActivityManager&#xFF0C;&#x7531;ActivityManager&#x521B;&#x5EFA;&#x65B0;Activity&#x5E76;&#x8C03;&#x7528;&#x5B83;&#x7684;onCreate(Bundle)&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5728;&#x4E4B;&#x524D;&#x5206;&#x6790;&#x5B89;&#x5353;&#x6E90;&#x7801;&#x7684;&#x65F6;&#x5019;&#x5DF2;&#x7ECF;&#x8D70;&#x67E5;&#x8FC7;&#x4E86;&#x3002;&#x7ED3;&#x5408;&#x672C;&#x7AE0;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567mCheatButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ Intent intent = new Intent(QuizActivity.this, CheatActivity.class); startActivity(intent); // &#x542F;&#x52A8;intent&#x4E2D;&#x6307;&#x5B9A;&#x7684;Activity }}); Intent&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x539F;&#x578B;&#x4E3A;&#xFF1A; public Intent(Context packageContext, Class&lt;?&gt; cls)&#xFF0C;&#x5176;&#x4E2D;Context&#x544A;&#x8BC9;ActivityManager&#x5728;&#x54EA;&#x4E2A;package&#x4E2D;&#x627E;&#x5230;Activity&#x7C7B;&#xFF1B;cls&#x6307;&#x5B9A;&#x8BE5;Activity&#x7C7B;&#x3002; &#x542F;&#x52A8;&#x672C;&#x5E94;&#x7528;&#x5185;&#x7684;Activity&#x7684;&#x8981;&#x6C42; &#x5728;&#x542F;&#x52A8;activity&#x4E4B;&#x524D;&#xFF0C;ActivityManager&#x4F1A;&#x68C0;&#x67E5;&#x5305;&#x91CC;&#x7684;manifest&#x6587;&#x4EF6;&#xFF0C;&#x662F;&#x5426;&#x58F0;&#x660E;&#x4E86;&#x8BE5;&#x7C7B;&#x540D;&#x7684;activity&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x58F0;&#x660E;&#xFF0C;&#x4F1A;&#x629B;&#x51FA;ActivityNotFoundException&#x5F02;&#x5E38;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x8BA9;&#x4F60;&#x7684;app&#x542F;&#x52A8;&#x67D0;&#x4E2A;activity&#xFF0C;&#x5FC5;&#x987B;&#x5728;manifest&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x5B83;&#x3002; &#x5173;&#x4E8E;&#x663E;&#x5F0F;&#x548C;&#x9690;&#x5F0F;Intent&#xFF0C;&#x672C;&#x8282;&#x53EA;&#x662F;&#x63D0;&#x4E86;&#x4E00;&#x7B14;&#x3002;&#x663E;&#x5F0F;Intent&#x7528;&#x4E8E;&#x542F;&#x52A8;&#x5E94;&#x7528;&#x5185;&#x7684;activity&#xFF0C;&#x9690;&#x5F0F;Intent&#x5219;&#x7528;&#x4E8E;&#x8DE8;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;Activity&#xFF0C;&#x5728;&#x4EE5;&#x540E;&#x7684;&#x7AE0;&#x8282;&#x4F1A;&#x6709;&#x4ECB;&#x7ECD;&#x3002; &#x4E2A;&#x4EBA;&#x89C9;&#x5F97;&#x8FD9;&#x672C;&#x4E66;&#x5199;&#x5F97;&#x592A;&#x6563;&#xFF0C;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#x6216;&#x4E3B;&#x9898;&#x5F80;&#x5F80;&#x63D0;&#x51FA;&#x6765;&#x800C;&#x4E0D;&#x8BB2;&#x900F;&#xFF0C;&#x9700;&#x8981;&#x62C9;&#x626F;&#x5230;&#x540E;&#x9762;&#x518D;&#x6765;&#x8865;&#x5145;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x6BD4;iOS&#x884C;&#x6587;&#x8981;&#x5DEE;&#x3002; &#x5982;&#x4F55;&#x5728;Activity&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E; &#x5305;&#x542B;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;1&#x3001;&#x5411;&#x542F;&#x52A8;&#x7684;Activity&#x4F20;&#x9012;&#x6570;&#x636E;&#xFF1B;2&#x3001;&#x542F;&#x52A8;&#x7684;Activity&#x5411;&#x53D1;&#x8D77;&#x8005;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x3002; &#x5411;&#x542F;&#x52A8;&#x7684;Activity&#x4F20;&#x9012;&#x6570;&#x636E; &#x4E00;&#x3001;&#x53D1;&#x8D77;&#x65B9;&#x8C03;&#x7528;Intent::putExtra(...)&#xFF0C;&#x5411;Intent&#x4E2D;&#x5199;&#x5165;Extra&#x3002;Extra&#x662F;&#x4E00;&#x4E2A;key-value&#x5BF9;&#xFF0C;&#x662F;&#x5728;Intent&#x4E2D;&#x5939;&#x5E26;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7528;&#x4E8E;&#x5728;Activity&#x95F4;&#x4F20;&#x9012;&#x3002; &#x672C;&#x7AE0;&#x4E2D;&#x7684;&#x4F8B;&#x5B50;&#x662F;QuizActivity&#x542F;&#x52A8;&#x4E86;CheatActivity&#xFF0C;&#x672C;&#x5E94;&#x5728;QuizActivity&#x4E2D;&#x521B;&#x5EFA;Intent&#xFF0C;&#x5199;&#x5165;Extra&#xFF0C;&#x518D;&#x4F20;&#x5165;startActivity(Intent)&#xFF0C;&#x4F46;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x7684;&#x590D;&#x7528;&#x6027;&#x4E0D;&#x597D;&#xFF0C;&#x56E0;&#x4E3A;&#x53EF;&#x80FD;&#x8FD8;&#x6709;&#x522B;&#x7684;Activity&#x542F;&#x52A8;CheatActivity&#xFF0C;&#x90A3;&#x5C31;&#x9700;&#x8981;&#x5728;&#x522B;&#x7684;Activity&#x91CC;&#x518D;&#x5199;&#x4E00;&#x904D;&#x540C;&#x6837;&#x7684;&#x4EE3;&#x7801;&#x54AF;&#xFF1F; &#x6BD4;&#x8F83;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x628A;Intent&#x7684;&#x521B;&#x5EFA;&#x4F5C;&#x4E3A;&#x9759;&#x6001;&#x51FD;&#x6570;&#x5C01;&#x88C5;&#x5230;CheatActivity&#x91CC;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#x3002; &#x5728;&#x672C;&#x8282;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#xFF0C;QuizActivity&#x4F1A;&#x544A;&#x8BC9;CheatActivity&#x5F53;&#x524D;&#x95EE;&#x9898;&#x7684;&#x7B54;&#x6848;&#x662F;True&#x8FD8;&#x662F;False&#xFF0C;&#x7531;CheatActivity&#x8D1F;&#x8D23;&#x628A;&#x8BE5;&#x7ED3;&#x679C;&#x663E;&#x793A;&#x51FA;&#x6765;&#x3002;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5728;Intent&#x4E2D;&#x4F20;&#x5165;answerIsTrue&#x53C2;&#x6570;&#x3002; 12345678910public class CheatActivity extends AppCompatActivity { private static final String EXTRA_ANSWER_IS_TURE = &quot;com.palanceli.ime.bnrg01.answer_is_true&quot;; ... // &#x6839;&#x636E;&#x53C2;&#x6570;&#x521B;&#x5EFA;Intent public static Intent newIntent(Context packageContext, boolean answerIsTrue){ Intent intent = new Intent(packageContext, CheatActivity.class); intent.putExtra(EXTRA_ANSWER_IS_TURE, answerIsTrue); return intent; }} &#x5728;QuizActivity&#x542F;&#x52A8;CheatActivity&#x65F6;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF1A; 1234567891011121314151617181920public class QuizActivity extends AppCompatActivity { ... private Button mCheatButton; ... @Override protected void onCreate(Bundle savedInstanceState) { ... mCheatButton = (Button)findViewById(R.id.cheat_button); mCheatButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ // &#x521B;&#x5EFA;Intent&#xFF0C;&#x542F;&#x52A8;Activity boolean answerIsTrue = mQuestionBank[mCurrentIndex].isAnswerTrue(); Intent intent = CheatActivity.newIntent(QuizActivity.this, answerIsTrue); startActivity(intent); } }); } updateQuestion();} &#x4E8C;&#x3001;&#x88AB;&#x542F;&#x52A8;&#x7684;Activity&#x5728;&#x5176;onCreate(Bundle)&#x4E2D;&#x901A;&#x8FC7;Intent::getxxxExtra(...)&#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112public class CheatActivity extends AppCompatActivity { private static final String EXTRA_ANSWER_IS_TURE = &quot;com.palanceli.ime.bnrg01.answer_is_true&quot;; private boolean mAnswerIsTrue; ... @Override protected void onCreate(Bundle savedInstanceState) { ... mAnswerIsTrue = getIntent().getBooleanExtra(EXTRA_ANSWER_IS_TURE, false); ... } ...} Activity::getIntent()&#x8FD4;&#x56DE;&#x8BE5;activity&#x542F;&#x52A8;&#x65F6;&#x4F20;&#x5165;&#x7684;Intent&#x3002; &#x4ECE;&#x542F;&#x52A8;&#x7684;Activity&#x8FD4;&#x56DE;&#x6570;&#x636E; &#x5982;&#x679C;&#x9700;&#x8981;&#x4ECE;&#x542F;&#x52A8;&#x7684;Activity&#x4E2D;&#x83B7;&#x53D6;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x5982;&#x4E0B;&#x6B65;&#x9AA4;&#xFF1A; &#x4E00;&#x3001;&#x542F;&#x52A8;Activity&#x65F6;&#x8C03;&#x7528;Activity&#x7684;&#x6210;&#x5458;&#x51FD;&#x6570; public void startActivityForResult(Intent intent, int requestCode) &#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x542B;&#x4E49;&#x540C;public void startActivityForResult(Intent intent)&#x7248;&#x672C;&#xFF0C; &#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x7ED9;&#x88AB;&#x542F;&#x52A8;&#x7684;activity&#x7ED1;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;id&#xFF0C;&#x8FD9;&#x5728;Activity&#x542F;&#x52A8;&#x591A;&#x4E2A;activity&#x65F6;&#x6BD4;&#x8F83;&#x6709;&#x7528;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;requestCode&#x6765;&#x533A;&#x5206;&#x8FD4;&#x56DE;&#x503C;&#x6765;&#x81EA;&#x54EA;&#x4E2A;activity &#x4E8C;&#x3001;&#x5728;&#x88AB;&#x542F;&#x52A8;&#x7684;activity&#x7ED3;&#x675F;&#x65F6;&#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#x6709;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#xFF1A; public final void setResult(int resultCode) public final void setResult(int resultCode, Intent data) &#x7B2C;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x5982;Activity.RESULT_OK&#x6216;Activity.RESULT_CANCELED&#x6216;&#x57FA;&#x4E8E;Activity.RESULT_FIRST_USER&#x7684;&#x7D2F;&#x52A0;&#x503C;&#xFF1B; &#x7B2C;&#x4E8C;&#x4E2A;&#x7248;&#x672C;&#x8FD8;&#x53EF;&#x4EE5;&#x8FFD;&#x52A0;&#x4E00;&#x4E2A;Intent&#x53C2;&#x6570;&#x3002; &#x4E09;&#x3001;&#x88AB;&#x542F;&#x52A8;&#x7684;Activity&#x901A;&#x8FC7;Back&#x8FD4;&#x56DE;&#x540E;&#xFF0C;&#x7236;Activity&#x4F1A;&#x6536;&#x5230;&#x56DE;&#x8C03;&#xFF1A; protected void onActivityResult(int requestCode, int resultCode, Intent data) &#x5176;&#x4E2D;requestCode&#x662F;&#x5728;&#x542F;&#x52A8;&#x65F6;&#x4F20;&#x5165;&#x7684;requestCode&#xFF0C;&#x540E;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5B50;Activity&#x8C03;&#x7528;setResult(...)&#x65F6;&#x4F20;&#x5165;&#x7684;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#x8FD4;&#x56DE;&#x503C;&#x4FE1;&#x606F;&#x3002; &#x4E0B;&#x56FE;&#x7ED9;&#x51FA;&#x4E86;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x7684;&#x65F6;&#x5E8F;&#xFF1A; &#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; &#x4E00;&#x3001;&#x5728;QuizActivity.java&#x4E2D;&#x542F;&#x52A8;activity&#x65F6;&#x8981;&#x6C42;&#x6709;&#x8FD4;&#x56DE;&#x503C; 123456789101112131415161718192021public class QuizActivity extends AppCompatActivity { ... private static final int REQUEST_CODE_CHEAT = 0; // &#x5B9A;&#x4E49;requestCode private boolean mIsCheater; @Override protected void onCreate(Bundle savedInstanceState) { ... mCheatButton = (Button)findViewById(R.id.cheat_button); mCheatButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ boolean answerIsTrue = mQuestionBank[mCurrentIndex].isAnswerTrue(); Intent intent = CheatActivity.newIntent(QuizActivity.this, answerIsTrue); // &#x542F;&#x52A8;Activity&#xFF0C;&#x8981;&#x6C42;&#x8FD4;&#x56DE;&#x503C; startActivityForResult(intent, REQUEST_CODE_CHEAT); } }); updateQuestion(); } ...} &#x4E8C;&#x3001;&#x5728;CheatActivity.java&#x4E2D;&#x56DE;&#x4F20;&#x8FD4;&#x56DE;&#x503C; 12345678910111213141516171819202122232425262728293031public class CheatActivity extends AppCompatActivity { ... private static final String EXTRA_ANSWER_SHOW = &quot;com.palanceli.ime.bnrg01.answer_show&quot;; ... @Override protected void onCreate(Bundle savedInstanceState) { ... mShowAnswerButton = (Button)findViewById(R.id.show_answer_button); mShowAnswerButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ if(mAnswerIsTrue) mAnswerTextView.setText(R.string.true_button); else mAnswerTextView.setText(R.string.false_button); setAnswerShowResult(true); // &#x751F;&#x6210;&#x56DE;&#x4F20;&#x6570;&#x636E; } }); } private void setAnswerShowResult(boolean isAnswerShown){ // &#x7EC4;&#x7EC7;&#x56DE;&#x4F20;Intent&#x6570;&#x636E; Intent data = new Intent(); data.putExtra(EXTRA_ANSWER_SHOW, isAnswerShown); setResult(RESULT_OK, data); } ... // &#x89E3;&#x6790;&#x56DE;&#x4F20;&#x6570;&#x636E; public static boolean wasAnswerShown(Intent result){ return result.getBooleanExtra(EXTRA_ANSWER_SHOW, false); }} &#x548C;&#x201C;&#x5411;&#x542F;&#x52A8;&#x7684;activity&#x4F20;&#x9012;&#x6570;&#x636E;&#x201D;&#x7C7B;&#x4F3C;&#xFF0C;&#x6570;&#x636E;&#x7684;&#x7EC4;&#x7EC7;&#x5728;CheatActivity&#x4E2D;&#x5B8C;&#x6210;&#xFF0C;&#x8FD9;&#x6837;&#x4FBF;&#x4E8E;&#x4EE3;&#x7801;&#x590D;&#x7528;&#xFF0C;&#x672A;&#x6765;&#x65B9;&#x4FBF;CheatActivity&#x5411;&#x66F4;&#x591A;&#x7684;Activity&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x3002;wasAnswerShown(...)&#x8D1F;&#x8D23;&#x89E3;&#x6790;Intent&#x3002; &#x4E09;&#x3001;&#x542F;&#x52A8;&#x65B9;QuizActivity.java&#x63A5;&#x6536;&#x56DE;&#x4F20;&#x6570;&#x636E; 12345678910111213141516171819202122public class QuizActivity extends AppCompatActivity { ... private static final int REQUEST_CODE_CHEAT = 0; // &#x5B9A;&#x4E49;requestCode private boolean mIsCheater; ... @Override public void onActivityResult(int requestCode, int resultCode, Intent data){ if(resultCode != RESULT_OK) return; if(requestCode == REQUEST_CODE_CHEAT){ if(data == null) return; // &#x5982;&#x679C;&#x6709;&#x56DE;&#x4F20;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x63A5;&#x6536;&#x89E3;&#x6790; mIsCheater = CheatActivity.wasAnswerShown(data); if(mIsCheater) Log.d(TAG, &quot;mIsCheater=1&quot;); else Log.d(TAG, &quot;mIsCheater=0&quot;); } } ...} &#x70B9;&#x51FB;&#x4E86;app&#x56FE;&#x6807;&#x540E;&#xFF0C;&#x7CFB;&#x7EDF;&#x505A;&#x4E86;&#x4EC0;&#x4E48; &#x4E4B;&#x524D;&#x5728;&#x5206;&#x6790;Android&#x6E90;&#x7801;&#x65F6;&#x5DF2;&#x7ECF;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x8FC7;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;app&#x56FE;&#x6807;&#x540E;&#xFF0C;OS&#x5E76;&#x4E0D;&#x76F4;&#x63A5;&#x542F;&#x52A8;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#xFF0C;&#x800C;&#x662F;&#x542F;&#x52A8;&#x8BE5;&#x5E94;&#x7528;&#x7684;launcher activity&#x3002;&#x5728;AndroidManifest.xml&#x4E2D;&#x6709;&#x5B9A;&#x4E49;&#x8BE5;app&#x7684;launcher activity&#xFF1A; 12345678910111213...&lt;manifest ...&gt; &lt;application ...&gt; &lt;activity android:name=&quot;.QuizActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;!-- launcher activity --&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; ... &lt;/application&gt;&lt;/manifest&gt; &#x542F;&#x52A8;&#x8BE5;Activity&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x4E0A;&#x9762;&#x7684;&#x6309;&#x94AE;&#x518D;&#x542F;&#x52A8;&#x65B0;&#x7684;Activity&#x3002;&#x6BCF;&#x4E00;&#x4E2A;activity&#xFF0C;&#x70B9;&#x51FB;Back&#x540E;&#x90FD;&#x4F1A;&#x88AB;Destroy&#x3002;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;activity&#x7684;&#x542F;&#x52A8;&#x548C;&#x9000;&#x51FA;&#x662F;&#x4E00;&#x4E2A;&#x8FDB;&#x6808;/&#x51FA;&#x6808;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x5E94;&#x7528;&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x4E2A;&#x6808;&#x3002;&#x56E0;&#x6B64;&#x5F53;&#x5728;&#x684C;&#x9762;&#x4E0A;&#x542F;&#x52A8;app&#xFF0C;&#x518D;back&#x540E;&#x9732;&#x51FA;&#x7684;&#x662F;&#x684C;&#x9762;&#xFF1B;&#x5728;launcher&#x91CC;&#x542F;&#x52A8;app&#xFF0C;&#x518D;back&#x540E;&#x9732;&#x51FA;&#x7684;&#x662F;launcher&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记四]]></title>
    <url>%2F2017%2F10%2F16%2F2017%2F1016AndroidProgrammingBNRG04%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x4ECB;&#x7ECD;&#x4E86;Android&#x7F16;&#x7A0B;&#x65F6;&#x5E38;&#x7528;&#x7684;&#x8C03;&#x8BD5;&#x65B9;&#x6CD5;&#xFF0C;&#x672C;&#x7AE0;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x8981;&#x8BB0;&#x5F55;&#x7684;&#x7B14;&#x8BB0;&#xFF0C;&#x7B80;&#x5355;&#x5199;&#x51E0;&#x7B14;&#x5427;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x5206;&#x6790;Exception&#x548C;&#x8C03;&#x7528;&#x6808;&#x4FE1;&#x606F; - &#x4F7F;&#x7528;log+Exception&#x6253;&#x5370;log&#x548C;&#x8C03;&#x7528;&#x6808;&#x4FE1;&#x606F; - &#x65AD;&#x70B9;&#x8C03;&#x8BD5; - Android Lint # &#x5F00;&#x542F;Android Lint Android Lint&#x662F;Android Studio&#x81EA;&#x5E26;&#x7684;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x5206;&#x6790;&#x5DE5;&#x5177;&#xFF0C;&#x70B9;&#x51FB;&#x83DC;&#x5355; Analyze &gt; Inspect Code...&#x5373;&#x53EF;&#x542F;&#x52A8;&#x3002; &#x5F53;Android Studio&#x51FA;&#x73B0;&#x4E00;&#x4E9B;&#x548C;&#x8D44;&#x6E90;&#x76F8;&#x5173;&#x5947;&#x602A;&#x9519;&#x8BEF;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5; &#x6709;&#x65F6;&#x5019;&#x5F53;&#x6DFB;&#x52A0;&#x6216;&#x5220;&#x9664;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;Android Studio&#x4F1A;&#x62A5;&#x4E00;&#x4E9B;&#x5947;&#x602A;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5728;&#x786E;&#x8BA4;&#x786E;&#x5B9E;&#x4EE3;&#x7801;&#x6CA1;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x8BD5;&#x8BD5;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x3002; - R.java&#x53EF;&#x80FD;&#x8FD8;&#x6CA1;&#x6709;&#x4E3A;&#x67D0;&#x4E2A;&#x8D44;&#x6E90;&#x751F;&#x6210;&#x4EE3;&#x7801;&#xFF0C;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x8D44;&#x6E90;&#x6240;&#x5728;xml&#x6587;&#x4EF6;&#xFF0C;&#x91CD;&#x65B0;&#x4FDD;&#x5B58;&#xFF0C;&#x8FD9;&#x4F1A;&#x89E6;&#x53D1;R.java&#x91CD;&#x65B0;&#x4E3A;&#x5B83;&#x751F;&#x6210;&#x4EE3;&#x7801;&#x3002; - Build &gt; Clean Project&#x4F1A;&#x89E6;&#x53D1;Android Studio&#x91CD;&#x5EFA;&#x9879;&#x76EE; - &#x5982;&#x679C;&#x4FEE;&#x6539;&#x4E86;build.gradle&#xFF0C;&#x9700;&#x8981;&#x66F4;&#x65B0;&#x9879;&#x76EE;&#x7684;&#x6784;&#x5EFA;&#x8BBE;&#x7F6E;&#xFF0C;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#x662F;Tools &gt; Android &gt; Sync Project with Gradle Files&#x3002; - &#x8FD0;&#x884C;Android Lint&#x3002;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记三]]></title>
    <url>%2F2017%2F10%2F16%2F2017%2F1016AndroidProgrammingBNRG03%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x89E3;&#x51B3;&#x4E86;&#x5F53;&#x5C4F;&#x5E55;&#x65CB;&#x8F6C;&#x65F6;&#xFF0C;&#x56E0;activity&#x88AB;&#x9500;&#x6BC1;&#x800C;&#x5BFC;&#x81F4;&#x7684;&#x6570;&#x636E;&#x4E22;&#x5931;&#x95EE;&#x9898;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x5373;&#x5173;&#x952E;&#x56DE;&#x8C03; - &#x5728;&#x4E0D;&#x540C;&#x60C5;&#x5883;&#x4E0B;&#xFF0C;&#x5F53;Activity&#x9000;&#x51FA;&#x65F6;&#xFF0C;&#x4FDD;&#x5B58;/&#x6062;&#x590D;&#x6570;&#x636E;&#x7684;&#x65B9;&#x6CD5; - &#x5728;&#x5C4F;&#x5E55;&#x65CB;&#x8F6C;&#x3001;&#x6309;&#x4E0B;Home&#x3001;&#x6309;&#x4E0B;Back&#x7B49;&#x60C5;&#x666F;&#x4E0B;&#xFF0C;Activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x7ECF;&#x5386;&#x4E86;&#x4EC0;&#x4E48; # Activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F; ## Activity&#x7684;&#x72B6;&#x6001;&#x8FC1;&#x79FB;&#x56FE; &#x5728;&#x67D0;&#x4E00;&#x65F6;&#x523B;&#xFF0C;&#x7CFB;&#x7EDF;&#x53EA;&#x6709;&#x4E00;&#x4E2A;Activity&#x53EF;&#x4EE5;&#x51FA;&#x4E8E;Resumed&#x72B6;&#x6001;&#x3002; &#x5728;onCreate(...)&#x4E2D;&#x7ECF;&#x5E38;&#x505A;&#x7684;&#x4E8B;&#x60C5; &#x5728;setContentView(...)&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x4ECE;xml&#x8BFB;&#x53D6;&#x5E76;&#x521B;&#x5EFA;&#x63A7;&#x4EF6;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x5448;&#x73B0;&#x5728;&#x5C4F;&#x5E55;&#x4E0A; &#x63D0;&#x9886;&#x524D;&#x4E00;&#x6B65;&#x521B;&#x5EFA;&#x7684;&#x63A7;&#x4EF6; &#x4E3A;&#x63A7;&#x4EF6;&#x8BBE;&#x7F6E;listener&#xFF0C;&#x4EE5;&#x54CD;&#x5E94;&#x4EA4;&#x4E92; &#x8FDE;&#x63A5;model &#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x7684;&#x57FA;&#x7C7B;&#x51FD;&#x6570;&#x90FD;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; onCreate(...) onStart() onResume() onPause() onStop() onDestroy() &#x8FD9;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#x79F0;&#x4E3A;Activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x4E0D;&#x5E94;&#x7531;&#x5F00;&#x53D1;&#x8005;&#x8C03;&#x7528;&#xFF0C;&#x800C;&#x662F;&#x7531;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x8C03;&#x7528;&#x65F6;&#x673A;&#x5728;&#x524D;&#x9762;&#x7684;&#x72B6;&#x6001;&#x8FC1;&#x79FB;&#x56FE;&#x4E2D;&#x6807;&#x51FA;&#x3002;&#x5728;&#x5B9E;&#x73B0;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x8981;&#x9996;&#x5148;&#x8C03;&#x7528;&#x57FA;&#x7C7B;&#x7684;&#x540C;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#xFF1A; 1234@Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); ...} &#x8FD9;&#x4E9B;&#x57FA;&#x7C7B;&#x7684;&#x540C;&#x540D;&#x51FD;&#x6570;&#x90FD;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; Back&#x548C;Home&#x7684;&#x4E0D;&#x540C;&#x542B;&#x4E49; Android&#x624B;&#x673A;&#x5E95;&#x90E8;&#x4E09;&#x4E2A;&#x6309;&#x94AE;&#xFF1A;&#x25C1; &#x25CB; &#x25A1; &#x7684;&#x540D;&#x79F0;&#x5206;&#x522B;&#x4E3A;Back&#x3001;Home&#x3001;Recent&#x3002;Back&#x548C;Home&#x90FD;&#x4F1A;&#x8BA9;&#x5F53;&#x524D;&#x7684;activity&#x9000;&#x51FA;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x7684;&#x542B;&#x4E49;&#x548C;&#x5177;&#x4F53;&#x6267;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002; Back&#x7684;&#x542B;&#x4E49;&#xFF1A;&#x8BE5;activity&#x7684;&#x5DE5;&#x4F5C;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#xFF0C;&#x6211;&#x4E0D;&#x518D;&#x9700;&#x8981;&#x5B83;&#x4E86;&#x3002;&#x5B83;&#x4F1A;&#x5BFC;&#x81F4;onPause()&#x3001;onStop()&#x3001;onDestroy()&#x56DE;&#x8C03;&#xFF0C;&#x8BA9;activity&#x8FDB;&#x5165;nonexistent&#x72B6;&#x6001;&#xFF0C;&#x5B83;&#x88AB;&#x4ECE;&#x5185;&#x5B58;&#x4E2D;&#x6E05;&#x7406;&#x6389;&#x4E86;&#x3002; Home&#x7684;&#x542B;&#x4E49;&#xFF1A;&#x6211;&#x8981;&#x4E34;&#x65F6;&#x8F6C;&#x5230;&#x522B;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5F88;&#x5FEB;&#x8FD8;&#x4F1A;&#x56DE;&#x6765;&#x3002;&#x5B83;&#x4F1A;&#x5BFC;&#x81F4;onPause()&#x3001;onStop()&#x56DE;&#x8C03;&#xFF0C;&#x8BA9;activity&#x8FDB;&#x5165;Stopped&#x72B6;&#x6001;&#xFF0C;&#x5B83;&#x8FD8;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002; &#x5F53;activity&#x5904;&#x4E8E;paused&#x72B6;&#x6001;&#x65F6;&#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x90E8;&#x5206;&#x53EF;&#x89C1;&#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5168;&#x90E8;&#x53EF;&#x89C1;&#xFF1F; &#x5F53;&#x4E00;&#x4E2A;&#x80CC;&#x666F;&#x900F;&#x660E;&#x7684;activity&#x6216;&#x8005;&#x5C3A;&#x5BF8;&#x6BD4;&#x5C4F;&#x5E55;&#x5C0F;&#x7684;activity&#x542F;&#x52A8;&#x6210;&#x4E3A;&#x9876;&#x5C42;activity&#x65F6;&#xFF0C;&#x539F;&#x5148;&#x7684;&#x9876;&#x5C42;activity&#x5C31;&#x4F1A;&#x5904;&#x4E8E;paused&#x5E76;&#x4E14;&#x90E8;&#x5206;&#x53EF;&#x89C1;&#x3002; &#x5728;&#x591A;&#x7A97;&#x53E3;&#x6A21;&#x5F0F;&#x4E0B;&#xFF08;Android 6.0&#x53CA;&#x4EE5;&#x540E;&#x7248;&#x672C;&#x652F;&#x6301;&#xFF09;&#xFF0C;&#x5F53;&#x7528;&#x6237;&#x548C;&#x5176;&#x5B83;&#x7A97;&#x53E3;&#x4E2D;&#x7684;activity&#x4EA4;&#x4E92;&#x5F0F;&#xFF0C;&#x539F;&#x5148;&#x7684;activity&#x5C31;&#x5904;&#x4E8E;paused&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x4E14;&#x5168;&#x90E8;&#x53EF;&#x89C1;&#x3002; &#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x8FD9;&#x4E9B;&#x6548;&#x679C;&#xFF1F; &#x65CB;&#x8F6C;&#x5C4F;&#x5E55;&#x4F1A;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#xFF1F; &#x5F53;&#x5C4F;&#x5E55;&#x53D1;&#x751F;&#x65CB;&#x8F6C;&#xFF0C;&#x901A;&#x8FC7;log&#x4F1A;&#x53D1;&#x73B0;onPause()&#x3001;onStop()&#x3001;onDestroy()&#x3001;onCreate()&#x3001;oonStart()&#x3001;onResume()&#x88AB;&#x8C03;&#x7528;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;activity&#x88AB;&#x5148;&#x9500;&#x6BC1;&#x518D;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x4E86;&#xFF01;&#x53EA;&#x662F;&#x65CB;&#x8F6C;&#x4E00;&#x4E0B;&#x5C4F;&#x5E55;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x5927;&#x52A8;&#x9759;&#x5462;&#xFF1F; &#x5F53;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x66F4;&#x9002;&#x5408;&#x65B0;&#x914D;&#x7F6E;&#x7684;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#xFF0C;&#x56E0;&#x6B64;Android&#x4F1A;&#x9500;&#x6BC1;&#x6389;activity&#xFF0C;&#x5BFB;&#x627E;&#x66F4;&#x9002;&#x5408;&#x65B0;&#x7684;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x91CD;&#x5EFA;activity&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#xFF1F; &#x8BBE;&#x5907;&#x914D;&#x7F6E;&#xFF08;device configuration&#xFF09;&#x662F;&#x63CF;&#x8FF0;&#x8BBE;&#x5907;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x7684;&#x4E00;&#x5957;&#x53C2;&#x6570;&#xFF0C;&#x5305;&#x62EC;&#x5C4F;&#x5E55;&#x65B9;&#x5411;&#x3001;&#x5C4F;&#x5E55;&#x5BC6;&#x5EA6;&#x3001;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#x3001;&#x952E;&#x76D8;&#x7C7B;&#x578B;&#x3001;dock mode&#x3001;&#x8BED;&#x8A00;&#x7B49;&#x7B49;&#x3002;&#x6709;&#x4E9B;&#x53C2;&#x6570;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x5C4F;&#x5E55;&#x5BC6;&#x5EA6;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x662F;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x5C4F;&#x5E55;&#x65B9;&#x5411;&#x3002;&#x5F53;&#x8FD9;&#x7C7B;&#x53EF;&#x53D8;&#x7684;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;Android&#x5C31;&#x4F1A;&#x91CD;&#x5EFA;&#x5F53;&#x524D;&#x7684;activity&#x3002; &#x600E;&#x4E48;&#x521B;&#x5EFA;&#x6A2A;&#x5C4F;&#x5E03;&#x5C40;&#xFF1F; &#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7684;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x653E;&#x5728;res/layout&#x4E0B;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;res/layout-land&#x6216;res/layout-port&#x3002; -land &#x540E;&#x7F00;&#x548C;-?dpi&#x7C7B;&#x4F3C;&#xFF0C;&#x662F;&#x53E6;&#x4E00;&#x79CD;&#x4E0E;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x540E;&#x7F00;&#x3002;&#x53C2;&#x89C1;API&#x6307;&#x5357;&#x4E4B;&#x5E94;&#x7528;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x6240;&#x6709;&#x8BBE;&#x5907;&#x914D;&#x7F6E;&#x76F8;&#x5173;&#x7684;&#x540E;&#x7F00;&#x547D;&#x540D;&#x89C4;&#x8303;&#x3002; -land&#x8868;&#x793A;&#x6A2A;&#x5C4F;&#xFF1B;-port&#x8868;&#x793A;&#x7AD6;&#x5C4F;&#x3002;&#x5F53;&#x5C4F;&#x5E55;&#x65B9;&#x5411;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;Android&#x4F1A;&#x53BB;res/ayout-land&#x6216;res/layout-port&#x627E;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#x624D;&#x53BB;res/layout&#x3002; &#x5177;&#x4F53;&#x6B65;&#x9AA4;&#xFF1A; &#x5728;Project&#x7A97;&#x53E3;&#x4E2D;&#xFF0C;&#x627E;&#x5230;app/src/main/res&#xFF0C;&#x53F3;&#x952E; &gt; New &gt; Android resource directory&#xFF1A; &#x5728;&#x5F39;&#x51FA;&#x7684;&#x9762;&#x677F;&#x4E2D;&#x9009;&#x62E9;Available qualifiers=Orientation&#xFF0C;&#x586B;&#x5199;Directory name&#xFF0C;&#x9009;&#x62E9;Resource type=layout&#xFF1A; &#x70B9;&#x51FB;&gt;&gt;&#x6309;&#x94AE;&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x9762;&#x677F;&#x4E2D;&#x586B;&#x5199;Directory name&#xFF0C;&#x9009;&#x62E9;Screen orientation=Landscape&#xFF1A; &#x70B9;&#x51FB;OK&#xFF0C;Android Studio&#x4F1A;&#x521B;&#x5EFA;&#x76EE;&#x5F55;&#xFF1A;app/src/main/res/layout-land/ &#x5C06;res/layout&#x4E0B;&#x7684;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;res/layout-land&#x4E0B;&#xFF0C;&#x4FEE;&#x6539;&#x6A2A;&#x5C4F;&#x7248;&#x7684;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#xFF0C;&#x5373;&#x53EF;&#x5728;&#x6A2A;&#x5C4F;&#x53D1;&#x751F;&#x65F6;&#x751F;&#x6548;&#x3002; &#x65CB;&#x8F6C;&#x5C4F;&#x5E55;&#x65F6;&#xFF0C;&#x91CD;&#x5EFA;&#x524D;&#x4FDD;&#x5B58;&#x6570;&#x636E; &#x524D;&#x9762;&#x5DF2;&#x7ECF;&#x8BB2;&#x8FC7;&#xFF0C;&#x65CB;&#x8F6C;&#x5C4F;&#x5E55;&#x4F1A;&#x5BFC;&#x81F4;activity&#x91CD;&#x5EFA;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x4E1A;&#x52A1;&#x6570;&#x636E;&#x91CD;&#x7F6E;&#x3002;&#x4F8B;&#x5982;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x7B2C;2&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x65CB;&#x8F6C;&#x5C4F;&#x5E55;&#x540E;&#xFF0C;&#x53D8;&#x6210;&#x7B2C;1&#x4E2A;&#x4E86;&#x3002;&#x5FC5;&#x987B;&#x5728;&#x65CB;&#x8F6C;&#x5C4F;&#x5E55;&#x65F6;&#xFF0C;&#x91CD;&#x5EFA;activity&#x4E4B;&#x524D;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#xFF0C;&#x91CD;&#x5EFA;&#x540E;&#x6062;&#x590D;&#x6570;&#x636E;&#x3002; &#x53EF;&#x4EE5;&#x8986;&#x76D6;Activity::onSaveInstanceState(Bundle)&#x6765;&#x5B8C;&#x6210;&#x8BE5;&#x4EFB;&#x52A1;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x662F;&#x5728;onStop()&#x524D;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x3002;&#x672C;&#x7AE0;&#x4E2D;&#x7684;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#x3002; 12345678910111213141516171819202122...public class QuizActivity extends AppCompatActivity { ... private int mCurrentIndex = 0; private static final String TAG = &quot;QuizActivity&quot;; // &#x5B9A;&#x4E49;mCurrentIndex&#x4FDD;&#x5B58;&#x7684;key private static final String KEY_INDEX = &quot;index&quot;; @Override protected void onCreate(Bundle savedInstanceState) { ... if(savedInstanceState != null){ // &#x542F;&#x52A8;&#x65F6;&#x8BFB;&#x53D6; mCurrentIndex = savedInstanceState.getInt(KEY_INDEX, 0); } ... } ... @Override public void onSaveInstanceState(Bundle savedInstanceState){ ... // &#x9000;&#x51FA;&#x524D;&#x5199;&#x56DE; savedInstanceState.putInt(KEY_INDEX, mCurrentIndex); }} &#x901A;&#x8FC7;savedInstanceState&#x628A;&#x6570;&#x636E;&#x5199;&#x5230;&#x54EA;&#x4E86;&#xFF1F; &#x6CE8;&#x610F;&#xFF1A;onCreate(Bundle savedInstanceState)&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x8F6C;&#x5C4F;&#x5BFC;&#x81F4;activity&#x91CD;&#x5EFA;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x4F20;&#x5165;&#x8BE5;&#x53C2;&#x6570;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x4FDD;&#x5B58;&#x4E86;activity&#x91CD;&#x5EFA;&#x524D;&#x7684;&#x6570;&#x636E;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x901A;&#x8FC7;Back&#x6309;&#x94AE;&#x9000;&#x51FA;&#x5E94;&#x7528;&#xFF0C;&#x518D;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#x5E94;&#x7528;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x4E3A;null&#x3002;&#x8FD9;&#x7B26;&#x5408;Back&#x6309;&#x94AE;&#x7684;&#x5B9A;&#x4E49;&#x3002; activity&#x9000;&#x51FA;&#x524D;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x7B56;&#x7565; &#x5F53;&#x7CFB;&#x7EDF;&#x5176;&#x5B83;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x914D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x800C;&#x5BFC;&#x81F4;Activity&#x88AB;&#x91CD;&#x5EFA;&#x65F6;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;onSaveInstanceState(...)&#x6765;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#xFF1B;&#x5F53;&#x7528;&#x6237;&#x6682;&#x65F6;&#x5BFC;&#x822A;&#x5230;&#x5176;&#x5B83;&#x754C;&#x9762;&#xFF0C;Activity&#x88AB;&#x6682;&#x65F6;&#x6362;&#x5230;&#x540E;&#x53F0;&#xFF0C;&#x6B64;&#x65F6;&#x7CFB;&#x7EDF;&#x56DE;&#x6536;&#x5185;&#x5B58;&#x5BFC;&#x81F4;Activity&#x88AB;&#x9500;&#x6BC1;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x4E5F;&#x4F1A;&#x8C03;&#x7528;onSaveInstanceState(...)&#x51FD;&#x6570;&#x3002;&#x5F53;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x53D1;&#x751F;&#x65F6;&#xFF0C;Activity&#x8C03;&#x7528;&#x4E86;onSaveInstanceState(...)&#x51FD;&#x6570;&#x540E;&#x4F1A;&#x8FDB;&#x5165;Stashed&#x72B6;&#x6001;&#xFF1A; &#x5728;&#x51FD;&#x6570;onSaveInstanceState(...)&#x4E2D;&#xFF0C;&#x6570;&#x636E;&#x88AB;&#x4FDD;&#x5B58;&#x5230;Bundle&#x5BF9;&#x8C61;&#x4E2D;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x88AB;&#x7CFB;&#x7EDF;&#x4FDD;&#x5B58;&#x5230;Activity&#x7684;activity record&#x4E2D;&#x3002;&#x8FDB;&#x5165;Stashed&#x72B6;&#x6001;&#x540E;&#xFF0C;Activity&#x5C31;&#x88AB;&#x9500;&#x6BC1;&#x4E86;&#xFF0C;&#x4F46;&#x662F;activity record&#x4ECD;&#x7136;&#x5B58;&#x5728;&#xFF0C;&#x7CFB;&#x7EDF;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x590D;&#x6D3B;Activity&#x3002; &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;Activity&#x53EF;&#x80FD;&#x4E0D;&#x4F1A;&#x8C03;&#x7528;onDestroy()&#x51FD;&#x6570;&#x800C;&#x76F4;&#x63A5;&#x8FDB;&#x5165;Stashed&#x72B6;&#x6001;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;onDestroy()&#x4E2D;&#x5B8C;&#x6210;Activity&#x9000;&#x51FA;&#x65F6;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x662F;&#x4E0D;&#x53EF;&#x9760;&#x7684;&#xFF0C;&#x5E94;&#x5F53;&#x5728;onStop()&#x4E2D;&#x5B8C;&#x6210;&#x3002; &#x90A3;&#x4E48;onSaveInstanceState(...)&#x548C;onStop()&#x4F5C;&#x4E3A;&#x9000;&#x51FA;&#x65F6;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x7684;&#x65F6;&#x673A;&#x6709;&#x4EC0;&#x4E48;&#x5DEE;&#x522B;&#x5462;&#xFF1F;&#x901A;&#x5E38;onSaveInstanceState(...)&#x4FDD;&#x5B58;&#x7684;&#x662F;&#x5C0F;&#x7684;&#x77AC;&#x6001;&#x6570;&#x636E;&#xFF0C;&#x6BD4;&#x5982;&#x5F53;&#x524D;&#x6240;&#x5728;&#x754C;&#x9762;&#xFF1B;&#x540E;&#x8005;&#x4FDD;&#x5B58;&#x4E1A;&#x52A1;&#x76F8;&#x5173;&#x7684;&#x6C38;&#x4E45;&#x6027;&#x6570;&#x636E;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x6237;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x7F16;&#x8F91;&#x7684;&#x6587;&#x672C;&#x3002; activity record&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x6D88;&#x5931;&#xFF1F; activity record&#x6570;&#x636E;&#x53EA;&#x662F;&#x77AC;&#x6001;&#x4FE1;&#x606F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6C38;&#x4E45;&#x6570;&#x636E;&#xFF0C;&#x7CFB;&#x7EDF;&#x53EF;&#x80FD;&#x4F1A;&#x6E05;&#x9664;&#x8BE5;&#x6570;&#x636E;&#x3002;&#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;Back&#x6309;&#x94AE;&#xFF0C;&#x6216;&#x8005;&#x7CFB;&#x7EDF;&#x91CD;&#x542F;&#xFF0C;&#x90FD;&#x4F1A;&#x5BFC;&#x81F4;&#x8BE5;&#x6570;&#x636E;&#x88AB;&#x6E05;&#x9664;&#x3002; &#x7CFB;&#x7EDF;&#x56DE;&#x6536;&#x5185;&#x5B58;&#x7684;&#x673A;&#x5236; &#x5F53;&#x51FA;&#x73B0;&#x4F4E;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x56DE;&#x6536;&#x5185;&#x5B58;&#x7684;&#x5355;&#x4F4D;&#x4E0D;&#x662F;activity&#xFF0C;&#x800C;&#x662F;&#x6574;&#x4E2A;&#x8FDB;&#x7A0B;&#x3002;&#x62E5;&#x6709;&#x524D;&#x53F0;&#xFF08;resumed&#xFF09;activity&#x6216;&#x8005;&#x53EF;&#x89C1;&#xFF08;paused&#xFF09;activity&#x7684;&#x8FDB;&#x7A0B;&#x5177;&#x6709;&#x8F83;&#x9AD8;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x3002;&#x7CFB;&#x7EDF;&#x6E05;&#x7406;&#x8D44;&#x6E90;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x9009;&#x62E9;&#x4F4E;&#x4F18;&#x5148;&#x7EA7;&#x7684;&#x8FDB;&#x7A0B;&#x3002;&#x5BF9;&#x4E8E;&#x524D;&#x53F0;/&#x53EF;&#x89C1;&#x8FDB;&#x7A0B;&#xFF0C;&#x9664;&#x975E;&#x53D1;&#x751F;&#x4E86;&#x4E25;&#x91CD;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5426;&#x5219;&#x7CFB;&#x7EDF;&#x4E0D;&#x4F1A;&#x56DE;&#x6536;&#x5B83;&#x4EEC;&#x3002; &#x8BA9;&#x5E94;&#x7528;&#x9000;&#x51FA;&#x65F6;&#x5373;&#x9500;&#x6BC1; &#x9700;&#x8981;&#x5F00;&#x542F;&#x5F00;&#x53D1;&#x8005;&#x6A21;&#x5F0F;&#xFF1A;&#x8BBE;&#x7F6E; &gt; &#x6700;&#x4E0B;&#x9762;&#x7684;&#x5173;&#x4E8E; &gt; &#x7248;&#x672C;&#x53F7; &#x8FDE;&#x7EED;&#x70B9;&#x51FB;&#xFF1A; &#x8FDB;&#x5165;&#x5F00;&#x53D1;&#x8005;&#x9009;&#x9879;&#xFF0C;&#x627E;&#x5230;&#x201C;&#x4E0D;&#x4FDD;&#x7559;&#x6D3B;&#x52A8;&#x201D;&#xFF0C;&#x6253;&#x5F00;&#x3002;&#x8FD9;&#x6837;&#x5F53;&#x4F7F;&#x7528;Home&#x952E;&#x9000;&#x51FA;activity&#x65F6;&#x5C31;&#x548C;Back&#x4E00;&#x6837;&#x4E86;&#xFF1A; &#x8FD9;&#x4E2A;&#x9009;&#x9879;&#x7684;&#x7528;&#x5904;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x5927;&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x6A21;&#x62DF;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;Back&#x952E;&#x5373;&#x53EF;&#xFF0C;&#x5E73;&#x65F6;&#x5E94;&#x5173;&#x95ED;&#x8BE5;&#x9009;&#x9879;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4F1A;&#x62D6;&#x7D2F;&#x6027;&#x80FD;&#x3002; &#x5176;&#x5B83; &#x5173;&#x952E;&#x5B57;@Override&#x7684;&#x4F5C;&#x7528; @Override&#x7684;&#x4F5C;&#x7528;&#x662F;&#x544A;&#x8BC9;&#x7F16;&#x8BD1;&#x5668;&#xFF1A;&#x8FD9;&#x662F;&#x8BE5;&#x7C7B;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x7F16;&#x8BD1;&#x5668;&#x627E;&#x4E0D;&#x5230;&#x5C31;&#x4F1A;&#x53D1;&#x51FA;&#x8B66;&#x544A;&#x3002;&#x8FD9;&#x6709;&#x52A9;&#x4E8E;&#x53D1;&#x73B0;&#x7B14;&#x8BEF;&#x3002; &#x5173;&#x952E;&#x5B57;final&#x7684;&#x4F5C;&#x7528;&#xFF1F; &#x5173;&#x952E;&#x5B57;final&#x7684;&#x4F5C;&#x7528;&#xFF1F; &#x8BBE;&#x7F6E;Logcat&#x8FC7;&#x6EE4;&#x5668; &#x5728;AndroidStudio&#x4E2D;&#x9009;&#x62E9;Android Monitor &gt; logcat &gt; Edit Filter Configuation &#x5728;&#x5F39;&#x51FA;&#x7684;&#x9762;&#x677F;&#x4E2D;&#x8BBE;&#x7F6E;Log Tag&#x5173;&#x952E;&#x5B57;&#xFF1A; &#x4E4B;&#x540E;Log&#x5C31;&#x53EA;&#x5269;&#x4E0B;&#x4E0E;&#x5173;&#x952E;&#x5B57;&#x5339;&#x914D;&#x7684;&#x5185;&#x5BB9;&#xFF1A;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记二]]></title>
    <url>%2F2017%2F10%2F16%2F2017%2F1016AndroidProgrammingBNRG02%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x52A0;&#x5165;&#x4E86;&#x95EE;&#x7B54;&#x9898;&#x76EE;&#x5217;&#x8868;&#xFF0C;&#x70B9;&#x51FB;Next&#x4F1A;&#x8F6E;&#x8BE2;&#x95EE;&#x9898;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - AndroidStudio&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#x64CD;&#x4F5C; - &#x4ECB;&#x7ECD;Android&#x7684;MVC&#x7ED3;&#x6784; - &#x4E3A;&#x4E0D;&#x540C;&#x5BC6;&#x5EA6;&#x5C4F;&#x6DFB;&#x52A0;&#x8D44;&#x6E90; AndroidStudio&#x7684;&#x57FA;&#x7840;&#x64CD;&#x4F5C; &#x6DFB;&#x52A0;Java&#x7C7B;&#x7684;&#x6B65;&#x9AA4; &#x5728;app/java/[&#x5305;&#x540D;]&#x53F3;&#x952E;&#xFF0C;New &gt; Java Class &#x5728;&#x5F39;&#x51FA;&#x7684;&#x7A97;&#x53E3;&#x4E2D;&#x586B;&#x5199;&#x65B0;&#x521B;&#x5EFA;&#x7684;java&#x7C7B;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF1A; &#x8BA9;AS&#x81EA;&#x52A8;&#x751F;&#x6210;getter/setter &#x5728;&#x8981;&#x751F;&#x6210;&#x4EE3;&#x7801;&#x7684;&#x5730;&#x65B9;&#x53F3;&#x952E;&#xFF0C;&#x9009;&#x62E9;Generate... &#x9009;&#x62E9;Getter/Setter&#xFF1A; &#x9009;&#x62E9;&#x8981;&#x751F;&#x6210;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF1A; AndroidStudio&#x9ED8;&#x8BA4;&#x4F1A;&#x4E3A;mTextResId&#x751F;&#x6210;getMTextResID()&#x3002; &#x53EF;&#x4EE5;&#x5728;AndroidStudio&#x8BBE;&#x7F6E;&#x4E2D;&#x544A;&#x8BC9;&#x5B83;&#x6210;&#x5458;&#x51FD;&#x6570;&#x7684;&#x524D;&#x7F00;&#xFF0C;&#x8FD9;&#x6837;&#x5728;&#x751F;&#x6210;getter/setter&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x5FFD;&#x7565;&#x8BE5;&#x524D;&#x7F00;&#x4E86;&#xFF1A; &#x518D;&#x6267;&#x884C;&#x4E0A;&#x9762;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;AndroidStudio&#x4F1A;&#x7ED9;mTextResId&#x751F;&#x6210;getTextResID()&#xFF0C;&#x800C;&#x4E0D;&#x662F;getmTextResID()&#x4E86;&#x3002; Android&#x4E0B;&#x7684;MVC&#x7ED3;&#x6784;&#x4EE5;&#x53CA;&#x548C;iOS&#x7684;&#x5DEE;&#x5F02; &#x8FD9;&#x662F;&#x672C;&#x7AE0;&#x5E94;&#x7528;&#x7684;MVC&#x7ED3;&#x6784;&#xFF0C;M&#x548C;V&#x4E0E;iOS&#x4E0B;&#x6CA1;&#x6709;&#x533A;&#x522B;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F;C&#x5728;Android&#x4E0B;&#x662F;Activity&#xFF0C;&#x5728;iOS&#x4E0B;&#x662F;Controller&#x3002; &#x4E66;&#x4E2D;&#x63D0;&#x5230;Model&#x53EB;&#x505A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF08;business logic&#xFF09;&#xFF0C;Controller&#x53EB;&#x505A;&#x5E94;&#x7528;&#x903B;&#x8F91;&#xFF08;application logic&#xFF09;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5F88;&#x6709;&#x9053;&#x7406;&#x3002;&#x4EE5;&#x524D;&#x6211;&#x628A;Controller&#x53EB;&#x505A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x5B83;&#x5305;&#x542B;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x4F46;&#x6BD4;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x66F4;&#x5E7F;&#x6CDB;&#xFF0C;&#x5B83;&#x8FD8;&#x5305;&#x542B;&#x4EA4;&#x4E92;&#x903B;&#x8F91;&#xFF0C;&#x6BD4;&#x5982;&#x6309;&#x4E0B;&#x4EC0;&#x4E48;&#x6309;&#x94AE;&#x5BFC;&#x81F4;&#x4EC0;&#x4E48;&#x7A97;&#x4F53;&#x5982;&#x4F55;&#x54CD;&#x5E94;&#xFF0C;&#x8FD9;&#x5176;&#x5B9E;&#x662F;&#x72EC;&#x7ACB;&#x4E8E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x3002;Model&#x662F;&#x66F4;&#x7EAF;&#x7CB9;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002; &#x6269;&#x5C55;&#x5230;&#x66F4;&#x5E7F;&#x6CDB;&#x7684;Android&#x5E94;&#x7528;&#xFF0C;MVC&#x8868;&#x8FF0;&#x5982;&#x4E0B;&#xFF0C;&#x8FD9;&#x5F20;&#x56FE;&#x548C;iOS&#x7684;&#x5F88;&#x50CF; &#x5176;&#x5B83; &#x6253;&#x5F00;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F; Android&#x8BBE;&#x5907;&#x9700;&#x8981;&#x6253;&#x5F00;USB&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#x540E;&#x624D;&#x80FD;&#x5728;&#x4E0A;&#x9762;&#x8C03;&#x8BD5;&#x5E94;&#x7528;&#x3002;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#xFF1A; &#x5148;&#x8BA9;&#x5F00;&#x53D1;&#x8005;&#x9009;&#x9879;&#x53EF;&#x89C1;&#xFF1A;&#x8FDB;&#x5165;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E; &gt; &#x5173;&#x4E8E; &#x8FDE;&#x51FB;7&#x6B21;Build&#x53F7;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x80FD;&#x770B;&#x5230;&#x5F00;&#x53D1;&#x8005;&#x9009;&#x9879;&#xFF0C;&#x8FDB;&#x5165;&#x540E;&#x6253;&#x5F00;USB&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#x3002; &#x4E0D;&#x540C;&#x5BC6;&#x5EA6;&#x5C4F;&#x7684;&#x663E;&#x793A; ?dpi&#x7684;&#x542B;&#x4E49; &#x5728;res/&#x4E0B;&#xFF0C;&#x548C;&#x5C4F;&#x5E55;&#x5206;&#x8FA8;&#x7387;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x4F1A;&#x540E;&#x7F00;-mdpi&#x3001;-hdpi&#x3001;-xhdpi&#x548C;-xxhdpi&#xFF0C;&#x4ED6;&#x4EEC;&#x8868;&#x793A;&#xFF1A; -mdpi &#x4E2D;&#x5BC6;&#x5EA6;&#x5C4F;&#xFF08;dedium-density screens&#xFF09;~160dpi -hdpi &#x9AD8;&#x5BC6;&#x5EA6;&#x5C4F;&#xFF08;high-density screens&#xFF09; ~240dip -xhdpi &#x8D85;&#x9AD8;&#x5BC6;&#x5EA6;&#x5C4F;&#xFF08;extra-high-density screens&#xFF09;~320dpi -xxhdpi &#x8D85;&#x8D85;&#x9AD8;&#x5BC6;&#x5EA6;&#x5C4F;&#xFF08;extra-extra-high-density screens&#xFF09;~480dpi &#x5E94;&#x7528;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x4F1A;&#x6839;&#x636E;&#x8BBE;&#x5907;&#x7684;&#x60C5;&#x51B5;&#x9009;&#x62E9;&#x6700;&#x5339;&#x914D;&#x7684;&#x8D44;&#x6E90;&#x3002; &#x5982;&#x4F55;&#x6DFB;&#x52A0;&#x4E0D;&#x540C;&#x5BC6;&#x5EA6;&#x5C4F;&#x7684;&#x8D44;&#x6E90; &#x4EE5;drawable-?dpi&#x4E3A;&#x4F8B;&#xFF0C;&#x5728;Project Files&#x89C6;&#x56FE;&#x4E2D;&#xFF0C;app/src/main/res&#x4E2D;&#x521B;&#x5EFA;drawable-?dpi&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x628A;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x5728;Android&#x89C6;&#x56FE;&#x91CC;&#xFF0C;&#x4F1A;&#x4F53;&#x73B0;&#x5728;app/res/drawable&#x4E0B;&#xFF0C;&#x9690;&#x85CF;&#x4E86;&#x4E0D;&#x540C;&#x5BC6;&#x5EA6;&#x5C4F;&#x7684;&#x4FE1;&#x606F;&#xFF1A; &#x6DFB;&#x52A0;&#x4E86;&#x8D44;&#x6E90;&#x540E;&#xFF0C;AndroidStudio&#x4F1A;&#x81EA;&#x52A8;&#x4E3A;&#x8D44;&#x6E90;&#x5206;&#x914D;ID&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x6587;&#x4EF6;&#x540D;&#x5FC5;&#x987B;&#x4E3A;&#x5C0F;&#x5199;&#x4E14;&#x4E0D;&#x5E26;&#x7A7A;&#x683C;&#x3002;&#x81EA;&#x52A8;&#x5206;&#x914D;&#x7684;ID&#x548C;&#x5C4F;&#x5BC6;&#x5EA6;&#x65E0;&#x5173;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x5199;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x7528;&#x5173;&#x5FC3;&#x8BBE;&#x5907;&#x7684;&#x9002;&#x914D;&#x95EE;&#x9898;&#x3002; &#x5982;&#x4F55;&#x4E3A;&#x6309;&#x94AE;&#x6DFB;&#x52A0;&#x56FE;&#x7247; &#x5728;xml&#x6587;&#x4EF6;&#x7684;Button&#x5B9A;&#x4E49;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;&#x4E4B;&#x8BBE;&#x7F6E;android:drawableRight&#x548C;android:drawablePadding&#x5C5E;&#x6027;&#xFF1A; 12345678910&lt;Button android:id=&quot;@+id/next_button&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;@string/next_button&quot; android:drawableRight=&quot;@drawable/arrow_right&quot; android:drawablePadding=&quot;4dp&quot; app:layout_constraintStart_toStartOf=&quot;parent&quot; app:layout_constraintEnd_toEndOf=&quot;parent&quot; app:layout_constraintTop_toBottomOf=&quot;@id/false_button&quot;/&gt; &#x6309;&#x94AE;&#x5F20;&#x8FD9;&#x6837;&#xFF1A;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[opencv python的使用]]></title>
    <url>%2F2017%2F10%2F01%2F2017%2F1001opencvpy%2F</url>
    <content type="text"><![CDATA[&#x56FE;&#x5F62;&#x56FE;&#x50CF;&#x5904;&#x7406;&#x597D;&#x5E2E;&#x624B;&#x2014;&#x2014;opencv&#xFF0C;python&#x4FBF;&#x4E8E;&#x4E0A;&#x624B;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7B80;&#x8981;&#x5F52;&#x7EB3;opencv-python&#x7684;&#x4E00;&#x4E9B;&#x4F7F;&#x7528;&#xFF0C;&#x4FBF;&#x4E8E;&#x81EA;&#x5DF1;&#x67E5;&#x9605;&#x3002; # &#x7B80;&#x5355;&#x51E0;&#x4F55;&#x56FE;&#x5F62;&#x7684;&#x7ED8;&#x5236; ## &#x7ED8;&#x56FE;&#x677F; 12345678img = numpy.zeros((300, 400, 3), numpy.uint8) # &#x521B;&#x5EFA;&#x9AD8;300&#xFF0C;&#x5BBD;400&#x7684;&#x7ED8;&#x56FE;&#x677F;while True: cv2.imshow(&apos;image&apos;, img) if cv2.waitKey(20) &amp; 0xFF == 27: # &#x7B49;&#x5F85;&#x6309;&#x952E;&#xFF0C;&#x5982;&#x679C;&#x4E3A;ESC&#x5219;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF; breakcv2.destroyAllWindows() # &#x9500;&#x6BC1;&#x7A97;&#x4F53; &#x6240;&#x8C13;&#x7ED8;&#x56FE;&#x677F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x6570;&#x7EC4;&#xFF0C;&#x7B2C;&#x4E00;&#x7EF4;&#x6709;300&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x8FDB;&#x5165;&#x7B2C;&#x4E8C;&#x7EF4;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x53C8;&#x6709;400&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x8FDB;&#x5165;&#x7B2C;&#x4E09;&#x7EF4;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x6709;3&#x4E2A;uint8&#x7684;&#x503C;&#x3002;300&#x662F;&#x6570;&#x7EC4;&#x7684;&#x884C;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x4F4D;&#x56FE;&#x7684;&#x9AD8;&#xFF1B;400&#x662F;&#x6570;&#x7EC4;&#x7684;&#x5217;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x4F4D;&#x56FE;&#x7684;&#x5BBD;&#xFF1B;&#x6BCF;&#x4E2A;&#x5BBD;&#x3001;&#x9AD8;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;(uint8, uint8, uint8)&#x7684;&#x503C;&#xFF0C;&#x8868;&#x793A;&#x989C;&#x8272;&#x3002;&#x6B64;&#x5904;&#x4E3A;&#x5168;0&#xFF0C;&#x5373;&#x9ED1;&#x8272;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x7684;while&#x5FAA;&#x73AF;&#x91CC;&#xFF0C;&#x6BCF;&#x9694;20ms&#x8BFB;&#x4E00;&#x6B21;&#x952E;&#x76D8;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x6309;&#x952E;&#x5E76;&#x4E14;&#x4E3A;ESC&#xFF0C;&#x5219;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#xFF0C;&#x5426;&#x5219;&#x7EE7;&#x7EED;&#x5FAA;&#x73AF;&#x3002;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x540E;&#x9500;&#x6BC1;&#x7A97;&#x4F53;&#x3002; &#x4E0B;&#x6587;&#x4E2D;&#x6211;&#x628A;&#x5FAA;&#x73AF;&#x5C01;&#x88C5;&#x6210;&#x51FD;&#x6570;self.waitToClose(img)&#x3002; ## &#x76F4;&#x7EBF; 123img = numpy.zeros((400, 300, 3), numpy.uint8) cv2.line(img, (0, 0), (511, 511), (255, 0, 0), 2) # &#x7ED8;&#x5236;&#x76F4;&#x7EBF;self.waitToClose(img) &#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x80CC;&#x666F;&#x4F4D;&#x56FE;&#xFF0C;&#x8D77;&#x59CB;&#x5750;&#x6807;&#xFF0C;&#x7EC8;&#x6B62;&#x5750;&#x6807;&#xFF0C;&#x7EBF;&#x6761;&#x989C;&#x8272;&#xFF0C;&#x7EBF;&#x5BBD;&#x3002; &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; ## &#x77E9;&#x5F62; 1234img = numpy.zeros((300, 400, 3), numpy.uint8)img[:, :] = (255, 255, 255)cv2.rectangle(img, (10, 10), (100, 100), (0, 0, 0), 1)# &#x7ED8;&#x5236;&#x77E9;&#x5F62;self.waitToClose(img) &#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x80CC;&#x666F;&#x4F4D;&#x56FE;&#xFF0C;&#x5DE6;&#x4E0A;&#x5750;&#x6807;&#xFF0C;&#x53F3;&#x4E0B;&#x5750;&#x6807;&#xFF0C;&#x7EBF;&#x6761;&#x989C;&#x8272;&#xFF0C;&#x7EBF;&#x5BBD;&#x3002; &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; ## &#x591A;&#x8FB9;&#x5F62; 12345678910111213img = numpy.zeros((300, 400, 3), numpy.uint8)img[:, :] = (255, 255, 255)pts = numpy.array([[10, 10], [100, 10], [100, 100], [10, 100]], numpy.int32)cv2.polylines(img, [pts.reshape(-1, 1, 2)], True, (0, 0, 0), 1)pts[:, 0] = pts[:, 0] + 100cv2.polylines(img, [pts.reshape(-1, 1, 2)], False, (0, 0, 0), 1)pts[:, 1] = pts[:, 1] + 100cv2.polylines(img, pts.reshape(-1, 1, 2), True, (0, 0, 0), 2)self.waitToClose(img) &#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x80CC;&#x666F;&#x4F4D;&#x56FE;&#xFF0C;&#x591A;&#x8FB9;&#x5F62;&#x9876;&#x70B9;&#x5750;&#x6807;&#xFF0C;&#x662F;&#x5426;&#x5C01;&#x95ED;&#xFF0C;&#x53F3;&#x4E0B;&#x5750;&#x6807;&#xFF0C;&#x7EBF;&#x6761;&#x989C;&#x8272;&#xFF0C;&#x7EBF;&#x5BBD;&#x3002;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x5176;&#x4E2D;&#x591A;&#x8FB9;&#x5F62;&#x9876;&#x70B9;&#x5750;&#x6807;&#x5982;&#x679C;&#x62EC;&#x5230;[]&#x91CC;&#xFF0C;&#x5C06;&#x7ED8;&#x5236;&#x591A;&#x8FB9;&#x5F62;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;[]&#xFF0C;&#x5219;&#x53EA;&#x7ED8;&#x5236;&#x9876;&#x70B9;&#x3002; ## &#x5706; 12345img = numpy.zeros((300, 400, 3), numpy.uint8)img[:, :] = (255, 255, 255)cv2.circle(img, (50, 50), 20, (0, 0, 0), -1)cv2.circle(img, (100, 100), 20, (0, 0, 0), 2)self.waitToClose(img) &#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x80CC;&#x666F;&#x4F4D;&#x56FE;&#xFF0C;&#x5706;&#x5FC3;&#x5750;&#x6807;&#xFF0C;&#x534A;&#x5F84;&#xFF0C;&#x7EBF;&#x6761;&#x989C;&#x8272;&#xFF0C;&#x7EBF;&#x5BBD;&#x3002;&#x5176;&#x4E2D;&#x7EBF;&#x5BBD;&#x5982;&#x679C;&#x662F;-1&#xFF0C;&#x5219;&#x4E3A;&#x5B9E;&#x5FC3;&#x3002;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; ## &#x692D;&#x5706; 12345img = numpy.zeros((300, 400, 3), numpy.uint8)img[:, :] = (255, 255, 255)cv2.ellipse(img, (200, 50), (100, 50), 0, 0, 180, (0, 0, 0), 1)cv2.ellipse(img, (200, 250), (100, 50), 0, 120, 180, (0, 0, 0), -1)self.waitToClose(img) &#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x80CC;&#x666F;&#x4F4D;&#x56FE;&#xFF0C;&#x4E2D;&#x5FC3;&#x5750;&#x6807;&#xFF0C;&#x957F;&#x77ED;&#x8F74;&#x957F;&#x5EA6;&#xFF0C;&#x8D77;&#x59CB;&#x65CB;&#x8F6C;&#x89D2;&#x5EA6;&#xFF0C;&#x8D77;&#x59CB;&#x7ED8;&#x5236;&#x89D2;&#x5EA6;&#xFF0C;&#x7EC8;&#x6B62;&#x7ED8;&#x5236;&#x89D2;&#x5EA6;&#xFF0C;&#x989C;&#x8272;&#xFF0C;&#x7EBF;&#x5BBD;&#x3002;&#x5176;&#x4E2D;&#x7EBF;&#x5BBD;&#x5982;&#x679C;&#x662F;-1&#xFF0C;&#x5219;&#x4E3A;&#x5B9E;&#x5FC3;&#x3002;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5F15;&#x5165;&#x8D77;&#x59CB;&#x65CB;&#x8F6C;&#x89D2;&#x5EA6;&#xFF0C;&#x5927;&#x81F4;&#x610F;&#x601D;&#x662F;&#x8BF4;&#x4ECE;&#x8D77;&#x59CB;&#x65CB;&#x8F6C;&#x89D2;&#x5EA6;&#xFF0C;&#x65CB;&#x8F6C;&#x8D77;&#x59CB;&#x7ED8;&#x5236;&#x89D2;&#x5EA6;&#x540E;&#x5F00;&#x59CB;&#x7ED8;&#x5236;&#xFF0C;&#x76F4;&#x5230;&#x65CB;&#x8F6C;&#x5230;&#x7EC8;&#x6B62;&#x7ED8;&#x5236;&#x89D2;&#x5EA6;&#x3002; &#x628A;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B9E;&#x5FC3;&#x692D;&#x5706;&#x6539;&#x6210;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A; 1cv2.ellipse(img, (200, 250), (100, 50), 90, 120, 180, (0, 0, 0), -1) &#x56FE;&#x5F62;&#x4E3A;&#xFF1A; &#x6587;&#x5B57; 123456img = numpy.zeros((300, 400, 3), numpy.uint8)img[:, :] = (255, 255, 255)font = cv2.FONT_HERSHEY_SIMPLEX # &#x6587;&#x5B57;cv2.putText(img, &apos;OpenCV&apos;, (10, 100), font, 2, (0, 0, 0), 2, cv2.LINE_AA)cv2.putText(img, &apos;OpenCV&apos;, (10, 200), font, 1, (0, 0, 0), 1, cv2.LINE_AA)self.waitToClose(img) &#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x80CC;&#x666F;&#x4F4D;&#x56FE;&#xFF0C;&#x5B57;&#x4E32;&#xFF0C;&#x4F4D;&#x7F6E;&#xFF0C;&#x5B57;&#x4F53;&#xFF0C;&#x5B57;&#x53F7;&#xFF0C;&#x5B57;&#x8272;&#xFF0C;&#x7EBF;&#x5BBD;&#xFF0C;&#x7EBF;&#x6761;&#x7C7B;&#x578B;&#x3002;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; ## &#x586B;&#x5145; ### cv2.floodFill(...) 12345678910img = numpy.zeros((300, 300, 3), numpy.uint8)img[:, :] = (255, 255, 255)pts = numpy.array([[10, 10], [100, 10], [100, 100], [10, 100]], numpy.int32)pts = pts.reshape((-1, 1, 2))cv2.polylines(img, [pts], True, (0, 0, 0), 1)mask = numpy.zeros((302, 302), numpy.uint8)cv2.floodFill(img, mask, (50, 50), (0, 0, 0), (0,), (0,), 8) # &#x586B;&#x5145;&#x5C01;&#x95ED;&#x533A;&#x57DF;self.waitToClose(img) cv2.floodFill&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;&#x6E90;&#x56FE;&#xFF0C;&#x63A9;&#x7801;&#xFF0C;&#x8D77;&#x59CB;&#x586B;&#x5145;&#x6807;&#x8BB0;&#x70B9;&#xFF0C;&#x586B;&#x5145;&#x8272;&#xFF0C;&#x6700;&#x5927;&#x4F4E;&#x4EAE;&#x5EA6;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x6700;&#x5927;&#x9AD8;&#x4EAE;&#x5EA6;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x8054;&#x901A;&#x65B9;&#x5F0F;&#x3002; - &#x63A9;&#x7801;&#x56FE;&#x50CF;&#xFF0C;&#x5927;&#x5C0F;&#x6BD4;&#x539F;&#x56FE;&#x591A;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x3002;&#x8BBE;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x5927;&#x5C0F;&#x4E3A;w * h ,&#x5219;&#x63A9;&#x7801;&#x7684;&#x5927;&#x5C0F;&#x5FC5;&#x987B;&#x4E3A; (w + 2) * (h + 2) , mask&#x53EF;&#x4E3A;&#x8F93;&#x51FA;&#xFF0C;&#x4E5F;&#x53EF;&#x4F5C;&#x4E3A;&#x8F93;&#x5165; &#xFF0C;&#x7531;flags&#x51B3;&#x5B9A;&#x3002; - &#x8D77;&#x59CB;&#x586B;&#x5145;&#x6807;&#x8BB0;&#x70B9;&#xFF0C;&#x4ECE;&#x8FD9;&#x4E2A;&#x70B9;&#x5F00;&#x59CB;&#x5F80;&#x5916;&#x6269;&#x6563;&#x6267;&#x884C;&#x586B;&#x5145;&#x3002; - &#x8FDE;&#x901A;&#x65B9;&#x5F0F;&#xFF1A;0~7&#x4F4D;&#x4E3A;0x04&#x6216;&#x8005;0x08 &#x5373; 4&#x8FDE;&#x901A; &#x6216;&#x8005; 8&#x8FDE;&#x901A;&#xFF0C; 8~15&#x4F4D;&#x4E3A;&#x586B;&#x5145;mask&#x7684;&#x503C;&#x5927;&#x5C0F; , &#x82E5;&#x4E3A;0 &#xFF0C; &#x5219;&#x9ED8;&#x8BA4;&#x7528;1&#x586B;&#x5145; 16~23&#x4F4D;&#x4E3A; CV_FLOODFILL_FIXED_RANGE =(1 &lt;&lt; 16), CV_FLOODFILL_MASK_ONLY =(1 &lt;&lt; 17) flags&#x53C2;&#x6570;&#x901A;&#x8FC7;&#x4F4D;&#x4E0E;&#x8FD0;&#x7B97;&#x5904;&#x7406;&#xFF1A; - &#x5F53;&#x4E3A;CV_FLOODFILL_FIXED_RANGE &#x5F85;&#x5904;&#x7406;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x4E0E;&#x79CD;&#x5B50;&#x70B9;&#x4F5C;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x679C;&#x2208;(s &#x2013; lodiff , s + updiff)&#xFF0C;s&#x4E3A;&#x79CD;&#x5B50;&#x70B9;&#x50CF;&#x7D20;&#x503C;&#xFF0C;&#x5219;&#x586B;&#x5145;&#x6B64;&#x50CF;&#x7D20;&#x3002;&#x82E5;&#x65E0;&#x6B64;&#x4F4D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5219;&#x5C06;&#x5F85;&#x5904;&#x7406;&#x70B9;&#x4E0E;&#x5DF2;&#x586B;&#x5145;&#x7684;&#x76F8;&#x90BB;&#x70B9;&#x4F5C;&#x6B64;&#x6BD4;&#x8F83;&#x3002; - &#x5F53;&#x4E3A;CV_FLOODFILL_MASK_ONLY &#x6B64;&#x4F4D;&#x8BBE;&#x7F6E;&#x586B;&#x5145;&#x7684;&#x5BF9;&#x50CF;&#xFF0C; &#x82E5;&#x8BBE;&#x7F6E;&#x6B64;&#x4F4D;&#xFF0C;&#x5219;mask&#x4E0D;&#x80FD;&#x4E3A;&#x7A7A;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x51FD;&#x6570;&#x4E0D;&#x586B;&#x5145;&#x539F;&#x59CB;&#x56FE;&#x50CF;img&#xFF0C;&#x800C;&#x662F;&#x586B;&#x5145;&#x63A9;&#x7801;&#x56FE;&#x50CF;. &#x82E5;&#x65E0;&#x6B64;&#x4F4D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5219;&#x5728;&#x586B;&#x5145;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x7528;flags&#x7684;8~15&#x4F4D;&#x6807;&#x8BB0;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#x7684;mask. &#x5728;&#x672C;&#x4F8B;&#x4E2D;&#xFF0C;&#x5148;&#x6CBF;(10, 10), (100, 10), (100, 100), (10, 100)&#x56DB;&#x4E2A;&#x9876;&#x70B9;&#x753B;&#x77E9;&#x5F62;&#xFF0C;&#x5728;&#x56FE;&#x4E2D;&#x7528;&#x7EA2;&#x8272;&#x6807;&#x51FA;&#x8FD9;&#x56DB;&#x4E2A;&#x9876;&#x70B9;&#xFF1B;&#x518D;&#x5C06;(50, 50)&#x4F5C;&#x4E3A;&#x8D77;&#x59CB;&#x586B;&#x5145;&#x6807;&#x8BB0;&#x70B9;&#xFF0C;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x586B;&#x5145;&#xFF0C;&#x8BE5;&#x70B9;&#x7528;&#x84DD;&#x8272;&#x6807;&#x8BB0;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; ### cv2.fillPoly(...) &#x5F53;&#x88AB;&#x586B;&#x5145;&#x7684;&#x591A;&#x8FB9;&#x5F62;&#x7684;&#x8FB9;&#x754C;&#x4E0D;&#x662F;&#x6A2A;&#x5E73;&#x7AD6;&#x76F4;&#xFF0C;&#x800C;&#x662F;&#x659C;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F7F;&#x7528;cv2.floodFill(...)&#x4F1A;&#x4EA7;&#x751F;&#x8BF8;&#x591A;&#x95EE;&#x9898;&#x3002;&#x5982;&#x679C;&#x8FB9;&#x754C;&#x7EBF;&#x5BBD;&#x5EA6;&#x4E3A;1&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6D2A;&#x6C34;&#x6CDB;&#x6EE5;&#x5230;&#x8FB9;&#x754C;&#x4EE5;&#x5916;&#xFF0C;&#x56E0;&#x4E3A;&#x8FB9;&#x754C;&#x7EBF;&#x4E0A;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x50CF;&#x7D20;&#x90FD;&#x662F;&#x8FB9;&#x754C;&#x8272;&#x3002;&#x5982;&#x679C;&#x8FB9;&#x754C;&#x7EBF;&#x7684;&#x7ED8;&#x5236;&#x91C7;&#x7528;&#x4E86;&#x5E73;&#x6ED1;&#x66F2;&#x7EBF;cv2.LINE_AA&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F7F;&#x7528;cv2.floodFill(...)&#x4F1A;&#x5BFC;&#x81F4;&#x754C;&#x5185;&#x6709;&#x4E00;&#x4E2A;&#x767D;&#x8FB9;&#xFF1A; &#x4F7F;&#x7528;cv2.floodFill(...)&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EA;&#x80FD;&#x628A;&#x8FB9;&#x754C;&#x7EBF;&#x753B;&#x4E3A;2&#x4E2A;&#x50CF;&#x7D20;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x4F7F;&#x7528;&#x5E73;&#x6ED1;&#x3002;&#x66F4;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4F7F;&#x7528;cv2.fillPoly(...)&#x6765;&#x5B8C;&#x6210;&#x586B;&#x5145;&#x3002; 1234567img = numpy.zeros((300, 300, 3), numpy.uint8)img[:, :] = (255, 255, 255)pts = numpy.array([[454, 283], [471, 288], [486, 294], [553, 320], [548, 339], [479, 313], [464, 307], [449, 302]], numpy.int32)cv2.polylines(img, [pts.reshape(-1, 1, 2)], True, (0, 0, 0), 1, cv2.LINE_AA)cv2.fillPoly(img, [pts.reshape(-1, 1, 2)], (0, 0, 0))self.waitToClose(img) &#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x8BFB;&#x53D6;&#x56FE;&#x7247; &#x8BFB;&#x53D6;&#x56FE;&#x7247;&#x65F6;&#x7684;&#x6807;&#x8BB0;&#x53C2;&#x6570; &#x51FD;&#x6570;&#x539F;&#x578B;&#x4E3A;&#xFF1A;cv2.imread(filename[, flags]) &#x2192; retval &#x5728;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x8BF4;flag&#x53D6;&#x503C;&#x4E3A;CV_LOAD_IMAGE_ANYDEPTH&#x3001;CV_LOAD_IMAGE_COLOR&#x6216;CV_LOAD_IMAGE_GRAYSCALE&#x3002; &#x4F46;&#x662F;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x4ECE;cv2&#x4E2D;&#x627E;&#x5230;&#x8FD9;&#x4E9B;&#x5E38;&#x91CF;&#xFF1A; 12IMAGE = [i for i in dir(cv2) if &apos;IMAGE&apos; in i]logging.debug(IMAGE) 1[&apos;CALIB_CB_NORMALIZE_IMAGE&apos;, &apos;CAP_IMAGES&apos;, &apos;CAP_INTELPERC_IMAGE&apos;, &apos;CAP_INTELPERC_IMAGE_GENERATOR&apos;, &apos;CAP_OPENNI_BGR_IMAGE&apos;, &apos;CAP_OPENNI_GRAY_IMAGE&apos;, &apos;CAP_OPENNI_IMAGE_GENERATOR&apos;, &apos;CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE&apos;, &apos;CAP_OPENNI_IMAGE_GENERATOR_PRESENT&apos;, &apos;CAP_OPENNI_IR_IMAGE&apos;, &apos;CAP_PROP_IMAGES_BASE&apos;, &apos;CAP_PROP_IMAGES_LAST&apos;, &apos;CAP_PROP_XI_IMAGE_BLACK_LEVEL&apos;, &apos;CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH&apos;, &apos;CAP_PROP_XI_IMAGE_DATA_FORMAT&apos;, &apos;CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA&apos;, &apos;CAP_PROP_XI_IMAGE_IS_COLOR&apos;, &apos;CAP_PROP_XI_IMAGE_PAYLOAD_SIZE&apos;, &apos;CASCADE_SCALE_IMAGE&apos;] &#x6587;&#x6863;&#x8FD8;&#x63D0;&#x5230;&#xFF0C;&#x5982;&#x679C;flag&#x5927;&#x4E8E;0&#xFF0C;&#x5219;&#x4E3A;3&#x901A;&#x9053;&#x56FE;&#x7247;&#xFF1B;flag&#x7B49;&#x4E8E;0&#x4E3A;&#x7070;&#x5EA6;&#x56FE;&#xFF1B;flag&#x5C0F;&#x4E8E;0&#x4E3A;&#x5E26;alpha&#x901A;&#x9053;&#x7684;&#x56FE;&#x7247;&#x3002;&#x8FD9;&#x662F;&#x9760;&#x8C31;&#x7684;&#xFF1A; 1234img = cv2.imread(&apos;dot.png&apos;)logging.debug(img.shape) # &#x6253;&#x5370;&#x884C;&#x50CF;&#x7D20;&#x6570;&#x3001;&#x5217;&#x50CF;&#x7D20;&#x6570;&#x3001;&#x989C;&#x8272;img = cv2.imread(&apos;dot.png&apos;, -1)logging.debug(img.shape) 1223:47 0120 DEBUG (41, 36, 3) # &#x8868;&#x793A;3&#x901A;&#x9053;RGB23:47 0122 DEBUG (41, 36, 4) # &#x8868;&#x793A;4&#x901A;&#x9053;ARGB &#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x56FE;&#x7247;&#x672C;&#x8EAB;&#x662F;3&#x901A;&#x9053;&#x7684;&#xFF0C;&#x5373;&#x4F7F;&#x4F20;&#x5165;flag=1&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x901A;&#x9053;&#x6570;&#x8FD8;&#x662F;3&#x3002; &#x9057;&#x61BE;&#x7684;&#x662F;&#xFF0C;&#x867D;&#x7136;&#x80FD;&#x8BFB;&#x51FA;ARGB&#x7684;&#x56FE;&#x7247;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;opencv-python&#x53EA;&#x80FD;&#x4EE5;&#x7070;&#x5EA6;&#x56FE;&#x7684;&#x5F62;&#x5F0F;&#x663E;&#x793A;&#x5B83;&#xFF1A; 123img = cv2.imread(&apos;dot.png&apos;, -1)logging.debug(img.shape)self.waitToClose(img) &#x5982;&#x4E0B;&#x5DE6;&#x534A;&#x90E8;&#x5206;&#x662F;&#x5728;photo&#x4E2D;&#x770B;&#x5230;&#x7684;&#x6837;&#x5B50;&#xFF0C;&#x53F3;&#x534A;&#x90E8;&#x5206;&#x5219;&#x662F;&#x7528;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x663E;&#x793A;&#x51FA;&#x6765;&#x7684;&#x6837;&#x5B50;&#xFF1A; &#x56FE;&#x50CF;&#x6DF7;&#x5408; 12345678910111213141516171819202122background = cv2.imread(&apos;messi.jpg&apos;)logo = cv2.imread(&apos;opencv_logo.png&apos;)# &#x5728;background&#x4E0A;&#x622A;&#x53D6;&#x4E0E;logo&#x76F8;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x56FE;&#x7247;rows, cols, channels = logo.shaperoi = background[0:rows, 0:cols]logogray = cv2.cvtColor(logo, cv2.COLOR_BGR2GRAY) # logo&#x8F6C;&#x6210;&#x7070;&#x5EA6;&#x56FE;ret, mask = cv2.threshold(logogray, 20, 255, cv2.THRESH_BINARY) # &#x524D;&#x666F;&#x7EAF;&#x767D;&#xFF0C;&#x80CC;&#x666F;&#x7EAF;&#x9ED1;mask_inv = cv2.bitwise_not(mask) # &#x7FFB;&#x8F6C;&#xFF1A;&#x524D;&#x666F;&#x7EAF;&#x9ED1;&#xFF0C;&#x80CC;&#x666F;&#x7EAF;&#x767D;# img1_bg = if(mask&#x2260;0){roi ^ roi}else{mask}img1_bg = cv2.bitwise_and(roi, roi, mask = mask_inv) # &#x5728;messi&#x4E2D;&#x628A;logo&#x90E8;&#x5206;&#x53D8;&#x9ED1;img2_fg = cv2.bitwise_and(logo, logo, mask = mask)dst = cv2.add(img1_bg, img2_fg)background[0:rows, 0:cols] = dstreturndst = cv2.add(img1_bg, img2_fg)background[0:rows, 0:cols] = dst background&#xFF1A; logo&#xFF1A; roi&#x662F;&#x5728;background&#x4E0A;&#x622A;&#x53D6;&#x4E86;&#x4E0E;logo&#x76F8;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x533A;&#x57DF;&#xFF1B;logogray&#x662F;&#x5C06;logo&#x8F6C;&#x6210;&#x7070;&#x5EA6;&#x56FE;&#xFF1B;mask&#x662F;&#x5C06;logogray&#x8F6C;&#x6210;&#x524D;&#x666F;&#x7EAF;&#x767D;&#xFF0C;&#x80CC;&#x666F;&#x7EAF;&#x9ED1;&#xFF1B;mask_inv&#x662F;&#x5C06;logogray&#x8F6C;&#x6210;&#x524D;&#x666F;&#x7EAF;&#x9ED1;&#xFF0C;&#x80CC;&#x666F;&#x7EAF;&#x767D;&#x3002; &#x8FD9;&#x56DB;&#x5F20;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; img1_bg&#x662F;&#x5C06;roi&#x4E2D;logo&#x7684;&#x90E8;&#x5206;&#x8F6C;&#x6210;&#x9ED1;&#x8272;&#xFF1B;img2_fg&#x662F;&#x5C06;logo&#x4E2D;&#x80CC;&#x666F;&#x8F6C;&#x6210;&#x9ED1;&#x8272;&#xFF1B;dst&#x662F;&#x5C06;img1_bg&#x548C;img2_fg&#x53D6;&#x903B;&#x8F91;&#x4E0E;&#xFF0C;&#x4E5F;&#x5373;&#x6DF7;&#x5408;&#x4E24;&#x5F20;&#x56FE;&#x4E2D;&#x975E;&#x9ED1;&#x8272;&#x7684;&#x90E8;&#x5206;&#x3002; &#x8FD9;&#x4E09;&#x5F20;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x6700;&#x540E;&#xFF0C;&#x5C06;&#x6DF7;&#x5408;&#x540E;&#x7684;dst&#x8D34;&#x5230;&#x80CC;&#x666F;&#x56FE;&#x4E0A;&#xFF1A; &#x603B;&#x7ED3; &#x628A;&#x8981;&#x6DF7;&#x5408;&#x7684;&#x4E24;&#x5F20;&#x56FE;&#x5BF9;&#x65B9;&#x7684;&#x90E8;&#x5206;&#x8F6C;&#x6210;&#x9ED1;&#x8272;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x8FD9;&#x4E24;&#x5F20;&#x56FE;&#x505A;&#x4E2A;&#x903B;&#x8F91;&#x76F8;&#x52A0;&#x3002; &#x600E;&#x4E48;&#x505A;&#x5230;&#x201C;&#x628A;&#x5BF9;&#x65B9;&#x7684;&#x90E8;&#x5206;&#x8F6C;&#x6210;&#x9ED1;&#x8272;&#x201D;&#x5462;&#xFF1F;&#x5728;&#x672C;&#x4F8B;&#x4E2D;&#xFF0C;&#x628A;logo&#x7684;&#x524D;&#x666F;&#x8F6C;&#x6210;&#x9ED1;&#x8272;&#xFF0C;&#x80CC;&#x666F;&#x8F6C;&#x6210;&#x767D;&#x8272;&#xFF0C;&#x5373;mask_inv&#xFF0C;&#x518D;&#x4E0E;&#x53E6;&#x4E00;&#x5F20;&#x56FE;roi&#x505A;&#x903B;&#x8F91;&#x4E0E;&#xFF0C;&#x8FD9;&#x5C31;&#x5F97;&#x5230;img1_bg&#x3002;&#x800C;logo&#x7684;&#x80CC;&#x666F;&#x672C;&#x6765;&#x5C31;&#x662F;&#x7EAF;&#x8272;&#x7684;&#xFF0C;&#x8F6C;&#x6210;&#x9ED1;&#x8272;&#x5F88;&#x5BB9;&#x6613;&#x3002; &#x7F29;&#x653E; 12345678910logo = cv2.imread(&apos;opencv_logo.png&apos;)# &#x8BBE;&#x7F6E;x/y&#x8F74;&#x7684;&#x7F29;&#x653E;&#x56E0;&#x5B50;&#x5747;&#x4E3A;0.8res1 = cv2.resize(logo, None, fx=0.8, fy=0.8, interpolation=cv2.INTER_CUBIC)# &#x8BBE;&#x7F6E;&#x5BBD;&#x9AD8;&#x7684;&#x5B9E;&#x9645;&#x503C;&#x4E3A;&#x539F;&#x6765;&#x7684;1.5&#x500D;height, width = logo.shape[:2]res2 = cv2.resize(logo, (int(width*1.5), int(height*1.5)), interpolation=cv2.INTER_CUBIC)self.waitToClose(res1)self.waitToClose(res2) &#x7F29;&#x653E;&#x7684;&#x4EE3;&#x7801;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x5B8C;&#x6210;&#x7F29;&#x653E;&#xFF1A;1&#x3001;&#x8BBE;&#x7F6E;x/y&#x8F74;&#x7684;&#x7F29;&#x653E;&#x56E0;&#x5B50;&#xFF1B;2&#x3001;&#x8BBE;&#x7F6E;&#x7F29;&#x653E;&#x540E;&#x7684;&#x5C3A;&#x5BF8;&#x3002; &#x8BFB;&#x53D6;&#x6444;&#x50CF;&#x5934;&#x5E76;&#x5B9E;&#x65F6;&#x663E;&#x793A; &#x65B9;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5728;&#x505A;&#x4EBA;&#x8138;&#x8BC6;&#x522B;&#x7684;&#x65F6;&#x5019;&#x76F4;&#x63A5;&#x5728;PC&#x4E0A;&#x8C03;&#x8BD5;&#x5F88;&#x65B9;&#x4FBF;&#xFF1A; 123456789cap = cv2.VideoCapture(0) # &#x83B7;&#x53D6;&#x6444;&#x50CF;&#x5934;while True: cameraImg = cap.read()[1] # &#x8BFB;&#x53D6;&#x56FE;&#x50CF; cv2.imshow(&apos;image&apos;, cameraImg) key = cv2.waitKey(1) if cv2.waitKey(20) &amp; 0xFF == 27: break &#x53C2;&#x8003; &#x672C;&#x6587;&#x4F8B;&#x7A0B;&#x653E;&#x5728;&#x4E86;opencvSample.py &#x5B89;&#x88C5; $ pip install opencv-python &#x4F7F;&#x7528;brew install opencv&#x662F;&#x4E0D;&#x884C;&#x6EF4; &#x5982;&#x679C;&#x662F;python3&#xFF0C;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#xFF1A; $ python3 -m pip install opencv-python &#x5165;&#x95E8;&#x6587;&#x6863; OpenCV Python Tutorial&#x4E2D;&#x6587;&#x7248; &#x6216;&#x8005;&#x5230;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D; OpenCV Python Tutorials&#x82F1;&#x6587;&#x7248;]]></content>
      <categories>
        <category>opencv</category>
      </categories>
      <tags>
        <tag>技术随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三次样条插值（Cubic Spline Interpolation）]]></title>
    <url>%2F2017%2F09%2F29%2F2017%2F0929CubicSplineInterpolation%2F</url>
    <content type="text"><![CDATA[&#x5E38;&#x89C1;&#x7684;&#x4E00;&#x7EF4;&#x63D2;&#x503C;&#x65B9;&#x6CD5;&#x6709;&#xFF1A; - &#x591A;&#x9879;&#x5F0F;&#x63D2;&#x503C;&#xFF08;polynormal interpolation&#xFF09; - &#x5206;&#x6BB5;&#x7EBF;&#x6027;&#x63D2;&#x503C;&#xFF08;piecewise linear interpolation&#xFF09; - 3&#x6B21;&#x6837;&#x6761;&#x63D2;&#x503C;&#xFF08;cubic spline interpolation&#xFF09; &#x672C;&#x6587;&#x63A8;&#x6F14;&#x4E00;&#x904D;3&#x6B21;&#x6837;&#x6761;&#x63D2;&#x503C;&#x7684;&#x8BA1;&#x7B97;&#x8FC7;&#x7A0B;&#x3002; # &#x5B9A;&#x4E49; &#x6709;&#x8282;&#x70B9;&#x5E8F;&#x5217;&#xFF1A;(x0, y0),(x1, y1),&#x2026;&#x2026;(xn, yn)&#xFF0C;&#x5176;&#x4E2D;a=x0 &lt; x1 &lt; ... &lt; xn = b &#x5728;&#x6BCF;&#x4E2A;&#x5206;&#x6BB5;&#x533A;&#x95F4;[xi, xi+1]&#xFF0C;&#x6837;&#x6761;&#x66F2;&#x7EBF;Si(x)&#x90FD;&#x662F;&#x4E00;&#x4E2A;&#x4E09;&#x6B21;&#x591A;&#x9879;&#x5F0F;&#xFF1B;S(x)&#x3001;S&apos;(x)&#x3001;S&quot;(x)&#x5728;&#x533A;&#x95F4;[a, b]&#x4E0A;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x5373;S(x)&#x66F2;&#x7EBF;&#x662F;&#x5149;&#x6ED1;&#x7684;&#x3002; Si&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; Si(x) = ai + bi(x - xi) + ci(x - xi)2 + di(x - xi)3 &#x5176;&#x4E2D;i = 0, 1, ..., n-1 ai&#x3001;bi&#x3001;ci&#x3001;di&#x662F;&#x672A;&#x77E5;&#x7CFB;&#x6570;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x9700;&#x8981;&#x6C42;&#x89E3;&#x5B83;&#x4EEC;&#x3002; &#x6C42;&#x89E3; &#x6BCF;&#x4E00;&#x6BB5;&#x6837;&#x6761;&#x66F2;&#x7EBF;&#x7684;&#x8282;&#x70B9;&#x4E0E;&#x5DF2;&#x77E5;&#x5E8F;&#x5217;&#x91CD;&#x5408;&#xFF0C;&#x6545;&#xFF1A; Si(xi) = yi Si(xi+1) = yi+1 &#x3000;&#x3000;&#x3000;&#x5176;&#x4E2D;i=0, 1, ..., n-1 &#x76F8;&#x90BB;&#x7684;&#x4E24;&#x6BB5;&#x6837;&#x6761;&#x66F2;&#x7EBF;&#x5728;&#x63A5;&#x7F1D;&#x5904;&#x662F;&#x5E73;&#x6ED1;&#x7684;&#xFF0C;&#x6545;&#xFF1A; S&apos;i(xi+1) = S&apos;i+1(xi+1) S&quot;i(xi+1) = S&quot;i+1(xi+1) &#x3000;&#x3000;&#x3000;&#x5176;&#x4E2D;i=0, 1, ..., n-2 &#x6837;&#x6761;&#x66F2;&#x7EBF;&#x65B9;&#x7A0B;&#x53CA;&#x5FAE;&#x5206;&#x65B9;&#x7A0B;&#xFF1A; Si(x) = ai + bi(x - xi) + ci(x - xi)2 + di(x - xi)3 &#x3000;&#x3000;&#x3000;&#x2026;&#x2460; S&apos;i(x) = bi + 2ci(x - xi) + 3di(x - xi)2 &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2461; S&quot;i(x) = 2ci + 6di(x - xi) &#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2462; &#x5C06;Si(xi) = yi&#x4EE3;&#x5165;&#x2460;&#x5F97;&#xFF1A; ai = yi&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2465; &#x5C06;Si(xi+1) = yi+1&#x4EE3;&#x5165;&#x2460;&#x5F97;&#xFF1A; ai + bi(xi+1 - xi) + ci(xi+1 - xi)2 + di(xi+1 - xi)3 = yi+1 &#x4EE4;hi = xi+1 - xi&#x4E3A;&#x6B65;&#x957F;&#xFF0C;&#x4EE3;&#x5165;&#x4E0A;&#x5F0F;&#x5F97;&#xFF1A; ai + bihi + cihi2 + dihi3 = yi+1&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2466; &#x5C06;S&apos;i(xi+1) = S&apos;i+1(xi+1)&#x4EE3;&#x5165;&#x2461;&#x5F97;&#xFF1A; bi - bi+1 + 2ci(xi+1 - xi) + 3di(xi+1 - xi)2 = 0 &#x5373;&#xFF1A;bi - bi+1 + 2cihi + 3dihi2 = 0&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2467; &#x5C06;S&quot;i(xi+1) = S&quot;i+1(xi+1)&#x4EE3;&#x5165;&#x2462;&#x5F97;&#xFF1A; 2(ci - ci+1) + 6di(xi+1 - xi) = 0 =&gt; 2(ci - ci+1) + 6dihi = 0 =&gt; di = 2(ci - ci+1)/6hi &#x4EE4; mi = S&quot;i(xi) = 2ci =&gt; ci = mi / 2&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2463; =&gt; di = (mi+1 - mi)/6hi&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x2464; &#x5C06;&#x2463;&#x2464;&#x2465;&#x4EE3;&#x5165;&#x2466;&#xFF1A; yi + bihi + mihi2/2 + (mi+1 - mi)hi3/6hi = yi+1 =&gt; bihi = (yi+1 - yi) - mihi2/2 - (mi+1 - mi)hi2 / 6 =&gt; bi = (yi+1 - yi)/hi - mihi/2 - (mi+1 - mi)hi/6&#x3000;&#x3000;&#x3000;&#x2026;&#x2468; &#x5C06;&#x2463;&#x2464;&#x2468;&#x4EE3;&#x5165;&#x2467;&#xFF1A; (yi+1 - yi)/hi - mihi/2 - (mi+1 - mi)hi/6 - (yi+2 - yi+1)/hi+1 + mi+1hi+1/2 + (mi+2 - mi+1)hi+1/6 + mihi + (mi+1 - mi)hi/2 = 0 =&gt; himi + 2(hi+hi+1)mi+1 + hi+1mi+2 = 6((yi+2 - yi+1)/hi+1 - (yi+1 - yi)/hi)&#x3000;&#x3000;&#x3000;&#x2026;&#x2469; &#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x7AEF;&#x70B9;&#x53EF;&#x4EE5;&#x5F15;&#x5165;&#x7EA6;&#x675F;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x6709;&#x4E09;&#x79CD;&#xFF1A; - &#x81EA;&#x7531;&#x8FB9;&#x754C;&#xFF08;Natual)&#x3002;&#x4EE4;&#xFF1A;S&quot;=0 &#x5373;&#xFF1A;m0=0,mn=0 &#x4E8E;&#x662F;&#x2469;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; &#x56FA;&#x5B9A;&#x8FB9;&#x754C;&#xFF08;Claped&#xFF09;&#x3002;&#x6307;&#x5B9A;S&apos;0(x0)=A, S&apos;n-1(xn)=B =&gt;b0=A&#xFF0C;bn-1=B&#xFF0C;&#x4EE3;&#x5165;&#x2468;&#xFF1A; 2h0m0 + h0m1 = 6((y1 - y0)/h0 - A) hn-1mn-1 + 2hn-1m0 = 6(B - (yn - yn-1)/hn-1) &#x975E;&#x8282;&#x70B9;&#x8FB9;&#x754C;&#xFF08;Not-A-Knot&#xFF09;&#x3002;&#x4EE4;&#xFF1A; S&apos;&apos;&apos;0(x1) = S&apos;&apos;&apos;1(x1)&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x2026;&#x246A; S&apos;&apos;&apos;n-2(xn-1) = S&apos;&apos;&apos;n-1(xn-1)&#x3000;&#x3000;&#x2026;&#x246B; &#x7531;&#x2462;&#x5F97;&#xFF1A;S&apos;&apos;&apos;i(x)=6di &#x7531;&#x2464;&#x5F97;&#xFF1A;S&apos;&apos;&apos;i(x)=6di = (mi+1 - mi)/hi&#x3000;&#x3000;&#x2026;&#x246C; &#x5C06;&#x246C;&#x4EE3;&#x5165;&#x246A;&#x246B;&#x5F97;&#xFF1A; h1(m1-m0) = h0(m2-m1) hn-1(mn-1-mn-2) = hn-2(mn-mn-1) &#x4E0D;&#x540C;&#x7684;&#x8FB9;&#x754C;&#x70B9;&#x7EA6;&#x675F;&#x5F71;&#x54CD;&#x7684;&#x662F;&#x6837;&#x6761;&#x66F2;&#x7EBF;&#x51FD;&#x6570;&#x7684;&#x9996;&#x672B;&#x4E24;&#x884C;&#x3002; &#x603B;&#x7ED3; &#x5DF2;&#x77E5;n&#x683C;&#x6570;&#x636E;&#x70B9;&#xFF1A;(x0, y0), (x1, y1), ..., (xn, yn)&#xFF0C;&#x4EE4;hi=xi+1-xi&#x4E3A;&#x6B65;&#x957F;&#xFF0C;&#x4EE3;&#x5165;&#x77E9;&#x9635;&#x65B9;&#x7A0B;&#xFF08;&#x6B64;&#x5904;&#x91C7;&#x7528;&#x81EA;&#x7531;&#x8FB9;&#x754C;&#x7EA6;&#x675F;&#xFF09;&#xFF1A; &#x8BA1;&#x7B97;&#x6837;&#x6761;&#x7CFB;&#x6570;&#xFF1A; ai=yi bi=(yi+1-yi)/hi - mihi/2 - (mi+1-mi)hi/6 ci=mi/2 di=(mi+1-mi)/6hi &#x5728;&#x6BCF;&#x4E2A;&#x533A;&#x95F4;x&#x2208;[xi, xi+1]&#x521B;&#x5EFA;&#x6837;&#x6761;&#x66F2;&#x7EBF;&#x65B9;&#x7A0B;gi(x) = ai + bi(x-xi) + ci(x-xi)2 + di(x - xi)3]]></content>
      <categories>
        <category>技术随笔</category>
      </categories>
      <tags>
        <tag>技术随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[numpy使用]]></title>
    <url>%2F2017%2F09%2F29%2F2017%2F0929numpy%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x9891;&#x7E41;&#x63A5;&#x89E6;numpy&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;Machine Learning&#x8FD8;&#x662F;opencv&#xFF0C;&#x90FD;&#x8981;&#x7528;&#x5230;&#x5B83;&#x3002;&#x8FD9;&#x91CC;&#x5199;&#x4E00;&#x7BC7;&#x7B80;&#x5355;&#x7684;&#x4F7F;&#x7528;&#x624B;&#x518C;&#xFF0C;&#x4EE5;&#x4FBF;&#x67E5;&#x9605;&#x3002; # &#x751F;&#x6210;&#x6570;&#x5217;&#xFF0C;&#x7B80;&#x5355;&#x53D8;&#x5F62; 123456x = numpy.linspace(1, 8, 8) # &#x2460; &#x751F;&#x6210;&#x7B49;&#x5DEE;&#x6570;&#x5217;print(x)print(x.reshape((2, 4))) # &#x2461; &#x53D8;&#x5F62;&#x6210; 2*4 &#x7684;&#x77E9;&#x9635;print(x.reshape((2, 2, 2))) # &#x2462; &#x53D8;&#x5F62;&#x6210; 2*2*2 &#x7684;&#x77E9;&#x9635; &#x8F93;&#x51FA;&#xFF1A; 12345678910[ 1. 2. 3. 4. 5. 6. 7. 8.] &#x2460;[[ 1. 2. 3. 4.] &#x2461; [ 5. 6. 7. 8.]][[[ 1. 2.] &#x2462; [ 3. 4.]] [[ 5. 6.] [ 7. 8.]]] &#x53D8;&#x5F62;&#x524D;&#x540E;&#x7684;&#x6570;&#x7EC4;&#x5171;&#x4EAB;&#x5185;&#x5B58; &#x53D8;&#x5F62;&#x540E;&#x7684;&#x6570;&#x7EC4;&#x548C;&#x539F;&#x6570;&#x7EC4;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#xFF0C;&#x56E0;&#x6B64;&#x4FEE;&#x6539;&#x53D8;&#x5F62;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x539F;&#x6570;&#x7EC4;&#x4E5F;&#x4F1A;&#x53D8;&#xFF1A; 12345x = numpy.linspace(1, 8, 8)y = x.reshape(2, 4)y[1, 1] = 10print(y) # &#x2460; yprint(x) # &#x2461; x &#x8F93;&#x51FA;&#xFF1A; 1234[[ 1. 2. 3. 4.] &#x2460; y [ 5. 10. 7. 8.]] [ 1. 2. 3. 4. 5. 10. 7. 8.] &#x2461; x &#x53C2;&#x6570;&#x4E3A;-1&#x7684;&#x53D8;&#x5F62; &#x53D8;&#x5F62;&#x7684;&#x53C2;&#x6570;&#x4E3A;-1&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x548C;&#x5269;&#x4F59;&#x7EF4;&#x5EA6;&#x63A8;&#x65AD;&#x51FA;&#x6765;&#xFF1A; 12x = numpy.linspace(1, 8, 8)print(x.reshape(-1, 2, 2)) &#x8F93;&#x51FA;&#xFF1A; 12345[[[ 1. 2.] [ 3. 4.]] [[ 5. 10.] [ 7. 8.]]] &#x77E9;&#x9635;&#x521D;&#x59CB;&#x5316; 12345x = numpy.zeros((2, 3, 4), numpy.uint8) # &#x2460; &#x521D;&#x59CB;&#x5316; 2*3*4 &#x5168;0&#x77E9;&#x9635;print(x)x = numpy.ones((2, 3, 4), numpy.uint8) # &#x2461; &#x521D;&#x59CB;&#x5316; 2*3*4 &#x5168;1&#x77E9;&#x9635;print(x) &#x8F93;&#x51FA;&#xFF1A; 123456789101112131415[[[0 0 0 0] &#x2460; [0 0 0 0] [0 0 0 0]] [[0 0 0 0] [0 0 0 0] [0 0 0 0]]][[[1 1 1 1] &#x2461; [1 1 1 1] [1 1 1 1]] [[1 1 1 1] [1 1 1 1] [1 1 1 1]]] &#x5982;&#x4E0B;&#x4F7F;&#x7528;array&#x3001;linspace&#x548C;zeros&#x4E09;&#x79CD;&#x5199;&#x6CD5;&#x5F97;&#x51FA;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF1A; 123456789x = numpy.array([[1, 2], [3, 4], [5, 6]], numpy.uint8) # &#x2460;y = numpy.linspace(1, 6, 6, dtype=numpy.uint8).reshape(3, 2) # &#x2461;z = numpy.zeros((3, 2), numpy.uint8) # &#x2462;z[:, 0] = [1, 3, 5]z[:, 1] = [2, 4, 6]print(x)print(y)print(z) &#x8F93;&#x51FA;&#xFF1A; 123456789[[1 2] &#x2460; x [3 4] [5 6]][[1 2] &#x2461; y [3 4] [5 6]][[1 2] &#x2462; z [3 4] [5 6]] &#x77E9;&#x9635;&#x8D4B;&#x503C; 123456789101112131415x = numpy.ones((2, 3, 4), numpy.uint8)x[:] = 2 # &#x2460; &#x5168;&#x90E8;&#x8D4B;&#x503C;&#x4E3A;2print(x)x = numpy.ones((2, 3, 4), numpy.uint8)x[1, :, :] = 4 # &#x2461; &#x4FEE;&#x6539;&#x7B2C;1&#x7EF4;&#xFF08;0 based&#xFF09;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E3A;4print(x)x = numpy.ones((2, 3, 4), numpy.uint8)x[:, 1, :] = 4 # &#x2462; &#x4FEE;&#x6539;&#x7B2C;2&#x7EF4;&#x4E3A;1&#xFF08;0 based&#xFF09;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E3A;4print(x)x = numpy.ones((2, 3, 4), numpy.uint8)x[:, :, 1] = 4 # &#x2463; &#x4FEE;&#x6539;&#x7B2C;3&#x7EF4;&#x4E3A;1&#xFF08;0 based&#xFF09;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E3A;4print(x) &#x8F93;&#x51FA;&#xFF1A; 12345678910111213141516171819202122232425262728293031[[[2 2 2 2] &#x2460; &#x5168;&#x90E8;&#x8D4B;&#x503C;&#x4E3A;2 [2 2 2 2] [2 2 2 2]] [[2 2 2 2] [2 2 2 2] [2 2 2 2]]][[[1 1 1 1] &#x2461; &#x4FEE;&#x6539;&#x7B2C;1&#x7EF4;&#x4E3A;1&#xFF08;0 based&#xFF09;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E3A;4 [1 1 1 1] [1 1 1 1]] [[4 4 4 4] [4 4 4 4] [4 4 4 4]]][[[1 1 1 1] &#x2462; &#x4FEE;&#x6539;&#x7B2C;2&#x7EF4;&#x4E3A;1&#xFF08;0 based&#xFF09;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E3A;4 [4 4 4 4] [1 1 1 1]] [[1 1 1 1] [4 4 4 4] [1 1 1 1]]][[[1 4 1 1] &#x2463; &#x4FEE;&#x6539;&#x7B2C;3&#x7EF4;&#x4E3A;1&#xFF08;0 based&#xFF09;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x4E3A;4 [1 4 1 1] [1 4 1 1]] [[1 4 1 1] [1 4 1 1] [1 4 1 1]]] &#x4FEE;&#x6539;&#x67D0;&#x5217;&#x4E3A;&#x4E00;&#x4E2A;&#x5E8F;&#x5217; 1234x = numpy.ones((2, 3, 4), numpy.uint8)x[:, :, 1] = [2, 3, 4]print(x)print(&apos;\n&apos;) &#x8F93;&#x51FA;&#xFF1A; 1234567[[[1 2 1 1] [1 3 1 1] [1 4 1 1]] [[1 2 1 1] [1 3 1 1] [1 4 1 1]]] x&#x76F8;&#x5F53;&#x4E8E;&#x7531;2&#x4E2A;3*4&#x7684;&#x77E9;&#x9635;&#x7EC4;&#x6210;&#xFF0C;&#x6B64;&#x5904;&#x7ED9;&#x6BCF;&#x4E2A;&#x77E9;&#x9635;&#x7684;&#x7B2C;1&#x5217;&#x8D4B;&#x503C;&#x4E3A;[2, 3, 4]&#x3002;&#x5DE6;&#x503C;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x5FC5;&#x987B;&#x7B49;&#x4E8E;&#x77E9;&#x9635;&#x7684;&#x884C;&#x6570;3&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x51FA;&#x9519;&#x3002; &#x53C2;&#x8003; &#x5B98;&#x7F51;&#x624B;&#x518C; NumPy v1.11&#x624B;&#x518C;&#x4E2D;&#x6587;&#x7248; &#x672C;&#x6587;&#x6D89;&#x53CA;&#x7684;&#x4EE3;&#x7801;&#x653E;&#x5728;numpySamples.py &#x5B89;&#x88C5; &#x5982;&#x679C;&#x662F;python2 $ pip install scipy &#x5982;&#x679C;&#x662F;python3&#xFF0C;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#xFF1A; $ python3 -m pip install scipy]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>基础工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Android Programming BNRG》笔记一]]></title>
    <url>%2F2017%2F09%2F10%2F2017%2F0909AndroidProgrammingBNRG01%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5B9E;&#x73B0;&#x8BE5;&#x754C;&#x9762;&#x7684;&#x521B;&#x5EFA;&#x548C;&#x6309;&#x94AE;&#x7684;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#xFF0C;&#x70B9;&#x51FB;TRUE&#x6216;FALSE&#x6309;&#x94AE;&#xFF0C;&#x5F39;&#x51FA;Toast&#x63D0;&#x793A;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - ConstraintLayout&#x5E03;&#x5C40; - &#x4E3A;&#x63A7;&#x4EF6;&#x521B;&#x5EFA;&#x53D8;&#x91CF;&#x5E76;&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570; - &#x533F;&#x540D;&#x5185;&#x90E8;&#x7C7B; - Toast&#x63A7;&#x5236; ConstraintLayout&#x5E03;&#x5C40; &#x672C;&#x7AE0;&#x4ECE;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#x754C;&#x9762;&#x5F00;&#x59CB;&#xFF0C;&#x4E3B;&#x754C;&#x9762;&#x7531;&#x4E09;&#x4E2A;&#x5143;&#x7D20;&#x7EC4;&#x6210;&#xFF1A;&#x7B2C;&#x4E00;&#x884C;&#x5C45;&#x4E2D;&#x7684;&#x201C;Hello World&quot; TextView&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x5E76;&#x6392;&#x653E;&#x7F6E;&#x7684;&#x201C;TRUE&#x201D;&#x548C;&#x201C;FALSE&#x201D;&#x4E24;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x540E;&#x5F39;&#x51FA;Toast&#xFF0C;&#x5206;&#x522B;&#x63D0;&#x793A;&#x201C;Correct!&#x201D;&#x548C;&#x201C;InCorrect!&#x201D;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x9996;&#x5148;&#x8981;&#x505A;&#x7684;&#x662F;&#x5E03;&#x5C40;&#xFF0C;&#x4E66;&#x4E2D;&#x4ECB;&#x7ECD;&#x7684;&#x6839;&#x5E03;&#x5C40;&#x8FD8;&#x662F;RelativeLayout&#xFF0C;&#x6211;&#x4F7F;&#x7528;&#x7684;Android Studio&#x7248;&#x672C;&#x662F;2.3.3&#xFF0C;&#x5B83;&#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x7684;&#x6839;&#x5E03;&#x5C40;&#x6539;&#x6210;&#x4E86;ConstraintLayout&#x3002; ConstraintLayout&#x662F;Google I/O 2016&#x63A8;&#x51FA;&#xFF0C;&#x5C06;&#x6210;&#x4E3A;&#x4E3B;&#x6D41;&#x5E03;&#x5C40;&#x6837;&#x5F0F;&#xFF0C;&#x5B8C;&#x5168;&#x66FF;&#x4EE3;&#x5176;&#x4ED6;&#x5E03;&#x5C40;&#x3002;&#x4F18;&#x70B9;&#x662F;&#x51CF;&#x5C11;&#x5E03;&#x5C40;&#x5C42;&#x7EA7;&#xFF0C;&#x4F18;&#x5316;&#x6E32;&#x67D3;&#x6027;&#x80FD;&#x3002;&#x5B83;&#x548C;iOS&#x7684;&#x5E03;&#x5C40;&#x65B9;&#x5F0F;&#x5F88;&#x50CF;&#x4E86;&#x3002; ## &#x57FA;&#x672C;&#x4F7F;&#x7528; &#x57FA;&#x672C;&#x683C;&#x5F0F;&#x4E3A; 1layout_constraint[&#x672C;&#x6E90;&#x4F4D;&#x7F6E;]_[&#x76EE;&#x6807;&#x4F4D;&#x7F6E;]=&quot;[&#x76EE;&#x6807;ID]&quot; &#x4F8B;&#x5982;&#xFF1A;app:layout_constraintTop_toBottomOf=&quot;@+id/textView&quot;&#x8868;&#x793A;&#x5C06;&#x81EA;&#x5DF1;&#x7684;&#x9876;&#x90E8;&#x5BF9;&#x9F50;&#x5230;textView&#x7684;&#x5E95;&#x90E8;&#x3002; &#x5F15;&#x5BFC;&#x7EBF; &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5F15;&#x5165;&#x5F15;&#x5BFC;&#x7EBF;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E00;&#x6761;&#x8F85;&#x52A9;&#x7EBF;&#xFF0C;&#x8BA9;&#x5176;&#x4ED6;&#x5143;&#x7D20;&#x4E0E;&#x8BE5;&#x5F15;&#x5BFC;&#x7EBF;&#x5BF9;&#x9F50;&#x6765;&#x5B8C;&#x6210;&#x5E03;&#x5C40;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x8DDD;&#x79BB;&#x5DE6;&#x8FB9;&#x7F18;10dp&#x62C9;&#x4E00;&#x6761;&#x7AD6;&#x76F4;&#x7684;&#x5F15;&#x5BFC;&#x7EBF;&#xFF0C;&#x8BA9;textView&#x4E0E;&#x8BE5;&#x5F15;&#x5BFC;&#x7EBF;&#x5BF9;&#x9F50;&#xFF1A; 1234567891011121314151617... &lt;android.support.constraint.Guideline android:id=&quot;@+id/guideLine&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:orientation=&quot;vertical&quot; app:layout_constraintGuide_begin=&quot;10dp&quot;/&gt; &lt;!-- &#x6DFB;&#x52A0;&#x5F15;&#x5BFC;&#x7EBF; --&gt; &lt;TextView android:id=&quot;@+id/textView&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Hello World.&quot; app:layout_constraintBottom_toBottomOf=&quot;parent&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; app:layout_constraintStart_toStartOf=&quot;@+id/guideLine&quot; /&gt; &lt;!-- &#x5BF9;&#x9F50;&#x5F15;&#x5BFC;&#x7EBF; --&gt;... &#x8FD0;&#x884C;&#xFF0C;&#x5F97;&#x5230;&#x754C;&#x9762;&#x5982;&#x4E0B;&#xFF1A; &#x6BD4;&#x4F8B; &#x8FD8;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x6BD4;&#x4F8B;&#x5173;&#x7CFB;&#xFF0C;&#x6446;&#x653E;&#x63A7;&#x4EF6;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x4F8B;&#x5982;&#x8BA9;textView&#x5728;&#x7AD6;&#x76F4;&#x65B9;&#x5411;&#x4E0A;&#xFF0C;&#x653E;&#x5728;&#x7236;&#x7A97;&#x53E3;&#x7684;1/4&#x5904;&#xFF1A; 123456789&lt;TextView android:id=&quot;@+id/textView&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Hello World.&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; app:layout_constraintBottom_toBottomOf=&quot;parent&quot; app:layout_constraintStart_toStartOf=&quot;@+id/guideLine&quot; app:layout_constraintVertical_bias=&quot;0.25&quot;/&gt; &lt;!-- &#x589E;&#x52A0;&#x6BD4;&#x4F8B;&#x7EA6;&#x675F; --&gt; &#x6CE8;&#x610F;&#x8FD8;&#x662F;&#x8981;&#x6307;&#x5B9A;textView&#x7684;&#x4E0A;&#x4E0B;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50;&#x5230;&#x7236;&#x7A97;&#x53E3;&#x7684;&#x4E0A;&#x4E0B;&#x8FB9;&#x7F18;&#xFF0C;&#x53EA;&#x662F;&#x591A;&#x4E86;&#x4E00;&#x6761;&#x6BD4;&#x4F8B;&#x7EA6;&#x675F;&#x3002;&#x8FD0;&#x884C;&#xFF0C;&#x5F97;&#x5230;&#x754C;&#x9762;&#x5982;&#x4E0B;&#xFF1A; &#x94FE;&#x6761;&#x6837;&#x5F0F;&#xFF08;Chain Style&#xFF09; &#x5982;&#x679C;&#x5728;&#x4E00;&#x6761;&#x7EBF;&#x4E0A;&#x6709;&#x591A;&#x4E2A;&#x5143;&#x7D20;&#x9700;&#x8981;&#x5E73;&#x5747;&#x6392;&#x5E03;&#xFF0C;&#x8FC7;&#x53BB;&#x53EF;&#x4EE5;&#x5D4C;&#x5957;&#x4E00;&#x4E2A;LinearLayout&#xFF0C;&#x73B0;&#x5728;&#x65E2;&#x7136;&#x8981;&#x5168;&#x9762;&#x4F7F;&#x7528;ConstraintLayout&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5B83;&#x7684;&#x94FE;&#x6761;&#x6837;&#x5F0F;&#x3002; &#x7ED9;&#x94FE;&#x4E0A;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x5C5E;&#x6027;layout_constraintHorizontal_chainStyle &#x6216;layout_constraintVertical_chainStyle&#xFF0C;&#x5176;&#x540E;&#x7684;&#x5143;&#x7D20;&#x901A;&#x8FC7;&#x6DFB;&#x52A0;&#x4E0A;/&#x4E0B;&#x6216;&#x5DE6;/&#x53F3;&#x8FB9;&#x7F18;&#x7EA6;&#x675F;&#x52A0;&#x5165;&#x8FD9;&#x6761;&#x94FE;&#x3002;&#x5BF9;&#x4E8E;&#x7A7A;&#x51FA;&#x7684;&#x7A7A;&#x95F4;&#x5982;&#x4F55;&#x5206;&#x914D;&#xFF0C;&#x53D6;&#x51B3;&#x4E8E;&#x94FE;&#x6761;&#x6837;&#x5F0F;&#x7684;&#x5177;&#x4F53;&#x503C;&#xFF0C;&#x5404;&#x503C;&#x7684;&#x542B;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; &#x672C;&#x7AE0;&#x4E2D;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x539F;&#x4E66;&#x662F;&#x901A;&#x8FC7;LinearLayout&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x6211;&#x6539;&#x6210;ConstraintLayout&#x540E;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; tools:context=&quot;com.palanceli.ime.bnrg01.QuizActivity&quot;&gt; &lt;TextView android:id=&quot;@+id/textView&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Hello World.&quot; app:layout_constraintStart_toStartOf=&quot;parent&quot; app:layout_constraintEnd_toEndOf=&quot;parent&quot; app:layout_constraintTop_toTopOf=&quot;parent&quot; app:layout_constraintBottom_toBottomOf=&quot;parent&quot; app:layout_constraintVertical_bias=&quot;0.25&quot;/&gt; &lt;!-- &#x8BBE;&#x7F6E;&#x94FE;&#x5934;&#xFF0C;&#x5E76;&#x4E0E;&#x5176;&#x540E;&#x7684;Button&#x624B;&#x62C9;&#x624B; --&gt; &lt;Button android:id=&quot;@+id/true_button&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text = &quot;@string/true_button&quot; app:layout_constraintTop_toBottomOf=&quot;@id/textView&quot; app:layout_constraintHorizontal_chainStyle=&quot;packed&quot; app:layout_constraintLeft_toLeftOf=&quot;parent&quot; app:layout_constraintRight_toLeftOf=&quot;@+id/false_button&quot;/&gt; &lt;Button android:id=&quot;@+id/false_button&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text = &quot;@string/false_button&quot; app:layout_constraintTop_toBottomOf=&quot;@id/textView&quot; app:layout_constraintLeft_toRightOf=&quot;@id/true_button&quot; app:layout_constraintRight_toRightOf=&quot;parent&quot;/&gt;&lt;/android.support.constraint.ConstraintLayout&gt; &#x8FD0;&#x884C;&#x540E;&#x754C;&#x9762;&#x5982;&#x4E0B;&#xFF1A; Layout&#x6839;&#x5143;&#x7D20;&#x7684;&#x8981;&#x6C42; &#x548C;LinearLayout&#x4E00;&#x6837;&#xFF0C;&#x4F5C;&#x4E3A;&#x5E03;&#x5C40;xml&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5E03;&#x5C40;&#x6839;&#x5143;&#x7D20;&#xFF0C;ConstraintLayout&#x5FC5;&#x987B;&#x6307;&#x5B9A;Android&#x8D44;&#x6E90;xml&#x7684;namespace&#x4E3A;http://schemas.android.com/&#x3002; @id&#x8FD8;&#x662F;@+id&#xFF1F; &#x4E0A;&#x9762;&#x7684;xml&#x6587;&#x4EF6;&#x4E2D;&#x6709;&#x65F6;&#x5019;&#x662F;@+id/true_button&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x662F;@id/true_button&#xFF0C;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x5462;&#xFF1F; Android&#x4E2D;&#x7684;&#x7EC4;&#x4EF6;&#x9700;&#x8981;&#x7528;&#x4E00;&#x4E2A;int&#x7C7B;&#x578B;&#x7684;&#x503C;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x5C31;&#x662F;id&#x5C5E;&#x6027;&#x503C;&#x3002;id&#x5C5E;&#x6027;&#x53EA;&#x80FD;&#x63A5;&#x53D7;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x4EE5;@&#x5F00;&#x5934;&#x7684;&#x503C;&#x3002; &#x5982;&#x679C;&#x5728;@&#x540E;&#x9762;&#x4F7F;&#x7528;&#x201C;+&#x201D;&#xFF0C;&#x8868;&#x793A;&#x5728;&#x8BBF;&#x95EE;&#x8BE5;id&#x540E;&#x9700;&#x8981;&#x4E3A;&#x4E4B;&#x5728;R.java&#x6587;&#x4EF6;&#x4E2D;&#x751F;&#x6210;&#x76F8;&#x5E94;&#x7684;int&#x7C7B;&#x578B;&#x53D8;&#x91CF;&#x3002;&#x53D8;&#x91CF;&#x540D;&#x5C31;&#x662F;&#x201C;/&#x201D;&#x540E;&#x9762;&#x7684;&#x503C;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;@+id/true_button&#x4F1A;&#x5728;R.java&#x6587;&#x4EF6;&#x4E2D;&#x751F;&#x6210;int true_button = value&#xFF0C;&#x5176;&#x4E2D;value&#x662F;&#x4E00;&#x4E2A;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x7684;&#x6570;&#x3002;&#x5982;&#x679C;&#x5728;R.java&#x4E2D;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x540C;&#x540D;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x3002; &#x5982;&#x679C;R.java&#x4E2D;&#x5DF2;&#x5B58;&#x5728;true_button&#x53D8;&#x91CF;&#xFF0C;&#x5219;&#x518D;&#x8BBF;&#x95EE;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x4E0D;&#x5E26;+&#xFF0C;&#x4F7F;&#x7528;@id/true_button&#x5373;&#x53EF;&#x3002; &#x4E0A;&#x6587;&#x4E2D;&#xFF0C;&#x5728;true_button&#x4E2D;&#x5BF9;&#x9F50;false_button&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7531;&#x4E8E;false_button&#x53D8;&#x91CF;&#x8FD8;&#x672A;&#x751F;&#x6210;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x5E26;&#x52A0;&#x53F7;&#x3002;&#x4E4B;&#x540E;&#x5728;&#x5B9A;&#x4E49;false_button&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BE5;&#x53D8;&#x91CF;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x628A;&#x52A0;&#x53F7;&#x53BB;&#x6389;&#x3002; setContentView(...)&#x51FD;&#x6570;&#x90FD;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; &#x5728;QuizActivity.java&#x4E2D;&#x7684;onCreate(...)&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x9664;&#x4E86;&#x8C03;&#x7528;&#x7236;&#x7C7B;&#x7684;&#x540C;&#x540D;&#x51FD;&#x6570;&#x5916;&#xFF0C;&#x8FD8;&#x8C03;&#x7528;&#x4E86;setContentView(...)&#xFF1A; 123456789public class QuizActivity extends AppCompatActivity { ... @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_quiz); ... }} &#x8BE5;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x6839;&#x636E;xml&#x5B9E;&#x4F8B;&#x5316;&#x6BCF;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;&#xFF0C;&#x6309;&#x7167;&#x5E03;&#x5C40;&#x6446;&#x653E;&#x8FD9;&#x4E9B;&#x63A7;&#x4EF6;&#xFF0C;&#x5E76;&#x663E;&#x793A;&#x5230;&#x5C4F;&#x5E55;&#x4E0A;&#x3002;&#x5B9E;&#x4F8B;&#x5316;&#x8FC7;&#x7A0B;&#x662F;&#x901A;&#x8FC7;LayoutInflater&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002; &#x5728;&#x7F16;&#x8BD1;Android&#x5E94;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;aapt&#xFF08;Android Asset Packaging Tool&#xFF09;&#x4F1A;&#x628A;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x6210;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5230;apk&#x5305;&#x91CC;&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x88AB;setContentView(...)&#x8BBF;&#x95EE;&#x3002; &#x5176;&#x5B83; &#x5728;xml&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5143;&#x7D20;&#x7684;&#x5BBD;&#x9AD8;&#x503C;&#x88AB;&#x8BBE;&#x4E3A;match_parent&#x6216;wrap_content&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x542B;&#x4E49;&#x5206;&#x522B;&#x662F;&#xFF1A; match_parent&#xFF1A;&#x4E0E;&#x7236;&#x7A97;&#x53E3;&#x7B49;&#x5927; wrap_content&#xFF1A;&#x4E0E;&#x5185;&#x5BB9;&#x7B49;&#x5927; &#x5C3D;&#x7BA1;ConstraintLayout&#x662F;xml&#x7684;&#x6839;&#x5E03;&#x5C40;&#x5143;&#x7D20;&#xFF0C;&#x4F46;&#x5B83;&#x4ECD;&#x7136;&#x6709;&#x7236;&#x7A97;&#x53E3;&#x2014;&#x2014;app&#x7684;&#x6700;&#x9876;&#x5C42;view&#xFF0C;&#x56E0;&#x6B64;ConstraintLayout&#x7684;&#x5BBD;&#x9AD8;&#x5747;&#x4E3A;match_parent&#x3002; &#x5982;&#x4F55;&#x5173;&#x8054;xml&#x4E2D;&#x7684;&#x63A7;&#x4EF6;&#x5230;java&#x53D8;&#x91CF;&#xFF1F; &#x901A;&#x8FC7;Activity&#x7684;&#x6210;&#x5458;&#x51FD;&#x6570;public View findViewById(int id)&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;xml&#x4E2D;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x6839;&#x636E;id&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x63D0;&#x9886;&#x5230;&#x6309;&#x94AE;&#xFF1A; 12345678910111213public class QuizActivity extends AppCompatActivity { private Button mTrueButton; private Button mFalseButton; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_quiz); mTrueButton = (Button)findViewById(R.id.true_button); mFalseButton = (Button)findViewById(R.id.false_button); ... }} &#x5982;&#x4F55;&#x54CD;&#x5E94;&#x6309;&#x94AE;&#x6D88;&#x606F;&#xFF1F; &#x7ED9;&#x6309;&#x94AE;&#x53D8;&#x91CF;&#x8BBE;&#x7F6E;Listener&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x8BE5;&#x5BF9;&#x8C61;&#x4E2D;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x54CD;&#x5E94;&#x5904;&#x7406;&#x3002; 123456789101112131415161718public class QuizActivity extends AppCompatActivity { private Button mTrueButton; ... @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_quiz); mTrueButton = (Button)findViewById(R.id.true_button); ... mTrueButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ // true_button&#x6309;&#x94AE;&#x7684;&#x54CD;&#x5E94;&#x4EE3;&#x7801; } }); ... }} mTrueButton.setOnClickListener(...)&#x7684;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x5185;&#x90E8;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002; &#x8FD9;&#x548C;iOS&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x5C31;&#x6709;&#x5F88;&#x5927;&#x5DEE;&#x5F02;&#xFF0C;iOS&#x901A;&#x8FC7;&#x59D4;&#x6258;&#x4EE3;&#x7406;&#xFF0C;&#x628A;&#x5904;&#x7406;&#x51FD;&#x6570;&#x653E;&#x5230;&#x6309;&#x94AE;&#x6240;&#x5728;&#x7684;View&#x6216;ViewController&#x4E2D;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;Android&#x5219;&#x662F;&#x5728;&#x6309;&#x94AE;&#x5185;&#x90E8;&#x6765;&#x5B9E;&#x73B0;&#xFF08;&#x5C3D;&#x7BA1;&#x4E0D;&#x662F;&#x5728;&#x6309;&#x94AE;&#x7C7B;&#x4E2D;&#x5B9E;&#x73B0;&#xFF0C;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;Listener&#xFF0C;&#x7EC8;&#x7A76;&#x662F;&#x8981;&#x5173;&#x8054;&#x5230;&#x8FD9;&#x4E2A;&#x6309;&#x94AE;&#x7C7B;&#x4E0A;&#x7684;&#xFF09;&#x3002;&#x8FD9;&#x5C31;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x5730;&#x8981;&#x751F;&#x6210;&#x5F88;&#x591A;&#x96F6;&#x788E;&#x7684;&#x6309;&#x94AE;&#x7C7B;&#xFF0C;&#x4E5F;&#x4F1A;&#x8BA9;&#x4E0A;&#x4E0B;&#x5C42;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;&#x673A;&#x5236;&#x6DF7;&#x5728;&#x4E00;&#x8D77;&#x3002;Java&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x533F;&#x540D;&#x5185;&#x90E8;&#x7C7B;&#x3002; &#x5185;&#x90E8;&#x533F;&#x540D;&#x7C7B;&#xFF08;anonymous inner class&#xFF09; &#x8FD9;&#x91CC;&#x5185;&#x90E8;&#x533F;&#x540D;&#x7C7B;&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x6700;&#x5927;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x628A;&#x4E0E;mTrueButton&#x5173;&#x8054;&#x7684;&#x4E1A;&#x52A1;&#x5C42;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x653E;&#x5230;&#x4E86;&#x4E1A;&#x52A1;&#x5C42;&#xFF08;&#x5373;QuizActivity&#xFF09;&#xFF0C;&#x800C;&#x4E0D;&#x662F;mTrueButton&#x7684;&#x673A;&#x5236;&#x5C42;&#x3002;&#x4F53;&#x73B0;&#x4E86;&#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219;&#x3002; Toast Toast&#x662F;&#x4E00;&#x4E2A;&#x63D0;&#x793A;&#x6C14;&#x6CE1;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x6D88;&#x5931;&#x3002; &#x600E;&#x4E48;&#x663E;&#x793A;Toast &#x8C03;&#x7528;Toast&#x7684;&#x9759;&#x6001;&#x51FD;&#x6570;Toast Toast::makeText(Constext context, int resId, int duration)&#x6765;&#x751F;&#x6210;&#x6C14;&#x6CE1;&#x3002; &#x5176;&#x4E2D;&#x53C2;&#x6570;context&#x662F;Activity&#x5B9E;&#x4F8B;&#xFF0C;resId&#x662F;&#x6C14;&#x6CE1;&#x4E2D;&#x7684;&#x6587;&#x5B57;&#xFF0C;duration&#x662F;&#x663E;&#x793A;&#x591A;&#x4E45;&#x540E;&#x6D88;&#x5931;&#x3002; &#x8C03;&#x7528;Toast::show()&#x663E;&#x793A;&#x6C14;&#x6CE1;&#xFF1A; 123456789101112131415161718public class QuizActivity extends AppCompatActivity { private Button mTrueButton; ... @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_quiz); mTrueButton = (Button)findViewById(R.id.true_button); ... mTrueButton.setOnClickListener(new View.OnClickListener(){ @Override public void onClick(View v){ Toast.makeText(QuizActivity.this, R.string.correct_toast, Toast.LENGTH_SHORT).show(); } }); ... }} &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;makeText&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4F7F;&#x7528;this&#xFF0C;&#x56E0;&#x4E3A;&#x6B64;&#x65F6;&#x5728;&#x4E00;&#x4E2A;&#x5185;&#x90E8;&#x533F;&#x540D;&#x7C7B;&#x91CC;&#xFF0C;&#x8FD9;&#x4E2A;this&#x8868;&#x793A;&#x8BE5;&#x533F;&#x540D;&#x7C7B;&#xFF0C;&#x9700;&#x8981;&#x6307;&#x5B9A;QuizActivity.this&#x8868;&#x660E;&#x662F;Activity&#x7684;this&#x6307;&#x9488;&#x3002; &#x4E0D;&#x8FC7;&#x8FD9;&#x4E2A;&#x8BED;&#x6CD5;&#x600E;&#x4E48;&#x7406;&#x89E3;&#x5462;&#xFF1F;&quot;QuizActivity.&quot;&#x8868;&#x793A;class&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5B83;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;this&#x5462;&#xFF1F;]]></content>
      <categories>
        <category>Android Programming</category>
      </categories>
      <tags>
        <tag>Android BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Andrew NG Machine Learning视频学习笔记四]]></title>
    <url>%2F2017%2F09%2F09%2F2017%2F0909AndrewNGMachineLearning04%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x8282;&#x4E3B;&#x8981;&#x5B66;&#x4E60;&#x4E86;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7B97;&#x6CD5;&#x3002;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x89E3;&#x51B3;&#x7684;&#x662F;&#x8F93;&#x51FA;&#x503C;&#x4E3A;&#x8FDE;&#x7EED;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x89E3;&#x51B3;&#x7684;&#x662F;&#x8F93;&#x51FA;&#x503C;&#x4E3A;&#x79BB;&#x6563;&#x7684;&#x60C5;&#x51B5;&#x3002; # &#x5047;&#x8BBE;&#x51FD;&#x6570; &#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#xFF0C;&#x5148;&#x8BA8;&#x8BBA;&#x7B80;&#x5355;&#x7684;&#x4E8C;&#x5143;&#x5206;&#x7C7B;&#xFF0C;&#x8F93;&#x51FA;&#x7A7A;&#x95F4;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x53D6;&#x503C;&#xFF1A;0&#x6216;1&#x3002;&#x6765;&#x770B;&#x4E0B;&#x56FE;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x6709;&#x524D;6&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x6309;&#x7167;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x601D;&#x8DEF;&#x53EF;&#x4EE5;&#x753B;&#x51FA;&#x84DD;&#x7EBF;&#x4F5C;&#x4E3A;&#x9884;&#x6D4B;&#x66F2;&#x7EBF;&#x3002;&#x5F53;&#x9884;&#x6D4B;&#x66F2;&#x7EBF;&#x7684;&#x53D6;&#x503C;&#x5C0F;&#x4E8E;0.5&#x65F6;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x503C;&#x4E3A;0&#x7684;&#x6982;&#x7387;&#x66F4;&#x5927;&#xFF0C;&#x5F53;&#x9884;&#x6D4B;&#x66F2;&#x7EBF;&#x7684;&#x53D6;&#x503C;&#x5927;&#x4E8E;0.5&#x65F6;&#xFF0C;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x503C;&#x4E3A;1&#x7684;&#x6982;&#x7387;&#x66F4;&#x5927;&#x3002;&#x8FD9;&#x6761;&#x66F2;&#x7EBF;&#x7528;&#x6765;&#x9884;&#x6D4B;&#x524D;6&#x4E2A;&#x6837;&#x672C;&#x65F6;&#x8FD8;&#x51D1;&#x5408;&#xFF0C;&#x4F46;&#x5F53;&#x5728;&#x6700;&#x53F3;&#x4FA7;&#x589E;&#x52A0;&#x7B2C;7&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x4F1A;&#x8BA9;&#x9884;&#x6D4B;&#x66F2;&#x7EBF;&#x53D8;&#x6210;&#x7EFF;&#x7EBF;&#xFF0C;&#x663E;&#x7136;&#x6309;&#x7167;&#x7EFF;&#x7EBF;&#x505A;&#x9884;&#x6D4B;&#xFF0C;&#x7ED3;&#x679C;&#x5C31;&#x5F88;&#x4E0D;&#x51C6;&#x786E;&#x4E86;&#x2014;&#x2014;&#x5B83;&#x4F1A;&#x628A;&#x503C;&#x4E3A;1&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x4E5F;&#x9884;&#x6D4B;&#x4E3A;0&#x3002; &#x6240;&#x4EE5;&#x672C;&#x7AE0;&#x9009;&#x53D6;&#x4E86;&#x9002;&#x5408;&#x505A;{0, 1}&#x6982;&#x7387;&#x903B;&#x8F91;&#x5224;&#x65AD;&#x7684;S&#x578B;&#x66F2;&#x7EBF;&#x6765;&#x4F5C;&#x4E3A;&#x9884;&#x6D4B;&#x51FD;&#x6570;&#xFF0C;&#x51FD;&#x6570;&#x503C;&#x8868;&#x793A;&#x8F93;&#x51FA;&#x503C;&#x53D6;1&#x7684;&#x6982;&#x7387;&#xFF1A; &#x8BE5;&#x66F2;&#x7EBF;&#x7684;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; &#x53EF;&#x4EE5;&#x628A;&#x5047;&#x8BBE;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x6210;&#x8FD9;&#x4E2A;&#x5F62;&#x72B6;&#xFF0C;&#x4E8E;&#x662F;&#xFF1A; &#x4EE3;&#x4EF7;&#x51FD;&#x6570; &#x6309;&#x7167;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x5E94;&#x4E3A;&#xFF1A; &#x4F46;&#x662F;&#x5F53;&#x628A;&#x6B64;&#x5904;&#x7684;h&#x3B8;(x)&#x4EE3;&#x5165;&#x8BE5;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x51F8;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x5B83;&#x6709;&#x5F88;&#x591A;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x8FD9;&#x5C06;&#x5F71;&#x54CD;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x6C42;&#x89E3;&#x5168;&#x5C40;&#x6700;&#x5C0F;&#x503C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x6C42;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x6B64;&#x5904;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#xFF1A; &#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6C42;&#x89E3;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x6700;&#x5C0F;&#x503C; &#x5148;&#x6765;&#x6C42;&#x89E3;&#x2202;J(&#x3B8;)/&#x2202;&#x3B8;&#xFF0C;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x771F;&#x795E;&#x5947;&#xFF0C;&#x7ED3;&#x679C;&#x7ADF;&#x7136;&#x548C;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x4E00;&#x6837;&#xFF01; &#x4E8E;&#x662F;&#x6309;&#x7167;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x7684;&#x6A21;&#x677F;&#xFF1A;]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Andrew NG Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Andrew NG Machine Learning视频学习笔记三]]></title>
    <url>%2F2017%2F09%2F04%2F2017%2F0903AndrewNGMachineLearning03%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x8282;&#x548C;&#x89C6;&#x9891;&#x6559;&#x7A0B;&#x6CA1;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF0C;&#x5B66;&#x5B8C;&#x4E86;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF0C;&#x81EA;&#x5DF1;&#x60F3;&#x4E24;&#x4E2A;&#x9898;&#x76EE;&#x505A;&#x505A;&#x5427;&#x3002; &#x9898;&#x76EE;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF0C;&#x5047;&#x8BBE;&#x7528;&#x6237;&#x8BCD;&#x5E93;&#x662F;&#x7531;&#x4E2D;&#x6587;&#x8BCD;&#x6761;&#x6216;&#x62FC;&#x97F3;&#x4E32;&#x7EC4;&#x6210;&#xFF0C;&#x8BCD;&#x6761;&#x4E2A;&#x6570;&#x548C;&#x8BCD;&#x5E93;&#x5927;&#x5C0F;&#x5448;&#x7EBF;&#x6027;&#x5173;&#x7CFB;&#x3002;&#x8BCD;&#x5E93;&#x6765;&#x81EA;&#x4E8E;libGooglePinyin&#x4E2D;&#x7684;&#x8BED;&#x6599;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5C31;&#x751F;&#x6210;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#xFF0C;&#x5E76;&#x7528;&#x6A21;&#x578B;&#x9A8C;&#x8BC1;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x3002; &#x4EE3;&#x7801;&#x6211;&#x4F20;&#x5230;&#x4E86;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7EC3;&#x4E60; &#x5355;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7EC3;&#x4E60; &#x5355;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7EC3;&#x4E60;&#x4E2D;&#xFF0C;&#x8BCD;&#x5E93;&#x91CC;&#x53EA;&#x6709;&#x4E2D;&#x6587;&#x8BCD;&#x6761;&#xFF0C;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#x5C31;&#x662F;&#x8BCD;&#x6761;&#x4E2A;&#x6570;&#xFF0C;&#x8F93;&#x51FA;&#x53D8;&#x91CF;&#x662F;&#x8BCD;&#x5E93;&#x5927;&#x5C0F;&#x3002; &#x6211;&#x622A;&#x53D6;&#x4E86;&#x4E3B;&#x8981;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647def SingleFeatureLearning(): # &#x5355;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B; dc = DataCreator() # &#x751F;&#x6210;&#x8BAD;&#x7EC3;&#x6837;&#x672C; cSamples = 30 # &#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x4E2A;&#x6570; samples = dc.CreateSampleForSingleFeature(cSamples) csvData = &apos;lines,bytes\n&apos; for s in samples: csvData += &apos;%d,%d\n&apos; % (s[0], s[1]) # &#x5C06;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x8BFB;&#x5165;dataFrame dataFrame = pandas.read_csv(io.StringIO(csvData.decode(&apos;utf-8&apos;))) logging.debug(dataFrame) # &#x5EFA;&#x7ACB;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B; regr = sklearn.linear_model.LinearRegression() # &#x62DF;&#x5408; regr.fit(dataFrame[&apos;lines&apos;].values.reshape(-1, 1), dataFrame[&apos;bytes&apos;]) # reshape(-1, 1)&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F; # &#x751F;&#x6210;&#x6D4B;&#x8BD5;&#x6837;&#x672C; cSample = 5 # &#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x4E2A;&#x6570; samples = dc.CreateSampleForSingleFeature(cSample) csvTestData = &apos;lines,bytes\n&apos; for s in samples: csvTestData += &apos;%d,%d\n&apos; % (s[0], s[1]) # &#x5C06;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x8BFB;&#x5165;dataFrame testDataFrame = pandas.read_csv(io.StringIO(csvTestData.decode(&apos;utf-8&apos;))) print(testDataFrame) # &#x9884;&#x6D4B;10000&#x6761;&#x8BCD;&#x7684;&#x5927;&#x5C0F; logging.debug(regr.predict(10000)) # &#x753B;&#x56FE; # 1. &#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x70B9; matplotlib.pyplot.scatter(dataFrame[&apos;lines&apos;], dataFrame[&apos;bytes&apos;], color=&apos;blue&apos;) # 2. &#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x7684;&#x70B9; matplotlib.pyplot.scatter(testDataFrame[&apos;lines&apos;], testDataFrame[&apos;bytes&apos;], marker=&apos;x&apos;, color=&apos;green&apos;) # 3. &#x62DF;&#x5408;&#x76F4;&#x7EBF; matplotlib.pyplot.plot(dataFrame[&apos;lines&apos;], regr.predict(dataFrame[&apos;lines&apos;].values.reshape(-1, 1)), color=&apos;red&apos;) ...... matplotlib.pyplot.show() &#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x6A2A;&#x8F74;&#x662F;&#x8BCD;&#x6761;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x7EB5;&#x8F74;&#x662F;&#x8BCD;&#x5E93;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x84DD;&#x70B9;&#x8868;&#x793A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;&#x7EFF;&#x53C9;&#x8868;&#x793A;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#xFF0C;&#x76F4;&#x7EBF;&#x662F;&#x8BAD;&#x7EC3;&#x51FA;&#x6765;&#x7684;&#x9884;&#x6D4B;&#x51FD;&#x6570;&#x3002;&#x672C;&#x4F8B;&#x4E2D;&#x5171;30&#x4E2A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;5&#x4E2A;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x3002; &#x4ECE;&#x8FD9;&#x9644;&#x56FE;&#x4E0A;&#x770B;&#x8D77;&#x6765;&#x65E0;&#x8BBA;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x8FD8;&#x662F;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#xFF0C;&#x597D;&#x50CF;&#x4E25;&#x683C;&#x9075;&#x5B88;&#x4E86;&#x4E00;&#x6B21;&#x51FD;&#x6570;&#x7684;&#x7EBF;&#x6027;&#x5173;&#x7CFB;&#x3002;&#x6211;&#x731C;&#x6D4B;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x6570;&#x636E;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x8FC7;&#x5927;&#x5BFC;&#x81F4;&#x7684;&#x8089;&#x773C;&#x65E0;&#x6CD5;&#x5728;&#x56FE;&#x5F62;&#x4E0A;&#x5206;&#x8FA8;&#x8BEF;&#x5DEE;&#x4E86;&#x3002;&#x8FD9;&#x5957;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x8BCD;&#x6761;&#x6570;&#x5728;(6000, 60000)&#x4E4B;&#x95F4;&#x3002; &#x53EF;&#x4EE5;&#x628A;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x4E2D;&#x8BCD;&#x6761;&#x6570;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x7F29;&#x5C0F;&#x5230;&#x51E0;&#x767E;&#x7684;&#x91CF;&#x7EA7;&#xFF0C;&#x6837;&#x672C;&#x4E2A;&#x6570;&#x4E0D;&#x53D8;&#xFF0C;&#x56FE;&#x5F62;&#x5C31;&#x53D8;&#x6210;&#x8FD9;&#x6837;&#x4E86;&#xFF1A; &#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7EC3;&#x4E60; &#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7EC3;&#x4E60;&#x4E2D;&#xFF0C;&#x8BCD;&#x5E93;&#x91CC;&#x5305;&#x542B;&#x4E2D;&#x6587;&#x8BCD;&#x6761;&#x548C;&#x62FC;&#x97F3;&#x4E32;&#x3002;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x4E2A;&#x6570;&#x4E0D;&#x4E00;&#x5B9A;&#x76F8;&#x7B49;&#xFF0C;&#x6709;&#x7684;&#x8BCD;&#x4EC5;&#x6709;&#x4E2D;&#x6587;&#x8BCD;&#x6761;&#xFF0C;&#x6709;&#x7684;&#x8BCD;&#x53EA;&#x6709;&#x6C49;&#x8BED;&#x62FC;&#x97F3;&#x3002;&#x8F93;&#x51FA;&#x53D8;&#x91CF;&#x662F;&#x8BCD;&#x5E93;&#x5927;&#x5C0F;&#x3002;&#x4E3B;&#x5E72;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546def Main(self): # &#x4E8C;&#x5143;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B; dataCreator = DataCreator() # &#x751F;&#x6210;&#x8BAD;&#x7EC3;&#x6837;&#x672C; trainingDataFrame = self.createSampleDataFrame(dataCreator, 30) # &#x5EFA;&#x7ACB;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B; regr = sklearn.linear_model.LinearRegression() # &#x62DF;&#x5408; regr.fit(trainingDataFrame[[&apos;hanziLines&apos;, &apos;pinyinLines&apos;]].values.reshape(-1, 2), trainingDataFrame[&apos;bytes&apos;]) # &#x751F;&#x6210;&#x6D4B;&#x8BD5;&#x6837;&#x672C; testingDataFrame = self.createSampleDataFrame(dataCreator, 5) # &#x9A8C;&#x8BC1;&#x9884;&#x6D4B; predictBytes = regr.predict(testingDataFrame[[&apos;hanziLines&apos;, &apos;pinyinLines&apos;]].values.reshape(-1, 2)) print(predictBytes) # &#x6253;&#x5370;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#x548C;&#x9884;&#x6D4B;&#x7ED3;&#x679C; print(pandas.concat([testingDataFrame, pandas.Series(predictBytes, name=&quot;predict&quot;)], axis=1)) # &#x753B;&#x56FE; fig = matplotlib.pyplot.figure() ax = mpl_toolkits.mplot3d.Axes3D(fig) # &#x7ED8;&#x5236;&#x8BAD;&#x7EC3;&#x6837;&#x672C; ax.scatter(trainingDataFrame[&apos;hanziLines&apos;], trainingDataFrame[&apos;pinyinLines&apos;], trainingDataFrame[&apos;bytes&apos;]) # &#x7ED8;&#x5236;&#x6D4B;&#x8BD5;&#x6837;&#x672C; ax.scatter(testingDataFrame[&apos;hanziLines&apos;], testingDataFrame[&apos;pinyinLines&apos;], testingDataFrame[&apos;bytes&apos;], marker=&apos;+&apos;, color=&apos;red&apos;) # &#x7ED8;&#x5236;&#x9884;&#x6D4B;&#x6837;&#x672C; ax.scatter(testingDataFrame[&apos;hanziLines&apos;], testingDataFrame[&apos;pinyinLines&apos;], predictBytes, marker=&apos;X&apos;, color=&apos;green&apos;) # &#x7ED8;&#x5236;&#x9884;&#x6D4B;&#x5E73;&#x9762; xSurf, ySurf = numpy.meshgrid(numpy.linspace(trainingDataFrame[&apos;hanziLines&apos;].min(), trainingDataFrame[&apos;hanziLines&apos;].max(), 100), numpy.linspace(trainingDataFrame[&apos;pinyinLines&apos;].min(), trainingDataFrame[&apos;pinyinLines&apos;].max(), 100)) zSurf = predictBytes[0] * xSurf + predictBytes[1] * ySurf + predictBytes[2] # ax.plot_surface(xSurf, ySurf, zSurf, color=&apos;None&apos;, alpha = 0.4) # &#x8BBE;&#x7F6E;&#x5750;&#x6807;&#x8F74; matplotlib.pyplot.title(&apos;[hanziLines, pinyinLines] - file bytes relationship&apos;) ax.set_xlabel(&apos;hanziLines&apos;) ax.set_ylabel(&apos;pinyinLines&apos;) ax.set_zlabel(&apos;bytes&apos;) matplotlib.pyplot.show() &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 123456 hanziLines pinyinLines bytes predict0 318 562 6017 6152.1733951 581 500 7477 7270.2847042 182 272 3175 3145.8661783 614 246 5619 5554.2441394 278 181 3040 3038.543497 hanziLines&#x3001;pinyinLines&#x662F;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x8F93;&#x5165;&#x53C2;&#x6570;&#xFF0C;bytes&#x662F;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x8F93;&#x51FA;&#x53C2;&#x6570;&#xFF0C;predict&#x662F;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x3002;&#x56FE;&#x5F62;&#x5982;&#x4E0B;&#xFF1A; &#x8FD8;&#x4E0D;&#x4F1A;&#x7ED8;&#x5236;&#x5E73;&#x9762;&#xFF0C;&#x6211;&#x628A;&#x5B83;&#x7FFB;&#x8F6C;&#x4E2A;&#x89C6;&#x89D2;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x7684;&#x5E73;&#x9762;&#xFF1A; &#x603B;&#x7ED3; &#x505A;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5DF2;&#x7ECF;&#x8DDF;&#x7814;&#x7A76;&#x6CA1;&#x591A;&#x5927;&#x5173;&#x7CFB;&#x4E86;&#xFF0C;&#x7814;&#x7A76;&#x7684;&#x65B9;&#x6CD5;&#x5728;&#x524D;&#x9762;&#x4E24;&#x8282;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x5DE5;&#x7A0B;&#x5B9E;&#x73B0;&#xFF0C;numpy&#x3001;pandas&#x3001;sklearn&#x548C;matplotlib&#x7684;&#x4F7F;&#x7528;&#x4E86;&#x3002; &#x5728;&#x505A;&#x7B2C;&#x4E00;&#x4E2A;&#x7EC3;&#x4E60;&#x7684;&#x65F6;&#x5019;&#x611F;&#x5230;&#x6709;&#x4E9B;&#x5931;&#x671B;&#xFF0C;&#x8FD9;&#x4E2A;&#x7EC3;&#x4E60;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x901A;&#x8FC7;&#x6563;&#x843D;&#x5728;&#x4E00;&#x6761;&#x76F4;&#x7EBF;&#x4E0A;&#x7684;&#x82E5;&#x5E72;&#x4E2A;&#x70B9;&#x63CF;&#x7ED8;&#x51FA;&#x8FD9;&#x6761;&#x76F4;&#x7EBF;&#x800C;&#x5DF2;&#xFF0C;&#x5982;&#x679C;&#x77E5;&#x9053;&#x622A;&#x8DDD;&#x548C;&#x659C;&#x7387;&#xFF0C;&#x76F4;&#x63A5;&#x753B;&#x51FA;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;&#x5728;&#x5B8C;&#x5168;&#x4E0D;&#x77E5;&#x9053;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x80FD;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x8111;&#x5B50;&#x91CC;&#x8BA4;&#x4E3A;&#x7684;&#x662F;&#x6254;&#x7ED9;&#x4ED6;&#x4E00;&#x5806;&#x6570;&#x636E;&#xFF0C;&#x5B83;&#x80FD;&#x81EA;&#x5DF1;&#x627E;&#x51FA;&#x89C4;&#x5F8B;&#xFF0C;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x3002;&#x4ECE;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x4E0A;&#x770B;&#x6765;&#x8FD8;&#x4E0D;&#x662F;&#x8981;&#x9760;&#x4EBA;&#x5224;&#x65AD;&#x66F2;&#x7EBF;&#x7684;&#x8D70;&#x5411;&#xFF0C;&#x8FDB;&#x800C;&#x9009;&#x62E9;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x624D;&#x80FD;&#x8BAD;&#x7EC3;&#x51FA;&#x4E00;&#x6761;&#x76F4;&#x7EBF;&#x561B;&#x3002;&#x4EF7;&#x503C;&#x53EA;&#x662F;&#x5728;&#x4E8E;&#x8FD9;&#x6761;&#x76F4;&#x7EBF;&#x548C;&#x5404;&#x70B9;&#x8DDD;&#x79BB;&#x5E73;&#x65B9;&#x548C;&#x6700;&#x5C0F;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x4E4B;&#x4E3A;&#x8BAD;&#x7EC3;&#x8BEF;&#x5DEE;&#x3002;&#x800C;&#x4E14;&#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x7EE7;&#x7EED;&#x5EF6;&#x4F38;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x70B9;&#x672A;&#x5FC5;&#x9075;&#x5FAA;&#x8FD9;&#x6761;&#x76F4;&#x7EBF;&#xFF0C;&#x5230;&#x90A3;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x5C31;&#x4E0D;&#x51C6;&#x786E;&#x4E86;&#x3002;&#x90A3;&#x4E48;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x667A;&#x80FD;&#x6027;&#x5982;&#x4F55;&#x4F53;&#x73B0;&#x5462;&#xFF1F; &#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x770B;&#x5F85;&#x8FD9;&#x4E2A;&#x4E16;&#x754C;&#x7684;&#x8FD0;&#x884C;&#x89C4;&#x5F8B;&#x3002;&#x5982;&#x679C;&#x662F;&#x673A;&#x68B0;&#x8BBA;&#x7684;&#x4E16;&#x754C;&#x89C2;&#xFF0C;&#x8BA4;&#x4E3A;&#x4E16;&#x754C;&#x7684;&#x8FD0;&#x884C;&#x7531;&#x82E5;&#x5E72;&#x4E2A;&#x53C2;&#x6570;&#x51B3;&#x5B9A;&#xFF0C;&#x53EA;&#x8981;&#x6536;&#x96C6;&#x5168;&#x4E86;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#xFF0C;&#x5C31;&#x4E00;&#x5B9A;&#x80FD;&#x63A8;&#x5BFC;&#x51FA;&#x5B83;&#x7684;&#x8FD0;&#x884C;&#x8F68;&#x8FF9;&#xFF0C;&#x90A3;&#x4E48;&#x4ECE;&#x65B9;&#x6CD5;&#x8BBA;&#x4E0A;&#x6765;&#x8BB2;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x627E;&#x51FA;&#x8FD0;&#x884C;&#x89C4;&#x5F8B;&#x548C;&#x548C;&#x53C2;&#x6570;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E9B;&#x5927;&#x6570;&#x636E;&#x76EE;&#x524D;&#x6050;&#x6015;&#x53EA;&#x6709;&#x4E0A;&#x5E1D;&#x638C;&#x63E1;&#x3002;&#x9488;&#x5BF9;&#x672C;&#x8282;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8BCD;&#x6761;&#x4E2A;&#x6570;&#xFF0C;&#x5E73;&#x5747;&#x8BCD;&#x957F;&#x6216;&#x8005;&#x6BCF;&#x4E00;&#x6761;&#x8BCD;&#x7684;&#x957F;&#x5EA6;&#x5C31;&#x80FD;&#x7CBE;&#x786E;&#x77E5;&#x9053;&#x5B83;&#x6240;&#x5360;&#x7528;&#x7684;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3002;&#x4F46;&#x5728;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F88;&#x53EF;&#x80FD;&#x62FF;&#x4E0D;&#x5230;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#xFF0C;&#x6216;&#x8005;&#x6839;&#x672C;&#x4E0D;&#x77E5;&#x9053;&#x8FD8;&#x6709;&#x8BCD;&#x957F;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x5728;&#x8BA1;&#x7B97;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x65F6;&#x4F1A;&#x8D77;&#x4F5C;&#x7528;&#xFF0C;&#x5176;&#x5B9E;&#x76F8;&#x5173;&#x7684;&#x53C2;&#x6570;&#x8FD8;&#x6709;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x3001;&#x6587;&#x4EF6;&#x5934;&#x7B49;&#x7B49;&#x3002;&#x5728;&#x62FF;&#x4E0D;&#x5168;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F20;&#x7EDF;&#x7684;&#x8BA1;&#x7B97;&#x65B9;&#x5F0F;&#x53EA;&#x80FD;&#x675F;&#x624B;&#x65E0;&#x7B56;&#x3002;&#x800C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x601D;&#x8DEF;&#x5728;&#x521D;&#x6B65;&#x5224;&#x65AD;&#x8FD9;&#x8FD1;&#x4F3C;&#x662F;&#x6761;&#x76F4;&#x7EBF;&#x6216;&#x8005;&#x5E73;&#x9762;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6839;&#x636E;&#x4E00;&#x6279;&#x6570;&#x636E;&#x5C31;&#x80FD;&#x5224;&#x65AD;&#x66F4;&#x591A;&#x7684;case&#xFF0C;&#x548C;&#x4F20;&#x7EDF;&#x65B9;&#x5F0F;&#x76F8;&#x6BD4;&#x786E;&#x5B9E;&#x89E3;&#x51B3;&#x4E86;&#x95EE;&#x9898;&#x3002; &#x81F3;&#x4E8E;&#x5F53;&#x6269;&#x5927;&#x4E86;&#x8BAD;&#x7EC3;&#x96C6;&#xFF0C;&#x5982;&#x679C;&#x540E;&#x9762;&#x7684;&#x70B9;&#x4E0D;&#x518D;&#x9075;&#x5FAA;&#x76F4;&#x7EBF;&#xFF0C;&#x90A3;&#x4E48;&#x8BAD;&#x7EC3;&#x65B9;&#x6CD5;&#x4E5F;&#x5C31;&#x5E94;&#x5F53;&#x76F8;&#x5E94;&#x5730;&#x8C03;&#x6574;&#xFF0C;&#x91C7;&#x7528;&#x5206;&#x6BB5;&#x9884;&#x6D4B;&#xFF0C;&#x6839;&#x636E;&#x540E;&#x7EED;&#x6BB5;&#x843D;&#x7684;&#x7279;&#x5F81;&#x9009;&#x62E9;&#x76F8;&#x5E94;&#x5730;&#x6A21;&#x578B;&#x3002;&#x603B;&#x4E4B;&#xFF0C;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x8FD8;&#x6CA1;&#x6709;&#x795E;&#x5230;&#x53EA;&#x6254;&#x7ED9;&#x5B83;&#x4E00;&#x5806;&#x6570;&#x636E;&#xFF0C;&#x5B83;&#x5C31;&#x80FD;&#x6BEB;&#x65E0;&#x6761;&#x4EF6;&#x5730;&#x9884;&#x77E5;&#x672A;&#x6765;&#x7684;&#x7A0B;&#x5EA6;&#x3002;&#x6A21;&#x578B;&#x7684;&#x9009;&#x62E9;&#x5F88;&#x4F9D;&#x8D56;&#x4E8E;&#x4EBA;&#x5BF9;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x76EE;&#x524D;&#x5BF9;&#x4E8E;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x7406;&#x89E3;&#x3002; &#x673A;&#x5668;&#x5B66;&#x4E60;&#x548C;&#x4FDD;&#x5B88;&#x4E3B;&#x4E49; &#x6700;&#x540E;&#x6211;&#x7A81;&#x7136;&#x8054;&#x60F3;&#x5230;&#x201C;&#x4FDD;&#x5B88;&#x4E3B;&#x4E49;&#x201D;&#x8FD9;&#x4E2A;&#x601D;&#x60F3;&#x6D41;&#x6D3E;&#xFF0C;&#x611F;&#x89C9;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x8DDF;&#x4FDD;&#x5B88;&#x4E3B;&#x4E49;&#x7684;&#x4E16;&#x754C;&#x89C2;&#x5F88;&#x50CF;&#x2014;&#x2014;&#x8FD9;&#x4E2A;&#x4E16;&#x754C;&#x6CA1;&#x6709;&#x4E0A;&#x5E1D;&#xFF0C;&#x6CA1;&#x6709;&#x8C01;&#x80FD;&#x81EA;&#x4E0A;&#x800C;&#x4E0B;&#x5730;&#x8BBE;&#x8BA1;&#x597D;&#x4E00;&#x4E2A;&#x4F53;&#x7CFB;&#x89C4;&#x5F8B;&#xFF0C;&#x4E5F;&#x5C31;&#x6CA1;&#x6709;&#x8C01;&#x80FD;&#x591F;&#x7CBE;&#x786E;&#x5730;&#x63CF;&#x8FF0;&#x51FA;&#x8FD9;&#x4E2A;&#x89C4;&#x5F8B;&#x3002;&#x4EBA;&#x4EEC;&#x80FD;&#x505A;&#x7684;&#x53EA;&#x662F;&#x56FA;&#x5B88;&#x5E76;&#x57FA;&#x4E8E;&#x81EA;&#x5DF1;&#x638C;&#x63E1;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E00;&#x70B9;&#x4E00;&#x70B9;&#x5730;&#x6269;&#x5927;&#x81EA;&#x5DF1;&#x7684;&#x8BA4;&#x77E5;&#x8FB9;&#x754C;&#xFF0C;&#x53EA;&#x4FE1;&#x4EFB;&#x81EA;&#x5DF1;&#x8BA4;&#x77E5;&#x7248;&#x56FE;&#x5185;&#x7684;&#x4E1C;&#x897F;&#x3002; &#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E0D;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#x5417;&#xFF1F;&#x9488;&#x5BF9;&#x672C;&#x8282;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x5E76;&#x6CA1;&#x6709;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x53BB;&#x601D;&#x8003;&#x5B8C;&#x7F8E;&#x7684;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x53EA;&#x77E5;&#x9053;&#x8BCD;&#x6761;&#x4E2A;&#x6570;&#x8FD9;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#xFF0C;&#x521D;&#x6B65;&#x5224;&#x65AD;&#x5B83;&#x548C;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x662F;&#x4E2A;&#x7EBF;&#x6027;&#x5173;&#x7CFB;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x5F15;&#x5165;&#x4E00;&#x5143;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x65B9;&#x6CD5;&#xFF1B;&#x540E;&#x6765;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x9664;&#x4E86;&#x4E2D;&#x6587;&#x8BCD;&#x6761;&#xFF0C;&#x8FD8;&#x6709;&#x62FC;&#x97F3;&#x8BCD;&#x6761;&#xFF0C;&#x518D;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#x53D8;&#x6210;&#x4E86;&#x4E8C;&#x5143;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF1B;&#x968F;&#x7740;&#x6211;&#x4EEC;&#x8BA4;&#x77E5;&#x7684;&#x6269;&#x5C55;&#xFF0C;&#x53EF;&#x80FD;&#x8FD8;&#x4F1A;&#x77E5;&#x9053;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#x3001;&#x6587;&#x4EF6;&#x5934;&#x3001;&#x63A7;&#x5236;&#x7B26;&#x53F7;&#x7B49;&#x7B49;&#xFF0C;&#x6162;&#x6162;&#x628A;&#x8FD9;&#x4E9B;&#x7279;&#x5F81;&#x52A0;&#x5165;&#x5230;&#x6A21;&#x578B;&#x8BAD;&#x7EC3;&#x91CC;&#x6765;&#xFF0C;&#x76F4;&#x5230;&#x6700;&#x540E;&#x7684;&#x8BEF;&#x5DEE;&#x903C;&#x8FD1;&#x96F6;&#xFF0C;&#x90A3;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x7684;&#x516C;&#x5F0F;&#x5C31;&#x9010;&#x6B65;&#x6F14;&#x53D8;&#x6210;&#x4E0A;&#x5E1D;&#x89C6;&#x89D2;&#x7684;&#x5B8C;&#x7F8E;&#x516C;&#x5F0F;&#x4E86;&#x3002; &#x53C2;&#x8003; sklearn&#x5B98;&#x65B9;&#x6587;&#x6863; pandas&#x5B98;&#x65B9;&#x6587;&#x6863; matplotlib&#x5B98;&#x65B9;&#x6587;&#x6863; numpy&#x5FEB;&#x901F;&#x5165;&#x95E8; &#x4E00;&#x5143;&#x3001;&#x4E8C;&#x5143;&#x7279;&#x5F81;&#x7684;sklearn&#x793A;&#x4F8B; &#x300A;10 Minutes to pandas&#x300B;&#x4E2D;&#x6587;&#x7248;]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Andrew NG Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Andrew NG Machine Learning视频学习笔记二]]></title>
    <url>%2F2017%2F09%2F03%2F2017%2F0903AndrewNGMachineLearning02%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x8282;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x4E86;&#x591A;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x3002; # &#x591A;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52; &#x5F53;&#x5F15;&#x5165;&#x591A;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x5982;&#x623F;&#x4EF7;&#x7684;&#x9AD8;&#x4F4E;&#x53EF;&#x80FD;&#x4E0D;&#x53EA;&#x662F;&#x53D6;&#x51B3;&#x4E8E;&#x623F;&#x5C4B;&#x5927;&#x5C0F;&#xFF0C;&#x8FD8;&#x53D6;&#x51B3;&#x4E8E;&#x5C45;&#x5BA4;&#x4E2A;&#x6570;&#x3001;&#x5E74;&#x9650;&#x7B49;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x53D8;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x6A21;&#x578B;&#x7684;&#x7279;&#x5F81;&#x4E3A;&#xFF1A;(x1, x2, ..., xn) &#x5E38;&#x7528;&#x6807;&#x8BB0; n &#x8868;&#x793A;&#x7279;&#x5F81;&#x7684;&#x6570;&#x91CF; x(i) &#x7B2C;i&#x4E2A;&#x8BAD;&#x7EC3;&#x5B9E;&#x4F8B;&#xFF0C;&#x4E5F;&#x662F;&#x7279;&#x5F81;&#x77E9;&#x9635;&#x4E2D;&#x7B2C;i&#x884C; xj(i) &#x7B2C;i&#x4E2A;&#x8BAD;&#x7EC3;&#x5B9E;&#x4F8B;&#x7684;&#x7B2C;j&#x4E2A;&#x7279;&#x5F81;&#xFF0C;&#x5373;&#x7279;&#x5F81;&#x77E9;&#x9635;&#x4E2D;&#x7B2C;i&#x884C;&#x7B2C;j&#x5217; &#x9884;&#x6D4B;&#x51FD;&#x6570; &#x9884;&#x6D4B;&#x591A;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;&#xFF1A;h&#x3B8;(x) = &#x3B8;0 + &#x3B8;1x1 + &#x3B8;2x2 + ... + &#x3B8;nxn &#x4E3A;&#x4E86;&#x7B80;&#x5316;&#x516C;&#x5F0F;&#xFF0C;&#x5F15;&#x5165;x0 = 1&#xFF0C;&#x9884;&#x6D4B;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; &#x4EE3;&#x4EF7;&#x51FD;&#x6570; &#x6839;&#x636E;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#xFF08;&#x8BEF;&#x5DEE;&#x7684;&#x5E73;&#x65B9;&#x548C;&#xFF09;&#xFF0C;&#x53EF;&#x5F97;&#xFF1A; &#x5BF9;&#x9884;&#x6D4B;&#x51FD;&#x6570;&#x6C42;&#x504F;&#x5BFC;&#xFF1A; &#x5BF9;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x6C42;&#x504F;&#x5BFC;&#xFF1A; &#x68AF;&#x5EA6;&#x4E0B;&#x964D; &#x4E8E;&#x662F;&#x591A;&#x53D8;&#x91CF;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x7B97;&#x6CD5;&#x4E3A;&#xFF1A; &#x5C06;&#x2460;&#x4EE3;&#x5165;&#x4E0A;&#x5F0F;&#xFF0C;&#x5F97;&#x5230;&#x591A;&#x53D8;&#x91CF;&#x7684;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#xFF0C;&#x5728;&#x521D;&#x59CB;&#x65F6;&#x53EF;&#x968F;&#x673A;&#x9009;&#x62E9;&#x4E00;&#x7EC4;&#x53C2;&#x6570;&#xFF0C;&#x6309;&#x7167;&#xFF1A; &#x8FED;&#x4EE3;&#xFF0C;&#x76F4;&#x5230;&#x9AD8;&#x5EA6;&#x5DEE;&#x6536;&#x655B;&#x3002; &#x591A;&#x9879;&#x5F0F;&#x56DE;&#x5F52; &#x591A;&#x9879;&#x5F0F;&#x56DE;&#x5F52; &#x5982;&#x679C;&#x9884;&#x6D4B;&#x6A21;&#x578B;&#x548C;&#x7279;&#x5F81;&#x503C;&#x4E0D;&#x662F;&#x4E00;&#x6B21;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x662F;&#x4E8C;&#x6B21;&#x6216;&#x4E09;&#x6B21;&#x5173;&#x7CFB;&#xFF0C;&#x5982; h&#x3B8;(x) = &#x3B8;0 + &#x3B8;1x1 + &#x3B8;2x22 + &#x3B8;3x33 &#x8FD9;&#x5C31;&#x628A;&#x6A21;&#x578B;&#x8F6C;&#x6210;&#x4E86;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x6A21;&#x578B;&#x3002; &#x6B63;&#x89C4;&#x65B9;&#x7A0B; &#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x662F;&#x6C42;&#x89E3;J&#x6700;&#x5C0F;&#x503C;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6848;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x6848;&#x662F;&#x5BF9;J&#x6C42;&#x3B8;&#x7684;&#x504F;&#x5BFC;&#xFF0C;&#x5E76;&#x4EE4;&#x504F;&#x5BFC;&#x4E3A;0&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5F97;&#x51FA;&#x4E86;&#x5C40;&#x90E8;&#x6700;&#x5C0F;&#x503C;&#xFF0C;&#x4E00;&#x6B65;&#x8BA1;&#x7B97;&#x51FA;&#x4EE3;&#x4EF7;&#x6700;&#x5C0F;&#x7684;&#x89E3;&#x3002; &#x4EE4;&#x7279;&#x5F81;&#x5411;&#x91CF;X&#x3001;&#x6807;&#x8BB0;&#x7A7A;&#x95F4;Y&#x548C;&#x53C2;&#x6570;&#x5411;&#x91CF;&#x3B8;&#x5206;&#x522B;&#x4E3A;&#xFF1A; &#x6545;&#xFF1A; &#x25BD;&#x3B8;J(&#x3B8;) = &#x25BD;&#x3B8;(1/2) &#xD7; (X&#x3B8; - y)T(X&#x3B8; - y) = (1/2) &#xD7; &#x25BD;&#x3B8;(&#x3B8;TXT - yT)(X&#x3B8; - y) = (1/2) &#xD7; &#x25BD;&#x3B8;(&#x3B8;TXTX&#x3B8; - &#x3B8;TXTy - yTX&#x3B8; - yTy) &#x3B8;T&#x662F;1&#xD7;n&#x77E9;&#x9635;&#xFF0C;XT&#x662F;n&#xD7;m&#x77E9;&#x9635;&#xFF0C;X&#x662F;m&#xD7;n&#x77E9;&#x9635;&#xFF0C;&#x3B8;&#x662F;n&#xD7;1&#x77E9;&#x9635;&#xFF0C;&#x6545;&#x3B8;TXTX&#x3B8;&#x662F;&#x4E2A;&#x5B9E;&#x6570;&#xFF0C;&#x4E0A;&#x5F0F;&#x62EC;&#x53F7;&#x5185;&#x7684;&#x591A;&#x9879;&#x5F0F;&#x6700;&#x7EC8;&#x4E5F;&#x662F;&#x5B9E;&#x6570;&#x3002;&#x5BF9;&#x4E8E; &#x2200;a&#x2208;R =&gt; tra = a &#x6545;&#x4E0A;&#x5F0F; &#x25BD;&#x3B8;J(&#x3B8;) = (1/2) &#xD7; &#x25BD;&#x3B8; tr(&#x3B8;TXTX&#x3B8; - &#x3B8;TXTy - yTX&#x3B8; + yTy) = (1/2) &#xD7; &#x25BD;&#x3B8; (tr(&#x3B8;TXTX&#x3B8;) - tr(&#x3B8;TXTy) - tr(yTX&#x3B8;) + tr(yTy)) &#x5176;&#x4E2D; tr(&#x3B8;TXTy) = tr(&#x3B8;TXTy)T = tr(yT(&#x3B8;TXT)T) = tr(yTX&#x3B8;) &#x6545;&#x4E0A;&#x5F0F; &#x25BD;&#x3B8;J(&#x3B8;) = (1/2) &#xD7; &#x25BD;&#x3B8; ( tr(&#x3B8;TXTX&#x3B8;) - 2tr(yTX&#x3B8;) + tr(yTy) ) &#x2026;&#x2026;&#x2460; &#x5DF2;&#x77E5;&#x516C;&#x5F0F;&#xFF1A;&#x25BD;AABATC = BTATCT + BATC &#x4EE4;AT = &#x3B8;&#xFF0C; B = BT = XTX&#xFF0C; C = I&#xFF0C; A = &#x3B8;T&#xFF0C;&#x4EE3;&#x5165;&#x516C;&#x5F0F;&#x5F97;&#xFF1A; &#x25BD;&#x3B8;tr(&#x3B8;TXTX&#x3B8;I) = XTX&#x3B8;I + XTX&#x3B8;I = XTX&#x3B8; + XTX&#x3B8; = 2XTX&#x3B8; &#x2026;&#x2026;&#x2461; &#x5DF2;&#x77E5;&#x516C;&#x5F0F;&#xFF1A;&#x25BD;Atr(AB) = BT &#x6545;&#xFF0C;&#x25BD;Atr(yTX&#x3B8;) = &#xFF08;yTX)T = XTy &#x2026;&#x2026;&#x2462; &#x5C06;&#x2461;&#x2462;&#x4EE3;&#x5165;&#x2460;&#x5F97;&#xFF1A; &#x25BD;&#x3B8;J(&#x3B8;) = (1/2) &#xD7; (2XTX&#x3B8; - 2XTy) = XTX&#x3B8; - XTy &#x4E8E;&#x662F;&#xFF0C;&#x6C42;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;J&#x3B8;&#x503C;&#x6700;&#x5C0F;&#x7684;&#x53C2;&#x6570;&#x96C6;&#x3B8;&#xFF0C;&#x53EA;&#x987B;&#xFF1A;&#x25BD;&#x3B8;J(&#x3B8;) = 0 &#x5373; XTX&#x3B8; = XTy =&gt; &#x3B8; = (XTX)-1XTy &#x901A;&#x8FC7;&#x6B63;&#x89C4;&#x65B9;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x4EE4;&#x8BEF;&#x5DEE;&#x6700;&#x5C0F;&#x7684;&#x53C2;&#x6570;&#x5411;&#x91CF;&#xFF0C;&#x76F8;&#x6BD4;&#x4E8E;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#xFF0C;&#x6B63;&#x89C4;&#x65B9;&#x7A0B;&#x4E0D;&#x9700;&#x8981;&#x591A;&#x6B21;&#x8FED;&#x4EE3;&#xFF0C;&#x76F4;&#x63A5;&#x8BA1;&#x7B97;&#x51FA;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x5176;&#x5B9E;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x601D;&#x8DEF;&#x662F;&#xFF1A;&#x82E5;&#x5E0C;&#x671B;&#x9884;&#x6D4B;&#x51FD;&#x6570;&#x62DF;&#x5408;&#x51FA;Y&#xFF0C;&#x5219;&#x4EE4;H&#x3B8;(X) = Y&#xFF0C; &#x800C;H&#x3B8; = X &#xD7; &#x3B8;&#xFF0C;&#x6545;X &#xD7; &#x3B8; = Y&#x5373;&#x53EF;&#x6C42;&#x89E3;&#x3B8;&#x3002; &#x663E;&#x7136;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;X-1X&#x3B8; = X-1Y&#x6C42;&#x89E3;&#xFF0C;&#x4F46;&#x662F;&#x4EC5;&#x5F53;X&#x662F;&#x65B9;&#x9635;&#x65F6;&#x624D;&#x5B58;&#x5728;&#x9006;&#x77E9;&#x9635;&#xFF0C;&#x6240;&#x4EE5;&#x5E94;&#x5148;&#x628A;&#x3B8;&#x7684;&#x4E58;&#x6570;&#x53D8;&#x6210;&#x65B9;&#x9635;&#xFF1A;X-1X&#x3B8; = XTY =&gt; &#x3B8; = (XTX)-1XTY &#x8FD9;&#x5C31;&#x5F97;&#x5230;&#x4E0E;&#x6B63;&#x89C4;&#x65B9;&#x7A0B;&#x76F8;&#x540C;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x53EF;&#x662F;(XTX)-1&#x4E0D;&#x4E00;&#x5B9A;&#x5B58;&#x5728;&#x554A;&#xFF1F;&#x540E;&#x9762;&#x4F1A;&#x4ECB;&#x7ECD;&#x5B83;&#x4E0D;&#x5B58;&#x5728;&#x65F6;&#x7684;&#x5904;&#x7406;&#x65B9;&#x6CD5;&#x3002; &#x77E9;&#x9635;A&#x53EF;&#x9006;&#x7684;&#x5145;&#x8981;&#x6761;&#x4EF6;&#x662F;|A| &#x2260;0 &gt; &#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;&#xFF08;&#x53C8;&#x79F0;&#x6700;&#x5C0F;&#x5E73;&#x65B9;&#x6CD5;&#xFF09;&#x901A;&#x8FC7;&#x6700;&#x5C0F;&#x5316;&#x8BEF;&#x5DEE;&#x7684;&#x5E73;&#x65B9;&#x548C;&#x5BFB;&#x627E;&#x6570;&#x636E;&#x7684;&#x6700;&#x4F73;&#x5339;&#x914D;&#xFF0C;&#x672C;&#x7AE0;&#x4E2D;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x5C31;&#x5229;&#x7528;&#x4E86;&#x6700;&#x5C0F;&#x4E8C;&#x4E58;&#x6CD5;&#x3002;]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Andrew NG Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Andrew NG Machine Learning视频学习笔记一]]></title>
    <url>%2F2017%2F08%2F27%2F2017%2F0827AndrewNGMachineLearning01%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x8282;&#x4ECB;&#x7ECD;&#x4E86;&#x76D1;&#x7763;&#x5F0F;&#x5B66;&#x4E60;/&#x975E;&#x76D1;&#x7763;&#x5F0F;&#x5B66;&#x4E60;&#x7B49;&#x57FA;&#x672C;&#x6982;&#x5FF5;&#xFF0C;&#x5E76;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#x4E86;&#x5355;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x95EE;&#x9898;&#x3002; # &#x57FA;&#x672C;&#x6982;&#x5FF5; &#x57FA;&#x672C;&#x6982;&#x5FF5;&#x8FD8;&#x662F;&#x53C2;&#x8003;&#x5468;&#x5FD7;&#x534E;&#x7684;&#x300A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x300B;&#x7B2C;1&#x7AE0;&#xFF0C;&#x66F4;&#x5168;&#x9762;&#x3001;&#x6613;&#x61C2;&#x3002; &gt; &#x5047;&#x5B9A;&#x6536;&#x96C6;&#x4E00;&#x6279;&#x897F;&#x74DC;&#x7684;&#x6570;&#x636E;&#xFF1A; (&#x8272;&#x6CFD;=&#x9752;&#x7EFF;; &#x6839;&#x8482;=&#x8737;&#x7F29;; &#x6572;&#x58F0;=&#x6D4A;&#x54CD;), (&#x8272;&#x6CFD;=&#x4E4C;&#x9ED1;; &#x6839;&#x8482;=&#x7A0D;&#x8737;; &#x6572;&#x58F0;=&#x6C89;&#x95F7;), (&#x8272;&#x6CFD;=&#x6D45;&#x767D;; &#x6839;&#x8482;=&#x786C;&#x633A;; &#x6572;&#x58F0;=&#x6E05;&#x8106;), &#x2026;&#x2026; &#x6570;&#x636E;&#x96C6;&#xFF08;data set&#xFF09;&#xFF1A;&#x8FD9;&#x7EC4;&#x8BB0;&#x5F55;&#x96C6;&#x5408;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x3002; &#x793A;&#x4F8B;&#xFF08;instance&#xFF09;&#x6216;&#x6837;&#x672C;&#xFF08;sample&#xFF09;&#xFF1A;&#x6BCF;&#x6761;&#x8BB0;&#x5F55;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x3002; &#x5C5E;&#x6027;&#xFF08;attribute&#xFF09;&#x6216;&#x7279;&#x5F81;&#xFF08;feature&#xFF09;&#xFF1A;&#x53CD;&#x5E94;&#x67D0;&#x65B9;&#x9762;&#x8868;&#x73B0;&#x6216;&#x6027;&#x8D28;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F8B;&#x5982;&#x672C;&#x4F8B;&#x4E2D;&#x7684;&#x201C;&#x8272;&#x6CFD;&#x201D;&#x3001;&#x201C;&#x6839;&#x8482;&#x201D;&#x79F0;&#x4E3A;&#x3002; &#x5C5E;&#x6027;&#x503C;&#xFF08;attribute value&#xFF09;&#xFF1A;&#x5C5E;&#x6027;&#x7684;&#x53D6;&#x503C;&#x79F0;&#x4E3A;&#x3002; &#x5C5E;&#x6027;&#x7A7A;&#x95F4;&#xFF08;attribute space&#xFF09;&#x6216;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#xFF08;Sample space&#xFF09;&#x6216;&#x8F93;&#x5165;&#x7A7A;&#x95F4;&#xFF08;input space&#xFF09;&#xFF1A;&#x5C5E;&#x6027;&#x5F20;&#x6210;&#x7684;&#x7A7A;&#x95F4;&#x79F0;&#x4E3A;&#xFF0C;&#x4F8B;&#x5982;&#x672C;&#x4F8B;&#x4E2D;&#x201C;&#x8272;&#x6CFD;&#x201D;&#x3001;&#x201C;&#x6839;&#x8482;&#x201D;&#x548C;&#x201C;&#x6572;&#x58F0;&#x201D;&#x4F5C;&#x4E3A;&#x4E09;&#x4E2A;&#x5750;&#x6807;&#x8F74;&#xFF0C;&#x5B83;&#x4EEC;&#x5F20;&#x6210;&#x7528;&#x4E8E;&#x63CF;&#x8FF0;&#x897F;&#x74DC;&#x7684;&#x4E09;&#x7EF4;&#x7A7A;&#x95F4;&#xFF0C;&#x5373;&#x6837;&#x672C;&#x7A7A;&#x95F4;&#x3002; &#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF08;feature vector&#xFF09;&#xFF1A;&#x7A7A;&#x95F4;&#x4E2D;&#x6BCF;&#x4E2A;&#x70B9;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x5750;&#x6807;&#x5411;&#x91CF;&#xFF0C;&#x79F0;&#x4E3A;&#x4E00;&#x4E2A;&#x3002; &#x5B66;&#x4E60;&#xFF08;learning&#xFF09;&#x6216;&#x8BAD;&#x7EC3;&#xFF08;training Sample&#xFF09;&#xFF1A;&#x4ECE;&#x6570;&#x636E;&#x4E2D;&#x5B66;&#x7684;&#x6A21;&#x578B;&#x7684;&#x8FC7;&#x7A0B;&#x79F0;&#x4E3A;&#x3002; &#x8BAD;&#x7EC3;&#x6570;&#x636E;&#xFF08;training data&#xFF09;&#xFF1A;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x79F0;&#x4E3A;&#x3002; &#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF08;training Sample&#xFF09;&#xFF1A;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x3002; &#x8BAD;&#x7EC3;&#x96C6;&#xFF08;training set&#xFF09;&#xFF1A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7EC4;&#x6210;&#x7684;&#x96C6;&#x5408;&#x79F0;&#x4E3A;&#x3002; &#x5047;&#x8BBE;&#xFF08;hypothesis&#xFF09;&#xFF1A;&#x5B66;&#x5F97;&#x6A21;&#x578B;&#x5BF9;&#x5E94;&#x4E86;&#x5173;&#x4E8E;&#x6570;&#x636E;&#x7684;&#x67D0;&#x79CD;&#x6F5C;&#x5728;&#x7684;&#x89C4;&#x5F8B;&#x79F0;&#x4F5C;&#x3002; &#x771F;&#x76F8;&#x6216;&#x4E8B;&#x5B9E;&#xFF08;ground-truth&#xFF09;&#xFF1A;&#x8FD9;&#x79CD;&#x6F5C;&#x5728;&#x89C4;&#x5F8B;&#x81EA;&#x8EAB;&#x79F0;&#x4F5C;&#x3002; &#x5B66;&#x4E60;&#x5668;&#xFF08;learner&#xFF09;&#xFF1A;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x627E;&#x51FA;&#x6216;&#x903C;&#x8FD1;&#x771F;&#x76F8;&#xFF0C;&#x5B66;&#x5F97;&#x7684;&#x6A21;&#x578B;&#x79F0;&#x4F5C;~&#x3002; &#x8981;&#x5B66;&#x5F97;&#x662F;&#x4E0D;&#x662F;&#x597D;&#x74DC;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x4EC5;&#x6709;&#x4E0A;&#x9762;&#x7684;&#x5B9E;&#x529B;&#x6570;&#x636E;&#x662F;&#x4E0D;&#x591F;&#x7684;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x6709;&#x7ED3;&#x679C;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;((&#x8272;&#x6CFD;=&#x9752;&#x7EFF;; &#x6839;&#x8482;=&#x8737;&#x7F29;; &#x6572;&#x58F0;=&#x6D4A;&#x54CD;), &#x597D;&#x74DC;) &#x6837;&#x4F8B;&#xFF08;example&#xFF09;&#xFF1A;&#x62E5;&#x6709;&#x4E86;&#x6807;&#x8BB0;&#x4FE1;&#x606F;&#x7684;&#x793A;&#x4F8B;&#x79F0;&#x4E3A;~&#x3002; &#x6807;&#x8BB0;&#x7A7A;&#x95F4;&#xFF08;Label space&#xFF09;&#x6216;&#x8F93;&#x51FA;&#x7A7A;&#x95F4;&#xFF08;output space&#xFF09;&#xFF1A;&#x7528;(xi, yi)&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x6837;&#x4F8B;&#xFF0C;&#x5176;&#x4E2D;yi&#x2208;Y&#x662F;&#x6837;&#x4F8B;xi&#x7684;&#x6807;&#x8BB0;&#xFF0C;Y&#x662F;&#x6240;&#x6709;&#x6807;&#x8BB0;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x79F0;&#x4E3A;&#x3002; &#x5206;&#x7C7B;&#xFF08;classification&#xFF09;&#xFF1A;&#x5F85;&#x9884;&#x6D4B;&#x7684;&#x662F;&#x79BB;&#x6563;&#x503C;&#xFF0C;&#x4F8B;&#x5982;&#x201C;&#x597D;&#x74DC;&#x201D;&#x3001;&#x201C;&#x574F;&#x74DC;&#x201D;&#xFF0C;&#x8FD9;&#x7C7B;&#x5B66;&#x4E60;&#x4EFB;&#x52A1;&#x79F0;&#x4E3A;&#x3002;&#x53EA;&#x6D89;&#x53CA;&#x4E24;&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x79F0;&#x4E3A;&#x4E8C;&#x5206;&#x7C7B;&#xFF08;binary classification&#xFF09;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x7C7B;&#x4E3A;&#x6B63;&#x7C7B;&#x53E6;&#x4E00;&#x4E2A;&#x4E3A;&#x53CD;&#x7C7B;&#x3002;&#x6D89;&#x53CA;&#x591A;&#x4E2A;&#x7C7B;&#x522B;&#x65F6;&#x5219;&#x79F0;&#x4E3A;&#x591A;&#x5206;&#x7C7B;&#xFF08;multi-class classification&#xFF09; &#x56DE;&#x5F52;&#xFF08;regression&#xFF09;&#xFF1A;&#x5F85;&#x9884;&#x6D4B;&#x7684;&#x662F;&#x8FDE;&#x7EED;&#x503C;&#xFF0C;&#x4F8B;&#x5982;&#x897F;&#x74DC;&#x7684;&#x6210;&#x719F;&#x5EA6;&#x662F;0.9&#x3001;0.3&#xFF0C;&#x8FD9;&#x7C7B;&#x5B66;&#x4E60;&#x4EFB;&#x52A1;&#x79F0;&#x4E3A;&#x3002; &#x6D4B;&#x8BD5;&#xFF08;testing&#xFF09;&#xFF1A;&#x5B66;&#x5F97;&#x6A21;&#x578B;&#x540E;&#xFF0C;&#x4F7F;&#x7528;&#x5176;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x7684;&#x8FC7;&#x7A0B;&#x79F0;&#x4E3A;&#x3002;&#x88AB;&#x9884;&#x6D4B;&#x7684;&#x6837;&#x672C;&#x79F0;&#x4E3A;&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#xFF08;testing Sample&#xFF09; &#x4E00;&#x822C;&#x5730;&#xFF0C;&#x9884;&#x6D4B;&#x4EFB;&#x52A1;&#x662F;&#x5E0C;&#x671B;&#x4ECE;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x7A7A;&#x95F4;X&#x5230;&#x8F93;&#x51FA;&#x7A7A;&#x95F4;Y&#x7684;&#x6620;&#x5C04;f:X&#x27FC;Y&#xFF0C;&#x5BF9;&#x4E8C;&#x5206;&#x7C7B;&#x4EFB;&#x52A1;&#xFF0C;&#x901A;&#x5E38;&#x4EE4;Y={-1, 1}&#x6216;{0, 1}&#xFF1B;&#x5BF9;&#x591A;&#x5206;&#x7C7B;&#x4EFB;&#x52A1;&#xFF0C;|Y|&gt;2&#xFF1B;&#x5BF9;&#x56DE;&#x5F52;&#x4EFB;&#x52A1;&#xFF0C;Y=&#x211D;&#xFF0C;&#x211D;&#x4E3A;&#x5B9E;&#x6570;&#x96C6;&#x3002; &#x805A;&#x7C7B;&#xFF08;clustering&#xFF09;&#xFF1A;&#x5C06;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x7684;&#x897F;&#x74DC;&#x5206;&#x6210;&#x82E5;&#x5E72;&#x7EC4;&#xFF0C;&#x6BCF;&#x7EC4;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x7C07;&#xFF08;cluster&#xFF09;&#xFF0C;&#x8FD9;&#x4E9B;&#x81EA;&#x52A8;&#x5F62;&#x6210;&#x7684;&#x7C07;&#x53EF;&#x80FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E9B;&#x6F5C;&#x5728;&#x7684;&#x6982;&#x5FF5;&#x5212;&#x5206;&#xFF0C;&#x4F8B;&#x5982;&#x201C;&#x6D45;&#x8272;&#x74DC;&#x201D;&#x3001;&#x201C;&#x6DF1;&#x8272;&#x74DC;&#x201D;&#xFF0C;&#x201C;&#x672C;&#x5730;&#x74DC;&#x201D;&#x3001;&#x201C;&#x5916;&#x5730;&#x74DC;&#x201D;&#x2026;&#x2026;&#x8FD9;&#x6837;&#x7684;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x6709;&#x52A9;&#x4E8E;&#x6211;&#x4EEC;&#x4E86;&#x89E3;&#x6570;&#x636E;&#x7684;&#x5185;&#x5728;&#x89C4;&#x5F8B;&#xFF0C;&#x80FD;&#x4E3A;&#x66F4;&#x6DF1;&#x5165;&#x5730;&#x5206;&#x6790;&#x6570;&#x636E;&#x5EFA;&#x7ACB;&#x57FA;&#x7840;&#x3002;&#x9700;&#x8BF4;&#x660E;&#x7684;&#x662F;&#xFF1A;&#x805A;&#x7C7B;&#x5B66;&#x4E60;&#x4E2D;&#xFF0C;&#x201C;&#x6D45;&#x8272;&#x74DC;&#x201D;&#x3001;&#x201C;&#x672C;&#x5730;&#x74DC;&#x201D;&#x8FD9;&#x6837;&#x7684;&#x6982;&#x5FF5;&#x662F;&#x4E8B;&#x5148;&#x4E0D;&#x77E5;&#x9053;&#x7684;&#xFF0C;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x901A;&#x5E38;&#x4E0D;&#x62E5;&#x6709;&#x6807;&#x8BB0;&#x4FE1;&#x606F;&#x3002; &#x5B66;&#x4E60;&#x7684;&#x5206;&#x7C7B;&#xFF1A;&#x6839;&#x636E;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x662F;&#x5426;&#x62E5;&#x6709;&#x6807;&#x8BB0;&#x4FE1;&#x606F;&#xFF0C;&#x5B66;&#x4E60;&#x4EFB;&#x52A1;&#x53EF;&#x5212;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#xFF0C;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF08;supervised learning&#xFF09;&#x548C;&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF08;unsupervised learning&#xFF09;&#x3002;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;&#x5C5E;&#x4E8E;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#xFF0C;&#x805A;&#x7C7B;&#x5219;&#x5C5E;&#x4E8E;&#x65E0;&#x76D1;&#x7763;&#x5B66;&#x4E60;&#x3002; &#x6CDB;&#x5316;&#xFF08;generalization&#xFF09;&#x80FD;&#x529B;&#xFF1A;&#x5B66;&#x5F97;&#x6A21;&#x578B;&#x9002;&#x7528;&#x4E8E;&#x65B0;&#x6837;&#x672C;&#x7684;&#x80FD;&#x529B;&#x3002; &#x8BFE;&#x7A0B;&#x4E3E;&#x7684;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x662F;&#x6076;&#x6027;&#x80BF;&#x7624;/&#x826F;&#x6027;&#x80BF;&#x7624;&#x7684;&#x5206;&#x7C7B;&#xFF1A; &#x805A;&#x7C7B;&#x95EE;&#x9898;&#x662F; &#x5E38;&#x7528;&#x6807;&#x8BB0; m&#xFF1A;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x5B9E;&#x4F8B;&#x7684;&#x6570;&#x91CF; x&#xFF1A;&#x7279;&#x5F81;/&#x8F93;&#x5165;&#x53D8;&#x91CF; y&#xFF1A;&#x76EE;&#x6807;&#x53D8;&#x91CF;/&#x8F93;&#x51FA;&#x53D8;&#x91CF; (x, y)&#xFF1A;&#x8BAD;&#x7EC3;&#x96C6;&#x4E2D;&#x7684;&#x5B9E;&#x4F8B; (x(i), y(i))&#xFF1A;&#x7B2C;i&#x4E2A;&#x89C2;&#x5BDF;&#x5B9E;&#x4F8B; h&#xFF1A;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x6216;&#x51FD;&#x6570;&#x4E5F;&#x6210;&#x4E3A;&#x5047;&#x8BBE;&#xFF08;hypothesis&#xFF09; &#x5355;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x95EE;&#x9898; &#x89E3;&#x51B3;&#x623F;&#x4EF7;&#x9884;&#x6D4B;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5C06;&#x8BAD;&#x7EC3;&#x96C6;&#x201C;&#x5582;&#x201D;&#x7ED9;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#xFF0C;&#x8FDB;&#x800C;&#x5B66;&#x5230;&#x4E00;&#x4E2A;&#x5047;&#x8BBE;h&#x3002;&#x5F53;&#x628A;&#x8981;&#x9884;&#x6D4B;&#x7684;&#x623F;&#x5C4B;&#x5C3A;&#x5BF8;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#x8F93;&#x5165;&#x7ED9;h&#xFF0C;&#x5C06;&#x8F93;&#x51FA;&#x9884;&#x6D4B;&#x51FA;&#x7684;&#x623F;&#x5C4B;&#x4EA4;&#x6613;&#x4EF7;&#x683C;&#x3002; h&#x4E5F;&#x5C31;&#x662F;CoreML&#x521D;&#x63A2;&#x90A3;&#x4E00;&#x8282;&#x8BB2;&#x7684;mlmodel&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6838;&#x5FC3;&#x5185;&#x5BB9;&#x3002; h&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A;&#xFF1A; h&#x3B8;=&#x3B8;0+&#x3B8;1x&#x3000;&#x3000;&#x2026;&#x516C;&#x5F0F;&#x2460; &#x56E0;&#x4E3A;&#x53EA;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x5F81;/&#x8F93;&#x5165;&#x53D8;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x6837;&#x7684;&#x95EE;&#x9898;&#x53EB;&#x505A;&#x5355;&#x53D8;&#x91CF;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x95EE;&#x9898;&#x3002; &#x6211;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#x4E0D;&#x4EE3;&#x8868;h&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x4E00;&#x6B21;&#x51FD;&#x6570;&#xFF0C;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;h&#x8FD8;&#x662F;&#x901A;&#x8FC7;&#x753B;&#x56FE;&#x89C2;&#x5BDF;&#xFF0C;&#x5F97;&#x51FA;&#x7684;&#x4E00;&#x6B21;&#x7EBF;&#x6027;&#x65B9;&#x7A0B;&#x5427;&#xFF1F;&#x6570;&#x5B66;&#x5EFA;&#x6A21;&#x4E0D;&#x53EF;&#x80FD;&#x662F;&#x4EBA;&#x8089;&#x5EFA;&#x554A;&#xFF1F; &#x4EE3;&#x4EF7;&#x51FD;&#x6570; &#x5EFA;&#x6A21;&#x7684;&#x76EE;&#x6807;&#x662F;&#x5F97;&#x5230;&#x8BA9;&#x8BEF;&#x5DEE;&#x7684;&#x5E73;&#x65B9;&#x548C;&#x6700;&#x5C0F;&#x7684;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x3002;&#x5728;&#x4E0A;&#x4F8B;&#x4E2D;&#x5373;&#x3B8;0&#x548C;&#x3B8;1&#x3002; &#x6839;&#x636E;&#x5B9A;&#x4E49;&#x53EF;&#x5F97;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; &#x5EFA;&#x6A21;&#x7684;&#x76EE;&#x6807;&#x5C31;&#x662F;&#x6C42;&#x8BE5;&#x6700;&#x5C0F;&#x503C;&#x3002; &gt; &#x5F53;&#x8BAD;&#x7EC3;&#x96C6;&#x56FA;&#x5B9A;&#xFF0C;m&#x5C31;&#x662F;&#x5E38;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x524D;&#x9762;&#x52A0;&#x4E00;&#x4E2A;1/2m&#x7CFB;&#x6570;&#x5BF9;&#x4E8E;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x6CA1;&#x6709;&#x5F71;&#x54CD;&#xFF0C;&#x6211;&#x731C;&#x6D4B;&#x5E94;&#x8BE5;&#x662F;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x6570;&#x5B66;&#x8BA1;&#x7B97;&#x800C;&#x52A0;&#x7684;&#x8BE5;&#x7CFB;&#x6570;&#x3002; &#x68AF;&#x5EA6;&#x4E0B;&#x964D; &#x521D;&#x59CB;&#x9009;&#x4E00;&#x7EC4;&#x968F;&#x673A;&#x53C2;&#x6570;(&#x3B8;0, &#x3B8;1, &#x2026;, &#x3B8;n)&#xFF0C;&#x8BA1;&#x7B97;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#xFF0C;&#x5BFB;&#x627E;&#x4E0B;&#x4E00;&#x4E2A;&#x80FD;&#x8BA9;&#x4EE3;&#x4EF7;&#x51FD;&#x6570;&#x503C;&#x4E0B;&#x964D;&#x6700;&#x591A;&#x7684;&#x53C2;&#x6570;&#x7EC4;&#x5408;&#x3002;&#x6301;&#x7EED;&#x8FD9;&#x4E48;&#x505A;&#x76F4;&#x5230;&#x627E;&#x5230;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x503C;&#x3002; &#x65B9;&#x6CD5;&#xFF1A; &#xFF08;1&#xFF09;&#x786E;&#x5B9A;&#x4E0B;&#x4E00;&#x6B65;&#x7684;&#x6B65;&#x4F10;&#x5927;&#x5C0F;&#x3B1; &#xFF08;2&#xFF09;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x503C;&#xFF1A;&#x3B8;0 &#x3B8;1 &#xFF08;3&#xFF09;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x5411;&#x4E0B;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x5E76;&#x5411;&#x4E0B;&#x8D70;&#x9884;&#x5148;&#x89C4;&#x5B9A;&#x7684;&#x6B65;&#x4F10;&#xFF0C;&#x5E76;&#x66F4;&#x65B0;&#x3B8;0 &#x3B8;1 &#xFF08;4&#xFF09;&#x5F53;&#x4E0B;&#x964D;&#x7684;&#x9AD8;&#x5EA6;&#x5C0F;&#x4E8E;&#x67D0;&#x4E2A;&#x5B9A;&#x4E49;&#x7684;&#x503C;&#xFF0C;&#x5219;&#x505C;&#x6B62;&#x4E0B;&#x964D; &#x8BE5;&#x7B97;&#x6CD5;&#x7684;&#x516C;&#x5F0F;&#x5316;&#x63CF;&#x8FF0;&#x4E3A;&#xFF08;&#x516C;&#x5F0F;&#x2462;&#xFF09;&#xFF1A; &#x5176;&#x4E2D;convergence&#x8868;&#x793A;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#x3002; &#x5BF9;J(&#x3B8;0, &#x3B8;1)&#x6C42;&#x504F;&#x5BFC;&#x5F97;&#x51FA;&#x516C;&#x5F0F;&#x2463;&#xFF1A; &#x6839;&#x636E;&#x516C;&#x5F0F;&#x2460;&#x53EF;&#x5F97;&#xFF08;&#x516C;&#x5F0F;&#x2464;&#xFF09;&#xFF1A; &#x5C06;&#x516C;&#x5F0F;&#x2463;&#x2464;&#x4EE3;&#x5165;&#x516C;&#x5F0F;&#x2462;&#x53EF;&#x5F97;&#xFF1A; &#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x5C06;&#x7B97;&#x6CD5;&#x7684;&#x516C;&#x5F0F;&#x5316;&#x63CF;&#x8FF0;&#x6539;&#x5199;&#x4E3A;&#xFF1A; &#x53C2;&#x8003; &#x5229;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x5B9E;&#x73B0;&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#x7684;&#x7B97;&#x6CD5;&#x53CA;matlab&#x5B9E;&#x73B0;]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Andrew NG Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CoreML初探]]></title>
    <url>%2F2017%2F08%2F26%2F2017%2F0826CoreML%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x628A;&#x73A9;&#x82F9;&#x679C;&#x53D1;&#x5E03;&#x7684;CoreML&#x4F8B;&#x7A0B;&#x4EE5;&#x53CA;CoreMLTools&#xFF0C;&#x5BF9;CoreML&#x6709;&#x4E2A;&#x611F;&#x6027;&#x8BA4;&#x8BC6;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x600E;&#x4E48;&#x64CD;&#x4F5C;CoreML - model&#x6587;&#x4EF6;&#x662F;&#x4EC0;&#x4E48; &#x9996;&#x5148;&#xFF0C;&#x8FD0;&#x884C;CoreML&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5FC5;&#x987B;&#x5927;&#x4E8E;macOS 10.13&#x6216;iOS11&#xFF0C;Xcode&#x7248;&#x672C;&#x8981;&#x5728;9&#x6216;&#x4EE5;&#x4E0A;&#x3002;Xcode9-beta&#x7A33;&#x5B9A;&#x6027;&#x8FD8;&#x53EF;&#x4EE5;&#xFF0C;&#x800C;&#x4E14;&#x81EA;&#x5E26;iOS11 simulator&#xFF0C;macOS 10.13&#x73B0;&#x5728;&#x8FD8;&#x5F88;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x5347;&#x7EA7;&#x8981;&#x614E;&#x91CD;:P &#x82F9;&#x679C;&#x5B98;&#x65B9;&#x5BF9;CoreML&#x7684;&#x8D44;&#x6599;&#x8FD8;&#x4E0D;&#x591A;&#x3002; Build more intelligent apps with machine learning&#x5BF9;CoreML&#x6709;&#x4E2A;&#x5BFC;&#x5165;&#x6027;&#x7684;&#x4ECB;&#x7ECD;&#xFF1A;1&#x3001;&#x53EF;&#x4EE5;&#x628A;&#x5F53;&#x4E0B;&#x5E7F;&#x6CDB;&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x6570;&#x636E;&#x6A21;&#x578B;&#x6574;&#x5408;&#x5230;app&#x4E2D;&#xFF0C;&#x5305;&#x62EC;tree ensembles&#x3001;SVMs&#x3001;generalized linear&#x548C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#xFF1B;2&#x3001;&#x53EF;&#x4EE5;&#x65E0;&#x7F1D;&#x5229;&#x7528;&#x82F9;&#x679C;&#x8BBE;&#x5907;&#x7684;CPU&#x548C;GPU&#x4E3A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x63D0;&#x4F9B;&#x6700;&#x9AD8;&#x7684;&#x6027;&#x80FD;&#x548C;&#x6548;&#x7387;&#x3002; &#x76EE;&#x524D;&#x53EF;&#x4EE5;&#x5E94;&#x7528;&#x5728;&#x56FE;&#x50CF;&#x8BC6;&#x522B;&#x3001;&#x6587;&#x672C;&#x68C0;&#x6D4B;&#x3001;&#x76EE;&#x6807;&#x8DDF;&#x8E2A;&#x4EE5;&#x53CA;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x5904;&#x7406;&#x5982;&#x8BED;&#x8A00;&#x8BC6;&#x522B;&#x3001;&#x8BCD;&#x5E72;&#x63D0;&#x53D6;&#x7B49;&#x3002; Core ML&#x5219;&#x662F;&#x6280;&#x672F;&#x6587;&#x6863;&#x7684;&#x5165;&#x53E3;&#x3002;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x7A0B;&#xFF1A;Integrating a Core ML Model into Your App&#x6211;&#x5728;&#x8FD9;&#x4E2A;&#x4F8B;&#x7A0B;&#x91CC;&#x52A0;&#x4E86;&#x4E00;&#x4E9B;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6240;&#x4EE5;url&#x662F;&#x6211;&#x7684;github&#x3002; Integrating a Core ML Model into Your App &#x4ECE;&#x8FD9;&#x4E2A;&#x4F8B;&#x7A0B;&#x53EF;&#x4EE5;&#x5BF9;CoreML&#x7684;&#x7528;&#x6CD5;&#x6709;&#x4E2A;&#x5927;&#x81F4;&#x4E86;&#x89E3;&#x3002;&#x5B83;&#x6839;&#x636E;&#x4E00;&#x5757;&#x5730;&#x4EA7;&#x7684;&#x592A;&#x9633;&#x80FD;&#x677F;&#x4E2A;&#x6570;&#x3001;&#x6E29;&#x5BA4;&#x7684;&#x95F4;&#x6570;&#x548C;&#x9762;&#x79EF;&#x4E09;&#x4E2A;&#x8F93;&#x5165;&#x53C2;&#x6570;&#x6765;&#x9884;&#x6D4B;&#x8FD9;&#x5757;&#x5730;&#x4EA7;&#x7684;&#x4EF7;&#x683C;&#x3002;CoreML&#x548C;CoreData&#x5728;&#x7528;&#x6CD5;&#x4E0A;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#x3002; 1 &#x628A;CoreML&#x6587;&#x4EF6;&#x5BFC;&#x5165;&#x5DE5;&#x7A0B;&#x3002; Xcode&#x652F;&#x6301;&#x5BF9;&#x6570;&#x636E;&#x6A21;&#x578B;&#x6587;&#x4EF6;&#x7684;&#x89E3;&#x6790;&#x548C;&#x5C55;&#x73B0;&#xFF0C;&#x8F93;&#x5165;&#x3001;&#x8F93;&#x51FA;&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#x5B57;&#x6BB5;&#xFF0C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x5982;&#x56FE;&#x8FD9;&#x662F;Xcode&#x770B;&#x5230;&#x7684;mlmodel&#x6587;&#x4EF6;&#xFF1A; Xcode&#x4F1A;&#x4E3A;mlmodel&#x751F;&#x6210;&#x76F8;&#x5E94;&#x7684;&#x63A5;&#x53E3;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x4ECE;&#x5DE5;&#x7A0B;&#x91CC;&#x662F;&#x627E;&#x4E0D;&#x5230;&#x7684;&#xFF0C;&#x70B9;&#x51FB;&#x4E0A;&#x56FE;MarsHabitatPricer&#x53F3;&#x4FA7;&#x7684;&#x7BAD;&#x5934;&#x53EF;&#x4EE5;&#x6253;&#x5F00;&#x6B64;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x662F;&#x5BF9;model&#x6570;&#x636E;&#x7684;&#x5C01;&#x88C5;&#x3002; ## 2 &#x901A;&#x8FC7;mlmodel&#x63A5;&#x53E3;&#x6587;&#x4EF6;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#xFF1A; 1234567891011121314151617let model = MarsHabitatPricer() // &#x521B;&#x5EFA;mlmodel&#x5B9E;&#x4F8B;// &#x4ECE;&#x754C;&#x9762;&#x4E0A;&#x5F97;&#x5230;&#x4E09;&#x4E2A;&#x8F93;&#x5165;&#x53C2;&#x6570;func selectedRow(for feature: Feature) -&gt; Int { return pickerView.selectedRow(inComponent: feature.rawValue)}let solarPanels = pickerDataSource.value(for: selectedRow(for: .solarPanels), feature: .solarPanels)let greenhouses = pickerDataSource.value(for: selectedRow(for: .greenhouses), feature: .greenhouses)let size = pickerDataSource.value(for: selectedRow(for: .size), feature: .size)// &#x5411;mlmodel&#x8F93;&#x5165;&#x53C2;&#x6570;&#xFF0C;&#x5F97;&#x5230;&#x9884;&#x6D4B;&#x4EF7;&#x683C;guard let marsHabitatPricerOutput = try? model.prediction(solarPanels: solarPanels, greenhouses: greenhouses, size: size) else { fatalError(&quot;Unexpected runtime error.&quot;)}let price = marsHabitatPricerOutput.pricepriceLabel.text = priceFormatter.string(for: price) &#x4F8B;&#x7A0B;&#x7684;&#x754C;&#x9762;&#x5982;&#x4E0B;&#xFF1A; CoreML&#x7684;&#x4F7F;&#x7528;&#x5C31;&#x8FD9;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x8D8A;&#x662F;&#x7B80;&#x5355;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x8D8A;&#x5438;&#x5F15;&#x4EBA;&#x53BB;&#x4E86;&#x89E3;&#x5B83;&#x7684;&#x5185;&#x90E8;&#x6784;&#x9020;&#xFF0C;&#x56E0;&#x4E3A;&#x4F60;&#x77E5;&#x9053;&#x5B83;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x67E5;&#x8868;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x4E00;&#x6B21;&#x65B9;&#x7A0B;&#x7B97;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x662F;&#x6839;&#x636E;&#x5582;&#x8FDB;&#x53BB;&#x6570;&#x636E;&#x8BAD;&#x7EC3;&#x51FA;&#x6A21;&#x578B;&#xFF0C;&#x518D;&#x6839;&#x636E;&#x6A21;&#x578B;&#x9884;&#x6D4B;&#x65B0;&#x7684;&#x8F93;&#x5165;/&#x8F93;&#x51FA;&#x5173;&#x7CFB;&#x3002; mlmodel&#x6587;&#x4EF6; &#x5728;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E0A;&#x8BF4;&#xFF1A;&#x73B0;&#x5728;&#x5927;&#x591A;&#x6570;&#x7B2C;&#x4E09;&#x65B9;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5DE5;&#x5177;&#x4EA7;&#x751F;&#x7684;&#x6570;&#x636E;&#x6587;&#x4EF6;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Core ML Tools&#x6765;&#x8F6C;&#x6362;&#x6210;mlmodel&#x6587;&#x4EF6;&#x3002;&#x5728;coremltools &#x6587;&#x6863;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5B83;&#x7684;&#x7528;&#x6CD5;&#x3002; coremltools&#x7684;&#x4F5C;&#x7528;&#x6709;&#x4E09;&#x70B9;&#xFF1A; - &#x628A;&#x6D41;&#x884C;&#x7684;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x5DE5;&#x5177;&#xFF08;&#x5305;&#x62EC;Keras, Caffe, scikit-learn, libsvm &#x548C; XGBoost&#xFF09;&#x8F6C;&#x6210;Core ML&#x683C;&#x5F0F;&#xFF08;.mlmodel&#xFF09; - &#x4F7F;&#x7528;API&#x628A;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5199;&#x6210;Core ML&#x683C;&#x5F0F; - &#x5728;&#x6307;&#x5B9A;&#x7684;&#x5E73;&#x53F0;&#x4E0A;&#xFF0C;&#x4F7F;&#x7528;Core ML&#x6846;&#x67B6;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x6765;&#x9A8C;&#x8BC1;&#x8F6C;&#x6362; &#x6D4B;&#x8BD5;mltools &#x5728;&#x6211;&#x7684;palanceli/IntegratingaCoreMLModelintoYourApp/testcoreml.py&#x4E2D;&#x6709;&#x5BF9;&#x8FD9;&#x4E2A;&#x5DE5;&#x5177;&#x7684;&#x6D4B;&#x8BD5;&#x3002; 1234567891011121314151617181920212223242526272829303132333435# -*- coding:utf-8 -*-import coremltoolsimport loggingimport osif __name__ == &apos;__main__&apos;: logFmt = &apos;%(asctime)s %(lineno)04d %(levelname)-8s %(message)s&apos; logging.basicConfig(level=logging.DEBUG, format=logFmt, datefmt=&apos;%H:%M&apos;,) modelFilePath = os.getcwd() modelFilePath += &apos;/MarsHabitatPricePredictor/Resources/MarsHabitatPricer.mlmodel&apos; logging.debug(modelFilePath) model = coremltools.models.MLModel(modelFilePath) # &#x52A0;&#x8F7D;mlmodel&#x6587;&#x4EF6; # &#x6253;&#x5370;&#x5404;&#x5B57;&#x6BB5;&#xFF0C;&#x8FD9;&#x4E9B;&#x662F;&#x6587;&#x4EF6;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F; logging.info(&apos;author: %s&apos; % (model.author)) logging.info(&apos;license: %s&apos; % (model.license)) logging.info(&apos;short description: %s&apos; % (model.short_description)) logging.info(&apos;input description: %s&apos; % (model.input_description)) logging.info(&apos;output description: %s&apos; % (model.output_description)) # &#x6253;&#x5370;spec&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x8BE6;&#x7EC6;&#x7684;&#x5404;&#x5B57;&#x6BB5;&#x4FE1;&#x606F; logging.info(model.get_spec()) # &#x6839;&#x636E;&#x8F93;&#x5165;&#x7684;&#x4E09;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x9A8C;&#x8BC1;&#x8F93;&#x51FA;&#x503C; dataList = [{&apos;solarPanels&apos;:1.0, &apos;greenhouses&apos;:1.0, &apos;size&apos;:1024}, {&apos;solarPanels&apos;:4.0, &apos;greenhouses&apos;:5.0, &apos;size&apos;:10000}] logging.info(&apos;solarPanels greenhouses size price&apos;) logging.info(&apos;------------------------------------&apos;) for dataItem in dataList: predictions = model.predict(dataItem) logging.info(&apos;%11.1f %11d %4d %5d&apos; % (dataItem[&apos;solarPanels&apos;], \ dataItem[&apos;greenhouses&apos;], dataItem[&apos;size&apos;], predictions[&apos;price&apos;])) &#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136$ python testcoreml.py07:53 0014 DEBUG /Users/test/Documents/IntegratingaCoreMLModelintoYourApp/MarsHabitatPricePredictor/Resources/MarsHabitatPricer.mlmodel07:53 0018 INFO author: Apple07:53 0019 INFO license: BSD-307:53 0020 INFO short description: Predicts the price of a habitat on Mars.07:53 0021 INFO input description: Features(solarPanels,greenhouses,size)07:53 0022 INFO output description: Features(price)07:53 0025 INFO specificationVersion: 1description { input { name: &quot;solarPanels&quot; shortDescription: &quot;Number of solar panels&quot; type { doubleType { } } } input { name: &quot;greenhouses&quot; shortDescription: &quot;Number of greenhouses&quot; type { doubleType { } } } input { name: &quot;size&quot; shortDescription: &quot;Size in acres&quot; type { doubleType { } } } output { name: &quot;price&quot; shortDescription: &quot;Price of the habitat (in millions)&quot; type { doubleType { } } } predictedFeatureName: &quot;price&quot; metadata { shortDescription: &quot;Predicts the price of a habitat on Mars.&quot; author: &quot;Apple&quot; license: &quot;BSD-3&quot; }}pipelineRegressor { pipeline { models { specificationVersion: 1 description { input { name: &quot;solarPanels&quot; type { doubleType { } } } input { name: &quot;greenhouses&quot; type { doubleType { } } } input { name: &quot;size&quot; type { doubleType { } } } output { name: &quot;__feature_vector__&quot; type { multiArrayType { shape: 3 dataType: DOUBLE } } } } featureVectorizer { inputList { inputColumn: &quot;solarPanels&quot; inputDimensions: 1 } inputList { inputColumn: &quot;greenhouses&quot; inputDimensions: 1 } inputList { inputColumn: &quot;size&quot; inputDimensions: 1 } } } models { specificationVersion: 1 description { input { name: &quot;__feature_vector__&quot; type { multiArrayType { shape: 3 dataType: DOUBLE } } } output { name: &quot;price&quot; type { doubleType { } } } predictedFeatureName: &quot;price&quot; } glmRegressor { weights { value: 136.726723178 value: 653.511013762 value: 5.8540790493 } offset: -3751.05587847 } } }}07:53 0030 INFO solarPanels greenhouses size price07:53 0031 INFO ------------------------------------07:53 0035 INFO 1.0 1 1024 303307:53 0035 INFO 4.0 5 10000 58604 &#x53EF;&#x89C1;&#xFF0C;&#x5728;mlmodel&#x6587;&#x4EF6;&#x7684;description&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x6570;&#x636E;&#x6A21;&#x578B;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;&#x3002;&#x5176;&#x4E2D;input&#x548C;output&#x5305;&#x62EC;&#x8F93;&#x5165;/&#x8F93;&#x51FA;&#x5B57;&#x6BB5;&#x7684;&#x540D;&#x79F0;&#x3001;&#x63CF;&#x8FF0;&#x3001;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;metadata&#x662F;&#x6587;&#x4EF6;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x3002;pipelineRegressor&#x6211;&#x731C;&#x6D4B;&#x662F;&#x6570;&#x636E;&#x8BAD;&#x7EC3;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x4E2A;&#x8981;&#x628A;&#x6570;&#x636E;&#x662F;&#x600E;&#x4E48;&#x751F;&#x6210;&#x7684;&#x5F04;&#x6E05;&#x695A;&#x624D;&#x80FD;&#x89E3;&#x7B54;&#x4E86;&#x3002; &#x6700;&#x540E;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8F93;&#x5165;&#x548C;iOS App&#x91CC;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5C06;&#x5F97;&#x5230;&#x76F8;&#x540C;&#x7684;&#x8F93;&#x51FA;&#x6570;&#x636E;&#x3002; &#x5230;&#x6B64;&#x53EA;&#x77E5;&#x9053;&#x4E86;mlmodel&#x6587;&#x4EF6;&#x7684;&#x6570;&#x636E;&#x6846;&#x67B6;&#x4FE1;&#x606F;&#xFF0C;&#x548C;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x505A;&#x4E2A;&#x7C7B;&#x6BD4;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x53EA;&#x77E5;&#x9053;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x8868;&#x7ED3;&#x6784;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#xFF0C;&#x6709;&#x6CA1;&#x6709;&#x7B97;&#x6CD5;&#x548C;&#x4EE3;&#x7801;&#x8FD8;&#x4E0D;&#x5F97;&#x800C;&#x77E5;&#x3002;&#x6587;&#x6863;&#x91CC;&#x8BF4;mltools&#x53EF;&#x4EE5;&#x8F6C;&#x5176;&#x5B83;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x4F46;mltools&#x81EA;&#x5DF1;&#x80FD;&#x5426;&#x76F4;&#x63A5;&#x8BAD;&#x7EC3;&#x6570;&#x636E;&#x751F;&#x6210;&#x6A21;&#x578B;&#x5462;&#xFF1F;&#x6211;&#x5728;coremltools.models&#x7684;&#x6587;&#x6863;&#x4E2D;&#x53D1;&#x73B0;&#x5E94;&#x8BE5;&#x53EF;&#x4EE5;&#xFF0C;&#x5176;&#x4E2D;coremltools.models.neural_network&#x548C;coremltools.models.tree_ensemble&#x90FD;&#x662F;&#x7528;&#x6765;&#x201C;construct CoreML models&#x201D;&#xFF0C;&#x4F46;&#x663E;&#x7136;&#x8FD8;&#x5F88;&#x4E0D;&#x5B8C;&#x6574;&#x3002; &#x9047;&#x5230;&#x7684;&#x95EE;&#x9898; &#x5173;&#x95ED;SIP&#x5347;&#x7EA7;numpy &#x5728;macOS&#x4E0B;&#x901A;&#x8FC7;&#x547D;&#x4EE4;pip install numpy --upgrade&#x5347;&#x7EA7;numpy&#x9ED8;&#x8BA4;&#x4F1A;&#x5931;&#x8D25;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;System Integrity Protection&#x6743;&#x9650;&#x3002;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF1A; 1. &#x91CD;&#x542F;&#x7535;&#x8111;&#xFF0C;&#x542F;&#x52A8;&#x524D;&#x6309;&#x4F4F;&#x2318;+R 2. &#x542F;&#x52A8;&#x540E;&#x5728;&#x83DC;&#x5355;&#x4E2D;&#x627E;&#x5230;&#x201C;&#x7EC8;&#x7AEF;&#x201D;&#x5E76;&#x6253;&#x5F00;&#xFF0C;&#x8F93;&#x5165;csrutil disable 3. &#x91CD;&#x542F;&#x7535;&#x8111; 4. &#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x6210;&#x529F;&#x6267;&#x884C;pip install numpy --upgrade&#x5347;&#x7EA7;numpy&#x4E86;&#x3002; 5. &#x5B8C;&#x6210;&#x540E;&#x8BB0;&#x5F97;&#x518D;&#x7528;csrutil enable&#x6062;&#x590D;SIP&#x8BBE;&#x7F6E;&#x3002; unable to find utility &quot;coremlcompiler&quot;&#x9519;&#x8BEF; coremltools&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x5C31;&#x865A;&#x4E86;&#xFF0C;&#x521D;&#x6B21;&#x8DD1;&#x4F1A;&#x63D0;&#x793A;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; RuntimeError: Got non-zero exit code 72 from xcrun. Output was: xcrun: error: unable to find utility &quot;coremlcompiler&quot;, not a developer tool or in PATH &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x547D;&#x4EE4;&#x884C;&#x8DEF;&#x5F84;&#x6CA1;&#x6709;&#x6307;&#x5411;Xcode beta&#xFF0C;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E0B;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x547D;&#x4EE4;&#x5373;&#x53EF;&#xFF1A; 1sudo xcode-select --switch /Applications/Xcode-beta.app/Contents/Developer]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>CoreML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Swfit Programming BNRG》笔记十四]]></title>
    <url>%2F2017%2F08%2F12%2F2017%2F0812SwiftProgrammingBNRG14%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x4ECB;&#x7ECD;&#x679A;&#x4E3E;Enumerations&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x4EE5;&#x53CA;&#x679A;&#x4E3E;&#x7684;&#x9AD8;&#x7EA7;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x5305;&#x62EC;&#xFF1A;&#x539F;&#x751F;&#x503C;&#x679A;&#x4E3E;&#x3001;&#x5E26;&#x65B9;&#x6CD5;&#x7684;&#x679A;&#x4E3E;&#x3001;&#x5173;&#x8054;&#x503C;&#x3001;&#x5D4C;&#x5957;&#x679A;&#x4E3E;&#x3002; # &#x57FA;&#x672C;&#x4F7F;&#x7528; &#x5B9A;&#x4E49;&#x7C7B;&#x578B; 12345enum TextAlignment { case left case right case center} &#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#xFF1A; 1var alignment: TextAlignment = TextAlignment.left &#x6839;&#x636E;&#x7B49;&#x53F7;&#x53F3;&#x503C;&#x53EF;&#x4EE5;&#x63A8;&#x65AD;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; 1var alignment = TextAlignment.left &#x8D4B;&#x503C;&#xFF1A; 1alignment = TextAlignment.right &#x7531;&#x4E8E;alignment&#x5DF2;&#x7ECF;&#x88AB;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x77E5;&#x9053;&#x5176;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x518D;&#x6B21;&#x8D4B;&#x503C;&#x65F6;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x7C7B;&#x578B;&#xFF0C;&#x5199;&#x4F5C;&#xFF1A; 1alignment = .right &#x540C;&#x7406;&#xFF0C;&#x6BD4;&#x8F83;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x5199;&#xFF1A; 123if alignment == .right{ ...} &#x4F7F;&#x7528;switch&#x53EF;&#x4EE5;&#x505A;&#x591A;&#x8DEF;&#x6BD4;&#x8F83;&#xFF1A; 12345678switch alignment {case .left: print(&quot;left aligned&quot;)case .right: print(&quot;right aligned&quot;)case .center: print(&quot;center aligned&quot;)} Raw Value Enum&#x539F;&#x751F;&#x503C;&#x679A;&#x4E3E; &#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x5BF9;&#x539F;&#x751F;&#x7C7B;&#x578B;&#x7684;&#x53EF;&#x8BFB;&#x5316;&#x7684;&#x5305;&#x88C5;&#xFF0C;&#x5728;C/C++&#x4E0B;&#x8FD9;&#x4E2A;&#x539F;&#x751F;&#x7C7B;&#x578B;&#x53EA;&#x80FD;&#x662F;int&#xFF0C;&#x5728;swift&#x4E0B;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x66F4;&#x591A;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF1A; 123456enum TextAlignment: Int { case left case right case center case justify} &#x6307;&#x5B9A;&#x8BE5;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x7684;&#x539F;&#x751F;&#x7C7B;&#x578B;&#x4E3A;Int&#x3002; &#x6253;&#x5370;&#x539F;&#x751F;&#x503C;&#xFF1A; 12var alignment = TextAlignment.leftprint(&quot;Left has raw value \(alignment.rawValue)&quot;) &#x53EF;&#x4EE5;&#x4E3A;&#x6BCF;&#x4E2A;&#x679A;&#x4E3E;&#x503C;&#x5B9A;&#x4E49;&#x539F;&#x751F;&#x503C;&#xFF1A; 123456enum TextAlignment: Int { case left = 20 case right = 30 case center = 40 case justify = 50} &#x4ECE;&#x539F;&#x751F;&#x503C;&#x8F6C;&#x4E3A;&#x679A;&#x4E3E;&#x503C; 123456let myRawValue = 20 // &#x539F;&#x751F;&#x503C;if let myAlignment = TextAlignment(rawValue: myRawValue) { print(&quot;successfully converted.&quot;)} else{ print(&quot;\(myRawValue) has no corresponding TextAlignment case&quot;)} &#x6CE8;&#x610F;&#xFF0C;&#x6B64;&#x5904;&#x7684;&#x8F6C;&#x6362;&#x4E0D;&#x4E00;&#x5B9A;&#x90FD;&#x80FD;&#x6210;&#x529F;&#xFF0C;&#x5047;&#x5982;myRawValue = 100&#x5C31;&#x65E0;&#x6CD5;&#x5B8C;&#x6210;&#x8F6C;&#x6362;&#xFF0C;&#x6B64;&#x65F6;myAlignment&#x5C31;&#x4E3A;nil&#x3002; &#x5B50;&#x4E32;&#x7C7B;&#x578B;&#x7684;&#x679A;&#x4E3E; 1234567enum ProgrammingLanguage: String { case swift = &quot;swift&quot; case objectiveC = &quot;objective-c&quot; case c = &quot;c&quot; case cpp = &quot;c++&quot; case java = &quot;java&quot;} &#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#x503C;&#x90FD;&#x6307;&#x5B9A;rawValue&#x3002;&#x5BF9;&#x4E8E;Int&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x6CA1;&#x6307;&#x5B9A;rawValue&#x7684;&#x503C;&#x4E3A;0&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x4E3A;1&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;&#x5BF9;&#x4E8E;String&#xFF0C;&#x6CA1;&#x6307;&#x5B9A;rawValue&#x9ED8;&#x8BA4;&#x5C31;&#x662F;&#x5B83;&#x7684;case&#x540D;&#x5B57;&#x3002; &#x5E26;&#x65B9;&#x6CD5;&#x7684;&#x679A;&#x4E3E;&#x5B9A;&#x4E49; &#x5728;swift&#x4E2D;&#xFF0C;&#x4E0D;&#x4EC5;&#x7C7B;&#x3001;&#x7ED3;&#x6784;&#x4F53;&#x53EF;&#x4EE5;&#x6709;&#x6210;&#x5458;&#x65B9;&#x6CD5;&#xFF0C;&#x679A;&#x4E3E;&#x4E5F;&#x53EF;&#x4EE5;&#x6709;&#x3002;&#x5982;&#xFF1A; 123456789101112enum Lightbulb{ case on case off func surfaceTemperature(forAmbientTemperature ambient: Double) { switch self { case .on: return ambient + 150.0 case .off: return ambient } }} &#x4F7F;&#x7528;&#x65F6;&#x53EF;&#x4EE5; 123var bulb = Lightbulb.onlet ambientTemperature = 77var bulbTemperature = bulb.surfaceTemperature(forAmbientTemperature: ambientTemperature) &#x6BCF;&#x4E2A;&#x679A;&#x4E3E;&#x65B9;&#x6CD5;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;self&#x53C2;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x8BBF;&#x95EE;&#x672C;&#x5C0A;&#x5B9E;&#x4F8B;&#x3002; &#x5982;&#x679C;&#x8981;&#x5728;&#x6210;&#x5458;&#x65B9;&#x6CD5;&#x4E2D;&#x4FEE;&#x6539;&#x672C;&#x5C0A;&#x7684;&#x503C;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7ED9;&#x6210;&#x5458;&#x65B9;&#x6CD5;&#x8FFD;&#x4E0A;mutating&#x5173;&#x952E;&#x5B57;&#xFF1A; 123456789101112enum Lightbulb{ case on case off mutating func toggle() { // &#x7531;&#x4E8E;&#x8981;&#x4FEE;&#x6539;&#x672C;&#x5C0A;&#x7684;&#x503C;&#xFF0C;&#x5FC5;&#x987B;&#x7F00;&#x4E0A;mutating&#x5173;&#x952E;&#x5B57; switch self { case .on: self = .off case .off: self = .on } }} &#x5173;&#x8054;&#x503C; swift&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;&#x6BCF;&#x4E2A;&#x679A;&#x4E3E;case&#x53EF;&#x4EE5;&#x5173;&#x8054;&#x82E5;&#x5E72;&#x4E2A;&#x503C;&#x3002;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x7684;ShapeDimensions&#x8868;&#x793A;&#x51E0;&#x4F55;&#x5F62;&#x72B6;&#xFF0C;&#x5305;&#x62EC;&#x6B63;&#x65B9;&#x5F62;&#x3001;&#x957F;&#x65B9;&#x5F62;&#xFF1A; 12345678910111213141516enum ShapeDimensions { case square(side: Double) // &#x5173;&#x8054;&#x8FB9;&#x957F; case rectangle(width: Double, height: Double) // &#x5173;&#x8054;&#x957F;&#x3001;&#x5BBD; // &#x53EF;&#x4EE5;&#x4F7F;&#x7528;switch&#x8BED;&#x53E5;&#x83B7;&#x53D6;&#x5173;&#x8054;&#x503C; func area() -&gt; Double { switch self { case let .square(sice: side): return side * side case let .rectangle(width: w, height: h): return w * h } }}var squareShape = ShapeDimensions.square(side: 10.0)var rectShape = ShapeDimensions.rectangle(width: 5.0, height: 10.0) &#x5D4C;&#x5957;&#x679A;&#x4E3E; &#x65E2;&#x7136;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;case&#x53EF;&#x4EE5;&#x5173;&#x8054;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x5173;&#x8054;&#x7684;&#x503C;&#x7C7B;&#x578B;&#x80FD;&#x5426;&#x662F;&#x81EA;&#x8EAB;&#x7684;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x3002;&#x4E66;&#x4E2D;&#x4E3E;&#x7684;&#x53D8;&#x6001;&#x4F8B;&#x5B50;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A; &#x6BCF;&#x4E2A;&#x4EBA;&#x6709;&#x7236;&#x6BCD;&#xFF0C;&#x7236;&#x6BCD;&#x53C8;&#x6709;&#x5404;&#x81EA;&#x7684;&#x7236;&#x6BCD;&#xFF0C;&#x6709;&#x7684;&#x7956;&#x8F88;&#x5DF2;&#x7ECF;&#x4E0D;&#x77E5;&#x9053;&#x59D3;&#x540D;&#x4E86;&#xFF0C;&#x4E8E;&#x662F;&#x5B9A;&#x4E49;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x5982;&#x4E0B;&#xFF1A; 12345enum FamilyTree {case noKnownParentscase oneKnownParent(name: String, ancestors: FamilyTree)case twoKnownParents(fatherName: String, fatherAncestors: FamilyTree, motherName: String, motherAncestores: FamilyTree)} &#x5982;&#x679C;&#x76F4;&#x63A5;&#x8FD9;&#x4E48;&#x5199;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x62A5;&#x9519;&#x3002;&#x56E0;&#x4E3A;swift&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x9700;&#x8981;&#x77E5;&#x9053;&#x6BCF;&#x4E2A;&#x7C7B;&#x6240;&#x5360;&#x5927;&#x5C0F;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E3A;&#x4ED6;&#x4EEC;&#x7684;&#x53D8;&#x91CF;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x3002;&#x5BF9;&#x4E8E;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;case&#x6240;&#x5360;&#x5185;&#x5B58;&#x5927;&#x5C0F;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4E3A;&#x6B64;&#x679A;&#x4E3E;&#x5BF9;&#x8C61;&#x53D8;&#x91CF;&#x5206;&#x914D;&#x6700;&#x5927;case&#x6240;&#x5360;&#x7A7A;&#x95F4;&#x5373;&#x53EF;&#x3002;&#x4F46;&#x662F;&#x7531;&#x4E8E;oneKnownParent&#x53C8;&#x4F9D;&#x8D56;FamilyTree&#xFF0C;&#x6240;&#x4EE5;&#x7F16;&#x8BD1;&#x5668;&#x5C31;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x8BE5;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x5230;&#x5E95;&#x5360;&#x7528;&#x591A;&#x5927;&#x5185;&#x5B58;&#x4E86;&#x3002; &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x5199;&#xFF1A; 12345indirect enum FamilyTree {case noKnownParentscase oneKnownParent(name: String, ancestors: FamilyTree)case twoKnownParents(fatherName: String, fatherAncestors: FamilyTree, motherName: String, motherAncestores: FamilyTree)} &#x5173;&#x952E;&#x5B57;indirect&#x544A;&#x8BC9;&#x7F16;&#x8BD1;&#x5668;&#x4E3A;&#x6B64;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x4FDD;&#x7559;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x5927;&#x5C0F;&#x5373;&#x53EF;&#x3002;&#x8FD9;&#x4E2A;FamilyTree&#x5BF9;&#x8C61;&#x5728;64&#x4F4D;&#x673A;&#x5668;&#x4E0B;&#x5C31;&#x5360;&#x7528;8&#x5B57;&#x8282;&#x3002; &#x8FD8;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; 12345enum FamilyTree {case noKnownParentsindirect case oneKnownParent(name: String, ancestors: FamilyTree)indirect case twoKnownParents(fatherName: String, fatherAncestors: FamilyTree, motherName: String, motherAncestores: FamilyTree)} &#x4F46;&#x662F;&#x4E66;&#x91CC;&#x6CA1;&#x5199;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5360;&#x591A;&#x5927;&#x7A7A;&#x95F4;&#xFF0C;&#x6211;&#x7406;&#x89E3;&#x5E94;&#x8BE5;&#x53EA;&#x662F;&#x6BCF;&#x4E2A;case&#x5360;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x5927;&#x5C0F;&#x5427;&#xFF1F;]]></content>
      <categories>
        <category>Swift Programming</category>
      </categories>
      <tags>
        <tag>Swift BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记总结]]></title>
    <url>%2F2017%2F08%2F12%2F2017%2F0812iOSProgrammingBNRG%2F</url>
    <content type="text"><![CDATA[&#x91CD;&#x8BFB;&#x300A;iOS Programming BNRG&#x300B;&#xFF0C;&#x540C;&#x65F6;&#x89E3;&#x51B3;&#x77E5;&#x8BC6;&#x5185;&#x5316;&#x7684;&#x95EE;&#x9898;&#x3002; &#x4E00;&#x5E74;&#x524D;&#x66FE;&#x7ECF;&#x8BFB;&#x8FC7;&#x672C;&#x4E66;&#x7B2C;&#x56DB;&#x7248;&#xFF0C;&#x5F53;&#x65F6;&#x8BFB;&#x7684;&#x7EB8;&#x7248;&#xFF0C;&#x8DDF;&#x7740;&#x4E66;&#x4E0A;&#x7684;&#x4F8B;&#x5B50;&#x505A;&#x4E86;&#xFF0C;&#x4E66;&#x91CC;&#x4E5F;&#x5199;&#x4E86;&#x597D;&#x591A;&#x7B14;&#x8BB0;&#x3002;&#x53EF;&#x5728;&#x4E00;&#x4E2A;&#x6708;&#x524D;&#x9700;&#x8981;&#x5728;iOS&#x4E0A;&#x5199;&#x4E00;&#x6BB5;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x5F88;&#x6293;&#x72C2;&#xFF0C;&#x5F88;&#x591A;&#x4E1C;&#x897F;&#x5FD8;&#x5F97;&#x5DEE;&#x4E0D;&#x591A;&#x4E86;&#x3002;&#x5DE5;&#x4F5C;&#x4E2D;&#x7684;&#x4E3B;&#x8981;&#x7CBE;&#x529B;&#x90FD;&#x5728;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E0A;&#xFF0C;&#x5E73;&#x53F0;&#x76F8;&#x5173;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5E38;&#x5E74;&#x7684;&#x7EC3;&#x4E60;&#xFF0C;&#x771F;&#x662F;&#x4E09;&#x5929;&#x4E0D;&#x7EC3;&#x624B;&#x5C31;&#x751F;&#x3002;&#x4E0D;&#x53EF;&#x80FD;&#x518D;&#x50CF;&#x5F53;&#x5E74;&#x90A3;&#x6837;&#x6709;&#x5927;&#x628A;&#x65F6;&#x95F4;&#x6D78;&#x6DEB;&#x5728;Windows/Visual Studio&#x4E0B;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x4E0D;&#x518D;&#x8FFD;&#x6C42;&#x5728;&#x5E73;&#x53F0;&#x4E0B;&#x6709;&#x90A3;&#x6837;&#x7684;&#x719F;&#x7A14;&#x7A0B;&#x5EA6;&#xFF0C;&#x90A3;&#x662F;&#x5E74;&#x8F7B;&#x540C;&#x5B66;&#x505A;&#x7684;&#x4E8B;&#x3002;&#x53EF;&#x662F;&#x9047;&#x5230;&#x95EE;&#x9898;&#x80FD;&#x5728;&#x67D0;&#x4E2A;&#x5E73;&#x53F0;&#x4E0B;&#x5FEB;&#x901F;&#x9A8C;&#x8BC1;&#x7684;&#x52A8;&#x624B;&#x80FD;&#x529B;&#x662F;&#x5FC5;&#x987B;&#x8981;&#x6709;&#x7684;&#xFF0C;&#x603B;&#x8BF7;&#x5C0F;&#x670B;&#x53CB;&#x4EEC;&#x4EE3;&#x52B3;&#x4E00;&#x65B9;&#x9762;&#x4FE1;&#x606F;&#x6D41;&#x8F6C;&#x6548;&#x7387;&#x592A;&#x4F4E;&#xFF0C;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#x7684;&#x9A8C;&#x8BC1;&#x672C;&#x6765;&#x53EA;&#x9700;&#x8981;&#x5341;&#x6765;&#x5206;&#x949F;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4EBA;&#x505A;&#x6C9F;&#x901A;&#x90FD;&#x4E0D;&#x6B62;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x624B;&#x751F;&#x7684;&#x65F6;&#x95F4;&#x957F;&#x4E86;&#x4E5F;&#x4F1A;&#x5F71;&#x54CD;&#x610F;&#x8BC6;&#x3002; &#x6211;&#x4E0D;&#x5E0C;&#x671B;&#x8FD9;&#x6B21;&#x7FFB;&#x5F00;&#x4E66;&#x518D;&#x8FC7;&#x4E00;&#x4E24;&#x4E2A;&#x6708;&#x53C8;&#x5FD8;&#x6389;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x60F3;&#x4E00;&#x4E2A;&#x66F4;&#x6709;&#x6548;&#x7387;&#x7684;&#x529E;&#x6CD5;&#x628A;&#x77E5;&#x8BC6;&#x5185;&#x5316;&#xFF0C;&#x7ED3;&#x6210;&#x77E5;&#x8BC6;&#x6676;&#x4F53;&#xFF0C;&#x6C38;&#x4E45;&#x4FDD;&#x5B58;&#x3002;&#x4ECA;&#x5E74;&#x8BFB;&#x8FC7;&#x4E00;&#x4E9B;&#x5FEB;&#x901F;&#x9605;&#x8BFB;&#x7684;&#x8457;&#x4F5C;&#xFF0C;&#x7B2C;&#x4E00;&#x904D;&#x7565;&#x8BFB;&#xFF0C;&#x7B2C;&#x4E8C;&#x904D;&#x91CD;&#x70B9;&#x7A81;&#x7834;&#xFF0C;&#x7B2C;&#x4E09;&#x904D;&#x603B;&#x7ED3;&#x590D;&#x8FF0;&#x3002;&#x4F46;&#x6211;&#x89C9;&#x5F97;&#x6838;&#x5FC3;&#x76EE;&#x6807;&#x4E0D;&#x662F;&#x5FEB;&#xFF0C;&#x800C;&#x662F;&#x5185;&#x5316;&#x3002;&#x5373;&#x4F7F;&#x4EE8;&#x6708;&#x4E0D;&#x7528;&#x4E5F;&#x4E0D;&#x4F1A;&#x5FD8;&#x6389;&#xFF0C;&#x6216;&#x8005;&#x82B1;&#x5341;&#x5206;&#x949F;&#x5C31;&#x80FD;&#x6062;&#x590D;&#x73B0;&#x573A;&#x3002; &#x8FD9;&#x6B21;&#x8BFB;&#x4E86;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x7B2C;6&#x7248;&#x82F1;&#x6587;&#x7535;&#x5B50;&#x7248;&#xFF0C;&#x4E2D;&#x6587;&#x7248;&#x597D;&#x50CF;&#x8FD8;&#x6CA1;&#x51FA;&#x5230;&#x8FD9;&#x4E48;&#x65B0;&#x3002;&#x5185;&#x5316;&#x7684;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5BF9;&#x4E8E;&#x539F;&#x5148;&#x6709;&#x5370;&#x8C61;&#x7684;&#x7AE0;&#x8282;&#xFF0C;&#x5148;&#x4E0D;&#x7740;&#x6025;&#x770B;&#xFF0C;&#x5408;&#x4E0A;&#x4E66;&#x60F3;&#x4E00;&#x4E0B;&#x672C;&#x7AE0;&#x5B8C;&#x6210;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x505A;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x505A;&#x3002;&#x4F1A;&#x505A;&#x7684;&#x5199;&#x4E0B;&#x6B65;&#x9AA4;&#xFF0C;&#x4E0D;&#x4F1A;&#x505A;&#x7684;&#x5199;&#x4E0B;&#x95EE;&#x9898;&#xFF0C;&#x8D8A;&#x5177;&#x4F53;&#x8D8A;&#x597D;&#x3002; 2. &#x5BF9;&#x4E8E;&#x6CA1;&#x5370;&#x8C61;&#x7684;&#x7AE0;&#x8282;&#xFF0C;&#x5148;&#x626B;&#x4E00;&#x904D;&#x672C;&#x7AE0;&#x76EE;&#x6807;&#xFF0C;&#x7136;&#x540E;&#x505A;&#x7B2C;1&#x6B65;&#xFF0C;&#x60F3;&#x60F3;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x8FBE;&#x6210;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#x6216;&#x8005;&#x53EF;&#x80FD;&#x600E;&#x4E48;&#x8FBE;&#x6210;&#x76EE;&#x6807;&#x3002;&#x60F3;&#x5F97;&#x8D8A;&#x8BE6;&#x7EC6;&#x8D8A;&#x597D;&#xFF0C;&#x6700;&#x597D;&#x80FD;&#x7EC6;&#x5316;&#x5230;&#x4EE3;&#x7801;&#x884C;&#x6216;&#x64CD;&#x4F5C;&#x6D41;&#x7A0B;&#x3002;&#x60F3;&#x4E0D;&#x901A;&#x4E86;&#x81EA;&#x7136;&#x5C31;&#x53D1;&#x73B0;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x8D76;&#x7D27;&#x8BB0;&#x4E0B;&#x6765;&#x3002; 3. &#x5E26;&#x7740;1&#x3001;2&#x8BB0;&#x5F55;&#x7684;&#x95EE;&#x9898;&#x9605;&#x8BFB;&#x672C;&#x7AE0;&#xFF0C;&#x627E;&#x5230;&#x6BCF;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7B54;&#x6848;&#x3002; 4. &#x6BCF;&#x8BFB;&#x5B8C;&#x4E00;&#x8282;&#xFF08;&#x4E0D;&#x662F;&#x4E00;&#x7AE0;&#xFF09;&#xFF0C;&#x5C31;&#x628A;&#x8FD9;&#x4E00;&#x8282;&#x68B3;&#x7406;&#x6210;&#x7B14;&#x8BB0;&#x3002;&#x68B3;&#x7406;&#x7684;&#x539F;&#x5219;&#x662F;&#x8BA9;&#x672A;&#x6765;&#x80FD;&#x7528;&#x6700;&#x77ED;&#x7684;&#x65F6;&#x95F4;&#x56DE;&#x987E;&#x672C;&#x7AE0;&#x5185;&#x5BB9;&#x3002;&#x8981;&#x70B9;&#xFF1A; - &#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5254;&#x9664;&#x6389;&#xFF0C;&#x628A;&#x77E5;&#x8BC6;&#x8981;&#x70B9;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x672A;&#x6765;&#x7FFB;&#x770B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E9B;&#x5185;&#x5BB9;&#x662F;&#x6700;&#x6709;&#x7528;&#x7684;&#x3002; - &#x4E00;&#x4E2A;&#x957F;&#x7A0B;&#x6B65;&#x9AA4;&#xFF0C;&#x6210;&#x4F53;&#x7CFB;&#x5730;&#x68B3;&#x7406;&#x51FA;&#x6765;&#xFF0C;&#x626B;&#x4E00;&#x773C;&#x5C31;&#x80FD;&#x6982;&#x89C8;&#x5168;&#x8C8C; 5. &#x5BF9;&#x4E8E;&#x6BD4;&#x8F83;&#x957F;&#x7684;&#x7AE0;&#xFF0C;&#x53EF;&#x4EE5;&#x8282;&#x4E3A;&#x5355;&#x4F4D;&#x5B8C;&#x6210;&#x4EE5;&#x4E0A;4&#x6B65; 6. &#x5168;&#x4E66;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x7528;&#x9605;&#x8BFB;&#x5168;&#x4E66;5%~10%&#x7684;&#x65F6;&#x95F4;&#x628A;&#x7B14;&#x8BB0;&#x56DE;&#x987E;&#x4E00;&#x904D;&#x3002;&#x53EF;&#x80FD;&#x8FD8;&#x6709;&#x9057;&#x7559;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x672A;&#x6765;&#x901A;&#x8FC7;&#x5EF6;&#x4F38;&#x9605;&#x8BFB;&#x6216;&#x8005;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x518D;&#x4F53;&#x4F1A;&#xFF0C;&#x56DE;&#x7B54;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记二十三]]></title>
    <url>%2F2017%2F08%2F11%2F2017%2F0811iOSProgrammingBNRG23%2F</url>
    <content type="text"><![CDATA[CoreData&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x672C;&#x7AE0;&#x8BA9;&#x4E24;&#x4E2A;&#x8868;&#x4E4B;&#x95F4;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x5173;&#x7CFB;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x4E3A;Core Data&#x751F;&#x6210;&#x4EE3;&#x7801; - Core Data Relationships 1 CoreData&#x7684;&#x4EE3;&#x7801;&#x751F;&#x6210; 1.1 Entity&#x7684;Codegen&#x9009;&#x9879; Entity&#x7684;Codegen&#x5BF9;&#x5E94;&#x4E09;&#x4E2A;&#x9009;&#x9879;&#xFF1A; Manual/None &#x544A;&#x8BC9;Xcode&#x4E0D;&#x8981;&#x4E3A;Entity&#x751F;&#x6210;&#x4EFB;&#x4F55;&#x4EE3;&#x7801; Class Definition &#x81EA;&#x52A8;&#x751F;&#x6210;&#x5168;&#x90E8;&#x7684;&#x7C7B;&#x5B9A;&#x4E49; Category/Extionsion &#x7531;&#x7A0B;&#x5E8F;&#x5458;&#x81EA;&#x5DF1;&#x5199;NSManagedObject&#x5B50;&#x7C7B;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x884C;&#x4E3A;&#xFF0C;&#x4F46;Xcode&#x4F1A;&#x751F;&#x6210;&#x6269;&#x5C55;&#x4EE3;&#x7801;&#x6765;&#x5B9A;&#x4E49;&#x7C7B;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x5173;&#x7CFB; 2 Core Data Relationships 2.1 Core Data Relationships&#x662F;&#x4EC0;&#x4E48; Core Data Relationships&#x5C31;&#x662F;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x8FDE;&#x63A5;&#x5173;&#x7CFB;&#x3002; 2.2 &#x600E;&#x4E48;&#x5728;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5C42;&#x521B;&#x5EFA;Core Data Relationships &#x4E00;&#x3001;&#x6253;&#x5F00;xcdatamodeld&#x6587;&#x4EF6;&#x7F16;&#x8F91;&#x5668;&#xFF0C;&#x539F;&#x5148;&#x5DF2;&#x7ECF;&#x6DFB;&#x52A0;&#x4E86;Photo&#x5B9E;&#x4F53;&#xFF0C;&#x518D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;Tag&#x5B9E;&#x4F53;&#xFF0C;&#x4EC5;&#x5305;&#x542B;&#x4E00;&#x4E2A;name:String&#x5B57;&#x6BB5;&#xFF1A; &#x53EF;&#x4EE5;&#x7ED9;&#x7167;&#x7247;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;&#x6807;&#x7B7E;&#xFF0C;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x53C8;&#x53EF;&#x4EE5;&#x6807;&#x6CE8;&#x591A;&#x5F20;&#x7167;&#x7247;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x5BF9;&#x591A;&#x7684;&#x5173;&#x7CFB; &#x4E8C;&#x3001;&#x5728;Photo&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x5173;&#x7CFB;&#xFF0C;&#x540D;&#x5B57;&#x4E3A;tags&#xFF0C;Destination&#x4E3A;Tag&#xFF0C; &#x540C;&#x6837;&#x5730;&#x5728;Tag&#x4E2D;&#x4E5F;&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x5173;&#x7CFB;Relationship=photoes&#xFF0C;Destination=Photo&#xFF0C;&#x4EE5;&#x4E0A;&#x4E24;&#x6B65;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x6761;&#x5355;&#x5411;&#x5173;&#x7CFB;&#x3002; &#x5728;Photo&#x7684;tags&#x5173;&#x7CFB;&#x4E2D;&#x9009;&#x62E9;Inverse=photoes&#xFF0C;&#x8FD9;&#x4F1A;&#x8BA9;Tag&#x7684;photoes&#x5173;&#x7CFB;Inverse=tags&#xFF0C;&#x8FD9;&#x5C31;&#x628A;&#x4E24;&#x6761;&#x5355;&#x5411;&#x5173;&#x7CFB;&#x53D8;&#x6210;&#x4E86;&#x4E00;&#x6761;&#x53CC;&#x5411;&#x5173;&#x7CFB;&#x3002; &#x4E09;&#x3001;&#x70B9;&#x51FB;&#x83DC;&#x5355;Editor -&gt; Create NSManagedObject Subclass&#x4E3A;Photo&#x751F;&#x6210;&#x4EE3;&#x7801;&#x3002; 2.3 &#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x64CD;&#x4F5C;&#x5173;&#x7CFB;&#x6570;&#x636E; &#x672C;&#x7AE0;&#x4E2D;&#x5927;&#x91CF;&#x7684;&#x7BC7;&#x5E45;&#x82B1;&#x5728;&#x4E86;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E0A;&#xFF0C;&#x524D;&#x4E00;&#x6B65;&#x521B;&#x5EFA;&#x4E86;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x6A21;&#x578B;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x6765;&#x6309;&#x7167;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x6DFB;&#x52A0;&#x6570;&#x636E;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x9996;&#x5148;&#x770B;Xcode&#x4E3A;photo+CoreDataProperties&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x5DF2;&#x7ECF;&#x4E3A;&#x64CD;&#x4F5C;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x751F;&#x6210;&#x4E86;&#x4EE3;&#x7801;&#xFF1A; 12345678910111213141516extension Photo { // &#x4E3A;Photo&#x751F;&#x6210;&#x7684;&#x5B57;&#x6BB5;&#x5C5E;&#x6027; &#x2026;&#x2026; @NSManaged public var dateTaken: NSDate? @NSManaged public var photoID: String? &#x2026;&#x2026;}extension Photo { // &#x4E3A;Photo&#x751F;&#x6210;&#x7684;relationship&#x65B9;&#x6CD5; @objc(addTagsObject:) @NSManaged public func addToTags(_ value: Tag) @objc(removeTagsObject:) @NSManaged public func removeFromTags(_ value: Tag) &#x2026;&#x2026;} &#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x4E3A;&#x67D0;&#x4E2A;&#x56FE;&#x7247;&#x52FE;&#x9009;/&#x52FE;&#x6389;tag&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5C31;&#x80FD;&#x4FEE;&#x6539;&#x5173;&#x7CFB;&#xFF1A; 123456789101112131415161718192021222324class TagsViewController: UITableViewController { &#x2026;&#x2026; // &#x52FE;&#x9009;/&#x52FE;&#x6389;&#x67D0;&#x4E00;item&#x65F6;&#x4F1A;&#x8C03;&#x7528;&#x6B64;&#x65B9;&#x6CD5; override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath){ let tag = tagDataSource.tags[indexPath.row] if let index = selectedIndexPaths.index(of: indexPath){ selectedIndexPaths.remove(at: index) photo.removeFromTags(tag) // &#x8C03;&#x7528;relationship&#x65B9;&#x6CD5;&#x4FEE;&#x6539;&#x5173;&#x7CFB;&#x6570;&#x636E; }else{ selectedIndexPaths.append(indexPath) photo.addToTags(tag) } do{ try store.persistentContainer.viewContext.save() }catch{ print(&quot;Core Data save failed: \(error).&quot;) } tableView.reloadRows(at: [indexPath], with: .automatic) } &#x2026;&#x2026;} 2.4 iOS&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B; &#x6211;&#x89C9;&#x5F97;iOS&#x591A;&#x7EBF;&#x7A0B;&#x7F16;&#x7A0B;&#x6A21;&#x5F0F;&#x597D;&#x8BE1;&#x5F02;&#xFF0C;&#x5E94;&#x8BE5;&#x518D;&#x4F53;&#x7CFB;&#x5730;&#x7814;&#x7A76;&#x4E00;&#x4E0B;iOS&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记二十二]]></title>
    <url>%2F2017%2F08%2F10%2F2017%2F0810iOSProgrammingBNRG22%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x628A;&#x4ECE;web server&#x4E0A;&#x83B7;&#x53D6;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5230;Core Data&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Core Data 1 CoreData 1.1 &#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;CoreData Archiving&#x6700;&#x5927;&#x7684;&#x7F3A;&#x70B9;&#x662F;all-or-nothing&#x7279;&#x6027;&#xFF1A;&#x5982;&#x679C;&#x8981;&#x8BFB;&#x53D6;archive&#x6587;&#x4EF6;&#xFF0C;&#x5FC5;&#x987B;&#x628A;&#x5B83;&#x5168;&#x90E8;unarchive&#xFF1B;&#x5982;&#x679C;&#x8981;&#x5199;&#x5165;&#x4E5F;&#x5FC5;&#x987B;&#x5199;&#x5165;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x3002; CoreData&#x5219;&#x53EF;&#x4EE5;&#x53EA;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x5B50;&#x96C6;&#xFF0C;&#x6216;&#x8005;&#x53EA;&#x4FEE;&#x6539;&#x4E00;&#x90E8;&#x5206;&#x3002; 1.2 &#x600E;&#x4E48;&#x521B;&#x5EFA;CoreData &#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x662F;&#x7531;&#x8868;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x8868;&#x662F;&#x7531;&#x5B57;&#x6BB5;&#x7EC4;&#x6210;&#x7684;&#xFF0C;CoreData&#x662F;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7684;&#x53E6;&#x4E00;&#x79CD;&#x8868;&#x8FF0;&#x65B9;&#x5F0F;&#xFF1A;&#x8868;&#x5728;CoreData&#x4E2D;&#x88AB;&#x79F0;&#x4F5C;&#x5B9E;&#x4F53;&#xFF08;entity&#xFF09;&#xFF0C;&#x5B57;&#x6BB5;&#x5728;CoreData&#x4E2D;&#x88AB;&#x79F0;&#x4F5C;&#x5C5E;&#x6027;&#xFF08;attribute&#xFF09;&#x3002;CoreData&#x6587;&#x4EF6;&#x6B63;&#x662F;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5B9E;&#x4F53;&#x7684;&#x3002; &#x4E00;&#x3001;&#x65B0;&#x5EFA;CoreData&#x6587;&#x4EF6; &#x4E8C;&#x3001;&#x5728;CoreData&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x6DFB;&#x52A0;&#x5B9E;&#x4F53;&#xFF0C;&#x6DFB;&#x52A0;&#x5C5E;&#x6027; &#xFFFC; 1.3 Transformable&#x6570;&#x636E;&#x7C7B;&#x578B;&#x662F;&#x5E72;&#x561B;&#x7528;&#x7684; CoreData&#x662F;&#x4E00;&#x4E2A;OC&#x5C42;&#x7684;framework&#xFF0C;&#x53EA;&#x80FD;&#x5904;&#x7406;&#x67D0;&#x4E9B;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x6BD4;&#x5982;&#xFF1A;&#x5B83;&#x4E0D;&#x80FD;&#x5904;&#x7406;URL&#xFF08;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;struct&#xFF09;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x5904;&#x7406;NSURL&#xFF08;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;class&#xFF09;&#x3002; swift&#x63D0;&#x4F9B;&#x4E86;URL&#x548C;NSURL&#x76F8;&#x4E92;&#x8F6C;&#x6362;&#x7684;&#x673A;&#x5236;&#x3002;&#x7C7B;&#x578B;&#x4E3A;transformable&#x7684;&#x5C5E;&#x6027;&#x9700;&#x8981;&#x4F7F;&#x7528;ValueTransformer&#x7684;&#x5B50;&#x7C7B;&#x6765;&#x5B8C;&#x6210;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x660E;&#x786E;&#x6307;&#x5B9A;&#x5B50;&#x7C7B;&#xFF0C;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;NSKeyedUnarchiveFromDataTransformer&#x6765;&#x5B8C;&#x6210;&#x8F6C;&#x6362;&#xFF0C;&#x5B83;&#x901A;&#x8FC7;archiving&#x628A;&#x6570;&#x636E;&#x8F6C;&#x6210;Data&#x5BF9;&#x8C61;&#x3002;&#x7531;&#x4E8E;NSURL&#x9075;&#x5FAA;NSCoding&#x534F;&#x8BAE;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;NSKeyedUnarchiverFromDataTransformer&#x8DB3;&#x4EE5;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#xFF1B;&#x5982;&#x679C;&#x88AB;&#x8F6C;&#x6362;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E0D;&#x9075;&#x5FAA;NSCoding&#x534F;&#x8BAE;&#xFF0C;&#x4F60;&#x5C31;&#x5F97;&#x81EA;&#x5DF1;&#x4E3A;&#x4ED6;&#x5199;ValueTransformer&#x5B50;&#x7C7B;&#x4E86;&#x3002; 1.4 &#x600E;&#x4E48;&#x4E3A;CoreData&#x751F;&#x6210;&#x4EE3;&#x7801; &#x521B;&#x5EFA;CoreData&#x53EA;&#x662F;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6A21;&#x578B;&#xFF0C;&#x6216;&#x8005;&#x53EF;&#x7406;&#x89E3;&#x4E3A;&#x5EFA;&#x8868;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x4E3A;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x6A21;&#x578B;&#x751F;&#x6210;&#x4EE3;&#x7801;&#xFF0C;&#x4EE5;&#x64CD;&#x4F5C;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x5B9E;&#x4F53;&#x3002; &#x628A;&#x5B9E;&#x4F53;&#x7684;Codegen&#x8BBE;&#x7F6E;&#x4E3A;Manual/None&#xFF0C;&#x5728;Editor&#x4E2D;&#x9009;&#x62E9;&#x672A;&#x77E5;&#x751F;&#x6210;NSManagedObject Subclass&#x3002; &#x4E00;&#x8DEF;&#x4E0B;&#x4E00;&#x6B65;&#x751F;&#x6210;&#x4EE3;&#x7801;&#xFF1A; &#x6240;&#x6709;CoreData&#x7684;&#x5BF9;&#x8C61;&#x5FC5;&#x987B;&#x662F;NSManagedObject&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x8BE5;&#x7C7B;&#x8D1F;&#x8D23;&#x7BA1;&#x7406;CoreData&#x5BF9;&#x8C61;&#x3002; &#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x542B;&#xFF1A;Photo+CoreDataClass.swift &#x548C; Photo+CoreDataProperties.swift&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x3002;Xcode&#x6839;&#x636E;CoreData&#x5B9E;&#x4F53;&#x7684;&#x5B9A;&#x4E49;&#x751F;&#x6210;Photo+CoreDataProperties.swift&#x6587;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x8981;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x8BE5;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;CoreData&#x5B9E;&#x4F53;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5E94;&#x5F53;&#x76F4;&#x63A5;&#x5220;&#x9664;&#x5E76;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x8BE5;&#x6587;&#x4EF6;&#x3002;&#x4EFB;&#x4F55;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x4EE3;&#x7801;&#x90FD;&#x5E94;&#x5F53;&#x653E;&#x5230;Photo+CoreDataClass.swift&#x4E2D;&#x3002; Photo+CoreDataProperties.swift&#x7684;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314import Foundationimport CoreDataextension Photo { @nonobjc public class func fetchRequest() -&gt; NSFetchRequest&lt;Photo&gt; { return NSFetchRequest&lt;Photo&gt;(entityName: &quot;Photo&quot;) } @NSManaged public var photoID: String? @NSManaged public var title: String? @NSManaged public var dateTaken: NSDate? @NSManaged public var remoteURL: NSURL?} &#x5176;&#x4E2D;@NSManaged&#x5173;&#x952E;&#x5B57;&#x8868;&#x793A;&#x8BE5;&#x5B57;&#x6BB5;&#x6765;&#x81EA;CoreData&#xFF0C;&#x5B83;&#x7684;&#x5B58;&#x50A8;&#x548C;&#x5B9E;&#x73B0;&#x4F1A;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x63D0;&#x4F9B;&#x3002; 1.5 NSPersistentContainer&#x7684;&#x4F5C;&#x7528; NSPersistentContainer&#x50CF;&#x662F;&#x6587;&#x4EF6;&#x8BFB;&#x5199;&#x7684;&#x201C;&#x6587;&#x4EF6;&#x201D;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x53EF;&#x4EE5;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#xFF1A; 12345678910111213class PhotoStore { &#x2026;&#x2026; let persistentContainer: NSPersistentContainer = { let container = NSPersistentContainer(name: &quot;Photorama&quot;) // name&#x5FC5;&#x987B;&#x4E0E;CoreData&#x6587;&#x4EF6;&#x540D;&#x76F8;&#x540C; container.loadPersistentStores{(description, error) in // &#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x64CD;&#x4F5C; if let error = error{ print(&quot;Error setting up Core Data (\(error)).&quot;) } } return container }()&#x2026;&#x2026;} &#x95EE;&#x9898;&#xFF1A;&#x6587;&#x4EF6;&#x7684;&#x5177;&#x4F53;&#x4F4D;&#x7F6E;&#x5728;&#x54EA;&#x91CC;&#xFF1F; 1.6 NSManagedObjectContext&#x7684;&#x4F5C;&#x7528; viewContext&#x662F;NSPersistentContainer&#x7684;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x7C7B;&#x578B;&#x4E3A;NSManagedObjectContext&#x3002;&#x8FD9;&#x5F88;&#x50CF;&#x662F;&#x6570;&#x636E;&#x5E93;&#x6E38;&#x6807;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x662F;&#x7528;&#x6765;&#x64CD;&#x4F5C;CoreData&#x7684;&#x5165;&#x53E3;&#x3002; 1.7 &#x600E;&#x4E48;&#x5199;&#x5165;CoreData&#x6570;&#x636E; CoreData&#x6570;&#x636E;&#x7684;&#x5199;&#x5165;&#x5206;&#x4E24;&#x6B65;&#xFF1A; &#x4E00;&#x3001;&#x5C06;&#x6570;&#x636E;&#x5199;&#x5165;&#x201C;&#x6E38;&#x6807;&#x201D;viewContext 1234567891011121314151617181920212223242526struct FlickrAPI { &#x2026;&#x2026; private static func photo(fromJSON json: [String: Any], into context: NSManagedObjectContext) -&gt; Photo?{ guard // &#x4ECE;json&#x4E2D;&#x8BFB;&#x53D6;&#x4E00;&#x4E2A;photo&#x5BF9;&#x8C61; let photoID = json[&quot;id&quot;] as? String, let title = json[&quot;title&quot;] as? String, let dateString = json[&quot;datetaken&quot;] as? String, let photoURLString = json[&quot;url_h&quot;] as? String, let url = URL(string: photoURLString), let dateTaken = dateFormatter.date(from: dateString)else{ return nil } var photo: Photo! // context&#x5373;persistentContainer.viewContext&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;photo&#x5BF9;&#x8C61;&#x5199;&#x5165;CoreData context.performAndWait{ photo = Photo(context: context) photo.title = title photo.photoID = photoID photo.remoteURL = url as NSURL photo.dateTaken = dateTaken as NSDate } return photo }&#x2026;&#x2026;} &#x8FD9;&#x53EA;&#x662F;&#x5199;&#x5165;&#x4E86;&#x6E38;&#x6807;&#xFF0C;&#x6309;&#x7167;&#x6570;&#x636E;&#x5E93;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x628A;&#x6E38;&#x6807;&#x4E2D;&#x7684;&#x6570;&#x636E;commit&#x5230;&#x6587;&#x4EF6;&#x3002; &#x4E8C;&#x3001;&#x5C06;&#x201C;&#x6E38;&#x6807;&#x201D;&#x4FDD;&#x5B58;&#x5230;&#x6587;&#x4EF6;&#xFF1A; 123456789101112131415161718192021222324252627282930313233class PhotoStore { &#x2026;&#x2026; let persistentContainer: NSPersistentContainer = { let container = NSPersistentContainer(name: &quot;Photorama&quot;) container.loadPersistentStores{(description, error) in if let error = error{ print(&quot;Error setting up Core Data (\(error)).&quot;) } } return container }() &#x2026;&#x2026; func fetchInterestingPhotoes(completion: @escaping(PhotoesResult) -&gt; Void){ let url = FlickrAPI.interestingPhotoesURL let request = URLRequest(url: url) let task = session.dataTask(with: request, completionHandler:{ (data, response, error) -&gt; Void in // &#x4ECE;web server&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x524D;&#x9762;&#x7684;FlickrAPI::photoes&#x751F;&#x6210;Photo&#x5BF9;&#x8C61;&#xFF0C;&#x63D2;&#x5165;&#x6E38;&#x6807; var result = self.processPhotoesRequest(data: data, error: error) if case .success = result{ do{ // &#x6210;&#x529F;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x6570;&#x636E;&#x90FD;&#x8FDB;&#x5165;&#x4E86;&#x6E38;&#x6807;&#xFF0C;&#x8FD9;&#x91CC;&#x4FDD;&#x5B58;&#x5230;&#x6587;&#x4EF6; try self.persistentContainer.viewContext.save() }catch let error{ result = .failure(error) } } OperationQueue.main.addOperation { completion(result) } }) task.resume() } &#x4EE5;&#x4E0A;&#x4E24;&#x6B65;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x6570;&#x636E;&#x5199;&#x5165;&#x6E38;&#x6807;&#xFF0C;&#x4FDD;&#x5B58;&#x6E38;&#x6807;&#x5230;&#x6587;&#x4EF6;&#x7684;&#x8FC7;&#x7A0B;&#x3002; 1.8 &#x6392;&#x5E8F;&#x63CF;&#x8FF0;&#x7B26;&#x548C;&#x8C13;&#x8BCD; &#x4ECE;CoreData&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x4E5F;&#x5F88;&#x50CF;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6570;&#x636E;&#x5E93;&#x6709;SQL&#x8BED;&#x53E5;&#x6765;&#x63CF;&#x8FF0;&#x8981;&#x83B7;&#x53D6;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x800C;CoreData&#x662F;&#x901A;&#x8FC7;&#x6392;&#x5E8F;&#x63CF;&#x8FF0;&#x7B26;&#x548C;&#x8C13;&#x8BCD;&#x3002; &#x6392;&#x5E8F;&#x63CF;&#x8FF0;&#x7B26;sortDescriptors&#x662F;&#x4E00;&#x4E2A;NSSortDescriptor&#x6570;&#x7EC4;&#xFF0C;&#x8BB0;&#x5F55;&#x4E3B;&#x6392;&#x5E8F;&#x89C4;&#x5219;&#x3001;&#x6B21;&#x6392;&#x5E8F;&#x89C4;&#x5219;&#x4EE5;&#x53CA;&#x66F4;&#x4F4E;&#x4E00;&#x7EA7;&#x7684;&#x6392;&#x5E8F;&#x89C4;&#x5219;&#x3002;&#x76F8;&#x5F53;&#x4E8E;SQL&#x4E2D;&#x7684;order by &#x4ECE;&#x53E5; &#x8C13;&#x8BCD;&#x5219;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x67E5;&#x8BE2;&#x51FA;&#x7684;&#x6570;&#x636E;&#x5E94;&#x6EE1;&#x8DB3;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;SQL&#x4E2D;&#x7684;where&#x4ECE;&#x53E5;&#x3002; &#x6700;&#x540E;&#x8FD9;&#x4E9B;&#x4ECE;&#x53E5;&#x90FD;&#x5C06;&#x914D;&#x7F6E;&#x5230;NSFetchRequest&#x5BF9;&#x8C61;&#xFF0C;NSFetchRequest&#x76F8;&#x5F53;&#x4E8E;&#x5B8C;&#x6574;&#x7684;SQL 1.9 &#x600E;&#x4E48;&#x4ECE;CoreData&#x8BFB;&#x51FA;&#x6570;&#x636E; &#x4E00;&#x3001;&#x6784;&#x9020;NSFetchRequest&#x5B9E;&#x4F8B; 1let fetchRequest: NSFetchRequest&lt;Photo&gt; = Photo.fetchRequest() &#x4E8C;&#x3001;&#x6784;&#x9020;&#x6392;&#x5E8F;&#x548C;&#x8C13;&#x8BCD; 1234let sortByDateTaken = NSSortDescriptor(key: #keyPath(Photo.dateTaken), ascending: true)fetchRequest.sortDescriptors = [sortByDateTaken]let predicate = NSPredicate(format: &quot;#keyPath(Photo.photoID) == \(someIdentifier)&quot;) request.predicate = predicate &#x4E09;&#x3001;&#x901A;&#x8FC7;&#x6E38;&#x6807;&#x6267;&#x884C;&#x67E5;&#x8BE2; 1234567let viewContext = persistentContainer.viewContext // &#x83B7;&#x53D6;&#x6E38;&#x6807;viewContext.perform { do{ let allPhotoes = try viewContext.fetch(fetchRequest) // &#x6267;&#x884C;&#x67E5;&#x8BE2; completion(.success(allPhotoes)) }catch{&#x2026;&#x2026;}} 1.10 &#x672C;&#x7AE0;&#x4E2D;&#x5B8C;&#x6574;&#x7684;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x662F;&#x4EC0;&#x4E48; &#x7A0B;&#x5E8F;&#x5728;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6570;&#x636E;&#x83B7;&#x53D6;&#x5305;&#x542B;&#x4E24;&#x90E8;&#x5206;&#xFF1A;&#x4ECE;&#x672C;&#x5730;CoreData&#x4E2D;&#x8BFB;&#x53D6;&#x4E4B;&#x524D;&#x5DF2;&#x4FDD;&#x5B58;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4ECE;web server&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002; &#x4E00;&#x3001;&#x5728;viewDidLoad&#x4E2D;&#x53D1;&#x8D77;&#x6570;&#x636E;&#x52A0;&#x8F7D; 123456789101112131415161718192021222324252627class PhotoesViewController: UIViewController, UICollectionViewDelegate { &#x2026;&#x2026; override func viewDidLoad() { super.viewDidLoad() &#x2026;&#x2026; self.updateDataSource() // &#x52A0;&#x8F7D;&#x672C;&#x5730;&#x6570;&#x636E; store.fetchInterestingPhotoes{ // &#x8BFB;&#x53D6;web server&#x6570;&#x636E;&#xFF0C;&#x5B58;&#x5165;&#x672C;&#x5730; (photoesResult) -&gt; Void in self.updateDataSource() // &#x518D;&#x6B21;&#x52A0;&#x8F7D;&#x672C;&#x5730;&#x6570;&#x636E; } } private func updateDataSource(){ store.fetchAllPhotoes{ // &#x4ECE;CoreData&#x52A0;&#x8F7D;&#x6240;&#x6709;&#x6570;&#x636E; (PhotoesResult) in switch PhotoesResult{ case let .success(photoes): self.photoDataSource.photoes = photoes case .failure: self.photoDataSource.photoes.removeAll() } self.collectionView.reloadSections(IndexSet(integer: 0)) } } &#x2026;&#x2026;} &#x5728;viewDidLoad&#x4E2D;&#x4E4B;&#x6240;&#x4EE5;&#x91CD;&#x590D;&#x8C03;&#x7528;self.updateDataSource()&#x662F;&#x56E0;&#x4E3A;&#x4ECE;web server&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x662F;&#x4E2A;&#x957F;&#x7A0B;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x6B64;&#x8981;&#x5148;&#x4ECE;&#x672C;&#x5730;&#x52A0;&#x8F7D;&#xFF0C;&#x4E4B;&#x540E;&#x4ECE;web server&#x8BFB;&#x5B8C;&#xFF0C;&#x6392;&#x91CD;&#x540E;&#x518D;&#x8BFB;&#x4E00;&#x6B21;&#x3002; &#x4E8C;&#x3001;&#x5728;photoStore.fetchAllPhotoes&#x4E2D;&#x8BFB;&#x53D6;CoreData 12345678910111213141516171819class PhotoStore { &#x2026;&#x2026; func fetchAllPhotoes(completion: @escaping(PhotoesResult) -&gt; Void){ let fetchRequest: NSFetchRequest&lt;Photo&gt; = Photo.fetchRequest() let sortByDateTaken = NSSortDescriptor(key: #keyPath(Photo.dateTaken), ascending: true) fetchRequest.sortDescriptors = [sortByDateTaken] let viewContext = persistentContainer.viewContext viewContext.perform { do{ let allPhotoes = try viewContext.fetch(fetchRequest) // &#x4ECE;CoreData&#x8BFB;&#x53D6;&#x672C;&#x5730;&#x6570;&#x636E; completion(.success(allPhotoes)) }catch{ completion(.failure(error)) } } } &#x2026;&#x2026;} &#x4E09;&#x3001;&#x5728;photoStore.fetchInterestingPhotoes&#x4ECE;web server&#x8BFB;&#x53D6;&#x6570;&#x636E; 12345678910111213141516171819202122232425262728class PhotoStore { &#x2026;&#x2026; func fetchInterestingPhotoes(completion: @escaping(PhotoesResult) -&gt; Void){ let url = FlickrAPI.interestingPhotoesURL let request = URLRequest(url: url) let task = session.dataTask(with: request, completionHandler:{ (data, response, error) -&gt; Void in var result = self.processPhotoesRequest(data: data, error: error) // &#x7EC4;&#x7EC7;request&#xFF0C;&#x8BF7;&#x6C42;json if case .success = result{ do{ try self.persistentContainer.viewContext.save() // &#x628A;&#x8BFB;&#x5230;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5165;CoreData }catch let error{&#x2026;&#x2026;} } OperationQueue.main.addOperation { completion(result) } }) task.resume() } private func processPhotoesRequest(data: Data?, error: Error?) -&gt;PhotoesResult{ guard let jsonData = data else{ return .failure(error!) } return FlickrAPI.photoes(fromJSON: jsonData, into: persistentContainer.viewContext) }&#x2026;&#x2026;} &#x56DB;&#x3001;&#x5728;FlickrAPI.photoes&#x4E2D;&#x5C06;web server&#x4E2D;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;CoreData 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253struct FlickrAPI {&#x2026;&#x2026; static func photoes(fromJSON data: Data, into context: NSManagedObjectContext) -&gt; PhotoesResult{ do{ let jsonObject = try JSONSerialization.jsonObject(with: data, options: []) guard let jsonDictionary = jsonObject as? [AnyHashable:Any], let photoes = jsonDictionary[&quot;photos&quot;] as? [String:Any], let photoesArray = photoes[&quot;photo&quot;] as? [[String: Any]] else{&#x2026;&#x2026;} var finalPhotoes = [Photo]() for photoJSON in photoesArray{ if let photo = photo(fromJSON: photoJSON, into:context){ // &#x8BFB;&#x53D6;photo&#x6570;&#x7EC4; finalPhotoes.append(photo) } } &#x2026;&#x2026; return .success(finalPhotoes) }catch let error{&#x2026;&#x2026;} } private static func photo(fromJSON json: [String: Any], into context: NSManagedObjectContext) -&gt; Photo?{ guard let photoID = json[&quot;id&quot;] as? String, let title = json[&quot;title&quot;] as? String, let dateString = json[&quot;datetaken&quot;] as? String, let photoURLString = json[&quot;url_h&quot;] as? String, let url = URL(string: photoURLString), let dateTaken = dateFormatter.date(from: dateString)else{&#x2026;&#x2026;} // &#x5982;&#x679C;&#x4ECE;web server&#x4E0B;&#x5230;&#x7684;photo&#xFF0C;&#x672C;&#x5730;CoreData&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x5F80;CoreData&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;&#xFF0C;&#x907F;&#x514D;dup let fetchRequest: NSFetchRequest&lt;Photo&gt; = Photo.fetchRequest() let predicate = NSPredicate(format: &quot;\(#keyPath(Photo.photoID)) == \(photoID)&quot;) fetchRequest.predicate = predicate var fetchedPhotoes: [Photo]? context.performAndWait { fetchedPhotoes = try? fetchRequest.execute() } if let existingPhoto = fetchedPhotoes?.first{ return existingPhoto } var photo: Photo! context.performAndWait{ // &#x5C06;web server&#x4E2D;&#x8BFB;&#x5230;&#x7684;photo&#x5199;&#x5165;&#x6E38;&#x6807; photo = Photo(context: context) photo.title = title photo.photoID = photoID photo.remoteURL = url as NSURL photo.dateTaken = dateTaken as NSDate } return photo }&#x2026;&#x2026;}]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记二十一]]></title>
    <url>%2F2017%2F08%2F09%2F2017%2F0809iOSProgrammingBNRG21%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x628A;&#x8BFB;&#x53D6;&#x5230;&#x7684;&#x56FE;&#x7247;&#x901A;&#x8FC7;CollectionView&#x5C55;&#x73B0;&#x5230;&#x754C;&#x9762;&#x4E0A;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Collection Views - &#x6269;&#x5C55; 1 CollectionView 1.1 CollectionView&#x7684;&#x4F7F;&#x7528;&#x6846;&#x67B6; &#x548C;UITableView&#x7C7B;&#x4F3C;&#xFF0C;CollectionView&#x7684;&#x6570;&#x636E;&#x6765;&#x81EA;UICollectionViewDataSource&#x3002; &#x5728;&#x672C;&#x7AE0;&#xFF0C;&#x8FD9;&#x4E2A;DataSource&#x4E0D;&#x518D;&#x662F;VC&#xFF0C;&#x800C;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x7C7B;&#x3002;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x5C42;&#x62BD;&#x8C61;&#x5C42;&#xFF0C;&#x672A;&#x6765;&#x5982;&#x679C;&#x6570;&#x636E;&#x957F;&#x5728;&#x5176;&#x5B83;&#x7684;VC&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x62FF;&#x53BB;&#x590D;&#x7528;&#x3002; 12345678910111213141516171819202122232425262728class PhotoesViewController: UIViewController { @IBOutlet var collectionView: UICollectionView! var store: PhotoStore! let photoDataSource = PhotoDataSource() override func viewDidLoad() { super.viewDidLoad() // &#x8BBE;&#x7F6E;dataSource collectionView.dataSource = photoDataSource &#x2026;&#x2026; } &#x2026;&#x2026;}// CollectionViewDataSource&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x7684;&#x4E2A;&#x6570;&#x4EE5;&#x53CA;&#x5236;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x636E;class PhotoDataSource: NSObject, UICollectionViewDataSource { var photoes = [Photo]() func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -&gt; Int{ return photoes.count } func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell { let identifier = &quot;UICollectionViewCell&quot; let cell = collectionView.dequeueReusableCell(withReuseIdentifier: identifier, for: indexPath) return cell }} &#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x7528;override&#x5173;&#x952E;&#x5B57;&#xFF1F;&#x96BE;&#x9053;&#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x4E0D;&#x662F;&#x91CD;&#x8F7D;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x52A0;override&#x5173;&#x952E;&#x5B57;&#xFF1F; 1.2 CollectionView&#x7684;&#x51E0;&#x4E2A;&#x548C;&#x5E03;&#x5C40;&#x76F8;&#x5173;&#x7684;&#x5C5E;&#x6027; ## 1.3 collectionView &#x548C;collectionView &#x662F;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F; collectiononView(_:willDiaplay:forItemAt:)&#x662F;UICollectionViewDelegate&#x65B9;&#x6CD5;&#xFF0C;&#x5F53;&#x67D0;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;cell&#x5373;&#x5C06;&#x5212;&#x5165;&#x5C4F;&#x5E55;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#xFF1B; collectionView(_:cellForItemAt:)&#x662F;UICollectionViewDataSource&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5F53;&#x9700;&#x8981;&#x663E;&#x793A;&#x67D0;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6570;&#x636E;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#x3002; &#x6211;&#x600E;&#x4E48;&#x89C9;&#x5F97;&#x8FD9;&#x4E24;&#x4E2A;&#x662F;&#x4E00;&#x56DE;&#x4E8B;&#x5462;&#xFF1F;&#x4E0B;&#x6587;&#x56DE;&#x7B54;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; 1.4 &#x4E3A;&#x4EC0;&#x4E48;&#x6DFB;&#x52A0;&#x4E86;collectionView(:willDisplay:forItemAt:)&#x5C31;&#x663E;&#x793A;&#x51FA;&#x56FE;&#x7247;&#x4E86;&#xFF1F; &#x5728;collectionView(:cellForItemAt:)&#x4E2D;&#x4EC5;&#x4EC5;&#x4ECE;&#x961F;&#x5217;&#x4E2D;&#x53D6;&#x51FA;cell&#x5BF9;&#x8C61;&#xFF1A; 12345func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell { let identifier = &quot;UICollectionViewCell&quot; let cell = collectionView.dequeueReusableCell(withReuseIdentifier: identifier, for: indexPath) as! PhotoCollectionViewCell return cell} &#x628A;&#x6BCF;&#x4E2A;&#x683C;&#x5B50;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x4E2A;&#x96C6;&#x88C5;&#x7BB1;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x53EA;&#x662F;&#x96C6;&#x88C5;&#x7BB1;&#x4F53;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x96C6;&#x88C5;&#x7BB1;&#x4F53;&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x7BB1;&#x4F53;&#x7684;&#x8D44;&#x6E90;&#x3002;&#x5230;&#x6B64;&#x4E3A;&#x6B62;&#xFF0C;&#x8FD9;&#x4E0E;&#x7BB1;&#x4F53;&#x91CC;&#x9762;&#x88C5;&#x4EC0;&#x4E48;&#x65E0;&#x5173;&#x3002;&#x6709;&#x4E86;&#x7BB1;&#x4F53;&#x4E4B;&#x540E;&#x8FD8;&#x8981;&#x5F80;&#x91CC;&#x9762;&#x653E;&#x6EE1;&#x8D27;&#x7269;&#xFF0C;&#x8FD9;&#x662F;collectionView(_:willDisplay:forItemAt:)&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF1A; 12345678910111213141516func collectionView(_ collectionView: UICollectionView, willDisplay cell: UICollectionViewCell, forItemAt indexPath: IndexPath){ let photo = photoDataSource.photoes[indexPath.row] store.fetchImage(for: photo){(result) -&gt; Void in guard let photoIndex = self.photoDataSource.photoes.index(of: photo), case let .success(image) = result else{ return } let photoIndexPath = IndexPath(item: photoIndex, section: 0) if let cell = self.collectionView.cellForItem(at: photoIndexPath) as? PhotoCollectionViewCell{ cell.update(with: image) } }} &#x4ED6;&#x4E0D;&#x5173;&#x5FC3;&#x7BB1;&#x4F53;&#x4ECE;&#x54EA;&#x6765;&#x7684;&#xFF0C;&#x53EA;&#x8D1F;&#x8D23;&#x5F80;&#x7BB1;&#x4F53;&#x91CC;&#x9762;&#x88C5;&#x6EE1;&#x8D27;&#x7269;&#x3002;&#x8FD9;&#x5C31;&#x56DE;&#x7B54;&#x4E86;1.3&#x7684;&#x7591;&#x95EE;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x4E4B;&#x95F4;&#x662F;&#x6709;&#x5148;&#x540E;&#x5173;&#x7CFB;&#x7684;&#xFF0C;&#x663E;&#x7136;&#x8981;&#x5148;&#x63D0;&#x4F9B;&#x7BB1;&#x4F53;&#xFF0C;&#x518D;&#x88C5;&#x6EE1;&#x8D27;&#x7269;&#x3002; &#x6211;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x8FD9;&#x91CC;&#x628A;&#x63D0;&#x4F9B;&#x7BB1;&#x4F53;&#x548C;&#x88C5;&#x8D27;&#x5206;&#x5F00;&#x505A;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x683C;&#x5B50;&#x5728;&#x88AB;&#x770B;&#x5230;&#x7684;&#x65F6;&#x5019;&#x624D;&#x89E6;&#x53D1;&#x4E0B;&#x8F7D;&#xFF0C;&#x4EE5;&#x8282;&#x7701;&#x6D41;&#x91CF;&#xFF1B;&#x5728;&#x7B2C;10&#x7AE0;&#x4E2D;&#x662F;&#x5728;&#x63D0;&#x4F9B;&#x7BB1;&#x4F53;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x540C;&#x65F6;&#x88C5;&#x8D27;&#x4E86;&#x3002;&#x4F46;&#x662F;&#x6211;&#x89C9;&#x5F97;&#x5728;&#x672C;&#x7AE0;&#x4E2D;&#x5206;&#x79BB;&#x5E76;&#x6CA1;&#x6709;&#x8D77;&#x5230;&#x8FD9;&#x4E2A;&#x76EE;&#x7684;&#x5462;&#xFF1F;&#x63D0;&#x4F9B;&#x7BB1;&#x4F53;&#x672C;&#x6765;&#x5C31;&#x662F;&#x5728;&#x5373;&#x5C06;&#x5C55;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x624D;&#x88AB;&#x8BF7;&#x6C42;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x63D0;&#x4F9B;&#x7BB1;&#x4F53;&#x7684;&#x65F6;&#x5019;&#x88C5;&#x8D27;&#x5E94;&#x8BE5;&#x5C31;&#x80FD;&#x6EE1;&#x8DB3;&#x9700;&#x6C42;&#x5427;&#xFF1F; 1.5 switch...case&#x7684;&#x53E6;&#x4E00;&#x79CD;&#x7528;&#x6CD5; 1.4&#x4E2D;&#x7684;&#x4EE3;&#x7801; 123if case let .success(image) = result { photo.image = image} &#x7B49;&#x4EF7;&#x4E8E; 123456switch result {case let .success(image): photo.image = imagecase .failure: break} 1.6 CollectionViewCell&#x7684;&#x91CD;&#x7F6E;&#x65F6;&#x673A; &#x6709;&#x4E24;&#x4E2A;&#x91CD;&#x7F6E;&#x76F8;&#x5173;&#x7684;&#x65F6;&#x673A;&#xFF1A; - &#x9996;&#x6B21;&#x521B;&#x5EFA;&#xFF0C;&#x6B64;&#x65F6;&#x4F1A;&#x4F34;&#x968F;&#x8C03;&#x7528; 1234override func awakeFromNib(){ super.awakeFromNib() ...} CollectionViewCell&#x88AB;&#x91CD;&#x7528;&#xFF0C;&#x6B64;&#x65F6;&#x4F1A;&#x4F34;&#x968F;&#x8C03;&#x7528; 1234override func prepareForReuse(){ super.prepareForReuse() ...} &#x6211;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x88AB;&#x91CD;&#x7528;&#x5E94;&#x8BE5;&#x662F;&#x4E2A;&#x6570;&#x636E;&#x5C42;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x600E;&#x4E48;&#x4F1A;&#x901A;&#x8FC7;framework&#x5C42;&#x7684;&#x8C03;&#x7528;&#x901A;&#x77E5;&#x5230;cell&#x5462;&#xFF1F;&#x91CD;&#x7528;&#x662F;&#x901A;&#x8FC7;&#x51FA;&#x961F; collectionView.dequeueReusableCell(withReuseIdentifier: for: ) &#x6765;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x6211;&#x731C;&#x6D4B;&#x5E94;&#x8BE5;&#x662F;&#x5728;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x4E86;prepareForReuse()&#xFF1F; 1.7 &#x56DE;&#x987E;&#x9875;&#x9762;&#x8DF3;&#x8F6C;&#x662F;&#x600E;&#x4E48;&#x5B8C;&#x6210;&#x7684; &#x5728;&#x524D;&#x9762;&#x7684;&#x7AE0;&#x8282;&#x4E2D;&#x5DF2;&#x7ECF;&#x4F7F;&#x7528;&#x8FC7;segue&#xFF0C;&#x672C;&#x7AE0;&#x4E2D;&#x70B9;&#x51FB;&#x4E86;&#x7F51;&#x683C;&#x56FE;&#x7247;&#x540E;&#x4F1A;&#x663E;&#x793A;&#x5927;&#x56FE;&#x3002;&#x8FD9;&#x91CC;&#x7B80;&#x5355;&#x56DE;&#x987E;&#xFF0C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5728;InterfaceBuilder&#x4E2D;&#xFF0C;&#x6DFB;&#x52A0;VC&#x5E76;&#x5728;&#x4E0A;&#x9762;&#x6DFB;&#x52A0;ImageView 2. &#x5728;InterfaceBuilder&#x4E2D;&#xFF0C;&#x4ECE;CollectionViewCell Ctrl&#x62D6;&#x62FD;&#x5230;&#x4E00;&#x4E2D;&#x521B;&#x5EFA;&#x7684;VC&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x7684;&#x9762;&#x677F;&#x4E2D;&#x9009;&#x62E9;show&#xFF0C;&#x8FD9;&#x5C31;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;segue 3. &#x9009;&#x4E2D;segue&#xFF0C;&#x8BBE;&#x7F6E;&#x5B83;&#x7684;identifier&#x4E3A;showPhoto 4. &#x5728;segue&#x53D1;&#x751F;&#x7684;&#x8D77;&#x70B9;VC&#x4E2D;&#x8986;&#x76D6;prepare(for: sender:)&#x51FD;&#x6570;&#xFF0C;&#x628A;&#x88AB;&#x70B9;&#x51FB;&#x7684;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#x4F20;&#x7ED9;segue&#x7684;&#x76EE;&#x7684;VC 5. &#x5728;segue&#x7684;&#x76EE;&#x7684;VC&#x4E2D;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316; 2 &#x6269;&#x5C55; 2.1 &#x6269;&#x5C55;&#x7684;&#x76EE;&#x7684;&#x548C;&#x9002;&#x7528;&#x8303;&#x56F4; &#x901A;&#x8FC7;&#x6269;&#x5C55;&#x53EF;&#x4EE5;&#x5C06;&#x82E5;&#x5E72;&#x4E2A;&#x529F;&#x80FD;&#x5F52;&#x62E2;&#x5230;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x5355;&#x5143;&#x3002;&#x5B83;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6269;&#x5C55;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6269;&#x5C55;&#x7CFB;&#x7EDF;&#x6216;&#x8005;&#x522B;&#x7684;framework&#x63D0;&#x4F9B;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5373;&#x4F7F;&#x4F60;&#x4E0D;&#x62E5;&#x6709;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x3002; &#x4E66;&#x4E2D;P644&#xFF1A;&#x6269;&#x5C55;&#x53EF;&#x4EE5;&#x9002;&#x7528;&#x4E8E;&#x7C7B;&#x3001;&#x7ED3;&#x6784;&#x548C;&#x679A;&#x4E3E;&#xFF0C;&#x53EF;&#x4EE5;&#x7ED9;&#x5B83;&#x4EEC;&#x6DFB;&#x52A0;&#x8BA1;&#x7B97;&#x5C5E;&#x6027;&#xFF08;computed properites&#xFF09;&#x3001;&#x65B9;&#x6CD5;&#x3001;&#x534F;&#x8BAE;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x6DFB;&#x52A0;&#x5B58;&#x50A8;&#x5C5E;&#x6027;&#xFF08;stored properties&#xFF09;&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x8BA1;&#x7B97;&#x5C5E;&#x6027;&#xFF0C;&#x4EC0;&#x4E48;&#x662F;&#x5B58;&#x50A8;&#x5C5E;&#x6027;&#xFF1F;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记二十]]></title>
    <url>%2F2017%2F08%2F08%2F2017%2F0808iOSProgrammingBNRG20%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x53C8;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x677F;&#x5757;&#xFF0C;&#x5B83;&#x4ECE;web server&#x4E0A;&#x83B7;&#x53D6;json&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x628A;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x4E2D;&#x7684;&#x56FE;&#x7247;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x8BBF;&#x95EE;&#x63A7;&#x5236; - iOS&#x4E0A;&#x7684;HTTP&#x7F16;&#x7A0B; - json&#x6570;&#x636E;&#x7684;&#x89E3;&#x6790; 1 &#x8BBF;&#x95EE;&#x63A7;&#x5236; 1.1 &#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x7684;&#x51E0;&#x79CD;&#x7C7B;&#x578B;&#x548C;&#x542B;&#x4E49; &#xB7; open &#xB7; public &#xB7; internal &#xB7; fileprivate &#xB7; private &#x4ED6;&#x4EEC;&#x7684;&#x542B;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; 2 iOS&#x7AEF;&#x7684;HTTP&#x7F16;&#x7A0B; 2.1 &#x5982;&#x4F55;&#x7EC4;&#x88C5;&#x8BF7;&#x6C42;&#x548C;&#x63A5;&#x6536;&#x5E94;&#x7B54; &#x4E00;&#x3001;&#x901A;&#x8FC7;URLComponents&#x548C;URLQueryItem&#x5171;&#x540C;&#x5B8C;&#x6210;URL&#x7684;&#x7EC4;&#x88C5; 12345678910111213141516171819private static func filckURL(method: Method, parameters: [String:String]?) -&gt; URL{ // &#x6784;&#x9020;url&#x8DEF;&#x5F84; var components = URLComponents(string: &quot;https://api.flickr.com/services/rest&quot;)! var queryItems = [URLQueryItem]() // &#x6BCF;&#x4E2A;URLQueryItem&#x662F;&#x4E00;&#x4E2A;kv&#x5BF9; // &#x7EC4;&#x88C5;&#x53C2;&#x6570; let baseParam = [ &quot;method&quot;: method.rawValue, &quot;format&quot;: &quot;json&quot;, &quot;nojsoncallback&quot;: &quot;1&quot;, &quot;api_key&quot;: apiKey ] for (key, value) in baseParam{ let item = URLQueryItem(name: key, value: value) queryItems.append(item) } &#x2026;&#x2026; components.queryItems = queryItems // &#x8BBE;&#x7F6E;&#x53C2;&#x6570; return components.url!} &#x4E8C;&#x3001;&#x4F7F;&#x7528;URLSessionTask&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x5E76;&#x63A5;&#x6536;&#x5E94;&#x7B54; 123456789101112131415161718192021222324// &#x521B;&#x5EFA;URLSession&#x5B9E;&#x4F8B;&#xFF0C;&#x540E;&#x9762;&#x8981;&#x7528;&#x5B83;&#x751F;&#x6210;URLSessionTaskprivate let session : URLSession = { let config = URLSessionConfiguration.default return URLSession(configuration: config)}()func fetchInterestingPhotoes(){ let url = FlickrAPI.interestingPhotoesURL // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;URL&#x53D8;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7B2C;&#x4E00;&#x6B65;&#x521B;&#x5EFA; let request = URLRequest(url: url) // &#x4F7F;&#x7528;URL&#x6784;&#x9020;URLRequest // &#x4F7F;&#x7528;request&#x548C;completionHandler&#x6784;&#x9020;URLSessionTask&#xFF0C;&#x5728;completionHandler&#x4E2D;&#x5904;&#x7406;&#x5E94;&#x7B54;&#x6570;&#x636E; let task = session.dataTask(with: request, completionHandler:{ (data, response, error) -&gt; Void in if let jsonData = data{ if let jsonString = String(data: jsonData, encoding: .utf8){ print(jsonString) } }else if let requestError = error{ print(&quot;Error fetching interesting photoes: \(requestError)&quot;) }else{ print(&quot;Unexpected error with the request&quot;) } }) task.resume() // &#x542F;&#x52A8;task&#xFF0C;&#x5B8C;&#x6210;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x548C;&#x63A5;&#x6536;&#x5E94;&#x7B54;} URLSessionTask&#x5206;&#x4E09;&#x7C7B;&#xFF1A; URLSessionDataTask &#x4ECE;server&#x7AEF;&#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x7684;Data&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#xFF1B; URLSessionDownloadTask &#x4ECE;server&#x7AEF;&#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5230;&#x6587;&#x4EF6;&#xFF1B; URLSessionUploadTask &#x5411;server&#x53D1;&#x9001;&#x6570;&#x636E;&#x3002; &#x901A;&#x8FC7;URLSession&#x7684;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#xFF1A; func dataTask(with: URL) func downloadTask(with: URL) func uploadTask(with: URLRequest, from: Data) &#x53EF;&#x4EE5;&#x751F;&#x6210;&#x8FD9;&#x4E09;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x8FD9;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x8FD8;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x53D8;&#x79CD;&#x3002; &#x5728;&#x521B;&#x5EFA;URLSession&#x5B9E;&#x4F8B;&#x7684;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#xFF0C;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x516C;&#x7528;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD9;&#x4E9B;&#x516C;&#x7528;&#x8BBE;&#x7F6E;&#x5728;&#x901A;&#x8FC7;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x751F;&#x6210;&#x7684;URLSessionTask&#x5B9E;&#x4F8B;&#x4E2D;&#x90FD;&#x4F1A;&#x751F;&#x6548;&#x3002;&#x4E00;&#x4E2A;URLSession&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x751F;&#x6210;&#x591A;&#x4E2A;URLSessionTask&#x3002; &#x5728;&#x672C;&#x4F8B;&#x4E2D;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x9664;&#x4E86;&#x8BBE;&#x7F6E;request&#x4EE5;&#x5916;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5E94;&#x7B54;&#x54CD;&#x5E94;&#x5904;&#x7406;&#x95ED;&#x5305;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5904;&#x7406;&#x6536;&#x5230;&#x7684;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x3002; &#x901A;&#x8FC7;&#x8C03;&#x7528;task.resume()&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x3002; 2.2 &#x4E3B;&#x7EBF;&#x7A0B;&#x548C;&#x540E;&#x53F0;&#x7EBF;&#x7A0B; &#x4E3B;&#x7EBF;&#x7A0B;&#x53C8;&#x79F0;&#x4E3A;UI&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x4E3A;&#x6240;&#x6709;&#x6539;&#x53D8;UI&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x53D1;&#x751F;&#x5728;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x5185;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;URLSessionDataTask&#x662F;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x91CC;&#x8DD1;&#x5B8C;&#x6210;&#x5904;&#x7406;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x662F;&#x5237;&#x65B0;UI&#x754C;&#x9762;&#x7684;&#xFF0C;&#x5E94;&#x8BE5;&#x653E;&#x5230;&#x4E3B;&#x7EBF;&#x7A0B;&#x6765;&#x5B8C;&#x6210;&#x3002;&#x4F7F;&#x7528;OperationQueue&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x70B9;&#xFF1A; 12345678910111213func fetchInterestingPhotoes(completion: @escaping(PhotoesResult) -&gt; Void){ let url = FlickrAPI.interestingPhotoesURL let request = URLRequest(url: url) let task = session.dataTask(with: request, completionHandler:{ (data, response, error) -&gt; Void in let result = self.processPhotoesRequest(data: data, error: error) OperationQueue.main.addOperation { // &#x5C06;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x653E;&#x5230;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C; completion(result) } }) task.resume()} 3 JSON&#x6570;&#x636E; 3.1 &#x5982;&#x4F55;&#x89E3;&#x6790;JSON&#x6570;&#x636E; &#x4F7F;&#x7528;JSONSerialization&#x4ECE;json&#x6587;&#x672C;&#x521B;&#x5EFA;json&#x5BF9;&#x8C61;&#xFF1A; 123456do{ let jsonObject = try JSONSerialization.jsonObject(with: jsonData, options: []) print(jsonObject)}catch let error{ print(&quot;Error creating JSON object: \(error)&quot;)} 3.2 &#x6253;&#x5370;jsonObject&#x5BF9;&#x8C61;&#x957F;&#x4EC0;&#x4E48;&#x6837;&#xFF1F; &#x5BF9;&#x4E8E;&#x4E00;&#x6BB5;&#x8FD9;&#x6837;&#x7684;json&#x6587;&#x672C;&#xFF1A; 12345678{&quot;photos&quot;:{&quot;page&quot;:1,&quot;pages&quot;:5,&quot;perpage&quot;:100,&quot;total&quot;:500,&quot;photo&quot;:[ {&quot;id&quot;:&quot;36350085092&quot;,&quot;owner&quot;:&quot;43432513@N02&quot;,&quot;secret&quot;:&quot;1bde6ffc70&quot;,&quot;server&quot;:&quot;4401&quot;,&quot;farm&quot;:5,&quot;title&quot;:&quot;Night Storm IV: Anvil Crawler&quot;,&quot;ispublic&quot;:1,&quot;isfriend&quot;:0,&quot;isfamily&quot;:0,&quot;datetaken&quot;:&quot;2017-05-16 21:12:42&quot;,&quot;datetakengranularity&quot;:&quot;0&quot;,&quot;datetakenunknown&quot;:&quot;0&quot;,&quot;url_h&quot;:&quot;https:\/\/farm5.staticflickr.com\/4401\/36350085092_9a12da6e8e_h.jpg&quot;,&quot;height_h&quot;:1130,&quot;width_h&quot;:&quot;1600&quot;},... ... ... ... {&quot;id&quot;:&quot;36517793505&quot;,&quot;owner&quot;:&quot;142252072@N06&quot;,&quot;secret&quot;:&quot;0d5323572e&quot;,&quot;server&quot;:&quot;4387&quot;,&quot;farm&quot;:5,&quot;title&quot;:&quot;Roe Deer&quot;,&quot;ispublic&quot;:1,&quot;isfriend&quot;:0,&quot;isfamily&quot;:0,&quot;datetaken&quot;:&quot;2017-08-11 20:11:19&quot;,&quot;datetakengranularity&quot;:&quot;0&quot;,&quot;datetakenunknown&quot;:&quot;0&quot;,&quot;url_h&quot;:&quot;https:\/\/farm5.staticflickr.com\/4387\/36517793505_bf91f54cf1_h.jpg&quot;,&quot;height_h&quot;:1067,&quot;width_h&quot;:&quot;1600&quot;}]},&quot;stat&quot;:&quot;ok&quot;} &#x8F6C;&#x6210;jsonObject&#xFF0C;&#x6253;&#x5370;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243{ photos = { page = 1; pages = 5; perpage = 100; photo = ( { datetaken = &quot;2017-07-03 20:40:20&quot;; datetakengranularity = 0; datetakenunknown = 0; farm = 5; id = 36507389026; isfamily = 0; isfriend = 0; ispublic = 1; owner = &quot;26156338@N07&quot;; secret = 1f53fe13dd; server = 4372; title = &quot;Scarborough Bluffs&quot;; }, &#x2026;&#x2026; { datetaken = &quot;2017-08-13 19:20:32&quot;; datetakengranularity = 0; datetakenunknown = 0; farm = 5; &quot;height_h&quot; = 1600; id = 36568626865; isfamily = 0; isfriend = 0; ispublic = 1; owner = &quot;130293714@N07&quot;; secret = d162b2493e; server = 4363; title = &quot;Portrait d&apos;une (petite) grenouille&quot;; &quot;url_h&quot; = &quot;https://farm5.staticflickr.com/4363/36568626865_c01dd04131_h.jpg&quot;; &quot;width_h&quot; = 1600; } ); total = 500; }; stat = ok;} 3.3 &#x5982;&#x4F55;&#x89E3;&#x6790;&#x4E0A;&#x9762;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784; &#x5B8C;&#x6574;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445struct FlickrAPI { &#x2026;&#x2026; private static func photo(fromJSON json: [String: Any]) -&gt; Photo?{ guard let photoID = json[&quot;id&quot;] as? String, let title = json[&quot;title&quot;] as? String, let dateString = json[&quot;datetaken&quot;] as? String, let photoURLString = json[&quot;url_h&quot;] as? String, let url = URL(string: photoURLString), let dateTaken = dateFormatter.date(from: dateString)else{ return nil } return Photo(title: title, photoID: photoID, remoteURL: url, dateTaken: dateTaken) } static func photoes(fromJSON data: Data) -&gt; PhotoesResult{ do{ // &#x8BFB;&#x53D6;json&#x6587;&#x672C; let jsonObject = try JSONSerialization.jsonObject(with: data, options: []) guard // &#x5F97;&#x5230;&#x6839;&#x8282;&#x70B9; let jsonDictionary = jsonObject as? [AnyHashable:Any], // &#x5F97;&#x5230;/photos&#x8282;&#x70B9; let photoes = jsonDictionary[&quot;photos&quot;] as? [String:Any], // &#x5F97;&#x5230;/photos/photo&#x8282;&#x70B9; let photoesArray = photoes[&quot;photo&quot;] as? [[String: Any]] else{ return .failure(FlickrError.invalidJSONData) } var finalPhotoes = [Photo]() for photoJSON in photoesArray{ // &#x89E3;&#x6790;/protos/photo/&#x4E0B;&#x7684;&#x6BCF;&#x4E2A;&#x5B50;&#x8282;&#x70B9; if let photo = photo(fromJSON: photoJSON){ finalPhotoes.append(photo) } } if finalPhotoes.isEmpty &amp;&amp; !photoesArray.isEmpty{ return .failure(FlickrError.invalidJSONData) } return .success(finalPhotoes) }catch let error{ return .failure(error) } } &#x2026;&#x2026;} 3.4 &#x672C;&#x7AE0;&#x5982;&#x4F55;&#x5B8C;&#x6210;&#x4E0B;&#x8F7D;&#x6D41;&#x7A0B;&#x7684; &#x4E00;&#x3001;&#x4ECE;VC&#x7684;viewDidLoad()&#x4E2D;&#x8C03;&#x7528;&#x4E0B;&#x8F7D;&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x5B8C;&#x6210;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x6253;&#x5370;&#x4EE3;&#x7801; 12345678910111213141516class PhotoesViewController: UIViewController { &#x2026;&#x2026; override func viewDidLoad() { super.viewDidLoad() store.fetchInterestingPhotoes{ (photoesResult) -&gt; Void in // &#x4E0B;&#x8F7D;&#x3001;&#x89E3;&#x6790;&#x5B8C;&#x6210;&#x540E;&#x7684;&#x6253;&#x5370;&#x7ED3;&#x679C;&#x4EE3;&#x7801; switch photoesResult{ case let .success(photoes): print(&quot;Successfully found \(photoes.count) photoes&quot;) &#x2026;&#x2026; } } // Do any additional setup after loading the view. } &#x2026;&#x2026;} &#x4E8C;&#x3001;&#x521B;&#x5EFA;SessionTask&#x542F;&#x52A8;&#x4E0B;&#x8F7D;&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#x7684;&#x89E3;&#x6790;json&#x4EE3;&#x7801; 123456789101112131415161718192021class PhotoStore { &#x2026;&#x2026; private func processPhotoesRequest(data: Data?, error: Error?) -&gt;PhotoesResult{ guard let jsonData = data else{ return .failure(error!) } return FlickrAPI.photoes(fromJSON: jsonData) } func fetchInterestingPhotoes(completion: @escaping(PhotoesResult) -&gt; Void){ let url = FlickrAPI.interestingPhotoesURL let request = URLRequest(url: url) // &#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#x89E3;&#x6790;&#x6570;&#x636E;&#x4EE3;&#x7801; let task = session.dataTask(with: request) { (data, response, error) -&gt; Void in let result = self.processPhotosRequest(data: data, error: error) completion(result) } task.resume() }} &#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; &#x4ECE;web server&#x83B7;&#x53D6;&#x6570;&#x636E;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E00;&#x65E6;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x8F83;&#x957F;&#x65F6;&#x95F4;&#x624D;&#x80FD;&#x6536;&#x5230;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x3002;&#x56E0;&#x6B64;fetchInterestingPhotoes(completion:)&#x5E76;&#x4E0D;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;PhotoesResult&#xFF0C;&#x800C;&#x662F;&#x7531;&#x8C03;&#x7528;&#x8005;&#x63D0;&#x4F9B;&#x5B8C;&#x6210;&#x95ED;&#x5305;&#xFF0C;&#x5F53;&#x6536;&#x5230;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x540E;&#x8C03;&#x7528;&#x3002; &#x6211;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;task.resume()&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x4E86;&#xFF0C;&#x90A3;&#x63A7;&#x5236;&#x6743;&#x4EA4;&#x7ED9;&#x8C01;&#x4E86;&#xFF1F;&#x5F53;&#x6536;&#x5230;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x540E;&#x53C8;&#x662F;&#x5728;&#x54EA;&#x4E2A;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x5B8C;&#x6210;&#x4EE3;&#x7801;&#x5462;&#xFF1F;&#x63A7;&#x5236;&#x6743;&#x7684;&#x83B7;&#x5F97;&#x8005;&#x548C;&#x6267;&#x884C;&#x8FD9;&#x6BB5;&#x5B8C;&#x6210;&#x4EE3;&#x7801;&#x7684;&#x7EBF;&#x7A0B;&#x662F;&#x4E2A;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF1F;&#x6211;&#x731C;&#x5E94;&#x8BE5;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x90A3;&#x4E48;&#x63A7;&#x5236;&#x6743;&#x53C8;&#x662F;&#x600E;&#x4E48;&#x79FB;&#x4EA4;&#x7ED9;&#x5B8C;&#x6210;&#x4EE3;&#x7801;&#x7684;&#x5462;&#xFF1F; 3.5 @escaping&#x5173;&#x952E;&#x5B57;&#x7684;&#x4F5C;&#x7528; &#x8FD9;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x7528;&#x6765;&#x4FEE;&#x9970;&#x95ED;&#x5305;&#xFF0C;&#x5B83;&#x8BA9;&#x7F16;&#x8BD1;&#x5668;&#x77E5;&#x9053;&#x8FD9;&#x6BB5;&#x95ED;&#x5305;&#x53EF;&#x80FD;&#x5E76;&#x4E0D;&#x5728;&#x51FD;&#x6570;&#x5185;&#x6267;&#x884C;&#x3002;&#x5728;&#x672C;&#x4F8B;&#x4E2D;fetchInterestingPhotoes(completion:)&#x5185;&#x90E8;&#x7684;task.resume()&#x662F;&#x4E2A;&#x5F02;&#x6B65;&#x8C03;&#x7528;&#xFF0C;&#x76F4;&#x5230;&#x6536;&#x5230;&#x670D;&#x52A1;&#x7AEF;&#x5E94;&#x7B54;&#x540E;&#x624D;&#x4F1A;&#x6267;&#x884C;&#x53C2;&#x6570;&#x95ED;&#x5305;&#x4EE3;&#x7801;&#x3002; &#x6211;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x5982;&#x679C;&#x4E0D;&#x5E26;&#x8FD9;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x4F1A;&#x6709;&#x4EC0;&#x4E48;&#x540E;&#x679C;&#xFF1F;&#x8FD9;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x8D77;&#x5230;&#x4EC0;&#x4E48;&#x4F5C;&#x7528;&#xFF1F; &#x672C;&#x7AE0;P592 12345678910111213141516func fetchInterestingPhotos() { let url = FlickrAPI.interestingPhotosURL let request = URLRequest(url: url) let task = session.dataTask(with: request) { (data, response, error) -&gt; Void in if let jsonData = data { if let jsonString = String(data: jsonData, encoding: .utf8) { print(jsonString) } } else if let requestError = error { print(&quot;Error fetching interesting photos: \(requestError)&quot;) } else { print(&quot;Unexpected error with the request&quot;) } } task.resume() }]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十九]]></title>
    <url>%2F2017%2F08%2F07%2F2017%2F0807iOSProgrammingBNRG19%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5728;&#x524D;&#x4E00;&#x7AE0;&#x57FA;&#x7840;&#x4E0A;&#x652F;&#x6301;&#x4E86;&#x5BF9;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x7684;&#x76F4;&#x7EBF;&#x7684;&#x5220;&#x9664;&#x3001;&#x62D6;&#x52A8;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - UIGestureRecognizer - UIMenuController 1 UIGestureRecognizer 1.1 UIGestureRecognizer&#x548C;&#x539F;&#x59CB;&#x89E6;&#x5C4F;&#x4E8B;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB; &#x6240;&#x6709;&#x7684;UIGestureRecognizer&#x4E8B;&#x4EF6;&#x90FD;&#x4EE5; 1func action(_ gestureRecognizer: UIGestureRecognizer){} &#x7684;&#x5F62;&#x5F0F;&#x53D1;&#x51FA;&#x3002;&#x53C2;&#x6570;&#x662F;&#x53D1;&#x751F;&#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#x7684;&#x624B;&#x52BF;&#x5B9E;&#x4F8B;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x6BD4;&#x5982;&#x624B;&#x52BF;&#x53D1;&#x751F;&#x4F4D;&#x7F6E;&#x7B49;&#x4E0E;&#x6B64;&#x624B;&#x52BF;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x5F53;&#x8BC6;&#x522B;&#x51FA;&#x662F;&#x4E00;&#x79CD;&#x624B;&#x52BF;&#x540E;&#xFF0C;UIGestureRecognizer&#x4F1A;&#x62E6;&#x622A;&#x53D1;&#x5F80;view&#x7684;&#x89E6;&#x5C4F;&#x4E8B;&#x4EF6;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;UIResponder&#x4E8B;&#x4EF6;&#x4E0D;&#x4F1A;&#x518D;&#x88AB;&#x53D1;&#x7ED9;&#x8BE5;&#x89C6;&#x56FE;&#x3002; 1.2 &#x6DFB;&#x52A0;&#x624B;&#x52BF;&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4; &#x4E00;&#x3001;&#x6DFB;&#x52A0;&#x624B;&#x52BF;&#x5B9E;&#x4F8B;&#x3002; 12345678required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) // &#x521B;&#x5EFA;&#x624B;&#x52BF;&#x5B9E;&#x4F8B;&#xFF0C;&#x4E00;&#x4E2A;&#x624B;&#x52BF;&#x5B9E;&#x4F8B;&#x8FDE;&#x63A5;target&#x548C;action let doubleTapRecognizer = UITapGestureRecognizer(target: self, action: #selector(DrawView.doubleTap(_:))) doubleTapRecognizer.numberOfTapsRequired = 2 // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x53CC;&#x51FB;&#x624B;&#x52BF; addGestureRecognizer(doubleTapRecognizer) // &#x5F80;&#x89C6;&#x56FE;&#x6DFB;&#x52A0;&#x624B;&#x52BF;} init&#x51FD;&#x6570;&#x540E;&#x9762;&#x7684;&#x95EE;&#x53F7;&#x662F;&#x5565;&#x610F;&#x601D;&#xFF1F;required&#x5173;&#x952E;&#x5B57;&#x662F;&#x5565;&#x610F;&#x601D;&#xFF1F; &#x4E8C;&#x3001;&#x5B9E;&#x73B0;&#x624B;&#x52BF;&#x5904;&#x7406;&#x51FD;&#x6570; 12345func doubleTap(_ gestureRecognizer: UIGestureRecognizer){ currentLines.removeAll() // &#x5220;&#x9664;&#x56FA;&#x5316;&#x548C;&#x6B63;&#x5728;&#x7ED8;&#x5236;&#x7684;&#x76F4;&#x7EBF; finishedLines.removeAll() setNeedsDisplay()} 1.3 &#x5982;&#x4F55;&#x907F;&#x514D;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x624B;&#x52BF;&#x88AB;&#x8BC6;&#x522B;&#x524D;&#x7684;&#x539F;&#x59CB;UIResponder&#x6D88;&#x606F;&#x5904;&#x7406; &#x5728;1.2&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x53CC;&#x51FB;&#x6D88;&#x606F;&#xFF0C;&#x5728;&#x5355;&#x6307;&#x89E6;&#x5C4F;&#x4E00;&#x6B21;&#x540E;&#xFF0C;&#x7531;&#x4E8E;&#x65E0;&#x6CD5;&#x5224;&#x65AD;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x4E0D;&#x4F1A;&#x518D;&#x51FB;&#x5C4F;&#x5E55;&#xFF0C;&#x56E0;&#x6B64;&#x4F1A;&#x6536;&#x5230;touchesBegan(_:with:)&#x6D88;&#x606F;&#xFF0C;&#x5982;&#x679C;&#x7EE7;&#x7EED;&#x5B8C;&#x6210;&#x4E86;&#x53CC;&#x51FB;&#xFF0C;&#x624D;&#x4F1A;&#x6536;&#x5230;doubleTap(_:)&#xFF0C;&#x5E76;&#x518D;&#x6536;&#x5230;&#x5355;&#x51FB;&#x7684;touchesCancelled(_:with:)&#xFF0C;&#x8FD9;&#x6837;&#x4EE5;&#x540E;&#x5C31;&#x4E0D;&#x518D;&#x6536;&#x5230;UIResponder&#x6D88;&#x606F;&#x4E86;&#x3002; &#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x7B2C;&#x4E00;&#x6B21;&#x5355;&#x51FB;&#x5728;view&#x4E0A;&#x7ED8;&#x5236;&#x4E00;&#x5C0F;&#x6BB5;&#x7EBF;&#x6BB5;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x53D1;&#x751F;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x624B;&#x52BF;&#x5B9E;&#x4F8B;&#x7684;delaysToucesBagan&#x5C5E;&#x6027;&#x8BBE;&#x4E3A;true&#xFF1A; 1doubleTapRecognizer.delaysTouchesBegan = true &#x8FD9;&#x6837;&#xFF0C;&#x624B;&#x52BF;&#x5B9E;&#x4F8B;&#x4F1A;&#x5728;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x52A8;&#x4F5C;&#x662F;&#x5426;&#x4E3A;&#x81EA;&#x5DF1;&#x8981;&#x5904;&#x7406;&#x7684;&#x624B;&#x52BF;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x51B3;&#x5B9A;&#x8981;&#x4E0D;&#x8981;&#x628A;UIResponder&#x6D88;&#x606F;&#x53D1;&#x7ED9;View&#xFF0C;&#x4E0D;&#x8FC7;&#x4EE3;&#x4EF7;&#x662F;UIResponder&#x6D88;&#x606F;&#x4F1A;&#x8FDF;&#x53D1;&#x4E00;&#x5C0F;&#x6BB5;&#x65F6;&#x95F4;&#x2014;&#x2014;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x5355;&#x51FB;&#x540E;&#xFF0C;&#x8FC7;&#x4E00;&#x4F1A;view&#x624D;&#x6536;&#x5230;touchesBegan(_:with:)&#xFF0C;&#x89C6;&#x56FE;&#x4E0A;&#x624D;&#x51FA;&#x73B0;&#x5C0F;&#x5706;&#x70B9;&#x3002; 1.4 &#x5982;&#x4F55;&#x8BBE;&#x7F6E;&#x4E24;&#x4E2A;&#x624B;&#x52BF;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB; &#x5982;&#x679C;&#x4E3A;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#x65E2;&#x6DFB;&#x52A0;&#x4E86;&#x5355;&#x51FB;&#x624B;&#x52BF;&#xFF0C;&#x53C8;&#x6DFB;&#x52A0;&#x4E86;&#x53CC;&#x51FB;&#x624B;&#x52BF;&#x3002;&#x4E00;&#x4E2A;&#x53CC;&#x51FB;&#x52A8;&#x4F5C;&#x4F1A;&#x5BFC;&#x81F4;&#x5148;&#x6536;&#x5230;&#x5355;&#x51FB;&#x6D88;&#x606F;&#xFF0C;&#x518D;&#x6536;&#x5230;&#x53CC;&#x51FB;&#x6D88;&#x606F;&#xFF0C;&#x4F60;&#x80AF;&#x5B9A;&#x5E0C;&#x671B;&#x6B64;&#x65F6;&#x5355;&#x51FB;&#x6D88;&#x606F;&#x5C31;&#x4E0D;&#x8981;&#x5904;&#x7406;&#x4E86;&#x3002;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x624B;&#x52BF;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; 1234567891011121314required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) // &#x6DFB;&#x52A0;&#x53CC;&#x51FB;&#x624B;&#x52BF; let doubleTapRecognizer = UITapGestureRecognizer(target: self, action: #selector(DrawView.doubleTap(_:))) doubleTapRecognizer.numberOfTapsRequired = 2 doubleTapRecognizer.delaysTouchesBegan = true addGestureRecognizer(doubleTapRecognizer) // &#x6DFB;&#x52A0;&#x5355;&#x51FB;&#x624B;&#x52BF; let tapRecognizer = UITapGestureRecognizer(target: self, action: #selector(DrawView.tap(_:))) tapRecognizer.delaysTouchesBegan = true tapRecognizer.require(toFail: doubleTapRecognizer) // &#x5982;&#x679C;&#x786E;&#x8BA4;&#x4E0D;&#x662F;&#x53CC;&#x51FB;&#x624B;&#x52BF;&#x65F6;&#x518D;&#x5904;&#x7406; addGestureRecognizer(tapRecognizer)} &#x9700;&#x8981;&#x5728;&#x521B;&#x5EFA;&#x5355;&#x51FB;&#x624B;&#x52BF;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;&#x201C;&#x786E;&#x8BA4;&#x4E0D;&#x662F;&#x53CC;&#x51FB;&#x624B;&#x52BF;&#x624D;&#x8F6E;&#x5230;&#x81EA;&#x5DF1;&#x5904;&#x7406;&#x201D;&#x3002;&#x5F53;&#x7136;&#x4EE3;&#x4EF7;&#x548C;&#x62E6;&#x622A;UIResponder&#x7C7B;&#x4F3C;&#xFF0C;&#x8FD9;&#x4E5F;&#x4F1A;&#x8BA9;&#x5355;&#x51FB;&#x6D88;&#x606F;&#x5EF6;&#x8FDF;&#x4E00;&#x4F1A;&#x518D;&#x5904;&#x7406;&#x3002; 1.5 &#x8FDE;&#x7EED;&#x578B;&#x624B;&#x52BF;&#x8BC6;&#x522B; &#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5206;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF1A;&#x4E00;&#x79CD;&#x662F;&#x79BB;&#x6563;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x5355;&#x51FB;&#x3001;&#x53CC;&#x51FB;&#xFF0C;&#x5728;&#x8BC6;&#x522B;&#x5B8C;&#x6210;&#x540E;&#x624B;&#x52BF;&#x5C31;&#x7ED3;&#x675F;&#x4E86;&#xFF1B;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x957F;&#x6309;&#xFF0C;&#x4E00;&#x4E2A;&#x624B;&#x52BF;&#x7531;&#x591A;&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x8BC6;&#x522B;&#x7ED3;&#x679C;&#x7EC4;&#x6210;&#x3002;&#x7CFB;&#x7EDF;&#x901A;&#x8FC7;state&#x5C5E;&#x6027;&#x6765;&#x8BC6;&#x522B;&#x8FD9;&#x4E9B;&#x9636;&#x6BB5;&#x3002;&#x4E00;&#x4E2A;&#x957F;&#x6309;&#x624B;&#x52BF;&#x4F1A;&#x5206;&#x4E09;&#x4E2A;&#x72B6;&#x6001;&#xFF1A; - &#x89E6;&#x5C4F;&#xFF0C;&#x6B64;&#x65F6;&#x957F;&#x6309;&#x8BC6;&#x522B;&#x5668;&#x5224;&#x65AD;&#x8FD9;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x6B21;&#x957F;&#x6309;&#x7684;&#x5F00;&#x59CB;&#xFF0C;&#x4F46;&#x5FC5;&#x987B;&#x89C2;&#x5BDF;&#x540E;&#x7EED;&#x64CD;&#x4F5C;&#x624D;&#x80FD;&#x786E;&#x8BA4;&#x662F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x957F;&#x6309;&#x3002;&#x6B64;&#x65F6;&#x957F;&#x6309;&#x8BC6;&#x522B;&#x5668;&#x7684;&#x72B6;&#x6001;&#x662F;UIGestureRecognizerState.possible - &#x6309;&#x4F4F;&#x8DB3;&#x591F;&#x957F;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x6B64;&#x65F6;&#x957F;&#x6309;&#x8BC6;&#x522B;&#x5668;&#x786E;&#x8BA4;&#x8FD9;&#x662F;&#x4E2A;&#x957F;&#x6309;&#x5F00;&#x59CB;&#xFF0C;&#x72B6;&#x6001;&#x662F;UIGestureRecognizerState.began - &#x624B;&#x6307;&#x4ECE;&#x5C4F;&#x5E55;&#x79FB;&#x5F00;&#xFF0C;&#x624B;&#x52BF;&#x7ED3;&#x675F;&#x3002;&#x6B64;&#x65F6;&#x8BC6;&#x522B;&#x5668;&#x7684;&#x72B6;&#x6001;&#x662F;UIGestureRecognizerState.ended &#x6BCF;&#x6B21;&#x72B6;&#x6001;&#x5207;&#x6362;&#xFF0C;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x90FD;&#x4F1A;&#x5411;target&#x53D1;&#x9001;&#x6D88;&#x606F;&#x3002; 1.6 &#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x4E24;&#x4E2A;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x8981;&#x540C;&#x65F6;&#x5DE5;&#x4F5C; &#x5982;&#x679C;&#x89C6;&#x56FE;&#x540C;&#x65F6;&#x6CE8;&#x518C;&#x4E86;&#x957F;&#x6309;&#x548C;&#x62D6;&#x52A8;&#xFF0C;&#x901A;&#x8FC7;&#x957F;&#x6309;&#x9009;&#x4E2D;&#x67D0;&#x6761;&#x7EBF;&#xFF0C;&#x7136;&#x540E;&#x62D6;&#x52A8;&#x6539;&#x53D8;&#x5B83;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x957F;&#x6309;began&#x4E4B;&#x540E;&#x7684;&#x62D6;&#x52A8;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5B83;&#x548C;&#x62D6;&#x52A8;&#x540C;&#x65F6;&#x5DE5;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x624B;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#x4E4B;&#x524D;&#xFF0C;&#x957F;&#x6309;&#x6CA1;&#x6709;&#x7ED3;&#x675F;&#x3002;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x957F;&#x6309;&#x4F1A;&#x72EC;&#x5360;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#xFF0C;&#x8FD9;&#x4F1A;&#x4EE4;&#x5176;&#x4ED6;&#x7684;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x4E0D;&#x5DE5;&#x4F5C;&#x3002; 1.7 &#x600E;&#x4E48;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x9700;&#x8981;&#x540C;&#x65F6;&#x5DE5;&#x4F5C;&#x7684;&#x95EE;&#x9898; &#x8FD8;&#x4EE5;&#x957F;&#x6309;&#x548C;&#x62D6;&#x52A8;&#x4E3A;&#x4F8B;&#xFF0C;&#x62D6;&#x52A8;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x5728;&#x957F;&#x6309;&#x7684;&#x65F6;&#x95F4;&#x7A97;&#x53E3;&#x5185;&#xFF0C;&#x5F53;&#x65F6;&#x522B;&#x5230;&#x62D6;&#x52A8;&#x624B;&#x52BF;&#x65F6;&#xFF0C;&#x8BE5;&#x624B;&#x52BF;&#x4F1A;&#x5411;&#x5176;&#x59D4;&#x6258;&#x4EE3;&#x7406;&#x53D1;&#x9001; 123optional func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIGestureRecognizer) -&gt; Bool &#x6D88;&#x606F;&#xFF0C;&#x8BE2;&#x95EE;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x5904;&#x7406;&#x5904;&#x7406;&#x591A;&#x4E2A;&#x624B;&#x52BF;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6D88;&#x606F;&#x8FD4;&#x56DE;true&#xFF0C;&#x62D6;&#x52A8;&#x624B;&#x52BF;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;&#x4E86;&#x3002;&#x8FD9;&#x4E2A;&#x59D4;&#x6258;&#x4EE3;&#x7406;&#x5FC5;&#x987B;&#x9075;&#x5FAA;UIGestureRecognizerDelegate&#x534F;&#x8BAE; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920// &#x4EE4;View&#x9075;&#x5FAA;UIGestureRecognizerDelegate&#x534F;&#x8BAE;class DrawView: UIView ,UIGestureRecognizerDelegate{ &#x2026;&#x2026; required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) &#x2026;&#x2026; let longPressRecognizer = UILongPressGestureRecognizer(target: self, action: #selector(DrawView.longPress(_:))) addGestureRecognizer(longPressRecognizer) moveRecognizer = UIPanGestureRecognizer(target: self, action: #selector(DrawView.moveLine(_:))) moveRecognizer.delegate = self // &#x5C06;&#x62D6;&#x52A8;&#x624B;&#x52BF;&#x7684;&#x4EE3;&#x7406;&#x8BBE;&#x4E3A;DrawView moveRecognizer.cancelsTouchesInView = false addGestureRecognizer(moveRecognizer) } func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIGestureRecognizer) -&gt; Bool{ return true // &#x540C;&#x65F6;&#x8BC6;&#x522B;&#x7684;&#x8BE2;&#x95EE;&#x603B;&#x662F;&#x8FD4;&#x56DE;true } &#x2026;&#x2026;} &#x6211;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;&#x5728;&#x957F;&#x6309;&#x5C1A;&#x672A;&#x5B8C;&#x6210;&#x4E4B;&#x524D;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x957F;&#x6309;&#x5403;&#x6389;&#x4E86;&#x624B;&#x52BF;&#x5427;&#xFF0C;&#x5982;&#x679C;&#x6210;&#x7ACB;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x91CC;&#x505A;&#x4EFB;&#x4F55;&#x7684;&#x8BBE;&#x7F6E;&#x548C;&#x64CD;&#x4F5C;&#x600E;&#x4E48;&#x5C31;&#x80FD;&#x8BA9;&#x5B83;&#x83B7;&#x5F97;&#x624B;&#x52BF;&#x4E86;&#x5462;&#xFF1F;&#x6211;&#x8BA4;&#x4E3A;&#x5E94;&#x8BE5;&#x5728;longPressRecognizer&#x91CC;&#x8BBE;&#x7F6E;&#x4E2A;&#x4EC0;&#x4E48;&#x5C5E;&#x6027;&#x624D;&#x80FD;&#x8FBE;&#x5230;&#x6548;&#x679C;&#x5440;&#x3002; 1.8 &#x600E;&#x4E48;&#x5B8C;&#x6210;&#x62D6;&#x52A8; &#x62D6;&#x52A8;UIPanGestureRecognizer&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x578B;&#x624B;&#x52BF;&#xFF1A;&#x5F53;&#x624B;&#x6307;&#x5F00;&#x59CB;&#x79FB;&#x52A8;&#xFF0C;&#x5B83;&#x7684;&#x72B6;&#x6001;&#x4E3A;began&#xFF0C;&#x9996;&#x6B21;&#x5411;target&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF1B;&#x5F53;&#x624B;&#x6307;&#x6301;&#x7EED;&#x79FB;&#x52A8;&#xFF0C;&#x5B83;&#x7684;&#x72B6;&#x6001;&#x4E3A;changed&#xFF0C;&#x5E76;&#x6301;&#x7EED;&#x5411;target&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF1B;&#x5F53;&#x624B;&#x6307;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#xFF0C;&#x72B6;&#x6001;&#x4E3A;ended&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x5411;target&#x53D1;&#x9001;&#x6D88;&#x606F;&#x3002;&#x5728;&#x4E0D;&#x65AD;&#x53D1;&#x9001;changed&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x4ED6;&#x7684;translation(in:)&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x548C;&#x524D;&#x4E00;&#x6B21;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x5BF9;&#x4F4D;&#x79FB;&#xFF1A; 12345678910111213141516171819func moveLine(_ gestureRecognizer: UIPanGestureRecognizer){ print(#function) if let index = selectedLineIndex{ if gestureRecognizer.state == .changed{ let translation = gestureRecognizer.translation(in: self) // &#x79FB;&#x52A8;&#x88AB;&#x9009;&#x4E2D;&#x7684;&#x76F4;&#x7EBF; finishedLines[index].begin.x += translation.x finishedLines[index].begin.y += translation.y finishedLines[index].end.x += translation.x finishedLines[index].end.y += translation.y // &#x7ED9;&#x4F4D;&#x79FB;&#x6E05;&#x96F6;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E0B;&#x6B21;&#x63A5;&#x6536;&#x5230;&#x7684;&#x4EC5;&#x662F;&#x9488;&#x5BF9;&#x8FD9;&#x6B21;&#x7684;&#x4F4D;&#x79FB; gestureRecognizer.setTranslation(CGPoint.zero, in: self) setNeedsDisplay() } }else{ return }} 2 UIMenuController 2.1 &#x521B;&#x5EFA;UIMenuController&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4; &#x4E00;&#x3001;&#x83B7;&#x53D6;UIMenuController&#x5B9E;&#x4F8B;&#xFF0C;&#x7EC4;&#x88C5;&#x83DC;&#x5355;&#x9879;&#xFF0C;&#x8BBE;&#x7F6E;UIMenuController&#x5B9E;&#x4F8B;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x4EE4;&#x5B83;&#x53EF;&#x89C1;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x5C06;&#x54CD;&#x5E94;&#x89C6;&#x56FE;&#x8BBE;&#x7F6E;&#x4E3A;first responder&#x3002; 1234567891011121314func tap(_ gestureRecognizer: UIGestureRecognizer){ &#x2026;&#x2026; let menu = UIMenuController.shared // &#x83B7;&#x53D6;UIMenuController&#x5B9E;&#x4F8B; &#x2026;&#x2026; becomeFirstResponder() // &#x8BBE;&#x7F6E;&#x4E3A;first responder // &#x7EC4;&#x88C5;&#x83DC;&#x5355;&#x9879; let deleteItem = UIMenuItem(title: &quot;Delete&quot;, action: #selector(DrawView.deleteLine(_:))) menu.menuItems = [deleteItem] // &#x8BBE;&#x7F6E;&#x5F39;&#x51FA;&#x4F4D;&#x7F6E;&#xFF0C;&#x4EE4;&#x5176;&#x53EF;&#x89C1; let targetRect = CGRect(x: point.x, y: point.y, width: 2, height: 2) menu.setTargetRect(targetRect, in: self) menu.setMenuVisible(true, animated: true) &#x2026;&#x2026;} UIMenuController&#x5B9E;&#x4F8B;&#x662F;&#x8FDB;&#x7A0B;&#x5185;&#x5168;&#x5C40;&#x552F;&#x4E00;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x662F;&#x83B7;&#x53D6;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x521B;&#x5EFA;&#x3002; &#x4E8C;&#x3001;&#x8BBE;&#x7F6E;canBecomeFirstResponder&#x5C5E;&#x6027;&#x4E3A;true&#xFF0C;&#x4EE4;&#x5176;&#x53EF;&#x4EE5;&#x6210;&#x4E3A;first responder&#xFF1A; 123override var canBecomeFirstResponder: Bool{ return true} &#x8FD9;&#x79CD;&#x5199;&#x6CD5;&#x5F88;&#x5947;&#x602A;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x800C;&#x4E0D;&#x662F;&#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x8986;&#x76D6;&#xFF1F;&#x90A3;&#x4E48;&#x5728;&#x58F0;&#x660E;&#x6B64;&#x5C5E;&#x6027;&#x7684;&#x65F6;&#x5019;&#x662F;&#x600E;&#x4E48;&#x58F0;&#x660E;&#x7684;&#x5462;&#xFF1F; &#x4E09;&#x3001;&#x5B9E;&#x73B0;&#x83DC;&#x5355;&#x9879;&#x54CD;&#x5E94;&#x51FD;&#x6570; 123func deleteLine(_ sender: UIMenuController){ &#x2026;&#x2026;} &#x4E66;&#x4E2D;P562&#x8BF4;&#x5230;&#xFF1A;&#x83DC;&#x5355;&#x5728;&#x663E;&#x793A;&#x4E4B;&#x524D;&#x4F1A;&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x83DC;&#x5355;&#x9879;&#xFF0C;&#x5E76;&#x68C0;&#x67E5;first responder&#x662F;&#x5426;&#x5B9E;&#x73B0;&#x4E86;&#x8BE5;&#x83DC;&#x5355;&#x9879;&#x5173;&#x8054;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x5B9E;&#x73B0;&#xFF0C;&#x5219;&#x4E0D;&#x663E;&#x793A;&#x6B64;&#x83DC;&#x5355;&#x9879;&#xFF0C;&#x5982;&#x679C;&#x6240;&#x6709;&#x83DC;&#x5355;&#x9879;&#x5173;&#x8054;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x6CA1;&#x5B9E;&#x73B0;&#xFF0C;&#x5219;&#x6574;&#x4E2A;&#x83DC;&#x5355;&#x90FD;&#x4E0D;&#x4F1A;&#x5C55;&#x73B0;&#x3002; &#x95EE;&#x9898;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x83DC;&#x5355;&#x9879;&#x7ED1;&#x5B9A;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x65E2;&#x5728;&#x521B;&#x5EFA;&#x83DC;&#x5355;&#x9879;&#x65F6;&#xFF0C;&#x4F20;&#x5165;action&#x53C2;&#x6570;&#x6CA1;&#x6709;&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#xFF0C;&#x4F1A;&#x5728;#selector()&#x5904;&#x4F1A;&#x7F16;&#x8BD1;&#x4E0D;&#x901A;&#x8FC7;&#x5427;&#xFF1F;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十八]]></title>
    <url>%2F2017%2F08%2F06%2F2017%2F0806iOSProgrammingBNRG18%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x8FDB;&#x5165;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x4F8B;&#x7A0B;&#x5F00;&#x53D1;&#xFF0C;&#x4E3B;&#x754C;&#x9762;&#x4E0A;&#x901A;&#x8FC7;&#x89E6;&#x5C4F;&#x3001;&#x62D6;&#x52A8;&#x62C9;&#x51FA;&#x4E00;&#x6761;&#x76F4;&#x7EBF;&#x3002;&#x5DF2;&#x7ECF;&#x62C9;&#x51FA;&#x7684;&#x76F4;&#x7EBF;&#x4F1A;&#x7559;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x65B0;&#x7684;&#x76F4;&#x7EBF;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x89E6;&#x6478;&#x6D88;&#x606F; - struct - &#x7ED8;&#x5236; - @IBInspectable - &#x6D88;&#x606F;&#x54CD;&#x5E94;&#x94FE; 1 &#x89E6;&#x6478;&#x6D88;&#x606F; 1.1 &#x89E6;&#x6478;&#x6D88;&#x606F;&#x5904;&#x7406;&#x7684;&#x57FA;&#x672C;&#x6D41;&#x7A0B; UIView&#x4ECE;UIResponder&#x6D3E;&#x751F;&#x4E86;4&#x4E2A;&#x4E0E;&#x89E6;&#x6478;&#x76F8;&#x5173;&#x7684;&#x6D88;&#x606F;&#xFF1A; - &#x624B;&#x6307;&#x89E6;&#x6478;&#x5230;&#x5C4F;&#x5E55;&#x65F6;&#x6536;&#x5230;&#x6D88;&#x606F; func touchesBegan(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) &#x6B64;&#x65F6;&#x7CFB;&#x7EDF;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;UITouch&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x8BE5;&#x6D88;&#x606F;&#x3002; &#x624B;&#x6307;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x79FB;&#x52A8;&#x65F6;&#xFF0C;&#x4F1A;&#x6301;&#x7EED;&#x4E0D;&#x65AD;&#x6536;&#x5230;&#x6D88;&#x606F; func touchesMoved(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) touches&#x4E2D;&#x5305;&#x542B;&#x4ECE;&#x624B;&#x6307;&#x89E6;&#x6478;&#x5230;&#x5C4F;&#x5E55;&#x5230;&#x5F53;&#x524D;&#x624B;&#x6307;&#x7684;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x3002; &#x4E00;&#x65E6;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#x6536;&#x5230;&#x89E6;&#x6478;&#x6D88;&#x606F;&#xFF0C;&#x4E4B;&#x540E;&#x53EA;&#x8981;&#x624B;&#x6307;&#x4E0D;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#xFF0C;&#x5373;&#x4F7F;&#x79FB;&#x52A8;&#x5230;&#x89C6;&#x56FE;&#x8FB9;&#x754C;&#x4EE5;&#x5916;&#xFF0C;&#x8BE5;&#x89C6;&#x56FE;&#x59CB;&#x7EC8;&#x90FD;&#x662F;&#x8BE5;&#x89E6;&#x6478;&#x6D88;&#x606F;&#x7684;&#x63A5;&#x53D7;&#x8005;&#x3002; &#x624B;&#x6307;&#x4ECE;&#x5C4F;&#x5E55;&#x79BB;&#x5F00;&#x65F6;&#x6536;&#x5230;&#x6D88;&#x606F; func touchesEnded(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) &#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x540E;&#xFF0C;UITouch&#x5BF9;&#x8C61;&#x4EEC;&#x5C06;&#x88AB;&#x9500;&#x6BC1;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x4ECE;&#x624B;&#x6307;&#x89E6;&#x6478;&#x5230;&#x5C4F;&#x5E55;&#x5F00;&#x59CB;&#xFF0C;&#x76F4;&#x5230;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#x4E4B;&#x524D;&#xFF0C;&#x4E2D;&#x95F4;&#x4EA7;&#x751F;&#x7684;&#x6240;&#x6709;UITouch&#x4FE1;&#x606F;&#x4F1A;&#x4E00;&#x76F4;&#x4FDD;&#x5B58;&#xFF0C;&#x76F4;&#x5230;&#x5B8C;&#x6210;&#x6B64;&#x6D88;&#x606F;&#x540E;&#xFF0C;&#x624D;&#x88AB;&#x9500;&#x6BC1;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x8981;&#x4ECE;&#x6D88;&#x606F;&#x53C2;&#x6570;&#x4E2D;&#x83B7;&#x53D6;UITouch&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x8981;&#x81EA;&#x5DF1;&#x4FDD;&#x5B58;&#x5B83;&#x4EEC;&#x3002;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x662F;&#x7CFB;&#x7EDF;&#x638C;&#x63A7;&#x7684;&#x3002; &#x5F53;&#x6536;&#x5230;&#x7535;&#x8BDD;&#x65F6;&#xFF0C;&#x89E6;&#x6478;&#x4F1A;&#x88AB;&#x7CFB;&#x7EDF;&#x6D88;&#x606F;&#x7EC8;&#x6B62;&#xFF1A; func touchesCancelled(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) 1.2 &#x54CD;&#x5E94;&#x591A;&#x6307;&#x89E6;&#x6478;&#x548C;&#x5355;&#x6307;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#x4E4B;&#x5904; &#x5728;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x89C6;&#x56FE;&#x53EA;&#x80FD;&#x63A5;&#x6536;&#x5355;&#x6307;&#x89E6;&#x6478;&#x2014;&#x2014;&#x5355;&#x6307;&#x89E6;&#x5C4F;&#x89E6;&#x53D1;touchesBegan(_:with:)&#x4F46;&#x662F;&#x8FD8;&#x6CA1;&#x6709;&#x62AC;&#x8D77;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x518D;&#x6709;&#x624B;&#x6307;&#x89E6;&#x5C4F;&#xFF0C;&#x4F1A;&#x88AB;&#x7CFB;&#x7EDF;&#x5FFD;&#x7565;&#xFF0C;&#x5373;&#x89C6;&#x56FE;&#x4E0D;&#x4F1A;&#x6536;&#x5230;UIResponder&#x6D88;&#x606F;&#x3002; &#x5982;&#x679C;&#x8981;&#x8BA9;&#x89C6;&#x56FE;&#x80FD;&#x5904;&#x7406;&#x591A;&#x6307;&#x89E6;&#x6478;&#x6D88;&#x606F;&#xFF0C;&#x5FC5;&#x987B;&#x5C06;&#x5176;multipleTouchesEnabled&#x5C5E;&#x6027;&#x7F6E;&#x4E3A;true&#xFF1A; &#x8FD9;&#x6837;&#xFF0C;&#x53EA;&#x8981;&#x6709;&#x624B;&#x6307;&#x6309;&#x4E0B;&#x5C31;&#x4F1A;&#x6536;&#x5230;touchesBegan(_:with:)&#x6D88;&#x606F;&#xFF0C;&#x62AC;&#x8D77;&#x5C31;&#x80FD;&#x6536;&#x5230;touchesEnded(_:with:)&#x6D88;&#x606F;&#x3002; &#x95EE;&#x9898;&#xFF1A;A&#x6309;&#x4E0B; - A&#x79FB;&#x52A8; - B&#x6309;&#x4E0B; - B&#x79FB;&#x52A8;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x6709;&#x4E24;&#x4E2A;&#x6B63;&#x5728;&#x7ED8;&#x5236;&#x4E2D;&#x7684;&#x7EBF;&#x6761;&#xFF0C;&#x90A3;&#x63A5;&#x4E0B;&#x6765;&#x6536;&#x5230;&#x7684;&#x79FB;&#x52A8;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x5E94;&#x8BE5;&#x7ED9;A&#x8FD8;&#x662F;B&#x5904;&#x7406;&#x5462;&#xFF1F; 1.3 &#x6BCF;&#x6B21;UIResponder&#x6D88;&#x606F;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;touches&#x53C2;&#x6570;&#x8868;&#x793A;&#x4EC0;&#x4E48;&#xFF1F; &#x4EC5;&#x5904;&#x7406;&#x5355;&#x6307;&#x89E6;&#x6478;&#x6D88;&#x606F;&#x7684;&#x65F6;&#x5019;&#x5F88;&#x597D;&#x7406;&#x89E3;&#xFF1A; 123touchesBegan(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) // &#x8868;&#x793A;&#x6309;&#x4E0B;&#x70B9;&#x7684;&#x4FE1;&#x606F;override func touchesMoved(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) // &#x8868;&#x793A;&#x5F53;&#x524D;&#x79FB;&#x52A8;&#x70B9;&#x7684;&#x4FE1;&#x606F;override func touchesEnded(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) // &#x8868;&#x793A;&#x62AC;&#x8D77;&#x70B9;&#x7684;&#x4FE1;&#x606F; &#x53EF;&#x4EE5;&#x505A;&#x4E2A;&#x8BD5;&#x9A8C;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x6D88;&#x606F;&#x5185;&#x63D2;&#x5165;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x6253;&#x5370;touches&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#xFF1A; 123456var msg = #functionfor touch in touches{ let location = touch.location(in: self) msg += &quot;(\(Int(location.x)), \(Int(location.y))), &quot;}print(msg) &#x5212;&#x51FA;&#x4E00;&#x6761;&#x76F4;&#x7EBF;&#xFF0C;&#x5F97;&#x5230;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#xFF1A; 123456touchesBegan(_:with:)(184, 192), touchesMoved(_:with:)(183, 197), touchesMoved(_:with:)(182, 202), touchesMoved(_:with:)(179, 206), &#x2026;&#x2026;touchesEnded(_:with:)(176, 216), &#x7ED3;&#x8BBA;&#x662F;&#xFF1A;&#x5728;touchesMoved&#x65F6;&#x6536;&#x5230;&#x7684;&#x662F;&#x5F53;&#x524D;&#x79FB;&#x52A8;&#x5230;&#x7684;&#x70B9;&#x3002; &#x591A;&#x70B9;&#x89E6;&#x6478;&#x65F6;&#xFF0C;&#x628A;&#x6253;&#x5370;&#x51FD;&#x6570;&#x7A0D;&#x5FAE;&#x6539;&#x4E00;&#x4E0B;&#xFF0C;&#x6BCF;&#x6B21;&#x4E0D;&#x4EC5;&#x6253;&#x5370;&#x51FD;&#x6570;&#x540D;&#x5750;&#x6807;&#xFF0C;&#x8FD8;&#x628A;&#x548C;touches&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;NSValue&#x6253;&#x5370;&#x51FA;&#x6765; 1234567var msg = #functionfor touch in touches{ let location = touch.location(in: self) let key = NSValue(nonretainedObject: touch) msg += &quot;(\(key):\(Int(location.x)), \(Int(location.y))), &quot;}print(msg) &#x5212;&#x51FA;&#x4E24;&#x6761;&#x76F4;&#x7EBF;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 12345touchesBegan(_:with:)(&lt;a0dee0d6 b27f0000&gt;:222, 246), (&lt;105ee0d6 b27f0000&gt;:191, 489), touchesMoved(_:with:)(&lt;a0dee0d6 b27f0000&gt;:221, 250), (&lt;105ee0d6 b27f0000&gt;:192, 485), touchesMoved(_:with:)(&lt;a0dee0d6 b27f0000&gt;:220, 255), (&lt;105ee0d6 b27f0000&gt;:194, 480), &#x2026;&#x2026;touchesEnded(_:with:)(&lt;a0dee0d6 b27f0000&gt;:219, 262), (&lt;105ee0d6 b27f0000&gt;:195, 473), &#x6211;&#x662F;&#x4F7F;&#x7528;&#x6A21;&#x62DF;&#x5668;&#x6F14;&#x793A;&#x7684;&#x89E6;&#x5C4F;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x8BBE;&#x5907;&#x4E0A;&#x4E24;&#x4E2A;&#x6307;&#x5934;&#x540C;&#x65F6;&#x89E6;&#x5C4F;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x5F88;&#x5C0F;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5148;&#x540E;&#x89E6;&#x5C4F;&#xFF0C;&#x5C31;&#x4F1A;&#x6536;&#x5230;&#x4E24;&#x6B21;touchesBegan(_:with:)&#x6D88;&#x606F;&#xFF1B;&#x63A5;&#x4E0B;&#x6765;&#x624B;&#x6307;&#x79FB;&#x52A8;&#x65F6;&#xFF0C;&#x5728;touchesMoved(_:with:)&#x6D88;&#x606F;&#x4E2D;&#x4F1A;&#x6536;&#x5230;&#x4E24;&#x4E2A;touch&#x5143;&#x7D20;&#xFF0C;&#x5206;&#x522B;&#x4EE3;&#x8868;&#x4E24;&#x4E2A;&#x6307;&#x5C16;&#xFF0C;&#x5373;&#x4F7F;&#x4E00;&#x4E2A;&#x6307;&#x5C16;&#x79FB;&#x52A8;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x6CA1;&#x52A8;&#xFF0C;&#x4E5F;&#x4F1A;&#x6536;&#x5230;&#x4E24;&#x4E2A;&#xFF1B;&#x6700;&#x540E;&#x5982;&#x679C;&#x5148;&#x540E;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#xFF0C;&#x5219;&#x4F1A;&#x6536;&#x5230;&#x4E24;&#x6B21;touchesEnded(_:with:)&#x6D88;&#x606F;&#x3002; 1.4 &#x4E0D;&#x8981;&#x5728;UIResponder&#x6D88;&#x606F;&#x5185;&#x5F3A;&#x5F15;&#x7528;UITouch&#x5B9E;&#x4F8B; &#x5728;&#x4E66;&#x4E2D;P534&#xFF0C;&#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x5B9A;&#x4E49;&#x6765;&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x8FD8;&#x6CA1;&#x753B;&#x5B8C;&#x7684;&#x76F4;&#x7EBF;&#xFF1A; 1var currentLines = [NSValue:Line]() &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#xFF0C;key&#x662F;NSValue&#xFF0C;value&#x662F;Line&#x5B9E;&#x4F8B;&#x3002;&#x8FD9;&#x4E2A;key&#x662F;&#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x7684;&#x503C;&#xFF1A; 1let key = NSValue(nonretainedObject: touch) &#x5B83;&#x7684;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;UITouch&#x5BF9;&#x8C61;&#xFF0C;NSValue&#x6839;&#x636E;&#x8BE5;&#x5BF9;&#x8C61;&#x751F;&#x6210;&#x4E0E;&#x5176;&#x5730;&#x5740;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;key&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x5728;currentLines&#x5B57;&#x5178;&#x4E2D;&#x76F4;&#x63A5;&#x628A;UITouch&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x5176;key&#x5462;&#xFF1F;&#x56E0;&#x4E3A;UITouch&#x7684;&#x6587;&#x6863;&#x5F3A;&#x8C03;&#xFF1A;&#x4E0D;&#x8981;&#x5F3A;&#x5F15;&#x7528;&#x4E00;&#x4E2A;UITouch&#x5BF9;&#x8C61;&#xFF01;&#x4F7F;&#x7528;NSValue&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x65E2;&#x80FD;&#x786E;&#x4FDD;key&#x4E0E;&#x5BF9;&#x8C61;&#x5730;&#x5740;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#xFF0C;&#x53C8;&#x80FD;&#x4E0D;&#x5F3A;&#x5F15;&#x7528;&#x8BE5;&#x5BF9;&#x8C61;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x5F3A;&#x5F15;&#x7528;UITouch&#x5BF9;&#x8C61;&#x5462;&#xFF1F; 1.5 &#x5B8C;&#x6574;&#x7684;&#x7ED8;&#x5236;&#x6B65;&#x9AA4; &#x652F;&#x6301;&#x591A;&#x70B9;&#x89E6;&#x6478;&#xFF0C;&#x5F53;&#x624B;&#x6307;&#x89E6;&#x5C4F;&#x65F6;&#x7ED8;&#x5236;&#x76F4;&#x7EBF;&#x8D77;&#x70B9;&#xFF0C;&#x79FB;&#x52A8;&#x65F6;&#x7ED8;&#x5236;&#x76F4;&#x7EBF;&#x7EC8;&#x70B9;&#xFF0C;&#x79BB;&#x5F00;&#x5C4F;&#x5E55;&#x65F6;&#x56FA;&#x8BDD;&#x76F4;&#x7EBF;&#x3002;&#x8FD9;&#x5957;&#x903B;&#x8F91;&#x7684;&#x5B8C;&#x6574;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465class DrawView: UIView { var currentLines = [NSValue:Line]() // &#x5F53;&#x524D;&#x6B63;&#x5728;&#x7ED8;&#x5236;&#x7684;&#x76F4;&#x7EBF; var finishedLines = [Line]() // &#x5DF2;&#x7ECF;&#x56FA;&#x5316;&#x7684;&#x76F4;&#x7EBF; func stroke(_ line: Line){ let path = UIBezierPath() path.lineWidth = 10 path.lineCapStyle = .round path.move(to: line.begin) path.addLine(to: line.end) path.stroke() } override func draw(_ rect: CGRect){ UIColor.black.setStroke() // &#x5DF2;&#x7ECF;&#x56FA;&#x5316;&#x7684;&#x76F4;&#x7EBF;&#x7528;&#x9ED1;&#x8272; for line in finishedLines{ stroke(line) } UIColor.red.setStroke() // &#x6B63;&#x5728;&#x7ED8;&#x5236;&#x7684;&#x76F4;&#x7EBF;&#x7528;&#x7EA2;&#x8272; for(_, line) in currentLines{ stroke(line) } } override func touchesBegan(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { for touch in touches{ // &#x6839;&#x636E;touches&#x521B;&#x5EFA;&#x8D77;&#x70B9; let location = touch.location(in: self) let newLine = Line(begin: location, end: location) let key = NSValue(nonretainedObject: touch) currentLines[key] = newLine } setNeedsDisplay() } override func touchesMoved(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { for touch in touches{ // &#x4FEE;&#x6539;&#x6B63;&#x5728;&#x7ED8;&#x5236;&#x7684;&#x76F4;&#x7EBF;&#x4EEC;&#x7684;&#x7EC8;&#x70B9; let key = NSValue(nonretainedObject: touch) currentLines[key]?.end = touch.location(in: self) } setNeedsDisplay() } override func touchesEnded(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { for touch in touches{ // &#x628A;&#x5B8C;&#x7ED3;&#x7684;&#x76F4;&#x7EBF;&#x6DFB;&#x52A0;&#x5230;&#x56FA;&#x5316;&#x76F4;&#x7EBF;&#x96C6;&#x5408; let key = NSValue(nonretainedObject: touch) if var line = currentLines[key]{ line.end = touch.location(in: self) finishedLines.append(line) currentLines.removeValue(forKey: key) } } setNeedsDisplay() } override func touchesCancelled(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { currentLines.removeAll() // &#x5220;&#x9664;&#x6240;&#x6709;&#x6B63;&#x5728;&#x7ED8;&#x5236;&#x7684;&#x76F4;&#x7EBF; setNeedsDisplay() }} 2 Struct 2.1 Struct&#x533A;&#x522B;&#x4E8E;Class&#x7684;&#x7279;&#x5F81; Struct&#x4E0D;&#x652F;&#x6301;&#x7EE7;&#x627F; &#x5982;&#x679C;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x6307;&#x5B9A;initializer&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x4E3A;&#x4E4B;&#x751F;&#x6210;member-wise initializer&#x3002;member-wise initializer &#x7684;&#x53C2;&#x6570;&#x5217;&#x8868;&#x4F1A;&#x4E3A;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x3002;&#x53C2;&#x6570;&#x5217;&#x8868;&#x7684;&#x987A;&#x5E8F;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x5982;&#x679C;&#x6240;&#x6709;&#x53C2;&#x6570;&#x6709;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x7279;&#x6B8A;&#x7684;initializer&#xFF0C;struct&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;initializer&#x5373;init()&#xFF0C;&#x5B83;&#x5728;&#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#x65F6;&#xFF0C;&#x5C06;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x5C5E;&#x6027;&#x8BBE;&#x7F6E;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C; struct&#xFF08;&#x548C;enums&#xFF09;&#x662F;&#x503C;&#x7C7B;&#x578B;&#xFF08;value types&#xFF09;&#xFF0C;class&#x662F;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF08;reference types&#xFF09;&#x3002; 2.2 &#x503C;&#x7C7B;&#x578B;&#x548C;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x533A;&#x522B; &#x503C;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF1A;&#x5F53;&#x8D4B;&#x503C;&#x6216;&#x4F20;&#x53C2;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x62F7;&#x8D1D;&#x5176;&#x503C;&#xFF0C;&#x6570;&#x7EC4;&#x3001;&#x5B57;&#x5178;&#x3001;enum&#x548C;struct&#x90FD;&#x662F;&#x503C;&#x7C7B;&#x578B;&#x3002; &#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF1A;&#x5F53;&#x8D4B;&#x503C;&#x6216;&#x4F20;&#x53C2;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x503C;&#x7684;&#x62F7;&#x8D1D;&#xFF0C;&#x800C;&#x662F;&#x4F20;&#x9012;&#x5B9E;&#x4F8B;&#x7684;&#x5F15;&#x7528;&#x3002;class&#x548C;closure&#x90FD;&#x662F;&#x5F15;&#x7528;&#x7C7B;&#x578B; 3 &#x7ED8;&#x5236; 3.1 View&#x7684;&#x7ED8;&#x5236;&#x662F;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x88AB;&#x8C03;&#x7528;&#x7684;&#xFF1F; &#x7ED8;&#x5236;&#x884C;&#x4E3A;&#x662F;&#x8986;&#x76D6;draw(_:)&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;draw(_:)&#x662F;&#x88AB;&#x8C01;&#x8C03;&#x7528;&#xFF0C;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x673A;&#x8C03;&#x7528;&#x7684;&#x5462;&#xFF1F; &#x5728;P748&#x4E2D;&#x63D0;&#x5230;&#xFF1A;&#x901A;&#x8FC7;&#x8C03;&#x7528;setNeedsDisplay()&#xFF0C;&#x4F7F;&#x5F97;&#x89C6;&#x56FE;&#x5728;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x672B;&#x7AEF;&#x5F97;&#x5230;&#x91CD;&#x65B0;&#x7ED8;&#x5236;&#x3002;&#x6709;&#x6CA1;&#x6709;&#x4E0D;&#x5728;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x4E2D;&#x5373;&#x65F6;&#x7ED8;&#x5236;&#x5C40;&#x90E8;&#x7684;&#x65B9;&#x6CD5;&#x5462;&#xFF1F; 3.2 &#x7ED8;&#x5236;&#x7EBF;&#x6761;&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4; 12345678UIColor.red.setStroke() // &#x9009;&#x62E9;&#x989C;&#x8272;let path = UIBezierPath() // &#x521B;&#x5EFA;&#x8DEF;&#x5F84;&#x5B9E;&#x4F8B;path.lineWidth = 10 // &#x8BBE;&#x7F6E;&#x7EBF;&#x5BBD;&#x7B49;&#x5C5E;&#x6027;path.lineCapStyle = .round path.move(to: line.begin) // &#x8D77;&#x70B9;&#x3001;&#x7EC8;&#x70B9;path.addLine(to: line.end)path.stroke() // &#x7ED8;&#x5236; 4 @IBInspectable 4.1 @IBInspectable&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x901A;&#x8FC7;&#x7ED9;&#x89C6;&#x56FE;&#x5B9A;&#x4E49;@IBInspectable&#x53D8;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;Interface Builder&#x4E2D;&#x4E3A;&#x8BE5;&#x53D8;&#x91CF;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;&#x914D;&#x7F6E;&#x754C;&#x9762;&#x3002;&#x5982;&#xFF1A; 1234567class DrawView: UIView { &#x2026;&#x2026; @IBInspectable var finishedLineColor: UIColor = UIColor.black // &#x56FA;&#x5316;&#x76F4;&#x7EBF;&#x7684;&#x989C;&#x8272; @IBInspectable var currentLineColor: UIColor = UIColor.red // &#x6B63;&#x5728;&#x7ED8;&#x5236;&#x7684;&#x76F4;&#x7EBF;&#x989C;&#x8272; @IBInspectable var lineThickness: CGFloat = 10 // &#x76F4;&#x7EBF;&#x7684;&#x7C97;&#x7EC6;&#x2026;&#x2026;} &#x5728;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x524D;&#x52A0;&#x4E86;@IBInspectable&#x5173;&#x952E;&#x5B57;&#x540E;&#xFF0C;&#x5728;Interface Builder&#x4E2D;&#x8BBE;&#x7F6E;&#x67D0;&#x4E2A;&#x89C6;&#x56FE;&#x4E3A;DrawView&#xFF0C;&#x5C31;&#x4F1A;&#x770B;&#x5230;&#x8BE5;&#x89C6;&#x56FE;&#x7684;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#xFF1A; # 5 &#x6D88;&#x606F;&#x54CD;&#x5E94;&#x94FE; ## 5.1 &#x54CD;&#x5E94;&#x94FE;&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5; &#x9664;&#x4E86;UIView&#x4F5C;&#x4E3A;UIResponder&#x53EF;&#x4EE5;&#x54CD;&#x5E94;&#x89E6;&#x6478;&#x4E8B;&#x4EF6;&#x4EE5;&#x5916;&#xFF0C;UIResponder&#x7684;&#x5B50;&#x7C7B;&#x8FD8;&#x6709;UIViewController&#x3001;UIApplication&#x548C;UIWindow&#x3002;&#x5C3D;&#x7BA1;UIViewController&#x5E76;&#x4E0D;&#x662F;&#x5C4F;&#x5E55;&#x4E0A;&#x53EF;&#x89C1;&#x7684;&#x89C6;&#x56FE;&#xFF0C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A5;&#x6536;&#x5230;&#x89E6;&#x5C4F;&#x6D88;&#x606F;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4F5C;&#x4E3A;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x94FE;&#x4E0A;&#x7684;&#x5FC5;&#x7ECF;&#x73AF;&#x8282;&#xFF0C;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x5230;&#x5E76;&#x5904;&#x7406;&#x89E6;&#x5C4F;&#x6D88;&#x606F;&#x7684;&#x3002; &#x6BCF;&#x4E00;&#x4E2A;UIResponder&#x90FD;&#x6709;&#x4E00;&#x4E2A;next&#x5C5E;&#x6027;&#xFF0C;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x4E2A;UIResponder&#x5BF9;&#x8C61;&#xFF0C;&#x901A;&#x8FC7;next&#x6307;&#x9488;&#x5B83;&#x4EEC;&#x6784;&#x6210;&#x4E86;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x94FE;&#x3002;&#x4E00;&#x4E2A;&#x89E6;&#x5C4F;&#x4E8B;&#x4EF6;&#x4ECE;&#x67D0;&#x4E2A;View&#x53D1;&#x8D77;&#xFF0C;&#x901A;&#x5E38;View&#x7684;next&#x6307;&#x5411;&#x5176;UIViewController&#xFF0C;&#x6216;&#x8005;&#x4E0A;&#x4E00;&#x5C42;View&#x3002;&#x5982;&#x679C;&#x5B83;&#x4E0D;&#x5904;&#x7406;&#x8BE5;&#x6D88;&#x606F;&#xFF0C;&#x5C31;&#x628A;&#x6D88;&#x606F;&#x8F6C;&#x53D1;&#x7ED9;next&#x3002;&#x4E00;&#x4E2A;app&#x91CC;&#x6700;&#x9876;&#x5C42;&#x89C6;&#x56FE;&#x5C31;&#x662F;UIWindow&#x4E86;&#xFF0C;&#x800C;UIWindow&#x7684;next&#x5219;&#x6307;&#x5411;UIApplication&#x3002;&#x4E0B;&#x56FE;&#x63CF;&#x8FF0;&#x4E86;app&#x91CC;&#x901A;&#x5E38;&#x7684;&#x54CD;&#x5E94;&#x94FE;&#xFF1A;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十七]]></title>
    <url>%2F2017%2F08%2F05%2F2017%2F0805iOSProgrammingBNRG17%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5C06;&#x8BE6;&#x60C5;&#x754C;&#x9762;&#x5728;&#x6A2A;&#x5C4F;&#x65F6;&#x8C03;&#x6574;&#x4E86;&#x5E03;&#x5C40;&#xFF1A; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x6A2A;&#x7AD6;&#x5C4F;&#x652F;&#x6301; 1 &#x6A2A;&#x7AD6;&#x5C4F; 1.1 &#x5982;&#x4F55;&#x5728;&#x6A2A;&#x7AD6;&#x5C4F;&#x4E0B;&#xFF0C;&#x8C03;&#x6574;&#x754C;&#x9762;&#x5E03;&#x5C40; &#x4E00;&#x3001;&#x5728;&#x5E03;&#x5C40;&#x4E0A;&#x5728;&#x539F;&#x6765;&#x7684;Vertical Stack&#x4E4B;&#x5916;&#x518D;&#x5957;&#x4E00;&#x5C42;Horizontal Stack&#xFF0C;&#x5E76;&#x4E3A;&#x4E4B;&#x8BBE;&#x7F6E;&#x7EA6;&#x675F;&#xFF1A; &#x4E8C;&#x3001;&#x5982;&#x4E0B;&#x8C03;&#x6574;ImageView&#x5728;&#x6700;&#x4E0A;&#x5C42;StackView&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x786E;&#x4FDD;&#x5176;&#x5E03;&#x5C40;&#x548C;&#x539F;&#x6765;&#x6CA1;&#x6709;&#x53D8;&#x5316;&#xFF1A; &#x4E09;&#x3001;&#x5728;InterfaceBuilder&#x4E2D;&#x5207;&#x6362;&#x6210;&#x6A2A;&#x5C4F;&#x8BBE;&#x7F6E; &#x4E3A;&#x6700;&#x5916;&#x5C42;Stack View&#x6DFB;&#x52A0;&#x8F74;&#x5C5E;&#x6027;&#xFF1A; &#x5E76;&#x8BBE;&#x7F6E;&#x4E3A;&#x6C34;&#x5E73;&#xFF1A; &#x95EE;&#x9898;&#xFF1A;&#x6B64;&#x5904;&#x6DFB;&#x52A0;&#x8F74;&#x5C5E;&#x6027;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5F53;&#x7AD6;&#x5C4F;&#x65F6;&#x4E3A;Vertical&#xFF0C;&#x5F53;&#x6A2A;&#x5C4F;&#x65F6;&#x4E3A;Horizontal&#xFF0C;&#x53EF;&#x662F;&#x8FD9;&#x79CD;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x662F;&#x600E;&#x4E48;&#x5BF9;&#x5E94;&#x8D77;&#x6765;&#x7684;&#x5462;&#xFF1F;&#x521B;&#x5EFA;&#x8F74;&#x53D8;&#x91CF;&#x7684;&#x4E09;&#x4E2A;&#x53C2;&#x6570;Width&#x3001;Height&#x548C;Gamut&#x5206;&#x522B;&#x8868;&#x4EC0;&#x4E48;&#x542B;&#x4E49;&#x5462;&#xFF1F; &#x518D;&#x6DFB;&#x52A0;&#x4E00;&#x6761;Distribution&#x53D8;&#x91CF;&#xFF1A;Width= Any&#xFF0C;Height=Compact&#xFF0C;Gamut=Any&#x3002;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x5C5E;&#x6027;&#x4E3A;Fill Equally&#xFF1A; &#x8FD0;&#x884C;&#x540E;&#x6700;&#x7EC8;&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十六]]></title>
    <url>%2F2017%2F08%2F04%2F2017%2F0804iOSProgrammingBNRG16%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x9762;&#x5B8C;&#x6210;&#x4E86;&#x754C;&#x9762;&#x7684;&#x7F16;&#x5199;&#xFF0C;&#x672C;&#x7AE0;&#x5C31;&#x8BE5;&#x628A;&#x754C;&#x9762;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5230;&#x8BBE;&#x5907;&#x4E86;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Archiving - &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6C99;&#x76D2; - &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;AppDelegate&#x7684;&#x51E0;&#x4E2A;&#x51FD;&#x6570; - &#x9519;&#x8BEF;&#x5904;&#x7406;Error Handling - Application Bundle - App&#x7684;&#x72B6;&#x6001;&#x8FC1;&#x79FB;&#x56FE; 1 &#x6587;&#x4EF6;IO 1.1 iOS&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#x5E38;&#x7528;&#x7684;&#x6587;&#x4EF6;IO&#x65B9;&#x5F0F;&#xFF1F; Archiving Data Property list serializable types &#x5404;&#x79CD;IO&#x65B9;&#x5F0F;&#x7684;&#x4F18;&#x7F3A;&#x70B9; 1.2 &#x4ECB;&#x7ECD;Archiving Archiving&#x7528;&#x6765;&#x5B8C;&#x6210;&#x5BF9;&#x8C61;&#x7684;&#x7F16;&#x7801;/&#x89E3;&#x7801;&#x5E76;&#x4FDD;&#x5B58;&#x5230;&#x8BBE;&#x5907;&#x3002;&#x9075;&#x5FAA;NSCoding&#x534F;&#x8BAE;&#xFF0C;&#x5B9E;&#x73B0;encode(with:)&#x548C;init(coder:)&#x63A5;&#x53E3;&#xFF0C;&#x5728;encode(with:)&#x4E2D;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x7684;encode&#xFF0C;&#x5728;init&#x63A5;&#x53E3;&#x4E2D;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x7684;decode&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x7C7B;&#x5C31;&#x5177;&#x5907;Archiving&#x80FD;&#x529B;&#x3002; &#x539F;&#x751F;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;encode&#x548C;init&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#xFF1F; 1.3 &#x5B9E;&#x73B0;Item&#x7684;Archiving 1234567891011121314class Item: NSObject, NSCoding { // &#x9075;&#x5B88;NSCoding&#x534F;&#x8BAE; &#x2026;&#x2026; // &#x5B8C;&#x6210;&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x7F16;&#x7801; func encode(with aCoder: NSCoder){ aCoder.encode(name, forKey: &quot;name&quot;) &#x2026;&#x2026; } // &#x5B8C;&#x6210;&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x89E3;&#x7801; required init(coder aDecoder: NSCoder){ name = aDecoder.decodeObject(forKey: &quot;name&quot;) as! String &#x2026;&#x2026; super.init() }} &#x4E3A;&#x4EC0;&#x4E48;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x540C;&#x540D;&#x51FD;&#x6570;&#x8F6C;&#x53D1;&#x5462;&#xFF1F;&#x6211;&#x5206;&#x6790;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x4E3A;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x5B89;&#x6392;&#x4E86;&#x4E00;&#x4E2A;key&#xFF0C;&#x8FD9;&#x662F;&#x4E0E;MFC&#x7684;&#x5E8F;&#x5217;&#x5316;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x3002;&#x5B83;&#x4EE5;&#x66F4;&#x6587;&#x672C;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#x7EC4;&#x7EC7;&#x6570;&#x636E;&#xFF0C;&#x6BD4;MFC&#x7684;&#x7EAF;&#x4E8C;&#x8FDB;&#x5236;&#x65B9;&#x5F0F;&#x66F4;&#x53EF;&#x9760;&#xFF0C;&#x89E3;&#x9664;&#x4E86;&#x5E73;&#x884C;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x6027;&#x3002; &#x5728;aCoder.encode(_: forKey:)&#x5185;&#x4F1A;&#x521B;&#x5EFA;key&#xFF0C;&#x518D;&#x5BF9;key&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8C03;&#x7528;encode(with:) &#x5728;aDecoder.decodeObject(forKey:)&#x5185;&#x5219;&#x662F;&#x5148;&#x627E;&#x5230;key&#x7684;&#x6570;&#x636E;&#x5757;&#xFF0C;&#x518D;&#x5BF9;&#x5176;&#x540E;&#x7684;&#x6570;&#x636E;&#x8C03;&#x7528;init(coder:) 1.4 &#x89E6;&#x53D1;Archiving&#x7684;&#x6E90;&#x5934; &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E94;&#x8BE5;&#x5728;&#x5373;&#x5C06;&#x9000;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x9010;&#x4E2A;&#x8C03;&#x7528;allItems&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x7684;encode&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x600E;&#x4E48;&#x6784;&#x9020;NSCoder&#x7684;&#x5B9E;&#x4F8B;&#x5462;&#xFF1F;&#x4E66;&#x4E2D;&#x662F;&#x8FD9;&#x4E48;&#x89E3;&#x51B3;&#x7684;&#xFF1A; 12345678910111213class ItemStore { &#x2026;&#x2026; func saveChanges() -&gt;Bool{ &#x2026;&#x2026; return NSKeyedArchiver.archiveRootObject(allItems, toFile: itemArchiveURL.path) } init(){ if let archivedItems = NSKeyedUnarchiver.unarchiveObject(withFile: itemArchiveURL.path) as?[Item]{ allItems = archivedItems } } &#x2026;&#x2026;} &#x5176;&#x4E2D;archiveRootObject(_:toFile:)&#x5B8C;&#x6210;&#x5982;&#x4E0B;&#x51E0;&#x6B65;&#xFF1A; - &#x521B;&#x5EFA;NSKeyedArchiver&#x5B9E;&#x4F8B;&#xFF0C;&#x5B83;&#x662F;&#x62BD;&#x8C61;&#x7C7B;NSCoder&#x7684;&#x5177;&#x4F53;&#x5B50;&#x7C7B; - &#x5BF9;allItems&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x7684;encode(with:)&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x4F20;&#x5165;NSKeyedArchiver&#x5B9E;&#x4F8B;&#x3002;&#x8FD9;&#x4F1A;&#x8FDB;&#x4E00;&#x6B65;&#x8C03;&#x7528;Item&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x7684;encode(with:)&#x65B9;&#x6CD5; - &#x6700;&#x7EC8;NSKeyedArchiver&#x4F1A;&#x628A;&#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x5199;&#x5165;&#x5230;&#x6307;&#x5B9A;&#x8DEF;&#x5F84;&#x7684;&#x6587;&#x4EF6; &#x4E66;&#x4E2D;&#x7ED9;&#x51FA;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x7684;&#x6D41;&#x7A0B;&#x56FE;&#xFF1A; &#x4E0D;&#x8FC7;&#x8FD9;&#x8FD8;&#x4E0D;&#x662F;&#x89E6;&#x53D1;Archiving&#x7684;&#x6700;&#x6E90;&#x5934;&#xFF0C;&#x524D;&#x9762;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x6700;&#x6E90;&#x5934;&#x5E94;&#x8BE5;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9000;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x3002;&#x5F53;&#x7528;&#x6237;&#x6309;&#x4E0B;Home&#x952E;&#xFF0C;&#x4F1A;&#x8BA9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9000;&#x5230;&#x540E;&#x53F0;&#xFF0C;&#x540C;&#x65F6;&#x5411;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;AppDelegate&#x53D1;&#x9001;applicationDidEnterBackground(_:)&#x6D88;&#x606F;&#x3002;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E94;&#x8BE5;&#x5728;&#x8FD9;&#x91CC;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x91CC;&#x6B63;&#x662F;&#x89E6;&#x53D1;Archiving&#x7684;&#x6700;&#x6E90;&#x5934;&#x3002; 123456func applicationDidEnterBackground(_ application: UIApplication) { let itemStore = ItemStore() &#x2026;&#x2026; itemStore.saveChanges() // &#x89E6;&#x53D1;Archiving &#x2026;&#x2026;} &#x4EE5;&#x4E0A;&#x662F;&#x6570;&#x636E;&#x7684;&#x4FDD;&#x5B58;&#x3002; &#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9996;&#x6B21;&#x542F;&#x52A8;&#xFF0C;&#x4F1A;&#x521B;&#x5EFA;ItemStore&#x5B9E;&#x4F8B;&#xFF0C;&#x5728;&#x5176;init()&#x51FD;&#x6570;&#x4E2D;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x7684;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0E;archiveRootObject(_:toFile:)&#x7684;&#x8FC7;&#x7A0B;&#x76F8;&#x53CD;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;NSKeyedUnarchiver&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x52A0;&#x8F7D;&#x4F20;&#x5165;&#x7684;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x3002;&#x7136;&#x540E;NSKeyedUnarchiver&#x4F1A;&#x68C0;&#x67E5;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x4E2D;&#x6839;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x521B;&#x5EFA;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x7136;&#x540E;&#x9010;&#x5C42;&#x8C03;&#x7528;&#x8BE5;&#x5B9E;&#x4F8B;&#x53CA;&#x5176;&#x5C5E;&#x6027;&#x7684;init(coder:)&#x51FD;&#x6570;&#xFF0C;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x7684;&#x52A0;&#x8F7D;&#x3002; 1.5 &#x6C99;&#x76D2;&#x7684;&#x7EDD;&#x5BF9;&#x76EE;&#x5F55;&#x5728;&#x54EA;&#x91CC;&#xFF1F; &#x6211;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x91CC;&#x8FD0;&#x884C;&#xFF0C;&#x5728;macOS&#x770B;&#x5230;&#x7684;&#x7EDD;&#x5BF9;&#x76EE;&#x5F55;&#x662F;&#xFF1A; /Users/palance/Library/Developer/CoreSimulator/Devices/D4DF6101-9001-438B-A8EE-1D952E45618D/data/Containers/Data/Application/57453221-D3C8-48FA-ACC2-358FED27A992/Documents/items.archive 57453221-D3C8-48FA-ACC2-358FED27A992&#x5C31;&#x662F;&#x6C99;&#x76D2;&#x76EE;&#x5F55;&#xFF0C;&#x5728;&#x5B83;&#x4E0B;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x5230;Library&#x3001;tmp&#x7B49;&#x6C99;&#x76D2;&#x76EE;&#x5F55;&#xFF0C;&#x7531;&#x6B64;&#x53EF;&#x89C1;iOS&#x662F;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x521B;&#x5EFA;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x76EE;&#x5F55;&#x4F53;&#x7CFB; &#x95EE;&#x9898;&#xFF1A;&#x5728;iOS&#x771F;&#x673A;&#x4E0A;&#xFF0C;&#x7EDD;&#x5BF9;&#x76EE;&#x5F55;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x5462;&#xFF1F;Documents/&#x524D;&#x7684;&#x90A3;&#x4E32;UUID&#x662F;&#x600E;&#x4E48;&#x751F;&#x6210;&#x7684;&#xFF1F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x91CD;&#x88C5;&#x4E86;&#x4F1A;&#x53D8;&#x5316;&#x5417;&#xFF1F; 1.6 &#x5982;&#x4F55;&#x4FDD;&#x5B58;&#x5982;&#x56FE;&#x7247;&#x8FD9;&#x6837;&#x7684;&#x5927;&#x5757;&#x6570;&#x636E; &#x51C6;&#x786E;&#x5730;&#x8BF4;&#x662F;&#x672C;&#x7AE0;&#x662F;&#x600E;&#x4E48;&#x505A;&#x7684;&#xFF0C;&#x5B83;&#x786E;&#x5B9E;&#x6CA1;&#x6709;&#x4F7F;&#x7528;Archiving&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x4F7F;&#x7528;Archiving&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x4ECB;&#x7ECD;&#x65B0;&#x65B9;&#x6CD5;&#x8FD8;&#x662F;&#x4E0D;&#x9002;&#x7528;&#xFF1F; &#x672C;&#x7AE0;&#x5728;ImageStore&#x4E2D;&#xFF0C;&#x4EE5;&#x56FE;&#x7247;&#x7684;key&#x4E3A;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5C06;&#x56FE;&#x7247;&#x4FDD;&#x5B58;&#x5230;Documents/&#x4E0B;&#x3002; &#x521B;&#x5EFA;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x65F6;&#x4FDD;&#x5B58;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#xFF1B;&#x5728;&#x5220;&#x9664;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x65F6;&#x5220;&#x9664;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#xFF1B;&#x5728;&#x83B7;&#x53D6;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x7F13;&#x5B58;&#x83B7;&#x53D6;&#x4E0D;&#x5230;&#x8981;&#x518D;&#x53BB;&#x770B;&#x770B;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445class ImageStore { let cache = NSCache&lt;NSString, UIImage&gt;() // &#x7F13;&#x5B58;&#x56FE;&#x7247;&#x65F6;&#x4FDD;&#x5B58;&#x56FE;&#x7247;&#x6587;&#x4EF6; func setImage(_ image: UIImage, forKey key: String){ cache.setObject(image, forKey: key as NSString) let url = imageURL(forKey: key) // &#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x538B;&#x7F29;&#x6BD4; if let data = UIImageJPEGRepresentation(image, 0.5){ // atomic&#x662F;&#x5148;&#x628A;&#x6587;&#x4EF6;&#x6682;&#x5B58;&#x5230;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF0C;&#x6210;&#x529F;&#x540E;&#x5728;&#x901A;&#x8FC7;rename&#x8986;&#x76D6; let _ = try?data.write(to: url, options: [.atomic]) } } // &#x83B7;&#x53D6;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x7F13;&#x5B58;&#x533A;&#x4E0D;&#x5230;&#xFF0C;&#x518D;&#x53BB;&#x770B;&#x770B;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728; func image(forKey key: String) -&gt; UIImage?{ if let existingImage = cache.object(forKey: key as NSString){ return existingImage } let url = imageURL(forKey: key) // &#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x7B2C;&#x4E00;&#x6B21;&#x9047;&#x5230;guard guard let imageFromDisk = UIImage(contentsOfFile: url.path) else{ return nil } cache.setObject(imageFromDisk, forKey: key as NSString) return imageFromDisk } // &#x5220;&#x9664;&#x7F13;&#x5B58;&#x65F6;&#xFF0C;&#x540C;&#x65F6;&#x5220;&#x9664;&#x6587;&#x4EF6; func deleteImage(forKey key: String){ cache.removeObject(forKey: key as NSString) let url = imageURL(forKey: key) FileManager.default.removeItem(at: url) } // &#x6839;&#x636E;key&#x83B7;&#x53D6;&#x6587;&#x4EF6;url func imageURL(forKey key: String) -&gt;URL{ let documentsDirectories = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask) let documentDirectory = documentsDirectories.first! return documentDirectory.appendingPathComponent(key) }} &#x5173;&#x952E;&#x5B57;guard&#x7684;&#x7528;&#x6CD5;&#xFF0C;P489&#x8BF4;&#xFF1A;guard&#x662F;&#x4E00;&#x4E2A;&#x6761;&#x4EF6;&#x5224;&#x65AD;&#x8BED;&#x53E5;&#xFF0C;&#x7B49;&#x6548;&#x4E8E;if&#x3002;&#x5982;&#x679C;guard&#x5185;&#x7684;&#x6761;&#x4EF6;&#x4E3A;&#x771F;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x53EA;&#x7EE7;&#x7EED;guard&#x5185;&#x7684;&#x8BED;&#x53E5;&#x3002;&#x4E0A;&#x9762;&#x7684;guard&#x8BED;&#x53E5;&#x7B49;&#x6548;&#x4E8E;&#xFF1A; 12345if let imageFromDisk = UIImage(contentsOfFile: url.path) { cache.setObject(imageFromDisk, forKey: key) return imageFromDisk}return nil &#x4E66;&#x4E2D;&#x8BF4;&#xFF1A;guard&#x8BED;&#x53E5;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#x5B83;&#x4EE5;&#x66F4;&#x5B89;&#x5168;&#x7684;&#x65B9;&#x5F0F;&#x786E;&#x4FDD;&#x9000;&#x51FA;&#x3002;&#x4F46;&#x600E;&#x4E48;&#x6E05;&#x6670;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5B89;&#x5168;&#x5462;&#xFF1F; guard&#x8BED;&#x53E5;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;if-let&#x6765;&#x66FF;&#x4EE3;&#xFF0C;&#x4F53;&#x4F1A;&#x4E00;&#x4E0B;&#x4E0A;&#x9762;&#x7B49;&#x4EF7;&#x7684;&#x4E24;&#x5768;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x5B9E;guard&#x8BED;&#x53E5;&#x5E94;&#x8BE5;&#x53EB;guard let else&#x66F4;&#x51C6;&#x786E;&#xFF0C;&#x5B83;&#x628A;&#x5728;if-let&#x4E2D;&#x8981;&#x653E;&#x5230;&#x62EC;&#x53F7;&#x91CC;&#x7684;&#x4EE3;&#x7801;&#x653E;&#x5230;&#x4E86;guard let else&#x4E4B;&#x5916;&#xFF0C;&#x8BA9;&#x9519;&#x8BEF;&#x60C5;&#x51B5;&#x5C3D;&#x65E9;&#x8FD4;&#x56DE;&#xFF0C;&#x8BA9;&#x4E3B;&#x5E72;&#x4EE3;&#x7801;&#x5C11;&#x4E86;&#x4E00;&#x5C42;&#x7F29;&#x8FDB;&#x3002; &#x4F46;&#x662F;&#x6211;&#x8FD8;&#x662F;&#x89C9;&#x5F97;&#x8FD9;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;if let else&#x6765;&#x66FF;&#x4EE3;&#xFF0C;&#x6CA1;&#x6709;&#x4F53;&#x4F1A;&#x5230;guard&#x7684;&#x5341;&#x5206;&#x5FC5;&#x8981;&#x6027;:P &#x4F5C;&#x4E3A;&#x4E00;&#x95E8;&#x8BED;&#x8A00;&#x5E94;&#x8BE5;&#x8FFD;&#x6C42;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5C0F;&#x5316; 2 &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6C99;&#x76D2; 2.1 &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6C99;&#x76D2;&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#xFF0C;&#x4EC0;&#x4E48;&#x4F5C;&#x7528; Documents/&#x3000;&#x7528;&#x4E8E;&#x4FDD;&#x5B58;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x4EA7;&#x751F;&#x6216;&#x9700;&#x8981;&#x7684;&#x6570;&#x636E;&#x3002;&#x5F53;&#x8BBE;&#x5907;&#x4E0E;iTunes&#x6216;iCloud&#x540C;&#x6B65;&#x65F6;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x6570;&#x636E;&#x4F1A;&#x88AB;&#x5907;&#x4EFD;&#x3002; Library/Caches/&#x3000;&#x7528;&#x4E8E;&#x7F13;&#x5B58;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x4EA7;&#x751F;&#x6216;&#x9700;&#x8981;&#x7684;&#x4E34;&#x65F6;&#x6570;&#x636E;&#x3002;&#x5F53;&#x8BBE;&#x5907;&#x4E0E;iTunes&#x6216;iCloud&#x540C;&#x6B65;&#x65F6;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x6570;&#x636E;&#x4E0D;&#x4F1A;&#x88AB;&#x5907;&#x4EFD;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x7F13;&#x5B58;&#x7684;&#x7F51;&#x9875;&#x6570;&#x636E;&#x5C31;&#x53EF;&#x4EE5;&#x7F13;&#x5B58;&#x5230;&#x8FD9;&#x91CC;&#x3002; Library/Preferences/&#x3000;&#x7528;&#x4E8E;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x7684;&#x504F;&#x597D;&#x8BBE;&#x7F6E;&#xFF0C;&#x7CFB;&#x7EDF;&#x7684;&#x8BBE;&#x7F6E;&#x7A0B;&#x5E8F;&#x4E5F;&#x4F1A;&#x5230;&#x8FD9;&#x91CC;&#x67E5;&#x627E;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x504F;&#x597D;&#x8BBE;&#x7F6E;&#x3002;&#x9700;&#x8981;&#x901A;&#x8FC7;NSUserDefaults&#x7C7B;&#x6765;&#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x53C2;&#x4E0E;iTunes&#x6216;iCloude&#x7684;&#x540C;&#x6B65;&#x3002; tmp/&#x3000;&#x7528;&#x4E8E;&#x6682;&#x5B58;&#x6570;&#x636E;&#x3002;&#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0D;&#x518D;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4F1A;&#x6E05;&#x9664;&#x4E0E;&#x4E4B;&#x76F8;&#x5173;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5EFA;&#x8BAE;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x4E0D;&#x9700;&#x8981;&#x65F6;&#x5C31;&#x6E05;&#x9664;&#x6389;&#x6570;&#x636E;&#x3002;&#x8BE5;&#x76EE;&#x5F55;&#x4E0D;&#x53C2;&#x4E0E;iTunes&#x6216;iCloud&#x7684;&#x540C;&#x6B65;&#x3002; 2.2 &#x5982;&#x4F55;&#x83B7;&#x53D6;&#x6C99;&#x76D2;&#x76EE;&#x5F55; &#x901A;&#x8FC7;FileManager&#x6765;&#x6784;&#x9020;&#x6587;&#x4EF6;URL&#xFF0C;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x8FD4;&#x56DE;Documents/items.archive 123456&#x2026;&#x2026;let documentsDirectories = FileManager.default.urls( for: .documentDirectory, in: .userDomainMask)let documentDirectory = documentsDirectories.first!return documentDirectory.appendingPathComponent(&quot;items.archive&quot;) &#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x51FD;&#x6570;urls(for:in:)&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#x503C;&#xFF0C;&#x8868;&#x793A;&#x6C99;&#x76D2;&#x8DEF;&#x5F84;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x5728;iOS&#x4E0B;&#x59CB;&#x7EC8;&#x672A;.userDomainMask&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E0E;macOS&#x516C;&#x7528;&#x7684;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x662F;&#x4E3A;&#x4E86;&#x517C;&#x5BB9;macOS&#x7248;&#x672C;&#x3002; 3 &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;AppDelegate&#x7684;&#x51E0;&#x4E2A;&#x51FD;&#x6570; 3.1 Xcode&#x751F;&#x6210;&#x7684;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x6CE8;&#x91CA;&#x8BF4;&#x660E; Xcode&#x4E3A;AppDelegate&#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x4E86;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x7ED9;&#x51FA;&#x4E86;&#x6BD4;&#x8F83;&#x8BE6;&#x7EC6;&#x7684;&#x6CE8;&#x91CA;&#xFF0C;&#x5E94;&#x8BE5;&#x597D;&#x597D;&#x9605;&#x8BFB;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041@UIApplicationMain // &#x8FD9;&#x4E2A;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;class AppDelegate: UIResponder, UIApplicationDelegate {&#x2026;&#x2026; func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&gt; Bool { // &#x8FD9;&#x91CC;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x903B;&#x8F91;&#x7684;&#x8D77;&#x70B9; &#x2026;&#x2026; return true } func applicationWillResignActive(_ application: UIApplication) { // &#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5373;&#x5C06;&#x4ECE;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#x53D8;&#x4E3A;&#x4E0D;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#x65F6;&#xFF0C;&#x4F1A;&#x6536;&#x5230;&#x6B64;&#x6D88;&#x606F;&#x3002;&#x53D1;&#x751F;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x901A;&#x5E38;&#x56E0;&#x4E3A; // &#x67D0;&#x4E9B;&#x4E34;&#x65F6;&#x4E2D;&#x65AD;&#xFF08;&#x6BD4;&#x5982;&#x6765;&#x7535;&#x6216;&#x8005;SMS&#x6D88;&#x606F;&#xFF09;&#x6216;&#x7528;&#x6237;&#x9000;&#x51FA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x8F6C;&#x5411;&#x540E;&#x53F0;&#x65F6;&#x3002; // &#x53EF;&#x4EE5;&#x5728;&#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x6682;&#x505C;&#x6B63;&#x5728;&#x8FDB;&#x884C;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5173;&#x95ED;&#x5B9A;&#x65F6;&#x5668;&#xFF0C;&#x8BA9;&#x56FE;&#x5F62;&#x6E32;&#x67D3;&#x56DE;&#x8C03;&#x5931;&#x6548;&#x3002; // &#x6E38;&#x620F;&#x5E94;&#x7528;&#x5E94;&#x8BE5;&#x5728;&#x8FD9;&#x91CC;&#x6682;&#x505C;&#x6E38;&#x620F;&#x3002; &#x2026;&#x2026; } func applicationDidEnterBackground(_ application: UIApplication) { // &#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#x91CA;&#x653E;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#xFF0C;&#x4FDD;&#x5B58;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x5173;&#x95ED;&#x5B9A;&#x65F6;&#x5668;&#xFF0C;&#x4FDD;&#x5B58;&#x6240;&#x6709;&#x6570;&#x636E;&#x4EE5;&#x786E;&#x4FDD;&#x5982;&#x679C;&#x5E94; // &#x7528;&#x7A0B;&#x5E8F;&#x88AB;&#x7EC8;&#x6B62;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x8BFB;&#x53D6;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x5C31;&#x80FD;&#x8FD8;&#x539F;&#x5F53;&#x524D;&#x7684;&#x73B0;&#x573A;&#x3002;&#x5982;&#x679C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x652F;&#x6301;&#x540E;&#x53F0;&#x8FD0;&#x884C;&#xFF0C; // &#x5F53;&#x7528;&#x6237;&#x9000;&#x51FA;&#x5E94;&#x7528;&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x672C;&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x4E0D;&#x662F;applicationWillTerminate: &#x2026;&#x2026; } func applicationWillEnterForeground(_ application: UIApplication) { // &#x5F53;&#x5E94;&#x7528;&#x4ECE;&#x540E;&#x53F0;&#x8F6C;&#x5165;&#x524D;&#x53F0;&#x65F6;&#x4F1A;&#x8C03;&#x7528;&#x8BE5;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x64A4;&#x9500;&#x8FDB;&#x5165;&#x540E;&#x53F0;&#x65F6;&#x505A;&#x7684;&#x8BB8;&#x591A;&#x66F4;&#x6539; &#x2026;&#x2026; } func applicationDidBecomeActive(_ application: UIApplication) { // &#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x91CD;&#x65B0;&#x542F;&#x52A8;&#x5E94;&#x7528;&#x5904;&#x4E8E;inactive&#x65F6;&#x6682;&#x505C;&#xFF08;&#x6216;&#x5C1A;&#x672A;&#x542F;&#x52A8;&#xFF09;&#x7684;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x3002; // &#x5982;&#x679C;&#x4E4B;&#x524D;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5904;&#x4E8E;&#x540E;&#x53F0;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x6027;&#x5730;&#x5237;&#x65B0;&#x7528;&#x6237;&#x754C;&#x9762; &#x2026;&#x2026; } func applicationWillTerminate(_ application: UIApplication) { // &#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5373;&#x5C06;&#x7EC8;&#x6B62;&#x65F6;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x7684;&#x8BDD;&#x5E94;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x3002;&#x53C2;&#x89C1;applicationDidEnterBackground: &#x2026;&#x2026; }} 3.2 &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x548C;&#x8FC1;&#x79FB;&#x56FE; &#x524D;&#x9762;&#x7684;&#x6CE8;&#x91CA;&#x53EF;&#x4EE5;&#x7ED3;&#x5408;&#x8FD9;&#x5F20;&#x56FE;&#x6765;&#x770B; &#x8FD9;&#x5F20;&#x56FE;&#x6709;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x6F0F;&#x6D1E;&#xFF1A;Background&#x5982;&#x679C;&#x6CA1;&#x8D85;&#x8FC7;10&#x79D2;&#x949F;&#xFF0C;&#x518D;&#x70B9;&#x51FB;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x56FE;&#x8868;&#x662F;&#x8FDB;&#x5165;&#x54EA;&#x4E2A;&#x903B;&#x8F91;&#x5206;&#x652F;&#x5462;&#xFF1F; Active&#x6001;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x4E34;&#x65F6;&#x6253;&#x65AD;&#xFF0C;&#x6BD4;&#x5982;&#x6765;&#x7535;&#x3001;SMS&#x6D88;&#x606F;&#x7B49;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5E94;&#x7528;&#x5C06;&#x8FDB;&#x5165;Inactive&#x6001;&#xFF0C;&#x6B64;&#x65F6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x754C;&#x9762;&#x4F1A;&#x88AB;&#x8986;&#x76D6;&#xFF0C;&#x4F46;&#x6709;&#x53EF;&#x80FD;&#x8FD8;&#x662F;&#x53EF;&#x89C1;&#x7684;&#xFF0C;&#x6B64;&#x65F6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4ECD;&#x53EF;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x4E0D;&#x518D;&#x63A5;&#x53D7;&#x4E8B;&#x4EF6;&#x4E86;&#x3002;&#x6309;&#x4E0B;&#x9876;&#x7AEF;&#x7684;Lock&#x6309;&#x94AE;&#x4E5F;&#x4F1A;&#x8BA9;&#x5E94;&#x7528;&#x5904;&#x4E8E;Inactive&#x6001;&#xFF0C;&#x5982;&#x679C;&#x518D;unlock&#xFF0C;&#x5E94;&#x7528;&#x4ECD;&#x7136;&#x4FDD;&#x6301;Inative&#x6001;&#x3002; &#x5728;Suspended&#x6001;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x5F53;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x5403;&#x7D27;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x4E0D;&#x7ECF;&#x901A;&#x77E5;&#xFF0C;&#x76F4;&#x63A5;&#x6E05;&#x9664;&#x6389;&#x3002;&#x5E94;&#x7528;&#x88AB;&#x6E05;&#x9664;&#x6389;&#x540E;&#xFF0C;&#x4ECD;&#x7136;&#x4F1A;&#x7559;&#x5728;&#x53CC;&#x51FB;Home&#x952E;&#x770B;&#x5230;&#x7684;&#x4EFB;&#x52A1;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x70B9;&#x51FB;&#x540E;&#xFF0C;&#x5E94;&#x7528;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x542F;&#x52A8;&#x3002; 4 &#x9519;&#x8BEF;&#x5904;&#x7406;Error Handling 4.1 &#x600E;&#x4E48;&#x629B;&#x51FA;&#x9519;&#x8BEF; &#x5728;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x7F00;&#x4E0A;&#x5173;&#x952E;&#x5B57;throws&#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x51FD;&#x6570;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA;&#x9519;&#x8BEF;&#xFF1A; 1func removeItem(at URL: URL) throws 4.2 &#x600E;&#x4E48;&#x8C03;&#x7528;&#x629B;&#x51FA;&#x9519;&#x8BEF;&#x7684;&#x51FD;&#x6570; 123456789func deleteImage(forKey key: String) { cache.removeObject(forKey: key as NSString) let url = imageURL(forKey: key) do { try FileManager.default.removeItem(at: url) } catch { print(&quot;Error removing the image from disk: \(error)&quot;) }} &#x5982;&#x679C;try&#x5185;&#x7684;&#x51FD;&#x6570;&#x629B;&#x51FA;&#x4E86;&#x9519;&#x8BEF;&#xFF0C;do&#x5757;&#x7ACB;&#x5373;&#x9000;&#x51FA;&#xFF0C;&#x540C;&#x65F6;&#x5411;catch&#x5757;&#x4F20;&#x5165;&#x4E00;&#x4E2A;error&#x53D8;&#x91CF;&#x3002;&#x4EE5;&#x4E0A;&#x4F7F;&#x7528;&#x4E86;&#x9690;&#x5F0F;&#x5E38;&#x91CF;error&#x6253;&#x5370;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002;&#x8FD8;&#x53EF;&#x4EE5;&#x663E;&#x5F0F;&#x5B9A;&#x4E49;&#x9519;&#x8BEF;&#x53D8;&#x91CF;&#xFF1A; 12345678910func deleteImage(forKey key: String){ cache.removeObject(forKey: key as NSString) let url = imageURL(forKey: key) do{ try FileManager.default.removeItem(at: url) }catch let deleteError{ print(&quot;Error removing the image from disk: \(deleteError)&quot;) }} 4.3 &#x600E;&#x4E48;&#x5904;&#x7406;&#x9519;&#x8BEF; &#x6CE8;&#x610F;&#xFF08;P500&#xFF09;&#xFF1A;&#x5728;&#x8BB8;&#x591A;&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x4EFB;&#x4F55;&#x9884;&#x671F;&#x5916;&#x7684;&#x7ED3;&#x679C;&#x90FD;&#x4F1A;&#x629B;&#x5F02;&#x5E38;&#x3002;&#x5728;Swift&#x4E2D;&#xFF0C;&#x5F02;&#x5E38;&#x53EA;&#x662F;&#x7528;&#x6765;&#x63D0;&#x9192;&#x7A0B;&#x5E8F;&#x5458;&#x8FD9;&#x91CC;&#x51FA;&#x9519;&#x4E86;&#x3002;NSException&#x7528;&#x6765;&#x8868;&#x793A;&#x5F02;&#x5E38;&#x4FE1;&#x606F;&#xFF0C;&#x8C03;&#x7528;&#x6808;&#x4FE1;&#x606F;&#x4E5F;&#x5305;&#x542B;&#x5728;NSException&#x4E2D;&#x3002; &#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x629B;&#x51FA;&#x9519;&#x8BEF;&#x5462;&#xFF1F;&#x6BD4;&#x5982;&#x5199;&#x4E00;&#x4E2A;&#x53EA;&#x80FD;&#x63A5;&#x6536;&#x5076;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4F20;&#x5165;&#x4E86;&#x5947;&#x6570;&#xFF0C;&#x4F60;&#x5E0C;&#x671B;&#x5E2E;&#x4E3B;&#x7A0B;&#x5E8F;&#x5458;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x5E94;&#x8BE5;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5199;&#x7684;&#x51FD;&#x6570;&#x9700;&#x8981;&#x8BFB;&#x53D6;&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4F46;&#x662F;&#x7528;&#x6237;&#x6CA1;&#x6709;&#x8BE5;&#x6743;&#x9650;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x5E94;&#x8BE5;&#x629B;&#x51FA;&#x9519;&#x8BEF;&#xFF0C;&#x63D0;&#x793A;&#x7528;&#x6237;&#x4F60;&#x65E0;&#x6CD5;&#x5B8C;&#x6210;&#x8FD9;&#x9879;&#x4EFB;&#x52A1;&#x3002; 5 Application Bundle 5.1 &#x4EC0;&#x4E48;&#x662F;Application Bundle Application Bundle&#x5C31;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x6240;&#x9700;&#x8981;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x548C;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x6253;&#x5305;&#x800C;&#x6210;&#x7684;&#x96C6;&#x5408;&#x3002; 5.2 &#x600E;&#x4E48;&#x6307;&#x5B9A;&#x88AB;&#x6253;&#x5165;Application Bundle&#x7684;&#x6587;&#x4EF6; &#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x67E5;&#x770B;&#x548C;&#x6DFB;&#x52A0;&#xFF1A; ## 5.3 &#x600E;&#x4E48;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x83B7;&#x53D6;Application Bundle&#x8DEF;&#x5F84;&#xFF1F; 1234// &#x83B7;&#x53D6; application bundlelet applicationBundle = Bundle.main// &#x83B7;&#x53D6;Application Bundle&#x4E0B;&#x7684;myImage.png&#x6587;&#x4EF6;&#x7684;URLurl = applicationBundle.url(forResource: &quot;myImage&quot;, ofType: &quot;png&quot;) &#x5207;&#x8BB0;&#xFF1A;Application bundle&#x662F;&#x53EA;&#x8BFB;&#x7684;&#xFF0C;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x65E2;&#x4E0D;&#x80FD;&#x4FEE;&#x6539;&#x4E5F;&#x4E0D;&#x80FD;&#x52A8;&#x6001;&#x6DFB;&#x52A0;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十五]]></title>
    <url>%2F2017%2F08%2F03%2F2017%2F0803iOSProgrammingBNRG15%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5728;&#x8BE6;&#x60C5;&#x754C;&#x9762;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x9009;&#x62E9;&#x7167;&#x7247;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5F15;&#x5165;&#x4E86;UIImageView&#xFF1A; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - UIImageView 1 UIImageView 1.1 &#x600E;&#x4E48;&#x63A7;&#x5236;UIImageView&#x663E;&#x793A;&#x56FE;&#x7247;&#x7684;&#x7F29;&#x653E;&#x65B9;&#x5F0F; &#x6839;&#x636E;contentMode&#x5C5E;&#x6027;&#xFF1A; table th:nth-of-type(1){ width: 80px; } table th:nth-of-type(2){ width: 300px; } contentMode &#x542B;&#x4E49; scaleToFill &#x7F29;&#x653E;&#x56FE;&#x7247;&#x4F7F;&#x4E4B;&#x5145;&#x6EE1;&#x5BB9;&#x5668;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x56FE;&#x7247;&#x53D8;&#x5F62; AspectFill &#x4FDD;&#x6301;&#x56FE;&#x7247;&#x5BBD;&#x9AD8;&#x6BD4;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x7F29;&#x653E;&#x56FE;&#x7247;&#xFF0C;&#x4F7F;&#x4E4B;&#x5145;&#x6EE1;&#x5BB9;&#x5668; Aspect Fit &#x4FDD;&#x6301;&#x56FE;&#x7247;&#x5BBD;&#x9AD8;&#x6BD4;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x7F29;&#x653E;&#x56FE;&#x7247;&#xFF0C;&#x4F7F;&#x56FE;&#x7247;&#x5728;&#x5BB9;&#x5668;&#x5185;&#x5B8C;&#x6574;&#x663E;&#x793A;&#x51FA;&#x6765; Aspect &#x4FDD;&#x6301;&#x56FE;&#x7247;&#x7684;&#x5BBD;&#x9AD8;&#x6BD4; 1.2 UIToolBar&#x7684;&#x7279;&#x70B9; &#x672C;&#x7AE0;&#x4F7F;&#x7528;UIToolBar&#x6765;&#x5C55;&#x73B0;&#x5DE6;&#x4E0B;&#x89D2;&#x7684;&#x76F8;&#x673A;&#x56FE;&#x6807;&#xFF0C;UIToolBar&#x548C;UINavigationBar&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#x5728;&#x5B83;&#x4E0A;&#x9762;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x591A;&#x4E2A;&#x6309;&#x94AE;&#x9879;&#xFF0C;&#x53EA;&#x8981;&#x5C4F;&#x5E55;&#x653E;&#x5F97;&#x4E0B;&#x3002; 1.3 &#x9009;&#x53D6;&#x7167;&#x7247;&#x90FD;&#x6709;&#x54EA;&#x51E0;&#x79CD;&#x5F62;&#x5F0F; &#x7CFB;&#x7EDF;&#x7684;&#x76F8;&#x673A;&#x548C;&#x9009;&#x53D6;&#x7167;&#x7247;&#x7684;&#x754C;&#x9762;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;UIImagePickerController&#xFF0C;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x8BE5;&#x63A7;&#x4EF6;&#x7684;sourceType&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x5177;&#x4F53;&#x4F7F;&#x7528;&#x54EA;&#x4E00;&#x4E2A;: sourceType &#x542B;&#x4E49; camera &#x8C03;&#x8D77;&#x62CD;&#x7167;&#x754C;&#x9762;&#xFF0C;&#x62CD;&#x6444;&#x65B0;&#x7167;&#x7247; photoLibrary &#x63D0;&#x793A;&#x7528;&#x6237;&#x4ECE;&#x76F8;&#x518C;&#x91CC;&#x9009;&#x53D6;&#x7167;&#x7247; savedPhotosAlbum &#x63D0;&#x793A;&#x7528;&#x6237;&#x4ECE;&#x6700;&#x8FD1;&#x7684;&#x62CD;&#x6444;&#x91CC;&#x9009;&#x53D6;&#x7167;&#x7247; 1.4 &#x600E;&#x6837;&#x547C;&#x51FA;&#x7CFB;&#x7EDF;&#x76F8;&#x673A;&#x548C;&#x7167;&#x7247;&#x754C;&#x9762; &#x5224;&#x65AD;&#x8BBE;&#x5907;&#x662F;&#x5426;&#x6709;&#x62CD;&#x7167;&#x529F;&#x80FD;&#xFF0C;&#x8BBE;&#x7F6E;&#x9009;&#x53D6;&#x7167;&#x7247;&#x7684;&#x5F62;&#x5F0F; &#x4E3A;UIImagePickerController&#x53D8;&#x91CF;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x59D4;&#x6258;&#x4EE3;&#x7406;&#x3002; &#x5F53;&#x7528;&#x6237;&#x9009;&#x62E9;&#x4E86;&#x7167;&#x7247;&#xFF0C;&#x4F1A;&#x5411;&#x4EE3;&#x7406;&#x53D1;&#x9001;imagePickerController(_:didFinishPickingMediaWithInfo:)&#x6D88;&#x606F;&#x3002; &#x5982;&#x679C;&#x7528;&#x6237;&#x9009;&#x62E9;&#x53D6;&#x6D88;&#xFF0C;&#x5219;&#x4F1A;&#x5411;&#x4EE3;&#x7406;&#x53D1;&#x9001;imagePickerControllerDidCancel(_:)&#x6D88;&#x606F;&#x3002; &#x663E;&#x7136;&#x8FD9;&#x4E2A;&#x4EE3;&#x7406;&#x8FD8;&#x662F;&#x5E94;&#x5F53;&#x7531;UIImagePickerController&#x6240;&#x5728;&#x7684;VC&#xFF0C;&#x5728;&#x672C;&#x7AE0;&#x4E2D;&#x5373;DetailViewController&#x3002; &#x4F46;&#x662F;&#x5728;&#x4E66;&#x4E2D;&#x6B64;&#x5904;&#x8BA9;DetailViewController&#x9075;&#x5B88;&#x4E86;&#x4EE3;&#x7406;&#x534F;&#x8BAE;&#xFF1A;UINavigationControllerDelegate &#x548C;UIImagePickerControllerDelegate&#x3002;&#x4E66;&#x4E2D;&#x7684;&#x89E3;&#x91CA;&#x662F;&#xFF1A;UIImagePickerController&#x7684;&#x4EE3;&#x7406;&#x5C5E;&#x6027;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4ECE;&#x5B83;&#x7684;&#x57FA;&#x7C7B;UINavigationController&#x7EE7;&#x627F;&#x7684;&#xFF0C;UIImagePickerController&#x6709;&#x5B83;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7406;&#x534F;&#x8BAE;&#xFF0C;&#x5B83;&#x7EE7;&#x627F;&#x6765;&#x7684;&#x4EE3;&#x7406;&#x5C5E;&#x6027;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x9075;&#x5B88;UINavigationControllerDelegate&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x8FD9;&#x53E5;&#x8BDD;&#x6CA1;&#x770B;&#x61C2;&#xFF08;P441&#xFF09; &#x8C03;&#x7528;present&#x51FD;&#x6570;&#xFF0C;&#x663E;&#x793A;&#x9009;&#x53D6;&#x56FE;&#x7247;&#x7684;&#x754C;&#x9762;&#x3002; &#x5728;&#x9879;&#x76EE;&#x5C5E;&#x6027;&#x4E2D;&#x58F0;&#x660E;Custom iOS Target Properties&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x4F1A;&#x5D29;&#x6E83;&#xFF0C;&#x56E0;&#x4E3A;&#x8BBF;&#x95EE;&#x76F8;&#x673A;&#x6216;&#x8005;&#x76F8;&#x518C;&#x65F6;&#xFF0C;iOS&#x4F1A;&#x5F39;&#x51FA;&#x63D0;&#x793A;&#x95EE;&#x7528;&#x6237;&#x662F;&#x5426;&#x540C;&#x610F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x83B7;&#x53D6;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x3002;&#x9700;&#x8981;&#x5728;&#x9879;&#x76EE;&#x914D;&#x7F6E;&#x4E2D;&#x586B;&#x5199;&#x7533;&#x8BF7;&#x8BBF;&#x95EE;&#x76F8;&#x673A;/&#x76F8;&#x518C;&#x7684;&#x63D0;&#x793A;&#x8BED;&#x3002; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718// &#x2461; &#x8BA9;VC&#x9075;&#x5FAA;&#x59D4;&#x6258;&#x4EE3;&#x7406;&#x534F;&#x8BAE;class DetailViewController: UIViewController, UITextFieldDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate { &#x2026;&#x2026; @IBAction func takePicture(_ sender: UIBarButtonItem) { let imagePicker = UIImagePickerController() // &#x2460; &#x5224;&#x65AD;&#x8BBE;&#x5907;&#x662F;&#x5426;&#x6709;&#x62CD;&#x6444;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x9009;&#x53D6;&#x7167;&#x7247;&#x7684;&#x5F62;&#x5F0F; if UIImagePickerController.isSourceTypeAvailable(.camera){ imagePicker.sourceType = .camera }else{ imagePicker.sourceType = .photoLibrary } imagePicker.delegate = self // &#x2461;&#x8BBE;&#x7F6E;&#x59D4;&#x6258;&#x4EE3;&#x7406; // &#x2462; &#x663E;&#x793A;&#x9009;&#x53D6;&#x7167;&#x7247;&#x754C;&#x9762; present(imagePicker, animated: true, completion: nil) } &#x2026;&#x2026;} &#x2463; &#x8BBE;&#x7F6E;&#x9879;&#x76EE;&#x7684;&#x6743;&#x9650;&#x7533;&#x8BF7;&#x63D0;&#x793A;&#x8BED; &#x95EE;&#x9898;&#xFF1A;&#x5F53;&#x8C03;&#x7528;&#x4E86;present&#x4E4B;&#x540E;&#xFF0C;&#x63A7;&#x5236;&#x6743;&#x5728;&#x54EA;&#x91CC;&#xFF1F;&#x6839;&#x636E;&#x5982;&#x4F55;&#x83B7;&#x5F97;&#x7167;&#x7247;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x5224;&#x65AD;present&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x4E86;&#xFF0C;&#x8FD4;&#x56DE;&#x7ED9;&#x8C01;&#x4E86;&#x5462;&#xFF1F; 1.5 &#x5982;&#x4F55;&#x83B7;&#x5F97;/&#x4FDD;&#x5B58;&#x7167;&#x7247; &#x5E38;&#x89C4;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#x5728;present&#x8C03;&#x7528;&#x4E4B;&#x540E;&#x83B7;&#x53D6;imagePicker&#x7684;&#x56FE;&#x7247;&#x5C5E;&#x6027;&#xFF0C;&#x5F97;&#x5230;&#x7167;&#x7247;&#x3002;&#x5B9E;&#x9645;&#x4E0D;&#x662F;&#x8FD9;&#x4E48;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x4EE3;&#x7406;&#x534F;&#x8BAE;UIImagePickerControllerDelegate&#x7684;imagePickerController(_:didFinishPickingMediaWithInfo:)&#x51FD;&#x6570;&#x4E2D;&#x83B7;&#x53D6;&#x7167;&#x7247;&#xFF1A; 1234567func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) { // &#x83B7;&#x53D6;&#x88AB;&#x9009;&#x4E2D;&#x7684;&#x7167;&#x7247; let image = info[UIImagePickerControllerOriginalImage] as! UIImage imageView.image = image dismiss(animated: true, completion: nil)} &#x4E66;&#x4E2D;P448 123func setImage(_ image: UIImage, forKey key: String) { cache.setObject(image, forKey: key as NSString) // &#x4E3A;&#x4EC0;&#x4E48;&#x8F6C;&#x6362;&#x5462;&#xFF1F;} key&#x5728;setImage&#x51FD;&#x6570;&#x4F20;&#x5165;&#x7684;&#x65F6;&#x5019;&#x662F;String&#xFF0C;&#x518D;&#x4F20;&#x5165;caceh.setObjet&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x7684;&#x662F;NSString&#x53C2;&#x6570;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x505A;&#x4E2A;&#x8F6C;&#x6362;&#x3002;NSString&#x662F;class&#xFF0C;String&#x662F;Struct&#x3002; 2 &#x5F15;&#x5165;imageStore 2.1 &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5F15;&#x5165;imageStore &#x7528;&#x6237;&#x9009;&#x62E9;&#x7684;&#x7167;&#x7247;&#x901A;&#x5E38;&#x662F;&#x8F83;&#x5927;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x90FD;&#x5B58;&#x5165;item&#x7ED3;&#x6784;&#x4F53;&#x5185;&#x4F1A;&#x6D88;&#x8017;&#x5DE8;&#x5927;&#x7684;&#x5185;&#x5B58;&#x3002;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x628A;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5230;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x53EA;&#x7F13;&#x5B58;&#x4E00;&#x5C0F;&#x90E8;&#x5206;&#xFF0C;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x52A0;&#x8F7D;&#x5230;&#x7F13;&#x5B58;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6216;&#x8005;&#x6536;&#x5230;&#x4F4E;&#x5185;&#x5B58;&#x8B66;&#x544A;&#x7684;&#x65F6;&#x5019;&#x91CA;&#x653E;&#x5185;&#x5B58;&#x3002;&#x8FD9;&#x5C31;&#x662F;imageStore&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x5B83;&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x751F;&#x6210;&#x4E00;&#x4E2A;UUID&#xFF0C;&#x5728;item&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x4EC5;&#x4FDD;&#x5B58;&#x6B64;UUID&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x7247;&#x5C06;&#x88AB;&#x6C38;&#x4E45;&#x4FDD;&#x5B58;&#x5230;&#x6587;&#x4EF6;&#x3002; 2.2 &#x5F15;&#x5165;imageStore&#x7684;&#x6B65;&#x9AA4; &#x4E00;&#x3001;&#x521B;&#x5EFA;ImageStore&#xFF0C;&#x7528;&#x4E8E;&#x6839;&#x636E;key&#x5230;&#x56FE;&#x7247;&#x7684;&#x589E;&#x3001;&#x5220;&#x3001;&#x6539;&#x3001;&#x67E5;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617import UIKitclass ImageStore { let cache = NSCache&lt;NSString, UIImage&gt;() func setImage(_ image: UIImage, forKey key: String){ cache.setObject(image, forKey: key as NSString) } func image(forKey key: String) -&gt; UIImage?{ return cache.object(forKey: key as NSString) } func deleteImage(forKey key: String){ cache.removeObject(forKey: key as NSString) }} &#x4E8C;&#x3001;&#x5728;AppDelegate&#x4E2D;&#x521B;&#x5EFA;ImageStore&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x5B9E;&#x4F8B;&#x4F20;&#x5165;ItemViewController&#x548C;DetailViewController 1234567891011121314151617181920212223242526272829303132333435363738class AppDelegate: UIResponder, UIApplicationDelegate { &#x2026;&#x2026; func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&gt; Bool { let itemStore = ItemStore() let imageStore = ImageStore() // &#x521B;&#x5EFA;ImageStore&#x5B9E;&#x4F8B; let navigationController = window!.rootViewController as! UINavigationController let itemsController = navigationController.topViewController as! ItemsViewController itemsController.itemStore = itemStore itemsController.imageStore = imageStore // &#x4F20;&#x5165;ItemViewController return true } &#x2026;&#x2026;}class ItemsViewController: UITableViewController { var itemStore: ItemStore! var imageStore: ImageStore! // &#x7528;&#x6765;&#x63A5;&#x6536;&#x4F20;&#x5165;&#x7684;ImageStore &#x2026;&#x2026; // &#x70B9;&#x51FB;&#x67D0;&#x4E2A;Item&#x5F15;&#x53D1;&#x8F6C;&#x573A; override func prepare(for segue: UIStoryboardSegue, sender: Any?) { switch segue.identifier { case &quot;showItem&quot;?: if let row = tableView.indexPathForSelectedRow?.row{ let item = itemStore.allItems[row] let detailViewController = segue.destination as! DetailViewController detailViewController.item = item // &#x5F53;&#x70B9;&#x51FB;&#x6570;&#x636E;&#x9879;&#x65F6;&#xFF0C;&#x4F20;&#x5165;imageStore detailViewController.imageStore = imageStore } default: preconditionFailure(&quot;Unexpected segue identifier.&quot;) } } &#x2026;&#x2026;} &#x4E09;&#x3001;&#x5728;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;Item&#x65F6;&#xFF0C;&#x751F;&#x6210;UUID&#xFF1A; 123456789101112class Item: NSObject { &#x2026;&#x2026; let itemKey: String // &#x4FDD;&#x5B58;UUID init(name: String, serialNumber: String?, valueInDollars: Int){ &#x2026;&#x2026; self.itemKey = UUID().uuidString super.init() } &#x2026;&#x2026;} &#x56DB;&#x3001;&#x5728;DetailViewController&#x4E2D;&#xFF0C;&#x52A0;&#x8F7D;&#x65F6;&#x6839;&#x636E;key&#x663E;&#x793A;&#x7167;&#x7247;&#xFF0C;&#x9009;&#x62E9;&#x4E86;&#x4E00;&#x5F20;&#x7167;&#x7247;&#x540E;&#x66F4;&#x65B0;key&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E; 123456789101112131415161718192021222324class DetailViewController: UIViewController, UITextFieldDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate {&#x2026;&#x2026; override func viewDidLoad() { super.viewDidLoad() &#x2026;&#x2026; // &#x52A0;&#x8F7D;&#x65F6;&#x663E;&#x793A;key&#x5BF9;&#x5E94;&#x7684;&#x56FE;&#x7247; let key = item.itemKey let imageToDisplay = imageStore.image(forKey: key) imageView.image = imageToDisplay } &#x2026;&#x2026; func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) { let image = info[UIImagePickerControllerOriginalImage] as! UIImage // &#x4FEE;&#x6539;&#x4E86;&#x56FE;&#x7247;&#xFF0C;&#x66F4;&#x65B0;imageStore imageStore.setImage(image, forKey: item.itemKey) imageView.image = image dismiss(animated: true, completion: nil) }&#x2026;&#x2026;} &#x4E94;&#x3001;&#x5220;&#x9664;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#x65F6;&#xFF0C;&#x8BB0;&#x5F97;&#x5220;&#x9664;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E; 123456789101112131415161718192021222324252627282930class ItemsViewController: UITableViewController {&#x2026;&#x2026; // Override to support editing the table view. override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) { if editingStyle == .delete { // Delete the row from the data source let item = itemStore.allItems[indexPath.row] let title = &quot;Delete \(item.name)?&quot; let message = &quot;Are you sure you want to delete this item?&quot; let ac = UIAlertController(title: title, message:message, preferredStyle:.actionSheet) let cancelAction = UIAlertAction(title: &quot;Cancel&quot;, style: .cancel, handler: nil) ac.addAction(cancelAction) let deleteAction = UIAlertAction(title: &quot;Delete&quot;, style: .destructive, handler: {(action) -&gt; Void in self.itemStore.removeItem(item) self.imageStore.deleteImage(forKey: item.itemKey) // &#x5220;&#x9664;&#x56FE;&#x7247;&#x6570;&#x636E; self.tableView.deleteRows(at: [indexPath], with: .automatic) }) ac.addAction(deleteAction) present(ac, animated: true, completion: nil) } else if editingStyle == .insert { // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view } }&#x2026;&#x2026;}]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十四]]></title>
    <url>%2F2017%2F08%2F02%2F2017%2F0802iOSProgrammingBNRG14%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;UINavigationController&#xFF0C;&#x5F53;&#x8FDB;&#x5165;&#x4E86;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x754C;&#x9762;&#x540E;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5BFC;&#x822A;&#x680F;&#x9000;&#x56DE;&#xFF0C;&#x5E76;&#x5728;&#x5BFC;&#x822A;&#x680F;&#x4E2D;&#x5C55;&#x793A;&#x5F53;&#x524D;&#x8DEF;&#x5F84;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - UINavigationController&#x7684;&#x7528;&#x6CD5; 1 UINavigationController 1.1 UINavigationController&#x7684;&#x7ED3;&#x6784;&#x5173;&#x7CFB; &#x8FD9;&#x5F20;&#x56FE;&#x6BD4;&#x8F83;&#x6E05;&#x6670;&#x5730;&#x63CF;&#x8FF0;&#x4E86;UINavigationController&#x548C;&#x5176;&#x5B50;&#x63A7;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x903B;&#x8F91;&#x5173;&#x7CFB;&#xFF1A; &#x5728;&#x521D;&#x59CB;&#x5316;UINavigationController&#x5B9E;&#x4F8B;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x4E3A;&#x4E4B;&#x4F20;&#x5165;&#x4E00;&#x4E2A;UIViewController&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;VC&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;UINavigationController&#x7684;&#x6839;VC&#xFF0C;&#x4EE5;&#x53CA;VC&#x6808;&#x7684;&#x6700;&#x5E95;&#x5C42;VC&#x3002;&#x4E4B;&#x540E;&#x4F1A;&#x6709;&#x66F4;&#x591A;VC&#x5806;&#x53E0;&#x5230;VC&#x6808;&#x9876;&#x6216;&#x8005;&#x4ECE;&#x6808;&#x9876;&#x79FB;&#x51FA;&#xFF0C;UINavigationController&#x7684;topViewController&#x603B;&#x662F;&#x6307;&#x5411;&#x6700;&#x9876;&#x5C42;VC&#x3002; &#x8FD9;&#x5F20;&#x56FE;&#x4ECE;&#x4E09;&#x5C42;&#x7ED3;&#x6784;&#x4E0A;&#x753B;&#x51FA;&#x4E86;&#x5404;&#x5C42;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF1A; ## 1.2 &#x600E;&#x4E48;&#x5F15;&#x5165;UINavigationController &#x9009;&#x4E2D;&#x8981;&#x4F5C;&#x4E3A;UINavigationController&#x7684;&#x6839;VC&#xFF0C;&#x70B9;&#x51FB;&#x83DC;&#x5355;Editor &gt; Embed In &gt; Navigation Controller &#x5373;&#x53EF;&#x5F15;&#x5165;&#xFF1A; &#x8BB0;&#x4F4F;&#x8FD9;&#x4E2A;&#x83DC;&#x5355;&#x9879;&#x91CC;&#x7684;&#x4E24;&#x4E2A;VC&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x7528;&#x6CD5;&#x4E4B;&#x524D;&#x90FD;&#x5B66;&#x4E60;&#x8FC7;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x8BA4;&#x4E3A;Xcode&#x7684;&#x8FD9;&#x79CD;&#x7EC4;&#x7EC7;&#x65B9;&#x5F0F;&#x4E0D;&#x597D;&#xFF0C;&#x7EDF;&#x4E00;&#x6027;&#x592A;&#x5DEE;&#x4E86;&#x3002;&#x76F4;&#x63A5;&#x4ECE;&#x63A7;&#x4EF6;&#x5E93;&#x91CC;&#x62D6;&#x51FA;&#x6765;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x6839;VC&#x624D;&#x662F;&#x66F4;&#x4E00;&#x822C;&#x6027;&#x7684;&#x505A;&#x6CD5;&#x3002; &#x5B8C;&#x6210;&#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x5C31;&#x52A0;&#x5165;&#x4E86;NavigationController&#xFF1A; &#x70B9;&#x51FB;&#x8BB0;&#x5F55;&#xFF0C;&#x7531;&#x4E8E;&#x5728;&#x4E0A;&#x4E00;&#x8282;&#x6DFB;&#x52A0;&#x4E86;Segue&#xFF0C;navigationController&#x4F1A;&#x81EA;&#x52A8;&#x5B8C;&#x6210;&#x8BE6;&#x60C5;&#x9875;&#x7684;&#x5BFC;&#x5165;&#xFF0C;&#x4EE5;&#x53CA;title&#x7684;&#x56DE;&#x9000;&#x6309;&#x94AE;&#xFF1A; &#x5B83;&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;UINavigationController&#x53D1;&#x751F;&#x4E86;&#x4E00;&#x6B21;Segue&#x5462;&#xFF1F;Segue&#x7684;&#x672C;&#x8D28;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;Interface Builder&#x641E;&#x8FD9;&#x4E48;&#x4E00;&#x4E0B;&#x5C31;&#x80FD;&#x5B8C;&#x6210;&#x8FD9;&#x4E9B;&#x5DE5;&#x4F5C;&#x5462;&#xFF1F; 1.3 &#x5F53;&#x4FEE;&#x6539;&#x4E86;Item details&#xFF0C;&#x5982;&#x4F55;&#x8FD4;&#x56DE;&#x7ED9;TableViewController &#x5047;&#x8BBE;UINavigationController&#x7684;VC&#x5806;&#x6808;&#x4E2D;&#x6709;VC1&#x548C;VC2&#xFF0C;&#x5C06;VC2&#x4ECE;&#x5806;&#x6808;&#x4E2D;&#x79FB;&#x9664;&#xFF0C;&#x8FD4;&#x56DE;&#x5230;VC1&#x3002;&#x5219;VC2&#x5C06;&#x6536;&#x5230;viewWillDisappear(_:)&#x6D88;&#x606F;&#xFF0C;VC1&#x5C06;&#x6536;&#x5230;viewWillAppear(_:)&#x6D88;&#x606F;&#x3002;&#x6240;&#x4EE5;&#x672C;&#x4F8B; 1. &#x5728;DetailViewController&#x7684;viewWillDisappear(_:)&#x4E2D;&#x628A;&#x754C;&#x9762;&#x4E0A;&#x7684;&#x503C;&#x66F4;&#x65B0;&#x5230;&#x4E4B;&#x524D;&#x4F20;&#x5165;&#x7684;Item&#x53D8;&#x91CF;&#x4E2D;&#xFF0C; &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x6B64;&#x51FD;&#x6570;&#x6700;&#x5934;&#x90E8;&#x5E94;&#x8C03;&#x7528;&#x57FA;&#x7C7B;&#x7684;&#x540C;&#x540D;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x91CC;&#x90FD;&#x505A;&#x4E86;&#x5565;&#xFF1F; 123456789101112override func viewWillDisappear(_ animated: Bool) { super.viewWillDisappear(animated) // &quot;Save&quot; changes to item item.name = nameField.text ?? &quot;&quot; // &#x53CC;&#x95EE;&#x53F7;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;&#x7F16;&#x8BD1;&#x901A;&#x4E0D;&#x8FC7; item.serialNumber = serialNumberField.text if let valueText = valueField.text, let value = numberFormatter.number(from: valueText) { item.valueInDollars = value.intValue } else { item.valueInDollars = 0 }} &#x4E4B;&#x524D;&#x8FDB;&#x5165;`DetailViewController`&#x7684;&#x65F6;&#x5019;&#x5DF2;&#x7ECF;&#x4F20;&#x5165;&#x4E86;item&#xFF0C;&#x6B64;&#x5904;&#x7684;&#x4FEE;&#x6539;&#x4F1A;&#x88AB;&#x4F20;&#x5230;&#x5916;&#x9762;&#x3002; &#x5728;ItemsViewController&#x7684;viewWillAppear(_:)&#x8C03;&#x7528;tableView.reloadData()&#x4EE4;&#x5217;&#x8868;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x7684;&#x66F4;&#x65B0;: 12345override func viewWillAppear(_ animated: Bool) { super.viewWillDisappear(animated) tableView.reloadData() // &#x901A;&#x77E5;&#x66F4;&#x65B0;} &#x79FB;&#x9664;VC2&#x663E;&#x793A;VC1&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x4F1A;&#x8BA9;VC1&#x91CD;&#x65B0;&#x5237;&#x65B0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E2A;&#x91CD;&#x65B0;&#x5237;&#x65B0;&#x4E0D;&#x5E94;&#x8BE5;&#x4F1A;&#x89E6;&#x53D1;data source&#x7684;&#x5404;&#x63A5;&#x53E3;&#x88AB;&#x8C03;&#x7528;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x624B;&#x52A8;&#x8C03;&#x7528;reloadData()&#x5462;&#xFF1F; 1.4 &#x4EC0;&#x4E48;&#x662F;first responder &#x6709;&#x4E9B;&#x6D88;&#x606F;&#x5982;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x6216;&#x6643;&#x52A8;&#x5E76;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x4F5C;&#x7528;&#x5230;&#x89C6;&#x56FE;&#x7684;&#x533A;&#x57DF;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x6709;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x673A;&#x5236;&#x6765;&#x786E;&#x5B9A;&#x5F53;&#x524D;&#x8BE5;&#x7531;&#x8C01;&#x6765;&#x54CD;&#x5E94;&#x8FD9;&#x7C7B;&#x4E8B;&#x4EF6;&#xFF0C;&#x8FD9;&#x79CD;&#x673A;&#x5236;&#x5C31;&#x53EB;&#x505A;first responder&#x3002; 1.5 first responder&#x600E;&#x4E48;&#x9002;&#x7528;&#x4E8E;&#x6643;&#x52A8;&#x4E8B;&#x4EF6;&#x5462;&#xFF1F; &#x5728;&#x5904;&#x7406;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x70B9;&#x51FB;&#x53EF;&#x4EE5;&#x8F93;&#x5165;&#x7684;&#x89C6;&#x56FE;&#xFF0C;&#x5B83;&#x6536;&#x5230;&#x7126;&#x70B9;&#x540E;&#x5F39;&#x51FA;&#x952E;&#x76D8;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x88AB;&#x8BBE;&#x4E3A;first responder&#xFF0C;&#x8FD9;&#x6709;&#x4E00;&#x4E2A;&#x4E8B;&#x5148;&#x6307;&#x5B9A;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x6643;&#x52A8;&#x4E0D;&#x9700;&#x8981;&#x5148;&#x6307;&#x5B9A;&#xFF0C;&#x5F53;&#x6643;&#x52A8;&#x53D1;&#x751F;&#x65F6;&#x600E;&#x4E48;&#x786E;&#x5B9A;&#x8C01;&#x662F;first responder&#x5462;&#xFF1F; 1.6 &#x600E;&#x6837;&#x8BA9;text field&#x5904;&#x7406;&#x56DE;&#x8F66;&#x4E8B;&#x4EF6;&#xFF1F; &#x4E3A;text field&#x6307;&#x5B9A;UITextFieldDelegate&#x59D4;&#x6258;&#x4EE3;&#x7406;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EE3;&#x7406;&#x901A;&#x5E38;&#x4E3A;text field&#x6240;&#x5728;&#x7684;VC&#x3002;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#x8BA9;&#x6B64;VC&#x9075;&#x5FAA;UITextFieldDelegate&#x534F;&#x8BAE;&#x3002; &#x5728;&#x59D4;&#x6258;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E2D;&#x5B9E;&#x73B0;textFieldShouldReturn(_:)&#x65B9;&#x6CD5;&#x3002;&#x6B64;&#x65B9;&#x6CD5;&#x6B63;&#x662F;&#x7531;&#x56DE;&#x8F66;&#x89E6;&#x53D1;&#x3002; &#x5173;&#x8054;text field&#x5230;textFieldShouldReture(_:)&#x65B9;&#x6CD5;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x91CC;&#x53C8;&#x6709;&#x4E00;&#x79CD;&#x5173;&#x8054;&#x63A7;&#x4EF6;&#x548C;&#x4E8B;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;&#x4ECE;&#x63A7;&#x4EF6;Ctrl&#x62D6;&#x52A8;&#x5230;VC&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x7684;&#x9762;&#x677F;&#x4E2D;&#x9009;&#x62E9;delegate&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5EFA;&#x7ACB;&#x7684;&#x5173;&#x8054;&#x5C31;&#x4F1A;&#x8BA9;&#x6240;&#x6709;UITextFieldDelegate&#x5305;&#x542B;&#x7684;&#x4E8B;&#x4EF6;&#x90FD;&#x4EA4;&#x7ED9;VC&#x6765;&#x5904;&#x7406;&#xFF0C;&#x4E0D;&#x5FC5;&#x5BF9;&#x6BCF;&#x4E00;&#x79CD;&#x4E8B;&#x4EF6;&#x4E00;&#x4E00;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#x4E86;&#x3002; ## 1.7 &#x70B9;&#x51FB;&#x80CC;&#x666F;View&#x6536;&#x56DE;&#x952E;&#x76D8; &#x8FD9;&#x79CD;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x5728;&#x524D;&#x9762;&#x7AE0;&#x8282;&#x4E2D;&#x4ECB;&#x7ECD;&#x8FC7;&#x4E86;&#xFF1A;&#x4E3A;&#x80CC;&#x666F;View&#x6DFB;&#x52A0;Tap Gesture Recognizer&#xFF0C;&#x8FD9;&#x4F1A;&#x5728;VC&#x7684;&#x6807;&#x9898;&#x680F;&#x4E2D;&#x521B;&#x5EFA;&#x56FE;&#x6807;&#xFF0C;&#x5728;VC&#x4E2D;&#x6DFB;&#x52A0;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x3002;&#x4ECE;&#x6B64;&#x56FE;&#x6807;Ctrl&#x62D6;&#x5230;VC&#x7684;&#x56FE;&#x6807;&#xFF0C;&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x3002; &#x6B64;&#x5904;&#x518D;&#x5F15;&#x5165;&#x4E00;&#x79CD;&#x65B0;&#x7684;&#x6DFB;&#x52A0;&#x5173;&#x8054;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;&#x4E3A;&#x80CC;&#x666F;View&#x6DFB;&#x52A0;Tap Gesture Recognizer&#xFF0C;&#x4ECE;&#x5B83;&#x7684;&#x56FE;&#x6807;Ctrl&#x62D6;&#x62FD;&#x5230;VC&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x9762;&#x677F;&#x4E2D;&#x9009;&#x62E9;Connection&#x4E3A;Action&#xFF0C;&#x8F93;&#x5165;&#x540D;&#x5B57;&#x5E76;&#x9009;&#x62E9;Type&#x4E3A;UITapGestureRecognizer&#xFF0C;&#x70B9;&#x51FB;Connect&#xFF0C;&#x8FD9;&#x4F1A;&#x5728;VC&#x4E2D;&#x521B;&#x5EFA;&#x5E76;&#x5173;&#x8054;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#xFF1A; &#x5728;&#x6536;&#x56DE;&#x952E;&#x76D8;&#x7684;&#x5904;&#x7406;&#x4E0A;&#xFF0C;&#x4E4B;&#x524D;&#x90FD;&#x662F;&#x8C03;&#x7528;first responder&#x7684;resignFirstResponder()&#x51FD;&#x6570;&#xFF0C;&#x6B64;&#x5904;&#x6709;&#x4E00;&#x79CD;&#x66F4;&#x4FBF;&#x6377;&#x7684;&#x65B9;&#x5F0F;&#xFF1A;&#x76F4;&#x63A5;&#x8C03;&#x7528;view.endEditing(true)&#xFF0C;&#x8FD9;&#x4E5F;&#x89E3;&#x7B54;&#x4E86;&#x7B2C;&#x56DB;&#x7AE0;&#x63D0;&#x51FA;&#x7684;&#x95EE;&#x9898;&#x2014;&#x2014;&#x5982;&#x679C;&#x6709;&#x5F88;&#x591A;textField&#xFF0C;&#x662F;&#x5426;&#x8981;&#x9010;&#x4E2A;&#x91CA;&#x653E;&#x3002; 1.8 &#x5982;&#x4F55;&#x4E3A;UINavigationController&#x8BBE;&#x7F6E;&#x6807;&#x9898;&#x6587;&#x5B57;&#x3001;&#x6807;&#x9898;&#x56FE;&#x7247;&#xFF0C;&#x4FEE;&#x6539;&#x56DE;&#x9000;&#x6587;&#x5B57; &#x6BCF;&#x4E00;&#x4E2A;UIViewController&#x90FD;&#x6709;&#x4E00;&#x4E2A;navigationItem&#x5C5E;&#x6027;&#xFF0C;&#x8BE5;&#x5C5E;&#x6027;&#x7684;&#x7C7B;&#x578B;&#x4E3A;UINavigationItem&#x3002;&#x5F53;&#x6B64;VC&#x88AB;&#x663E;&#x793A;&#x5230;UINavigationController VC&#x6808;&#x9876;&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x8BE5;VC&#x7684;navigationItem&#x5C5E;&#x6027;&#x663E;&#x793A;&#x4E3A;&#x5BFC;&#x822A;&#x680F;&#x6807;&#x9898;&#x3002;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A;UINavigationBar&#x4F7F;&#x7528;topViewController&#x7684;navigationItem&#x6765;&#x663E;&#x793A;&#x6807;&#x9898;&#x680F;&#x3002; &#x5982;&#x679C;&#x6807;&#x9898;&#x680F;&#x4E3A;hard code&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x76F4;&#x63A5;&#x5728;Interface Builder&#x4E2D;&#x53CC;&#x51FB;&#x5B83;&#x7684;&#x5BFC;&#x822A;&#x680F;&#x7F16;&#x8F91;&#x5373;&#x53EF;&#xFF0C;&#x4F8B;&#x5982;ItemsViewController&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF1A; &#x5982;&#x679C;&#x6807;&#x9898;&#x680F;&#x4F1A;&#x968F;&#x663E;&#x793A;&#x6570;&#x636E;&#x4E0D;&#x540C;&#x800C;&#x53D8;&#x5316;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6570;&#x636E;&#x88AB;&#x4FEE;&#x6539;&#x540E;&#x66F4;&#x65B0;navigationItem.title&#xFF1A; 12345var item: Item!{ didSet{ navigationItem.title = item.name }} 1.9 NavigationBar&#x90FD;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x6210;&#x4EC0;&#x4E48;&#x5F62;&#x5F0F;&#xFF1F; &#x53EF;&#x4EE5;&#x653E;&#x5728;NavigationBar&#x7684;&#x5DE6;&#x3001;&#x4E2D;&#x3001;&#x53F3;&#xFF0C;UITextField&#x4E0D;&#x662F;View&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x4E0D;&#x662F;TextField&#xFF0C;UIBarButtonItems&#x4E5F;&#x4E0D;&#x662F;View&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x4E5F;&#x4E0D;&#x662F;&#x6309;&#x94AE;&#xFF0C;&#x4ED6;&#x4EEC;&#x53EA;&#x662F;&#x5305;&#x542B;&#x5DE6;&#x3001;&#x4E2D;&#x3001;&#x53F3;&#x4F4D;&#x7F6E;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x6587;&#x5B57;&#x6216;&#x6309;&#x94AE;&#x3002; &#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;UINavigationItem&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x6838;&#x5FC3;&#x662F;&#x5B9E;&#x73B0;&#x5B83;&#x7684;titleView&#x6210;&#x5458;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;UIView&#x5BF9;&#x8C61;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x663E;&#x793A;&#x4E00;&#x6BB5;&#x6587;&#x5B57;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x3002; 1.10 &#x4E3A;NavigationBar&#x6DFB;&#x52A0;&#x6309;&#x94AE; &#x76F4;&#x63A5;&#x4ECE;&#x63A7;&#x4EF6;&#x5E93;&#x62D6;&#x5165;NavigationBar&#x7684;&#x5DE6;&#x3001;&#x53F3;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x5404;&#x79CD;System Item&#xFF1A; &#x4E3A;&#x4E4B;&#x5173;&#x8054;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#xFF1A; &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x662F;UIBarButtonItem&#xFF0C;&#x800C;&#x4E0D;&#x662F;UIButton&#xFF1A; 123@IBAction func addNewItem(_ sender: UIBarButtonItem) { ...} 1.11 &#x4E3A;NavigationBar&#x6DFB;&#x52A0;Edit&#x6309;&#x94AE; &#x51C6;&#x786E;&#x7684;&#x8BF4;&#x5E94;&#x8BE5;&#x662F;&#x4E3A;TableViewController&#x6DFB;&#x52A0;&#x5728;&#x5BFC;&#x822A;&#x680F;&#x4E2D;&#x7684;Edit&#x6309;&#x94AE;&#x3002;&#x4E66;&#x4E2D;&#x8BF4;&#xFF1A;TableViewController&#x66B4;&#x9732;&#x4E86;&#x4E00;&#x4E2A;bar Button item&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x81EA;&#x52A8;&#x5207;&#x6362;editing&#x6A21;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x5728;Interface Builder&#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x64CD;&#x4F5C;&#x5B83;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x7F16;&#x7801;&#x5B9E;&#x73B0;&#xFF1A; 123456789class ItemsViewController: UITableViewController { ... required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) // &#x53F3;&#x503C;&#x662F;UIViewController&#x7684;&#x4E00;&#x4E2A;&#x5C5E;&#x6027; navigationItem.leftBarButtonItem = editButtonItem } ...} &#x679C;&#x7136;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x70B9;&#x51FB;&#x6B64;&#x6309;&#x94AE;&#x4F1A;&#x89E6;&#x53D1;tableView&#x7684;Editing&#x6A21;&#x5F0F;&#x5207;&#x6362;&#xFF0C;&#x800C;&#x4E14;&#x70B9;&#x51FB;&#x539F;&#x6765;&#x7684;Edit&#x6309;&#x94AE;&#x5207;&#x6362;tableView&#x7684;Editing&#x6A21;&#x5F0F;&#x4E5F;&#x4F1A;&#x89E6;&#x53D1;leftBarButtonItem&#x81EA;&#x52A8;&#x53D8;&#x5316;&#xFF1A;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十三]]></title>
    <url>%2F2017%2F08%2F01%2F2017%2F0801iOSProgrammingBNRG13%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;&#x4F38;&#x7F29;&#x963B;&#x5C3C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4ECB;&#x7ECD;&#x63A7;&#x4EF6;&#x6392;&#x5E03;&#x7684;&#x65F6;&#x5019;&#x76F8;&#x4E92;&#x4F38;&#x7F29;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x3002;&#x672C;&#x7AE0;&#x4E2D;&#x70B9;&#x51FB;&#x4E86;UITableViewCell&#x4E4B;&#x540E;&#x4F1A;&#x4E13;&#x573A;&#x5230;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;Segue&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x4F38;&#x7F29;&#x963B;&#x5C3C; - Stack View - Segue 1 &#x4E24;&#x4E2A;&#x63A7;&#x5236;&#x5185;&#x5BB9;&#x4F38;&#x7F29;&#x7684;&#x963B;&#x5C3C; 1.1 content hugging priorities&#x548C;content compression priorities &#x6211;&#x628A;&#x5B83;&#x4EEC;&#x7FFB;&#x8BD1;&#x6210;&#x5185;&#x5BB9;&#x62C9;&#x4F38;&#x963B;&#x5C3C;&#x548C;&#x5185;&#x5BB9;&#x538B;&#x7F29;&#x963B;&#x5C3C;&#x3002; &#x5185;&#x5BB9;&#x62C9;&#x4F38;&#x963B;&#x5C3C;&#xFF08;content hugging priorities&#xFF09;&#xFF1A;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x6839;&#x5B89;&#x88C5;&#x5728;view&#x5185;&#x7684;&#x5F39;&#x7C27;&#xFF0C;&#x7528;&#x6765;&#x963B;&#x788D;view&#x7684;&#x5C3A;&#x5BF8;&#x62C9;&#x5F97;&#x6BD4;&#x56FA;&#x6709;&#x5185;&#x5BB9;&#x66F4;&#x957F;&#x3002;&#x963B;&#x5C3C;&#x503C;&#x4ECE;0&#x5230;1000&#xFF0C;1000&#x8868;&#x793A;&#x65E0;&#x6CD5;&#x62C9;&#x4F38;&#x3002; &#x5185;&#x5BB9;&#x538B;&#x7F29;&#x963B;&#x5C3C;&#xFF08;content compression priorities)&#xFF1A;&#x4E5F;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x6839;&#x5B89;&#x88C5;&#x5728;view&#x5185;&#x7684;&#x5F39;&#x7C27;&#xFF0C;&#x7528;&#x6765;&#x963B;&#x788D;View&#x88AB;&#x538B;&#x7F29;&#x5F97;&#x6BD4;&#x56FA;&#x6709;&#x5C3A;&#x5BF8;&#x66F4;&#x77ED;&#x3002;&#x963B;&#x5C3C;&#x4ECE;0&#x5230;1000&#xFF0C;1000&#x8868;&#x793A;&#x65E0;&#x6CD5;&#x88AB;&#x538B;&#x7F29;&#x3002; &#x4E66;&#x91CC;&#x7684;&#x56FE;&#x4E0D;&#x5982;&#x8FD9;&#x5F20;&#x8BF4;&#x5F97;&#x660E;&#x767D;&#xFF1A;&#x5F53;&#x5BB9;&#x5668;&#x88AB;&#x62C9;&#x4F38;&#xFF0C;&#x5185;&#x90E8;&#x7684;&#x5B50;&#x63A7;&#x4EF6;&#x7684;&#x62C9;&#x4F38;&#x6BD4;&#x4F8B;&#x4F1A;&#x53C2;&#x7167;&#x5176;&#x62C9;&#x4F38;&#x963B;&#x5C3C;&#xFF0C;&#x8D8A;&#x5C0F;&#x7684;&#x62C9;&#x4F38;&#x8D8A;&#x591A;&#xFF1B;&#x5F53;&#x5BB9;&#x5668;&#x88AB;&#x538B;&#x7F29;&#xFF0C;&#x5185;&#x90E8;&#x7684;&#x5B50;&#x63A7;&#x4EF6;&#x7684;&#x538B;&#x7F29;&#x6BD4;&#x4F8B;&#x4E5F;&#x53C2;&#x7167;&#x5176;&#x538B;&#x7F29;&#x963B;&#x5C3C;&#xFF0C;&#x8D8A;&#x5C0F;&#x7684;&#x538B;&#x7F29;&#x8D8A;&#x591A;&#x3002; 2 Stack View 2.1 &#x4EC0;&#x4E48;&#x662F;Stack View &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x7528;&#x7F51;&#x683C;&#x65B9;&#x5F0F;&#x6392;&#x5217;&#x5B50;&#x89C6;&#x56FE;&#x7684;View&#xFF0C;&#x4ECE;&#x56FE;&#x6807;&#x4E0A;&#x5C31;&#x80FD;&#x770B;&#x660E;&#x767D;&#xFF0C;&#x5305;&#x62EC;&#x6C34;&#x5E73;&#x548C;&#x7AD6;&#x76F4;&#x4E24;&#x79CD;&#xFF1A; ## 2.2 &#x5D4C;&#x5957;&#x7684;Stack View &#x5728;&#x4E00;&#x4E2A;Horizontal Stack View&#x5185;&#x90E8;&#x53EF;&#x4EE5;&#x518D;&#x5305;&#x542B;Vertical Stack View&#xFF0C;&#x8FD9;&#x5C31;&#x662F;Stack View&#x7684;&#x5D4C;&#x5957;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x4F8B;&#x5B50;&#x3002;&#x6839;Stack View&#x662F;&#x4E00;&#x4E2A;Vertical&#x7684;&#xFF0C;&#x5305;&#x542B;&#x56DB;&#x884C;&#x5206;&#x522B;&#x6392;&#x5217;Name&#x3001;Serial&#x3001;Value&#x548C;Date Created&#x3002;&#x524D;&#x4E09;&#x884C;&#x53C8;&#x5206;&#x522B;&#x662F;&#x4E00;&#x4E2A;Horizontal Stack View&#xFF0C;&#x5305;&#x542B;&#x4E00;&#x4E2A;Label&#x548C;&#x4E00;&#x4E2A;Text Field&#xFF1A; &#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;&#xFF0C;&#x70B9;&#x51FB;&#x53F3;&#x4E0B;&#x89D2;&#x7B2C;&#x4E8C;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;Stack View &#x6765;&#x5305;&#x542B;&#x6B64;&#x63A7;&#x4EF6;&#xFF1A; &#x9009;&#x4E2D;&#x4E00;&#x4E2A;Stack View&#xFF0C;&#x53EF;&#x4EE5;&#x5728;Attributes inspector&#x4E2D;&#x8BBE;&#x7F6E;&#x5B83;&#x7684;Stack&#x65B9;&#x5411;&#xFF0C;&#x6C34;&#x5E73;&#x8FD8;&#x662F;&#x7AD6;&#x76F4;&#xFF1A; ## 2.3 &#x5728;Stack View&#x4E2D;&#x76F8;&#x90BB;&#x7684;&#x63A7;&#x4EF6;&#x4F38;&#x7F29;&#x5173;&#x7CFB; &#x7ED3;&#x5408;&#x524D;&#x9762;&#x8BB2;&#x7684;&#x4F38;&#x7F29;&#x963B;&#x5C3C;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8BBE;&#x7F6E;&#x4F38;&#x7F29;&#x5173;&#x7CFB;&#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x4E86;&#x3002;&#x4F8B;&#x5982;&#x4E0A;&#x56FE;&#x4E2D;Name Label&#x548C;&#x5B83;&#x540E;&#x9762;&#x7684;Text Field&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;Label&#x7684;Horizontal Content Hugging Priority=251&#xFF0C;Text Field&#x7684;Horizontal Content Hugging Priority=250&#xFF0C;&#x56E0;&#x6B64;&#x4E8C;&#x8005;&#x5E76;&#x6392;&#x653E;&#xFF0C;Text Field&#x88AB;&#x62C9;&#x4F38;&#x4E86;&#x3002; 2.4 &#x5728;Stack View&#x4E2D;&#x8BBE;&#x7F6E;&#x5B50;&#x89C6;&#x56FE;&#x8FB9;&#x8DDD; &#x53EF;&#x4EE5;&#x4E3A;Stack View&#x8BBE;&#x7F6E;&#x76F8;&#x90BB;&#x5B50;&#x89C6;&#x56FE;&#x4E4B;&#x95F4;&#x7684;&#x95F4;&#x9694;&#x8DDD;&#x79BB;&#xFF1A; &#x8FD9;&#x4E2A;&#x8DDD;&#x79BB;&#x7684;&#x751F;&#x6548;&#x4F9D;&#x7136;&#x4F9D;&#x8D56;&#x63A7;&#x4EF6;&#x7684;&#x963B;&#x5C3C;&#x5C5E;&#x6027;&#x2014;&#x2014;&#x8FD9;&#x4E2A;&#x503C;&#x4F1A;&#x8BA9;&#x538B;&#x7F29;&#x963B;&#x5C3C;&#x5C0F;&#x7684;&#x63A7;&#x4EF6;&#x88AB;&#x538B;&#x7F29;&#xFF0C; Label&#x7684;Horizontal Content Compression Resistance Priority=750&#xFF0C;Text Field&#x7684;Horizontal Content Compression Resistance Priority=749&#x3002;&#x56E0;&#x6B64;&#x662F;Text Field&#x88AB;&#x538B;&#x7F29;&#x3002; 2.5 &#x4E3A;&#x4EC0;&#x4E48;Date Created&#x7684;Aligment&#x4E5F;&#x80FD;&#x8C03;&#x6574;&#x5230;&#x5E03;&#x5C40;&#xFF1F; &#x5728;P282&#x901A;&#x8FC7;&#x4FEE;&#x6539;Date Created&#x7684;Alignment&#x4E5F;&#x80FD;&#x8C03;&#x6574;&#x6B64;Label&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x8FD9;&#x4E2A;&#x4FEE;&#x6539;&#x963B;&#x5C3C;&#x6216;&#x8005;&#x4FEE;&#x6539;&#x7EA6;&#x675F;&#x6709;&#x4EC0;&#x4E48;&#x5DEE;&#x522B;&#x5462;&#xFF1F; &#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x5E76;&#x6CA1;&#x6709;&#x771F;&#x6B63;&#x52A8;&#x5230;&#x5B50;&#x89C6;&#x56FE;&#x95F4;&#x7684;&#x5E03;&#x5C40;&#x5173;&#x7CFB;&#xFF0C;&#x4ED4;&#x7EC6;&#x770B;&#x8FD9;&#x4E2A;&#x754C;&#x9762;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x524D;&#x4E09;&#x884C;&#x90FD;&#x662F;Vertical Stack View&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x7AD6;&#x76F4;&#x62C9;&#x4F38;&#x963B;&#x5C3C;&#x662F;250&#xFF0C;Date Created&#x7684;&#x7AD6;&#x76F4;&#x62C9;&#x4F38;&#x963B;&#x5C3C;&#x662F;251&#xFF0C;&#x4E8E;&#x662F;&#x5E94;&#x8BE5;&#x524D;&#x4E09;&#x884C;&#x88AB;&#x7AD6;&#x76F4;&#x62C9;&#x4F38;&#x5427;&#xFF1F;&#x8BBE;&#x7F6E;Date Created&#x7684;Alignment&#x53EA;&#x662F;&#x6539;&#x53D8;&#x4E86;&#x5176;&#x4E2D;&#x7684;&#x6587;&#x5B57;&#x5728;Label&#x6846;&#x5185;&#x7684;&#x5E03;&#x5C40; ## 2.6 &#x5DF2;&#x7ECF;&#x6846;&#x5230;Stack View&#x683C;&#x5B50;&#x91CC;&#x7684;&#x5B50;&#x89C6;&#x56FE;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x5F7C;&#x6B64;&#x5BF9;&#x9F50;&#xFF1F; &#x5728;&#x4E66;P282&#xFF0C;&#x8981;&#x5BF9;&#x4E09;&#x4E2A;Text Field&#x518D;&#x505A;&#x5DE6;&#x5BF9;&#x9F50;&#x3002;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x5DF2;&#x7ECF;&#x901A;&#x8FC7;&#x7EB5;&#x6A2A;&#x7684;Stack View&#x88AB;&#x683C;&#x5B50;&#x9650;&#x5236;&#x8FC7;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BF9;&#x9F50;&#x7EA6;&#x675F;&#x5FC5;&#x8981;&#x5417;&#xFF1F; &#x5176;&#x5B9E;&#x8FD8;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x4ED4;&#x7EC6;&#x89C2;&#x5BDF;&#x4E0A;&#x56FE;&#xFF0C;&#x8FD9;&#x4E09;&#x4E2A;Text Field&#x5E76;&#x6CA1;&#x6709;&#x7EB5;&#x5411;&#x5BF9;&#x9F50;&#x3002;Horizontal Stack View&#x7684;&#x5206;&#x5272;&#x6BD4;&#x4F8B;&#x53D6;&#x51B3;&#x4E8E;Label&#x7684;&#x56FA;&#x6709;&#x957F;&#x5EA6;&#xFF0C;&#x5982;&#x679C;&#x6587;&#x5B57;&#x957F;&#xFF0C;&#x7559;&#x7ED9;Text Field&#x7684;&#x7A7A;&#x95F4;&#x5C31;&#x5C0F;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x5927;&#x3002;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x78B0;&#x5DE7;&#x4E09;&#x4E2A;Label&#x6587;&#x5B57;&#x957F;&#x5EA6;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x4E4D;&#x4E00;&#x770B;&#x8C8C;&#x4F3C;&#x662F;&#x5BF9;&#x9F50;&#x7684;&#x3002; &#x4E0D;&#x8FC7;&#x8FD8;&#x662F;&#x6709;&#x95EE;&#x9898;&#xFF1A;&#x76EE;&#x6D4B;Value&#x6700;&#x77ED;&#xFF0C;&#x6240;&#x4EE5;&#x4ED6;&#x540E;&#x9762;&#x7684;Text Field&#x662F;&#x6700;&#x957F;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4E0A;&#x9762;&#x4E24;&#x4E2A;Text Field&#x90FD;&#x4E0E;&#x4E4B;&#x5BF9;&#x9F50;&#xFF0C;&#x4E0D;&#x5C31;&#x4E0E;&#x5F39;&#x7C27;&#x963B;&#x5C3C;&#x539F;&#x5219;&#x76F8;&#x51B2;&#x7A81;&#x4E86;&#x4E48;&#xFF1F;&#x4E00;&#x4E2A;&#x6781;&#x7AEF;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x628A;Name&#x6539;&#x4E3A;NameNameNameNameName&#xFF0C;&#x518D;&#x8BA9;&#x5176;&#x540E;&#x7684;Text Field&#x4E0E;Serial&#x540E;&#x9762;&#x7684;Text Field&#x5BF9;&#x9F50;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x4EC0;&#x4E48;&#x73B0;&#x8C61;&#xFF1F; 2.7 &#x672C;&#x7AE0;&#x5728;&#x653E;Vertical Stack View&#x4E4B;&#x524D;&#x6709;&#x628A;&#x539F;&#x5148;VC&#x4E0B;&#x7684;View&#x5220;&#x6389;&#x5417;&#xFF1F; &#x6211;&#x8BD5;&#x7740;&#x5220;&#x6389;&#x539F;&#x5148;&#x7684;VC&#x518D;&#x653E;Vertical Stack View&#xFF0C;&#x53D1;&#x73B0;&#x80CC;&#x666F;&#x662F;&#x9ED1;&#x8272;&#x7684;&#x3002;&#x90A3;&#x5C31;&#x662F;&#x8BF4;&#x8981;&#x4FDD;&#x7559;&#x539F;&#x5148;&#x7684;View&#x54AF;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;Stack View&#x4E0D;&#x4E5F;&#x662F;View&#x5417;&#xFF1F;&#x8FD9;&#x4E2A;Vertical Stack View&#x7684;&#x7EA6;&#x675F;&#x5173;&#x7CFB;&#x600E;&#x4E48;&#x8BBE;&#x7F6E;&#x5462;&#xFF1F;&#x7406;&#x8BBA;&#x4E0A;&#x8BF4;&#x5E94;&#x8BE5;&#x662F;&#x8BA9;&#x5979;&#x7D27;&#x8D34;&#x7740;View&#xFF0C;&#x4F46;&#x6211;&#x6CA1;&#x770B;&#x5230;&#x4E66;&#x91CC;&#x8FD9;&#x4E48;&#x505A;&#x5462;&#xFF1F; 3 Segue 3.1 &#x4EC0;&#x4E48;&#x662F;Segue &#x6309;&#x7167;&#x4E66;&#x4E2D;&#x7684;&#x89E3;&#x91CA;&#xFF1A;&#x5C31;&#x662F;&#x8F6C;&#x573A;&#xFF0C;&#x4ECE;&#x4E00;&#x4E2A;&#x754C;&#x9762;&#x8F6C;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x754C;&#x9762;&#xFF0C;storyboard&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x5199;&#x4EE3;&#x7801;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8F6C;&#x573A;&#x8FC7;&#x7A0B;&#xFF0C;&#x5C31;&#x53EB;&#x505A;segues&#x3002;Segue&#x5305;&#x542B;&#xFF1A; - &#x4E00;&#x4E2A;Style &#x8868;&#x660E;VC&#x5982;&#x4F55;&#x5C55;&#x73B0;&#x51FA;&#x6765; - &#x4E00;&#x4E2A;Action item &#x89E6;&#x53D1;&#x8F6C;&#x573A;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x6309;&#x94AE;&#x3001;table view cell&#x7B49; - &#x4E00;&#x4E2A;identifier &#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x8BBF;&#x95EE;&#x8BE5;Segue 3.2 &#x600E;&#x4E48;&#x521B;&#x5EFA;Segue &#x672C;&#x7AE0;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x70B9;&#x51FB;&#x4E86;ItemCell&#x540E;&#x8F6C;&#x5230;&#x8BE6;&#x60C5;&#x9875;VC&#x3002;&#x5728;storyboard&#x4E2D;&#x4ECE;ItemCell Ctrl&#x62D6;&#x52A8;&#x5230;&#x8BE6;&#x60C5;&#x9875;VC&#x4E0A;&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x9762;&#x677F;&#x4E2D;&#x9009;&#x62E9;Selection Segue/Show&#x3002; ## 3.3 &#x600E;&#x4E48;&#x5728;&#x8F6C;&#x573A;&#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x6570;&#x636E;&#xFF1F; &#x8F6C;&#x573A;&#x7684;&#x52A8;&#x4F5C;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x5199;&#x4EE3;&#x7801;&#x4E86;&#xFF0C;&#x8FD9;&#x4E5F;&#x5E26;&#x6765;&#x4E00;&#x4E2A;&#x7591;&#x95EE;&#xFF1A;&#x8BE6;&#x60C5;&#x9875;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x662F;&#x4ECE;&#x54EA;&#x6761;&#x8BB0;&#x5F55;&#x70B9;&#x5165;&#x7684;&#x5462;&#xFF1F; &#x5F53;VC&#x7684;Segue&#x88AB;&#x89E6;&#x53D1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6B64;VC&#x7684;prepare(for:sender:)&#x65B9;&#x6CD5;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x4EE5;&#x521D;&#x59CB;&#x5316;&#x8BE5;Segue&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x88AB;&#x89E6;&#x53D1;&#x7684;segue&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x89E6;&#x53D1;segue&#x7684;&#x5BF9;&#x8C61;&#xFF08;&#x5982;TabelViewCell&#x6216;Button&#xFF09;&#x3002;&#x901A;&#x8FC7;&#x6B64;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x628A;&#x88AB;&#x70B9;&#x51FB;&#x7684;&#x8BB0;&#x5F55;&#x4F20;&#x5165;&#x8BE6;&#x60C5;&#x9875;&#x3002; &#x5177;&#x4F53;&#x6B65;&#x9AA4;&#x4E3A;&#xFF1A; &#x4E00;&#x3001;&#x5728;storyboard&#x4E2D;&#x9009;&#x4E2D;segue&#xFF0C;&#x5E76;&#x4E3A;&#x4E4B;&#x53D6;&#x4E00;&#x4E2A;Identifier&#xFF1A; &#x4E8C;&#x3001;&#x8986;&#x76D6;&#x89E6;&#x53D1;segue&#x7684;VC&#x7684;prepare&#x51FD;&#x6570;&#xFF1A; 12345678910111213141516class ItemsViewController: UITableViewController {... override func prepare(for segue: UIStoryboardSegue, sender: Any?) { switch segue.identifier { case &quot;showItem&quot;?: // &#x5982;&#x679C;&#x89E6;&#x53D1;&#x7684;segue&#x662F;showItem&#xFF0C;&#x5219;&#x627E;&#x5230;&#x9009;&#x4E2D;&#x7684;item&#xFF0C;&#x4F20;&#x5165;&#x8BE6;&#x60C5;&#x9875;VC if let row = tableView.indexPathForSelectedRow?.row{ let item = itemStore.allItems[row] let detailViewController = segue.destination as! DetailViewController detailViewController.item = item } default: preconditionFailure(&quot;Unexpected segue identifier.&quot;) } }...} case &quot;showItem&quot;?&#x540E;&#x9762;&#x7684;&#x95EE;&#x53F7;&#x600E;&#x4E48;&#x7406;&#x89E3;&#xFF1F; &#x4E66;&#x4E2D;&#x8BF4;&#xFF1A;&#x56E0;&#x4E3A;segue&#x7684;identifier&#x662F;&#x4E00;&#x4E2A;optional String&#x6240;&#x4EE5;&#x8981;&#x5305;&#x542B;&#x95EE;&#x53F7;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x7406;&#x89E3;optional&#x7684;&#x672C;&#x8D28;&#x5C31;&#x5F88;&#x96BE;&#x8BFB;&#x61C2;&#x8FD9;&#x53E5;&#x8BDD;&#x3002; &gt; if let row = tableView.indexPathForSelectedRow?.row{&#x8FD9;&#x53E5;&#x7684;&#x95EE;&#x53F7;&#x53C8;&#x5E94;&#x600E;&#x4E48;&#x89E3;&#x91CA;&#x5462;&#xFF1F;&#x8FD8;&#x662F;&#x8981;&#x56DE;&#x5230;optional&#x7684;&#x672C;&#x8D28;&#xFF0C;&#x56E0;&#x4E3A;&#x52A0;&#x95EE;&#x53F7;&#x548C;&#x4E0D;&#x52A0;&#x95EE;&#x53F7;&#x662F;&#x4E24;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x5148;&#x901A;&#x8FC7;if-let&#x5B89;&#x5168;&#x5C55;&#x5F00;&#xFF0C;&#x518D;&#x83B7;&#x5F97;&#x5C5E;&#x6027;&#x3002; 3.4 &#x521B;&#x5EFA;outlets&#x7684;&#x5FEB;&#x6377;&#x65B9;&#x6CD5; &#x4E00;&#x3001;&#x8BA9;&#x4EE3;&#x7801;&#x548C;Interface Builder&#x540C;&#x65F6;&#x51FA;&#x73B0;&#x5728;&#x754C;&#x9762;&#xFF0C;&#x53EF;&#x4EE5;Option Click&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x6253;&#x5F00;&#x53E6;&#x4E00;&#x4E2A;&#x7A97;&#x53E3;&#xFF1A; Xcode&#x5C31;&#x4F1A;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x4E3A;&#x4E4B;&#x751F;&#x6210;&#x53D8;&#x91CF;&#x3002; &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x7406;&#x89E3;&#xFF1F;&#x5927;&#x62EC;&#x53F7;&#x5185;&#x4E0D;&#x5E94;&#x8BE5;&#x662F;&#x95ED;&#x5305;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x540E;&#x9762;&#x5E26;&#x62EC;&#x53F7;&#xFF1F; 1234567let numberFormatter :NumberFormatter = { let fmt = NumberFormatter() fmt.numberStyle = .decimal fmt.minimumFractionDigits = 2 fmt.maximumFractionDigits = 2 return fmt}()]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十二]]></title>
    <url>%2F2017%2F07%2F31%2F2017%2F0731iOSProgrammingBNRG12%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x8FDB;&#x4E00;&#x6B65;&#x901A;&#x8FC7;&#x5B50;&#x7C7B;&#x5316;UITableViewCell&#x5B9E;&#x73B0;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6837;&#x5F0F;&#x5C55;&#x73B0;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x5B50;&#x7C7B;&#x5316;UITableViewCell - &#x8BA9;&#x5B57;&#x4F53;&#x968F;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x52A8;&#x6001;&#x8C03;&#x6574; &#x5728;Interface Builder&#x4E0A;&#x70B9;&#x51FB;Prototype Cells&#x53D1;&#x73B0;&#x5B83;&#x5BF9;&#x5E94;&#x7684;Class&#x662F;UITableViewCell&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5B50;&#x7C7B;&#x5316;UITableViewCell&#x7684;&#x65B9;&#x6CD5;&#x5E94;&#x8BE5;&#x662F;&#x6D3E;&#x751F;&#x8BE5;&#x7C7B;&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x5E76;&#x5C06;Interface Builder&#x4E2D;&#x7684;Prototype Cells&#x7684;Class&#x5BF9;&#x5E94;&#x5230;&#x8BE5;&#x5B50;&#x7C7B;&#x4E0A;&#x53BB;&#x3002;&#x5177;&#x4F53;&#x505A;&#x6CD5;&#x662F;&#x5728;Prototype Cells&#x7684;&#x9762;&#x677F;&#x4E0A;&#x62D6;&#x5165;&#x9700;&#x8981;&#x7684;&#x5B50;&#x63A7;&#x4EF6;&#xFF0C;&#x5173;&#x8054;&#x5230;&#x5B50;&#x7C7B;&#x7684;outlets&#x53D8;&#x91CF;&#x3002; 1 &#x5B50;&#x7C7B;&#x5316;UITableViewCell 1.1 &#x5B50;&#x7C7B;&#x5316;UITableViewCell&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF; &#x548C;&#x5E03;&#x5C40;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;View&#x6CA1;&#x4EC0;&#x4E48;&#x5DEE;&#x522B;&#xFF1A; 1. &#x6D3E;&#x751F;UITableViewCell&#x7684;&#x5B50;&#x7C7B; 2. &#x5728;Interface Builder&#x4E2D;&#x5C06;Prototype Cells&#x7684;Style&#x8BBE;&#x7F6E;&#x4E3A;Custome&#xFF0C;&#x5C06;Class&#x5BF9;&#x5E94;&#x5230;&#x8BE5;&#x5B50;&#x7C7B; 3. &#x5173;&#x8054;Interface Builder&#x4E2D;&#x7684;&#x63A7;&#x4EF6;&#x3001;&#x6D88;&#x606F;&#x4E0E;&#x5B50;&#x7C7B;&#x4E2D;&#x7684;outlets&#x53D8;&#x91CF;&#x3001;&#x6D88;&#x606F;&#x5904;&#x7406;&#x51FD;&#x6570;&#x5173;&#x8054;&#x8D77;&#x6765; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;&#x5B50;&#x63A7;&#x4EF6;&#x5E94;&#x5F53;&#x6DFB;&#x52A0;&#x5230;UITableViewCell&#x7684;contentView&#x4E2D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x6DFB;&#x52A0;&#x5230;cell&#x4E0A;&#x3002;&#x56E0;&#x4E3A;&#x5F53;&#x8FDB;&#x5165;Editing&#x6A21;&#x5F0F;&#x540E;&#xFF0C;cell&#x7684;&#x5DE6;&#x53F3;&#x4E24;&#x4FA7;&#x4F1A;&#x591A;&#x51FA;&#x5220;&#x9664;&#x3001;&#x79FB;&#x52A8;&#x7684;&#x5B50;&#x63A7;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;&#x5230;contentView&#x4E2D;&#x80FD;&#x907F;&#x514D;&#x8FD9;&#x4E24;&#x4E2A;&#x5B50;&#x63A7;&#x4EF6;&#x8986;&#x76D6;&#x65B0;&#x52A0;&#x5165;&#x7684;&#x63A7;&#x4EF6;&#x3002;&#x4E66;&#x4E2D;&#x7684;&#x56FE;12.2&#x63CF;&#x8FF0;&#x4E86;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5E03;&#x5C40;&#x5173;&#x7CFB;&#x3002; ## 1.2 &#x5B50;&#x7C7B;&#x5316;UITableViewCell&#x7684;&#x6B65;&#x9AA4; 1. &#x6D3E;&#x751F;UITableViewCell&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x53D6;&#x540D;ItemCell 2. &#x5728;Interface Builder&#x4E2D;&#x8BBE;&#x7F6E;Prototype Cells&#x7684;Style&#x8BBE;&#x7F6E;&#x4E3A;Custom&#xFF1A; &#x5C06;Class&#x4E3A;ItemCell&#xFF1A; 3. &#x5728;Prototype Cells&#x4E2D;&#x4FEE;&#x6539;&#x5E03;&#x5C40;&#xFF0C;&#x6DFB;&#x52A0;&#x5B50;&#x63A7;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x8981;&#x4FEE;&#x6539;&#x9AD8;&#x5EA6;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x52FE;&#x9009;Row Height&#x7684;Custom&#xFF0C;&#x518D;&#x4FEE;&#x6539;&#x503C;&#xFF1A; 1.3 &#x600E;&#x4E48;&#x628A;Interface Builder &#x4E2D;Prototype Cells&#x4E0A;&#x7684;&#x63A7;&#x4EF6;&#x5173;&#x8054;&#x5230;ItemCell&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF; &#x4EE5;&#x524D;&#x90FD;&#x662F;&#x5C06;IB&#x63A7;&#x4EF6;&#x5173;&#x8054;&#x5230;VC&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x5728;Interface Builder&#x4E2D;&#x4ECE;VC Ctrl&#x62D6;&#x62FD;&#x5230;&#x63A7;&#x4EF6;&#xFF0C;&#x800C;&#x6B64;&#x5904;&#x8981;&#x5173;&#x8054;&#x5230;ItemCell&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x62D6;&#x62FD;&#x7684;&#x8D77;&#x70B9;&#x5E94;&#x8BE5;&#x662F;&#x54EA;&#x5462;&#xFF1F;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1. Ctrl-click Prototype Cells&#xFF0C;&#x4F1A;&#x5F39;&#x51FA;&#x5982;&#x4E0B;UITableViewCell&#x9762;&#x677F; 2. &#x62D6;&#x62FD;nameLable&#x3001;serialNumberLabel&#x548C;valueLabel&#x53F3;&#x4FA7;&#x7684;&#x52A0;&#x53F7;&#x5230;Prototype Cells&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x5B50;&#x63A7;&#x4EF6;&#x5B8C;&#x6210;&#x5173;&#x8054; 1.4 &#x5C06;&#x81EA;&#x5B9A;&#x4E49;TableViewCell&#x663E;&#x793A;&#x5230;TableView&#x7684;&#x6B65;&#x9AA4; &#x4E00;&#x3001;&#x4FEE;&#x6539;&#x4E86;cell&#x7684;&#x9AD8;&#x5EA6;&#xFF0C;&#x9700;&#x8981;&#x544A;&#x8BC9;tableView&#xFF1A; 12345678910override func viewDidLoad() { super.viewDidLoad() let statusBarHeight = UIApplication.shared.statusBarFrame.height let insets = UIEdgeInsets(top:statusBarHeight, left:0, bottom:0, right:0) tableView.contentInset = insets tableView.scrollIndicatorInsets = insets tableView.rowHeight = 65 // &#x544A;&#x77E5;tableView&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x9AD8;&#x5EA6;} &#x6CA1;&#x6709;&#x4FEE;&#x6539;&#x9AD8;&#x5EA6;&#x65F6;&#xFF0C;&#x662F;&#x5728;&#x54EA;&#x91CC;&#x4EE5;&#x53CA;&#x4EC0;&#x4E48;&#x65F6;&#x673A;&#x544A;&#x77E5;&#x7684;&#x5462;&#xFF1F; &#x4E8C;&#x3001;&#x5728;Interface Builder&#x4E2D;&#x4FEE;&#x6539;Prototype Cells&#x7684;Identifier&#x5C5E;&#x6027;&#xFF1A; &#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x5728;&#x7B2C;11&#x7AE0;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;&#x662F;&#x7528;&#x4E8E;&#x53EF;&#x590D;&#x7528;&#x7684;cell&#x3002;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x6539;&#xFF0C;&#x53EA;&#x8981;&#x4E0E;&#x7B2C;&#x4E09;&#x6B65;&#x4E00;&#x81F4;&#x5373;&#x53EF;&#x3002; &#x4E09;&#x3001;&#x4FEE;&#x6539;tableView(_:cellForRowAt:)&#x51FD;&#x6570;&#xFF0C;&#x8BA9;&#x5B83;&#x6BCF;&#x6B21;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;Cell&#x5B9E;&#x4F8B;&#xFF1A; 12345678910111213141516override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { // &#x6B64;&#x5904;&#x4FEE;&#x6539;&#x4E86;Identifier&#xFF0C;&#x5E76;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x6210;ItemCell&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x4E3A;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x8BBE;&#x7F6E;&#x5176;&#x6210;&#x5458;&#x53D8;&#x91CF; // let cell = tableView.dequeueReusableCell(withIdentifier: &quot;UITableViewCell&quot;, for: indexPath) let cell = tableView.dequeueReusableCell(withIdentifier: &quot;ItemCell&quot;, for: indexPath) as! ItemCell // Configure the cell... let item = itemStore.allItems[indexPath.row] // cell.textLabel?.text = item.name // &#x539F;&#x5148;&#x7684;&#x5B57;&#x6BB5;&#x90FD;&#x6539;&#x6210;&#x65B0;&#x7684; // cell.detailTextLabel?.text = &quot;$\(item.valueInDollars)&quot; cell.nameLable.text = item.name cell.serialNumberLabel.text = item.serialNumber cell.valueLabel.text = &quot;$\(item.valueInDollars)&quot; return cell} &#x6BCF;&#x6B21;&#x8C03;&#x7528;dequeueResableCell&#x8FD4;&#x56DE;UITableViewCell&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x4E00;&#x5B9A;&#x662F;&#x6B64;&#x524D;&#x521B;&#x5EFA;&#x597D;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x4ECE;&#x961F;&#x5217;&#x91CC;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x521B;&#x5EFA;&#x7684;&#x5462;&#xFF1F;&#x6211;&#x5224;&#x65AD;&#x5E94;&#x8BE5;&#x662F;&#x52A0;&#x8F7D;storyboard&#x65F6;&#xFF0C;&#x77E5;&#x9053;&#x6B64;UITableView&#x7684;Cell&#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x4E3A;&#x4E4B;&#x521B;&#x5EFA;&#x6240;&#x9700;&#x8981;&#x7684;Cell&#x5BF9;&#x8C61;&#xFF0C;&#x4E4B;&#x540E;&#x585E;&#x5230;&#x961F;&#x5217;&#x91CC;&#x3002; 1.5 &#x52A8;&#x6001;&#x8BBE;&#x5B9A;cell&#x7684;&#x884C;&#x9AD8; &#x81EA;&#x52A8;&#x9009;&#x62E9;Cell&#x7684;&#x9AD8;&#x5EA6;&#x4F5C;&#x4E3A;tableView&#x7684;&#x884C;&#x9AD8;&#x3002;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#x5206;&#x4E24;&#x6B65;&#xFF1A; &#x4E00;&#x3001;&#x6DFB;&#x52A0;&#x4ECE;nameLabel&#x5230;serialNumberLabel&#x7684;Vertical Spacing&#x7EA6;&#x675F; &#x4E8C;&#x3001;&#x4FEE;&#x6539;tableView&#x7684;viewDidLoad()&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x884C;&#x9AD8;&#x8BBE;&#x7F6E; &#x4E66;&#x4E2D;&#x8BF4;&#xFF1A;UITableViewCell&#x7684;&#x7EA6;&#x675F;&#x5E94;&#x8BE5;&#x8DB3;&#x4EE5;&#x8BA9;&#x5B83;&#x77E5;&#x9053;&#x81EA;&#x5DF1;&#x7684;&#x9AD8;&#x5EA6;&#xFF0C;&#x800C;&#x76EE;&#x524D;&#x7684;&#x7EA6;&#x675F;&#x8FD8;&#x4E0D;&#x591F;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x5C31;&#x591F;&#x4E86;&#x5462;&#xFF1F; P365&#xFF0C;&#x5728;&#x672C;&#x6B65;&#x4E2D;&#x9009;&#x4E2D;nameLabel&#xFF0C;Ctrl&#x62D6;&#x62FD;&#x5230;serialNumberLabel&#xFF0C;&#x5E76;&#x9009;&#x62E9;Vertical Spacing&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x4E48;&#x64CD;&#x4F5C;&#xFF1F;&#x5728;Prototype Cells&#x8FD9;&#x4E2A;&#x754C;&#x9762;&#x4E0A;&#x4E00;&#x5171;&#x8BBE;&#x7F6E;&#x4E86;&#x51E0;&#x4E2A;&#x7EA6;&#x675F;&#x9879;&#xFF1F; &#x6B64;&#x524D;&#x5728;P356&#x4E2D;&#x8BBE;&#x7F6E;&#x8FC7;5&#x4E2A;&#xFF1A; 1. &#x5DE6;&#x4E0A;Label&#x6DFB;&#x52A0;&#x4E86;&#x4E0A;&#x3001;&#x5DE6;&#x8DDD;&#x79BB;&#x5BB9;&#x5668;&#x7684;&#x8FB9;&#x8DDD; 2. &#x5DE6;&#x4E0B;Label&#x6DFB;&#x52A0;&#x4E86;&#x4E0E;&#x5DE6;&#x4E0A;Label&#x7684;&#x5DE6;&#x5BF9;&#x9F50; 3. &#x5DE6;&#x4E0B;Label&#x6DFB;&#x52A0;&#x4E86;&#x4E0B;&#x8DDD;&#x79BB;&#x5BB9;&#x5668;&#x7684;&#x8FB9;&#x8DDD; 4. &#x53F3;Label&#x6DFB;&#x52A0;&#x4E86;&#x4E0E;&#x5BB9;&#x5668;&#x7684;&#x53F3;&#x8FB9;&#x8DDD;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x4E86;&#x7AD6;&#x76F4;&#x65B9;&#x5411;&#x5C45;&#x4E2D; 5. &#x5DE6;&#x4E0B;Label&#x5728;size inspector&#x4E2D;&#x8BBE;&#x7F6E;Vertical Content Hugging Priority=250&#xFF0C;Vertical Content Compression Resistance Priority=749 &#x8BF4;&#x662F;&#x7B2C;13&#x7AE0;&#x8BB2;&#x5177;&#x4F53;&#x542B;&#x4E49; 12345678910111213141516override func viewDidLoad() { super.viewDidLoad() // Uncomment the following line to preserve selection between presentations // self.clearsSelectionOnViewWillAppear = false // Uncomment the following line to display an Edit button in the navigation bar for this view controller. // self.navigationItem.rightBarButtonItem = self.editButtonItem() let statusBarHeight = UIApplication.shared.statusBarFrame.height let insets = UIEdgeInsets(top:statusBarHeight, left:0, bottom:0, right:0) tableView.contentInset = insets tableView.scrollIndicatorInsets = insets tableView.rowHeight = UITableViewAutomaticDimension tableView.estimatedRowHeight = 65} &#x4E66;&#x4E2D;&#x8BF4;&#xFF1A;&#x8BBE;&#x7F6E;tableView&#x7684;&#x884C;&#x9AD8;&#x4E3A;UITableViewAutomaticDimension&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#xFF0C;&#x4E0E;&#x5176;&#x5728;tableView&#x52A0;&#x8F7D;&#x65F6;&#x8BF7;&#x6C42;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x683C;&#x7684;&#x9AD8;&#x5EA6;&#xFF0C;&#x4E0D;&#x5982;&#x8BBE;&#x7F6E;&#x6B64;&#x5C5E;&#x6027;&#x5141;&#x8BB8;&#x5C06;&#x90E8;&#x5206;&#x6027;&#x80FD;&#x6210;&#x672C;&#x63A8;&#x8FDF;&#x5230;&#x7528;&#x6237;&#x5F00;&#x59CB;&#x6EDA;&#x52A8;&#x4E3A;&#x6B62;&#x3002;&#x539F;&#x56E0;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#xFF1F; 2 &#x8BA9;&#x5B57;&#x4F53;&#x968F;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x52A8;&#x6001;&#x8C03;&#x6574; 2.1 &#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x5982;&#x4F55;&#x5F71;&#x54CD;app&#x5185;&#x5B57;&#x4F53; &#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E; &gt; &#x901A;&#x7528; &gt; &#x8F85;&#x52A9;&#x529F;&#x80FD; &gt; &#x66F4;&#x5927;&#x5B57;&#x4F53; &#x53EF;&#x4EE5;&#x8C03;&#x6574;&#x5B57;&#x53F7;&#xFF0C;&#x5728;app&#x5185;&#x90E8;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x914D;&#x7F6E;&#x5C31;&#x80FD;&#x8BA9;&#x5B57;&#x4F53;&#x968F;&#x8BE5;&#x8BBE;&#x7F6E;&#x53D8;&#x5316;&#x3002; &#x4E00;&#x3001;&#x5728;Interface Builder&#x4E2D;&#x5BF9;&#x5B57;&#x4F53;&#x4F5C;&#x5982;&#x4E0B;&#x8BBE;&#x7F6E;&#xFF1A; &#x7CFB;&#x7EDF;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x4F53;&#x505A;&#x4E86;&#x5982;&#x4E0B;&#x5B9A;&#x4E49;&#xFF1A; &#x4E8C;&#x3001;&#x8986;&#x76D6;ItemCell&#x7684;awakeFromNib()&#x51FD;&#x6570;&#x3002; &#x4E66;&#x4E2D;&#x8BF4;&#xFF1A;&#x5F53;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x4ECE;&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x8F7D;&#x65F6;&#xFF08;&#x6B64;&#x5904;&#x662F;storyboard&#x6587;&#x4EF6;&#xFF09;&#xFF0C;&#x4F1A;&#x5BF9;&#x8BE5;&#x5BF9;&#x8C61;&#x8C03;&#x7528;&#x6B64;&#x51FD;&#x6570;&#x3002; &#x6B64;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;ItemCell&#x5185;&#x6240;&#x6709;&#x6587;&#x672C;&#x63A7;&#x4EF6;&#x7684;adjustsFontForContentSizeCategory &#x5F00;&#x5173;&#x7F6E;&#x4E3A;true&#xFF0C;&#x8868;&#x660E;&#x5B83;&#x7684;&#x5B57;&#x4F53;&#x8981;&#x53C2;&#x7167;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x3002; 1234567override func awakeFromNib() { super.awakeFromNib() // Initialization code nameLabel.adjustsFontForContentSizeCategory = true serialNumberLabel.adjustsFontForContentSizeCategory = true valueLabel.adjustsFontForContentSizeCategory = true} &#x5982;&#x679C;&#x6CA1;&#x6709;&#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x65B0;&#x521B;&#x5EFA;&#x7684;cell&#x91CC;&#x7684;&#x5B57;&#x4F53;&#x4F1A;&#x968F;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; &#x6700;&#x521D;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x4E86;&#x5C0F;&#x5B57;&#x4F53;&#xFF0C;&#x521B;&#x5EFA;&#x524D;&#x4E09;&#x884C;&#x6570;&#x636E;&#xFF0C;&#x4E4B;&#x540E;&#x628A;&#x7CFB;&#x7EDF;&#x5B57;&#x4F53;&#x8C03;&#x4E3A;&#x5927;&#x5B57;&#x4F53;&#xFF0C;&#x518D;&#x56DE;&#x5230;app&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x540E;&#x4E24;&#x884C;&#x6570;&#x636E;&#x5C31;&#x662F;&#x5927;&#x5B57;&#x4F53;&#xFF0C;&#x4F46;&#x524D;&#x9762;&#x7684;&#x4E0D;&#x4F1A;&#x88AB;&#x5237;&#x65B0;&#x3002;&#x53EA;&#x6709;&#x5728;&#x7B2C;&#x4E8C;&#x6B65;&#x4E2D;&#x8BBE;&#x7F6E;&#x4E86;adjustsFontForContentSizeCategory&#x5F00;&#x5173;&#xFF0C;&#x63A7;&#x4EF6;&#x624D;&#x4F1A;&#x5728;&#x91CD;&#x65B0;&#x663E;&#x793A;&#x7684;&#x65F6;&#x5019;&#x5237;&#x65B0;&#x5B57;&#x4F53;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十一]]></title>
    <url>%2F2017%2F07%2F30%2F2017%2F0730iOSProgrammingBNRG11%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x7EE7;&#x7EED;&#x4ECB;&#x7ECD;UITableView&#xFF0C;&#x5982;&#x4F55;&#x8FDB;&#x5165;&#x7F16;&#x8F91;&#x6A21;&#x5F0F;&#xFF0C;&#x54CD;&#x5E94;&#x7528;&#x6237;&#x7684;&#x589E;&#x5220;&#x64CD;&#x4F5C;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - UITableView&#x7684;&#x7F16;&#x8F91;&#x6A21;&#x5F0F; - Alerts&#x7684;&#x4F7F;&#x7528; 1 TableView&#x7684;&#x6574;&#x4F53;&#x6784;&#x9020; 1.1 Header&#x548C;Footer TableView&#x7684;Header&#x6709;Table Header&#x548C;Section Header&#xFF1B;&#x540C;&#x6837;&#xFF0C;Footer&#x6709;Table Footer&#x548C;Section Footer&#xFF1A; ## 1.2 &#x5982;&#x4F55;&#x4E3A;TableView&#x521B;&#x5EFA;Table Header&#xFF1F; &#x53EA;&#x6709;&#x4E00;&#x6B65;&#xFF1A;&#x5728;Interface Builder&#x4E2D;&#x5411;TableView&#x7684;&#x9876;&#x90E8;&#x62D6;&#x5165;&#x4E00;&#x4E2A;View&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x4E2A;View&#x91CC;&#x653E;&#x7F6E;&#x6309;&#x94AE;&#x4E86; &#x56E0;&#x6B64;&#x6240;&#x8C13;&#x7684;Table Header&#x53EA;&#x662F;&#x5728;TableView&#x7684;&#x4E0A;&#x9762;&#x653E;&#x4E86;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;View&#xFF0C;&#x4ED6;&#x5E76;&#x4E0D;&#x662F;TableView&#x4F53;&#x7CFB;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;Table Footer&#x4E5F;&#x4E00;&#x6837;&#x3002; Section Header&#x5E94;&#x8BE5;&#x4F1A;&#x4E0D;&#x540C;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x8981;&#x663E;&#x793A;&#x5230;TableView&#x7684;&#x5185;&#x90E8;&#x3002;&#x5982;&#x679C;&#x8981;&#x63D2;&#x5165;Section Header&#x5177;&#x4F53;&#x600E;&#x4E48;&#x64CD;&#x4F5C;&#x5462;&#xFF1F; 1.3 &#x5982;&#x4F55;&#x8FDB;&#x5165;Editing&#x6A21;&#x5F0F; UITableViewController&#x6709;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;isEditing&#x8868;&#x793A;&#x5F53;&#x524D;&#x662F;&#x5426;&#x5904;&#x4E8E;Editing&#x6A21;&#x5F0F;&#xFF0C; &#x6709;&#x4E00;&#x4E2A;&#x51FD;&#x6570;func setEditing(_ editing: Bool, animated: Bool)&#x8BBE;&#x7F6E;&#x5F53;&#x524D;&#x6A21;&#x5F0F; &#x56E0;&#x6B64;Edit&#x6309;&#x94AE;&#x7684;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A; 123456789@IBAction func toggleEditingMode(_ sender: UIButton) { if isEditing { // &#x5F53;&#x524D;&#x5904;&#x4E8E;editing&#x6A21;&#x5F0F; sender.setTitle(&quot;Edit&quot;, for: .normal) // &#x4FEE;&#x6539;Edit&#x6309;&#x94AE;&#x6587;&#x5B57; setEditing(false, animated: true) // &#x64A4;&#x9500;Edit&#x6A21;&#x5F0F; } else { // &#x5F53;&#x524D;&#x4E0D;&#x662F;Editing&#x6A21;&#x5F0F; sender.setTitle(&quot;Done&quot;, for: .normal) // &#x4FEE;&#x6539;Edit&#x6309;&#x94AE;&#x6587;&#x5B57; setEditing(true, animated: true) // &#x8FDB;&#x5165;Edit&#x6A21;&#x5F0F; }} &#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6807;&#x5FD7;&#xFF0C;&#x4E4B;&#x540E;&#x7CFB;&#x7EDF;&#x4F1A;&#x5212;&#x5165;/&#x5212;&#x51FA;&#x53F3;&#x4FA7;&#x7684;&#x56FE;&#x6807;&#x3002;&#x6839;&#x636E;&#x7B2C;&#x4E00;&#x7AE0;&#x53EF;&#x4EE5;&#x63A8;&#x65AD;&#xFF0C;&#x8FD9;&#x4E2A;setEditing(_ animated:)&#x7684;&#x64CD;&#x4F5C;&#x5E94;&#x8BE5;&#x901A;&#x8FC7;setNeedsDispaly`&#x4E4B;&#x7C7B;&#x7684;&#x64CD;&#x4F5C;&#x89E6;&#x53D1;&#x4E86;&#x754C;&#x9762;&#x5237;&#x65B0;&#xFF0C;&#x6216;&#x8005;&#x901A;&#x8FC7;animate&#x89E6;&#x53D1;&#x4E86;&#x52A8;&#x753B;&#x3002; 1.4 &#x5982;&#x4F55;&#x5220;&#x9664;&#x4E00;&#x6761;&#x8BB0;&#x5F55; &#x8FDB;&#x5165;Editing&#x540E;&#x7684;&#x754C;&#x9762;&#x4EA4;&#x4E92;&#xFF0C;&#x662F;TableView&#x9ED8;&#x8BA4;&#x63D0;&#x4F9B;&#x7684;&#x3002; &#x53EF;&#x4EE5;&#x70B9;&#x51FB;&#x5DE6;&#x8FB9;&#x7EA2;&#x8272;&#x6309;&#x94AE;&#x89E6;&#x53D1;&#x5220;&#x9664;&#xFF0C;&#x8FD9;&#x4E9B;&#x4E0D;&#x9700;&#x8981;&#x7A0B;&#x5E8F;&#x5458;&#x63A7;&#x5236;&#x3002;&#x4F46;&#x662F;&#x6839;&#x636E;&#x7B2C;10&#x7AE0;&#x4ECB;&#x7ECD;&#x7684;TableView&#x8FD0;&#x884C;&#x539F;&#x7406;&#xFF0C;&#x4E00;&#x65E6;&#x70B9;&#x51FB;&#x4E86;&#x5220;&#x9664;&#x6309;&#x94AE;&#xFF0C;&#x9700;&#x8981;&#x6570;&#x636E;&#x6E90;&#x5C06;&#x8BE5;&#x6570;&#x636E;&#x5220;&#x9664;&#xFF0C;M&#x548C;V&#x914D;&#x5408;&#x624D;&#x80FD;&#x5171;&#x540C;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x5220;&#x9664;&#x3002;&#x5177;&#x4F53;&#x9700;&#x8981;&#x4E24;&#x6B65;&#xFF1A; 1. &#x5728;data source&#x4E2D;&#x5B9E;&#x73B0;tableView(_:commit:forRow:)&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x5C5E;&#x4E8E;TableViewDataSource&#x534F;&#x8BAE;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x8BE5;&#x65B9;&#x6CD5;&#xFF0C;&#x70B9;&#x51FB;Delete&#x6309;&#x94AE;&#x662F;&#x6CA1;&#x54CD;&#x5E94;&#x7684; 2. &#x5728;tableView(_:commit:forRow:)&#x65B9;&#x6CD5;&#x4E2D;&#x5220;&#x9664;&#x6570;&#x636E;&#x6E90;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x662F;&#x5BF9;M&#x64CD;&#x4F5C;&#xFF1B;&#x8C03;&#x7528;TableView&#x7684;tableView(_:commit:forRowAt:)&#x65B9;&#x6CD5;&#x5220;&#x9664;&#x4E00;&#x884C;&#xFF0C;&#x8FD9;&#x662F;&#x5BF9;V&#x64CD;&#x4F5C; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) { if editingStyle == .delete { // &#x5982;&#x679C;&#x6267;&#x884C;&#x7684;&#x662F;&#x5220;&#x9664;&#x64CD;&#x4F5C; let item = itemStore.allItems[indexPath.row] itemStore.removeItem(item) // M&#x64CD;&#x4F5C;&#xFF0C;&#x5220;&#x9664;&#x6570;&#x636E;&#x6E90;&#x4E2D;&#x7684;&#x6570;&#x636E; tableView.deleteRows(at: [indexPath], with: .automatic) // V&#x64CD;&#x4F5C;&#xFF0C;&#x5220;&#x9664;&#x89C6;&#x56FE;&#x4E2D;&#x7684;&#x4E00;&#x884C; } else if editingStyle == .insert { ... } } tableView(_:commit:forRow:)&#x65B9;&#x6CD5;&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x5C31;&#x80FD;&#x5224;&#x65AD;&#xFF0C;&#x5B83;&#x4E0D;&#x6B62;&#x7528;&#x4E8E;&#x5904;&#x7406;&#x5220;&#x9664;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x5176;&#x4ED6;&#x7684;&#x7F16;&#x8F91;&#x64CD;&#x4F5C;&#xFF0C;&#x5177;&#x4F53;&#x662F;&#x54EA;&#x79CD;&#x64CD;&#x4F5C;&#x89C6;editingStyle&#x800C;&#x5B9A;&#x3002; &#x6B64;&#x5904;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x597D;&#x50CF;&#x6709;&#x70B9;&#x95EE;&#x9898;&#xFF0C;data source&#x6267;&#x884C;View&#x64CD;&#x4F5C;&#xFF0C;&#x4E0D;&#x662F;&#x5E95;&#x5C42;&#x5BF9;&#x8C61;&#x4F9D;&#x8D56;&#x4E0A;&#x5C42;&#x5BF9;&#x8C61;&#x4E86;&#x4E48;&#xFF1F;&#x8FD9;&#x4E2A;&#x5220;&#x9664;&#x52A8;&#x4F5C;&#x7531;&#x63A7;&#x4EF6;&#x53D1;&#x8D77;&#xFF0C;&#x5E94;&#x8BE5;&#x9996;&#x5148;&#x544A;&#x8BC9;VC&#xFF0C;&#x518D;&#x7531;VC&#x8C03;&#x6574;&#x754C;&#x9762;&#xFF0C;&#x901A;&#x77E5;data source&#x624D;&#x7B26;&#x5408;MVC&#x539F;&#x5219;&#x5427;&#xFF1F; 1.5 &#x5982;&#x4F55;&#x8C03;&#x6574;TableView&#x4E2D;&#x8BB0;&#x5F55;&#x7684;&#x987A;&#x5E8F; &#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x7684;TableView&#xFF0C;&#x8FDB;&#x5165;Editing&#x6A21;&#x5F0F;&#x540E;&#x662F;&#x4E0D;&#x80FD;&#x8C03;&#x6574;&#x987A;&#x5E8F;&#x7684;&#xFF0C;&#x7531;1.4&#x4E0D;&#x96BE;&#x731C;&#x6D4B;&#x80AF;&#x5B9A;&#x662F;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;data source&#x534F;&#x8BAE;&#x7684;&#x67D0;&#x4E2A;&#x63A5;&#x53E3;&#x3002;&#x662F;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x540D;&#x5B57;&#x53EB; tableView(_:moveRowAt:to:) &#x548C;1.4&#x7C7B;&#x4F3C;&#xFF0C;&#x5B9E;&#x73B0;&#x8BE5;&#x63A5;&#x53E3;&#x53EA;&#x9700;&#x8981;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x8C03;&#x6574;&#x6570;&#x636E;&#x7684;&#x987A;&#x5E8F;&#x5373;&#x53EF;&#x3002;&#x8FD9;&#x91CC;&#x4E0D;&#x9700;&#x8981;&#x901A;&#x77E5;TableView&#x8FDB;&#x884C;V&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x64CD;&#x4F5C;&#x662F;&#x901A;&#x8FC7;&#x7528;&#x6237;&#x5728;TableView&#x4E0A;&#x4EA4;&#x4E92;&#x81EA;&#x7136;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123override func tableView(_ tableView: UITableView, moveRowAt fromIndexPath: IndexPath, to destinationIndexPath: IndexPath) { itemStore.moveItem(from: fromIndexPath.row, to: destinationIndexPath.row) // M&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x6E90;&#x5373;&#x53EF;} &#x5F53;&#x7136;&#x5728;&#x6B64;&#x4E4B;&#x524D;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x6DFB;&#x52A0;itemStore&#x7684;mvoeItem&#x65B9;&#x6CD5; 1.6 &#x5982;&#x4F55;&#x5411;TableView&#x6DFB;&#x52A0;&#x4E00;&#x884C;&#x6570;&#x636E; &#x6309;&#x7167;&#x7B2C;10&#x7AE0;&#x7ED9;&#x51FA;&#x7684;TableView&#x539F;&#x7406;&#xFF0C;&#x6DFB;&#x52A0;&#x8BB0;&#x5F55;&#x5E94;&#x8BE5;&#x53EA;&#x9700;&#x8981;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x4F46;&#x8FD9;&#x53EA;&#x5B8C;&#x6210;&#x4E86;&#x4E00;&#x534A;&#xFF0C;&#x5728;&#x8FD0;&#x884C;&#x4E2D;&#x9014;&#x52A8;&#x6001;&#x6DFB;&#x52A0;&#x6570;&#x636E;&#x8FD8;&#x9700;&#x8981;&#x901A;&#x77E5;TableView&#x66F4;&#x65B0;&#xFF1A; 1. &#x5411;&#x6570;&#x636E;&#x6E90;&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x6570;&#x636E; 2. &#x901A;&#x77E5;TableView&#x6DFB;&#x52A0;&#x4E00;&#x884C; 12345678@IBAction func addNewItem(_ sender: UIButton){ let newItem = itemStore.createItem() // &#x5F80;&#x6570;&#x636E;&#x6E90;&#x6DFB;&#x52A0;&#x4E00;&#x6761;&#x6570;&#x636E; if let index = itemStore.allItems.index(of: newItem){ let indexPath = IndexPath(row: index, section: 0) tableView.insertRows(at:[indexPath], with:.automatic) // &#x901A;&#x77E5;TableView&#x589E;&#x52A0;&#x4E00;&#x884C; }} 2 &#x663E;&#x793A;Alerts 2.1 Alerts&#x7684;&#x4E24;&#x79CD;&#x98CE;&#x683C; &#x53EF;&#x4EE5;&#x901A;&#x8FC7;UIAlertControllerStyle&#x6765;&#x6307;&#x5B9A;Alert&#x7684;&#x663E;&#x793A;&#x98CE;&#x683C; ## 2.2 &#x4F7F;&#x7528;actionSheet Alert&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4; &#x5148;&#x6765;&#x770B;&#x8FD9;&#x79CD;&#x98CE;&#x683C;&#x754C;&#x9762;&#x7684;&#x5B8C;&#x6574;&#x5C55;&#x73B0;&#xFF1A; &#x5B9E;&#x73B0;&#x8FD9;&#x79CD;&#x63D0;&#x793A;&#x5171;&#x5206;&#x4E09;&#x6B65;&#xFF1A; 1. &#x6784;&#x9020;UIAlertController&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x6307;&#x5B9A;Title&#x548C;Message&#x3002;&#x4E0A;&#x56FE;&#x4E2D;&#x7B2C;&#x4E00;&#x884C;&#x7C97;&#x4F53;&#x7070;&#x5B57;&#x5C31;&#x662F;Title&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x7070;&#x5B57;&#x5C31;&#x662F;Message&#x3002; 2. &#x6784;&#x9020;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x7684;UIAlertAction&#x5B9E;&#x4F8B;&#xFF0C;&#x6307;&#x5B9A;Title&#x3001;&#x98CE;&#x683C;&#x548C;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x5C06;&#x8FD9;&#x4E9B;&#x5B9E;&#x4F8B;&#x6DFB;&#x52A0;&#x5230;UIAlertController&#x5B9E;&#x4F8B;&#x4E2D;&#x3002;&#x4E0A;&#x56FE;&#x4E2D;&#x7684;Delete&#x548C;Cancel&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;UIAlertAction&#x5B9E;&#x4F8B;&#x3002; 3. &#x8C03;&#x7528;VC&#x7684;present&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x4F20;&#x5165;UIAlertController&#x5B9E;&#x4F8B;&#x5B8C;&#x6210;&#x663E;&#x793A;&#x3002; &#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819let item = itemStore.allItems[indexPath.row]// &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x6784;&#x9020;UIAlertController&#x5B9E;&#x4F8B;let title = &quot;Delete \(item.name)?&quot;let message = &quot;Are you sure you want to delete this item?&quot;let ac = UIAlertController(title: title, message:message, preferredStyle:.actionSheet)// &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x5206;&#x522B;&#x6784;&#x9020;&#x4E24;&#x4E2A;UIAlertAction&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x5230;aclet cancelAction = UIAlertAction(title: &quot;Cancel&quot;, style: .cancel, handler: nil)ac.addAction(cancelAction)let deleteAction = UIAlertAction(title: &quot;Delete&quot;, style: .destructive, handler: {(action) -&gt; Void in // &#x539F;&#x5148;&#x7684;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x4F5C;&#x4E3A;&#x95ED;&#x5305;&#x4F20;&#x5165;AA&#x7684;handler&#x53C2;&#x6570; self.itemStore.removeItem(item) self.tableView.deleteRows(at: [indexPath], with: .automatic)})ac.addAction(deleteAction)// &#x7B2C;&#x4E09;&#x6B65;&#xFF1A;&#x5F39;&#x51FA;&#x63D0;&#x793A;&#x6846;present(ac, animated: true, completion: nil)]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记十]]></title>
    <url>%2F2017%2F07%2F29%2F2017%2F0729iOSProgrammingBNRG10%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x7AE0;&#x5F15;&#x5165;iOS&#x4E00;&#x79CD;&#x5E38;&#x7528;&#x7684;UI&#x5143;&#x7D20;&#x2014;&#x2014;UITableView&#xFF0C;&#x672C;&#x7AE0;&#x4ECB;&#x7ECD;&#x5B83;&#x7684;&#x6570;&#x636E;&#x5448;&#x73B0;&#x65B9;&#x6CD5;&#xFF0C;&#x4E0B;&#x4E00;&#x7AE0;&#x4ECB;&#x7ECD;&#x7F16;&#x8F91;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - UITableView&#x7684;&#x8FD0;&#x4F5C;&#x539F;&#x7406; - &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570; - &#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219; 1 UITableViewController 1.1 UITableViewController&#x7684;&#x8FD0;&#x4F5C;&#x539F;&#x7406; &#x5728;Windows&#x4E0B;&#x5236;&#x4F5C;ListCtrl&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4;&#x662F;&#x521B;&#x5EFA;ListCtrl&#x7684;&#x5B9E;&#x4F8B;&#x540E;&#xFF0C;&#x5411;&#x8BE5;&#x5B9E;&#x4F8B;&#x5FAA;&#x73AF;&#x63D2;&#x5165;&#x6570;&#x636E;&#x3002;UITableViewConroller&#x7684;&#x8FD0;&#x4F5C;&#x6A21;&#x5F0F;&#x5219;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#xFF1A;&#x5B83;&#x628A;MVC&#x7684;&#x804C;&#x8D23;&#x5212;&#x5206;&#x66F4;&#x660E;&#x786E;&#xFF0C; 1. &#x5F15;&#x5165;&#x4E86;data source&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x53EA;&#x8D1F;&#x8D23;&#x63D0;&#x4F9B;&#x6570;&#x636E;&#xFF0C;&#x5373;Model&#x3002;&#x901A;&#x8FC7;&#x534F;&#x8BAE;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x89D2;&#x8272;&#x3002; 2. View&#x5728;&#x9700;&#x8981;&#x663E;&#x793A;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ECE;data source&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x901A;&#x8FC7;data source &#x534F;&#x8BAE;&#x6765;&#x901A;&#x8BAF;&#x3002;&#x56E0;&#x6B64;&#x5728;Windows&#x4E0B;&#x64CD;&#x4F5C;ListCtrl&#x7684;&#x751F;&#x6210;&#x6570;&#x636E;&#x5E76;&#x6DFB;&#x52A0;&#x5230;ListCtrl&#x7684;&#x8FD9;&#x79CD;&#x5FAA;&#x73AF;&#x64CD;&#x4F5C;&#x5C31;&#x4F5C;&#x4E3A;&#x8FD9;&#x4E00;&#x5C42;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x88AB;VC&#x5C01;&#x88C5;&#x8D77;&#x6765;&#xFF0C;&#x4E0D;&#x5FC5;&#x7A0B;&#x5E8F;&#x5458;&#x81EA;&#x5DF1;&#x5199;&#x4E86; 3. &#x901A;&#x5E38;&#x7531;VC&#x81EA;&#x5DF1;&#x626E;&#x6F14;data source&#xFF0C;&#x56E0;&#x6B64;VC&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x5176;&#x534F;&#x8BAE;&#x3002; &#x53EF;&#x4EE5;&#x505A;&#x4E00;&#x4E2A;&#x7C7B;&#x6BD4;&#xFF1A;&#x5F53;&#x6309;&#x94AE;&#x88AB;&#x6309;&#x4E0B;&#xFF0C;&#x6309;&#x94AE;&#x4F1A;&#x628A;&#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#x59D4;&#x6258;&#x7ED9;VC&#x6765;&#x5904;&#x7406;&#xFF0C;&#x56E0;&#x4E3A;&#x6309;&#x94AE;&#x53EA;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x5C55;&#x73B0;&#x6309;&#x4E0B;&#x3001;&#x62AC;&#x8D77;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x800C;VC&#x80FD;&#x62FF;&#x5230;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x6709;&#x5B83;&#x624D;&#x77E5;&#x9053;&#x8BE5;&#x600E;&#x4E48;&#x5904;&#x7406;&#x3002;UITableView&#x662F;&#x628A;&#x201C;&#x8BE5;&#x5C55;&#x73B0;&#x591A;&#x5C11;&#x884C;&#x6570;&#x636E;&#x201D;&#x3001;&#x201C;&#x6BCF;&#x4E00;&#x884C;&#x6570;&#x636E;&#x662F;&#x4EC0;&#x4E48;&#x201D;&#x8FD9;&#x4E9B;&#x903B;&#x8F91;&#x4E5F;&#x5C01;&#x88C5;&#x6210;&#x4E86;&#x7C7B;&#x4F3C;&#x201C;&#x6309;&#x94AE;&#x88AB;&#x6309;&#x4E0B;&#x201D;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x59D4;&#x6258;&#x7ED9;data source&#x6765;&#x5904;&#x7406;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#x4F60;&#x4E0D;&#x5FC5;&#x5728;&#x5173;&#x5FC3;&#x5982;&#x4F55;&#x628A;&#x6570;&#x636E;&#x521D;&#x59CB;&#x5316;&#x7ED9;View&#xFF0C;&#x800C;&#x53EA;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x672C;&#x8EAB;&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x76F8;&#x5E94;&#x7684;&#x534F;&#x8BAE;&#x63A5;&#x53E3;&#xFF0C;&#x7B49;&#x7740;view&#x6765;&#x8C03;&#x7528;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x4E66;&#x4E2D;&#x7684;&#x56FE;10.4&#x63CF;&#x8FF0;&#x4E86;TableView&#x4E0B;&#x7684;&#x5404;MVC&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;UITableViewController&#x9664;&#x4E86;&#x8981;&#x9075;&#x5B88;UITableViewDataSource&#x534F;&#x8BAE;&#xFF0C;&#x5C65;&#x884C;Model&#x7684;&#x804C;&#x8D23;&#x4EE5;&#x5916;&#xFF0C;&#x8FD8;&#x8981;&#x9075;&#x5B88;UITableViewDelegate&#x534F;&#x8BAE;&#xFF0C;&#x8FD9;&#x662F;&#x8981;&#x5C65;&#x884C;Controller&#x7684;&#x804C;&#x8D23;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;TableView&#x4E0D;&#x50CF;Button&#x90A3;&#x4E48;&#x7B80;&#x5355;&#xFF0C;Button&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x88AB;&#x6309;&#x4E0B;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;TableView&#x6709;&#x4E00;&#x7CFB;&#x5217;&#x590D;&#x6742;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x90FD;&#x8981;&#x59D4;&#x6258;&#x7ED9;Controller&#x6765;&#x505A;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x7528;UITableViewDelegate&#x534F;&#x8BAE;&#x6765;&#x5B9A;&#x4E49;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x3002; ## 1.2 UITableViewController&#x8FD9;&#x79CD;&#x8FD0;&#x4F5C;&#x65B9;&#x5F0F;&#x7684;&#x597D;&#x5904; &#x4E4B;&#x524D;&#x591A;&#x6B21;&#x63D0;&#x5230;&#x8FC7;&#x7684;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x628A;UI&#x903B;&#x8F91;&#x548C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5206;&#x79BB;&#x5F00;&#x4E86;&#x3002;UI&#x903B;&#x8F91;&#x5305;&#x62EC;&#x884C;&#x4E3A;&#x903B;&#x8F91;&#x548C;&#x6570;&#x636E;&#x903B;&#x8F91;&#xFF0C;&#x884C;&#x4E3A;&#x903B;&#x8F91;&#x5982;&#x70B9;&#x51FB;&#x67D0;&#x4E2A;Item&#x3001;&#x663E;&#x793A;&#x67D0;&#x884C;&#x7B49;&#xFF0C;&#x6570;&#x636E;&#x903B;&#x8F91;&#x5305;&#x62EC;&#x5305;&#x542B;&#x591A;&#x5C11;Item&#x9879;&#xFF0C;&#x6BCF;&#x4E00;&#x9879;&#x662F;&#x4EC0;&#x4E48;&#x7B49;&#xFF1B;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5219;&#x662F;&#x70B9;&#x51FB;&#x4E86;&#x67D0;&#x4E2A;Item&#x4E4B;&#x540E;&#x5E94;&#x8BE5;&#x5C55;&#x73B0;&#x4EC0;&#x4E48;View&#x4EE5;&#x53CA;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#x3002; &#x5206;&#x79BB;&#x5F00;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E0E;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7279;&#x6B8A;&#x7684;&#x5B9A;&#x5236;&#xFF0C;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x72EC;&#x7ACB;&#x7F16;&#x5199;&#xFF0C;&#x5DE5;&#x7A0B;&#x4E0A;&#x4FBF;&#x4E8E;&#x5206;&#x5DE5;&#xFF0C;&#x5982;&#x679C;&#x73B0;&#x5B9E;&#x6A21;&#x5757;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x53EF;&#x4EE5;&#x5F88;&#x5FEB;&#x5730;&#x628A;&#x6570;&#x636E;&#x5AC1;&#x63A5;&#x5230;&#x522B;&#x7684;&#x89C6;&#x56FE;&#xFF0C;&#x4FBF;&#x4E8E;&#x590D;&#x7528;&#x3002; 1.3 UITableDataSource&#x90FD;&#x63D0;&#x4F9B;&#x4EC0;&#x4E48; &#x5177;&#x4F53;&#x9700;&#x8981;&#x67E5;&#x770B;Xcode &#x7684;Document and API reference&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x4E2A;&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#xFF1A; 12func tableView(UITableView, cellForRowAt: IndexPath) // &#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;cellfunc tableView(UITableView, numberOfRowsInSection: Int) // &#x67D0;&#x4E00;&#x6BB5;&#x6709;&#x591A;&#x5C11;&#x884C; &#x5176;&#x4F59;&#x7684;&#x63A5;&#x53E3;&#x90FD;&#x662F;&#x53EF;&#x9009;&#x7684;&#x3002; 1.4 UITableView&#x7684;&#x9ED8;&#x8BA4;&#x5F62;&#x6001; &#x6BCF;&#x884C;cell&#x5BF9;&#x8C61;&#x7684;&#x5C55;&#x73B0;&#x5F62;&#x6001;&#x6784;&#x6210;&#x4E86;UITableView&#x7684;&#x5C55;&#x73B0;&#x5F62;&#x6001;&#x3002;Cell&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4E24;&#x90E8;&#x5206;&#xFF1A;contentView&#x548C;AccessoryView &#x5176;&#x4E2D;AccessoryView&#x53EF;&#x4EE5;&#x662F;icon&#x3001;button&#x6216;&#x4EC0;&#x4E48;&#x90FD;&#x6CA1;&#x6709;&#xFF0C;&#x8FD9;&#x901A;&#x8FC7;UITableViewCellAccessoryType&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x6765;&#x8BBE;&#x7F6E;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;UITableViewCellAccessoryType.none&#x3002;contentView&#x53C8;&#x5305;&#x542B;&#x4E09;&#x90E8;&#x5206;&#xFF1A;&#x4E24;&#x4E2A;UILabel&#x548C;&#x4E00;&#x4E2A;UIImageView&#x3002; &#x4ED6;&#x4EEC;&#x7684;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; &#x8868;&#x73B0;&#x5728;&#x754C;&#x9762;&#x4E0A;&#x5C31;&#x662F;&#xFF1A; &#x901A;&#x8FC7;&#x98CE;&#x683C;&#x8BBE;&#x5B9A;&#x53EF;&#x4EE5;&#x8C03;&#x6574;&#x8FD9;&#x4E09;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x5E03;&#x5C40;&#x5173;&#x7CFB;&#x3002; 1.5 &#x521B;&#x5EFA;UITableViewController&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4; &#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x5F15;&#x5165;TableView&#x76F8;&#x5173;&#x7C7B;&#x548C;&#x63A7;&#x4EF6;&#x3002; &#x672C;&#x4E66;&#x662F;&#x628A;TableVC&#x4F5C;&#x4E3A;&#x542F;&#x52A8;app&#x65F6;&#x7684;&#x521D;&#x59CB;VC&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x628A;Xcode&#x9ED8;&#x8BA4;&#x521B;&#x5EFA;&#x7684;VC&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x6A21;&#x677F;&#x90FD;&#x5220;&#x6389;&#x4E86;&#x3002;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x65B0;&#x7684;UITableViewController&#x5B50;&#x7C7B;&#x6587;&#x4EF6;&#xFF0C;&#x4ECE;&#x63A7;&#x4EF6;&#x5E93;&#x4E2D;&#x521B;&#x5148;&#x65B0;&#x7684;TableViewController&#xFF0C;&#x5E76;&#x5173;&#x8054;&#x5230;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x5B50;&#x7C7B;&#x4E0A;&#xFF0C;&#x8BBE;&#x7F6E;&#x4E3A;Initial VC&#x3002; &#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x3002; &#x672C;&#x4E66;&#x4E2D;&#x662F;Item&#x3001;ItemStore&#x7C7B;&#xFF0C;&#x524D;&#x8005;&#x8BB0;&#x5F55;&#x4E00;&#x6761;&#x6570;&#x636E;&#xFF0C;&#x540E;&#x8005;&#x8BB0;&#x5F55;Item&#x7684;&#x96C6;&#x5408;&#x3002; &#x7B2C;&#x4E09;&#x6B65;&#xFF0C;&#x6539;&#x5199;VC&#x7684;&#x4E09;&#x4E2A;&#x63A5;&#x53E3;&#x3002; 123func numberOfSections(in : UITableView) -&gt; Int // &#x8FD4;&#x56DE;TableView&#x6709;&#x51E0;&#x4E2A;&#x6BB5;func tableView(_ : UITableView, numberOfRowsInSection : Int) -&gt; Int // &#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x7684;&#x6BB5;&#x6709;&#x51E0;&#x884C;&#x6570;&#x636E;func tableView(_ : UITableView, cellForRowAt : IndexPath) -&gt; UITableViewCell // &#x8FD4;&#x56DE;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;cell TableView&#x53EF;&#x4EE5;&#x628A;&#x6570;&#x636E;&#x5206;&#x6BB5;&#x663E;&#x793A;&#xFF0C;&#x5982;&#x7CFB;&#x7EDF;&#x901A;&#x8BAF;&#x5F55;&#x5C31;&#x662F;&#x6309;&#x7167;&#x5B57;&#x6BCD;&#x5206;&#x6BB5;&#xFF1A; &#x7B2C;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x662F;Xcode&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;&#xFF0C;&#x9ED8;&#x8BA4;&#x8FD4;&#x56DE;0&#xFF0C;&#x5728;&#x672C;&#x7AE0;&#x53EA;&#x663E;&#x793A;1&#x4E2A;&#x6BB5;&#xFF0C;&#x56E0;&#x6B64;&#x6539;&#x4E3A;1&#x3002; &#x56E0;&#x4E3A;&#x53EA;&#x6709;1&#x6BB5;&#xFF0C;&#x6240;&#x4EE5;&#x7B2C;&#x4E8C;&#x4E2A;&#x63A5;&#x53E3;&#x4E0D;&#x5FC5;&#x5224;&#x65AD;&#x6BB5;&#x53F7;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x6761;&#x6570;&#x5373;&#x53EF;&#x3002; &#x7B2C;&#x4E09;&#x4E2A;&#x63A5;&#x53E3;Xcode&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x91CC;&#x4F7F;&#x7528;&#x4E86;&#x53EF;&#x91CD;&#x7528;&#x961F;&#x5217;&#x6765;&#x4FDD;&#x5B58;cell&#xFF0C;&#x6682;&#x65F6;&#x5148;&#x6CE8;&#x6389;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x521B;&#x5EFA;cell&#x5E76;&#x8FD4;&#x56DE;&#x3002; 1.6 &#x53EF;&#x91CD;&#x7528;UITableViewCells&#x7684;&#x4F5C;&#x7528;&#x662F;&#x4EC0;&#x4E48; Xcode&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4E86;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; 12345override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: &quot;reuseIdentifier&quot;, for: indexPath) // Configure the cell... return cell} func tableView(_ : UITableView, cellForRowAt : IndexPath) -&gt; UITableViewCell&#x8FD4;&#x56DE;&#x7684;&#x5185;&#x5BB9;&#x901A;&#x8FC7;UITableViewCell&#x5C01;&#x88C5;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x5C31;&#x597D;&#x50CF;&#x901A;&#x8FC7;&#x7801;&#x5934;&#x7684;&#x8D27;&#x7269;&#x8981;&#x4F7F;&#x7528;&#x96C6;&#x88C5;&#x7BB1;&#x5C01;&#x88C5;&#x8D77;&#x6765;&#x3002; &#x8D27;&#x7269;&#x4ECE;&#x4E00;&#x4E2A;&#x6E2F;&#x53E3;&#x88C5;&#x7BB1;&#x8FD0;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x6E2F;&#x53E3;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x8239;&#x53EA;&#x80FD;&#x88C5;100&#x4E2A;&#x7BB1;&#x5B50;&#xFF0C;&#x8FD0;&#x9001;1000&#x7BB1;&#x8D27;&#x7269;&#x5176;&#x5B9E;&#x4E0D;&#x9700;&#x8981;1000&#x4E2A;&#x7BB1;&#x5B50;&#xFF0C;&#x6709;100&#x4E2A;&#x5C31;&#x591F;&#x4E86;&#x3002; &#x6570;&#x636E;&#x4ECE;&#x5C4F;&#x5E55;&#x7684;&#x9876;&#x90E8;&#x6EDA;&#x52A8;&#x5230;&#x5C4F;&#x5E55;&#x5E95;&#x90E8;&#xFF0C;&#x518D;&#x6EDA;&#x51FA;&#x5C4F;&#x5E55;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x6709;&#x591A;&#x5C11;&#x6570;&#x636E;&#x5C31;&#x6784;&#x9020;&#x591A;&#x5C11;&#x4E2A;UITableViewCell&#xFF0C;&#x79FB;&#x51FA;&#x5C4F;&#x5E55;&#x7684;Cell&#x5B9E;&#x4F8B;&#x5C31;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x590D;&#x7528;&#x76DB;&#x653E;&#x5373;&#x5C06;&#x79FB;&#x5165;&#x7684;&#x6570;&#x636E;&#x4E86;&#x3002;&#x663E;&#x7136;&#x901A;&#x8FC7;&#x53EF;&#x91CD;&#x7528;UITableViewCells&#x53EF;&#x4EE5;&#x8282;&#x7701;&#x5185;&#x5B58;&#x5F00;&#x9500;&#x3002; 1.7 &#x600E;&#x4E48;&#x4F7F;&#x7528;&#x53EF;&#x91CD;&#x7528;UITableViewCells &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x9009;&#x4E2D;TableViewController&#x4E2D;&#x7684;Prototype Cells&#xFF0C;&#x4E3A;&#x8FD9;&#x91CC;&#x7684;Cell&#x53D6;&#x4E00;&#x4E2A;ID&#x586B;&#x5165;Identifier &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x5411;tableView.dequeueReusableCell&#x7533;&#x8BF7;&#x8BE5;ID&#x7684;Cell&#x5BF9;&#x8C61; 1234567override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = UITableViewCell(style: .value1, reuseIdentifier: &quot;UITableViewCell&quot;) // Get a new or recycled cell let cell = tableView.dequeueReusableCell(withIdentifier: &quot;UITableViewCell&quot;, for: indexPath) ... return cell} &#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x53EF;&#x91CD;&#x7528;&#x961F;&#x5217;&#x53EA;&#x8981;&#x4EE3;&#x7801;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x5728;InterfaceBuilder&#x4E2D;&#x8BBE;&#x7F6E;Identifier&#x5462;&#xFF1F;&#x5B83;&#x80CC;&#x540E;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; &#x4E00;&#x4E2A;datasource&#x53EF;&#x80FD;&#x670D;&#x52A1;&#x4E8E;&#x591A;&#x4E2A;UITableView&#xFF0C;&#x4E0D;&#x540C;&#x7684;UITableView&#x53EF;&#x80FD;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;UITableCell&#x5BF9;&#x8C61;&#x3002;&#x5F53;&#x96C6;&#x88C5;&#x7BB1;&#x670D;&#x52A1;&#x4E8E;&#x4E0D;&#x540C;&#x7684;&#x8D27;&#x8239;&#x7684;&#x65F6;&#x5019;&#x540E;&#xFF0C;&#x53EF;&#x80FD;&#x4ED6;&#x4EEC;&#x7684;&#x5C3A;&#x5BF8;&#x89C4;&#x683C;&#x90FD;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x663E;&#x7136;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#x72EC;&#x7ACB;&#x7684;&#x961F;&#x5217;&#x6765;&#x4FDD;&#x5B58;&#x8FD9;&#x4E9B;&#x96C6;&#x88C5;&#x7BB1;&#xFF0C;ID&#x5C31;&#x662F;&#x7528;&#x6765;&#x6807;&#x8BC6;&#x8FD9;&#x4E9B;&#x961F;&#x5217;&#x7684;&#x3002; &#x53EF;&#x91CD;&#x7528;&#x5BF9;&#x8C61;&#x6C60;&#x91CC;&#x5751;&#x7684;&#x4E2A;&#x6570;&#x4F9D;&#x8D56;&#x4E00;&#x5C4F;&#x53EF;&#x4EE5;&#x5BB9;&#x7EB3;&#x51E0;&#x884C;Cell&#xFF0C;&#x961F;&#x5217;&#x662F;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x8BE5;&#x7559;&#x591A;&#x5C11;&#x4E2A;&#x5751;&#x5462;&#xFF1F; 1.8 &#x600E;&#x6837;&#x8BA9;UITableView&#x9876;&#x90E8;&#x7559;&#x767D;&#x4EE5;&#x8BA9;&#x51FA;&#x72B6;&#x6001;&#x680F;&#xFF1F; iOS&#x7684;&#x72B6;&#x6001;&#x680F;&#x4F1A;&#x900F;&#x660E;&#x663E;&#x793A;&#x5728;app&#x7684;&#x4E0A;&#x9762;&#xFF0C;&#x6240;&#x4EE5;&#x59CB;&#x7EC8;&#x8981;&#x8003;&#x8651;&#x4E0D;&#x8981;&#x51FA;&#x73B0;&#x6587;&#x5B57;&#x53E0;&#x52A0;&#x7684;&#x60C5;&#x51B5;&#xFF1A; &#x4EFB;&#x4F55;&#x89C6;&#x56FE;&#x9876;&#x90E8;&#x5982;&#x679C;&#x6709;&#x6587;&#x5B57;&#xFF0C;&#x90FD;&#x8981;&#x8BA9;&#x51FA;&#x72B6;&#x6001;&#x680F;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678override func viewDidLoad() { super.viewDidLoad() // Get the height of the status bar let statusBarHeight = UIApplication.shared.statusBarFrame.height let insets = UIEdgeInsets(top: statusBarHeight, left: 0, bottom: 0, right: 0) tableView.contentInset = insets tableView.scrollIndicatorInsets = insets} &#x5728;&#x7B2C;6&#x7AE0;&#x6211;&#x4EEC;&#x901A;&#x8FC7;rootView.layoutMarginsGuide.leadingAnchor&#x951A;&#x70B9;&#x5BF9;&#x9F50;&#xFF0C;&#x4F7F;&#x5F97;&#x4F4D;&#x4E8E;&#x5730;&#x56FE;&#x9876;&#x90E8;&#x7684;SegmentedControl&#x63A7;&#x4EF6;&#x8BA9;&#x51FA;&#x4E86;&#x72B6;&#x6001;&#x680F;&#xFF0C;&#x8FD9;&#x91CC;&#x80FD;&#x5426;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C;&#x7684;&#x505A;&#x6CD5;&#x5462;&#xFF1F; 2 &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570; 2.1 &#x4EC0;&#x4E48;&#x662F;designated initializer&#x548C;convenience initializer&#xFF1F; Designated initializer&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x4E3B;&#x521D;&#x59CB;&#x5316;&#x5668;&#xFF0C;&#x662F;&#x8BE5;&#x7C7B;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5FC5;&#x7ECF;&#x4E4B;&#x8DEF;&#xFF1B;&#x5FC5;&#x987B;&#x5728;&#x8BE5;&#x521D;&#x59CB;&#x5316;&#x5668;&#x4E2D;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x6210;&#x5458;&#x5C5E;&#x6027;&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF1B;&#x8BE5;&#x521D;&#x59CB;&#x5316;&#x5668;&#x9700;&#x8981;&#x8C03;&#x7528;&#x5408;&#x9002;&#x7684;&#x7236;&#x7C7B;&#x521D;&#x59CB;&#x5316;&#x5668;&#x6765;&#x5B8C;&#x6210;&#x5B8C;&#x6574;&#x7684;&#x521D;&#x59CB;&#x5316;&#x8FC7;&#x7A0B;&#x3002; Convenience initializer&#x662F;Designated initializer&#x7684;helper&#x65B9;&#x6CD5;&#xFF0C;&#x6BCF;&#x4E2A;&#x7C7B;&#x53EA;&#x8981;&#x6709;&#x4E00;&#x4E2A;designated initializer&#xFF0C;convenience initializer&#x5219;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#x3002;Convenience initializer&#x9700;&#x8981;&#x7F00;&#x4E0A;&#x5173;&#x952E;&#x5B57;&#xFF1A; 12345678910111213141516171819convenience init(random: Bool = false) { if random { let adjectives = [&quot;Fluffy&quot;, &quot;Rusty&quot;, &quot;Shiny&quot;] let nouns = [&quot;Bear&quot;, &quot;Spork&quot;, &quot;Mac&quot;] var let idx = arc4random_uniform(UInt32(adjectives.count)) idx let randomAdjective = adjectives[Int(idx)] idx = arc4random_uniform(UInt32(nouns.count)) let randomNoun = nouns[Int(idx)] let randomName = &quot;\(randomAdjective) \(randomNoun)&quot; let randomValue = Int(arc4random_uniform(100)) let randomSerialNumber = UUID().uuidString.components(separatedBy: &quot;-&quot;).first! self.init(name: randomName, serialNumber: randomSerialNumber, valueInDollars: randomValue) } else { self.init(name: &quot;&quot;, serialNumber: nil, valueInDollars: 0) }} 2.2 @discardableResult&#x5173;&#x952E;&#x5B57; &#x8868;&#x793A;&#x8C03;&#x7528;&#x8005;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6B64;&#x5173;&#x952E;&#x5B57;&#x4E14;&#x8C03;&#x7528;&#x8005;&#x5FFD;&#x7565;&#x4E86;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x4F1A;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x8B66;&#x544A; 1234567891011@discardableResult func createItem() -&gt; Item { let newItem = Item(random: true) allItems.append(newItem) return newItem }// This is OKlet newItem = itemStore.createItem()// This is also OK; the result is not assigned to a variable itemStore.createItem() 3 &#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219; 3.1 &#x4EC0;&#x4E48;&#x662F;&#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219; &#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219;&#x5305;&#x542B;&#x4E24;&#x6761;&#xFF1A; 1. &#x9AD8;&#x7EA7;&#x522B;&#x7684;&#x5BF9;&#x8C61;&#x4E0D;&#x8981;&#x4F9D;&#x8D56;&#x4F4E;&#x7EA7;&#x522B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4ED6;&#x4EEC;&#x90FD;&#x4F9D;&#x8D56;&#x4E8E;&#x62BD;&#x8C61; 2. &#x62BD;&#x8C61;&#x4E0D;&#x8981;&#x4F9D;&#x8D56;&#x5177;&#x4F53;&#x7EC6;&#x8282;&#xFF0C;&#x7EC6;&#x8282;&#x5E94;&#x8BE5;&#x4F9D;&#x8D56;&#x4E8E;&#x62BD;&#x8C61; &#x9AD8;&#x7EA7;&#x522B;&#x662F;&#x6307;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x4F4E;&#x7EA7;&#x522B;&#x662F;&#x6307;&#x673A;&#x5236;&#x3002;&#x6BD4;&#x5982;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x5C31;&#x662F;&#x4E00;&#x5C42;&#x62BD;&#x8C61;&#xFF0C;&#x4E0A;&#x5C42;&#x7684;&#x6587;&#x4EF6;&#x64CD;&#x4F5C;&#x903B;&#x8F91;&#x4E0D;&#x4F9D;&#x8D56;&#x5177;&#x4F53;&#x7684;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x53EA;&#x8D1F;&#x8D23;&#x6570;&#x636E;&#x8BFB;&#x5199;&#xFF0C;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x8D1F;&#x8D23;&#x5904;&#x7406;&#x5177;&#x4F53;&#x4E0D;&#x540C;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x7684;&#x64CD;&#x4F5C;&#xFF1B;&#x4E0A;&#x5C42;&#x7684;&#x4E1A;&#x52A1;&#x7EC6;&#x8282;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x62BD;&#x8C61;&#x5C42;&#x3002; &#x62BD;&#x8C61;&#x5C42;&#x8C03;&#x7528;&#x5177;&#x4F53;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x7684;&#x7EC6;&#x8282;&#x600E;&#x4E48;&#x89E3;&#x91CA;&#x5462;&#xFF1F;&#x4E0D;&#x5C31;&#x548C;&#x7B2C;2&#x6761;&#x77DB;&#x76FE;&#x4E86;&#x5417;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;&#x8FD9;&#x4E24;&#x6761;&#x89C4;&#x5219;&#x63CF;&#x8FF0;&#x7684;&#x662F;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x539F;&#x5219;&#xFF0C;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x62BD;&#x8C61;&#x5C42;&#x8C03;&#x7528;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x5B9E;&#x73B0;&#x5C42;&#x8FD9;&#x662F;&#x6A21;&#x5757;&#x5185;&#x90E8;&#xFF0C;&#x8FD9;&#x53EB;&#x5C01;&#x88C5;&#xFF0C;&#x4E0D;&#x53EB;&#x4F9D;&#x8D56;&#x3002; &#x5728;&#x672C;&#x8282;&#x4E2D;UITableView&#x9700;&#x8981;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#x95EE;datasource&#x8BF7;&#x6C42;&#xFF0C;&#x4E5F;&#x662F;&#x9075;&#x5FAA;&#x4E86;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x539F;&#x5219;&#xFF0C;data source&#x662F;&#x6570;&#x636E;&#x7684;&#x62BD;&#x8C61;&#x5C42;&#xFF0C;UITableView&#x662F;UI&#x903B;&#x8F91;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x662F;&#x9AD8;&#x7EA7;&#x522B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;datasource&#x662F;&#x6570;&#x636E;&#x62BD;&#x8C61;&#xFF0C;&#x662F;&#x4F4E;&#x7EA7;&#x522B;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x518D;&#x5F80;&#x5E95;&#x5C42;&#x4ECE;&#x6587;&#x4EF6;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x6216;&#x8005;&#x4ECE;&#x6570;&#x636E;&#x5E93;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x5219;&#x662F;&#x6570;&#x636E;&#x7684;&#x4F4E;&#x7EA7;&#x522B;&#x5177;&#x4F53;&#x3002; 3.2 &#x5728;&#x672C;&#x7AE0;&#x4E2D;&#x54EA;&#x91CC;&#x4F53;&#x73B0;&#x4E86;&#x4F9D;&#x8D56;&#x5012;&#x7F6E;&#x539F;&#x5219; &#x6CA1;&#x6709;&#x5728;VC&#x76F4;&#x63A5;&#x64CD;&#x4F5C;Item&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x4F53;&#x73B0;&#x4E86;&#x8FD9;&#x4E00;&#x539F;&#x5219;&#x3002;VC&#x64CD;&#x4F5C;Item&#x96C6;&#x5408;&#x7684;&#x589E;&#x5220;&#x6539;&#x67E5;&#xFF0C;ItemStore&#x628A;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x5C01;&#x88C5;&#x8D77;&#x6765;&#xFF0C;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x5C42;&#x3002; 3.3 &#x4EC0;&#x4E48;&#x662F;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#xFF0C;&#x672C;&#x7AE0;&#x4E2D;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#xFF1F; &#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x662F;&#x6307;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6216;setter&#x51FD;&#x6570;&#x6216;&#x76F4;&#x63A5;&#x5728;&#x6267;&#x884C;&#x51FD;&#x6570;&#x76F4;&#x63A5;&#x4F20;&#x53C2;&#xFF0C;&#x628A;&#x7EC6;&#x8282;&#x76F8;&#x5173;&#x7684;&#x5BF9;&#x8C61;&#x4F20;&#x5165;&#x4E1A;&#x52A1;&#x5C42;&#xFF0C;&#x4E4B;&#x540E;&#x4E1A;&#x52A1;&#x5C42;&#x53EA;&#x8BBF;&#x95EE;&#x4F20;&#x5165;&#x5BF9;&#x8C61;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x800C;&#x4E0D;&#x5173;&#x5FC3;&#x7EC6;&#x8282;&#x3002;&#x7531;&#x6B64;&#x8FBE;&#x6210;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x53EA;&#x4F9D;&#x8D56;&#x62BD;&#x8C61;&#x7684;&#x76EE;&#x7684;&#x3002; &#x6BD4;&#x5982;Button&#x7684;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x7684;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x662F;UIButton&#xFF0C;&#x800C;&#x4E0D;&#x5173;&#x5FC3;&#x5177;&#x4F53;&#x662F;&#x54EA;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x6267;&#x884C;&#x51FD;&#x6570;&#x76F4;&#x63A5;&#x4F20;&#x53C2;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x4E86;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x3002; 4 &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8; 4.1 AppDelegate&#x7684;&#x804C;&#x8D23;&#xFF1F; &#x8D1F;&#x8D23;&#x5904;&#x7406;app&#x7684;&#x72B6;&#x6001;&#x53D8;&#x5316;&#x3002; app&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#x72B6;&#x6001;&#xFF1F;&#x4F1A;&#x600E;&#x4E48;&#x53D8;&#x5316;&#xFF1F;AppDelegate&#x9700;&#x8981;&#x600E;&#x4E48;&#x5904;&#x7406;&#x8FD9;&#x4E9B;&#x53D8;&#x5316;&#xFF1F; 4.2 AppDelegate::application(_:didFinishLaunchingWithOptions:) &#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9996;&#x6B21;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x3002; 123456789func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey : Any]?) -&gt; Bool { // Override point for customization after application launch. // Create an ItemStore let itemStore = ItemStore() // Access the ItemsViewController and set its item store let itemsController = window!.rootViewController as! ItemsViewController // &#x8FD9;&#x53E5;&#x8BE5;&#x600E;&#x4E48;&#x7406;&#x89E3;&#xFF1F; itemsController.itemStore = itemStore return true } &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x6CE8;&#x89C6;&#x7684;&#x90A3;&#x53E5;&#x8BE5;&#x600E;&#x4E48;&#x7406;&#x89E3;&#x5462;&#xFF1F; &#x9996;&#x6B21;&#x9047;&#x5230;&#x5E26;&#x4E86;&#x4E24;&#x4E2A;&#x611F;&#x53F9;&#x53F7;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x3002;window&#x662F;AppDelegate&#x7684;optional&#x53D8;&#x91CF;&#xFF0C;&#x4F46;&#x5728;&#x8FD0;&#x884C;&#x5230;AppDelegate::application(_:didFinishLaunchingWithOptions:)&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;window&#x53D8;&#x91CF;&#x53CA;&#x5176;rootViewController&#x5C5E;&#x6027;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x662F;&#x7A7A;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528;&#x4E86;&#x5F3A;&#x5236;&#x5C55;&#x5F00;&#x3002;&#x4F46;&#x662F;&#x6309;&#x7167;&#x7B2C;&#x4E8C;&#x7AE0;&#x4ECB;&#x7ECD;&#x7684;optional&#x539F;&#x5219;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;if-let&#x66F4;&#x597D;&#x5462;&#x3002; &gt; &#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x4E3A;&#x4EC0;&#x4E48;&#x53D8;&#x91CF;itemStore&#x5C3E;&#x90E8;&#x52A0;&#x4E86;&#x611F;&#x53F9;&#x53F7;&#xFF0C;&#x7F16;&#x8BD1;&#x4E0D;&#x51FA;&#x73B0;ItemsViewController&#x6CA1;&#x6709;&#x521D;&#x59CB;&#x5316;&#x5668;&#x7684;&#x9519;&#x8BEF;&#x4E86;&#xFF1F; &#x6CA1;&#x6709;&#x611F;&#x53F9;&#x53F7;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#xFF1A;&#x5B83;&#x8981;&#x6C42;&#x6240;&#x6709;&#x6210;&#x5458;&#x90FD;&#x5E94;&#x8BE5;&#x88AB;designated initializer&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x73B0;&#x5728;&#x7F3A;&#x5C11;&#x8FD9;&#x4E2A;initializer&#x3002;&#x53EF;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x52A0;&#x4E86;&#x611F;&#x53F9;&#x53F7;&#x5C31;&#x6CA1;&#x95EE;&#x9898;&#x4E86;&#x5462;&#xFF1F; 12345class ItemsViewController: UITableViewController { // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x611F;&#x53F9;&#x53F7;&#x4F1A;&#x63D0;&#x793A;ItemsViewController&#x6CA1;&#x6709;&#x521D;&#x59CB;&#x5316;&#x5668; var itemStore: ItemStore! ...}]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记九]]></title>
    <url>%2F2017%2F07%2F28%2F2017%2F0728iOSProgrammingBNRG09%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E5D;&#x7AE0;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E86;&#x8C03;&#x8BD5;&#x6280;&#x5DE7; # 1 &#x8C03;&#x8BD5;&#x6280;&#x5DE7; ## 1.1 &#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x540D;&#x3001;&#x51FD;&#x6570;&#x540D;&#x3001;&#x884C;&#x53F7;&#x7684;&#x5E38;&#x91CF; 1print(&quot;Method: \(#function) in file: \(#file) line: \(#line) called.&quot;)]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记八]]></title>
    <url>%2F2017%2F07%2F28%2F2017%2F0727iOSProgrammingBNRG08%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x516B;&#x7AE0;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x52A8;&#x753B;&#x3002;&#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - animate&#x51FD;&#x6570;&#x7684;&#x4F7F;&#x7528; 1. &#x95ED;&#x5305; 1.1 &#x4EC0;&#x4E48;&#x662F;&#x95ED;&#x5305; &#x95ED;&#x5305;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4EE3;&#x7801;&#x5757;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x6570;&#x6216;&#x8005;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x5F62;&#x5F0F;&#x88AB;&#x4F20;&#x9012;&#x3002; 1.2 &#x58F0;&#x660E;&#x3001;&#x5B9A;&#x4E49;&#x3001;&#x4F7F;&#x7528;&#x95ED;&#x5305;&#x7684;&#x5F62;&#x5F0F; &#x58F0;&#x660E;&#xFF1A; 1(arguments) -&gt; returnType &#x5B9A;&#x4E49;&#xFF1A; 123{ (arguments) -&gt; returnType in // code} &#x5176;&#x4E2D;arguments&#x662F;&#x53C2;&#x6570;&#x5217;&#x8868;&#xFF0C;returnType&#x662F;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#xFF0C;in&#x662F;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5728;code&#x5904;&#x5199;&#x8981;&#x6267;&#x884C;&#x7684;&#x4EE3;&#x7801; &#x4F7F;&#x7528;&#xFF1A; 12345let animation = {()-&gt;Void in self.labelA.alpha = 1} // &#x5B9A;&#x4E49;&#x95ED;&#x5305;&#xFF0C;&#x5E76;&#x8D4B;&#x503C;&#x7ED9;&#x53D8;&#x91CF;animationUIView.animate(withDuration: 0.5, animations: animation) &#x5BF9;&#x4E8E;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x5747;&#x4E3A;&#x7A7A;&#x7684;&#x95ED;&#x5305;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A; 1UIView.animate(withDuration: 0.5, animations: {self.lableA.alpha = 1}) 1.3 &#x95ED;&#x5305;&#x5199;&#x6CD5;&#x7684;&#x82E5;&#x5E72;&#x53D8;&#x79CD; &#x5047;&#x8BBE;Array&#x6709;&#x4E00;&#x4E2A;sorted(by:)&#x51FD;&#x6570;&#x7528;&#x4E8E;&#x6392;&#x5E8F;&#xFF0C;&#x5B83;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x95ED;&#x5305;&#x7528;&#x4E8E;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x4E00;&#x822C;&#x7684;&#x5199;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 12345let volunteerCounts = [1,3,40,32,2,53,77,13]let volunteersSorted = volunteerCounts.sorted(by: { (i: Int, j: Int) -&gt; Bool in return i &lt; j}) &#x7701;&#x7565;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x7C7B;&#x578B; 1let volunteersSorted = volunteerCounts.sorted(by: { i, j in i &lt; j }) &#x5B83;&#x7701;&#x7565;&#x4E86;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#xFF0C;&#x56E0;&#x4E3A;&#x901A;&#x8FC7;i&lt;j&#x5C31;&#x80FD;&#x63A8;&#x65AD;&#x51FA;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x4E3A;Bool&#xFF1B; &#x5B83;&#x7701;&#x7565;&#x4E86;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x5E94;&#x8BE5;&#x662F;&#x6839;&#x636E;sorted(by:)&#x7684;&#x539F;&#x578B;&#x63A8;&#x65AD;&#x51FA;&#x6765;&#x7684;&#xFF1B; &#x5B83;&#x7701;&#x7565;&#x4E86;return&#x5173;&#x952E;&#x8BCD;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x95ED;&#x5305;&#x53EA;&#x6709;&#x4E00;&#x6761;&#x8BED;&#x53E5;&#xFF0C;&#x5982;&#x679C;&#x5305;&#x542B;&#x4E00;&#x6761;&#x4EE5;&#x4E0A;&#x7684;&#x8BED;&#x53E5;&#xFF0C;return&#x662F;&#x4E0D;&#x80FD;&#x7701;&#x7565;&#x7684;&#x3002; &#x7701;&#x7565;&#x53C2;&#x6570;&#x540D;&#x79F0; 1let volunteersSorted = volunteerCounts.sorted(by: { $0 &lt; $1&gt; }) Swift&#x4E3A;&#x95ED;&#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x53C2;&#x6570;&#x7684;&#x901F;&#x8BB0;&#x540D;&#x79F0;&#xFF0C;&#x4F7F;&#x7528;$0&#x3001;$1&#x3001;$2&#x2026;&#x2026;&#x5373;&#x53EF;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x7C7B;&#x578B;&#x63A8;&#x65AD;&#x53EF;&#x4EE5;&#x5206;&#x8FA8;&#x51FA;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;&#x5E94;&#x8BE5;&#x662F;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#x3002; tailing closure &#x4E0A;&#x9762;&#x7684;&#x95ED;&#x5305;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x7B80;&#x5316;&#xFF1A; 1let volunteersSorted = volunteerCounts.sorted{ $0 &lt; $1&gt; } &#x5982;&#x679C;&#x51FD;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x95ED;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E2A;&#x95ED;&#x5305;&#x5C3E;&#x968F;&#x5230;&#x51FD;&#x6570;&#x7684;&#x5916;&#x9762;&#x3002;&#x672C;&#x4F8B;&#x4E2D;sorted(by:)&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x53C2;&#x6570;&#x5217;&#x8868;&#xFF0C;&#x51FD;&#x6570;&#x540D;&#x540E;&#x9762;&#x76F4;&#x63A5;&#x5C3E;&#x968F;&#x95ED;&#x5305;&#x3002; 2. &#x52A8;&#x6548;&#x51FD;&#x6570; &#x672C;&#x7AE0;&#x4ECB;&#x7ECD;&#x7684;&#x52A8;&#x753B;&#x90FD;&#x662F;&#x7531;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x7684; 1class func animate(withDuration duration: TimeInterval, animations: @escaping () -&gt; Void) &#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x548C;&#x5728;keynote&#x91CC;&#x5236;&#x4F5C;&#x52A8;&#x753B;&#x5F88;&#x50CF;&#xFF0C;&#x5B83;&#x4E0D;&#x9700;&#x8981;&#x5199;&#x591A;&#x590D;&#x6742;&#x7684;&#x8FD0;&#x52A8;&#x7B97;&#x6CD5;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x544A;&#x8BC9;&#x5B83;&#x8D77;&#x59CB;&#x3001;&#x7EC8;&#x6B62;&#x4F4D;&#x7F6E;&#xFF0C;&#x52A8;&#x753B;&#x65F6;&#x957F;&#xFF0C;&#x52A0;&#x901F;&#x5EA6;&#x7B49;&#x53C2;&#x6570;&#xFF0C;&#x5B83;&#x5C31;&#x80FD;&#x751F;&#x6210;&#x52A8;&#x753B;&#x6548;&#x679C;&#x3002;&#x542C;&#x8D77;&#x6765;&#x597D;&#x50CF;&#x5F88;&#x5C40;&#x9650;&#xFF0C;&#x5176;&#x5B9E;&#x5BF9;&#x4E8E;&#x4E00;&#x822C;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#x5DF2;&#x7ECF;&#x8DB3;&#x591F;&#x7528;&#x4E86;&#x3002; 2.1 &#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x6E10;&#x73B0;/&#x6E10;&#x9690;&#x52A8;&#x753B; &#x53EA;&#x9700;&#x8981;&#x7ED9;animate&#x51FD;&#x6570;&#x4F20;&#x5165;&#x52A8;&#x753B;&#x65F6;&#x957F;&#x548C;&#x7EC8;&#x5C40;&#x65F6;&#x63A7;&#x4EF6;&#x7684;&#x900F;&#x660E;&#x5EA6;&#x5373;&#x53EF;&#xFF1A; 12345678910@IBAction func onButton(_ sender: UIButton){ labelA.alpha = 0 // &#x6BCF;&#x6B21;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x5148;&#x628A;labelA&#x8BBE;&#x4E3A;&#x4E0D;&#x53EF;&#x89C1; labelB.alpha = 1 // &#x628A;labelB&#x8BBE;&#x4E3A;&#x53EF;&#x89C1; // &#x6267;&#x884C;&#x52A8;&#x753B;&#xFF0C;&#x65F6;&#x95F4;&#x957F;&#x5EA6;5&#x79D2;&#xFF0C;&#x6700;&#x7EC8;&#x6548;&#x679C;&#x662F;labelA&#x53EF;&#x89C1;&#xFF0C;labelB&#x4E0D;&#x53EF;&#x89C1; UIView.animate(withDuration: 5, animations: { self.labelA.alpha = 1 self.labelB.alpha = 0 })} 2.2 &#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x98DE;&#x5165;/&#x98DE;&#x51FA;&#x52A8;&#x753B; &#x539F;&#x7406;&#x548C;2.1&#x4E00;&#x6837;&#xFF0C;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x65F6;&#x957F;&#xFF0C;&#x7EC8;&#x5C40;&#x65F6;&#x63A7;&#x4EF6;&#x4F4D;&#x7F6E;&#x5C31;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x52A8;&#x753B;&#x3002; &#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x90FD;&#x80FD;&#x8BBE;&#x7F6E;&#x7EC8;&#x5C40;&#x4F4D;&#x7F6E;&#xFF1A; 1. &#x76F4;&#x63A5;&#x8BBE;&#x7F6E;&#x8981;&#x632A;&#x52A8;&#x7684;&#x63A7;&#x4EF6;&#x5750;&#x6807;&#xFF1B; 2. &#x7ED9;&#x63A7;&#x4EF6;&#x6DFB;&#x52A0;&#x7EA6;&#x675F;&#xFF0C;&#x4E3A;&#x7EA6;&#x675F;&#x5173;&#x8054;outlet&#x53D8;&#x91CF;&#xFF0C;&#x8BBE;&#x7F6E;&#x8BE5;&#x7EA6;&#x675F;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x3002; &#x672C;&#x7AE0;&#x4F7F;&#x7528;&#x4E86;&#x7B2C;2&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x5B83;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#xFF1A;&#x5728;Interface Builder&#x4E2D;&#x5BF9;&#x63A7;&#x4EF6;&#x505A;&#x4E86;&#x5B8C;&#x5907;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x5982;&#x679C;&#x91C7;&#x7528;&#x7B2C;1&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x53EA;&#x80FD;&#x5728;Interface Builder&#x4E2D;&#x4E0D;&#x52A0;&#x67D0;&#x4E2A;&#x65B9;&#x5411;&#x7684;&#x7EA6;&#x675F;&#xFF0C;&#x8FD9;&#x4F1A;&#x56E0;&#x7EA6;&#x675F;&#x4E0D;&#x8DB3;&#x800C;&#x88AB;warning&#x3002; &gt; &#x6CE8;&#x610F;&#xFF1A;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;view&#xFF0C;&#x5982;&#x679C;&#x52A0;&#x4E86;&#x7EA6;&#x675F;&#x540C;&#x65F6;&#x53C8;&#x8BBE;&#x7F6E;&#x4E86;&#x5B83;&#x7684;&#x5750;&#x6807;&#xFF0C;&#x751F;&#x6548;&#x7684;&#x662F;&#x7EA6;&#x675F;&#xFF0C;&#x5BF9;&#x5750;&#x6807;&#x7684;&#x8BBE;&#x7F6E;&#x65E0;&#x6548;&#x3002; 2.3 &#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x7EC8;&#x5C40;&#x4F4D;&#x7F6E;&#x5B9E;&#x73B0;&#x98DE;&#x5165;/&#x98DE;&#x51FA;&#x52A8;&#x753B; 123456789101112131415@IBOutlet var labelC:UILabel! override func viewWillAppear(_ animated: Bool){ super.viewWillAppear(animated) labelC.frame.origin.x = 0} @IBAction func onButton(_ sender: UIButton){ let screenWidth = view.frame.width labelC.frame.origin.x = 0 // &#x4ECE;&#x5C4F;&#x5E55;&#x7684;&#x5DE6;&#x4FA7;&#x7528;5&#x79D2;&#x949F;&#x65F6;&#x95F4;&#x98DE;&#x5230;&#x5C4F;&#x5E55;&#x53F3;&#x4FA7; UIView.animate(withDuration: 5, animations: { self.labelC.frame.origin.x = screenWidth })} 2.4 &#x4E3A;&#x7EA6;&#x675F;&#x5173;&#x8054;outlet&#x53D8;&#x91CF; &#x7EA6;&#x675F;&#x662F;&#x5728;Interface Builder&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x8981;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x5B83;&#x7684;&#x503C;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x4E3A;&#x4E4B;&#x5173;&#x8054;&#x53D8;&#x91CF;&#x3002;&#x5728;Interface Builder&#x4E2D;&#x7684;&#x4EFB;&#x4F55;&#x5BF9;&#x8C61;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x4E3A;&#x4E4B;&#x521B;&#x5EFA;outlets&#x53D8;&#x91CF;&#x3002; &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x5728;Interface Builder&#x4E2D;&#x4E3A;labelA&#x521B;&#x5EFA;&#x6C34;&#x5E73;&#x5C45;&#x4E2D;&#x7684;&#x7EA6;&#x675F;&#x3002; &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x5728;VC&#x4E2D;&#x58F0;&#x660E;&#x7EA6;&#x675F;&#x53D8;&#x91CF; 12345678class ViewController: UIViewController { @IBOutlet var labelA:UILabel! @IBOutlet var labelB:UILabel! @IBOutlet var labelAConstraint: NSLayoutConstraint! @IBOutlet var labelBConstraint: NSLayoutConstraint!&#x2026;&#x2026;} &#x7B2C;&#x4E09;&#x6B65;&#xFF1A;&#x5728;Interface Builder&#x4E2D;&#x5B8C;&#x6210;&#x5BF9;&#x8C61;&#x5230;outlets&#x53D8;&#x91CF;&#x7684;&#x5173;&#x8054;&#xFF1A; 2.5 &#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x7EC8;&#x5C40;&#x7EA6;&#x675F;&#x5B9E;&#x73B0;&#x98DE;&#x5165;/&#x98DE;&#x51FA;&#x52A8;&#x753B; 12345678910111213141516171819202122232425class ViewController: UIViewController { @IBOutlet var labelA:UILabel! @IBOutlet var labelAConstraint: NSLayoutConstraint! // &#x5DF2;&#x5B8C;&#x6210;&#x5173;&#x8054;&#xFF0C;&#x5E76;&#x5728;Interface Builder&#x4E2D;&#x8BBE;&#x7F6E;&#x5C45;&#x4E2D; override func viewWillAppear(_ animated: Bool){ super.viewWillAppear(animated) labelA.alpha = 0 } @IBAction func onButton(_ sender: UIButton){ let screenWidth = view.frame.width labelA.alpha = 0 labelAConstraint.constant = 0 self.view.layoutIfNeeded() // &#x8BBE;&#x7F6E;&#x7EC8;&#x5C40;&#x65F6;labelA&#x7684;&#x6C34;&#x5E73;&#x7EA6;&#x675F;&#x503C;&#x4E3A;screenWidth&#xFF0C;&#x5373;&#x5411;&#x5C4F;&#x5E55;&#x53F3;&#x4FA7;&#x51FA;&#x53BB;&#x534A;&#x4E2A;&#x5C4F;&#x5E55;&#x7684;&#x5BBD;&#x5EA6; UIView.animate(withDuration: 5, animations: { self.labelA.alpha = 1 self.labelAConstraint.constant = screenWidth self.view.layoutIfNeeded() }) }&#x2026;&#x2026;} &#x8FD9;&#x4E2A;&#x7EA6;&#x675F;&#x503C;&#x7684;&#x542B;&#x4E49;&#x548C;&#x5728;Interface Builder&#x4E2D;&#x4F53;&#x73B0;&#x7684;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#xFF1A;0&#x8868;&#x793A;&#x5C45;&#x4E2D;&#xFF0C;&#x5C4F;&#x5E55;&#x5DE6;&#x8FB9;&#x7F18;&#x662F;-view.frame.width / 2&#xFF1B;&#x53F3;&#x8FB9;&#x7F18;&#x662F;view.frame.width / 2&#x3002; 2.6 &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4F7F;&#x7528;layoutIfNeed()&#x51FD;&#x6570; &#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x4FEE;&#x6539;&#x89C6;&#x56FE;&#x7684;&#x7EA6;&#x675F;&#x503C;&#xFF0C;&#x5FC5;&#x987B;&#x8C03;&#x7528;layoutIfNeed()&#x51FD;&#x6570;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x770B;&#x4E0D;&#x5230;&#x52A8;&#x753B;&#x3002;&#x800C;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x89C6;&#x56FE;&#x7684;&#x5750;&#x6807;&#x503C;&#x5219;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x95EE;&#x9898;&#x3002; &#x4E66;&#x4E2D;&#x7684;&#x89E3;&#x91CA;&#x662F;&#xFF1A;&#x7EA6;&#x675F;&#x4FEE;&#x6539;&#x540E;&#xFF0C;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x76F8;&#x5173;&#x89C6;&#x56FE;&#x7684;frame&#x503C;&#xFF0C;&#x5982;&#x679C;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x5C31;&#x7ACB;&#x523B;&#x89E6;&#x53D1;&#x8BE5;&#x8BA1;&#x7B97;&#xFF0C;&#x8FD9;&#x5728;&#x6027;&#x80FD;&#x4E0A;&#x975E;&#x5E38;&#x4E0D;&#x5212;&#x7B97;&#x3002;&#x56E0;&#x6B64;&#x5E94;&#x8BE5;&#x5728;&#x4FEE;&#x6539;&#x4E86;&#x6240;&#x6709;&#x7EA6;&#x675F;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x6B21;&#x8C03;&#x7528;layoutIfNeeded()&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x5C31;&#x53EA;&#x4F1A;&#x53D1;&#x751F;&#x4E00;&#x6B21;&#x3002; 2.7 Xcode&#x652F;&#x6301;&#x672C;&#x5730;&#x5316;&#x65F6;&#x7684;bug &#x5E38;&#x5E38;&#x53D1;&#x73B0;&#x5728;&#x4FEE;&#x6539;&#x4E86;&#x672C;&#x5730;&#x5316;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x518D;&#x8FD0;&#x884C;app&#x540E;&#xFF0C;&#x4FEE;&#x6539;&#x5E76;&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x8FD9;&#x662F;Xcode&#x7684;&#x4E00;&#x4E2A;bug&#x3002;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF1A;&#x5728;iOS&#x4E2D;&#x5220;&#x9664;app&#xFF0C;&#x5728;Xcode&#x4E2D;clean&#x5E76;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x9879;&#x76EE;&#x3002;&#x518D;&#x6B21;&#x8FD0;&#x884C;&#x5373;&#x53EF;&#x3002; 2.8 &#x600E;&#x6837;&#x8C03;&#x6574;&#x52A8;&#x753B;&#x7684;&#x53D8;&#x5316;&#x901F;&#x5EA6;&#x66F2;&#x7EBF;&#xFF1F; &#x8FD8;&#x662F;&#x4F7F;&#x7528;animate&#x51FD;&#x6570;&#xFF0C;&#x53EA;&#x662F;&#x7528;&#x66F4;&#x591A;&#x53C2;&#x6570;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x8FD8;&#x662F;&#x5BF9;&#x7EC8;&#x5C40;&#x548C;&#x8FC7;&#x7A0B;&#x505A;&#x8BBE;&#x7F6E;&#xFF1A; 1234567class func animate(withDuration duration: TimeInterval, delay: TimeInterval, usingSpringWithDamping dampingRatio: CGFloat, // &#x5F39;&#x7C27;&#x8FD0;&#x52A8;&#x7684;&#x963B;&#x5C3C;&#x6BD4; initialSpringVelocity velocity: CGFloat, options: UIViewAnimationOptions = [], // &#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x7684;&#x52A0;&#x901F;&#x5EA6;&#x3001;&#x662F;&#x5426;&#x5FAA;&#x73AF;&#x64AD;&#x653E; animations: @escaping () -&gt; Void, completion: ((Bool) -&gt; Void)? = nil) // &#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6;&#x8981;&#x6267;&#x884C;&#x7684;&#x5757; &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x7528;&#x6CD5;&#x5E94;&#x8BE5;&#x53CD;&#x590D;&#x4F7F;&#x7528;&#xFF0C;&#x4F53;&#x4F1A;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49;&#x3002; 2.9 &#x51FD;&#x6570;&#x7684;&#x5916;&#x90E8;&#x53C2;&#x6570;&#x540D; &#x7ECF;&#x5E38;&#x770B;&#x5230;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x5217;&#x8868;&#x4E2D;&#x6709;&#x4E00;&#x6761;&#x4E0B;&#x5212;&#x7EBF;&#xFF1A; 1override func viewWillAppear(_ animated: Bool) &#x8FD9;&#x662F;&#x56E0;&#x4E3A;Swift&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x6709;&#x5916;&#x90E8;&#x540D;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 1234func printPersonalGreeting(to name: String){ print(&quot;Hello \(name), welcome to your playground.&quot;)}printPersonalGreeting(to: &quot;Matt&quot;) to:&#x5C31;&#x662F;&#x5916;&#x90E8;&#x53C2;&#x6570;&#x540D;&#x3002;&#x5982;&#x679C;&#x7701;&#x7565;&#x5916;&#x90E8;&#x53C2;&#x6570;&#x540D;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x4E0B;&#x5212;&#x7EBF;&#x6765;&#x5360;&#x4F4D;&#xFF1A; 1234func printPersonalGreeting(_ name: String){ print(&quot;Hello \(name), welcome to your playground.&quot;)}printPersonalGreeting(&quot;Matt&quot;)]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记七]]></title>
    <url>%2F2017%2F07%2F27%2F2017%2F0727iOSProgrammingBNRG07%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E03;&#x7AE0;&#x5B9E;&#x73B0;app&#x7684;&#x672C;&#x5730;&#x5316;&#xFF0C;&#x5F53;&#x4FEE;&#x6539;&#x4E86;&#x7CFB;&#x7EDF;&#x8BED;&#x8A00;&#x540E;&#xFF0C;app&#x65E0;&#x9700;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x80FD;&#x81EA;&#x52A8;&#x9002;&#x914D;&#x3002;&#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - Localization&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5; - &#x63A7;&#x4EF6;&#x5C3A;&#x5BF8;&#x6821;&#x9A8C; 1 &#x672C;&#x5730;&#x5316;&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5; 1.1 &#x672C;&#x5730;&#x5316;&#x90FD;&#x5305;&#x542B;&#x4EC0;&#x4E48;&#xFF1F; &#x8D27;&#x5E01;&#x3001;&#x6570;&#x5B57;&#x3001;&#x6587;&#x5B57;&#x65B9;&#x5411;&#x7B49;&#x8D70;&#x5411;&#x7684;&#x5DEE;&#x5F02;&#x3002;&#x6BD4;&#x5982;&#x6709;&#x7684;&#x56FD;&#x5BB6;&#x5C0F;&#x6570;&#x70B9;&#x7528;.&#xFF0C;&#x5343;&#x5206;&#x7B26;&#x7528;,&#xFF0C;&#x6709;&#x7684;&#x56FD;&#x5BB6;&#x521A;&#x597D;&#x76F8;&#x53CD;&#xFF1B;&#x5404;&#x56FD;&#x6709;&#x5404;&#x81EA;&#x7684;&#x8D27;&#x5E01;&#x7B26;&#x53F7;&#xFF0C;&#x7B49;&#x7B49;&#x3002;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x90FD;&#x88AB;Locale&#x5C01;&#x88C5;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x4F7F;&#x7528;Locale&#x7684;&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x843D;&#x5B9E;&#x8FD9;&#x4E9B;&#x6982;&#x5FF5;&#x7684;&#x5177;&#x4F53;&#x503C;&#x3002; Interface Builder&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5728;1.3&#x4E2D;&#x4F1A;&#x5177;&#x4F53;&#x8BB2;&#x3002; &#x4EE3;&#x7801;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x786C;&#x7F16;&#x7801;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5728;1.4&#x4E2D;&#x4F1A;&#x5177;&#x4F53;&#x8BB2;&#x3002; 1.2 iOS&#x89E3;&#x51B3;&#x672C;&#x5730;&#x5316;&#x95EE;&#x9898;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406; Xcode&#x6784;&#x5EFA;&#x4E00;&#x4E2A;target&#x65F6;&#xFF0C;&#x4F1A;&#x628A;&#x5B83;&#x6240;&#x6709;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x548C;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x6253;&#x6210;&#x4E00;&#x4E2A;&#x5305;&#x3002;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;Bundle&#x5B9E;&#x4F8B;main bundle&#x6765;&#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;&#x5305;&#x91CC;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x3002;&#x5C06;&#x4E00;&#x4EFD;&#x8D44;&#x6E90;&#x672C;&#x5730;&#x5316;&#x5C31;&#x662F;&#x5C06;&#x8FD9;&#x4EFD;&#x8D44;&#x6E90;&#x7684;&#x672C;&#x5730;&#x5316;&#x526F;&#x672C;&#x62F7;&#x8D1D;&#x5230;&#x5305;&#x91CC;&#xFF0C;&#x8FD9;&#x4E9B;&#x8D44;&#x6E90;&#x6309;&#x7167;&#x8BED;&#x8A00;&#x540D;&#x79F0;&#xFF08;&#x4EE5;lproj&#x547D;&#x540D;&#xFF09;&#x7EC4;&#x7EC7;&#x76EE;&#x5F55;&#x540D;&#x3002; &#x5F53;&#x8BBF;&#x95EE;&#x5305;&#x91CC;&#x7684;&#x67D0;&#x4E2A;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x4F1A;&#x5148;&#x53BB;&#x5305;&#x91CC;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x67E5;&#x627E;&#x8BE5;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x627E;&#x5230;&#x4F1A;&#x518D;&#x6839;&#x636E;&#x8BBE;&#x5907;&#x7684;&#x8BED;&#x8A00;/&#x533A;&#x57DF;&#x8BBE;&#x7F6E;&#x67E5;&#x627E;lproj&#x76EE;&#x5F55;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8BA9;&#x8BED;&#x8A00;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6E90;&#x548C;&#x4EE3;&#x7801;&#x76F8;&#x5206;&#x79BB;&#xFF0C;&#x5B9E;&#x73B0;&#x672C;&#x5730;&#x5316;&#x3002; 1.2 Interface Builder&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x672C;&#x5730;&#x5316;&#xFF1F; &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x5728;PROJECT &gt; INFO &gt; Localization&#x6DFB;&#x52A0;&#x5F85;&#x652F;&#x6301;&#x7684;&#x8BED;&#x8A00;&#xFF1A; &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x5728;File Inspector&#x4E2D;&#x52FE;&#x9009;&#x8BE5;&#x8BED;&#x8A00;&#xFF0C;&#x5B83;&#x4F1A;&#x4E3A;&#x8BE5;storyboard&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x7684;&#x8BED;&#x79CD;&#x6587;&#x4EF6;&#xFF1A; &#x7B2C;&#x4E09;&#x6B65;&#xFF1A;&#x8BE5;&#x6587;&#x4EF6;&#x4F1A;&#x4E3A;storyboard&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x6240;&#x6709;&#x6587;&#x672C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x4FEE;&#x6539;&#x4E3A;&#x6307;&#x5B9A;&#x8BED;&#x8A00;&#x4E0B;&#x7684;&#x6587;&#x672C;&#xFF1A; &#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#xFF0C;&#x5982;&#x679C;&#x7CFB;&#x7EDF;&#x8BED;&#x8A00;&#x8BBE;&#x7F6E;&#x4E3A;&#x4E2D;&#x6587;&#xFF0C;app&#x4E3B;&#x754C;&#x9762;&#x5C31;&#x662F;&#xFF1A; &#x628A;&#x7CFB;&#x7EDF;&#x8BED;&#x8A00;&#x4FEE;&#x6539;&#x4E3A;&#x82F1;&#x6587;&#xFF0C;app&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#xFF0C;&#x4E3B;&#x754C;&#x9762;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#xFF1A; &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x672C;&#x5730;&#x5316;&#x7684;&#x5DE5;&#x4F5C;&#x5E94;&#x8BE5;&#x505A;&#x5728;&#x5DE5;&#x7A0B;&#x7684;&#x6700;&#x7EC8;&#x9636;&#x6BB5;&#x3002;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x5B8C;&#x6210;&#x672C;&#x5730;&#x5316;&#x5DE5;&#x4F5C;&#x4EE5;&#x540E;&#xFF0C;&#x518D;&#x5728;storyboard&#x4E2D;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x6587;&#x672C;&#x63A7;&#x4EF6;&#xFF0C;Xcode&#x662F;&#x4E0D;&#x4F1A;&#x81EA;&#x52A8;&#x5728;&#x8BED;&#x8A00;&#x5305;&#x91CC;&#x4E3A;&#x5B83;&#x6DFB;&#x52A0;&#x53D8;&#x91CF;&#x7684;&#x3002;&#x53EA;&#x80FD;&#x91CD;&#x65B0;&#x5728;File Inspector&#x4E2D;&#x91CD;&#x65B0;&#x52FE;&#x6389;/&#x52FE;&#x9009;&#x8BE5;&#x8BED;&#x8A00;&#xFF0C;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x8BED;&#x8A00;&#x5305;&#x3002; 1.3 &#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x672C;&#x5730;&#x5316;&#xFF1F; &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x4F7F;&#x7528;NSLocalizedString(_:comment:)&#x6784;&#x9020;&#x9700;&#x8981;&#x672C;&#x5730;&#x5316;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF1A; 12345let standardString = NSLocalizedString(&quot;Standard&quot;, comment: &quot;Standard map view&quot;)let hybridString = NSLocalizedString(&quot;Hybrid&quot;, comment: &quot;Hybrid map view&quot;)let satelliteString = NSLocalizedString(&quot;satellite&quot;, comment: &quot;satellite map view&quot;) let segmentedControl = UISegmentedControl(items: [standardString, hybridString, satelliteString]) &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x5BF9;&#x5305;&#x542B;&#x672C;&#x5730;&#x5316;&#x5B57;&#x7B26;&#x7684;&#x6587;&#x4EF6;&#x751F;&#x6210;&#x8BED;&#x8A00;&#x5305;&#xFF1A; 1$ genstrings MapViewController.swift &#x5B83;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;Localizable.strings&#x6587;&#x4EF6;&#xFF0C;&#x628A;&#x5B83;&#x6DFB;&#x52A0;&#x5230;&#x5DE5;&#x7A0B;&#x91CC;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x6B65;&#x9AA4;&#x4E3A;&#x5B83;&#x751F;&#x6210;&#x8BED;&#x8A00;&#x5305;&#xFF1A; &#x5B83;&#x4F1A;&#x5728;&#x5BF9;&#x5E94;&#x7684;lproj&#x76EE;&#x5F55;&#x4E2D;&#x751F;&#x6210;Localizable.strings&#x6587;&#x4EF6;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4FEE;&#x6539;&#x6210;&#x6307;&#x5B9A;&#x8BED;&#x8A00;&#x3002; &#x641E;&#x5B9A;&#xFF01;&#x65E0;&#x9700;&#x4FEE;&#x6539;app&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x6307;&#x5B9A;&#x8BED;&#x8A00;&#x4E0B;&#xFF0C;app&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x8BED;&#x8A00;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x8BED;&#x8A00;&#x5305;&#x6765;&#x663E;&#x793A;&#x5B57;&#x7B26;&#x4E32;&#x3002; 1.4 &#x600E;&#x6837;&#x8BBE;&#x7F6E;app&#x8C03;&#x8BD5;&#x8FD0;&#x884C;&#x7684;&#x8BED;&#x8A00;-&#x533A;&#x57DF; &#x8BBE;&#x7F6E;Application Language&#x548C;Application Region&#xFF0C;&#x518D;run&#x8D77;app&#x65F6;&#xFF0C;&#x5B83;&#x5C31;&#x628A;&#x8BE5;&#x8BBE;&#x7F6E;&#x5F53;&#x505A;app&#x7684;&#x9ED8;&#x8BA4;&#x8BED;&#x8A00;&#x533A;&#x57DF;&#x8BBE;&#x7F6E;&#x3002; # 2 &#x63A7;&#x4EF6;&#x5C3A;&#x5BF8;&#x6821;&#x9A8C; ## 2.1 &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x4E3A;&#x6587;&#x672C;&#x63A7;&#x4EF6;&#x6821;&#x9A8C;&#x7EA6;&#x675F;&#xFF1F; &#x5728;&#x5B9E;&#x65BD;&#x672C;&#x5730;&#x5316;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6587;&#x672C;&#x76F8;&#x5173;&#x7684;&#x63A7;&#x4EF6;&#xFF08;&#x6BD4;&#x5982;Label&#xFF09;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x4F1A;&#x6839;&#x636E;&#x8BED;&#x8A00;/&#x533A;&#x57DF;&#x8BBE;&#x7F6E;&#x7684;&#x53D8;&#x5316;&#x800C;&#x53D8;&#x5316;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x4E3A;&#x63A7;&#x4EF6;&#x8BBE;&#x7F6E;&#x5408;&#x9002;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x5982;&#x679C;&#x7ED9;Label&#x7684;&#x5BBD;&#x5EA6;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x5B9A;&#x957F;&#x7EA6;&#x675F;&#xFF0C;&#x5219;&#x4F1A;&#x5728;&#x6587;&#x672C;&#x53D8;&#x957F;&#x65F6;&#x5BFC;&#x81F4;&#x663E;&#x793A;&#x4E0D;&#x5168;&#x3002;&#x56E0;&#x6B64;&#xFF0C;Xcode&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x673A;&#x5236;&#xFF0C;&#x8BA9;story board&#x91CC;&#x7684;&#x6587;&#x5B57;&#x77AC;&#x95F4;&#x7FFB;&#x500D;&#xFF0C;&#x7528;&#x6765;&#x68C0;&#x67E5;&#x662F;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x63A7;&#x4EF6;&#x90FD;&#x8BBE;&#x7F6E;&#x4E86;&#x6B63;&#x786E;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x4EE5;&#x65B9;&#x4FBF;&#x5F00;&#x53D1;&#x8005;&#x66F4;&#x597D;&#x5730;&#x672C;&#x5730;&#x5316;&#x3002; 2.2 &#x600E;&#x4E48;&#x6821;&#x9A8C;&#x6587;&#x672C;&#x63A7;&#x4EF6;&#x7684;&#x7EA6;&#x675F;&#xFF1F; &#x4E00;&#x3001;&#x6253;&#x5F00;Assistant Editor &#x4E8C;&#x3001;&#x5728;&#x6253;&#x5F00;&#x7684;&#x65B0;&#x89C6;&#x56FE;&#x4E0A;&#x90E8;&#x9009;&#x62E9;Automatic &gt; Preview &gt; &#x9009;&#x62E9;&#x9884;&#x89C8;&#x8981;&#x68C0;&#x67E5;&#x7684;&#x754C;&#x9762; &#x4E09;&#x3001;&#x9009;&#x62E9;Double-Lenght Pseudolanguage&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x754C;&#x9762;&#x4E2D;&#x6240;&#x6709;&#x6587;&#x5B57;Double&#x4E00;&#x904D; &#x6B64;&#x65F6;&#xFF0C;&#x5BF9;&#x4E8E;&#x7EA6;&#x675F;&#x8BBE;&#x7F6E;&#x4E0D;&#x6B63;&#x786E;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x4F60;&#x5C31;&#x80FD;&#x53D1;&#x73B0;&#x8BF8;&#x5982;&#x201C;&#x6587;&#x5B57;&#x5C55;&#x73B0;&#x4E0D;&#x5168;&#x201D;&#x6216;&#x201C;&#x6587;&#x5B57;&#x51FA;&#x754C;&#x201D;&#x7B49;&#x95EE;&#x9898;&#x4E86;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记六]]></title>
    <url>%2F2017%2F07%2F26%2F2017%2F0726iOSProgrammingBNRG06%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x516D;&#x7AE0;&#x8FD8;&#x662F;&#x8FD9;&#x4E2A;&#x754C;&#x9762;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x7528;&#x4EE3;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x4E0D;&#x518D;&#x901A;&#x8FC7;Interface Builder&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x8BBE;&#x7F6E;VC&#x7684;View - &#x521B;&#x5EFA;&#x7EA6;&#x675F;&#x6761;&#x4EF6; - &#x4E3A;&#x63A7;&#x4EF6;&#x5173;&#x8054;&#x4E8B;&#x4EF6; &#x672C;&#x7AE0;&#x5148;&#x7528;Interface Builder&#x521B;&#x5EFA;&#x597D;&#x4E86;TabBarViewController&#x3001;ConvertorViewController&#x548C;MapViewController&#xFF0C;&#x4EE5;&#x53CA;ConvertorVC&#x548C;MapVC&#x4F5C;&#x4E3A;TabBarVC&#x4E24;&#x4E2A;Tab&#x7684;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x3002;&#x5E76;&#x628A;MapVC&#x91CC;&#x7684;&#x9ED8;&#x8BA4;View&#x5220;&#x6389;&#x4E86;&#x3002;&#x4E4B;&#x540E;&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x7528;&#x4EE3;&#x7801;&#x5B8C;&#x6210;&#x7684;&#x3002; # 1 &#x7528;&#x4EE3;&#x7801;&#x5C06;&#x4E3B;MapVC&#x7684;View&#x8BBE;&#x4E3A;MapView &#x5982;&#x7B2C;5&#x7AE0;&#x672B;&#x5C3E;&#x63D0;&#x5230;&#x7684;&#xFF0C;&#x4E3A;VC&#x521B;&#x5EFA;&#x5B50;&#x89C6;&#x56FE;&#x662F;&#x8986;&#x76D6;VC&#x7684;loadView()&#x51FD;&#x6570;&#xFF1A; 12345678910111213&#x2026;&#x2026;import MapKit // &#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x76F4;&#x63A5;import&#xFF0C;&#x540E;&#x9762;&#x8FD8;&#x6709;&#x5BF9;MKMapView&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x5FC5;&#x518D;&#x624B;&#x52A8;&#x5BFC;&#x5165;frameworkclass MapViewController: UIViewController { var mapView: MKMapView! // &#x5B9A;&#x4E49;View&#x53D8;&#x91CF; override func loadView() { // Create a map view mapView = MKMapView() // &#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x4E3A;VC&#x7684;&#x4E3B;view view = mapView }&#x2026;&#x2026;} &#x6240;&#x4EE5;&#x5C31;&#x662F;&#x628A;VC&#x7684;view&#x53D8;&#x91CF;&#x6307;&#x5411;&#x65B0;View&#x7684;&#x5B9E;&#x4F8B;&#x5373;&#x53EF;&#x3002; 2. &#x7528;&#x4EE3;&#x7801;&#x521B;&#x5EFA;&#x7EA6;&#x675F;&#x6761;&#x4EF6; 2.1 autoresizing &#x5728;Auto Layout&#x4E4B;&#x524D;&#xFF0C;&#x82F9;&#x679C;&#x4F7F;&#x7528;autoresizing&#x6807;&#x5FD7;&#x4F4D;&#x63A7;&#x5236;&#x89C6;&#x56FE;&#x5728;&#x4E0D;&#x540C;&#x8BBE;&#x5907;&#x4E0A;&#x7684;&#x5E03;&#x5C40;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;view&#x90FD;&#x6709;&#x4E00;&#x4E2A;autoresizing&#x6807;&#x5FD7;&#x4F4D;&#xFF0C;&#x4F46;&#x662F;&#x8BE5;&#x6807;&#x5FD7;&#x4F4D;&#x5F80;&#x5F80;&#x4F1A;&#x548C;Auto Layout&#x7684;&#x7EA6;&#x675F;&#x76F8;&#x51B2;&#x7A81;&#xFF0C;&#x89E3;&#x51B3;&#x51B2;&#x7A81;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x628A;&#x6BCF;&#x4E2A;&#x89C6;&#x56FE;&#x7684;autoresizing&#x5F00;&#x5173;&#x5173;&#x6389;&#xFF0C;&#x5373;&#x628A;translatesAutoresizingMaskIntoConstraints&#x5C5E;&#x6027;&#x7F6E;&#x4E3A;false&#x3002; 2.2 &#x951A;&#x70B9;&#x7684;&#x6982;&#x5FF5; &#x951A;&#x662F;&#x89C6;&#x56FE;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x7528;&#x4E8E;&#x7EA6;&#x675F;&#x548C;&#x53E6;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#x951A;&#x70B9;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#x7684;&#x951A;&#x70B9;&#x5C5E;&#x6027;&#x6709; topAnchor&#x3001;leadingAnchor&#x3001;tailingAnchor&#x3001;bottomAnchor &#x53EF;&#x4EE5;&#x76F4;&#x89C2;&#x5730;&#x7C7B;&#x6BD4;&#x4E3A;&#x63A7;&#x4EF6;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x7684;&#x56DB;&#x4E2A;&#x628A;&#x624B;&#xFF1A; ## 2.3 &#x951A;&#x70B9;&#x7684;&#x4F7F;&#x7528; &#x7528;&#x4EE3;&#x7801;&#x6DFB;&#x52A0;&#x7EA6;&#x675F;&#x7684;&#x4E3B;&#x8981;&#x624B;&#x6BB5;&#x662F;&#x901A;&#x8FC7;&#x951A;&#x70B9;&#xFF0C;&#x4E24;&#x6B65;&#x5B8C;&#x6210;&#xFF1A; - &#x6307;&#x5B9A;&#x81EA;&#x5DF1;&#x7684;&#x54EA;&#x4E2A;&#x951A;&#x70B9;&#x548C;&#x53C2;&#x7167;&#x7684;&#x54EA;&#x4E2A;&#x951A;&#x70B9;&#x4E4B;&#x95F4;&#x662F;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x7EA6;&#x675F;&#xFF1B; - &#x8BA9;&#x8BE5;&#x7EA6;&#x675F;&#x751F;&#x6548;&#x3002; &#x5982;&#x4E0B;&#xFF1A; 12345678910// &#x8BA9;subView&#x7684;&#x9876;&#x90E8;&#x951A;&#x70B9;&#x4E0E;rootView&#x7684;&#x9876;&#x90E8;&#x951A;&#x70B9;&#x5BF9;&#x9F50;let topConstraint = subView.topAnchor.constraint(equalTo: rootView.topAnchor) // &#x8BA9;subView&#x7684;&#x5DE6;&#x4FA7;&#x951A;&#x70B9;&#x4E0E;rootView&#x7684;&#x9876;&#x90E8;&#x951A;&#x70B9;&#x5BF9;&#x9F50; let leadingConstraint = subView.leadingAnchor.constraint(equalTo: rootView.leadingAnchor)// &#x8BA9;subView&#x7684;&#x53F3;&#x4FA7;&#x951A;&#x70B9;&#x4E0E;rootView&#x7684;&#x9876;&#x90E8;&#x951A;&#x70B9;&#x5BF9;&#x9F50;let tailingConstraint = subView.trailingAnchor.constraint(equalTo: rootView.trailingAnchor)topConstraint.isActive = true // &#x8BA9;&#x5404;&#x951A;&#x70B9;&#x751F;&#x6548;leadingConstraint.isActive = truetailingConstraint.isActive = true topConstrait&#x662F;&#x4F7F;&#x7528;let&#x58F0;&#x660E;&#x7684;&#x5E38;&#x91CF;&#xFF0C;&#x56E0;&#x6B64;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x80FD;&#x8BBE;&#x7F6E;&#x5B83;&#x7684;isActive&#x5C5E;&#x6027;&#x5462;&#xFF1F; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5176;isActive&#x662F;&#x4E00;&#x4E2A;property observer&#xFF08;&#x76F8;&#x5173;&#x8BE6;&#x89C1;&#x300A;iOS Programming BNRG&#x300B;&#x7B14;&#x8BB0;&#x56DB;&#xFF09;&#xFF0C;&#x5728;NSLayoutConstraint::isActive&#x7684;&#x5E2E;&#x52A9;&#x6587;&#x6863;&#x4E2D;&#x63D0;&#x5230;&#xFF1A;activating &#x6216; deactivate&#x4E00;&#x4E2A;&#x7EA6;&#x675F;&#x4F1A;&#x8C03;&#x7528;&#x6700;&#x8FD1;&#x5171;&#x540C;&#x7956;&#x5148;&#x7684;addConstratint(_:)&#x548C;removeConstraint(_:)&#x65B9;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;isActive&#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x4FEE;&#x6539;&#x5E76;&#x6CA1;&#x6709;&#x53D8;&#x52A8;topConstratint&#x3002; &#x5728;&#x7B2C;193&#x9875;&#x63D0;&#x5230;&#xFF0C;&#x901A;&#x8FC7;&#x628A;isActive&#x5C5E;&#x6027;&#x7F6E;&#x4E3A;true&#xFF0C;&#x7EA6;&#x675F;&#x5C06;&#x4F1A;&#x6CBF;&#x7740;subView&#x548C;rootView&#x627E;&#x5230;&#x4ED6;&#x4EEC;&#x7684;&#x5171;&#x540C;&#x5BB9;&#x5668;&#xFF0C;&#x5E76;&#x8C03;&#x7528;&#x5BB9;&#x5668;&#x7684;addConstraint(_:)&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x770B;&#x5230;isActive&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 123/* The receiver may be activated or deactivated by manipulating this property. Only active constraints affect the calculated layout. Attempting to activate a constraint whose items have no common ancestor will cause an exception to be thrown. Defaults to NO for newly created constraints. */@available(iOS 8.0, *)open var isActive: Bool &#x5E76;&#x6CA1;&#x6709;&#x4E3A;&#x8BE5;&#x53D8;&#x91CF;&#x8BBE;&#x7F6E;&#x89C2;&#x5BDF;&#x8005;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; 2.4 &#x600E;&#x4E48;&#x8BA9;View&#x7684;&#x4E0A;&#x8FB9;&#x7F18;&#x8BA9;&#x51FA;&#x7CFB;&#x7EDF;&#x72B6;&#x6001;&#x680F;&#xFF1F; &#x5982;&#x679C;&#x8BA9;SegmentedControl&#x548C;&#x6839;view&#x7684;topAnchor&#x5BF9;&#x9F50;&#xFF0C;&#x4F1A;&#x76D6;&#x4F4F;&#x7CFB;&#x7EDF;&#x72B6;&#x6001;&#x680F;&#xFF1A; &#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x4E86;topLayoutGuide&#x548C;bottomLayoutGuide&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x8BB0;&#x5F55;&#x7CFB;&#x7EDF;&#x72B6;&#x6001;&#x680F;&#x7684;&#x951A;&#x70B9;&#xFF0C;&#x4EE5;&#x53CA;tab bar&#x7684;&#x951A;&#x70B9;&#xFF0C;&#x901A;&#x8FC7;&#x4E0E;&#x4ED6;&#x4EEC;&#x5BF9;&#x9F50;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x907F;&#x5F00;&#x9632;&#x6B62;&#x53E0;&#x52A0;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x628A;SegmentedControl&#x7684;&#x4E0A;&#x8FB9;&#x7F18;&#x5BF9;&#x5176;&#x5230;topLayoutGuide&#x7684;&#x4E0B;&#x8FB9;&#x7F18;&#xFF1A; &#x66F4;&#x597D;&#x7684;&#x4F53;&#x9A8C;&#x662F;&#x4E0D;&#x8981;&#x8BA9;&#x5B50;&#x89C6;&#x56FE;&#x53EF;&#x7740;&#x8FB9;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x5DE6;&#x53F3;&#x90FD;&#x7559;&#x51FA;&#x8FB9;&#x7F18;&#x3002;&#x4E00;&#x79CD;&#x505A;&#x6CD5;&#x662F;&#x8BBE;&#x5B9A;&#x56FA;&#x5B9A;&#x5C3A;&#x5BF8;&#xFF1B;&#x63A8;&#x8350;&#x505A;&#x6CD5;&#x662F;&#x4F7F;&#x7528;layoutMarginsGuide&#xFF0C;&#x6BCF;&#x4E2A;&#x89C6;&#x56FE;&#x4F1A;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#xFF0C;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x8FB9;&#x7F18;&#x5927;&#x5C0F;&#x3002;&#x8BA9;&#x5B50;&#x89C6;&#x56FE;&#x548C;&#x6839;&#x89C6;&#x56FE;&#x7684;&#x5DE6;&#x53F3;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50;&#xFF1A; 12let leadingConstrait = subView.leadingAnchor.constraint(equalTo: rootView.layoutMarginsGuide.leadlingAnchor)let tailingConstrait = subView.trailingAnchor.constraint(equalTo: rootView.layoutMarginsGuide.trailingAnchor) ## 2.5 &#x4EC0;&#x4E48;&#x662F;&#x663E;&#x5F0F;&#x7EA6;&#x675F;&#xFF1F; &#x4EE5;&#x4E0A;&#x662F;&#x4EE5;&#x89C6;&#x56FE;&#x4E3A;&#x4E2D;&#x5FC3;&#x6DFB;&#x52A0;&#x7EA6;&#x675F;&#xFF1A;&#x628A;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x5F53;&#x505A;&#x89C6;&#x56FE;&#x7684;&#x5C5E;&#x6027;&#x3002;&#x663E;&#x5F0F;&#x7EA6;&#x675F;&#x662F;&#x4EE5;&#x7EA6;&#x675F;&#x4E3A;&#x4E2D;&#x5FC3;&#xFF0C;&#x76F4;&#x63A5;&#x521B;&#x5EFA;&#x7EA6;&#x675F;&#xFF0C;&#x628A;&#x5173;&#x8054;&#x7684;&#x89C6;&#x56FE;&#x8FB9;&#x7F18;&#x5F53;&#x505A;&#x7EA6;&#x675F;&#x7684;&#x5C5E;&#x6027;&#x3002;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7EA6;&#x675F;&#x5B9E;&#x4F8B;&#xFF0C;&#x5176;&#x53C2;&#x6570;&#x7684;&#x57FA;&#x672C;&#x542B;&#x4E49;&#x5C31;&#x662F;&#x67D0;&#x4E2A;&#x89C6;&#x56FE;&#x7684;&#x67D0;&#x4E2A;&#x8FB9;&#x7F18;&#x7B49;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#x7684;&#x67D0;&#x4E2A;&#x8FB9;&#x7F18;&#xFF1A; &#x9690;&#x5F0F;&#x7EA6;&#x675F;&#x521B;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#x9700;&#x8981;&#x8BBE;&#x7F6E;isActive&#x5C5E;&#x6027;&#x4E3A;true&#xFF0C;&#x663E;&#x5F0F;&#x7EA6;&#x675F;&#x9700;&#x8981;&#x5417;&#xFF1F; &#x524D;&#x9762;&#x901A;&#x8FC7;subView.topAnchor.constraint(equalTo: rootView.topAnchor)&#x751F;&#x6210;&#x7684;&#x5C31;&#x662F;&#x4E00;&#x4E2A;NSLayoutConstraint&#xFF0C;&#x6B64;&#x5904;&#x53EA;&#x4E0D;&#x8FC7;&#x663E;&#x5F0F;&#x5730;&#x58F0;&#x660E;&#x4E86;NSLayoutConstratint&#x53D8;&#x91CF;&#xFF0C;&#x6240;&#x4EE5;&#x80AF;&#x5B9A;&#x4E5F;&#x9700;&#x8981;&#x8BA9;isActive&#x7F6E;&#x4E3A;true&#x3002; 3 &#x7528;&#x4EE3;&#x7801;&#x521B;&#x5EFA;&#x5B50;View&#x5E76;&#x4E3A;&#x4E4B;&#x5173;&#x8054;&#x4E8B;&#x4EF6; 3.1 &#x5982;&#x4F55;&#x521B;&#x5EFA;&#x5B50;View &#x5176;&#x5B9E;&#x5728;1&#x4E2D;&#x5DF2;&#x7ECF;&#x6F14;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x4E3A;VC&#x521B;&#x5EFA;&#x6839;View&#xFF0C;&#x521B;&#x5EFA;&#x5B50;View&#x7684;&#x65B9;&#x6CD5;&#x4E5F;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x76F4;&#x63A5;&#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#x5373;&#x53EF;&#x3002; 3.2 &#x5982;&#x4F55;&#x4E3A;&#x5B50;View&#x5173;&#x8054;&#x4E8B;&#x4EF6; &#x56DE;&#x60F3;&#x901A;&#x8FC7;Interface Builder&#x5173;&#x8054;&#x4E8B;&#x4EF6;&#x7684;&#x6B65;&#x9AA4;&#x662F;&#xFF1A; 1. &#x5728;VC&#x4E2D;&#x5199;&#x597D;&#x4E8B;&#x4EF6;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#xFF1B; 2. &#x5728;Interface Builder&#x4E2D;&#x4ECE;&#x4EA7;&#x751F;&#x4E8B;&#x4EF6;&#x7684;&#x89C6;&#x56FE; Ctrl&#x62D6;&#x52A8;&#x5230;VC&#x5C31;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#x4E86;&#x3002; &#x4EE3;&#x7801;&#x548C;Interface Builder&#x7684;&#x6B65;&#x9AA4;&#x5F88;&#x7C7B;&#x4F3C;&#xFF1A; 1. &#x5728;VC&#x4E2D;&#x5199;&#x597D;&#x4E8B;&#x4EF6;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#xFF1A; 1234567func mapTypeChanged(_ segControl: UISegmentedControl){ switch segControl.selectedSegmentIndex { case 0: mapView.mapType = .standard &#x2026;&#x2026; }} &#x7528;&#x4EE3;&#x7801;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#xFF1A; 1segmentedControl.addTarget(self, action: #selector(MapViewController.mapTypeChanged(_:)), for: .valueChanged) &#x5B83;&#x8868;&#x793A;&#xFF1A;&#x7531;&#x5F53;&#x524D;VC&#x7684;mapTypeChanged(_:)&#x51FD;&#x6570;&#x8D1F;&#x8D23;&#x54CD;&#x5E94;segmentedControl&#x7684;valueChanged&#x4E8B;&#x4EF6;&#xFF0C;&#x3002; &#x6CE8;&#xFF1A;UIControl&#x6709;&#x51E0;&#x4E2A;&#x901A;&#x7528;&#x4E8B;&#x4EF6;&#xFF1A; UIControlEvents.touchDown&#x5728;&#x63A7;&#x4EF6;&#x4E0A;&#x6309;&#x4E0B; UIControlEvents.touchUpInsidetouchDown&#x540E;&#x5728;&#x7A7A;&#x95F4;&#x5185;&#x90E8;&#x62AC;&#x8D77; UIControlEvents.valueChanged&#x63A7;&#x4EF6;&#x7684;&#x503C;&#x88AB;&#x6539;&#x53D8;&#x4E86; UIControlEvents.editingChanged&#x6B63;&#x5728;&#x7F16;&#x8F91;&#x7684;&#x5185;&#x5BB9;&#x53D1;&#x751F;&#x53D8;&#x5316;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记五]]></title>
    <url>%2F2017%2F07%2F25%2F2017%2F0725iOSProgrammingBNRG05%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E94;&#x7AE0;&#x589E;&#x52A0;&#x4E86;TabBarViewController&#xFF0C;&#x4E00;&#x4E2A;Tab&#x5173;&#x8054;&#x5230;&#x524D;&#x9762;&#x505A;&#x7684;QA&#x754C;&#x9762;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x5173;&#x8054;&#x4E86;MapView&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - TabBarViewController&#x7684;&#x4F7F;&#x7528; - &#x5177;&#x6709;&#x591A;&#x4E2A;ViewController&#x7684;&#x5E94;&#x7528; - framework - &#x5728;&#x9879;&#x76EE;&#x4E2D;&#x6DFB;&#x52A0;&#x56FE;&#x7247;&#x8D44;&#x6E90; 1 TabBarController 1.1 &#x5728;Interface Builder&#x4E2D;&#x5F15;&#x5165;TabBarController&#xFF1F; &#x5728;Interface Builder&#x4E2D;&#x9009;&#x4E2D;VC&#xFF0C;&#x83DC;&#x5355;Editor &gt; Embed in &gt; Tab Bar Container Interface Builder&#x4F1A;&#x4E3A;&#x4E4B;&#x521B;&#x5EFA;TabBarController&#xFF1A; ## 1.2 &#x628A;&#x5DF2;&#x6709;&#x7684;VC&#x88C5;&#x5165;TabBarController&#xFF1F; &#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x4ECE;TabBarController&#x7684;VC&#xFF0C;Ctrl&#x62D6;&#x52A8;&#x5230;&#x9700;&#x8981;&#x88C5;&#x8FDB;&#x6765;&#x7684;&#x5B50;VC&#xFF0C;&#x7136;&#x540E;&#x5728;&#x9762;&#x677F;&#x4E0A;&#x9009;&#x62E9;view controllers Interface Builder&#x5C31;&#x4F1A;&#x628A;VC&#x88C5;&#x5230;TabBarController&#x91CC;&#x6765;&#xFF0C;&#x65B0;&#x589E;&#x52A0;&#x7684;&#x8FDE;&#x7EBF;&#x5C31;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x542B;&#x4E49;&#xFF1A; ## 1.3 &#x70B9;&#x51FB;TabBarController&#x5E95;&#x90E8;&#x7684;tab&#x9875;&#x540E;&#xFF0C;&#x7531;&#x8C01;&#x6765;&#x5904;&#x7406;&#x5207;&#x6362;&#x7684;&#x6D88;&#x606F;&#xFF1F; &#x5207;&#x6362;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x5E94;&#x8BE5;&#x662F;&#x88AB;TabBarController&#x5C01;&#x88C5;&#x5728;&#x5176;&#x5185;&#x90E8;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x8981;&#x628A;&#x5B50;VC&#x5305;&#x542B;&#x8FDB;&#x6765;&#xFF0C;&#x81EA;&#x7136;&#x5C31;&#x6709;&#x5207;&#x6362;&#x7684;&#x903B;&#x8F91;&#x3002; 1.4 &#x600E;&#x4E48;&#x4FEE;&#x6539;TabBarController&#x5E95;&#x90E8;Tab&#x9875;&#x7684;&#x6807;&#x9898;&#x548C;&#x56FE;&#x7247;&#xFF1F; &#x70B9;&#x51FB;&#x88AB;&#x5305;&#x542B;&#x7684;VC&#x5E95;&#x90E8;&#x7684;TabBar&#xFF0C;&#x76F4;&#x63A5;&#x4FEE;&#x6539;Title&#xFF0C;&#x5982;&#x679C;&#x8D44;&#x6E90;&#x91CC;&#x6709;&#x5BFC;&#x5165;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x4E0B;&#x62C9;Image&#x5C31;&#x80FD;&#x627E;&#x5230;&#x8BE5;&#x8D44;&#x6E90;&#x3002; 2 &#x591A;&#x4E2A;View Controllers&#xFF1F; 2.1 &#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x591A;&#x4E2A;View Controllers&#xFF1F;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;View Controller&#x63A7;&#x5236;&#x591A;&#x4E2A;View&#xFF1F; &#x6211;&#x5206;&#x6790;&#x5E94;&#x8BE5;&#x662F;&#x65B9;&#x4FBF;&#x505A;&#x6A21;&#x5757;&#x5316;&#x7684;&#x5C01;&#x88C5;&#xFF0C;VC&#x5C31;&#x662F;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x4E2D;&#x67A2;&#xFF0C;&#x5B50;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E4B;&#x95F4;&#x5E94;&#x5F53;&#x9694;&#x79BB;&#x3002;&#x6BD4;&#x5982;TabBarController&#x7684;&#x903B;&#x8F91;&#x662F;&#x5199;&#x5728;&#x5B83;&#x7684;VC&#x91CC;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5199;&#x5728;&#x603B;VC&#x91CC;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x628A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;UI&#x903B;&#x8F91;&#x5206;&#x5C42;&#x5206;&#x6A21;&#x5757;&#x9694;&#x79BB;&#x5F00;&#x4E86;&#x3002; &#x5982;&#x679C;&#x6BCF;&#x4E2A;View Controller&#x63A7;&#x5236;&#x4E00;&#x4E2A;View&#xFF0C;&#x90A3;&#x5728;&#x4E24;&#x4E2A;View Controller&#x4E4B;&#x4E0A;&#x5E94;&#x8BE5;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;View Controller&#x54AF;&#xFF1F;&#x7528;&#x6765;&#x63A7;&#x5236;&#x5E95;&#x90E8;&#x7684;tab&#x548C;&#x4E0A;&#x9762;&#x7684;view&#x540C;&#x6B65;&#xFF1F; &#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x786E;&#x5B9E;&#x5982;&#x6B64;&#xFF0C;TabBarController&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x4E0A;&#x5C42;&#x7684;View Controller&#x3002;&#x5B83;&#x7528;&#x6765;&#x7EF4;&#x62A4;&#x5E95;&#x90E8;tab&#x548C;&#x4E0A;&#x9762;&#x7684;VC&#x800C;&#x4E0D;&#x662F;View&#x7684;&#x540C;&#x6B65; 2.2 &#x4EC0;&#x4E48;&#x662F;&#x61D2;&#x52A0;&#x8F7D;&#xFF1F; &#x76F4;&#x5230;&#x8981;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x663E;&#x793A;&#x7684;&#x65F6;&#x5019;&#xFF0C;ViewController&#x624D;&#x521B;&#x5EFA;&#x5176;&#x4E2D;&#x7684;&#x5B50;&#x89C6;&#x56FE;&#xFF0C;&#x8FD9;&#x79CD;&#x4F18;&#x5316;&#x624B;&#x6BB5;&#x79F0;&#x4F5C;&#x61D2;&#x52A0;&#x8F7D;&#x3002; &#x600E;&#x4E48;&#x63A7;&#x5236;&#x4F7F;&#x7528;/&#x4E0D;&#x4F7F;&#x7528;&#x61D2;&#x52A0;&#x8F7D;&#xFF1F; 2.3 View Controller&#x521B;&#x5EFA;&#x5176;&#x4E0B;View&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#x9014;&#x5F84;&#xFF1F; &#x7B2C;&#x4E00;&#x79CD;&#xFF1A;&#x5728;Interface Builder&#x901A;&#x8FC7;storyboard&#x62D6;&#x62FD;&#x51FA;&#x754C;&#x9762;&#x3002;Interface Builder&#x9ED8;&#x8BA4;&#x6709;&#x4E00;&#x4E2A;ViewController&#x53CA;&#x5176;&#x6839;View&#xFF0C;&#x5982;&#x679C;&#x8981;&#x521B;&#x5EFA;&#x66F4;&#x591A;&#x7684;VC&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x4ECE;Object Library&#x4E2D;&#x62D6;&#x5230;Interface Builder&#x4E2D;&#x3002;&#x5982;&#x679C;&#x8981;&#x66FF;&#x6362;&#x6389;VC&#x7684;&#x9ED8;&#x8BA4;View&#xFF0C;&#x53EA;&#x9700;&#x5148;&#x628A;&#x539F;&#x5148;&#x7684;View&#x5220;&#x9664;&#xFF0C;&#x518D;&#x4ECE;Object Library&#x4E2D;&#x627E;&#x5230;&#x60F3;&#x8981;&#x7684;View&#xFF0C;&#x62D6;&#x5230;VC&#x91CC;&#x5373;&#x53EF;&#x3002; &#x7B2C;&#x4E8C;&#x79CD;&#xFF1A;&#x901A;&#x8FC7;&#x8986;&#x5199;ViewController&#x7684;loadView()&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x6B64;&#x65B9;&#x6CD5;&#x4E2D;&#x521B;&#x5EFA;&#x5B50;&#x89C6;&#x56FE; &#x6CE8;1&#xFF1A;ViewController&#x6709;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x5C5E;&#x6027;var view:UIView!&#xFF0C;&#x5B83;&#x662F;&#x8BE5;ViewController&#x7684;&#x6839;&#x89C6;&#x56FE;&#x3002;&#x628A;ViewController&#x7684;&#x6839;&#x89C6;&#x56FE;&#x6DFB;&#x52A0;&#x5230;&#x4E00;&#x4E2A;window&#xFF0C;&#x4F1A;&#x8BA9;&#x8BE5;ViewController&#x7684;&#x6574;&#x4E2A;&#x89C6;&#x56FE;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x5168;&#x90E8;&#x6DFB;&#x52A0;&#x8FDB;&#x6765;&#x3002; &#x6CE8;2&#xFF1A;UIWindow&#x6709;&#x4E00;&#x4E2A;rootViewController&#x5C5E;&#x6027;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;ViewController&#x88AB;&#x8BBE;&#x7F6E;&#x4E3A;window&#x7684;rootViewController&#xFF0C;&#x8BE5;window&#x4E4B;&#x524D;&#x7684;&#x6240;&#x6709;&#x5B50;&#x89C6;&#x56FE;&#x5747;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x65B0;VC&#x7684;&#x6240;&#x6709;&#x89C6;&#x56FE;&#x90FD;&#x88AB;&#x6DFB;&#x52A0;&#x5230;window&#x4E2D;&#x3002; &#x6CE8;3&#xFF1A;&#x6BCF;&#x4E2A;app&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x754C;&#x9762;&#xFF0C;&#x5B83;&#x6307;&#x5411;&#x4E00;&#x4E2A;storyboard&#x3002;&#x8BE5;storyboard&#x4E2D;&#x88AB;&#x8BBE;&#x4E3A;initial viewcontroller&#x7684;VC&#x5C31;&#x662F;UIWindow&#x7684;rootViewController&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;app&#x542F;&#x52A8;&#x65F6;&#x7684;&#x9ED8;&#x8BA4;&#x754C;&#x9762;&#x3002;&#x5982;&#x679C;&#x9879;&#x76EE;&#x5B58;&#x5728;&#x591A;&#x4E2A;storyboard&#xFF0C;&#x5728;&#x9879;&#x76EE;&#x8BBE;&#x7F6E;&#x4E2D;&#x53EF;&#x4EE5;&#x8BBE;&#x5B9A;&#x4E3B;&#x754C;&#x9762;&#x6307;&#x5411;&#x54EA;&#x4E00;&#x4E2A;storyboard&#xFF1A; 2.4 &#x5F53;&#x6709;&#x591A;&#x4E2A;VC&#x65F6;&#xFF0C;&#x600E;&#x4E48;&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#xFF0C;&#x5373;&#x7A0B;&#x5E8F;&#x4E00;&#x542F;&#x52A8;&#x65F6;&#x5C55;&#x73B0;&#x7684;VC&#xFF1F; 3 framework 3.1 &#x4EC0;&#x4E48;&#x662F;framework&#xFF1F; &#x5728;&#x7B2C;166&#x9875;&#x63D0;&#x5230;&#xFF1A;framework&#x662F;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x5E93;&#xFF0C;&#x5305;&#x62EC;&#x4EE3;&#x7801;&#x3001;&#x8D44;&#x6E90;&#x5982;&#x754C;&#x9762;&#x6587;&#x4EF6;&#x548C;&#x56FE;&#x7247;&#x3002; 3.2 &#x90FD;&#x6709;&#x54EA;&#x4E9B;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x5BFC;&#x5165;framework&#xFF1F; &#x9996;&#x5148;&#x5C31;&#x662F;&#x4E66;&#x4E2D;&#x4ECB;&#x7ECD;&#x7684;&#x624B;&#x52A8;&#x5BFC;&#x5165;&#x6B65;&#x9AA4; &#x4ECE;2.3&#x4E2D;&#x7684;&#x4E66;&#x4E2D;&#x89E3;&#x91CA;&#x8FD8;&#x53EF;&#x4EE5;&#x63A8;&#x6D4B;&#x4F7F;&#x7528;import&#x5173;&#x952E;&#x5B57;&#x5E94;&#x8BE5;&#x4E5F;&#x53EF;&#x4EE5;&#x3002; 3.3 &#x5728;&#x672C;&#x7AE0;&#x4F8B;&#x7A0B;&#x4E2D;&#xFF0C;&#x5728;Interface Builder&#x4E2D;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;VC&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;MKMapView&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x4E3A;&#x6B64;&#x521B;&#x5EFA;&#x4EC0;&#x4E48;&#x4EE3;&#x7801;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x4F1A;&#x5BFC;&#x81F4;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#xFF1F; &#x4E66;&#x4E2D;&#x7684;&#x89E3;&#x91CA;&#x662F;&#xFF1A;MKMapView&#x6240;&#x5728;&#x7684;framework&#x5E76;&#x6CA1;&#x6709;&#x88AB;&#x52A0;&#x8F7D;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x3002;&#x539F;&#x56E0;&#x662F;&#x5982;&#x679C;&#x4EC5;&#x901A;&#x8FC7;import&#x628A;MapKit&#x5BFC;&#x5165;&#x8FDB;&#x6765;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#x4F7F;&#x7528;&#x8BE5;framework&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5C31;&#x4F1A;&#x628A;&#x8BE5;framework&#x4F18;&#x5316;&#x6389;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x64CD;&#x4F5C;&#x5B9E;&#x9645;&#x4E0A;&#x53EA;&#x662F;&#x5728;Interface Builder&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;MKMapView&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5199;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x4F7F;&#x7528;import&#x5173;&#x952E;&#x5B57;&#x628A;&#x5B83;&#x5BFC;&#x5165;&#xFF0C;&#x6211;&#x731C;&#x6D4B;&#x662F;&#x5728;Interface Builder&#x7684;&#x8FD9;&#x4E2A;&#x884C;&#x4E3A;&#x5B9E;&#x9645;&#x4F1A;&#x89E6;&#x53D1;import&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4E0D;&#x7406;&#x89E3;&#x7684;&#x662F;&#xFF0C;&#x65E2;&#x7136;VC&#x4F1A;&#x88AB;&#x52A0;&#x8F7D;&#xFF0C;&#x5176;View&#x5C31;&#x662F;MKMapView&#xFF0C;&#x81EA;&#x7136;&#x4E00;&#x5B9A;&#x6709;&#x4F7F;&#x7528;MapKit framework&#x7684;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x5427;&#xFF1F;&#x800C;&#x4E14;&#x7406;&#x8BBA;&#x4E0A;&#x8BF4;&#xFF0C;&#x9759;&#x6001;&#x5E93;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x5185;&#x90E8;&#x4EE3;&#x7801;&#x7684;&#x903B;&#x8F91;&#x9519;&#x8BEF;&#xFF0C;&#x5E94;&#x8BE5;&#x89E6;&#x53D1;&#x7684;&#x662F;&#x7F16;&#x8BD1;&#x65F6;&#x9519;&#x8BEF;&#xFF0C;&#x800C;&#x4E0D;&#x5E94;&#x8BE5;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x5440;&#xFF1F; 4 &#x56FE;&#x7247;&#x8D44;&#x6E90;&#x7684;&#x6DFB;&#x52A0; 4.1 &#x4E3A;&#x4E0D;&#x540C;&#x8BBE;&#x5907;&#x6DFB;&#x52A0;&#x4E00;&#x5957;2x&#x3001;3x&#x7684;&#x56FE;&#x7247;&#x8D44;&#x6E90; &#x5982;&#x56FE;&#xFF0C;&#x8FDB;&#x5165;Asserts.xcassets&#xFF0C;&#x51C6;&#x5907;&#x597D;&#x4E3A;&#x4E0D;&#x540C;&#x8BBE;&#x5907;&#x51C6;&#x5907;&#x7684;&#x540C;&#x540D;&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x5B83;&#x4EEC;&#x4E00;&#x8D77;&#x62D6;&#x5165;Interface Builder&#xFF0C;Xcode&#x5C06;&#x6839;&#x636E;&#x6587;&#x4EF6;&#x540D;&#x4E3A;&#x4ED6;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x5957;&#x8D44;&#x6E90;&#xFF1A; 5 VC&#x52A0;&#x8F7D;&#x7684;&#x521D;&#x671F;&#x51FD;&#x6570;&#x8C03;&#x7528; 5.1 viewDidLoad()&#x548C;viewWillAppear(_:) viewDidLoad()&#x662F;&#x5728;VC&#x7684;interface&#x6587;&#x4EF6;&#x88AB;&#x52A0;&#x8F7D;&#x540E;&#x8C03;&#x7528;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x6240;&#x6709;vc&#x7684;outlets&#x90FD;&#x5DF2;&#x6307;&#x5411;&#x4E86;&#x6B63;&#x786E;&#x7684;&#x5B9E;&#x4F8B; viewWillAppear(_:)&#x662F;&#x5F53;view&#x88AB;&#x6DFB;&#x52A0;&#x5230;winow&#x65F6;&#x88AB;&#x8C03;&#x7528;&#x3002; &#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x8C01;&#x5148;&#x8C01;&#x540E;&#x5462;&#xFF1F;&#x6211;&#x5224;&#x65AD;&#x5E94;&#x8BE5;&#x662F;&#x5148;viewDidLoad()&#xFF0C;&#x4E4B;&#x540E;&#x624D;viewWillAppear(_:)&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x5148;&#x4E3A;&#x6BCF;&#x4E2A;loutlets&#x6307;&#x5411;&#x6B63;&#x786E;&#x5B9E;&#x4F8B;&#xFF0C;&#x518D;&#x628A;&#x8FD9;&#x4E9B;&#x5B9E;&#x4F8B;&#x6DFB;&#x52A0;&#x5230;window &#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x533A;&#x522B;&#xFF1A;viewDidLoad()&#x4EC5;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#xFF0C;&#x800C;viewWillAppear(_:)&#x4F1A;&#x5728;&#x6BCF;&#x6B21;view&#x5C55;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x88AB;&#x8C03;&#x7528;&#x3002; &#x95EE;&#x9898;&#x53C8;&#x6765;&#x4E86;&#xFF1A;&#x672C;&#x7AE0;&#x4E0D;&#x662F;&#x8BF4;&#x8FC7;&#x5F53;window&#x7684;rootViewController&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x539F;&#x6765;&#x7684;VC&#x5305;&#x542B;&#x7684;&#x7A97;&#x4F53;&#x90FD;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#x4E48;&#xFF1F;&#x5982;&#x679C;&#x662F;&#x8FD9;&#x6837;&#xFF0C;&#x4E0B;&#x6B21;&#x518D;&#x88AB;&#x5207;&#x56DE;&#x6765;&#x7684;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x54AF;&#xFF1F;&#x90A3;&#x5C31;&#x4E0D;&#x5E94;&#x8BE5;&#x4EC5;&#x521B;&#x5EFA;&#x4E00;&#x6B21;&#x4E86;&#x5427;&#xFF1F; 5.2 &#x51E0;&#x4E2A;&#x91CD;&#x8981;&#x7684;VC&#x7684;&#x51FD;&#x6570; init(coder:)&#x5F53;&#x4ECE;storyboard&#x4E2D;&#x521B;&#x5EFA;VC&#x5B9E;&#x4F8B;&#x65F6;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x3002; init(nibName: bundle:)&#x5F53;VC&#x4E0D;&#x662F;&#x901A;&#x8FC7;storyboard&#x521B;&#x5EFA;&#x65F6;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#x3002; loadView()&#x91CD;&#x8F7D;&#x8BE5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#xFF08;&#x800C;&#x4E0D;&#x662F;storyboard&#xFF09;&#x6765;&#x521B;&#x5EFA;VC&#x7684;&#x5B50;&#x89C6;&#x56FE;&#x3002; viewDidLoad()&#x5728;VC&#x7684;&#x5B50;&#x89C6;&#x56FE;&#x521B;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#x8C03;&#x7528;&#xFF0C;&#x91CD;&#x8F7D;&#x8BE5;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x914D;&#x7F6E;&#x4ECE;Interface&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x8F7D;&#x8FDB;&#x6765;&#x7684;&#x5B50;&#x89C6;&#x56FE;&#x3002; viewWillAppear(_:)&#x91CD;&#x8F7D;&#x8BE5;&#x51FD;&#x6570;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x4ECE;Interface&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x8F7D;&#x8FDB;&#x6765;&#x7684;&#x5B50;&#x89C6;&#x56FE;&#x3002;viewDidAppear(_:)&#x5728;&#x6BCF;&#x6B21;VC&#x88AB;&#x663E;&#x793A;&#x5230;&#x5C4F;&#x5E55;&#x65F6;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x3002;viewWillDisappear(_:)&#x548C;viewDidDisappear(_:)&#x4F1A;&#x5728;&#x6BCF;&#x6B21;VC&#x4ECE;&#x5C4F;&#x5E55;&#x4E0A;&#x6D88;&#x5931;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记四]]></title>
    <url>%2F2017%2F07%2F24%2F2017%2F0724iOSProgrammingBNRG04%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x56DB;&#x7AE0;&#x5728;&#x6B64;&#x754C;&#x9762;&#x4E0A;&#x4FEE;&#x6539;degrees Fahrenheit&#x7684;&#x503C;&#xFF0C;&#x5B83;&#x4F1A;&#x6362;&#x7B97;&#x51FA;degree Celsius&#x7684;&#x503C;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x54CD;&#x5E94;TextField&#x7684;&#x53D8;&#x5316;&#x4E8B;&#x4EF6; - &#x5728;TextField&#x5931;&#x53BB;&#x7126;&#x70B9;&#x540E;&#x6536;&#x8D77;&#x952E;&#x76D8; - Property observer - &#x534F;&#x8BAE;&#x548C;&#x4EE3;&#x7406; 1 &#x5E03;&#x5C40;TextField UI&#xFF0C;&#x5E76;&#x5173;&#x8054;outlets&#x5BF9;&#x8C61; 1.1 &#x4E3A;&#x4EC0;&#x4E48;&#x7ED9;TextField&#x586B;&#x4E86;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x5B57;&#x53F7;&#xFF0C;&#x4F46;&#x8FD0;&#x884C;&#x65F6;&#x8FD8;&#x662F;&#x5F88;&#x5C0F;&#xFF1F; &#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;Label&#xFF08;&quot;degrees Fahrenheit&quot;&#xFF09;&#x7684;&#x5B57;&#x53F7;&#x53EA;&#x6709;27&#xFF0C;TextField&#xFF08;&quot;100&quot;&#xFF09;&#x7684;&#x5B57;&#x53F7;&#x6709;50&#xFF0C;&#x4F46;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;Label&#x7684;&#x5B57;&#x4F53;&#x5C3A;&#x5BF8;&#x5374;&#x6BD4;TextField&#x7684;&#x660E;&#x663E;&#x5927;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;TextField&#x7684;&#x5B57;&#x53F7;&#x8BBE;&#x7F6E;&#x6CA1;&#x6709;&#x751F;&#x6548;&#xFF1A; &#x5982;&#x679C;&#x7ED9;TextField&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;Width&#x7EA6;&#x675F;&#xFF0C;&#x5B57;&#x53F7;&#x624D;&#x4F1A;&#x751F;&#x6548;&#x3002; &gt; &#x8FD9;&#x548C;&#x7B2C;3&#x7AE0;&#x63D0;&#x5230;&#x7684;&#x5B57;&#x53F7;&#x662F;&#x9690;&#x5F0F;&#x7EA6;&#x675F;&#x4E0D;&#x7B26;&#x5462;&#xFF1A;TextField&#x7684;&#x5B57;&#x53F7;&#x9690;&#x5F0F;&#x7EA6;&#x675F;&#x6CA1;&#x6709;&#x751F;&#x6548;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;TextField&#x548C;Label&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;Label&#x662F;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x63A7;&#x4EF6;&#xFF0C;&#x5185;&#x5BB9;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x5C3A;&#x5BF8;&#x662F;&#x7531;&#x5185;&#x5BB9;+&#x5B57;&#x4F53;&#x5B57;&#x53F7;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x7684;&#x3002;&#x800C;TextField&#x662F;&#x7528;&#x4E8E;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x8F93;&#x5165;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x4E0D;&#x56FA;&#x5B9A;&#xFF0C;&#x5F53;&#x7136;&#x4E0D;&#x5E94;&#x8BE5;&#x6839;&#x636E;&#x521D;&#x59CB;&#x5185;&#x5BB9;&#x6765;&#x51B3;&#x5B9A;&#x5176;&#x5BBD;&#x5EA6;&#x3002;TextField&#x6709;&#x4E00;&#x4E2A;Min Font Size&#x5C5E;&#x6027;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x503C;&#x8DB3;&#x591F;&#x5C0F;&#xFF0C;&#x5B57;&#x53F7;&#x6839;&#x636E;TextField&#x7684;&#x957F;&#x5BBD;&#x800C;&#x53D8;&#x5C0F;&#x3002;&#x8C03;&#x5927;&#x8FD9;&#x4E2A;&#x503C;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x6700;&#x5C0F;&#x5B57;&#x53F7;&#x3002; 2 &#x54CD;&#x5E94;Editbox&#x7684;&#x53D8;&#x5316;&#x4E8B;&#x4EF6; 2.1 &#x5982;&#x679C;View&#x6709;&#x591A;&#x79CD;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x4F55;&#x6307;&#x5B9A;&#x5177;&#x4F53;&#x5173;&#x8054;&#x54EA;&#x4E00;&#x79CD;&#xFF1F; &#x7B2C;1&#x7AE0;Ctrl+&#x9F20;&#x6807;&#x62D6;&#x52A8;&#x6309;&#x94AE;&#x5230;ViewController&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x548C;ViewController&#x4E2D;&#x7684;IBAction&#x51FD;&#x6570;&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x5982;&#x679C;&#x6309;&#x94AE;&#x6709;&#x591A;&#x79CD;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x4F55;&#x6307;&#x5B9A;&#x5177;&#x4F53;&#x5173;&#x8054;&#x54EA;&#x4E00;&#x79CD;&#x5462;&#xFF1F;&#x6BD4;&#x5982;&#x62D6;&#x52A8;EditBox&#x5230;ViewController&#x7684;Action&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5173;&#x8054;&#x7684;&#x662F;EditBox&#x7684;&#x4EC0;&#x4E48;&#x6D88;&#x606F;&#x5462;&#xFF1F; &#x8FD9;&#x662F;&#x5173;&#x8054;Action&#x7684;&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;&#x5BF9;&#x4E8E;&#x6D88;&#x606F;&#x5355;&#x4E00;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;&#x4ECE;&#x63A7;&#x4EF6;&#x62D6;&#x5230;ViewController&#x5373;&#x53EF;&#xFF1B;&#x5982;&#x679C;&#x63A7;&#x4EF6;&#x53EF;&#x4EE5;&#x89E6;&#x53D1;&#x591A;&#x79CD;&#x6D88;&#x606F;&#xFF0C;&#x5148;&#x70B9;&#x51FB;&#x4EA7;&#x751F;&#x6D88;&#x606F;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x5728;Connection Inspector&#x4E2D;&#x9009;&#x62E9;&#x8981;&#x5173;&#x8054;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x518D;Ctrl&#x62D6;&#x62FD;&#x5230;ViewController&#xFF0C;&#x9009;&#x62E9;IBAction&#x51FD;&#x6570;&#xFF1A; 3 &#x5728;TextField&#x5931;&#x53BB;&#x8F93;&#x5165;&#x7126;&#x70B9;&#x540E;&#xFF0C;&#x6536;&#x56DE;&#x952E;&#x76D8; 3.1 TextField&#x5931;&#x53BB;&#x7126;&#x70B9;&#x4F1A;&#x89E6;&#x53D1;&#x4EC0;&#x4E48;&#x6D88;&#x606F;&#xFF1F; &#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x95EE;&#x7684;&#x4E0D;&#x5BF9;&#xFF0C;&#x56E0;&#x4E3A;&#x70B9;&#x51FB;Background&#x5E76;&#x4E0D;&#x4F1A;&#x5BFC;&#x81F4;TextField&#x5931;&#x53BB;&#x7126;&#x70B9;&#x3002;&#x5176;&#x5B9E;&#x662F;&#x5728;Background View&#x7684;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x91CC;&#x6267;&#x884C;&#x7684;&#x6536;&#x56DE;&#x952E;&#x76D8;&#x3002; 3.2 &#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x6536;&#x56DE;&#x952E;&#x76D8;&#xFF1F; &#x8FD9;&#x91CC;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x7ED9;Background View&#x5173;&#x8054;&#x4E00;&#x4E2A;Gesture Recognizer&#xFF0C;&#x5F53;&#x5728;&#x6B64;View&#x4E0A;&#x70B9;&#x51FB;&#x4E00;&#x4E0B;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;TextField&#x7684;resignFirstResponder()&#x51FD;&#x6570;&#x4F7F;&#x4E4B;&#x5931;&#x53BB;&#x7126;&#x70B9;&#x3002; &gt; &#x8FD9;&#x4E48;&#x505A;&#x6709;&#x4E2A;&#x7F3A;&#x70B9;&#xFF1A;&#x5982;&#x679C;&#x5F53;&#x524D;&#x754C;&#x9762;&#x4E0A;&#x7684;TextField&#x5B9E;&#x4F8B;&#x5F88;&#x591A;&#x600E;&#x4E48;&#x529E;&#x5462;&#xFF1F;&#x6BCF;&#x4E2A;&#x5B9E;&#x4F8B;&#x8C03;&#x4E00;&#x6B21;&#x6709;&#x70B9;&#x592A;&#x50BB;&#x4E86;&#x5427;&#xFF1F;&#x7B2C;14&#x7AE0;&#x6709;&#x66F4;&#x7B80;&#x6D01;&#x7684;&#x65B9;&#x6CD5;&#x3002; 3.3 &#x600E;&#x4E48;&#x7ED9;View&#x5B9A;&#x4E49;&#x548C;&#x5173;&#x8054;&#x4E00;&#x4E2A;&#x624B;&#x52BF;&#x5904;&#x7406;&#x51FD;&#x6570; &#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x4ECE;Object Library&#x4E2D;&#x628A;&#x8981;&#x5B9A;&#x4E49;&#x7684;Gesture Recognizer&#x62D6;&#x5230;View&#x4E0A;&#xFF0C;&#x8BE5;ViewController&#x7684;&#x6807;&#x9898;&#x680F;&#x4F1A;&#x4E3A;&#x6B64;Gesture Recognizer&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x56FE;&#x6807;&#xFF1B; &#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x628A;&#x8FD9;&#x4E2A;Gesture Recognizer&#x63A7;&#x4EF6;&#x5F53;&#x505A;&#x624B;&#x52BF;&#x7684;&#x89E6;&#x53D1;&#x6E90;&#xFF0C;&#x4ECE;&#x5B83;&#x7684;&#x56FE;&#x6807; Ctrl&#x62D6;&#x62FD; &#x5230;ViewController&#xFF1B; &#x7B2C;&#x4E09;&#x6B65;&#xFF0C;&#x9009;&#x62E9;&#x88AB;&#x5173;&#x8054;&#x7684;&#x51FD;&#x6570;&#x3002; &#x8FD9;&#x91CC;&#x662F;&#x628A;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#xFF08;Gesture Recognizer&#xFF09;&#x7B49;&#x540C;&#x4E8E;&#x6309;&#x94AE;&#x6765;&#x5904;&#x7406;&#x4E86;&#x3002;&#x5C3D;&#x7BA1;&#x624B;&#x52BF;&#x662F;&#x7528;&#x6237;&#x53D1;&#x51FA;&#x7684;&#xFF0C;&#x4F46;&#x7531;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x628A;&#x8FD9;&#x4E2A;&#x624B;&#x52BF;&#x8F6C;&#x5316;&#x6210;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#xFF0C;&#x8FD9;&#x8DDF;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#xFF0C;&#x518D;&#x7531;&#x6309;&#x94AE;&#x628A;&#x8FD9;&#x4E2A;&#x70B9;&#x51FB;&#x8F6C;&#x5316;&#x6210;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x662F;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x7684;&#x3002; 4 &#x5C5E;&#x6027;&#x89C2;&#x5BDF;&#x8005;property observer property observer&#x6709;&#x4E3B;&#x52A8;&#x548C;&#x88AB;&#x52A8;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#x3002; ## 4.1 &#x4E3B;&#x52A8;&#x662F;&#x6307;&#x5F53;&#x201C;&#x6211;&#x201D;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x4F1A;&#x89E6;&#x53D1;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x6267;&#x884C;&#x3002; 1234567891011121314var x:Int = 0var y:Int = 0var z:Int?{ willSet{ // &#x5728;z&#x88AB;&#x8D4B;&#x503C;&#x524D;&#x8C03;&#x7528; x += 1 print(&quot;x=\(x), y=\(y), z=\(z)&quot;) } didSet{ // &#x5728;z&#x88AB;&#x8D4B;&#x503C;&#x540E;&#x8C03;&#x7528; y -= 1 print(&quot;x=\(x), y=\(y), z=\(z)&quot;) }}z=0 &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x662F;&#xFF1A; x=1, y=0, z=nil // willSet&#x7684;&#x8F93;&#x51FA; x=1, y=-1, z=Optional(0) // didSet&#x7684;&#x8F93;&#x51FA; &#x6709;&#x6CA1;&#x6709;&#x5173;&#x952E;&#x5B57;&#x80FD;&#x5728;willSet&#x6216;didSet&#x91CC;&#x8868;&#x793A;&#x201C;&#x6211;&#x201D;&#x7684;&#x503C;&#x5462;&#xFF1F; &#x5BF9;&#x4E8E;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5982;&#x679C;&#x8981;&#x5728;z&#x7684;willSet&#x91CC;&#x53D6;&#x81EA;&#x5DF1;&#x7684;&#x503C;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 12345var z:Int?{ willSet{ x = z // &#x5982;&#x679C;&#x524D;&#x9762;z&#x7684;&#x540D;&#x5B57;&#x53D8;&#x4E86;&#xFF0C;&#x6B64;&#x5904;&#x5C31;&#x5F97;&#x8DDF;&#x7740;&#x53D8;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5173;&#x952E;&#x5B57;&#x6BD4;&#x5982;self&#xFF0C;&#x5C31;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x95EE;&#x9898;&#x4E86; }} 4.2 &#x88AB;&#x52A8;&#x662F;&#x6307;&#x5F53;&#x201C;&#x6211;&#x201D;&#x88AB;&#x53D6;&#x503C;&#x65F6;&#xFF0C;&#x201C;&#x6211;&#x201D;&#x7684;&#x503C;&#x662F;&#x6839;&#x636E;&#x201C;&#x522B;&#x4EBA;&#x201D;&#x7684;&#x503C;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x3002; &#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x53D8;&#x91CF;&#x5F88;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x5185;&#x8054;&#x51FD;&#x6570;&#xFF0C;&#x5B57;&#x9762;&#x4E0A;&#x770B;&#x662F;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x6BCF;&#x6B21;&#x53D6;&#x503C;&#x90FD;&#x662F;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#xFF1A; 1234567var a:Int=0var b:Int{ return a+1}a=10print(&quot;b=\(b)&quot;) &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x662F;&#xFF1A; b=11 // b&#x7684;&#x53D6;&#x503C;&#x662F;&#x6839;&#x636E;a&#x7B97;&#x51FA;&#x6765;&#x7684; &#x672C;&#x7AE0;P150&#xFF0C;&#x70B9;&#x540E;&#x9762;&#x8DDF;&#x53D8;&#x91CF;&#x540D;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#xFF1F;&#x4F8B;&#x5982;&#xFF1A; 12let nf = NumberFormatter()nf.numberStyle = .decimal // .decimal&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x5462;&#xFF1F; &#x5728;&#x300A;Swfit Programming BNRG&#x300B;&#x7B14;&#x8BB0;&#x5341;&#x56DB;&#x4E2D;&#x6709;&#x4ECB;&#x7ECD;&#xFF0C;&#x8FD9;&#x662F;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;case&#x3002; 5. &#x534F;&#x8BAE;&#x548C;&#x4EE3;&#x7406; 5.1 &#x534F;&#x8BAE;&#x7684;&#x5B9A;&#x4E49; 123protocol &#x534F;&#x8BAE;&#x540D;:&#x7236;&#x534F;&#x8BAE;&#x540D;{ &#x63A5;&#x53E3;&#x51FD;&#x6570;} 5.2 &#x534F;&#x8BAE;&#x7684;&#x4F7F;&#x7528; &#x534F;&#x8BAE;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x800C;&#x9700;&#x8981;&#x8BA9;&#x67D0;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x67D0;&#x4E2A;&#x534F;&#x8BAE;&#xFF1A; 12class &#x7C7B;&#x540D; : &#x7236;&#x7C7B;, &#x534F;&#x8BAE;&#x540D;{} 5.3 &#x4EE3;&#x7406;&#x534F;&#x8BAE; &#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x534F;&#x8BAE;&#x90FD;&#x662F;&#x4EE3;&#x7406;&#x534F;&#x8BAE;&#xFF0C;&#x4EE3;&#x7406;&#x534F;&#x8BAE;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x628A;&#x539F;&#x672C;&#x5E94;&#x8BE5;&#x5728;A&#x5B9E;&#x73B0;&#x7684;&#x4EE3;&#x7801;&#x59D4;&#x6258;&#x7ED9;B&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x6BD4;&#x5982;TextField&#x6709;&#x4E00;&#x5806;&#x81EA;&#x5DF1;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x6587;&#x5B57;&#x6539;&#x53D8;&#x3001;&#x9000;&#x683C;&#x3001;&#x56DE;&#x8F66;&#x3002;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E9B;&#x4E8B;&#x4EF6;&#x7684;&#x5904;&#x7406;&#x539F;&#x672C;&#x662F;TextField&#x81EA;&#x5DF1;&#x7684;&#x4E8B;&#x513F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x6539;&#x53D8;&#x8FD9;&#x4E9B;&#x884C;&#x4E3A;&#x5C31;&#x5FC5;&#x987B;&#x6D3E;&#x751F;TextField&#x5E76;&#x91CD;&#x5199;&#x8FD9;&#x4E9B;&#x903B;&#x8F91;&#xFF0C;&#x8FD9;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x5F88;&#x591A;&#x96F6;&#x788E;&#x7684;&#x7C7B;&#x3002;&#x800C;&#x4E14;&#x5E76;&#x975E;&#x6240;&#x6709;&#x4E0E;TextField&#x76F8;&#x5173;&#x7684;&#x903B;&#x8F91;&#x90FD;&#x5E94;&#x8BE5;&#x653E;&#x8BE5;&#x7C7B;&#x91CC;&#x5904;&#x7406;&#xFF0C;&#x5C5E;&#x4E8E;TextFiled&#x903B;&#x8F91;&#x7684;&#x5E94;&#x8BE5;&#x653E;&#x5165;&#x5176;subclass&#xFF0C;&#x5C5E;&#x4E8E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x653E;&#x5230;Controller&#x91CC;&#x5B8C;&#x6210;&#x3002; &#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x67D0;Controller&#x4E3A;TextField&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x5F53;&#x8FD9;&#x4E9B;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#xFF0C;TextField&#x4F1A;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x8BE5;Controller&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x628A;&#x8FD9;&#x4E9B;&#x903B;&#x8F91;&#x653E;&#x5728;Controller&#x91CC;&#x5B9E;&#x73B0;&#x4E86;&#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x7684;&#x96C6;&#x5408;&#x5C31;&#x53EB;&#x505A;&#x534F;&#x8BAE;&#xFF0C;Controller&#x5B9E;&#x73B0;&#x8BE5;&#x534F;&#x8BAE;&#x5C31;&#x53EB;&#x505A;TextField&#x4EE3;&#x7406;&#x3002;&#x5B83;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x662F;&#x628A;&#x8FD9;&#x4E9B;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x6C47;&#x96C6;&#x5230;&#x4EE3;&#x7406;&#x4E00;&#x5E76;&#x5B9E;&#x73B0;&#x3002; 5.4 &#x5982;&#x679C;&#x4EE3;&#x7406;&#x5B9E;&#x73B0;&#x4E86;&#x591A;&#x4E2A;TextField&#x5B9E;&#x4F8B;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x4F55;&#x5728;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x91CC;&#x533A;&#x5206;&#x5F53;&#x524D;&#x662F;&#x4E3A;&#x8C01;&#x670D;&#x52A1;&#x7684;&#x5462;&#xFF1F; &#x4EE5;P152&#x7684;UITextTextFieldDelegate&#x4E3A;&#x4F8B;&#xFF1A; 123456protocol UITextFieldDelegate: NSObjectProtocol { optional func textFieldShouldBeginEditing(_ textField: UITextField) -&gt; Bool optional func textFieldDidBeginEditing(_ textField: UITextField) optional func textFieldShouldEndEditing(_ textField: UITextField) -&gt; Bool optional func textFieldDidEndEditing(_ textField: UITextField) optional func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange,replacementString string: String) -&gt; Bool optional func textFieldShouldClear(_ textField: UITextField) -&gt; Bool optional func textFieldShouldReturn(_ textField: UITextField) -&gt; Bool } &#x8FD9;&#x4E9B;&#x4EE3;&#x7406;&#x65B9;&#x6CD5;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x4EA7;&#x751F;&#x4E8B;&#x4EF6;&#x7684;&#x63A7;&#x4EF6;&#xFF0C;&#x6839;&#x636E;&#x8BE5;&#x53C2;&#x6570;&#x5C31;&#x80FD;&#x5224;&#x65AD;&#x4E86;&#x3002; 5.5 &#x5EFA;&#x7ACB;&#x4EE3;&#x7406;&#x5173;&#x8054;&#x5173;&#x7CFB; &#x4ECE;TextField ctrl&#x62D6;&#x52A8;&#x5230;ViewController&#xFF0C;&#x5C31;&#x4F1A;&#x8BA9;ViewController&#x6210;&#x4E3A;TextField&#x7684;&#x4EE3;&#x7406;&#x3002; &#x8FD9;&#x4E2A;&#x62D6;&#x52A8;&#x64CD;&#x4F5C;&#x4F1A;&#x8BA9;TextField&#x7684;delegate&#x5C5E;&#x6027;&#x6307;&#x5411;ViewController&#xFF0C;&#x5177;&#x4F53;&#x4EA7;&#x751F;&#x7684;&#x4EE3;&#x7801;&#x5728;&#x7B2C;&#x516D;&#x7AE0;&#x4ECB;&#x7ECD;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记三]]></title>
    <url>%2F2017%2F07%2F23%2F2017%2F0723iOSProgrammingBNRG03%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E09;&#x7AE0;&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x7EA6;&#x675F;&#x3002;&#x672C;&#x7AE0;&#x8FD0;&#x7528;&#x7684;&#x77E5;&#x8BC6;&#x5DEE;&#x4E0D;&#x591A;&#x5728;&#x7B2C;&#x4E00;&#x7AE0;&#x5C31;&#x4ECB;&#x7ECD;&#x8FC7;&#x4E86;&#x3002; &#x672C;&#x7AE0;&#x8981;&#x70B9;&#xFF1A; - &#x70B9;&#x548C;&#x50CF;&#x7D20; 1 &#x6784;&#x9020;UI 1.1 &#x70B9;&#x548C;&#x50CF;&#x7D20;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x5728;&#x7B2C;111&#x9875;&#x63D0;&#x5230;&#xFF1A; 1234567override func viewDidLoad() {super.viewDidLoad() let firstFrame = CGRect(x: 160, y:240, width: 100, height: 150) let firstView = UIView(frame: firstFrame) firstView.backgroundColor = UIColor.blue view.addSubview(firstView)} &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5BF9;&#x5E94;&#x7684;UI&#x754C;&#x9762;&#x5982;&#x4E0B;&#xFF1A; &#x4F46;&#x6B64;&#x5904;&#x7684;&#x5355;&#x4F4D;&#x4E0D;&#x662F;&#x50CF;&#x7D20;&#x800C;&#x662F;&#x70B9;&#xFF0C;&#x70B9;&#x662F;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x5355;&#x4F4D;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8BBE;&#x5907;&#x4E0A;&#x5BF9;&#x5E94;&#x7684;&#x50CF;&#x7D20;&#x6570;&#x4E0D;&#x540C;&#x3002; &#x70B9;&#x548C;&#x50CF;&#x7D20;&#x4E4B;&#x95F4;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; &#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6B63;&#x662F;&#x82F9;&#x679C;&#x5E0C;&#x671B;&#x9690;&#x85CF;&#x7684;&#x8BBE;&#x5907;&#x76F8;&#x5173;&#x7EC6;&#x8282;&#xFF0C;&#x5728;iOS Drawing Concepts&#x4E2D;&#x6709;&#x8BB2;&#xFF1A;&#x7CFB;&#x7EDF;&#x81EA;&#x52A8;&#x5B8C;&#x6210;&#x4ECE;&#x89C6;&#x56FE;&#x4E2D;&#x7684;&#x70B9;&#x5230;&#x8BBE;&#x5907;&#x50CF;&#x7D20;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x5E94;&#x8BE5;&#x7262;&#x8BB0;&#xFF1A;&#x4E00;&#x4E2A;&#x70B9;&#x4E0D;&#x4E00;&#x5B9A;&#x5BF9;&#x5E94;&#x5230;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x3002; &#x82F9;&#x679C;&#x5E0C;&#x671B;&#x540C;&#x4E00;&#x4E2A;&#x7ED8;&#x5236;&#x51FD;&#x6570;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8BBE;&#x5907;&#x4E0A;&#x770B;&#x5230;&#x7684;&#x6548;&#x679C;&#x5C3D;&#x91CF;&#x4E00;&#x81F4;&#xFF0C;&#x4E00;&#x6761;&#x5BBD;&#x5EA6;&#x4E3A;1Point&#x7684;&#x7EBF;&#x5728;&#x4F4E;&#x5206;&#x5C4F;&#x662F;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x5BBD;&#xFF0C;&#x5728;&#x9AD8;&#x5206;&#x5C4F;&#x4E0A;&#x5C31;&#x53EF;&#x80FD;&#x662F;&#x4E24;&#x4E2A;&#x50CF;&#x7D20;&#x5BBD;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x5B83;&#x4EEC;&#x5728;&#x89C6;&#x89C9;&#x6548;&#x679C;&#x4E0A;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x5BBD;&#x7684;&#x3002;&#x5728;iOS&#x4E0B;&#xFF0C;Point&#x548C;&#x50CF;&#x7D20;&#x7684;&#x6BD4;&#x503C;&#x662F;&#x4E0E;&#x89C6;&#x56FE;&#x76F8;&#x5173;&#x7684;&#xFF0C;&#x6BCF;&#x4E2A;UIScreen&#xFF0C;UIView&#xFF0C;UIImage&#x6216;CAlayer&#x90FD;&#x6709;&#x4E00;&#x4E2A;contentScaleFactor&#x5C5E;&#x6027;&#x6765;&#x8BB0;&#x5F55;&#x8FD9;&#x4E2A;&#x6BD4;&#x503C;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记二]]></title>
    <url>%2F2017%2F07%2F22%2F2017%2F0722iOSProgrammingBNRG02%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E8C;&#x7AE0;&#x6982;&#x89C8;&#x4E86;Swift&#x7684;&#x8BED;&#x6CD5;&#x3002;&#x66F4;&#x7EC6;&#x8282;&#x7684;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;&#x300A;The Swift Programming Language (Swift 4)&#x300B;&#x3002;&#x672C;&#x8282;&#x7684;&#x8981;&#x70B9;&#x6709;&#xFF1A; - &#x6570;&#x636E;&#x7C7B;&#x578B; - optional&#x53D8;&#x91CF; - &#x5B57;&#x7B26;&#x4E32;&#x63D2;&#x503C; 1 &#x6570;&#x636E;&#x7C7B;&#x578B; 1.1 Swift&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5206;&#x4E09;&#x7C7B;&#xFF1A;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x7C7B;&#x548C;&#x679A;&#x4E3E; &#x6BCF;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x90FD;&#x6709;&#xFF1A; &#x5C5E;&#x6027; - &#x5173;&#x8054;&#x5230;&#x7C7B;&#x578B;&#x7684;&#x503C; &#x6784;&#x9020;&#x5668; - &#x521D;&#x59CB;&#x5316;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x7684;&#x4EE3;&#x7801; &#x5B9E;&#x4F8B;&#x65B9;&#x6CD5; - &#x5173;&#x8054;&#x5230;&#x7C7B;&#x578B;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x5B9E;&#x4F8B;&#x8C03;&#x7528; &#x7C7B;&#x65B9;&#x6CD5; - &#x4E5F;&#x53EB;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x5173;&#x8054;&#x5230;&#x7C7B;&#x578B;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x7C7B;&#x578B;&#x8C03;&#x7528; Swift&#x4E0B;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x90FD;&#x662F;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; &#x6570;&#x5B57;&#xFF1A;Int, Float, Double &#x5E03;&#x5C14;&#xFF1A;Bool &#x6587;&#x672C;&#xFF1A;String, Character &#x96C6;&#x5408;&#xFF1A;Array, Dictionary, Set &#x8FD9;&#x79CD;&#x5206;&#x7C7B;&#x7684;&#x4F9D;&#x636E;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#x70B9;&#xFF1F; 2 optional&#x53D8;&#x91CF; 2.1 &#x4EC0;&#x4E48;&#x662F;optional&#x53D8;&#x91CF; optional&#x8868;&#x793A;&#x8BE5;&#x53D8;&#x91CF;&#x53EF;&#x80FD;&#x5E76;&#x6CA1;&#x6709;&#x4FDD;&#x5B58;&#x4EFB;&#x4F55;&#x503C;&#x3002; 1var reading1: Float? &#x672B;&#x5C3E;&#x7684;&#x95EE;&#x53F7;&#x8868;&#x793A;&#x8BE5;&#x53D8;&#x91CF;&#x662F;&#x4E00;&#x4E2A;optional &#x53D8;&#x91CF;&#xFF1A;&#x5B83;&#x53EF;&#x80FD;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x6307;&#x5411;nil&#x3002; 123var x1: Float?var x2: Float?let avg = (x1 + x2) / 2 // &#x8FD9;&#x4E48;&#x5199;&#x6CD5;&#x4F1A;&#x5BFC;&#x81F4;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#xFF0C;&#x56E0;&#x4E3A;x1&#x548C;x2&#x662F;optional&#x53D8;&#x91CF;&#xFF0C;&#x9700;&#x8981;&#x5C55;&#x5F00; 2.2 &#x4E3A;&#x4EC0;&#x4E48;&#x5F15;&#x5165;optional &#x6709;&#x89E3;&#x91CA;&#x5F52;&#x56E0;&#x4E8E;Swift&#x662F;&#x5F3A;&#x7C7B;&#x578B;&#x8BED;&#x8A00;&#xFF0C;&#x65E0;&#x6CD5;&#x8BA9;nil&#x4E0E;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x76F8;&#x517C;&#x5BB9;&#x3002;swift&#x5F15;&#x5165;optional&#x5B9E;&#x8D28;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x4E3A;&#x8BE5;&#x7C7B;&#x578B;&#x5305;&#x88C5;&#x4E86;&#x4E00;&#x4E2A;enum&#xFF1A; 1234enum Optional&lt;T&gt; { case Nil case Some( value:T )} &#x8FD9;&#x6837;&#x5C31;&#x5BB9;&#x6613;&#x7406;&#x89E3;String?&#x4E0E;String&#x6839;&#x672C;&#x5C31;&#x662F;&#x4E24;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF1A;String?&#x7684;&#x7C7B;&#x578B;&#x662F;Optional&#x800C;&#x4E0D;&#x518D;&#x662F;String&#x3002;&#x800C;nil&#x5C31;&#x662F;Optional.Nil&#x3002;unwrap &#x505A;&#x7684;&#x4E8B;&#x60C5; &#xFF08; a! &#xFF09;&#x5C31;&#x662F;&#x63D0;&#x53D6; .Some &#x4E2D;&#x7684; value &#x53D8;&#x91CF;&#x3002; C++&#x4E5F;&#x662F;&#x5F3A;&#x7C7B;&#x578B;&#x8BED;&#x8A00;&#xFF0C;&#x4E0D;&#x5C31;&#x505A;&#x5230;&#x4E86;nullptr&#x4E0E;&#x5404;&#x7C7B;&#x6307;&#x9488;&#x7684;&#x6BD4;&#x8F83;&#x4E48;&#xFF1F;&#x8BA9;&#x7F16;&#x8BD1;&#x5668;&#x5B9E;&#x73B0;nil&#x4E0E;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x76F8;&#x6BD4;&#x8F83;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x969C;&#x788D;&#x5462;&#xFF1F;A?&#x7C7B;&#x578B;&#x5224;&#x7A7A;&#x4E0D;&#x4E5F;&#x5F97;&#x548C;nil&#x6BD4;&#x8F83;&#xFF1F;&#x4E5F;&#x5C31;&#x662F;Optional.Nil&#x548C;nil&#x7684;&#x6BD4;&#x8F83;&#xFF0C;&#x8FD9;&#x4FE9;&#x7C7B;&#x578B;&#x4E5F;&#x662F;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x5427;&#xFF1F; 2.3 &#x5C55;&#x5F00;optional&#x53D8;&#x91CF; print&#x4E00;&#x4E2A;String?&#x53D8;&#x91CF;&#x4F1A;&#x5F97;&#x5230;&#x5728;&#x5176;&#x5916;&#x9762;&#x5305;&#x88F9;Optional(&quot;&quot;)&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF1A; 12var x:String? = &quot;abc&quot;print(x) // &#x8F93;&#x51FA;&#xFF1A;Optional(&quot;abc&quot;) &#x8FD9;&#x5C31;&#x662F;&#x56E0;&#x4E3A;optional&#x53D8;&#x91CF;&#x548C;&#x672C;&#x5C0A;&#x662F;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x6B64;&#x5904;&#x505A;&#x4E86;&#x8F6C;&#x6362;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5F3A;&#x5236;&#x5C55;&#x5F00;&#x628A;String?&#x8F6C;&#x6362;&#x6210;String&#xFF1A; 12var x:String? = &quot;abc&quot;print(x!) // &#x8F93;&#x51FA;&#xFF1A;abc&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;x&#x662F;nil&#xFF0C;&#x6B64;&#x5904;&#x4F1A;&#x5F15;&#x53D1;&#x3010;&#x8FD0;&#x884C;&#x65F6;&#x5D29;&#x6E83;&#x3011;&#xFF01; &#x5F3A;&#x5236;&#x5C55;&#x5F00;&#x662F;&#x4E00;&#x79CD;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x5B83;&#x4F1A;&#x5BFC;&#x81F4;&#x8FD0;&#x884C;&#x65F6;&#x5D29;&#x6E83;&#x3002;&#x8FD8;&#x4F7F;&#x7528;optional binding&#x6765;&#x5B89;&#x5168;&#x5C55;&#x5F00;&#xFF1A; 123456789101112if let xx = x{ print(xx)}else{ print(&quot;nil&quot;)}// &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x7B49;&#x4EF7;&#x4E8E;&#xFF1A;if x != nil{ let xx = x! print(xx)}else{ print(&quot;nil&quot;)} 2.4 if-let&#x7684;&#x672C;&#x8D28;&#x4F9D;&#x7136;&#x662F;if...else &#x53EF;&#x4EE5;&#x628A;if&#x4E2D;&#x7684;let A=B&#x7B49;&#x6548;&#x4E8E;(let A=B) != nil&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x5176;&#x5224;&#x65AD;&#x5217;&#x8868;&#x4E2D;&#x8FD8;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x66F4;&#x591A;&#x7684;Bool&#x503C;&#xFF1A; 12345if let text = textField.text, !text.isEmpty { celsiusLabel.text = text} else { celsiusLabel.text = &quot;???&quot;} &#x65E2;&#x6CA1;&#x6709;&#x7F00;?&#x4E5F;&#x6CA1;&#x6709;&#x7F00;!&#x7684;&#x53D8;&#x91CF;&#x662F;&#x4EC0;&#x4E48;&#x53D8;&#x91CF;&#x5462;&#xFF1F;&#x6839;&#x636E;2.2&#x7684;&#x5206;&#x6790;&#xFF0C;&#x5E94;&#x8BE5;&#x5C31;&#x662F;&#x672C;&#x5C0A;&#x54AF;&#xFF1A; 12var a:Stringa = nil // &#x6B64;&#x5904;&#x4F1A;&#x6709;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#xFF1A;Nil cannot be assigned to type &apos;String&apos; 3. &#x5728;&#x5B57;&#x7B26;&#x4E32;&#x5185;&#x63D2;&#x503C; 1234let qaDict = [&quot;What is your name?&quot;: &quot;Palance&quot;, &quot;How old are you?&quot;: &quot;36&quot;]for (question, answer) in qaDict { let msg = &quot;Question is \(question), answer is \(answer)&quot;} &#x5199;&#x5728;\()&#x4E4B;&#x95F4;&#x7684;&#x5185;&#x5BB9;&#x4F1A;&#x5F53;&#x505A;&#x53D8;&#x91CF;&#xFF08;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x51FD;&#x6570;&#xFF09;&#xFF0C;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x6C42;&#x503C;&#x3002; 4. &#x53C2;&#x8003;&#x8D44;&#x6599; Swift &#x7684; Optional &#x673A;&#x5236;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#xFF1F; Swift&#x4E3A;&#x4EC0;&#x4E48;&#x5B9A;&#x4E49;Optional&#x7C7B;&#x578B;&#xFF1F;&#x5982;&#x679C;&#x8BF4;&#x662F;&#x4E3A;&#x4E86;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x5176;&#x4ED6;OOP&#x8BED;&#x8A00;&#x4E2D;&#x662F;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#xFF1F; https://swiftcafe.io/2015/12/27/optional/]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《iOS Programming BNRG》笔记一]]></title>
    <url>%2F2017%2F07%2F21%2F2017%2F0721iOSProgrammingBNRG01%2F</url>
    <content type="text"><![CDATA[&#x7B2C;&#x4E00;&#x7AE0;&#x5B9E;&#x73B0;&#x8BE5;&#x754C;&#x9762;&#x7684;&#x95EE;&#x7B54;&#x529F;&#x80FD;&#xFF0C;&#x70B9;&#x51FB;Next Question&#xFF0C;&#x663E;&#x793A;&#x4E00;&#x4E2A;&#x65B0;&#x95EE;&#x9898;&#xFF0C;&#x70B9;&#x51FB;Show Answer&#xFF0C;&#x663E;&#x793A;&#x8BE5;&#x95EE;&#x9898;&#x5BF9;&#x5E94;&#x7684;&#x7B54;&#x6848;&#x3002; &#x8981;&#x70B9;&#x662F;&#xFF1A; - &#x4F7F;&#x7528;Interface Builder&#x6784;&#x5EFA;&#x754C;&#x9762;&#x5E03;&#x5C40; - &#x4E3A;&#x63A7;&#x4EF6;&#x5173;&#x8054;&#x4EE3;&#x7801;&#x53D8;&#x91CF;&#x548C;&#x54CD;&#x5E94;&#x51FD;&#x6570; - &#x4F7F;&#x7528;&#x7EA6;&#x675F;&#x786E;&#x4FDD;&#x517C;&#x5BB9;&#x4E0D;&#x540C;&#x7684;&#x5C3A;&#x5BF8;&#x7684;&#x8BBE;&#x5907; - &#x4FEE;&#x6539;app&#x56FE;&#x6807; - iOS&#x5E94;&#x7528;&#x7684;UI&#x5237;&#x65B0;&#x673A;&#x5236; --- # 1 &#x5728;story board&#x4E0A;&#x62D6;&#x62FD;&#x51FA;&#x754C;&#x9762; &#x6CE8;&#x610F;&#x5728;Main.storyboard&#x4E0A;&#x6784;&#x9020;app&#x4E3B;&#x754C;&#x9762;&#xFF0C;&#x522B;&#x641E;&#x6210;LaunchScreen.storyboard&#x4E86;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x5F00;&#x673A;&#x542F;&#x52A8;&#x754C;&#x9762;&#x3002; 1.1 &#x8BBE;&#x5B9A;&#x7EA6;&#x675F;&#x786E;&#x4FDD;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x673A;&#x578B;&#x4E0A;&#x5E03;&#x5C40;&#x4E00;&#x81F4; &#x4E0E;&#x81EA;&#x52A8;&#x5E03;&#x5C40;&#x76F8;&#x5173;&#x7684;&#x6309;&#x94AE;&#x5728;Canvas&#x7684;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;&#x672C;&#x8282;&#x6D89;&#x53CA;&#x5230;&#x7B2C;3&#x3001;4&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x5BF9;&#x9F50;&#x548C;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x7EA6;&#x675F;&#x3002; &#x70B9;&#x51FB;&#x5BF9;&#x9F50;&#x6309;&#x94AE;&#x5C55;&#x5F00;&#x5982;&#x4E0B;&#x9762;&#x677F;: &#x524D;7&#x4E2A;&#x7528;&#x4E8E;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;&#x4E0E;&#x53E6;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x5BF9;&#x5173;&#x7CFB;&#xFF0C;&#x5DE6;/&#x53F3;&#x5BF9;&#x9F50;&#xFF0C;&#x4E0A;/&#x4E0B;&#x5BF9;&#x9F50;&#xFF0C;&#x6C34;&#x5E73;/&#x7AD6;&#x76F4;&#x5C45;&#x4E2D;&#x5BF9;&#x9F50;&#xFF0C;&#x5BF9;&#x4E8E;&#x6587;&#x672C;&#x63A7;&#x4EF6;&#x7684;Baselines&#x5BF9;&#x9F50;&#xFF1B; &#x540E;&#x4E24;&#x4E2A;&#x7528;&#x4E8E;&#x8BBE;&#x7F6E;&#x63A7;&#x4EF6;&#x5728;&#x6240;&#x5728;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x76F8;&#x5BF9;&#x4F4D;&#x7F6E;&#xFF0C;&#x6C34;&#x5E73;/&#x7AD6;&#x76F4;&#x5C45;&#x4E2D;&#x3002; &#x70B9;&#x51FB;&#x6DFB;&#x52A0;&#x65B0;&#x7EA6;&#x675F;&#x6309;&#x94AE;&#x5C55;&#x5F00;&#x5982;&#x4E0B;&#x9762;&#x677F;&#xFF1A; Add New Constraints&#x8868;&#x793A;&#x63A7;&#x4EF6;&#x4E0E;&#x90BB;&#x8FD1;&#x63A7;&#x4EF6;&#x7684;&#x95F4;&#x8DDD;&#xFF1B; Width/Height&#x7528;&#x4E8E;&#x8BBE;&#x5B9A;&#x63A7;&#x4EF6;&#x957F;/&#x5BBD;&#xFF1B; Equal Widths/Equal Heights/Aspect Ratio&#x7528;&#x4E8E;&#x8BBE;&#x5B9A;&#x591A;&#x4E2A;&#x63A7;&#x4EF6;&#x7B49;&#x5BBD;/&#x7B49;&#x9AD8;/&#x7B49;&#x5BBD;&#x9AD8;&#x6BD4;&#xFF1B; &#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;Align&#xFF0C;&#x5E76;&#x9009;&#x62E9;Horizontal Center&#xFF0C;&#x8868;&#x793A;&#x88AB;&#x9009;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x63A7;&#x4EF6;&#x90FD;&#x4E0E;&#x4E0A;&#x65B9;&#x7684;&#x4E00;&#x4E2A;&#x4FDD;&#x6301;&#x5C45;&#x4E2D;&#x5BF9;&#x9F50;&#x3002; &#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x6700;&#x7B80;&#x5355;&#x548C;&#x76F4;&#x89C2;&#x4E5F;&#x662F;&#x6700;&#x7EC8;&#x6781;&#x7684;&#x4F9D;&#x636E;&#x662F;&#x770B;&#x5DE6;&#x4FA7;&#x751F;&#x6210;&#x7684;Contraints&#x7B49;&#x5F0F;&#xFF1A; &#x6DFB;&#x52A0;&#x65B0;&#x7EA6;&#x675F;&#x7684;Align&#x548C;&#x5BF9;&#x9F50;&#x9762;&#x677F;&#x4E2D;&#x7684;&#x914D;&#x7F6E;&#x662F;&#x4EC0;&#x4E48;&#x5173;&#x7CFB;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF1A;&#x9009;&#x4E2D;&#x63A7;&#x4EF6;A&#x548C;&#x63A7;&#x4EF6;B&#xFF0C;&#x5728;&#x5BF9;&#x9F50;&#x9762;&#x677F;&#x4E2D;&#x52FE;&#x9009;&#x201C;Leading Edges&#x201D;&#x548C;&#x5728;&#x6DFB;&#x52A0;&#x65B0;&#x7EA6;&#x675F;&#x9762;&#x677F;&#x4E2D;&#x52FE;&#x9009;&#x201C;Align Leading Edges&#x201D;&#x90FD;&#x4F1A;&#x4EA7;&#x751F;&#x7EA6;&#x675F;B.leading=A.leading&#x3002; 2 &#x4E3A;Button&#x5173;&#x8054;&#x54CD;&#x5E94;&#x51FD;&#x6570; 2.1 iOS&#x7684;MVC&#x7ED3;&#x6784; Model&#x662F;&#x6570;&#x636E;&#xFF08;&#x672C;&#x8282;&#x4E2D;&#x5C31;&#x662F;&#x95EE;&#x9898;-&#x7B54;&#x6848; &#x5217;&#x8868;&#xFF09;&#xFF1B;View&#x5305;&#x62EC;&#x754C;&#x9762;&#x4E0A;&#x4E00;&#x5207;&#x53EF;&#x89C1;&#x7684;&#x5143;&#x7D20;&#xFF08;&#x6309;&#x94AE;&#x3001;Label&#xFF09;&#xFF1B;Controller&#x8D1F;&#x8D23;&#x8BA9;Model&#x548C;View&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002; &#x5728;View&#x4E2D;&#x53D1;&#x751F;&#x7684;&#x6D88;&#x606F;&#x901A;&#x8FC7;Controller&#x6D41;&#x5230;Model&#x8BB0;&#x5F55;&#x6570;&#x636E;&#x53D8;&#x5316;&#xFF1B;&#x5728;Model&#x4E2D;&#x53D1;&#x751F;&#x7684;&#x6570;&#x636E;&#x53D8;&#x5316;&#x901A;&#x8FC7;Controller&#x6D41;&#x5230;View&#x901A;&#x77E5;&#x754C;&#x9762;&#x66F4;&#x65B0;&#x3002;&#x56E0;&#x6B64;Controller&#x5E94;&#x8BE5;&#x5305;&#x542B;View&#x548C;Model&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x5F53;&#x7528;&#x6237;&#x4E0E;View&#x4EA7;&#x751F;&#x4EA4;&#x4E92;&#xFF0C;View&#x5C06;&#x5411;Controller&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x8FD9;&#x662F;UI&#x903B;&#x8F91;&#x3002;&#x5728;Controller&#x4E2D;&#x8D1F;&#x8D23;&#x54CD;&#x5E94;&#x8FD9;&#x4E2A;&#x6D88;&#x606F;&#xFF0C;&#x8FD9;&#x662F;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002;&#x56E0;&#x6B64;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x5B9A;&#x4E49;&#x5728;Controller&#x3002; ## 2.2 &#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x5F62;&#x5F0F; 123@IBAction func showNextQuestion(_ sender: UIButton) { &#x2026;&#x2026; // &#x6D88;&#x606F;&#x5904;&#x7406;} &#x5173;&#x952E;&#x5B57;@IBAction&#x544A;&#x8BC9;Xcode&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5C06;&#x4F5C;&#x4E3A;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x5173;&#x8054;&#x5230;Interface Builder&#x4E0A;&#x7684;View&#x3002; &#x600E;&#x4E48;&#x77E5;&#x9053;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x7684;&#x51FD;&#x6570;&#x539F;&#x578B;&#x5462;&#xFF1F; &#x5728;Xcode&#x7684;&#x300A;Document and API Reference&#x300B;&#x4E2D;&#x67E5;&#x627E;UIButton&#xFF0C;&#x53EF;&#x4EE5;&#x627E;&#x4E09;&#x4E2A;&#xFF1A; 123@IBAction func doSomething()@IBAction func doSomething(sender: UIButton)@IBAction func doSomething(sender: UIButton, forEvent event: UIEvent) &#x6839;&#x636E;addTarget(_:action:for:)&#x4F20;&#x5165;&#x7684;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x5E94;&#x8BE5;&#x8C03;&#x7528;&#x54EA;&#x4E2A;&#x3002;&#x5173;&#x4E8E;addTarget(_:action:for:)&#x7684;&#x7528;&#x6CD5;&#x5728;&#x300A;iOS Programming BNRG&#x300B;&#x7B14;&#x8BB0;&#x516D;&#x5B66;&#x4E60;&#x3002; 2.3 &#x600E;&#x4E48;&#x8BA9;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x548C;&#x6309;&#x94AE;&#x7684;&#x70B9;&#x51FB;&#x52A8;&#x4F5C;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#xFF1F; &#x5F53;&#x6309;&#x94AE;&#x88AB;&#x6309;&#x4E0B;&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x8C03;&#x7528;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x53E6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5C31;&#x79F0;&#x4F5C;&#x6309;&#x94AE;&#x7684;target&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x88AB;&#x79F0;&#x4F5C;action&#x3002; &#x5728;Interface Builder&#x754C;&#x9762;&#x4E2D;&#xFF0C;&#x6309;&#x4F4F;Ctrl&#xFF0C;&#x5C06;&#x9F20;&#x6807;&#x4ECE;&#x6309;&#x94AE;&#x62D6;&#x5230;target&#xFF0C;&#x6B64;&#x5904;&#x5373;View Controller&#xFF08;&#x5DE6;&#x4FA7;&#x6811;&#x72B6;&#x7ED3;&#x6784;&#x6216;&#x8005;&#x753B;&#x5E03;&#x4E0A;&#x7684;ViewController&#x6807;&#x5FD7;&#x90FD;&#x53EF;&#x4EE5;&#xFF09;&#xFF0C;&#x5C06;&#x5F39;&#x51FA;&#x5982;&#x4E0B;&#x83DC;&#x5355;&#xFF0C;&#x83DC;&#x5355;&#x4E2D;&#x4F1A;&#x5217;&#x51FA;View Controller&#x4E2D;&#x7684;@IBAction&#x65B9;&#x6CD5;&#xFF0C;&#x9009;&#x4E2D;&#x8981;&#x5173;&#x8054;&#x7684;Action&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5173;&#x8054;&#x3002; &#x6D88;&#x606F;&#x6D41;&#x5411;&#x662F;&#x4ECE;&#x6309;&#x94AE;&#x6D41;&#x5411;target&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4ECE;&#x6309;&#x94AE;&#x62D6;&#x5411;target&#x3002; 2.4 &#x4E3A;&#x754C;&#x9762;&#x4E0A;&#x7684;Label&#x63A7;&#x4EF6;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#xFF0C;&#x5E94;&#x8BE5;&#x5B9A;&#x4E49;&#x5230;&#x54EA;&#xFF1F; &#x6839;&#x636E;2.1&#x7684;&#x539F;&#x5219;&#xFF1A;Label&#x662F;View&#xFF0C;&#x5E94;&#x5F53;&#x5B9A;&#x4E49;&#x5230;View Controller&#x3002; 2.5 &#x600E;&#x4E48;&#x5B9A;&#x4E49;&#x63A7;&#x4EF6;&#x53D8;&#x91CF;&#xFF1F; &#x5728;Interface Builder&#x53EF;&#x4EE5;&#x751F;&#x6210;connection&#xFF0C;&#x8FDE;&#x63A5;IB&#x4E2D;&#x7684;&#x89C6;&#x56FE;&#x548C;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x6216;&#x8005;&#x8FDE;&#x63A5;IB&#x4E2D;&#x7684;&#x89C6;&#x56FE;&#x548C;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x3002;connection&#x5206;&#x4E24;&#x7C7B;&#xFF1A; - outlets - &#x8FDE;&#x63A5;&#x89C6;&#x56FE;&#x548C;&#x5BF9;&#x8C61; - actions - &#x8FDE;&#x63A5;&#x89C6;&#x56FE;&#x548C;&#x6D88;&#x606F;&#x54CD;&#x5E94;&#x51FD;&#x6570; &#x5728;Controller&#x4E2D;&#x5B9A;&#x4E49;outlets&#x53D8;&#x91CF;&#xFF1A; 1@IBOutlet var questionLabel: UILabel! &#x5173;&#x952E;&#x5B57;@IBoutlet&#x544A;&#x8BC9;Xcode&#xFF0C;&#x8BE5;&#x53D8;&#x91CF;&#x5C06;&#x8FDE;&#x63A5;&#x5230;Interface Builder&#x4E2D;&#x7684;&#x63A7;&#x4EF6;&#x3002; 2.6 &#x8BA9;&#x53D8;&#x91CF;&#x548C;Label&#x5EFA;&#x7ACB;&#x5173;&#x8054; &#x56DE;&#x5230;Interface Builder&#x754C;&#x9762;&#xFF0C;&#x6309;&#x4F4F;Ctrl&#xFF0C;&#x5C06;&#x9F20;&#x6807;&#x4ECE;ViewController&#xFF08;&#x5DE6;&#x4FA7;&#x6811;&#x72B6;&#x7ED3;&#x6784;&#x6216;&#x8005;&#x753B;&#x5E03;&#x4E0A;&#x7684;ViewController&#x6807;&#x5FD7;&#x90FD;&#x53EF;&#x4EE5;&#xFF09;&#x62D6;&#x5230;Label&#x63A7;&#x4EF6;&#xFF0C;&#x5C06;&#x5F39;&#x51FA;&#x5982;&#x4E0B;&#x83DC;&#x5355;&#xFF0C;&#x5176;&#x4E2D;&#x663E;&#x793A;ViewController&#x4E2D;&#x58F0;&#x660E;&#x7684;@IBOutlet&#x53D8;&#x91CF;&#xFF0C;&#x9009;&#x4E2D;&#x8981;&#x5173;&#x8054;&#x7684;&#x53D8;&#x91CF;&#x5373;&#x53EF;&#x3002; &#x5E38;&#x5E38;&#x8BB0;&#x4E0D;&#x6E05;Ctrl&#x62D6;&#x52A8;&#x7684;&#x65B9;&#x5411;&#x3002;&#x5982;&#x679C;&#x662F;&#x5173;&#x8054;&#x63A7;&#x4EF6;&#x548C;&#x53D8;&#x91CF;&#xFF0C;&#x4ECE;VC&#x62D6;&#x5230;&#x63A7;&#x4EF6;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x5173;&#x8054;&#x6D88;&#x606F;&#xFF0C;&#x4ECE;&#x63A7;&#x4EF6;&#x62D6;&#x5230;VC&#x3002; &#x9009;&#x4E2D;ViewController&#xFF0C;&#x53F3;&#x4FA7;utilities&#x89C6;&#x56FE;&#x9009;&#x62E9;Show the Connections Inspector&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E0E;&#x8BE5;ViewController&#x5173;&#x8054;&#x7684;&#x6240;&#x6709;outlets&#x53D8;&#x91CF;&#x548C;actions&#x51FD;&#x6570;&#xFF1A; 3 &#x5B9A;&#x4E49;&#x95EE;&#x9898;-&#x7B54;&#x6848;&#x6570;&#x7EC4; 3.1 &#x600E;&#x4E48;&#x5B9A;&#x4E49;&#x6570;&#x7EC4;&#xFF1F; 1234567891011let questions: [String] = [&quot;What is 7+7?&quot;,&quot;What is the capital of Vermont?&quot;, &quot;What is cognac made from?&quot;]let answers: [String] = [ &quot;14&quot;,&quot;Montpelier&quot;, &quot;Grapes&quot;]var currentQuestionIndex: Int = 0 let&#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x5E38;&#x91CF;&#xFF0C;var&#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#x3002; ## 3.2 &#x600E;&#x4E48;&#x5B9A;&#x4E49;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x91CF;&#xFF1F; &#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#xFF1A;var &#x53D8;&#x91CF;&#x540D; : &#x7C7B;&#x578B; = &#x9ED8;&#x8BA4;&#x503C; &#x5B9A;&#x4E49;&#x5E38;&#x91CF;&#xFF1A;let &#x5E38;&#x91CF;&#x540D; : &#x7C7B;&#x578B; = &#x9ED8;&#x8BA4;&#x503C; &#x5B9A;&#x4E49;&#x6570;&#x7EC4;&#x7C7B;&#xFF1A;[&#x7C7B;&#x578B;]&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5199;&#x4F5C;&#xFF1A;Array&lt;&#x7C7B;&#x578B;&gt;&#xFF0C;&#x6216;&#x8005;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x5199;&#xFF0C;&#x76F4;&#x63A5;&#x8D4B;&#x503C;&#xFF0C;&#x7F16;&#x8F91;&#x5668;&#x4F1A;&#x6839;&#x636E;&#x9ED8;&#x8BA4;&#x503C;&#x63A8;&#x65AD;&#x53D8;&#x91CF;&#x7684;&#x7C7B;&#x578B;&#x3002; &#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x4E09;&#x79CD;&#x5199;&#x6CD5;&#x662F;&#x7B49;&#x4EF7;&#x7684;&#xFF1A; 123let questions = [&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;];let questions:[String] = [&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;];let questiongs:Array&lt;String&gt; = [&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;]; &#x6570;&#x7EC4;&#x5E38;&#x91CF;&#x5199;&#x4F5C;&#xFF1A;[&#x503C;, &#x503C;, ...] &#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#x5199;&#x4F5C;&#xFF1A;&quot;xxx&quot;&#x3002; 4 &#x5728;&#x6309;&#x94AE;&#x54CD;&#x5E94;&#x51FD;&#x6570;&#x4E2D;&#x9009;&#x62E9;&#x95EE;&#x9898;-&#x7B54;&#x6848;&#x5E76;&#x66F4;&#x65B0;&#x754C;&#x9762; 4.1 &#x600E;&#x4E48;&#x8BA9;&#x754C;&#x9762;&#x4E0A;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x66F4;&#x65B0;&#xFF1F; &#x5B9A;&#x4E49;outlets&#x53D8;&#x91CF;&#xFF0C;&#x5E76;&#x5B8C;&#x6210;&#x5173;&#x8054;&#x540E;&#xFF0C;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x5176;text&#x5C5E;&#x6027;&#x5373;&#x53EF;&#xFF1A; 123@IBOutlet var questionLabel:UILabel!...questionLabel.text = &quot;???&quot;; // &#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5237;&#x65B0; 4.2 iOS&#x7684;&#x754C;&#x9762;&#x5237;&#x65B0;&#x673A;&#x5236; iOS&#x5E94;&#x7528;&#x5177;&#x4F53;&#x662F;&#x4EC0;&#x4E48;&#x673A;&#x5236;&#x4EE5;&#x53CA;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x673A;&#x89E6;&#x53D1;&#x5E76;&#x5B8C;&#x6210;&#x7684;&#x5237;&#x65B0;&#x5462;&#xFF1F;&#x5728;iOS Drawing Concepts&#x4E2D;&#x5BF9;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6709;&#x63CF;&#x8FF0;&#x3002;&#x51E0;&#x79CD;&#x60C5;&#x51B5;&#x4F1A;&#x4EE4;&#x89C6;&#x56FE;&#x89E6;&#x53D1;&#x5237;&#x65B0;&#xFF1A; - &#x5C06;&#x53E6;&#x4E00;&#x4E2A;&#x89C6;&#x56FE;&#x79FB;&#x5165;/&#x79FB;&#x51FA;&#x672C;&#x89C6;&#x56FE;&#xFF0C;&#x4F1A;&#x89E6;&#x53D1;&#x672C;&#x89C6;&#x56FE;&#x5237;&#x65B0; - &#x901A;&#x8FC7;&#x8BBE;&#x7F6E;hidden&#x5C5E;&#x6027;&#x4E3A;NO&#xFF0C;&#x8BA9;&#x4E4B;&#x524D;&#x9690;&#x85CF;&#x7684;&#x89C6;&#x56FE;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x4F1A;&#x89E6;&#x53D1;&#x5B83;&#x5237;&#x65B0; - &#x5C06;&#x4E4B;&#x524D;&#x5728;&#x5C4F;&#x5E55;&#x4EE5;&#x5916;&#x7684;&#x89C6;&#x56FE;&#x6EDA;&#x5165;&#x5C4F;&#x5E55;&#xFF0C;&#x4F1A;&#x89E6;&#x53D1;&#x5B83;&#x5237;&#x65B0; - &#x663E;&#x5F0F;&#x8C03;&#x7528;setNeedsDisplay&#x6216;setNeedsDisplayInRect:&#x51FD;&#x6570; &#x5F53;&#x89C6;&#x56FE;&#x9996;&#x6B21;&#x5C55;&#x73B0;&#x65F6;&#xFF0C;iOS&#x7CFB;&#x7EDF;&#x4F1A;&#x7ED9;&#x89C6;&#x56FE;&#x7684;drawRect:&#x65B9;&#x6CD5;&#x4F20;&#x5165;&#x89C6;&#x56FE;&#x7684;&#x6574;&#x4E2A;&#x53EF;&#x89C1;&#x77E9;&#x5F62;&#x533A;&#x57DF;&#x3002;&#x4E4B;&#x540E;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x90E8;&#x5206;&#x77E9;&#x5F62;&#x533A;&#x57DF;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x5904;&#x4E8E;&#x6027;&#x80FD;&#x8003;&#x8651;&#xFF0C;&#x5E94;&#x8BE5;&#x4EC5;&#x8BA9;&#x8FD9;&#x90E8;&#x5206;&#x533A;&#x57DF;&#x91CD;&#x7ED8;&#x3002; 5 &#x4FEE;&#x6539;app&#x56FE;&#x6807; 5.1 &#x4E0D;&#x540C;&#x8BBE;&#x5907;&#x7684;app&#x56FE;&#x6807;&#x50CF;&#x7D20; &#x8BBE;&#x5907; app&#x56FE;&#x6807;&#x50CF;&#x7D20; 5.5&#x5BF8;iPhone 180x180 &#x50CF;&#x7D20;(@3x) 4.7&#x548C;4.0&#x5BF8;iPhone 120x120&#x50CF;&#x7D20;(@2x) 7.9&#x548C;9.7&#x5BF8;iPad 152x152&#x50CF;&#x7D20;(@2x) 12.9&#x5BF8;iPad 167x167&#x50CF;&#x7D20;(@2x) 5.2 &#x4FEE;&#x6539;app&#x56FE;&#x6807;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4; &#x6309;&#x7167;&#x6807;&#x7EA2;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x4E00;&#x8DEF;&#x70B9;&#x5230;&#x8FD9;&#x4E2A;&#x754C;&#x9762;&#xFF0C;&#x4EC0;&#x4E48;&#x8BBE;&#x5907;&#x4E0B;&#x7684;&#x4EC0;&#x4E48;&#x56FE;&#x6807;&#xFF0C;&#x5751;&#x4F4D;&#x90FD;&#x5DF2;&#x5C31;&#x7EEA;&#xFF0C;&#x76F4;&#x63A5;&#x628A;&#x56FE;&#x6807;&#x62D6;&#x8FC7;&#x53BB;&#x5373;&#x53EF;&#x3002;]]></content>
      <categories>
        <category>iOS Programming</category>
      </categories>
      <tags>
        <tag>iOS BNRG笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[接收输入法被切换的广播]]></title>
    <url>%2F2017%2F07%2F18%2F2017%2F0718IMChanged%2F</url>
    <content type="text"><![CDATA[&#x8F93;&#x5165;&#x6CD5;&#x88AB;&#x5207;&#x8D70;&#x65F6;&#x662F;&#x5426;&#x6536;&#x5230;&#x901A;&#x77E5;&#xFF1F;&#x88AB;&#x5207;&#x8D70;&#x8F93;&#x5165;&#x6CD5;&#x662F;&#x5426;&#x8FD8;&#x5728;&#x8FD0;&#x884C;&#xFF1F; # &#x5E7F;&#x64AD;ACTION_INPUT_METHOD_CHANGED &#x5728;Android Developers ACTION_INPUT_METHOD_CHANGED&#x4E2D;&#x8BF4;&#xFF1A; Broadcast Action: An input method has been changed.&#x3002; &#x5982;&#x679C;&#x8F93;&#x5165;&#x6CD5;&#x7531;A&#x5207;&#x5230;B&#xFF0C;A&#x5E94;&#x8BE5;&#x80FD;&#x6536;&#x5230;&#x8BE5;&#x5E7F;&#x64AD;&#xFF0C;&#x5982;&#x679C;&#x518D;&#x7531;B&#x5207;&#x5230;C&#xFF0C;&#x8FD8;&#x80FD;&#x6536;&#x5230;&#x5417;&#xFF1F; &#x6211;&#x5728;AndroidIMESample&#x4E2D;&#x62C9;&#x51FA;&#x5206;&#x652F;&#x9A8C;&#x8BC1;&#x6B64;&#x95EE;&#x9898;&#x3002; &#x521B;&#x5EFA;IMChangedReceiver&#x6765;&#x5904;&#x7406;&#x8BE5;&#x5E7F;&#x64AD;&#xFF1A;&#x6DFB;&#x52A0;onReceiver()&#x51FD;&#x6570;&#xFF1A; 12345678910public class IMChangedReceiver extends BroadcastReceiver { public IMChangedReceiver(){ } @Override public void onReceive(Context context, Intent intent){ Toast.makeText(context, &quot;&#x63A5;&#x6536;&#x5230;IMChanged&#x5E7F;&#x64AD;&quot;, Toast.LENGTH_SHORT).show(); }} &#x9759;&#x6001;&#x6CE8;&#x518C;&#x5E7F;&#x64AD; &#x5728;AndroidManifest.xml&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x884C;&#xFF1A; 123456789101112 ... &lt;application&gt; ... &lt;service&gt; ... &lt;/service&gt; &lt;receiver android:name=&quot;.IMChangedReceiver&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.INPUT_METHOD_CHANGED&quot;/&gt; &lt;/intent-filter&gt; &lt;/receiver&gt; &lt;/application&gt;&lt;/manifest&gt; &#x6267;&#x884C;Build &gt; Build APK &gt; Reveal in Finder&#xFF0C;&#x628A;apk&#x62D6;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x91CC;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x3002;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#x662F;&#xFF1A; 1. &#x4ECE;SGDXAndroidIMESample&#x5207;&#x5230;&#x522B;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#xFF0C;SGDXAndroidIMESample&#x80FD;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x3002; 2. &#x4ECE;Android&#x952E;&#x76D8;(AOSP)&#x5207;&#x5230;Sample Soft Keyboard&#x65F6;&#xFF0C;SGDXAndroidIMESample&#x4E5F;&#x80FD;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4E0D;&#x7BA1;&#x5207;&#x6362;&#x548C;&#x88AB;&#x5207;&#x6362;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x548C;SGDXAndroidIMESample&#x6709;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x5B83;&#x90FD;&#x80FD;&#x6536;&#x5230;&#x5207;&#x6362;&#x7684;&#x5E7F;&#x64AD;&#x3002; 3. &#x91CD;&#x542F;&#x673A;&#x5668;&#xFF0C;&#x65E0;&#x9700;&#x5148;&#x5207;&#x51FA;SGDXAndroidIMESample&#xFF0C;&#x4F9D;&#x7136;&#x662F;&#xFF1A;&#x4E0D;&#x7BA1;&#x5207;&#x6362;&#x548C;&#x88AB;&#x5207;&#x6362;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x548C;SGDXAndroidIMESample&#x6709;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x5B83;&#x90FD;&#x80FD;&#x6536;&#x5230;&#x5207;&#x6362;&#x7684;&#x5E7F;&#x64AD;&#x3002; &#x4EE3;&#x7801;&#x8BE6;&#x89C1;&#x8FD9;&#x91CC; # &#x52A8;&#x6001;&#x6CE8;&#x518C;&#x5E7F;&#x64AD; &#x5220;&#x9664;AndroidManifest.xml&#x4E2D;&#x9759;&#x6001;&#x6CE8;&#x518C;receiver&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5728;AndroidIMESampleService&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; 1234567891011121314151617public class AndroidIMESampleService extends InputMethodService implements KeyboardView.OnKeyboardActionListener { ... private IMChangedReceiver mIMChangedReceiver = new IMChangedReceiver(); // &#x58F0;&#x660E;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x5668; @Override public View onCreateInputView() { ... // &#x52A8;&#x6001;&#x6CE8;&#x518C;IMChanged&#x5E7F;&#x64AD; IntentFilter intentFilter = new IntentFilter(); intentFilter.addAction(Intent.ACTION_INPUT_METHOD_CHANGED); registerReceiver(mIMChangedReceiver, intentFilter); return mKeyboardView; } &#x5B89;&#x88C5;&#x5B8C;&#x6210;&#xFF0C;&#x5C1D;&#x8BD5;&#x5207;&#x6362;&#xFF0C;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#x662F;&#xFF1A; 1. &#x4EC5;&#x4ECE;SGDXAndroidIMESample&#x5207;&#x5230;&#x522B;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#xFF0C;SGDXAndroidIMESample&#x624D;&#x80FD;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#xFF0C;&#x5176;&#x5B83;&#x7684;&#x5207;&#x6362;&#x5747;&#x6536;&#x4E0D;&#x5230;&#x3002; 2. &#x91CD;&#x542F;&#x673A;&#x5668;&#xFF0C;&#x4F9D;&#x7136;&#x662F;&#xFF1A;&#x4EC5;&#x4ECE;SGDXAndroidIMESample&#x5207;&#x5230;&#x522B;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#xFF0C;SGDXAndroidIMESample&#x624D;&#x80FD;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#xFF0C;&#x5176;&#x5B83;&#x7684;&#x5207;&#x6362;&#x5747;&#x6536;&#x4E0D;&#x5230;&#x3002; &#x4EE3;&#x7801;&#x8BE6;&#x89C1;&#x8FD9;&#x91CC; # &#x5206;&#x6790; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5982;&#x679C;&#x662F;&#x9759;&#x6001;&#x6CE8;&#x518C;&#xFF0C;&#x53EA;&#x8981;&#x4E0D;&#x662F;&#x88AB;&#x5207;&#x5165;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x603B;&#x80FD;&#x6536;&#x5230;&#x5207;&#x6362;&#x7684;&#x5E7F;&#x64AD;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x4EC5;&#x80FD;&#x6536;&#x5230;&#x88AB;&#x5207;&#x51FA;&#x7684;&#x5E7F;&#x64AD;&#x3002; &#x95EE;&#x9898;&#xFF1A;&#x8F93;&#x5165;&#x6CD5;&#x88AB;&#x5207;&#x8D70;&#x4EE5;&#x540E;&#x8FDB;&#x7A0B;&#x8FD8;&#x5728;&#x5417;&#xFF1F;&#x91CD;&#x542F;&#x540E;&#x5982;&#x679C;&#x4E0D;&#x5207;&#x5165;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x8FDB;&#x7A0B;&#x8FD8;&#x5728;&#x5417;&#xFF1F;&#x5982;&#x679C;&#x5728;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6536;&#x4E0D;&#x5230;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x5E7F;&#x64AD;&#xFF1F;&#x5982;&#x679C;&#x4E0D;&#x5728;&#xFF0C;&#x53C8;&#x662F;&#x600E;&#x4E48;&#x6536;&#x5230;&#x9759;&#x6001;&#x6CE8;&#x518C;&#x5E7F;&#x64AD;&#x7684;&#x5462;&#xFF1F; &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x547D;&#x4EE4;adb shell ps&#x6765;&#x67E5;&#x770B;&#x8FDB;&#x7A0B;&#x3002; - &#x5F53;&#x8F93;&#x5165;&#x6CD5;&#x88AB;&#x8BBE;&#x4E3A;&#x9ED8;&#x8BA4; &#x91CD;&#x542F;&#x624B;&#x673A;&#x540E;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x8FDB;&#x7A0B;&#x5C31;&#x4F1A;&#x88AB;&#x542F;&#x52A8;&#xFF0C;&#x5E76;&#x4E14;Service&#x7684;onStartInput()&#x51FD;&#x6570;&#x4E5F;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#xFF1A; 12345678910$ adb shell psUSER PID PPID VSZ RSS WCHAN ADDR S NAME...u0_a84 2185 1393 1426324 65160 SyS_epoll_wait 0 S com.palanceli.ime.androidimesample...$ adb logcat|grep &quot;palanceli&quot;07-18 15:30:39.426 1495 1706 I ActivityManager: Start proc 2172:com.palanceli.ime.androidimesample/u0a84 for service com.palanceli.ime.androidimesample/.AndroidIMESampleService07-18 15:30:40.250 2172 2172 D class com.palanceli.ime.androidimesample.AndroidIMESampleService: onStartInput:07-18 15:30:40.637 2172 2172 D class com.palanceli.ime.androidimesample.AndroidIMESampleService: onStartInput: &#x5F53;&#x8F93;&#x5165;&#x6CD5;&#x4E3A;&#x975E;&#x9ED8;&#x8BA4; &#x91CD;&#x542F;&#x624B;&#x673A;&#x540E;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x8FDB;&#x7A0B;&#x4E0D;&#x4F1A;&#x88AB;&#x542F;&#x52A8;&#xFF0C;&#x9664;&#x975E;&#x624B;&#x52A8;&#x8C03;&#x8D77;&#x952E;&#x76D8;&#x3002; &#x5982;&#x679C;&#x662F;&#x9759;&#x6001;&#x6CE8;&#x518C;&#x7684;BroadCastReceiver&#xFF0C;&#x5373;&#x4F7F;&#x8FDB;&#x7A0B;&#x6CA1;&#x6709;&#x542F;&#x52A8;&#xFF0C;&#x5F53;&#x5E7F;&#x64AD;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x542F;&#x52A8;&#x8FDB;&#x7A0B;&#x518D;&#x628A;&#x5E7F;&#x64AD;&#x53D1;&#x9001;&#x7ED9;&#x5B83;&#xFF0C;&#x8FD9;&#x4E0E;&#x8F93;&#x5165;&#x6CD5;&#x662F;&#x5426;&#x9ED8;&#x8BA4;&#x65E0;&#x5173;&#xFF0C;&#x800C;&#x662F;&#x9759;&#x6001;&#x6CE8;&#x518C;BroadCastReceiver&#x7684;&#x6027;&#x8D28;&#x3002;&#x8FD9;&#x5728;&#x5E7F;&#x64AD;&#x673A;&#x5236;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x7684;&#x6E90;&#x7801;&#x5206;&#x6790;&#x4E2D;&#x4E5F;&#x80FD;&#x627E;&#x5230;&#x3002; &#x5982;&#x679C;&#x662F;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;BroadCastReceiver&#xFF0C;&#x5219;&#x8FDB;&#x7A0B;&#x5FC5;&#x987B;&#x662F;&#x542F;&#x52A8;&#x7684;&#x624D;&#x80FD;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x3002;&#x5728;Android&#x6E90;&#x7801;&#x7684;Activity&#x6216;Service&#x7B49;&#x7EC4;&#x4EF6;&#x88AB;&#x9500;&#x6BC1;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x80FD;&#x627E;&#x5230;&#x6E05;&#x7406;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x5668;&#x7684;&#x4EE3;&#x7801;[&#x5F85;&#x67E5;]&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Android输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《机器学习》预备知识]]></title>
    <url>%2F2017%2F07%2F10%2F2017%2F0710MachineLearning1%2F</url>
    <content type="text"><![CDATA[&#x5B66;&#x4E60;&#x89C6;&#x9891;&#x300A;&#x65AF;&#x5766;&#x798F;&#x5927;&#x5B66;&#x516C;&#x5F00;&#x8BFE; &#xFF1A;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x8BFE;&#x7A0B;&#x300B;&#x4E4B;&#x524D;&#x9700;&#x8981;&#x8865;&#x5145;&#x4E00;&#x4E9B;&#x9884;&#x5907;&#x77E5;&#x8BC6;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x6982;&#x7387;&#x8BBA;&#x76F8;&#x5173;&#x7684;&#x3002; &#x5E0C;&#x814A;&#x5B57;&#x7B26;&#x8868; table th:nth-of-type(1){ width: 5px; } table th:nth-of-type(2){ width: 5px; } table th:nth-of-type(3){ width: 10px; } table th:nth-of-type(4){ width: 1px; } table th:nth-of-type(5){ width: 5px; } table th:nth-of-type(6){ width: 5px; } table th:nth-of-type(7){ width: 10px; } table th:nth-of-type(8){ width: 1px; } table th:nth-of-type(9){ width: 5px; } table th:nth-of-type(10){ width: 5px; } table th:nth-of-type(11){ width: 10px; } |&#x5927;&#x5199;| &#x5C0F;&#x5199; | &#x540D;&#x79F0; ||&#x5927;&#x5199;| &#x5C0F;&#x5199; | &#x540D;&#x79F0; ||&#x5927;&#x5199;| &#x5C0F;&#x5199; | &#x540D;&#x79F0; | | --- | --- | --- || --- | --- | --- || --- | --- | --- | |&#x391;|&#x3B1;|alpha||&#x399;|&#x3B9; &#x2129;|iota||&#x3A1;|&#x3C1;|rho| |&#x392;|&#x3B2;|beta||&#x39A;|&#x3BA;|kappa||&#x3A3;|&#x3C3; &#x3C2;|sigma| |&#x393;|&#x3B3;|gamma||&#x39B;|&#x3BB;|lambda||&#x3A4;|&#x3C4;|tau| |&#x394;|&#x3B4;|delta||&#x39C;|&#x3BC;|mu||&#x3A5;|&#x3C5;|upsilon| |&#x395;|&#x3B5;|epsilon||&#x39D;|&#x3BD;|nu||&#x3A6;|&#x3C6;|phi| |&#x396;|&#x3B6;|zeta||&#x39E;|&#x3BE;|xi||&#x3A7;|&#x3C7;|chi| |&#x397;|&#x3B7;|eta||&#x39F;|&#x3BF;|omicron||&#x3A8;|&#x3C8;|psi| |&#x398;|&#x3B8;|theta||&#x3A0;|&#x3C0;|pi||&#x3A9;|&#x3C9;|omega| &#x6982;&#x7387;&#x8D28;&#x91CF;&#x51FD;&#x6570; &#x662F;&#x79BB;&#x6563;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x5728;&#x5404;&#x7279;&#x5B9A;&#x53D6;&#x503C;&#x4E0A;&#x7684;&#x6982;&#x7387;&#x3002;Probability Mass Function&#xFF0C;&#x7B80;&#x79F0;PMF&#x3002; &#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x51FD;&#x6570; &#x8FDE;&#x7EED;&#x578B;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x7684;&#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#x7B80;&#x79F0;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x662F;&#x63CF;&#x8FF0;&#x8BE5;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x7684;&#x8F93;&#x51FA;&#x503C;&#x5728;&#x67D0;&#x4E2A;&#x786E;&#x5B9A;&#x7684;&#x53D6;&#x503C;&#x70B9;&#x9644;&#x8FD1;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x51FD;&#x6570;&#x3002;Probability Density Function&#xFF0C;&#x7B80;&#x79F0;PDF&#x3002; PDF&#x662F;&#x5BF9;&#x8FDE;&#x7EED;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x672C;&#x8EAB;&#x4E0D;&#x662F;&#x6982;&#x7387;&#xFF0C;&#x53EA;&#x6709;&#x5BF9;&#x8FDE;&#x7EED;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x7684;&#x53D6;&#x503C;&#x8FDB;&#x884C;&#x79EF;&#x5206;&#x540E;&#x624D;&#x662F;&#x6982;&#x7387;&#x3002;&#x5176;&#x6570;&#x5B66;&#x8868;&#x793A;&#x5982;&#x4E0B;&#xFF1A;&#x3010;&#x6CE8;1&#x3011; X&#x662F;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x578B;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF0C;fX(x)&#x662F;&#x5B83;&#x7684;&#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#xFF0C;FX(x)&#x662F;&#x5B83;&#x7684;&#x7D2F;&#x8BA1;&#x5206;&#x5E03;&#x51FD;&#x6570;&#xFF0C;F(x)=P(X&#xFF1C;x)&#x80FD;&#x6E05;&#x6670;&#x5730;&#x8868;&#x8FBE;&#x51FA;FX(x)&#x7684;&#x542B;&#x4E49;&#x3002;&#x5BF9;&#x4E8E;&#x5728;[a, b]&#x4E0A;&#x5747;&#x5300;&#x8FDE;&#x7EED;&#x5206;&#x5E03;&#x7684;x&#x800C;&#x8A00;&#xFF0C;&#x95EE;&#x5B83;&#x5728;&#x67D0;&#x4E2A;&#x70B9;&#x4E0A;&#x7684;&#x6982;&#x7387;&#x662F;&#x6CA1;&#x6709;&#x610F;&#x4E49;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x80FD;&#x8BA8;&#x8BBA;&#x7684;&#x53EA;&#x80FD;&#x662F;&#x5B83;&#x5728;&#x67D0;&#x4E2A;&#x533A;&#x95F4;&#x4E0A;&#x7684;&#x6982;&#x7387;&#xFF0C;&#x6B64;&#x6982;&#x7387;&#x7B49;&#x4E8E;&#x533A;&#x95F4;&#x7684;&#x957F;&#x5EA6;&#x4E58;&#x4EE5;&#x5BC6;&#x5EA6;&#x3002; &#x68AF;&#x5EA6; &#x68AF;&#x5EA6;&#x662F;&#x4E00;&#x4E2A;&#x66F2;&#x9762;&#x6CBF;&#x7740;&#x7ED9;&#x5B9A;&#x65B9;&#x5411;&#x7684;&#x503E;&#x659C;&#x7A0B;&#x5EA6;&#x3002;&#x4E00;&#x4E2A;&#x6807;&#x91CF;&#x51FD;&#x6570;&#x3C6;&#x7684;&#x68AF;&#x5EA6;&#x8BB0;&#x4F5C;&#xFF1A;&#x25BD;&#x3C6;&#x6216;grad&#x3C6;&#xFF0C;&#x5176;&#x4E2D;&#x25BD;&#x8868;&#x793A;&#x77E2;&#x91CF;&#x5FAE;&#x5206;&#x7B97;&#x5B50;&#x3002;&#x5728;&#x4E09;&#x7EF4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x68AF;&#x5EA6;&#x5728;&#x76F4;&#x89D2;&#x5750;&#x6807;&#x7CFB;&#x4E2D;&#x8868;&#x793A;&#x4E3A;&#xFF1A; &#x8D1D;&#x53F6;&#x65AF;&#x516C;&#x5F0F; &#x8D1D;&#x53F6;&#x65AF;&#x516C;&#x5F0F;&#x63CF;&#x8FF0;&#x4E24;&#x4E2A;&#x6761;&#x4EF6;&#x6982;&#x7387;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF1A;P(A&#x2229;B) = P(A)*P(B|A) = P(B)*P(A|B)&#xFF0C;&#x6545; &#x5747;&#x5300;&#x5206;&#x5E03; x&#x5728;[a, b]&#x4E0A;&#x5747;&#x5300;&#x5206;&#x5E03;&#xFF0C;&#x5176;&#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; &#x5373;&#xFF0C;&#x5F53;x&#x2209;[a, b]&#x51FD;&#x6570;&#x503C;&#x7B49;&#x4E8E;0&#xFF1B;&#x5F53;x&#x2208;[a, b]&#x51FD;&#x6570;&#x503C;&#x7B49;&#x4E8E;1/(b-a)&#x3002; &#x6B63;&#x6001;&#x5206;&#x5E03; &#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF08;Normal distribution&#xFF09;&#x53C8;&#x540D;&#x9AD8;&#x65AF;&#x5206;&#x5E03;&#xFF08;Gaussion distribution&#xFF09;&#x3002;&#x82E5;&#x968F;&#x673A;&#x53D8;&#x91CF;X&#x670D;&#x4ECE;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x53C2;&#x6570;&#x4E3A;&#x3BC;&#xFF0C;&#x5C3A;&#x5EA6;&#x53C2;&#x6570;&#x4E3A;&#x3B4;&#x7684;&#x6982;&#x7387;&#x5206;&#x5E03;&#xFF0C;&#x4E14;&#x5176;&#x6982;&#x7387;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; &#x5219;&#x8BE5;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x5C31;&#x6210;&#x4E3A;&#x6B63;&#x592A;&#x968F;&#x673A;&#x5206;&#x5E03;&#xFF0C;&#x8BB0;&#x4F5C;&#xFF1A;X ~ N(&#x3BC;, &#x3B4;&#xB2;)&#xFF0C;&#x3BC;&#x51B3;&#x5B9A;&#x4E86;&#x5176;&#x4F4D;&#x7F6E;&#xFF0C;&#x3B4;&#x51B3;&#x5B9A;&#x4E86;&#x5206;&#x5E03;&#x5E45;&#x5EA6;&#x3002; &#x3BC;=0 &#x3B4;=1&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x6210;&#x4E3A;&#x6807;&#x51C6;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x3002; &#x4F2F;&#x52AA;&#x5229;&#x5206;&#x5E03; &#x4F2F;&#x52AA;&#x5229;&#x5206;&#x5E03;&#x662F;&#x4E00;&#x79CD;&#x79BB;&#x6563;&#x5206;&#x5E03;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#x7684;&#x7ED3;&#x679C;&#xFF1A;1&#x8868;&#x793A;&#x6210;&#x529F;&#xFF0C;&#x51FA;&#x73B0;&#x6982;&#x7387;&#x4E3A;p&#xFF1B;0&#x8868;&#x793A;&#x5931;&#x8D25;&#xFF0C;&#x51FA;&#x73B0;&#x6982;&#x7387;&#x4E3A;1-p&#x3002; Pr[x=1] = p; Pr[x=0] = 1-p &#x4E8C;&#x9879;&#x5206;&#x5E03; &#x4E8C;&#x9879;&#x5206;&#x5E03;&#x662F;n&#x91CD;&#x4F2F;&#x52AA;&#x5229;&#x8BD5;&#x9A8C;&#x6210;&#x529F;&#x6B21;&#x6570;&#x7684;&#x79BB;&#x6563;&#x6982;&#x7387;&#x5206;&#x5E03;&#x3002; - &#x5982;&#x679C;&#x5B9E;&#x9A8C;E&#x662F;&#x4E2A;n&#x91CD;&#x4F2F;&#x52AA;&#x5229;&#x5B9E;&#x9A8C;&#xFF0C;&#x6BCF;&#x6B21;&#x6210;&#x529F;&#x7684;&#x6982;&#x7387;&#x4E3A;p&#xFF0C;X&#x4EE3;&#x8868;&#x6210;&#x529F;&#x6B21;&#x6570;&#xFF0C;&#x5219;X&#x7684;&#x6982;&#x7387;&#x5206;&#x5E03;&#x5C31;&#x662F;&#x4E8C;&#x9879;&#x5206;&#x5E03;&#xFF0C;&#x8BB0;&#x4F5C;X ~ B(n, p)&#xFF0C;&#x5176;&#x6982;&#x7387;&#x8D28;&#x91CF;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; &#x663E;&#x7136;&#xFF1A; - &#x4F2F;&#x52AA;&#x5229;&#x5206;&#x5E03;&#x662F;&#x4E8C;&#x9879;&#x5206;&#x5E03;&#x5728;n=1&#x65F6;&#x7684;&#x7279;&#x4F8B;&#x3002; - &#x4E8C;&#x9879;&#x5206;&#x5E03;&#x540D;&#x79F0;&#x7684;&#x7531;&#x6765;&#xFF0C;&#x662F;&#x7531;&#x4E8E;&#x5176;&#x6982;&#x7387;&#x8D28;&#x91CF;&#x51FD;&#x6570;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;&#x4E8C;&#x9879;&#x5F0F;&#x7CFB;&#x6570;Cnk&#xFF0C;&#x8BE5;&#x7CFB;&#x6570;&#x662F;&#x4E8C;&#x9879;&#x5F0F;&#x5B9A;&#x7406;&#x4E2D;&#x7684;&#x7CFB;&#x6570;&#xFF0C;&#x4E8C;&#x9879;&#x5F0F;&#x5B9A;&#x529B;&#x662F;&#x7531;&#x725B;&#x987F;&#x63D0;&#x51FA;&#xFF1A; - &#x4E8C;&#x9879;&#x5206;&#x5E03;&#x7684;&#x5178;&#x578B;&#x4F8B;&#x5B50;&#x662F;&#x6254;&#x786C;&#x5E01;&#xFF0C;&#x91CD;&#x590D;&#x6254;n&#x6B21;&#x786C;&#x5E01;&#xFF0C;&#x5176;&#x4E2D;&#x6709;k&#x6B21;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#x7684;&#x6982;&#x7387;&#x5373;&#x4E3A;&#x4E00;&#x4E2A;&#x4E8C;&#x9879;&#x5206;&#x5E03;&#x6982;&#x7387;&#x3002; &#x591A;&#x9879;&#x5206;&#x5E03; &#x591A;&#x9879;&#x5206;&#x5E03;&#x662F;&#x4E8C;&#x9879;&#x5206;&#x5E03;&#x7684;&#x63A8;&#x5E7F;&#xFF0C;&#x8FD8;&#x662F;&#x505A;n&#x6B21;&#x8BD5;&#x9A8C;&#xFF0C;&#x6BCF;&#x6B21;&#x8BD5;&#x9A8C;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x6709;m&#x4E2A;&#xFF0C;&#x4E14;m&#x4E2A;&#x7ED3;&#x679C;&#x53D1;&#x751F;&#x7684;&#x6982;&#x7387;&#x4E92;&#x65A5;&#x4E14;&#x548C;&#x4E3A;1&#xFF0C;&#x5219;&#x53D1;&#x751F;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;X&#x6B21;&#x7684;&#x6982;&#x7387;&#x5C31;&#x662F;&#x591A;&#x9879;&#x5F0F;&#x5206;&#x5E03;&#x3002; - &#x6254;&#x9AB0;&#x5B50;&#x5C31;&#x662F;&#x5178;&#x578B;&#x7684;&#x591A;&#x9879;&#x5F0F;&#x5206;&#x5E03;&#xFF0C;&#x91CD;&#x590D;&#x6254;n&#x6B21;&#xFF0C;&#x6709;k&#x6B21;&#x90FD;&#x662F;&#x70B9;6&#x7684;&#x6982;&#x7387;&#x5C31;&#x662F;&#xFF1A; - &#x591A;&#x9879;&#x5206;&#x5E03;&#x7684;&#x6982;&#x7387;&#x8D28;&#x91CF;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; Beta&#x5206;&#x5E03; &#x9700;&#x8981;&#x5148;&#x660E;&#x786E;&#x51E0;&#x4E2A;&#x6982;&#x5FF5; ## &#x5148;&#x9A8C;&#x6982;&#x7387; &#x5148;&#x9A8C;&#x6982;&#x7387;&#xFF08;prior distribution&#xFF09;&#x662F;&#x4E8B;&#x60C5;&#x5C1A;&#x672A;&#x53D1;&#x751F;&#x524D;&#x5BF9;&#x8BE5;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x6982;&#x7387;&#x7684;&#x4F30;&#x8BA1;&#x3002;&#x5229;&#x7528;&#x5386;&#x53F2;&#x8D44;&#x6599;&#x8BA1;&#x7B97;&#x7684;&#x5148;&#x9A8C;&#x6982;&#x7387;&#x6210;&#x4E3A;&#x5BA2;&#x89C2;&#x5148;&#x9A8C;&#x6982;&#x7387;&#xFF0C;&#x51ED;&#x4EBA;&#x4EEC;&#x7684;&#x4E3B;&#x89C2;&#x7ECF;&#x9A8C;&#x6765;&#x5224;&#x65AD;&#x800C;&#x5F97;&#x5230;&#x7684;&#x5148;&#x9A8C;&#x6982;&#x7387;&#x6210;&#x4E3A;&#x4E3B;&#x89C2;&#x5148;&#x9A8C;&#x6982;&#x7387;&#x3002; ## &#x540E;&#x9A8C;&#x6982;&#x7387; &#x540E;&#x9A8C;&#x6982;&#x7387;&#xFF08;posterior distribution&#xFF09;&#x662F;&#x6307;&#x901A;&#x8FC7;&#x8C03;&#x67E5;&#x6216;&#x5176;&#x4ED6;&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x65B0;&#x7684;&#x9644;&#x52A0;&#x4FE1;&#x606F;&#xFF0C;&#x5229;&#x7528;&#x8D1D;&#x53F6;&#x65AF;&#x516C;&#x5F0F;&#x5BF9;&#x5148;&#x9A8C;&#x6982;&#x7387;&#x8FDB;&#x884C;&#x4FEE;&#x6B63;&#x800C;&#x5F97;&#x5230;&#x7684;&#x6982;&#x7387;&#x3002; ## &#x4F3C;&#x7136;&#x51FD;&#x6570; &#x4F3C;&#x7136;&#x51FD;&#x6570;&#x662F;&#x4E00;&#x79CD;&#x5173;&#x4E8E;&#x7EDF;&#x8BA1;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x7ED9;&#x5B9A;&#x8F93;&#x51FA;x&#x65F6;&#xFF0C;&#x5173;&#x4E8E;&#x53C2;&#x6570;&#x3B8;&#x7684;&#x4F3C;&#x7136;&#x51FD;&#x6570;L(&#x3B8;|x)=P(X=x|&#x3B8;)&#x3002;&#x201C;&#x4F3C;&#x7136;&#x201D;&#x548C;&#x201C;&#x6982;&#x7387;&#x201D;&#x662F;&#x540C;&#x4E49;&#x8BCD;&#xFF0C;&#x4F46;&#x5728;&#x7EDF;&#x8BA1;&#x5B66;&#x4E2D;&#xFF0C;&#x4E8C;&#x8005;&#x7528;&#x6CD5;&#x622A;&#x7136;&#x4E0D;&#x540C;&#xFF1A;&#x6982;&#x7387;&#x7528;&#x4E8E;&#x5728;&#x5DF2;&#x77E5;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9884;&#x6D4B;&#x63A5;&#x4E0B;&#x6765;&#x89C2;&#x6D4B;&#x6240;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x4F3C;&#x7136;&#x6027;&#x5219;&#x7528;&#x4E8E;&#x5728;&#x5DF2;&#x77E5;&#x67D0;&#x4E9B;&#x89C2;&#x6D4B;&#x6240;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x65F6;&#xFF0C;&#x5BF9;&#x6709;&#x5173;&#x4E8B;&#x7269;&#x7684;&#x6027;&#x8D28;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x4F30;&#x8BA1;&#x3002;&#x5728;&#x5DF2;&#x77E5;&#x67D0;&#x4E2A;&#x53C2;&#x6570;B&#x65F6;&#xFF0C;&#x4E8B;&#x4EF6;A&#x53D1;&#x751F;&#x7684;&#x6982;&#x7387;&#x5199;&#x4F5C;P(A|B)=P(A,B)/ P(B)&#xFF0C;&#x5229;&#x7528;&#x8D1D;&#x53F6;&#x65AF;&#x516C;&#x5F0F;P(B|A)=P(A|B)*P(B)/P(A)&#x3002;&#x53CD;&#x8FC7;&#x6765;&#x53EF;&#x4EE5;&#x6784;&#x9020;&#x4F3C;&#x7136;&#x6027;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x5DF2;&#x77E5;&#x6709;&#x4E8B;&#x4EF6;A&#x53D1;&#x751F;&#xFF0C;&#x8FD0;&#x7528;&#x4F3C;&#x7136;&#x51FD;&#x6570;L(B|A)&#x4F30;&#x8BA1;&#x4F30;&#x8BA1;&#x53C2;&#x6570;B&#x7684;&#x53EF;&#x80FD;&#x6027;&#xFF0C;L(b|A)=&#x3B1;P(A|B=b)&#xFF0C;&#x4E00;&#x4E2A;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x4E58;&#x4EE5;&#x4E00;&#x4E2A;&#x6B63;&#x5E38;&#x6570;&#x4E4B;&#x540E;&#x4ECD;&#x7136;&#x662F;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x3002; &#x8FD8;&#x4EE5;&#x6295;&#x786C;&#x5E01;&#x4E3A;&#x4F8B;&#xFF0C;&#x5728;&#x5DF2;&#x77E5;&#x4E00;&#x7CFB;&#x5217;&#x6295;&#x63B7;&#x7ED3;&#x679C;&#x65F6;&#xFF0C;&#x5173;&#x4E8E;&#x786C;&#x5E01;&#x6295;&#x63B7;&#x65F6;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#x7684;&#x53EF;&#x80FD;&#x6027;&#xFF0C;&#x53EF;&#x5EFA;&#x7ACB;&#x5982;&#x4E0B;&#x6A21;&#x578B;&#xFF1A;&#x5047;&#x8BBE;&#x786C;&#x5E01;&#x6295;&#x51FA;&#x662F;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#x7684;&#x6982;&#x7387;&#x4E3A;pH&#xFF0C;&#x5219;&#x80CC;&#x9762;&#x671D;&#x4E0A;&#x7684;&#x6982;&#x7387;&#x4E3A;1-pH&#xFF0C;&#x4F3C;&#x7136;&#x51FD;&#x6570; L(pH|HH)=p(HH|pH=0.5) = 0.25&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x89C2;&#x6D4B;&#x5230;&#x4E24;&#x6B21;&#x6295;&#x63B7;&#x90FD;&#x662F;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#x65F6;&#xFF0C;pH&#x7684;&#x4F3C;&#x7136;&#x6027;&#x662F;0.25&#x3002; &#x5982;&#x679C;&#x8003;&#x8651;pH=0.6&#xFF0C;&#x5219; L(pH|HH)=p(HH|pH=0.6) = 0.36&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;pH=0.6&#x65F6;&#xFF0C;&#x7ED3;&#x679C;&#x89C2;&#x6D4B;&#x5230;&#x8FDE;&#x7EED;&#x4E24;&#x6B21;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#x7684;&#x6982;&#x7387;&#x6BD4;&#x5047;&#x8BBE;pH=0.5&#x65F6;&#x66F4;&#x5927;&#xFF0C;&#x8BF4;&#x660E;pH&#x53BB;0.6&#x8981;&#x6BD4;0.5&#x66F4;&#x6709;&#x8BF4;&#x670D;&#x529B;&#xFF0C;&#x66F4;&#x4E3A;&#x201C;&#x5408;&#x7406;&#x201D;&#x3002;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x7684;&#x91CD;&#x8981;&#x6027;&#x4E0D;&#x662F;&#x4ED6;&#x7684;&#x5177;&#x4F53;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x5F53;&#x53C2;&#x6570;&#x53D8;&#x5316;&#x65F6;&#x51FD;&#x6570;&#x53D8;&#x5927;&#x8FD8;&#x662F;&#x53D8;&#x5C0F;&#x3002;&#x8FD9;&#x6B63;&#x662F;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x4E58;&#x4EE5;&#x4E00;&#x4E2A;&#x6B63;&#x5E38;&#x6570;&#x4E4B;&#x540E;&#x4ECD;&#x7136;&#x662F;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x7684;&#x539F;&#x56E0;&#x3002; &#x5BF9;&#x4E8E;&#x6295;&#x786C;&#x5E01;&#x6765;&#x8BF4;&#xFF0C;&#x89C2;&#x6D4B;&#x4E24;&#x6B21;&#x6B63;&#x9762;&#x90FD;&#x671D;&#x4E0A;&#x7684;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x4E3A; L(&#x3B8;|HH)=P(HH|pH=&#x3B8;)=&#x3B8;&#xB2;&#xFF0C;0&#x2264;pH&#x2264;1&#xFF0C;&#x5B83;&#x7684;&#x66F2;&#x7EBF;&#x4E3A;&#xFF1A; &#x6295;&#x63B7;&#x4E09;&#x6B21;&#xFF0C;&#x524D;&#x4E24;&#x6B21;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#xFF0C;&#x7B2C;&#x4E09;&#x6B21;&#x80CC;&#x9762;&#x671D;&#x4E0A;&#x7684;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x4E3A; L(&#x3B8;|HHT)=P(HHT|pH=&#x3B8;)=&#x3B8;&#xB2;(1-&#x3B8;)&#xFF0C;&#xFF0C;0&#x2264;pH&#x2264;1&#xFF0C;&#x5B83;&#x7684;&#x66F2;&#x7EBF;&#x56FE;&#x4E3A;&#xFF1A; &#x9006;&#x6982;&#x7387;&#x95EE;&#x9898; &#x8FD8;&#x4EE5;&#x6295;&#x786C;&#x5E01;&#x7684;&#x5B9E;&#x9A8C;&#x6765;&#x8BF4;&#x660E;&#xFF0C;&#x5047;&#x8BBE;&#x4E0D;&#x77E5;&#x9053;&#x786C;&#x5E01;&#x662F;&#x4E0D;&#x662F;&#x4E24;&#x9762;&#x201C;&#x516C;&#x5E73;&#x201D;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4E0D;&#x4E86;&#x89E3;&#x8FD9;&#x679A;&#x786C;&#x5E01;&#x7684;&#x7269;&#x7406;&#x504F;&#x5411;&#x6027;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5F97;&#x5230;&#x6B63;&#x9762;&#x7684;&#x6982;&#x7387;pH&#x5C31;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;50%&#x3002;&#x90A3;&#x4E48;&#x9006;&#x6982;&#x7387;&#x95EE;&#x9898;&#x4FBF;&#x662F;&#x4F01;&#x56FE;&#x4ECE;&#x67D0;&#x4E2A;&#x5B9E;&#x9A8C;&#x6837;&#x672C;&#x6765;&#x731C;&#x6D4B;pH&#x7684;&#x6570;&#x503C;&#x3002;&#x5E94;&#x7528;&#x8D1D;&#x53F6;&#x65AF;&#x516C;&#x5F0F;&#xFF1A; &#x540E;&#x9A8C;&#x6982;&#x7387; = &#x89C2;&#x6D4B;&#x6570;&#x636E;&#x51B3;&#x5B9A;&#x7684;&#x8C03;&#x6574;&#x56E0;&#x5B50; * &#x5148;&#x9A8C;&#x6982;&#x7387;&#x3000;&#x3000;&#x3000;&#x516C;&#x5F0F;&#xFF08;1&#xFF09; &#x4E8E;&#x662F;&#x5229;&#x7528;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x4E0E;&#x89C2;&#x5BDF;&#x6570;&#x636E;&#x4E00;&#x8D77;&#xFF0C;&#x53EF;&#x4EE5;&#x51B3;&#x5B9A;&#x5047;&#x8BBE;&#x7684;&#x6700;&#x7EC8;&#x6982;&#x7387;&#xFF0C;&#x4EE5;&#x5141;&#x8BB8;&#x5BF9;&#x67D0;&#x79CD;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x9010;&#x6B65;&#x8C03;&#x6574;&#x540E;&#x9A8C;&#x6982;&#x7387;&#x5E76;&#x4F5C;&#x51FA;&#x6700;&#x7EC8;&#x7684;&#x6982;&#x7387;&#x9884;&#x6D4B;&#x3002; &#x56E0;&#x4E3A;&#x662F;&#x8981;&#x5BF9;&#x672A;&#x77E5;&#x7684;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x4F5C;&#x51FA;&#x9884;&#x6D4B;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5728;&#x5982;&#x4F55;&#x7406;&#x89E3;&#x8FD9;&#x79CD;&#x201C;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x201D;&#x4E0A;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E9B;&#x54F2;&#x5B66;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x5206;&#x6B67;&#x3002;&#x5206;&#x6B67;&#x4E4B;&#x4E00;&#x5C31;&#x662F;&#xFF1A;&#x8FD9;&#x79CD;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x662F;&#x56FA;&#x6709;&#x7684;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#x5417;&#xFF1F; &#x9006;&#x6982;&#x7387;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;&#x4ECE;&#x6837;&#x672C;&#x6570;&#x636E;&#x6765;&#x731C;&#x6D4B;&#x6982;&#x7387;&#x6A21;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x629B;&#x786C;&#x5E01;&#x5B9E;&#x9A8C;&#xFF0C;&#x6BCF;&#x6B21;&#x5B9E;&#x9A8C;&#x53EF;&#x4EE5;&#x7528;&#x968F;&#x673A;&#x53D8;&#x91CF;X&#x8868;&#x793A;&#xFF0C;X&#x670D;&#x4ECE;&#x4E8C;&#x9879;&#x5206;&#x5E03;&#x6216;&#x4F2F;&#x52AA;&#x5229;&#x5206;&#x5E03;&#x3002;&#x5982;&#x4F55;&#x201C;&#x731C;&#x6D4B;&#x201D;&#x629B;&#x786C;&#x5E01;&#x65F6;&#x6B63;&#x9762;&#x51FA;&#x73B0;&#x7684;&#x6982;&#x7387;p&#xFF1F;&#x9891;&#x7387;&#x5B66;&#x6D3E;&#x8BA4;&#x4E3A;&#x6A21;&#x578B;&#x53C2;&#x6570;p&#x662F;&#x56FA;&#x5B9A;&#x7684;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#x7684;&#xFF0C;&#x8D1D;&#x53F6;&#x65AF;&#x5B66;&#x6D3E;&#x5219;&#x628A;&#x6A21;&#x578B;&#x7684;&#x53C2;&#x6570;p&#x4E5F;&#x5F53;&#x4F5C;&#x4E00;&#x4E2A;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#x968F;&#x673A;&#x53D8;&#x91CF;Y&#xFF0C;&#x56E0;&#x800C;&#xFF0C;&#x8D1D;&#x53F6;&#x65AF;&#x5B66;&#x6D3E;&#x7684;Y&#x4E0D;&#x50CF;&#x9891;&#x7387;&#x5B66;&#x6D3E;&#x7684;p&#x90A3;&#x6837;&#x662F;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x7B26;&#x5408;&#x67D0;&#x79CD;&#x5206;&#x5E03;&#x7684;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF08;&#x5E8F;&#x5217;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5BF9;&#x8D1D;&#x53F6;&#x65AF;&#x5B66;&#x6D3E;&#x800C;&#x8A00;&#xFF0C;&#x786C;&#x5E01;&#x5B9E;&#x9A8C;&#x4E2D;&#x6709;&#x4E24;&#x7C7B;&#x968F;&#x673A;&#x53D8;&#x91CF;&#xFF1A;&#x786C;&#x5E01;&#x201C;&#x6B63;&#x53CD;&#x201D;&#x7684;&#x4E00;&#x7C7B;&#x968F;&#x673A;&#x53D8;&#x91CF;X&#xFF0C;&#x548C;&#x8868;&#x5F81;&#x786C;&#x5E01;&#x504F;&#x5411;&#x6027;&#x7684;&#x53E6;&#x4E00;&#x7C7B;&#x968F;&#x673A;&#x53D8;&#x91CF;Y&#x3002;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x5E8F;&#x5217;&#x4E0E;&#x5206;&#x5E03;&#x76F8;&#x5BF9;&#x5E94;&#xFF0C;&#x56E0;&#x4E3A;Y&#x662F;&#x5EFA;&#x7ACB;&#x5728;&#x968F;&#x673A;&#x5E8F;&#x5217;X&#x7684;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x4E4B;&#x4E0A;&#x7684;&#x968F;&#x673A;&#x5E8F;&#x5217;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5176;&#x5206;&#x5E03;&#x88AB;&#x79F0;&#x4E3A;&#x201C;&#x5206;&#x5E03;&#x4E4B;&#x5206;&#x5E03;&#x201D;&#x3002; &#x9891;&#x7387;&#x5B66;&#x6D3E;&#x8BA4;&#x4E3A;p&#x6709;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x6570;&#x503C;&#xFF0C;&#x4E5F;&#x5C31;&#x81EA;&#x7136;&#x800C;&#x7136;&#x5730;&#x8BA4;&#x4E3A;&#x51B3;&#x5B9A;&#x8FD9;&#x4E2A;&#x6570;&#x503C;&#x7684;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x591A;&#x6B21;&#x8BD5;&#x9A8C;&#xFF0C;&#x4E0D;&#x505C;&#x5730;&#x629B;&#x786C;&#x5E01;&#xFF0C;&#x8BB0;&#x5F55;&#x5176;&#x4E2D;&#x6B63;&#x9762;&#x51FA;&#x73B0;&#x7684;&#x9891;&#x7387;&#xFF0C;&#x5B9E;&#x9A8C;&#x6B21;&#x6570;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x80FD;&#x8D8A;&#x6765;&#x8D8A;&#x903C;&#x8FD1;p&#x7684;&#x771F;&#x5B9E;&#x6570;&#x503C;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x629B;&#x4E86;1000&#x6B21;&#xFF0C;&#x6B63;&#x9762;601&#x6B21;&#xFF0C;&#x5F97;&#x5230;&#x9891;&#x7387;p&#xFF08;1000&#xFF09;=0.601&#xFF0C;&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x9884;&#x6D4B;p=0.6&#x3002; &#x8D1D;&#x53F6;&#x65AF;&#x5B66;&#x6D3E;&#x5E76;&#x4E0D;&#x5047;&#x5B9A;p&#x6709;&#x4E00;&#x4E2A;&#x201C;&#x5BA2;&#x89C2;&#x201D;&#x6570;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x8BA4;&#x4E3A;p&#x4E5F;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x53D8;&#x91CF;Y&#xFF0C;&#x53EF;&#x4EE5;&#x53D6;0&#x5230;1&#x4E4B;&#x95F4;&#x7684;&#x4EFB;&#x4F55;&#x503C;&#xFF0C;&#x4F46;&#x53EF;&#x80FD;&#x670D;&#x4ECE;&#x67D0;&#x79CD;&#x5206;&#x5E03;&#xFF08;&#x5747;&#x5300;&#x3001;&#x6B63;&#x6001;&#x3001;&#x6216;&#x5176;&#x5B83;&#xFF09;&#xFF0C;&#x5B9E;&#x9A8C;&#x6B21;&#x6570;&#x7684;&#x589E;&#x591A;&#x53EF;&#x4EE5;&#x5BF9;&#x6B64;&#x5206;&#x5E03;&#x7684;&#x60C5;&#x51B5;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x3002;&#x8FD9;&#x6837;&#x4E00;&#x6765;&#xFF0C;&#x4F7F;&#x7528;&#x8D1D;&#x53F6;&#x65AF;&#x516C;&#x5F0F;&#xFF0C;&#x4FBF;&#x53EF;&#x4EE5;&#x9010;&#x6B21;&#x4FEE;&#x6B63;Y&#x5BF9;&#x5E94;&#x7684;&#x5206;&#x5E03;&#xFF1A; &#x540E;&#x9A8C;&#x6982;&#x7387;&#x5206;&#x5E03; = &#x89C2;&#x6D4B;&#x6570;&#x636E;&#x51B3;&#x5B9A;&#x7684;&#x8C03;&#x6574;&#x56E0;&#x5B50;&#xD7;&#x5148;&#x9A8C;&#x6982;&#x7387;&#x5206;&#x5E03; &#x6570;&#x5B66;&#x5316;&#x7684;&#x8868;&#x8FBE;&#x5982;&#x4E0B;&#xFF1A; P(Y|&#x6570;&#x636E;) = {P(&#x6570;&#x636E;| Y) / P(&#x6570;&#x636E;)} * P(Y) = &#x4F3C;&#x7136;&#x51FD;&#x6570;* P(Y)&#x3000;&#x3000;&#x3000;&#x516C;&#x5F0F;&#xFF08;2&#xFF09; P(&#x6570;&#x636E;)&#x53EF;&#x4EE5;&#x6682;&#x4E0D;&#x8003;&#x8651;&#xFF0C;&#x4EE5;&#x540E;&#x4F1A;&#x653E;&#x5230;&#x6982;&#x7387;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x56E0;&#x5B50;&#x4E2D;&#x3002; &#x5176;&#x4E2D;P(Y)&#x662F;&#x5148;&#x9A8C;&#x5206;&#x5E03;&#xFF0C;P(Y|&#x6570;&#x636E;) &#x662F;&#x8003;&#x8651;&#x5F97;&#x5230;&#x4E86;&#x66F4;&#x591A;&#x6570;&#x636E;&#x6761;&#x4EF6;&#x4E0B;&#x7684;&#x540E;&#x9A8C;&#x5206;&#x5E03;&#xFF0C;P(&#x6570;&#x636E;| Y)&#x662F;&#xFF08;&#x6B63;&#x6BD4;&#x4E8E;&#xFF09;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x3002; &#x4EE5;&#x7B80;&#x5355;&#x7684;&#x201C;&#x629B;&#x786C;&#x5E01;&#x201D;&#x5B9E;&#x9A8C;&#x4E3A;&#x4F8B;&#xFF0C;&#x9996;&#x5148;&#x7814;&#x7A76;&#x4E00;&#x4E0B;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x3002;&#x5BF9;&#x786C;&#x5E01;&#x201C;&#x6B63;&#x53CD;&#x201D;&#x968F;&#x673A;&#x6027;X&#x5BF9;&#x5E94;&#x7684;&#x4E8C;&#x9879;&#x79BB;&#x6563;&#x53D8;&#x91CF;&#xFF0C;&#x4E8B;&#x4EF6;&#x8981;&#x4E48;&#x53D1;&#x751F;&#xFF08;p&#xFF09;&#xFF0C;&#x8981;&#x4E48;&#x4E0D;&#x53D1;&#x751F;&#xFF08;1-p&#xFF09;&#x3002;&#x5982;&#x679C;&#x53D1;&#x751F;m&#x6B21;&#xFF0C;&#x4E0D;&#x53D1;&#x751F;n&#x6B21;&#xFF0C;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x5F0F;&#x4E3A;&#xFF1A; p^m * (1-p)^n &#x5982;&#x679C;&#x6211;&#x4EEC;&#x80FD;&#x627E;&#x5230;&#x4E00;&#x79CD;&#x5206;&#x5E03;&#x5F62;&#x5F0F;&#x6765;&#x8868;&#x793A;&#x5148;&#x9A8C;&#x5206;&#x5E03;&#xFF0C;&#x4E58;&#x4EE5;&#x4F3C;&#x7136;&#x51FD;&#x6570;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x540E;&#x9A8C;&#x5206;&#x5E03;&#x4ECD;&#x7136;&#x80FD;&#x591F;&#x4FDD;&#x6301;&#x540C;&#x6837;&#x7684;&#x5F62;&#x5F0F;&#x7684;&#x8BDD;&#xFF0C;&#x4FBF;&#x4E0D;&#x4EC5;&#x5177;&#x6709;&#x4EE3;&#x6570;&#x516C;&#x5F0F;&#x7684;&#x534F;&#x8C03;&#x4E4B;&#x7F8E;&#xFF0C;&#x4E5F;&#x4F1A;&#x7ED9;&#x5B9E;&#x9645;&#x4E0A;&#x7684;&#x8BA1;&#x7B97;&#x5E26;&#x6765;&#x8BB8;&#x591A;&#x65B9;&#x4FBF;&#x4E4B;&#x5904;&#x3002; Beta&#x5206;&#x5E03;&#x5C31;&#x5177;&#x6709;&#x8FD9;&#x79CD;&#x6027;&#x8D28;&#x3002;&#x5177;&#x6709;&#x8BE5;&#x6027;&#x8D28;&#x7684;&#x5206;&#x5E03;&#x53EB;&#x505A;&#x201C;&#x5171;&#x8F6D;&#x5148;&#x9A8C;&#x201D;&#xFF0C;beta&#x5206;&#x5E03;&#x662F;&#x4E8C;&#x9879;&#x5206;&#x5E03;&#x7684;&#x5171;&#x8F6D;&#x5148;&#x9A8C;&#xFF1A; Beta&#x5206;&#x5E03;&#x7528;f(x;a,b)&#x8868;&#x793A;&#xFF0C;&#x5176;&#x4E2D;&#x7684;B(a,b)&#x662F;&#x901A;&#x5E38;&#x7684;&#x7531;gamma&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x7684;beta&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x8FD9;&#x513F;&#x610F;&#x4E49;&#x4E0D;&#x5927;&#xFF0C;&#x53EA;&#x662F;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5F52;&#x4E00;&#x5316;&#x7684;&#x5E38;&#x6570;&#x800C;&#x5F15;&#x8FDB;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;&#x6982;&#x7387;&#x6C42;&#x548C;&#xFF08;&#x6216;&#x79EF;&#x5206;&#xFF09;&#x5F97;&#x5230;1&#x3002; &#x8FD8;&#x4EE5;&#x6254;&#x786C;&#x5E01;&#x4E3A;&#x4F8B;&#xFF0C;&#x6254;10&#x6B21;&#x6709;3&#x6B21;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#xFF0C;7&#x6B21;&#x80CC;&#x9762;&#x671D;&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x7531;&#x6B64;&#x8BB0;&#x5F55;&#x5F97;&#x5230;&#x4E00;&#x4E2A;beta&#x7684;&#x5148;&#x9A8C;&#x5206;&#x5E03;&#xFF1A;f(H; 3, 7)&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x518D;&#x6254;8&#x6B21;&#xFF0C;&#x524D;7&#x6B21;&#x6B63;&#x9762;&#x671D;&#x4E0A;&#xFF0C;1&#x6B21;&#x80CC;&#x9762;&#x671D;&#x4E0A;&#xFF0C;&#x540E;&#x9A8C;&#x6982;&#x7387;&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x4E2A;beta&#x5206;&#x5E03;&#xFF0C;&#x53EA;&#x662F;&#x53C2;&#x6570;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF1A;f(H; 10, 8)&#x3002;&#x3010;&#x6CE8;2&#x3011; Gamma&#x51FD;&#x6570; &#x5728;&#x5B9E;&#x6570;&#x57DF;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;&#xFF1A; Gamma&#x51FD;&#x6570; &#x5728;&#x6574;&#x6570;&#x57DF;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;&#xFF1A;&#x393;(n)=(n&#x2212;1)! Gamma&#x51FD;&#x6570;&#x6709;&#x4EE5;&#x4E0B;&#x6027;&#x8D28;&#xFF1A;&#x393;(x+1)=x&#x393;(x) &#x62C9;&#x683C;&#x6717;&#x65E5;&#x4E58;&#x6CD5; &#x62C9;&#x683C;&#x6717;&#x65E5;&#x4E58;&#x6CD5;&#x662F;&#x7528;&#x6765;&#x89E3;&#x51B3;&#x6761;&#x4EF6;&#x6781;&#x503C;&#x95EE;&#x9898;&#x7684;&#x3002;&#x6781;&#x503C;&#x95EE;&#x9898;&#x5206;&#x4E24;&#x7C7B;&#xFF1A;&#x4E00;&#x662F;&#x65E0;&#x6761;&#x4EF6;&#x6781;&#x503C;&#xFF1A;&#x6C42;&#x51FD;&#x6570;&#x5728;&#x7ED9;&#x5B9A;&#x533A;&#x95F4;&#x4E0A;&#x7684;&#x6781;&#x503C;&#xFF0C;&#x5BF9;&#x81EA;&#x53D8;&#x91CF;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x8981;&#x6C42;&#x3002;&#x6BD4;&#x5982;&#x6C42;y=x&#xB2;&#x5728;x&#x2208;[-1, 1]&#x7684;&#x6781;&#x5C0F;&#x503C;&#x3002;&#x4E8C;&#x662F;&#x6761;&#x4EF6;&#x6781;&#x503C;&#xFF1A;&#x5BF9;&#x81EA;&#x53D8;&#x91CF;&#x6709;&#x4E00;&#x4E9B;&#x9644;&#x52A0;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x9650;&#x5236;&#x4E0B;&#x7684;&#x6781;&#x503C;&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#x8BF4;&#x660E;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x4E58;&#x6CD5;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x4F8B;&#x5982;&#x7ED9;&#x5B9A;&#x692D;&#x7403; &#x6C42;&#x8FD9;&#x4E2A;&#x692D;&#x7403;&#x7684;&#x5185;&#x63A5;&#x957F;&#x65B9;&#x4F53;&#x7684;&#x6700;&#x5927;&#x4F53;&#x79EF;&#xFF0C;&#x8BE5;&#x95EE;&#x9898;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5728;&#x6EE1;&#x8DB3;&#x692D;&#x7403;&#x65B9;&#x7A0B;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#xFF0C;&#x6C42; f(x, y, z) = 8xyz&#x7684;&#x6700;&#x5927;&#x503C;&#x3002; &#x5B83;&#x7684;&#x4E00;&#x822C;&#x5316;&#x63CF;&#x8FF0;&#x4E3A;&#xFF1A;&#x6C42;&#x51FD;&#x6570;z=f(x, y)&#x5728;&#x6EE1;&#x8DB3;&#x3C6;(x, y)=0&#x4E0B;&#x7684;&#x6761;&#x4EF6;&#x6781;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x8F6C;&#x5316;&#x4E3A;&#x6C42;&#x51FD;&#x6570;F(x, y, &#x3BB;) = f(x, y) + &#x3BB;&#x3C6;(x, y)&#x7684;&#x65E0;&#x6761;&#x4EF6;&#x6781;&#x503C;&#x3002;&#x5982;&#x679C;(x0, y0, &#x3BB;0)&#x52BF;&#x51FD;&#x6570;F(x, y, &#x3BB;)&#x7684;&#x9A7B;&#x70B9;&#xFF0C;&#x5219;(x0, y0)&#x5C31;&#x662F;&#x6761;&#x4EF6;&#x6781;&#x503C;&#x7684;&#x5ACC;&#x7591;&#x70B9;&#x3002; &#x56DE;&#x5230;&#x4E0A;&#x9762;&#x692D;&#x7403;&#x5185;&#x63A5;&#x957F;&#x65B9;&#x4F53;&#x7684;&#x6781;&#x503C;&#x95EE;&#x9898;&#xFF0C;&#x901A;&#x8FC7;&#x62C9;&#x683C;&#x6717;&#x65E5;&#x4E58;&#x6CD5;&#x5C06;&#x95EE;&#x9898;&#x8F6C;&#x5316;&#x4E3A;&#xFF1A; &#x5BF9;F(x, y, z, &#x3BB;)&#x6C42;&#x504F;&#x5BFC;&#xFF1A; &#x89E3;&#x65B9;&#x7A0B;&#x7EC4;&#x5F97;&#x5230;&#xFF1A; &#x5E26;&#x5165;&#x6C42;&#x5F97;&#x6700;&#x5927;&#x4F53;&#x79EF;&#x4E3A;&#xFF1A; &gt; &#x6CE8;1&#xFF1A;&#x8FD9;&#x4E2A;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x751F;&#x6210;&#x7F51;&#x7AD9;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x5F88;&#x65B9;&#x4FBF;&#x3002; &gt; &#x6CE8;2&#xFF1A;&#x5728;macOS&#x4E0B;&#x53EF;&#x4EE5;&#x6267;&#x884C;brew install scipy&#x5B89;&#x88C5;scipy&#x6A21;&#x5757;&#xFF0C;&#x7ED8;&#x5236;beta&#x5206;&#x5E03;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112from scipy.stats import betaimport matplotlib.pyplot as pltimport numpy as npdef beta(): x = np.linspace(0, 1, 100) plt.plot(x, beta.pdf(x, 3, 7), lw=1, alpha=0.6, label=&apos;prior distribution f(x, 3, 7)&apos;) plt.plot(x, beta.pdf(x, 10, 8), lw=1, alpha=0.6, label=&apos;posterior distribution f(x, 10, 8)&apos;) plt.legend(frameon=False) plt.show()]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Andrew NG Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[攀登岗什卡]]></title>
    <url>%2F2017%2F06%2F27%2F2017%2F0627%E5%B2%97%E4%BB%80%E5%8D%A101%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x6211;&#x751F;&#x547D;&#x5F53;&#x4E2D;&#xFF0C;&#x4E09;&#x5341;&#x5C81;&#x4EE5;&#x540E;&#x80FD;&#x7559;&#x4E0B;&#x6DF1;&#x523B;&#x5370;&#x8BB0;&#x7684;&#x4E8B;&#x4EF6;&#x4E0D;&#x591A;&#xFF0C;&#x6BCF;&#x5929;&#x8C8C;&#x4F3C;&#x5FD9;&#x5FD9;&#x788C;&#x788C;&#x7684;&#xFF0C;&#x597D;&#x51E0;&#x5E74;&#x65F6;&#x95F4;&#x77AC;&#x95F4;&#x6ED1;&#x8FC7;&#xFF0C;&#x597D;&#x50CF;&#x5C31;&#x53EA;&#x8FC7;&#x53BB;&#x51E0;&#x5929;&#x3002;&#x800C;&#x8FD9;&#x6B21;&#x767B;&#x9876;&#x5C97;&#x4EC0;&#x5361;&#xFF0C;&#x7EDD;&#x5BF9;&#x662F;&#x63D2;&#x5728;&#x6211;&#x4EBA;&#x751F;&#x65C5;&#x9014;&#x4E2D;&#x7684;&#x4E00;&#x652F;&#x9192;&#x76EE;&#x7684;&#x65D7;&#x6807;&#x3002; &#x5148;&#x6765;&#x79C0;&#x4E00;&#x4E0B;&#x767B;&#x9876;&#x8BC1;&#x4E66; &#x5C97;&#x4EC0;&#x5361;&#x7684;&#x767B;&#x5C71;&#x8BA1;&#x5212;&#x662F;&#x7531;&#x5927;&#x54E5;&#x53D1;&#x8D77;&#xFF0C;&#x915D;&#x917F;&#x4E24;&#x4E2A;&#x591A;&#x6708;&#xFF0C;&#x7EC8;&#x4E8E;&#x5728;6&#x6708;23&#x65E5;&#x6210;&#x884C;&#x3002;&#x6211;&#x672C;&#x6765;&#x6CA1;&#x6253;&#x7B97;&#x53C2;&#x52A0;&#xFF0C;&#x56E0;&#x4E3A;&#x4ECA;&#x5E74;&#x4E94;&#x516D;&#x6708;&#x4EFD;&#x7684;&#x5DEE;&#x65C5;&#x7279;&#x522B;&#x591A;&#xFF0C;&#x672C;&#x60F3;&#x5728;&#x516D;&#x6708;&#x5E95;&#x597D;&#x597D;&#x4F11;&#x606F;&#x3002;&#x540E;&#x6765;&#x7ECF;&#x4E0D;&#x4F4F;&#x4E8C;&#x54E5;&#x6311;&#x9017;&#xFF0C;&#x62B1;&#x7740;&#x6253;&#x9171;&#x6CB9;&#x7684;&#x5FC3;&#x6001;&#xFF0C;&#x5C31;&#x5165;&#x4F19;&#x4E86;&#xFF0C;&#x76F4;&#x5230;&#x843D;&#x5730;&#x897F;&#x5B81;&#x8FD8;&#x662F;&#x89C2;&#x5149;&#x5BA2;&#x4E00;&#x679A;&#x3002;&#x4E00;&#x5F20;&#x5145;&#x6EE1;&#x4EEA;&#x5F0F;&#x611F;&#x7684;&#x5408;&#x5F71;&#x4E4B;&#x540E;&#xFF1A;&#x5C31;&#x8FDB;&#x5165;&#x4E86;&#x80E1;&#x5403;&#x6D77;&#x585E;&#x7684;&#x8282;&#x594F;&#xFF1A;&#x7F8A;&#x8089;&#x4E32;&#x3001;&#x5927;&#x8170;&#x5B50;&#xFF0C;&#x54C8;&#x54C8;&#x54C8;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x6559;&#x7EC3;&#x53EE;&#x5631;&#x767B;&#x5C71;&#x524D;&#x4E0D;&#x51C6;&#x559D;&#x9152;&#xFF0C;&#x684C;&#x4E0A;&#x7801;&#x51FA;&#x4E00;&#x6392;&#x9152;&#x74F6;&#x624D;&#x662F;&#x6807;&#x914D;&#xFF01; &#x7B2C;&#x4E8C;&#x5929;&#xFF08;24&#x65E5;&#xFF09;&#x4E00;&#x65E9;&#x5C31;&#x88AB;&#x8FC5;&#x901F;&#x62C9;&#x5165;&#x89D2;&#x8272;&#xFF0C;&#x4E0A;&#x5348;10&#x70B9;&#x949F;&#x51FA;&#x53D1;&#xFF0C;&#x4E09;&#x4E2A;&#x5C0F;&#x65F6;&#x5F92;&#x6B65;3.5&#x516C;&#x91CC;&#xFF0C;&#x5230;&#x8FBE;&#x6D77;&#x62D4;4300&#x591A;&#x7C73;&#x7684;&#x5927;&#x672C;&#x8425;&#x3002;&#x4E00;&#x8DEF;&#x4E0A;&#x7684;&#x98CE;&#x666F;&#x5C31;&#x50CF;&#x897F;&#x5317;&#x6C49;&#x5B50;&#x4E00;&#x6837;&#x7C97;&#x72C2;&#x4E0D;&#x7F81;&#xFF0C;&#x5076;&#x5C14;&#x8FD8;&#x80FD;&#x770B;&#x5230;&#x4E0D;&#x8FDC;&#x5904;&#x7684;&#x96EA;&#x5C71;&#x9876;&#xFF1A;&#x968F;&#x7740;&#x9732;&#x51FA;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x7684;&#x767D;&#x8272;&#x5C71;&#x5C16;&#xFF0C;&#x5185;&#x5FC3;&#x91CC;&#x7684;&#x6FC0;&#x52A8;&#x4E5F;&#x5F00;&#x59CB;&#x8D8A;&#x6765;&#x8D8A;&#x4E0D;&#x5B89;&#x5206;&#x4E86;&#x65E0;&#x6CD5;&#x63A9;&#x9970;&#x4E00;&#x526F;&#x8E0C;&#x8E87;&#x6EE1;&#x5FD7;&#x7684;&#x8868;&#x60C5;&#xFF1A;&#x4E2D;&#x5348;1&#x70B9;&#x591A;&#x5230;&#x8FBE;&#x5927;&#x672C;&#x8425;&#xFF1A; &#x6309;&#x7167;&#x8BA1;&#x5212;&#xFF0C;&#x5F53;&#x5929;&#x4E0B;&#x5348;&#x4F11;&#x606F;&#xFF0C;&#x7B2C;&#x4E8C;&#x5929;&#x51FA;&#x6765;&#x62C9;&#x7EC3;&#x3001;&#x9002;&#x5E94;&#xFF0C;&#x7B2C;&#x4E09;&#x5929;&#x767B;&#x9876;&#x3002;&#x6B64;&#x65F6;&#x4E00;&#x76F4;&#x4EE4;&#x6211;&#x5185;&#x5FC3;&#x4E0D;&#x5B89;&#x7684;&#x662F;&#xFF1A;&#x722C;&#x96EA;&#x5C71;&#x4F1A;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x4F20;&#x8BF4;&#x4E2D;&#x7684;&#x9AD8;&#x539F;&#x53CD;&#x5E94;&#xFF1F;&#x5982;&#x679C;&#x722C;&#x5230;&#x534A;&#x5C71;&#x8170;&#x9AD8;&#x53CD;&#x4E86;&#x8C01;&#x628A;&#x6211;&#x625B;&#x4E0B;&#x53BB;&#xFF1F;&#x5982;&#x679C;&#x5C71;&#x4E0A;&#x51FA;&#x73B0;&#x66B4;&#x98CE;&#x96EA;&#xFF0C;&#x5929;&#x660F;&#x5730;&#x6697;&#x3001;&#x98DE;&#x6C99;&#x8D70;&#x77F3;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x5C0F;&#x547D;&#x5C31;&#x4EA4;&#x4EE3;&#x5728;&#x5C71;&#x4E0A;&#xFF1F;&#x7136;&#x800C;&#x4E8B;&#x5B9E;&#x8BC1;&#x660E;&#x6211;&#x60F3;&#x591A;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x62CD;&#x5B8C;&#x4E0A;&#x9762;&#x8FD9;&#x5F20;&#x7167;&#x7247;&#xFF0C;&#x8FDB;&#x5165;&#x5927;&#x672C;&#x8425;&#xFF0C;&#x6211;&#x5C31;&#x5DEE;&#x4E0D;&#x591A;&#x5931;&#x5FC6;&#x4E86;&#x2026;&#x2026; &#x6240;&#x8C13;&#x5927;&#x672C;&#x8425;&#x5C31;&#x662F;&#x4E00;&#x680B;&#x6728;&#x5C4B;&#xFF0C;&#x665A;&#x4E0A;&#x5728;&#x8FD9;&#x91CC;&#x4F11;&#x606F;&#xFF0C;&#x88C5;&#x5907;&#x90FD;&#x8FD0;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x4F5C;&#x4E3A;&#x51B2;&#x9876;&#x7684;&#x57FA;&#x5730;&#x3002;&#x521A;&#x8FDB;&#x5C4B;&#x843D;&#x4E0B;&#x811A;&#xFF0C;&#x6211;&#x5C31;&#x5F00;&#x59CB;&#x5267;&#x70C8;&#x5934;&#x75DB;&#xFF0C;&#x53CD;&#x80C3;&#x3002;&#x521A;&#x521A;&#x5F92;&#x6B65;&#x90A3;3.5&#x516C;&#x91CC;&#x66F4;&#x50CF;&#x662F;&#x4E0B;&#x809A;&#x4E86;&#x534A;&#x65A4;&#x52A3;&#x8D28;&#x767D;&#x9152;&#xFF0C;&#x6B64;&#x65F6;&#x5DF2;&#x878D;&#x5165;&#x6D51;&#x8EAB;&#x7684;&#x8840;&#x6DB2;&#xFF0C;&#x5F00;&#x59CB;&#x5728;&#x4F53;&#x5185;&#x6492;&#x6B22;&#xFF0C;&#x8BA9;&#x4F60;&#x60F3;&#x5410;&#x53C8;&#x5410;&#x4E0D;&#x51FA;&#x6765;&#x3002;&#x6559;&#x7EC3;&#x4E0D;&#x8BA9;&#x7761;&#x89C9;&#xFF0C;&#x56E0;&#x4E3A;&#x7761;&#x592A;&#x65E9;&#x591C;&#x91CC;&#x4F1A;&#x96BE;&#x53D7;&#x5730;&#x9192;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x66F4;&#x96BE;&#x5165;&#x7761;&#x4E86;&#xFF0C;&#x7B2C;&#x4E8C;&#x5929;&#x4F1A;&#x66F4;&#x96BE;&#x53D7;&#x3002; &#x636E;&#x8BF4;&#x4E00;&#x4E0B;&#x5348;&#x6211;&#x90FD;&#x95ED;&#x7740;&#x773C;&#x775B;&#xFF0C;&#x5939;&#x7740;&#x5C3E;&#x5DF4;&#xFF0C;&#x8737;&#x5728;&#x9A6C;&#x624E;&#x4E0A;&#x3002;&#x8BF4;&#x5931;&#x5FC6;&#x4E5F;&#x4E0D;&#x51C6;&#x786E;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x80FD;&#x542C;&#x5230;&#x8EAB;&#x8FB9;&#x7684;&#x4EBA;&#x5728;&#x8D70;&#x52A8;&#x3001;&#x8BF4;&#x8BDD;&#xFF0C;&#x5C31;&#x597D;&#x50CF;&#x4ECE;&#x5929;&#x4E0A;&#x4F20;&#x4E0B;&#x6765;&#x7684;&#x58F0;&#x97F3;&#xFF0C;&#x55E1;&#x55E1;&#x4F5C;&#x54CD;&#xFF1B;&#x540C;&#x65F6;&#x8FD8;&#x8981;&#x5FCD;&#x53D7;&#x6765;&#x81EA;&#x81EA;&#x5DF1;&#x9A71;&#x58F3;&#x91CC;&#x7684;&#x79CD;&#x79CD;&#x96BE;&#x53D7;&#xFF0C;&#x771F;&#x60F3;&#x4ECE;&#x8FD9;&#x9A71;&#x58F3;&#x91CC;&#x62BD;&#x79BB;&#x51FA;&#x6765;&#xFF0C;&#x53C8;&#x505A;&#x4E0D;&#x5230;&#x3002;&#x90A3;&#x771F;&#x7684;&#x6BD4;&#x6B7B;&#x8FD8;&#x96BE;&#x53D7;&#xFF01;&#x4E0D;&#x77E5;&#x9053;&#x90A3;&#x4E00;&#x4E0B;&#x5348;&#x7684;&#x6002;&#x6837;&#x6709;&#x6CA1;&#x6709;&#x88AB;&#x4EBA;&#x62CD;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x56DE;&#x5934;&#x4F1A;&#x8865;&#x4E00;&#x5F20;:) &#x6211;&#x4E0D;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x6328;&#x5230;&#x4E86;&#x665A;&#x4E0A;&#x5341;&#x70B9;&#x949F;&#x3002;&#x7EC8;&#x4E8E;&#xFF0C;&#x7EC8;&#x4E8E;&#x6559;&#x7EC3;&#x653E;&#x6211;&#x4EEC;&#x7761;&#x89C9;&#x4E86;&#x3002;&#x7761;&#x524D;&#x60F3;&#x6700;&#x591A;&#x7684;&#x5C31;&#x662F;&#x2014;&#x2014;&#x8001;&#x5B50;&#x4E0D;&#x722C;&#x4E86;&#xFF01;&#x5750;&#x90A3;&#x5598;&#x53E3;&#x6C14;&#x513F;&#x90FD;&#x662F;&#x8D1F;&#x62C5;&#xFF0C;&#x722C;&#x5C71;&#xFF1F;&#x53BB;&#x4ED6;&#x59E5;&#x59E5;&#x7684;&#x2026;&#x2026; &#x7761;&#x524D;&#x6211;&#x8FD8;&#x8270;&#x96BE;&#x5730;&#x7741;&#x5F00;&#x773C;&#x775B;&#x73AF;&#x987E;&#x4E0B;&#x56DB;&#x5468;&#xFF0C;&#x53D1;&#x73B0;Ruby&#x9AD8;&#x53CD;&#x4E5F;&#x633A;&#x4E25;&#x91CD;&#x7684;&#xFF0C;&#x4E0D;&#x7981;&#x5FC3;&#x4E2D;&#x6697;&#x559C;&#xFF0C;&#x660E;&#x513F;&#x6253;&#x9000;&#x5802;&#x9F13;&#x6709;&#x4F34;&#x4E86;&#xFF0C;&#x597D;&#x6B79;&#x8001;&#x5B50;&#x4E0D;&#x662F;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x6002;&#x5305;&#x3002;&#x4E0D;&#x8FC7;&#x4EBA;&#x5BB6;Ruby&#x662F;&#x5973;&#x751F;&#x2026;&#x2026;&#x54C8;&#x54C8;&#x54C8;&#x54C8;&#xFF0C;&#x5C31;&#x7B97;&#x662F;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#xFF0C;&#x8001;&#x5B50;&#x4E5F;&#x4E0D;&#x722C;&#x4E86;&#xFF0C;&#x592A;tm&#x96BE;&#x53D7;&#x4E86;&#xFF0C;&#x5B9E;&#x5728;&#x625B;&#x4E0D;&#x4F4F;&#xFF01;&#x5C97;&#x4EC0;&#x5361;&#xFF0C;&#x62DC;&#x4E00;&#x4E2A;&#x62DC;&#x5566;~ &#x6211;&#x4ECE;&#x665A;&#x4E0A;&#x5341;&#x70B9;&#x7761;&#x5230;&#x7B2C;&#x4E8C;&#x5929;&#x65E9;&#x4E0A;&#x4E5D;&#x70B9;&#xFF0C;&#x4E2D;&#x95F4;&#x8981;&#x4E0D;&#x662F;&#x88AB;&#x5C3F;&#x618B;&#x9192;&#xFF0C;&#x90A3;&#x4E00;&#x89C9;&#x5C31;&#x5B8C;&#x7F8E;&#x4E86;&#x3002;&#x8BF4;&#x8D77;&#x665A;&#x4E0A;&#x6492;&#x5C3F;&#xFF0C;&#x5B9E;&#x5728;&#x4E0D;&#x723D;&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x4ECE;&#x70ED;&#x4E4E;&#x4E4E;&#x7684;&#x7761;&#x888B;&#x91CC;&#x94BB;&#x51FA;&#x6765;&#xFF0C;&#x7A7F;&#x597D;&#x7ED2;&#x8863;&#x3001;&#x7FBD;&#x7ED2;&#x670D;&#xFF0C;&#x5230;&#x95E8;&#x53E3;&#x8131;&#x4E0B;&#x4FDD;&#x6696;&#x978B;&#x6362;&#x4E0A;&#x5916;&#x51FA;&#x7684;&#x767B;&#x5C71;&#x978B;&#xFF0C;&#x51FA;&#x53BB;&#x627E;&#x4E2A;&#x7A7A;&#x5730;&#x513F;&#x89E3;&#x51B3;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x56DE;&#x6765;&#x6362;&#x978B;&#x3001;&#x8131;&#x8863;&#x670D;&#x3001;&#x94BB;&#x5165;&#x7761;&#x888B;&#x3002;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x7684;&#x7761;&#x888B;&#xFF1A;&#x7761;&#x888B;&#x662F;&#x7528;&#x62C9;&#x94FE;&#x62C9;&#x8D77;&#x6765;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x4E0D;&#x8BA9;&#x70ED;&#x6C14;&#x6563;&#x6389;&#xFF0C;&#x8D77;&#x591C;&#x8981;&#x5C3D;&#x91CF;&#x62C9;&#x5F00;&#x4E00;&#x4E2A;&#x5C0F;&#x53E3;&#xFF0C;&#x4ECE;&#x91CC;&#x9762;&#x94BB;&#x51FA;&#x6765;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5657;&#x55E4;&#x62C9;&#x5F00;&#x534A;&#x622A;&#x4ECE;&#x91CC;&#x9762;&#x8DF3;&#x51FA;&#x6765;&#x3002; &#x4E3A;&#x4E86;&#x8981;&#x4E0D;&#x8981;&#x8D77;&#x6765;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x5148;&#x6597;&#x4E89;&#x4E86;&#x4E8C;&#x5341;&#x5206;&#x949F;&#x2014;&#x2014;&#x4ED6;&#x59E5;&#x59E5;&#x7684;&#x665A;&#x4E0A;&#x6CA1;&#x5403;&#x6CA1;&#x559D;&#x600E;&#x4E48;&#x4F1A;&#x6709;&#x5C3F;&#x5462;&#xFF1F;&#x4E0D;&#x4F1A;&#x662F;&#x505A;&#x68A6;&#x5427;&#xFF1F;&#x597D;&#x50CF;&#x662F;&#x771F;&#x7684;&#xFF0C;&#x8FD8;&#x662F;&#x8C28;&#x614E;&#x4E00;&#x70B9;&#xFF0C;&#x522B;&#x4E00;&#x4E2A;&#x4E0D;&#x5C0F;&#x5FC3;&#x5C3F;&#x7761;&#x888B;&#x91CC;&#x53EF;&#x5C31;&#x7CD7;&#x5927;&#x4E86;&#x2026;&#x2026;&#x518D;&#x618B;&#x4E00;&#x4F1A;&#xFF1F;&#x53EF;&#x8FD9;&#x624D;&#x51CC;&#x6668;&#x4E00;&#x70B9;&#x591A;&#xFF0C;&#x618B;&#x5230;&#x5929;&#x4EAE;&#x975E;&#x70B8;&#x4E86;&#x2026;&#x2026;&#x6700;&#x540E;&#x53EA;&#x597D;&#x50CF;&#x8C46;&#x866B;&#x8715;&#x76AE;&#x4E00;&#x6837;&#x4ECE;&#x7761;&#x888B;&#x91CC;&#x7FFB;&#x6EDA;&#x7740;&#x94BB;&#x4E86;&#x51FA;&#x6765;&#xFF0C;&#x94BB;&#x51FA;&#x4E00;&#x8EAB;&#x767D;&#x6BDB;&#x6C57;&#xFF0C;&#x7761;&#x610F;&#x5168;&#x65E0;&#x3002;&#x56DE;&#x6765;&#x94BB;&#x8FDB;&#x53BB;&#x597D;&#x50CF;&#x6BD4;&#x94BB;&#x51FA;&#x6765;&#x66F4;&#x96BE;&#xFF0C;&#x53EA;&#x597D;&#x628A;&#x62C9;&#x94FE;&#x7684;&#x53E3;&#x62C9;&#x5927;&#x4E00;&#x4E9B;&#x3002;&#x65E9;&#x77E5;&#x5982;&#x6B64;&#xFF0C;&#x51FA;&#x6765;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x76F4;&#x63A5;&#x62C9;&#x5F00;&#x4E86;&#x561B;&#x3002; &#x7B2C;&#x4E09;&#x5929;&#xFF08;25&#x65E5;&#xFF09;&#x9192;&#x6765;&#xFF0C;&#x6211;&#x60CA;&#x559C;&#x5730;&#x53D1;&#x73B0;&#x4E0D;&#x53CD;&#x80C3;&#x4E86;&#xFF0C;&#x5934;&#x75BC;&#x597D;&#x50CF;&#x4E5F;&#x7F13;&#x89E3;&#x4E86;&#x5F88;&#x591A;&#x3002;&#x8279;&#xFF0C;&#x6628;&#x5929;&#x5230;&#x5E95;&#x662F;&#x8D70;&#x4E86;3.5&#x516C;&#x91CC;&#x8FD8;&#x662F;&#x559D;&#x4E86;&#x534A;&#x65A4;&#x767D;&#x9152;&#xFF1F;&#x600E;&#x4E48;&#x8DDF;&#x559D;&#x4E86;&#x9152;&#x7684;&#x611F;&#x89C9;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x771F;&#x5730;&#x662F;&#x559D;&#x9AD8;&#x4E86;&#xFF0C;&#x90A3;&#x75C7;&#x72B6;&#x5E94;&#x8BE5;&#x8D8A;&#x6765;&#x8D8A;&#x8F7B;&#xFF0C;&#x5F04;&#x4E0D;&#x597D;&#x660E;&#x5929;&#x53EF;&#x4EE5;&#x51B2;&#x9876;&#x54E6;~ &#x8FD9;&#x4E00;&#x5929;&#x7684;&#x4EFB;&#x52A1;&#x662F;&#x51FA;&#x6765;&#x505A;&#x9002;&#x5E94;&#x6027;&#x62C9;&#x7EC3;&#xFF0C;&#x65E9;&#x996D;&#x5DF2;&#x7ECF;&#x6709;&#x80C3;&#x53E3;&#x4E86;&#xFF0C;&#x5403;&#x70B9;&#x4E1C;&#x897F;&#x597D;&#x50CF;&#x53EF;&#x4EE5;&#x8DDF;&#x6559;&#x7EC3;&#x51FA;&#x6765;&#x6D3B;&#x52A8;&#x4E86;&#x3002;Ruby&#x8FD8;&#x662F;&#x8DDF;&#x6628;&#x5929;&#x4E00;&#x6837;&#x75DB;&#x82E6;&#xFF0C;&#x53EF;&#x662F;&#x5979;&#x8FD8;&#x662F;&#x575A;&#x6301;&#x51FA;&#x6765;&#x62C9;&#x7EC3;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x8BF4;&#x4E0D;&#x884C;&#xFF0C;&#x597D;&#x50CF;&#x662F;&#x5728;&#x6709;&#x70B9;&#x592A;&#x4E22;&#x4EBA;&#x3002;&#x54CE;&#xFF0C;&#x771F;&#x662F;&#x4E0A;&#x4E86;&#x8D3C;&#x8239;&#xFF0C;&#x51FA;&#x53D1;&#x5427;&#xFF01; &#x8FD9;&#x5929;&#x4E0A;&#x5348;&#x7684;&#x4E3B;&#x8981;&#x4EFB;&#x52A1;&#x662F;&#x7A7F;&#x4E0A;&#x9AD8;&#x5C71;&#x9774;&#x3001;&#x96EA;&#x5957;&#xFF0C;&#x8D70;&#x4E0A;&#x51E0;&#x516C;&#x91CC;&#x9002;&#x5E94;&#x4E00;&#x4E0B;&#x978B;&#x5B50;&#x3001;&#x9053;&#x8DEF;&#x3001;&#x7A7A;&#x6C14;&#xFF0C;&#x518D;&#x627E;&#x4E2A;&#x5C0F;&#x96EA;&#x5761;&#xFF0C;&#x5B66;&#x4E60;&#x600E;&#x4E48;&#x4E0A;&#x4E0B;&#x3002;&#x5927;&#x5BB6;&#x9AD8;&#x53CD;&#x540E;&#x7684;&#x72B6;&#x6001;&#x90FD;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x662F;&#x6BD4;&#x8F83;&#x65E9;&#x51FA;&#x73B0;&#x53CD;&#x5E94;&#x7684;&#xFF0C;&#x7B2C;&#x4E8C;&#x5929;&#x5C31;&#x660E;&#x663E;&#x7F13;&#x89E3;&#x4E86;&#xFF1B;&#x6709;&#x4EBA;&#x591C;&#x91CC;&#x7761;&#x89C9;&#x5F00;&#x59CB;&#x9AD8;&#x53CD;&#xFF0C;&#x65E9;&#x4E0A;&#x9192;&#x6765;&#x4E5F;&#x7F13;&#x89E3;&#x4E86;&#xFF0C;&#x4E8C;&#x54E5;&#x5C5E;&#x4E8E;&#x8FD9;&#x79CD;&#xFF1B;&#x4E5F;&#x6709;&#x7B2C;&#x4E8C;&#x5929;&#x5F00;&#x59CB;&#x5934;&#x75BC;&#xFF0C;&#x53EA;&#x662F;&#x6CA1;&#x90A3;&#x4E48;&#x4E25;&#x91CD;&#xFF0C;&#x6653;&#x5CF0;&#x5C5E;&#x4E8E;&#x8FD9;&#x79CD;&#xFF1B;&#x8FD8;&#x6709;&#x6B66;&#x7237;&#x8D8A;&#x6765;&#x8D8A;&#x96BE;&#x53D7;&#x7684;&#xFF1B;&#x6700;&#x75DB;&#x82E6;&#x7684;&#x8FD8;&#x662F;Ruby&#xFF0C;&#x8DDF;&#x6211;&#x5DEE;&#x4E0D;&#x591A;&#x540C;&#x65F6;&#x9AD8;&#x53CD;&#xFF0C;&#x76F4;&#x5230;&#x4ECE;&#x5927;&#x672C;&#x8425;&#x64A4;&#x4E0B;&#x5C71;&#x624D;&#x597D;&#x8F6C;&#x3002;&#x4E0D;&#x7BA1;&#x662F;&#x54EA;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x4E00;&#x5929;&#x5927;&#x5BB6;&#x5168;&#x90FD;&#x96C6;&#x4F53;&#x51FA;&#x6765;&#x62C9;&#x7EC3;&#xFF0C;&#x6CA1;&#x5C11;&#x8D70;&#x4E00;&#x6B65;&#x8DEF;&#x3002;&#x8FD9;&#x4E00;&#x70B9;&#x8BA9;&#x6211;&#x89C9;&#x5F97;&#x6211;&#x4EEC;&#x7684;&#x56E2;&#x961F;&#x5F88;&#x725B;&#x903C;&#xFF01; &#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x5728;&#x5B66;&#x4E60;&#x8D70;&#x96EA;&#x5761;&#xFF1A;&#x7D2F;&#x4E86;&#x4F11;&#x606F;&#xFF0C;&#x6C14;&#x8272;&#x771F;&#x5730;&#x597D;&#x4E86;&#x5F88;&#x591A;&#xFF1A;&#x540E;&#x9762;&#x96EA;&#x5761;&#x4E0A;&#x662F;&#x6211;&#x4EEC;&#x8D70;&#x51FA;&#x7684;&#x811A;&#x5370;&#xFF0C;&#x7A0D;&#x5FAE;&#x8FD0;&#x52A8;&#x51E0;&#x4E0B;&#xFF0C;&#x9AD8;&#x53CD;&#x75C7;&#x72B6;&#x968F;&#x65F6;&#x53CD;&#x6251;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x96EA;&#x5761;&#x4E0A;&#x5370;&#x51FA;&#x8FD9;&#x4E9B;&#x75D5;&#x8FF9;&#x5DEE;&#x4E0D;&#x591A;&#x7B49;&#x6548;&#x4E8E;&#x4E8C;&#x4E24;&#x767D;&#x9152;&#x5427;&#xFF1A;&#x8FD9;&#x59D1;&#x5A18;&#x5C31;&#x662F;&#x5014;&#x5F3A;&#x7684;Ruby&#xFF0C;&#x6211;&#x8981;&#x662F;&#x9AD8;&#x53CD;&#x6210;&#x5979;&#x90A3;&#x6837;&#xFF0C;&#x8FD9;&#x5929;&#x65E9;&#x4E0A;&#x7EDD;&#x5BF9;&#x4E0D;&#x51FA;&#x6765;&#x4E86;&#xFF1A;&#x8FD8;&#x6709;&#x4E24;&#x4E2A;&#x9017;&#x6BD4;&#xFF0C;&#x4E8C;&#x54E5;&#x548C;&#x6653;&#x5CF0;&#xFF1A;&#x8FD9;&#x4E00;&#x5929;&#x5DF2;&#x7ECF;&#x80FD;&#x6E05;&#x6670;&#x5730;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x5373;&#x5C06;&#x6311;&#x6218;&#x7684;&#x5C71;&#x5CF0;&#xFF0C;&#x6700;&#x9AD8;&#x90A3;&#x4E2A;&#x5C16;&#x5C16;&#x5C31;&#x662F;&#xFF1A; &#x4E0A;&#x5348;&#x5B8C;&#x6210;&#x62C9;&#x7EC3;&#xFF0C;&#x4E2D;&#x5348;&#x56DE;&#x5927;&#x672C;&#x8425;&#x9971;&#x9910;&#x4E00;&#x987F;&#xFF0C;&#x6211;&#x4EEC;&#x4ECE;&#x4E0B;&#x5348;&#x4E09;&#x70B9;&#x7761;&#x5230;&#x4E94;&#x70B9;&#xFF0C;&#x665A;&#x4E0A;&#x4E00;&#x987F;&#x7F8E;&#x9910;&#x4E4B;&#x540E;&#xFF0C;&#x6559;&#x7EC3;&#x7ED9;&#x6211;&#x4EEC;&#x770B;&#x7EAA;&#x5F55;&#x7247;&#x2014;&#x2014;&#x8BB0;&#x5F55;&#x7684;&#x662F;&#x4ED6;&#x5E26;&#x8FC7;&#x7684;&#x201C;7+2&#x767B;&#x5C71;&#x56E2;&#x201D;&#x3002;&#x6240;&#x8C13;&#x201C;7+2&#x201D;&#x662F;&#x6307;&#x4E03;&#x4E2A;&#x5927;&#x6D32;&#x7684;&#x6700;&#x9AD8;&#x5CF0;+&#x4E24;&#x4E2A;&#x6781;&#x70B9;&#xFF1A;&#x975E;&#x6D32;&#x7684;&#x4E5E;&#x529B;&#x9A6C;&#x624E;&#x7F57;&#xFF08;5895m&#xFF09;&#x3001;&#x4E9A;&#x6D32;&#x73E0;&#x7A46;&#x6717;&#x739B;&#x5CF0;&#xFF08;8844m&#xFF09;&#x3001;&#x5357;&#x7F8E;&#x6D32;&#x963F;&#x7A7A;&#x52A0;&#x74DC;&#xFF08;6962m&#xFF09;&#x3001;&#x5927;&#x6D0B;&#x6D32;&#x67E5;&#x4E9A;&#xFF08;5030m)&#x3001;&#x6B27;&#x6D32;&#x5384;&#x5C14;&#x5E03;&#x9C81;&#x58EB;&#xFF08;5642m&#xFF09;&#x3001;&#x5317;&#x7F8E;&#x6D32;&#x9EA6;&#x91D1;&#x5229;&#xFF08;6194m&#xFF09;&#x3001;&#x5357;&#x6781;&#x6D32;&#x6587;&#x68EE;&#xFF08;4897m&#xFF09;&#x548C;&#x5357;&#x5317;&#x6781;&#x70B9;&#x3002; &#x770B;&#x5B8C;&#x4E4B;&#x540E;&#x5927;&#x5BB6;&#x8840;&#x8109;&#x8D32;&#x5F20;&#xFF0C;&#x56E0;&#x4E3A;&#x767D;&#x5929;&#x7684;&#x62C9;&#x7EC3;&#x8BA9;&#x5927;&#x5BB6;&#x521D;&#x6B65;&#x4F53;&#x4F1A;&#x5230;&#x4E86;&#x5E26;&#x7740;&#x9AD8;&#x53CD;&#x5728;&#x9AD8;&#x5C71;&#x884C;&#x8D70;&#x3001;&#x6500;&#x767B;&#x65F6;&#x7684;&#x8270;&#x96BE;&#x3002;&#x6559;&#x7EC3;&#x5E26;&#x7684;&#x56E2;&#x961F;&#x6BCF;&#x6B21;&#x51FA;&#x5F81;&#x7684;&#x5E73;&#x5747;&#x5E74;&#x9F84;&#x90FD;&#x8981;&#x6BD4;&#x6211;&#x4EEC;&#x5927;&#xFF0C;&#x4ED6;&#x4EEC;&#x9762;&#x5BF9;&#x6311;&#x6218;&#xFF0C;&#x52C7;&#x6562;&#x9762;&#x5BF9;&#xFF0C;&#x90A3;&#x80A1;&#x8C6A;&#x6C14;&#x611F;&#x67D3;&#x4E86;&#x6211;&#x4EEC;&#x3002;&#x90A3;&#x4E9B;&#x573A;&#x9762;&#x3001;&#x90A3;&#x4E9B;&#x8BDD;&#x8BED;&#x3001;&#x90A3;&#x4E9B;&#x5728;&#x96EA;&#x5C71;&#x4E0B;&#x7684;&#x884C;&#x8D70;&#xFF0C;&#x5E73;&#x65F6;&#x5728;&#x81EA;&#x5BB6;&#x5BA2;&#x5385;&#x91CC;&#x770B;&#x548C;&#x8FD9;&#x4E00;&#x665A;&#x5728;&#x96EA;&#x5C71;&#x811A;&#x4E0B;&#x7684;&#x5927;&#x672C;&#x8425;&#x91CC;&#x770B;&#xFF0C;&#x90A3;&#x611F;&#x53D7;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#xFF01; &#x7B2C;&#x56DB;&#x5929;&#xFF08;26&#x65E5;&#xFF09;&#x51CC;&#x6668;&#x4E09;&#x70B9;&#xFF0C;&#x6559;&#x7EC3;&#x96C6;&#x5408;&#x4EE4;&#x54CD;&#xFF0C;&#x5927;&#x5BB6;&#x6536;&#x62FE;&#x884C;&#x88C5;&#xFF0C;&#x5411;&#x5C97;&#x4EC0;&#x5361;&#x5C71;&#x9876;&#x884C;&#x8FDB;&#xFF01; &#x51FA;&#x53D1;&#x4E4B;&#x524D;&#xFF0C;&#x5927;&#x6982;&#x4E09;&#x70B9;&#x534A;&#x51FA;&#x6765;&#x6492;&#x5C3F;&#xFF0C;&#x6211;&#x88AB;&#x6EE1;&#x5929;&#x661F;&#x6597;&#x60CA;&#x5446;&#x4E86;&#xFF01;&#x90A3;&#x6F2B;&#x5929;&#x5BD2;&#x5149;&#xFF0C;&#x6620;&#x886C;&#x7740;&#x8FDC;&#x5904;&#x9ED1;&#x6F06;&#x6F06;&#x7684;&#x5C71;&#x5E55;&#xFF0C;&#x8BA9;&#x4EBA;&#x5185;&#x5FC3;&#x987F;&#x751F;&#x656C;&#x754F;&#xFF0C;&#x90A3;&#x79CD;&#x611F;&#x89C9;&#x548C;&#x6DF1;&#x591C;&#x4F9D;&#x504E;&#x5728;&#x6D77;&#x8FB9;&#x50CF;&#x6781;&#x4E86;&#x3002;&#x975E;&#x5E38;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#x6211;&#x8FD8;&#x770B;&#x5230;&#x4E00;&#x9897;&#x6D41;&#x661F;&#xFF0C;&#x6162;&#x901F;&#x5730;&#x5212;&#x8FC7;&#x4E86;&#x534A;&#x8FB9;&#x5929;&#x7A7A;&#x3002;&#x7A81;&#x7136;&#x6709;&#x79CD;&#x611F;&#x89C9;&#xFF1A;&#x5728;&#x8FD9;&#x661F;&#x7A7A;&#x7684;&#x80CC;&#x540E;&#x662F;&#x6709;&#x7075;&#x9B42;&#x7684;&#xFF0C;&#x4ED6;&#x6B63;&#x5728;&#x7528;&#x95EA;&#x70C1;&#x4E25;&#x8083;&#x5730;&#x8868;&#x8FBE;&#x7740;&#x81EA;&#x5DF1;&#x3002;&#x6211;&#x6CA1;&#x6709;&#x62CD;&#x7167;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x77E5;&#x9053;&#x8FD9;&#x79CD;&#x7F8E;&#x53EA;&#x6709;&#x6B64;&#x523B;&#x8EAB;&#x4E34;&#x5176;&#x5883;&#x624D;&#x80FD;&#x611F;&#x53D7;&#x5F97;&#x5230;&#xFF0C;&#x7167;&#x7247;&#x8FD8;&#x4E0D;&#x80FD;&#x8FD8;&#x539F;&#x5176;&#x4E07;&#x5206;&#x4E4B;&#x4E00;&#x3002; &#x8FD9;&#x5F20;&#x662F;&#x5927;&#x54E5;&#x7167;&#x7684;&#xFF0C;&#x5DF2;&#x7ECF;&#x975E;&#x5E38;&#x6F02;&#x4EAE;&#x4E86;&#xFF01;&#x8FD9;&#x6B21;&#x5C97;&#x4EC0;&#x5361;&#x4E4B;&#x884C;&#x6700;&#x5927;&#x7684;&#x9057;&#x61BE;&#x662F;&#x6CA1;&#x6709;&#x770B;&#x5230;&#x94F6;&#x6CB3;&#xFF0C;&#x636E;&#x8BF4;&#x4E00;&#x4E24;&#x70B9;&#x51FA;&#x6765;&#x5C31;&#x80FD;&#x770B;&#x5230;&#x3002; &#x5927;&#x5BB6;&#x80CC;&#x4E0A;&#x884C;&#x88C5;&#xFF0C;&#x70B9;&#x4EAE;&#x5934;&#x706F;&#xFF0C;&#x5411;&#x5C71;&#x9876;&#x8FDB;&#x53D1;&#xFF01;&#x8FDC;&#x5904;&#x7684;&#x706F;&#x5149;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x6728;&#x5C4B;&#x3002;&#x867D;&#x7136;&#x6CA1;&#x6709;&#x7761;&#x723D;&#xFF0C;&#x4E2A;&#x4E2A;&#x7761;&#x773C;&#x60FA;&#x5FEA;&#xFF0C;&#x4F46;&#x4E00;&#x7968;&#x4EBA;&#x9A6C;&#x80FD;&#x5728;&#x51CC;&#x6668;&#x56DB;&#x70B9;&#x4E3E;&#x7740;&#x706B;&#x628A;&#x51FA;&#x95E8;&#xFF0C;&#x672C;&#x8EAB;&#x5C31;&#x633A;&#x6709;&#x4EEA;&#x5F0F;&#x611F;&#x7684;&#x3002;&#x6211;&#x60F3;&#x5927;&#x5BB6;&#x6B64;&#x65F6;&#x60F3;&#x6CD5;&#x5E94;&#x8BE5;&#x90FD;&#x5DEE;&#x4E0D;&#x591A;&#x2014;&#x2014;&#x767B;&#x9876;&#xFF01; &#x901A;&#x5F80;&#x5C71;&#x9876;&#x7684;&#x8DEF;&#x7A0B;&#x5206;&#x4E09;&#x6BB5;&#xFF1A;&#x524D;&#x4E09;&#x5206;&#x4E4B;&#x4E00;&#x662F;&#x788E;&#x77F3;&#x8DEF;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x662F;&#x4E24;&#x6BB5;&#x201C;&gt;&#x201D;&#x5B57;&#x5F62;&#x7684;&#x96EA;&#x5761;&#x3002;&#x9ECE;&#x660E;&#x65F6;&#x5206;&#xFF0C;&#x5927;&#x5BB6;&#x5DF2;&#x7ECF;&#x8D70;&#x5B8C;&#x4E09;&#x5206;&#x4E4B;&#x4E00;&#xFF0C;&#x8D8A;&#x8FC7;&#x4E86;&#x96EA;&#x7EBF;&#xFF0C;&#x7A7F;&#x4E0A;&#x51B0;&#x722A;&#x8E0F;&#x5728;&#x96EA;&#x5730;&#x4E0A;&#xFF0C; &#x5934;&#x8FD8;&#x662F;&#x9690;&#x9690;&#x5730;&#x75BC;&#xFF0C;&#x5927;&#x53E3;&#x5598;&#x7740;&#x7C97;&#x6C14;&#xFF0C;&#x4F46;&#x7EC8;&#x4E8E;&#x8E0F;&#x5728;&#x832B;&#x832B;&#x96EA;&#x5730;&#x91CC;&#xFF0C;&#x90A3;&#x80A1;&#x65B0;&#x9C9C;&#x52B2;&#x513F;&#x652F;&#x6491;&#x7740;&#x6211;&#x7EE7;&#x7EED;&#x524D;&#x884C;&#x3002;&#x4F46;&#x662F;&#x6CA1;&#x8D70;&#x591A;&#x8FDC;&#x5C31;&#x611F;&#x89C9;&#x4F53;&#x529B;&#x4E0D;&#x652F;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x7FFB;&#x8FC7;&#x4E00;&#x4E2A;&#x96EA;&#x5761;&#xFF0C;&#x53D1;&#x73B0;&#x540E;&#x9762;&#x8FD8;&#x6709;&#x4E00;&#x5EA7;&#x66F4;&#x5927;&#x7684;&#x96EA;&#x5761;&#x3002;&#x5F00;&#x59CB;&#x4E0D;&#x6562;&#x5F80;&#x524D;&#x770B;&#x4E86;&#xFF0C;&#x611F;&#x89C9;&#x811A;&#x4E0B;&#x7684;&#x51B0;&#x722A;&#x8D8A;&#x6765;&#x8D8A;&#x6C89;&#xFF0C;&#x800C;&#x4E14;&#x6DF1;&#x4E00;&#x811A;&#x6D45;&#x4E00;&#x811A;&#x65F6;&#x4E0D;&#x65F6;&#x9677;&#x5165;&#x96EA;&#x5751;&#x91CC;&#x3002; &#x6559;&#x7EC3;&#x8D35;&#x54E5;&#x4E3A;&#x6211;&#x4EEC;&#x5F00;&#x8DEF;&#xFF0C;&#x5927;&#x5BB6;&#x4E00;&#x5B57;&#x884C;&#x8FDB;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6559;&#x7EC3;&#x7A7F;&#x63D2;&#x5728;&#x961F;&#x4F0D;&#x4E2D;&#x95F4;&#x3002;&#x6559;&#x7EC3;&#x4EEC;&#x90FD;&#x592A;&#x5389;&#x5BB3;&#x4E86;&#xFF0C;&#x4ED6;&#x4EEC;&#x4E0D;&#x7528;&#x767B;&#x5C71;&#x6756;&#xFF0C;&#x6B65;&#x5C65;&#x8F7B;&#x76C8;&#x3002;&#x5E38;&#x5E38;&#x4ECE;&#x961F;&#x9996;&#x8D70;&#x5230;&#x5BF9;&#x5C3E;&#xFF0C;&#x53C8;&#x4ECE;&#x961F;&#x5C3E;&#x8D70;&#x5230;&#x961F;&#x9996;&#x3002;&#x6BCF;&#x5F53;&#x6559;&#x7EC3;&#x4ECE;&#x6211;&#x8EAB;&#x8FB9;&#x8D70;&#x8FC7;&#xFF0C;&#x770B;&#x5230;&#x4ED6;&#x5982;&#x5C65;&#x5E73;&#x5730;&#xFF0C;&#x800C;&#x6211;&#x7684;&#x53CC;&#x817F;&#x50CF;&#x704C;&#x4E86;&#x94C5;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x90FD;&#x8981;&#x4ED4;&#x7EC6;&#x76EF;&#x7740;&#x4ED6;&#x4EEC;&#x770B;&#x534A;&#x5929;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x5FCD;&#x4E0D;&#x4F4F;&#x5730;&#x731C;&#x6D4B;&#x4ED6;&#x4EEC;&#x4E00;&#x5B9A;&#x662F;&#x6709;&#x51CC;&#x6CE2;&#x5FAE;&#x6B65;&#x4E4B;&#x7C7B;&#x7684;&#x8BC0;&#x7A8D;&#x6216;&#x6B65;&#x6CD5;&#x80FD;&#x8BA9;&#x4ED6;&#x4EEC;&#x8D70;&#x5F97;&#x5982;&#x6B64;&#x4E4B;&#x5FEB;&#x3002; &#x6211;&#x4EEC;&#x6559;&#x7EC3;&#x91CC;&#x8FD8;&#x6709;&#x4E00;&#x4F4D;&#x7F8E;&#x5973;&#xFF0C;&#x53EB;&#x6653;&#x6653;&#x3002;&#x5979;&#x4E00;&#x8DEF;&#x4E0A;&#x4E3A;&#x6211;&#x4EEC;&#x62CD;&#x7167;&#x3001;&#x76F4;&#x64AD;&#x89C6;&#x9891;&#x3002;&#x5979;&#x7684;&#x767B;&#x5C71;&#x52A8;&#x4F5C;&#x66F4;&#x662F;&#x98D8;&#x9038;&#x2014;&#x2014;&#x4E00;&#x8DEF;&#x4E0A;&#x4E00;&#x624B;&#x62FF;&#x7740;&#x81EA;&#x62CD;&#x6746;&#x4E0D;&#x505C;&#x91C7;&#x8BBF;&#x3001;&#x76F4;&#x64AD;&#x6BCF;&#x4F4D;&#x961F;&#x5458;&#xFF0C;&#x4E00;&#x624B;&#x62FF;&#x7740;&#x4E00;&#x6839;&#x5C0F;&#x7AF9;&#x7AFF;&#xFF0C;&#x70B9;&#x554A;&#x70B9;&#x5730;&#x5C31;&#x767B;&#x9876;&#x4E86;&#x3002;&#x4E00;&#x8DEF;&#x4E0A;&#x770B;&#x5230;&#x5979;&#x603B;&#x8BA9;&#x6211;&#x60F3;&#x8D77;&#x91D1;&#x5EB8;&#x6B66;&#x4FA0;&#x91CC;&#x7684;&#x7EDD;&#x4E16;&#x9AD8;&#x624B;&#xFF0C;&#x968F;&#x610F;&#x637B;&#x8D77;&#x4E00;&#x6839;&#x67F3;&#x6761;&#x3001;&#x6811;&#x679D;&#x90FD;&#x80FD;&#x800D;&#x51FA;&#x5251;&#x6C14;&#x5982;&#x8679;&#x3002;&#x800C;&#x6211;&#x7B49;&#x624B;&#x4E2D;&#x7684;&#x88C5;&#x5907;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x201C;&#x501A;&#x5929;&#x6756;&#x201D;&#x8FD8;&#x662F;&#x201C;&#x5C60;&#x9F99;&#x6756;&#x201D;&#xFF0C;&#x6B64;&#x523B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x611F;&#x89C9;&#x2014;&#x2014;&#x6C89;&#xFF01; &#x7EC8;&#x4E8E;&#x53EF;&#x4EE5;&#x5750;&#x4E0B;&#x6765;&#x4F11;&#x606F;&#x4E00;&#x4F1A;&#xFF0C;&#x8865;&#x5145;&#x6C34;&#x5206;&#xFF0C;&#x5403;&#x70B9;&#x4E1C;&#x897F;&#x3002;&#x6628;&#x5929;&#x62C9;&#x7EC3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6CA1;&#x8D70;&#x591A;&#x8FDC;&#x6559;&#x7EC3;&#x5C31;&#x4F1A;&#x8BA9;&#x6211;&#x4EEC;&#x4F11;&#x606F;&#xFF0C;&#x4ECA;&#x5929;&#x660E;&#x663E;&#x6BCF;&#x6BB5;&#x884C;&#x519B;&#x957F;&#x5EA6;&#x8981;&#x957F;&#x5F88;&#x591A;&#x3002;&#x7A0D;&#x5FAE;&#x4F11;&#x606F;&#x4E00;&#x4F1A;&#xFF0C;&#x5FC3;&#x8DF3;&#x5F88;&#x5FEB;&#x5C31;&#x80FD;&#x6062;&#x590D;&#xFF0C;&#x53EA;&#x662F;&#x521A;&#x7AD9;&#x8D77;&#x6765;&#x6CA1;&#x8D70;&#x51E0;&#x6B65;&#xFF0C;&#x5C31;&#x53C8;&#x8FDB;&#x5165;&#x4E86;&#x5927;&#x53E3;&#x5598;&#x6C14;&#x7684;&#x72B6;&#x6001;&#x3002; &#x6700;&#x540E;&#x4E09;&#x5206;&#x4E4B;&#x4E00;&#x7684;&#x8DEF;&#x7A0B;&#x5929;&#x5730;&#x90FD;&#x662F;&#x767D;&#x832B;&#x832B;&#x4E00;&#x7247;&#xFF0C;&#x8BDD;&#x660E;&#x663E;&#x5C11;&#x4E86;&#xFF0C;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x53EA;&#x5269;&#x4E0B;&#x6211;&#x7684;&#x547C;&#x5438;&#x58F0;&#xFF0C;&#x4F53;&#x529B;&#x5DF2;&#x7ECF;&#x63A5;&#x8FD1;&#x6781;&#x9650;&#xFF0C;&#x6BCF;&#x632A;&#x52A8;&#x4E00;&#x6B65;&#x90FD;&#x975E;&#x5E38;&#x8270;&#x96BE;&#x3002;&#x4E0D;&#x8FC7;&#x601D;&#x7EF4;&#x53CD;&#x800C;&#x6D3B;&#x8DC3;&#x8D77;&#x6765;&#x3002;&#x767D;&#x5929;&#x6211;&#x66FE;&#x591A;&#x6B21;&#x95EE;&#x6559;&#x7EC3;&#x786E;&#x8BA4;&#xFF0C;&#x6211;&#x7684;&#x72B6;&#x6001;&#x80FD;&#x4E0D;&#x80FD;&#x51B2;&#x9876;&#xFF0C;&#x6559;&#x7EC3;&#x603B;&#x662F;&#x4FE1;&#x5FC3;&#x5341;&#x8DB3;&#x5730;&#x544A;&#x8BC9;&#x6211;&#x2014;&#x2014;&#x6CA1;&#x95EE;&#x9898;&#xFF01; &#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x6B21;&#x51B2;&#x9876;&#x6210;&#x529F;&#x6700;&#x5173;&#x952E;&#x7684;&#x56E0;&#x7D20;&#x6709;&#x4E24;&#x4E2A;&#x2014;&#x2014;&#x548C;&#x6559;&#x7EC3;&#x7ED3;&#x6210;&#x4E86;&#x4FE1;&#x4EFB;&#x5173;&#x7CFB;+&#x81EA;&#x5DF1;&#x7684;&#x610F;&#x5FD7;&#x529B;&#x3002;&#x5F53;&#x7B4B;&#x75B2;&#x529B;&#x5C3D;&#xFF0C;&#x800C;&#x62AC;&#x5934;&#x671B;&#x53BB;&#x5374;&#x8FD8;&#x662F;&#x767D;&#x832B;&#x832B;&#x4E00;&#x7247;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x8111;&#x5B50;&#x91CC;&#x5E38;&#x5E38;&#x54CD;&#x8D77;&#x6559;&#x7EC3;&#x544A;&#x8BC9;&#x6211;&#x7684;&#x201C;&#x6CA1;&#x95EE;&#x9898;&#xFF01;&#x201D;&#x3002;&#x6709;&#x597D;&#x51E0;&#x6B21;&#xFF0C;&#x6211;&#x7684;&#x8EAB;&#x4F53;&#x50CF;&#x5760;&#x5165;&#x4E86;&#x6DF1;&#x6D77;&#x7684;&#x6D77;&#x5E95;&#xFF0C;&#x53EA;&#x80FD;&#x542C;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x547C;&#x5438;&#x58F0;&#xFF0C;&#x5927;&#x8111;&#x4E00;&#x7247;&#x7A7A;&#x767D;&#xFF0C;&#x6211;&#x751A;&#x81F3;&#x90FD;&#x95ED;&#x4E0A;&#x4E86;&#x773C;&#x775B;&#xFF0C;&#x4F46;&#x575A;&#x6301;&#x8BA9;&#x81EA;&#x5DF1;&#x7684;&#x53CC;&#x817F;&#x4FDD;&#x6301;&#x673A;&#x68B0;&#x6027;&#x7684;&#x632A;&#x52A8;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x76F8;&#x4FE1;&#x201C;&#x6CA1;&#x95EE;&#x9898;&#x201D;&#xFF0C;&#x4E00;&#x5B9A;&#x80FD;&#x8D70;&#x5230;&#x5934;&#xFF01; &#x7EC8;&#x4E8E;&#xFF0C;&#x7EC8;&#x4E8E;&#xFF0C;&#x5C71;&#x9876;&#x5C31;&#x5728;&#x773C;&#x524D;&#x4E86;&#xFF01;&#x6211;&#x5370;&#x8C61;&#x6700;&#x6DF1;&#x523B;&#x7684;&#x5C31;&#x662F;&#x6700;&#x540E;&#x90A3;&#x5341;&#x51E0;&#x6B65;&#x2014;&#x2014;&#x540C;&#x4F34;&#x5C31;&#x5728;&#x524D;&#x9762;&#x5341;&#x51E0;&#x6B65;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5927;&#x5BB6;&#x5728;&#x90A3;&#x91CC;&#x6254;&#x4E0B;&#x4E66;&#x5305;&#xFF0C;&#x51C6;&#x5907;&#x767B;&#x9876;&#xFF0C;&#x4ED6;&#x4EEC;&#x5728;&#x671D;&#x6211;&#x62DB;&#x624B;&#x3002;&#x6211;&#x770B;&#x7740;&#x4ED6;&#x4EEC;&#xFF0C;&#x771F;&#x60F3;&#x76F4;&#x63A5;&#x6251;&#x8FC7;&#x53BB;&#xFF0C;&#x8FD9;&#x8981;&#x5728;&#x5E73;&#x65F6;&#xFF0C;&#x51E0;&#x4E2A;&#x7BAD;&#x6B65;&#x51E0;&#x79D2;&#x949F;&#x5C31;&#x80FD;&#x5230;&#x8FBE;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x6211;&#x5374;&#x8981;&#x7528;&#x5C3D;&#x6240;&#x6709;&#x529B;&#x6C14;&#x53BB;&#x4E00;&#x6B65;&#x6B65;&#x5730;&#x632A;&#x52A8;&#x3002;&#x5728;&#x90A3;&#x51E0;&#x5206;&#x949F;&#x91CC;&#xFF0C;&#x6211;&#x8111;&#x5B50;&#x91CC;&#x6D6E;&#x73B0;&#x51FA;&#x597D;&#x591A;&#x201C;&#x5341;&#x51E0;&#x6B65;&#x201D;&#x7684;&#x8DDD;&#x79BB;&#x2014;&#x2014;&#x4ECE;&#x6211;&#x7684;&#x5DE5;&#x4F4D;&#x5230;&#x996E;&#x6C34;&#x673A;&#xFF0C;&#x4ECE;&#x6BCF;&#x5929;&#x7ED9;&#x5973;&#x513F;&#x80CC;&#x4E0A;&#x4E66;&#x5305;&#x5230;&#x770B;&#x5979;&#x4E0A;&#x6821;&#x8F66;&#xFF0C;&#x4ECE;&#x6211;&#x5BB6;&#x51FA;&#x95E8;&#x5230;&#x5355;&#x5143;&#x95E8;&#x53E3;&#x2026;&#x2026;&#x6BCF;&#x5929;&#x6709;&#x8FD9;&#x4E48;&#x591A;&#x6B21;&#x7684;&#x201C;&#x5341;&#x51E0;&#x6B65;&#x201D;&#xFF0C;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x60F3;&#x8FC7;&#x4F1A;&#x6709;&#x8FD9;&#x4E48;&#x8270;&#x96BE;&#x7684;&#x8D70;&#x6CD5;&#x3002;&#x90A3;&#x4E00;&#x523B;&#x7ADF;&#x7531;&#x8877;&#x5730;&#x611F;&#x5230;&#x751F;&#x6D3B;&#x597D;&#x5E78;&#x798F;&#x554A; &#x5728;&#x5C71;&#x9876;&#x4E0B;&#x4F11;&#x606F;&#x4E00;&#x4F1A;&#xFF0C;&#x6062;&#x590D;&#x4E9B;&#x4F53;&#x529B;&#xFF0C;&#x5F00;&#x59CB;&#x51B2;&#x9876;&#xFF01;&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5012;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5174;&#x594B;&#x4E86;&#xFF0C;&#x751A;&#x81F3;&#x89C9;&#x5F97;&#x8FD9;&#x5C71;&#x5DF2;&#x7ECF;&#x722C;&#x5B8C;&#x4E86;&#x3002;&#x6211;&#x60F3;&#x4E00;&#x65B9;&#x9762;&#x662F;&#x56E0;&#x4E3A;&#x5927;&#x5BB6;&#x4F53;&#x529B;&#x5DF2;&#x7ECF;&#x4E25;&#x91CD;&#x900F;&#x652F;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x53EA;&#x80FD;&#x4F4E;&#x7740;&#x5934;&#x6CBF;&#x7740;&#x524D;&#x65B9;&#x7684;&#x811A;&#x5370;&#x7EE7;&#x7EED;&#x8270;&#x96BE;&#x524D;&#x884C;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x62AC;&#x5934;&#x662F;&#x6781;&#x8017;&#x4F53;&#x529B;&#x7684;&#xFF1B;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x4F5C;&#x4E3A;&#x89C2;&#x5149;&#x5BA2;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x6709;&#x8FC7;&#x597D;&#x591A;&#x6B21;&#x201C;&#x767B;&#x9876;&#x201D;&#x7684;&#x7ECF;&#x5386;&#xFF0C;&#x4F3C;&#x4E4E;&#x4E0D;&#x4F1A;&#x6709;&#x4EC0;&#x4E48;&#x610F;&#x5916;&#x5427;&#x3002; &#x771F;&#x5730;&#x767B;&#x5230;&#x4E86;&#x5C71;&#x9876;&#xFF0C;&#x8FD8;&#x662F;&#x6709;&#x633A;&#x5927;&#x610F;&#x5916;&#x7684;&#x3002;&#x4E0D;&#x50CF;&#x65C5;&#x6E38;&#x666F;&#x70B9;&#x90A3;&#x6837;&#x6709;&#x4E00;&#x4E2A;&#x5927;&#x5E73;&#x53F0;&#xFF0C;&#x5C71;&#x9876;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5C71;&#x5C16;&#x5C16;&#x3002;&#x6211;&#x4EEC;&#x80CC;&#x9760;&#x7684;&#x96EA;&#x5761;&#x53E6;&#x4E00;&#x4FA7;&#x5C31;&#x662F;&#x4E07;&#x4E08;&#x60AC;&#x5D16;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x5728;&#x8FD9;&#x4E00;&#x4FA7;&#x659C;&#x5761;&#x4E0A;&#x505C;&#x7559;&#x7247;&#x523B;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x86EE;&#x5E78;&#x8FD0;&#x7684;&#xFF0C;&#x6559;&#x7EC3;&#x8BF4;&#x4ED6;&#x4EEC;&#x4E4B;&#x524D;&#x51E0;&#x6B21;&#x767B;&#x9876;&#x90FD;&#x662F;&#x9634;&#x96E8;&#x5929;&#x6C14;&#x3002;&#x6211;&#x4EEC;&#x4E0A;&#x53BB;&#x7684;&#x65F6;&#x5019;&#x521A;&#x597D;&#x9633;&#x5149;&#x660E;&#x5A9A;&#xFF0C;&#x4E0B;&#x6765;&#x540E;&#x5F88;&#x5FEB;&#x5C31;&#x53D8;&#x5929;&#x4E86;&#x3002;&#x4EFF;&#x4F5B;&#x90A3;&#x62B9;&#x9633;&#x5149;&#x4E13;&#x95E8;&#x4E3A;&#x4E86;&#x6211;&#x4EEC;&#x8FD9;&#x6B21;&#x767B;&#x9876;&#x800C;&#x660E;&#x5A9A;&#x7684;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[超级个体笔记——关于写作]]></title>
    <url>%2F2017%2F05%2F09%2F2017%2F0709Writing1%2F</url>
    <content type="text"><![CDATA[&#x3000;&#x3000;&#x4E00;&#x65E6;&#x517B;&#x6210;&#x4E60;&#x60EF;&#xFF0C;&#x575A;&#x6301;&#x5199;&#x4F5C;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x96BE;&#x4E8B;&#x3002;&#x53EF;&#x4E00;&#x65E6;&#x6482;&#x4E0B;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x56E0;&#x4E3A;&#x5404;&#x79CD;&#x5FD9;&#x800C;&#x6162;&#x6162;&#x6482;&#x4E0B;&#xFF0C;&#x518D;&#x60F3;&#x6361;&#x8D77;&#x6765;&#x5C31;&#x975E;&#x5E38;&#x56F0;&#x96BE;&#x3002;&#x8D81;&#x7740;&#x56DB;&#x6708;&#x4EFD;&#x300A;&#x8D85;&#x7EA7;&#x4E2A;&#x4F53;&#x300B;&#x6709;&#x4E2A;&#x4E13;&#x680F;&#x5C31;&#x662F;&#x8BB2;&#x5199;&#x4F5C;&#xFF0C;&#x5E94;&#x8BE5;&#x628A;&#x8FD9;&#x4E8B;&#x513F;&#x505A;&#x8D77;&#x6765;&#x3002;&#x800C;&#x4E14;&#x8FD1;&#x671F;&#x597D;&#x50CF;&#x8BB2;&#x4E3A;&#x4EC0;&#x4E48;&#x5199;&#x4F5C;&#xFF0C;&#x600E;&#x4E48;&#x5F00;&#x59CB;&#x5199;&#x4F5C;&#x7684;&#x6587;&#x7AE0;&#x624E;&#x5806;&#x6D8C;&#x73B0;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x628A;&#x597D;&#x7684;&#x5FC3;&#x5F97;&#x603B;&#x7ED3;&#x4E0B;&#x6765;&#xFF0C;&#x4EE5;&#x4FBF;&#x5BF9;&#x7167;&#x6267;&#x884C;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5199;&#x4F5C;&#xFF1F; &#x81EA;&#x6211;&#x8868;&#x8FBE; &gt; &#x4EBA;&#x5E76;&#x4E0D;&#x662F;&#x7A81;&#x7136;&#x6B7B;&#x53BB;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x6162;&#x6162;&#x6B7B;&#x53BB;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x6D3B;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x8BB0;&#x5FC6;&#x4E2D;&#xFF0C;&#x800C;&#x5F53;&#x8FD9;&#x4E9B;&#x8BB0;&#x5FC6;&#x4E00;&#x70B9;&#x70B9;&#x6D88;&#x5931;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5728;&#x4E00;&#x70B9;&#x70B9;&#x6B7B;&#x4EA1;&#x3002; &gt; &#x2014;&#x2014;&#x7C73;&#x5170;&#x6606;&#x5FB7;&#x62C9; &#x4F46;&#x8BB0;&#x5FC6;&#x662F;&#x4E0D;&#x53EF;&#x9760;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x8BB0;&#x5F55;&#x4F60;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x4F60;&#x5C31;&#x5728;&#x4E00;&#x70B9;&#x70B9;&#x6B7B;&#x53BB;&#x3002; &#x5347;&#x7EA7;&#x601D;&#x7EF4;&#x7684;&#x65B9;&#x5F0F; &#x4EBA;&#x7C7B;&#x8BED;&#x8A00;&#x662F;&#x7EBF;&#x6027;&#x7684;&#xFF0C;&#x8BED;&#x8A00;&#x8BB2;&#x5B8C;&#x5C31;&#x6D88;&#x6563;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x5728;5&#x79D2;&#x949F;&#x5185;&#x903B;&#x8F91;&#x81EA;&#x6D3D;&#x3002;&#x4F46;&#x5199;&#x4F5C;&#x4E0D;&#x662F;&#xFF0C;&#x4F60;&#x8FD9;&#x4E00;&#x884C;&#x5B57;&#x53EF;&#x80FD;&#x8DDF;&#x524D;&#x9762;&#x4E94;&#x516D;&#x884C;&#x5B57;&#x5C31;&#x6709;&#x903B;&#x8F91;&#x4E0A;&#x7684;&#x51B2;&#x7A81;&#xFF0C;&#x4F60;&#x8FD9;&#x4E00;&#x6BB5;&#x5185;&#x5BB9;&#x53EF;&#x80FD;&#x5C31;&#x8DDF;&#x524D;&#x9762;&#x4E00;&#x6BB5;&#x6709;&#x91CD;&#x590D;&#x3002;&#x5982;&#x679C;&#x8BF4;&#x8BED;&#x8A00;&#x662F;&#x4E00;&#x7EF4;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x6587;&#x5B57;&#x5C31;&#x662F;&#x4E8C;&#x7EF4;&#x7684;&#x3002;&#x5728;&#x6587;&#x5B57;&#x4E0A;&#x4F60;&#x6709;&#x673A;&#x4F1A;&#x4EE5;&#x4E00;&#x79CD;&#x4E8C;&#x7EF4;&#x7684;&#x65B9;&#x5F0F;&#x53BB;&#x89C2;&#x5BDF;&#x4F60;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x4F60;&#x601D;&#x60F3;&#x7684;&#x4E00;&#x4E2A;&#x5347;&#x7EA7;&#x3002; &#x4F20;&#x64AD;&#x4E2A;&#x4EBA;&#x5F71;&#x54CD;&#x529B;&#x7684;&#x6700;&#x597D;&#x65B9;&#x5F0F; &#x4E09;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x5199;&#x4F5C;&#x65B9;&#x5F0F;&#xFF1A; &#x4E3A;&#x81EA;&#x6211;&#x8868;&#x8FBE;&#x800C;&#x5199;&#x4F5C; &#x4E3A;&#x8BB0;&#x5F55;&#x800C;&#x5199;&#x4F5C; &#x4E3A;&#x5F71;&#x54CD;&#x548C;&#x4F20;&#x64AD;&#x800C;&#x5199;&#x4F5C; &#x521D;&#x5B66;&#x5199;&#x4F5C;&#x7684;&#x6700;&#x5927;&#x8BEF;&#x533A;&#x2014;&#x2014;&#x7528;&#x9519;&#x6587;&#x4F53; &#x7528;&#x201C;&#x81EA;&#x6211;&#x8868;&#x8FBE;&#x201D;&#x7684;&#x65B9;&#x5F0F;&#x5199;&#x201C;&#x4F20;&#x9012;&#x89C2;&#x70B9;&#x201D;&#x7684;&#x6587;&#x7AE0;&#xFF1B; &#x7528;&#x8BB0;&#x5F55;&#x4F53;&#x7684;&#x65B9;&#x5F0F;&#x5199;&#x6BCF;&#x5929;&#x5E72;&#x4E86;&#x4EC0;&#x4E48;&#xFF1B; &#x4E00;&#x4E0A;&#x6765;&#x5C31;&#x8981;&#x201C;&#x5F71;&#x54CD;&#x5F0F;&#x7684;&#x5199;&#x4F5C;&#x201D;&#x3002; &#x65B0;&#x624B;&#x6700;&#x597D;&#x7684;&#x8FDB;&#x9636;&#x4E4B;&#x8DEF; &#x5C3D;&#x5FEB;&#x5F00;&#x59CB;&#x8BB0;&#x5F55;&#x81EA;&#x5DF1;&#x7684;&#x751F;&#x6D3B;&#xFF0C;&#x63D0;&#x9AD8;&#x81EA;&#x6211;&#x89C2;&#x5BDF;&#x548C;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#xFF1B; &#x5728;&#x5DE5;&#x4F5C;&#x4E2D;&#x5927;&#x91CF;&#x4F7F;&#x7528;&#x8BB0;&#x5F55;&#x548C;&#x6587;&#x6863;&#x578B;&#x5199;&#x4F5C;&#xFF0C;&#x63D0;&#x9AD8;&#x81EA;&#x5DF1;&#x7684;&#x601D;&#x7EF4;&#x6DF1;&#x5EA6;&#x3002; &#x8FD9;&#x4E24;&#x9879;&#x662F;&#x601D;&#x60F3;&#x7684;&#x50AC;&#x4EA7;&#x5A46;&#xFF0C;&#x6709;&#x4E00;&#x5929;&#x4F60;&#x771F;&#x7684;&#x6709;&#x601D;&#x60F3;&#x4E0D;&#x5410;&#x4E0D;&#x5FEB;&#xFF0C;&#x81EA;&#x7136;&#x4F1A;&#x5F00;&#x59CB;&#x5F71;&#x54CD;&#x5F0F;&#x7684;&#x5199;&#x4F5C;&#x3002; &#x201C;&#x4E94;&#x95EE;&#x201D;&#x50AC;&#x4EA7;&#x5199;&#x4F5C; &#x6700;&#x8FD1;&#x6709;&#x7279;&#x522B;&#x60F3;&#x5206;&#x4EAB;&#x7ED9;&#x522B;&#x4EBA;&#x7684;&#x4E8B;&#x513F;&#xFF0C;&#x6216;&#x8005;&#x89C2;&#x70B9;&#x5417;&#xFF1F; &#x8FD9;&#x4E2A;&#x89C2;&#x70B9;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;&#x8BA9;&#x4F60;&#x89C9;&#x5F97;&#x6709;&#x4EF7;&#x503C;&#xFF1F; &#x77E5;&#x9053;&#x4E86;&#x8FD9;&#x4E2A;&#x89C2;&#x70B9;&#xFF0C;&#x6709;&#x54EA;&#x4E9B;&#x89C2;&#x5FF5;&#x662F;&#x9700;&#x8981;&#x786E;&#x8BA4;&#x7684;&#xFF1F; &#x5373;&#x652F;&#x6491;&#x8FD9;&#x4E2A;&#x89C2;&#x70B9;&#x7684;&#x5B50;&#x89C2;&#x70B9;&#xFF0C;&#x5B50;&#x89C2;&#x70B9;&#x4E0D;&#x8981;&#x592A;&#x591A;&#xFF0C;&#x4E09;&#x4E94;&#x4E2A;&#x5C31;&#x662F;&#x6781;&#x9650;&#x4E86;&#x3002;&#x89E3;&#x91CA;&#x597D;&#x4E00;&#x4E2A;&#x89C2;&#x70B9;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x5E38;&#x7528;&#x65B9;&#x5F0F;&#xFF1A;&#x4E3E;&#x4F8B;&#x5B50;&#x548C;&#x505A;&#x7C7B;&#x6BD4;&#x3002; &#x5982;&#x679C;&#x63A5;&#x53D7;&#x8FD9;&#x4E2A;&#x89C2;&#x70B9;&#xFF0C;&#x8BE5;&#x5982;&#x4F55;&#x53BB;&#x505A;&#xFF1F; &#x4F60;&#x7684;&#x89C2;&#x70B9;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x56DE;&#x7B54;&#x8FD9;&#x4E94;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6BCF;&#x4E2A;&#x95EE;&#x9898;&#x7528;100&#x5B57;&#xFF0C;&#x7A0D;&#x52A0;&#x7F16;&#x64B0;&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x3002; &#x201C;&#x4E09;&#x6539;&#x201D;&#x6253;&#x78E8;&#x5199;&#x4F5C; &#x6539;&#x6389;&#x7528;&#x8BCD;&#x9519;&#x8BEF;&#x3001;&#x8BCD;&#x4E0D;&#x8FBE;&#x610F;&#x3001;&#x6BB5;&#x843D;&#x592A;&#x957F;&#x6216;&#x592A;&#x77ED;&#x5F71;&#x54CD;&#x7ED3;&#x6784;&#x3002;&#x76EE;&#x7684;&#x662F;&#x201C;&#x4FE1;&#x201D;&#x2014;&#x2014;&#x51C6;&#x786E;&#x8868;&#x8FBE;&#x4F60;&#x7684;&#x610F;&#x601D;&#x3002; &#x653E;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x8131;&#x79BB;&#x4F5C;&#x8005;&#x8EAB;&#x4EFD;&#xFF0C;&#x56DE;&#x5230;&#x8BFB;&#x8005;&#x89D2;&#x5EA6;&#x518D;&#x6765;&#x8BFB;&#x3002;&#x627E;&#x51FA;&#x6587;&#x6C14;&#x4E0D;&#x901A;&#xFF0C;&#x8868;&#x8FBE;&#x96BE;&#x5EA6;&#x9AD8;&#x4F4E;&#x4E0D;&#x4E00;&#xFF0C;&#x6709;&#x4E9B;&#x8BF4;&#x5F97;&#x592A;&#x591A;&#xFF0C;&#x5176;&#x5B9E;&#x6CA1;&#x4EC0;&#x4E48;&#x7528;&#xFF1B;&#x6709;&#x4E9B;&#x8BF4;&#x5F97;&#x4E0D;&#x591F;&#x3002;&#x8FD9;&#x4E00;&#x6539;&#x7684;&#x76EE;&#x7684;&#x662F;&#x201C;&#x8FBE;&#x201D;&#x2014;&#x2014;&#x8FD9;&#x4E9B;&#x4E1C;&#x897F;&#x6709;&#x6CA1;&#x6709;&#x80FD;&#x591F;&#x4F20;&#x8FBE;&#x3002; &#x7ED9;&#x6587;&#x7AE0;&#x6392;&#x7248;&#x52A0;&#x7C97;&#xFF0C;&#x7ED9;&#x4E00;&#x4E9B;&#x8BCD;&#x6DA6;&#x8272;&#xFF0C;&#x653E;&#x5927;&#x6216;&#x51CF;&#x5C11;&#x4E00;&#x4E9B;&#x60C5;&#x7EEA;&#x70B9;&#xFF0C;&#x914D;&#x56FE;&#x3002;&#x8FD9;&#x4E00;&#x6539;&#x7684;&#x76EE;&#x7684;&#x662F;&#x201C;&#x96C5;&#x201D;&#x2014;&#x2014;&#x6709;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x9AD8;&#x7EA7;&#x7684;&#x8868;&#x8FBE;&#xFF1F;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>超级个体笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[libGooglePinyin（一）构建词库]]></title>
    <url>%2F2017%2F04%2F16%2F2017%2F0416libGooglePinyin01%2F</url>
    <content type="text"><![CDATA[Fork&#x4E86;&#x4E00;&#x4EFD;libGooglePinyin&#xFF0C;&#x5E76;&#x5728;&#x6B64;&#x57FA;&#x7840;&#x4E0A;&#x7A0D;&#x4F5C;&#x4FEE;&#x6539;&#xFF0C;&#x4EE5;&#x4FBF;&#x80FD;&#x8DD1;&#x8D77;&#x6765;&#x3002;&#x5F00;&#x6E90;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x65B9;&#x4FBF;&#x8BA8;&#x8BBA;&#xFF0C;&#x5E76;&#x4EE5;&#x6B64;&#x4E3A;&#x5207;&#x5165;&#x70B9;&#x7814;&#x7A76;&#x8F93;&#x5165;&#x6CD5;&#x5F15;&#x64CE;&#x5F53;&#x4E2D;&#xFF0C;&#x89E3;&#x51B3;&#x5177;&#x4F53;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x6CD5;&#x3002;libGooglePinyin&#x7684;&#x672C;&#x5C0A;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x5728;Github&#x4E0A;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x62F7;&#x8D1D;&#x3002; &#x672C;&#x6587;&#x8BA8;&#x8BBA;libGooglePinyin&#x6784;&#x5EFA;&#x8BCD;&#x5E93;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4EE5;&#x53CA;&#x8BCD;&#x5E93;&#x683C;&#x5F0F;&#x3002;&#x7531;&#x4E8E;&#x5BF9;&#x4EE3;&#x7801;&#x505A;&#x4E86;&#x4E00;&#x4E9B;&#x6539;&#x52A8;&#xFF0C;&#x6211;&#x5C31;&#x4EE5;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#x6811;&#x4E3A;&#x6807;&#x51C6;&#x6765;&#x8BA8;&#x8BBA;&#x3002; &#x8BCD;&#x5E93;&#x7684;&#x6784;&#x5EFA;&#x4EE3;&#x7801;&#x5728;tools/pinyinime_dictbuilder.cpp&#xFF0C;&#x751F;&#x6210;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;dictbuilder.exe&#xFF0C;&#x8C03;&#x7528;&#x683C;&#x5F0F;&#x4E3A;&#xFF1A; dictbuilder.exe &lt;rawdict_utf16_65105_freq.txt&#x7684;&#x8DEF;&#x5F84;&gt; &lt;valid_utf16.txt&#x7684;&#x8DEF;&#x5F84;&gt; &lt;&#x7CFB;&#x7EDF;&#x8BCD;&#x5E93;dict_pinyin.dat&#x7684;&#x751F;&#x6210;&#x8DEF;&#x5F84;&gt; main&#x51FD;&#x6570;&#x7684;&#x4EE3;&#x7801;&#x5F88;&#x7B80;&#x5355;&#xFF1A; 12345678910111213// tools/pinyinime_dictbuilder.cppint main(int argc, char* argv[]) { DictTrie* dict_trie = new DictTrie(); ... // &#x1F3C1;Step1 success = dict_trie-&gt;build_dict(&quot;../data/rawdict_utf16_65105_freq.txt&quot;, &quot;../data/valid_utf16.txt&quot;); ... // &#x1F3C1;Step3 success = dict_trie-&gt;save_dict(&quot;dict_pinyin.dat&quot;); ... return 0;} &#x6587;&#x4EF6;rawdict_utf16_65105_freq.txt&#x662F;&#x8BCD;&#x5E93;&#x7684;&#x6587;&#x672C;&#x5F62;&#x5F0F;&#xFF1B; &#x6587;&#x4EF6;valid_utf16.txt&#x5B58;&#x653E;&#x6240;&#x6709;&#x5408;&#x6CD5;&#x7684;&#x6C49;&#x5B57;&#x3002; Step1 DictTrie::build_dict(...) 1234567bool DictTrie::build_dict(const char* fn_raw, const char* fn_validhzs) { DictBuilder* dict_builder = new DictBuilder(); free_resource(true); return dict_builder-&gt;build_dict(fn_raw, fn_validhzs, this); // &#x1F3C1;Step2} Step2 DictBuilder::build_dict(...) 12345678910// src/dictbuilder.cppbool DictBuilder::build_dict(const char *fn_raw, const char *fn_validhzs, DictTrie *dict_trie) { ... // &#x8BFB;&#x51FA;&#x539F;&#x59CB;&#x6570;&#x636E;&#xFF0C;&#x5F62;&#x6210;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A; // 1. lemma_arr_&#x6570;&#x7EC4;&#xFF0C;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5B58;&#x653E;&#x8BCD;&#x3001;&#x8BCD;&#x9891;&#x3001;&#x62FC;&#x97F3;&#x4E32; // 2. raw_spellings_&#x54C8;&#x5E0C;&#x8868;&#xFF0C;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5B58;&#x653E;&#x4E00;&#x4E2A;&#x97F3;&#x8282;&#x3001;&#x97F3;&#x9891;&#xFF08;&#x6240;&#x6709;&#x5305;&#x542B;&#x8BE5;&#x97F3;&#x7684;&#x8BCD;&#x9891;&#x603B;&#x548C;&#xFF09; lemma_num_ = read_raw_dict(fn_raw, fn_validhzs, 240000); ... &#x6570;&#x636E;&#x7ED3;&#x6784;lemma_arr_&#x662F;&#x4ECE;rawdict_utf16_65105_freq.txt&#x8BFB;&#x51FA;&#x7CFB;&#x7EDF;&#x8BCD;&#x5E93;&#x5E76;&#x7EC4;&#x7EC7;&#x6210;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x662F;&#x4E00;&#x4E2A;LemmaEntry&#x7ED3;&#x6784;&#x4F53;&#xFF1A; &#x5728;&#x89E3;&#x6790;&#x62FC;&#x97F3;&#x4E32;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x5B83;&#x7528;&#x54C8;&#x5E0C;&#x8868;raw_spellings_&#x6784;&#x5EFA;&#x4E86;&#x4E00;&#x5F20;&#x62FC;&#x97F3;&#x8868;&#xFF0C;&#x5177;&#x4F53;&#x8FC7;&#x7A0B;&#x5728;Step4&#x4E2D;&#x5206;&#x6790;&#x3002;&#x5176;&#x6709;&#x6548;&#x5143;&#x7D20;&#x5373;&#x5408;&#x6CD5;&#x7684;&#x97F3;&#x8282;&#x5B57;&#x4E32;&#x4E2A;&#x6570;413&#xFF0C;&#x8FD9;&#x5F20;&#x54C8;&#x5E0C;&#x8868;&#x7684;&#x7A7A;&#x95F4;&#x8FDC;&#x6BD4;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x5927;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E2A;&#x7EC6;&#x8282;&#x5E76;&#x4E0D;&#x91CD;&#x8981;&#xFF1A; 1234567891011// Arrange the spelling table, and build a spelling tree// The size of an spelling. &apos;\0&apos; is included. If the spelling table is// initialized to calculate the spelling scores, the last char in the// spelling string will be score, and it is also included in spl_item_size.size_t spl_item_size;size_t spl_num;const char* spl_buf;// &#x5C06;&#x5408;&#x6CD5;&#x97F3;&#x8282;&#x6309;&#x987A;&#x5E8F;&#x4FDD;&#x5B58;&#x5230;spl_table_-&gt;spelling_buf_&#x4E2D;&#xFF0C;// &#x8FD4;&#x56DE;&#x503C;spl_buf&#x6307;&#x5411;&#x8BE5;&#x6210;&#x5458;spl_buf = spl_table_-&gt;arrange(&amp;spl_item_size, &amp;spl_num);... &#x8BE5;&#x51FD;&#x6570;&#x5C06;spl_table_-&gt;raw_spellings_&#x4E2D;&#x7684;&#x97F3;&#x8282;&#x4E32;&#x6309;&#x7167;&#x987A;&#x5E8F;&#xFF0C;&#x6392;&#x5217;&#x5230;spelling_buf_&#x4E2D;&#x3002;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5305;&#x542B;&#xFF1A;&#x97F3;&#x8282;&#x62FC;&#x97F3;&#x4E32; &#x548C; &#x97F3;&#x8282;&#x97F3;&#x9891;&#xFF0C;&#x524D;&#x8005;&#x5360;7&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x4EE5;&apos;&apos;&#x7ED3;&#x5C3E;&#xFF1B;&#x540E;&#x8005;&#x5360;1&#x4E2A;&#x5B57;&#x8282;&#x3002;&#x5171;413&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; spl_table_-&gt;arrange&#x8FD4;&#x56DE;&#x7684;spl_buf&#x5373;spl_table_-&gt;spelling_buf_&#xFF0C;&#x7EE7;&#x7EED;&#x88AB;&#x4F20;&#x5165;spl_trie.construct&#x4E2D;&#xFF1A; 123456SpellingTrie &amp;spl_trie = SpellingTrie::get_instance();// &#x628A;&#x6240;&#x6709;&#x5408;&#x6CD5;&#x97F3;&#x8282;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x4E2A;Trie&#x6811;if (!spl_trie.construct(spl_buf, spl_item_size, spl_num, spl_table_-&gt;get_score_amplifier(), spl_table_-&gt;get_average_score())) {...} &#x5728;spl_trie.construct(...)&#x4E2D;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6BD4;&#x8F83;&#x591A;&#xFF1A; &#x5B83;&#x4ECE;&#x53C2;&#x6570;spl_buf&#x4E2D;&#x62F7;&#x8D1D;&#x4E86;&#x4E00;&#x4EFD;spelling_buf &#x4E3A;&#x6240;&#x6709;&#x5408;&#x6CD5;&#x7684;&#x97F3;&#x8282;&#x4E32;&#x751F;&#x6210;Trie&#x6811;&#xFF0C;&#x8BE5;&#x6811;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; &#x5B9E;&#x9645;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; &#x6765;&#x770B;spelling_idx&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x5F53;&#x5B83;&#x5C0F;&#x4E8E;30&#xFF0C;&#x8868;&#x793A;&#x5B83;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;half&#x97F3;&#x8282;&#xFF1B;&#x5982;&#x679C;&#x5927;&#x4E8E;30&#xFF0C;&#x8868;&#x793A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;full&#x97F3;&#x8282;&#xFF0C;&#x8BE5;&#x503C;&#x5373;&#x6B64;&#x97F3;&#x8282;&#x5728;spelling_buf_&#x4E2D;&#x7684;&#x504F;&#x79FB;&#x3002; half&#x97F3;&#x8282;&#x662F;&#x6307;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x97F3;&#x8282;&#x9996;&#x90E8;&#x7684;&#x62FC;&#x97F3;&#x4E32;&#xFF0C;&#x5305;&#x62EC;&#x58F0;&#x6BCD;&#xFF08;&#x5982;b&#x3001;p&#x3001;m&#xFF0C;&#x53CC;&#x58F0;&#x6BCD;zh&#x3001;ch&#x3001;sh&#xFF09;&#x548C;&#x53EF;&#x72EC;&#x7ACB;&#x51FA;&#x73B0;&#x7684;&#x97F5;&#x6BCD;&#xFF08;&#x5982;a&#x3001;o&#x3001;e&#xFF09;&#x3002; &#x8BE5;&#x6BB5;&#x4EE3;&#x7801;&#x8FD8;&#x751F;&#x6210;&#x4E86;SpellingTrie::h2f_start_&#x548C;SpellingTrie::h2f_num_&#xFF1A;&#x8FD9;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8981;&#x7ED3;&#x5408;&#x97F3;&#x8282;&#x5B57;&#x5178;&#x6811;&#x548C;spelling_buf_&#x4E00;&#x8D77;&#x6765;&#x770B;&#x3002; &#x8BE5;&#x4EE3;&#x7801;&#x8FD8;&#x751F;&#x6210;&#x4E86;SpellingTrie::f2h_&#xFF1A;&#x8BE5;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7528;&#x4E8E;&#x4ECE;full&#x5230;half&#x7684;&#x5BF9;&#x5E94;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x628A;&#x76F8;&#x5173;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x5408;&#x6765;&#x770B;&#x3002; &#x8BE5;&#x4EE3;&#x7801;&#x8FD8;&#x751F;&#x6210;&#x4E86;SpellingTrie::ym_buf_&#x548C;SpellingTrie::spl_ym_ids&#x524D;&#x8005;&#x662F;&#x97F5;&#x6BCD;&#x8868;&#xFF0C;&#x540E;&#x8005;&#x5219;&#x662F;&#x97F3;&#x8282;&#x5230;&#x97F5;&#x6BCD;&#x7684;&#x5173;&#x7CFB;&#xFF1A;&#xFF0C;&#x5176;&#x4E2D;spl_id&amp;spl_str&#x8FD9;&#x5F20;&#x8868;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x7269;&#x7406;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x5F20;&#x8868;&#x7684;&#x8F6C;&#x6362;&#x5173;&#x7CFB;&#x662F;&#x5728;&#x51FD;&#x6570;SpellingTrie::get_spelling_str(...)&#x4E2D;&#x4F53;&#x73B0;&#x7684;&#x3002; 123456789101112131415161718192021222324// &#x586B;&#x5145;lemma_arr_&#x6570;&#x7EC4;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x7684;spl_idx_arr&#x9879;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x6C49;&#x5B57;&#x7684;&#x97F3;&#x5BF9;&#x5E94;&#x7684;spl_idfor (size_t i = 0; i &lt; lemma_num_; i++) { for (size_t hz_pos = 0; hz_pos &lt; (size_t)lemma_arr_[i].hz_str_len; hz_pos++) { uint16 spl_idxs[2]; uint16 spl_start_pos[3]; bool is_pre = true; int spl_idx_num = spl_parser_-&gt;splstr_to_idxs(lemma_arr_[i].pinyin_str[hz_pos], strlen(lemma_arr_[i].pinyin_str[hz_pos]), spl_idxs, spl_start_pos, 2, is_pre); assert(1 == spl_idx_num); if (spl_trie.is_half_id(spl_idxs[0])) { uint16 num = spl_trie.half_to_full(spl_idxs[0], spl_idxs); assert(0 != num); } lemma_arr_[i].spl_idx_arr[hz_pos] = spl_idxs[0]; }}// &#x6309;&#x7167;&#x6C49;&#x5B57;&#x4E32;&#x6392;&#x5E8F;&#xFF0C;&#x66F4;&#x65B0;idx_by_hz&#x5B57;&#x6BB5;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E2A;&#x8BCD;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x552F;&#x4E00;idsort_lemmas_by_hz();// &#x6784;&#x5EFA;&#x5355;&#x5B57;&#x8868;&#x5230;scis_&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8BE5;&#x5355;&#x5B57;&#x8868;&#x66F4;&#x65B0;lemma_arr_&#x4E2D;&#x7684;hanzi_scis_ids&#x5B57;&#x6BB5;scis_num_ = build_scis(); for&#x5FAA;&#x73AF;&#x5219;&#x904D;&#x5386;lemma_arr_&#x6570;&#x7EC4;&#xFF0C;&#x66F4;&#x65B0;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x7684;spl_idx_arr&#x5B57;&#x6BB5;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x8BE5;&#x8BCD;&#x7684;&#x6BCF;&#x4E2A;&#x5B57;&#x97F3;&#x5BF9;&#x5E94;&#x7684;spl_id&#x3002; sort_lemmas_by_hz()&#x5219;&#x6309;&#x7167;&#x6C49;&#x5B57;&#x4E32;&#x5BF9;lemma_arr_&#x6392;&#x5E8F;&#xFF0C;&#x66F4;&#x65B0;idx_by_hz&#x5B57;&#x6BB5;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E2A;&#x8BCD;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x552F;&#x4E00;id&#x3002; scis&#x662F;SingleCharItems&#x7684;&#x7B80;&#x5199;&#xFF0C;build_scis()&#x521B;&#x5EFA;&#x4E86;&#x5355;&#x5B57;&#x8868;&#xFF0C;&#x5E76;&#x518D;&#x6B21;&#x66F4;&#x65B0;lemma_arr_::hanzi_scis_ids&#x5B57;&#x6BB5;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x662F;&#x6BCF;&#x4E2A;&#x8BCD;&#x7684;&#x6BCF;&#x4E2A;&#x6C49;&#x5B57;&#x5728;&#x5355;&#x5B57;&#x8868;&#x4E2D;&#x7684;&#x5E8F;&#x53F7;&#x3002;&#x5355;&#x5B57;&#x8868;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; &#x66F4;&#x65B0;&#x540E;&#x7684;lemma_arr_&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12345678// Construct the dict listdict_trie-&gt;dict_list_ = new DictList();// &#x5C06;&#x5355;&#x5B57;&#x5E8F;&#x5217;&#x5316;&#x5230;scis_hz_&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E00;&#x4E2A;&#x5355;&#x5B57;&#xFF1B;// &#x5C06;&#x8BE5;&#x5355;&#x5B57;&#x5BF9;&#x5E94;&#x7684;splid&#x5E8F;&#x5217;&#x5316;&#x5230;scis_splid_&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E00;&#x4E2A;SpellingId&#xFF1B;// &#x5C06;&#x6240;&#x6709;&#x7684;&#x8BCD;&#x5E8F;&#x5217;&#x5316;&#x5230;buf_&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x662F;&#x53D8;&#x957F;&#x7684;&#x8BCD;&#x4E32;bool dl_success = dict_trie-&gt;dict_list_-&gt;init_list(scis_, scis_num_, lemma_arr_, lemma_num_);assert(dl_success); dict_trie-&gt;dict_list_-&gt;init_list(...)&#x51FD;&#x6570;&#x5C06;&#x5355;&#x5B57;&#x8868;&#x62C6;&#x6210;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#xFF1A; &#x5B83;&#x628A;&#x7CFB;&#x7EDF;&#x8BCD;&#x5E93;&#x91CC;&#x6240;&#x6709;&#x6C49;&#x5B57;&#x4E32;&#x6210;&#x4E00;&#x4E2A;&#x603B;&#x4E32;&#x4FDD;&#x5B58;&#x5230;DictList::buf_&#x4E2D;&#xFF0C;&#x7528;DictList::start_pos_&#x5206;&#x522B;&#x6307;&#x5411;1&#x5B57;&#x8BCD;&#x3001;2&#x5B57;&#x8BCD;&#x2026;&#x2026;9&#x5B57;&#x8BCD;&#x7684;&#x8D77;&#x70B9;&#xFF0C;&#x7528;DictList::start_id_&#x6307;&#x5411;1&#x5B57;&#x8BCD;&#x3001;2&#x5B57;&#x8BCD;&#x2026;&#x2026;9&#x5B57;&#x8BCD;&#x5728;lemma_arr_&#x4E2D;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#xFF1A; 1234// &#x1F3C1;Step9 &#x5C06;&#x8BCD;&#x9891;&#x6570;&#x636E;&#x5F52;&#x62E2;&#x5230;256&#x4E2A;&#x503C;NGram&amp; ngram = NGram::get_instance();ngram.build_unigram(lemma_arr_, lemma_num_, lemma_arr_[lemma_num_ - 1].idx_by_hz + 1); &#x5B83;&#x751F;&#x6210;NGram::lma_freq_idx_&#x3001;NGram::freq_codes_df_&#x3001;NGram::freq_codes_&#x4E09;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x5176;&#x4E2D;NGram::freq_codes_df_&#x5C06;&#x7CFB;&#x7EDF;&#x8BCD;&#x5E93;&#x91CC;&#x6BCF;&#x4E2A;&#x8BCD;&#x6761;&#x7684;&#x8BCD;&#x9891;&#x5F52;&#x62E2;&#x6210;256&#x4E2A;&#x503C;&#xFF0C;&#x5E76;&#x7ECF;&#x8FC7;&#x591A;&#x4F26;&#x8FED;&#x4EE3;&#x6C42;&#x5747;&#x503C;&#xFF0C;&#x8BA9;&#x8FD9;256&#x4E2A;&#x5F52;&#x62E2;&#x503C;&#x5C3D;&#x91CF;&#x63A5;&#x8FD1;&#x88AB;&#x5F52;&#x62E2;&#x7684;&#x539F;&#x59CB;&#x503C;&#xFF1B;NGram::lma_freq_idx_&#x5219;&#x8BB0;&#x5F55;&#x539F;&#x59CB;&#x8BCD;&#x9891;&#x4E0E;&#x5F52;&#x62E2;&#x8BCD;&#x9891;&#x4E4B;&#x95F4;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#xFF1A; 12345678910111213141516 // sort the lemma items according to the spelling idx string myqsort(lemma_arr_, lemma_num_, sizeof(LemmaEntry), compare_py); get_top_lemmas(); // &#x53D6;&#x51FA;&#x8BCD;&#x9891;&#x6700;&#x5927;&#x7684;top_lmas_num_&#x4E2A;LemmaEntry&#xFF0C;&#x7531;&#x5927;&#x5230;&#x5C0F;&#x6392;&#x5230;top_lmas_&#x4E2D;#ifdef ___DO_STATISTICS___ stat_init();#endif lma_nds_used_num_le0_ = 1; // The root node bool dt_success = construct_subset(static_cast&lt;void*&gt;(lma_nodes_le0_), lemma_arr_, 0, lemma_num_, 0); if (!dt_success) { free_resource(); return false; } &#x51FD;&#x6570;construct_subset(...)&#x4E3B;&#x8981;&#x751F;&#x6210;&#x4E86;lema_nodes_le0&#x3001;lema_nodes_ge1&#x548C;homo_idx_buf_&#x4E09;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8FD9;&#x4E09;&#x5768;&#x6570;&#x636E;&#x4E5F;&#x9700;&#x8981;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x89E3;&#x8BFB;&#xFF0C;&#x5B83;&#x4EEC;&#x5171;&#x540C;&#x628A;&#x7CFB;&#x7EDF;&#x8BCD;&#x5E93;&#x6309;&#x7167;&#x8BFB;&#x97F3;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x4E2A;Trie&#x6811;&#x3002;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; &#x9996;&#x5148;&#x628A;lemma_arr_&#x6309;&#x7167;&#x62FC;&#x97F3;&#x6392;&#x5E8F;&#xFF0C;&#x5C06;&#x5176;idx_by_hz&#x62BD;&#x53D6;&#x51FA;&#x6765;&#x5B58;&#x50A8;&#x5230;homo_idx_buf_&#x4E2D;&#x3002; lema_nodes_le0&#x548C;lema_nodes_ge1&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x662F;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x51FA;&#x4E8E;&#x7A7A;&#x95F4;&#x5F00;&#x9500;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x524D;&#x8005;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5360;&#x7528;16&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x540E;&#x8005;&#x4EC5;&#x5360;&#x7528;8&#x4E2A;&#x5B57;&#x8282;&#x3002; lema_nodes_le0&#x7684;&#x9996;&#x4E2A;&#x5143;&#x7D20;&#x8BB0;&#x5F55;Trie&#x6811;&#x7B2C;0&#x5C42;&#x4FE1;&#x606F;&#x3002;&#x5B57;&#x6BB5;son_1st_off&#x8868;&#x793A;&#x7B2C;&#x4E00;&#x4E2A;&#x5B50;&#x5143;&#x7D20;&#x5728;&#x672C;&#x8868;&#x4E2D;&#x7684;&#x4E0B;&#x6807;&#xFF1B;num_of_son&#x8868;&#x793A;&#x5B50;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x3002; lema_nodes_le0&#x7B2C;2&#x4E2A;&#x53CA;&#x4E4B;&#x540E;&#x7684;&#x5143;&#x7D20;&#x8BB0;&#x5F55;&#x7B2C;1&#x5C42;Trie&#x8282;&#x70B9;&#x4FE1;&#x606F;&#x3002;son_1st_off&#x8868;&#x793A;&#x9996;&#x4E2A;&#x5B50;&#x5143;&#x7D20;&#x5728;lema_node_ge1&#x4E2D;&#x7684;&#x4E0B;&#x6807;&#xFF1B;homo_idx_buf_off&#x8868;&#x793A;&#x8BE5;&#x97F3;&#x8282;&#x5BF9;&#x5E94;&#x5F97;&#x4EE5;&#x4E2A;&#x7CFB;&#x7EDF;&#x8BCD;&#x5728;homo_idx_buf_&#x4E2D;&#x7684;&#x4E0B;&#x6807;&#xFF1B;spl_idx&#x8868;&#x793A;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x4EE3;&#x8868;&#x7684;&#x97F3;&#x8282;&#xFF1B;num_of_son&#x8868;&#x793A;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x4E2A;&#x6570;&#xFF1B;num_of_homo&#x8868;&#x793A;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x4E0B;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x7CFB;&#x7EDF;&#x8BCD;&#x3002; lema_nodes_ge1&#x4E0E;lema_nodes_le0&#x7B2C;2&#x884C;&#x4EE5;&#x540E;&#x7684;&#x5143;&#x7D20;&#x5404;&#x5B57;&#x6BB5;&#x8868;&#x793A;&#x7684;&#x542B;&#x4E49;&#x4E00;&#x81F4;&#x3002; 123456789101112131415161718192021222324252627282930313233343536#ifdef ___DO_STATISTICS___ stat_print();#endif // Move the node data and homo data to the DictTrie dict_trie-&gt;root_ = new LmaNodeLE0[lma_nds_used_num_le0_]; dict_trie-&gt;nodes_ge1_ = new LmaNodeGE1[lma_nds_used_num_ge1_]; size_t lma_idx_num = homo_idx_num_eq1_ + homo_idx_num_gt1_ + top_lmas_num_; dict_trie-&gt;lma_idx_buf_ = new unsigned char[lma_idx_num * kLemmaIdSize]; assert(NULL != dict_trie-&gt;root_); assert(NULL != dict_trie-&gt;lma_idx_buf_); dict_trie-&gt;lma_node_num_le0_ = lma_nds_used_num_le0_; dict_trie-&gt;lma_node_num_ge1_ = lma_nds_used_num_ge1_; dict_trie-&gt;lma_idx_buf_len_ = lma_idx_num * kLemmaIdSize; dict_trie-&gt;top_lmas_num_ = top_lmas_num_; // &#x5C06;lma_nodes_le0&#x62F7;&#x8D1D;&#x5230;dict_trie-&gt;root_&#xFF0C;&#x5C06;lma_node_ge1_&#x62F7;&#x8D1D;&#x5230;dict_trie-&gt;nodes_ge1_ memcpy(dict_trie-&gt;root_, lma_nodes_le0_, sizeof(LmaNodeLE0) * lma_nds_used_num_le0_); memcpy(dict_trie-&gt;nodes_ge1_, lma_nodes_ge1_, sizeof(LmaNodeGE1) * lma_nds_used_num_ge1_); // &#x5C06;homo_idx_buf_&#x62F7;&#x8D1D;&#x5230;dict_trie-&gt;lma_idx_buf_&#xFF0C;&#x8BE5;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x662F;3&#x4E2A;&#x5B57;&#x8282; for (size_t pos = 0; pos &lt; homo_idx_num_eq1_ + homo_idx_num_gt1_; pos++) { id_to_charbuf(dict_trie-&gt;lma_idx_buf_ + pos * kLemmaIdSize, homo_idx_buf_[pos]); } // dict_trie-&gt;lma_idx_buf_&#x672B;&#x7AEF;10&#x4E2A;&#x5143;&#x7D20;&#x662F;&#x8BCD;&#x9891;&#x6700;&#x9AD8;&#x7684;top10&#x7CFB;&#x7EDF;&#x8BCD; for (size_t pos = homo_idx_num_eq1_ + homo_idx_num_gt1_; pos &lt; lma_idx_num; pos++) { LemmaIdType idx = top_lmas_[pos - homo_idx_num_eq1_ - homo_idx_num_gt1_].idx_by_hz; id_to_charbuf(dict_trie-&gt;lma_idx_buf_ + pos * kLemmaIdSize, idx); } ... return dt_success;} Step3 DictTrie::save_dict(...) 1234567891011121314bool DictTrie::save_dict(const char *filename) { ... SpellingTrie &amp;spl_trie = SpellingTrie::get_instance(); NGram &amp;ngram = NGram::get_instance(); FILE *fp = fopen(filename, &quot;wb&quot;); ... if (!spl_trie.save_spl_trie(fp) || !dict_list_-&gt;save_list(fp) || !save_dict(fp) || !ngram.save_ngram(fp)) { ... } ... return true;} &#x628A;&#x524D;&#x9762;&#x751F;&#x6210;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x8FC7;&#x7A0B;&#x7814;&#x7A76;&#x900F;&#x5F7B;&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x53EA;&#x4E0D;&#x8FC7;&#x628A;&#x6570;&#x636E;&#x5199;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建Android下的输入法(二)——绘制候选窗口]]></title>
    <url>%2F2017%2F04%2F03%2F2017%2F0403AndroidIMESample2%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x6587;&#x5728;&#x524D;&#x6587;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x6F14;&#x793A;&#x7ED8;&#x5236;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x3002; &#x521B;&#x5EFA;&#x5019;&#x9009;&#x7A97;&#x53E3; &#x5728;app/java/com.palanceli.ime.androidimesample &#x53F3;&#x952E; &gt; New &gt; Java Class&#xFF0C;&#x586B;&#x5199; Name&#xFF1A;CandidateView Superclass&#xFF1A;android.view.View &#x70B9;&#x51FB;OK&#x3002;&#x7F16;&#x8F91;&#x5176;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778package com.palanceli.ime.androidimesample;import android.content.Context;import android.graphics.Canvas;import android.graphics.Paint;import android.util.Log;import android.view.View;import java.util.ArrayList;import java.util.List;public class CandidateView extends View { private List&lt;String&gt; mSuggestions; // &#x5B58;&#x653E;&#x5019;&#x9009;&#x5217;&#x8868; private static final int X_GAP = 10; // &#x6BCF;&#x4E2A;&#x5019;&#x9009;&#x4E4B;&#x95F4;&#x7684;&#x95F4;&#x9694; private Paint mPaint; // &#x7528;&#x4E8E;&#x7ED8;&#x5236;&#x5019;&#x9009; private int mCandidateVPadding; // &#x5019;&#x9009;&#x6587;&#x5B57;&#x4E0A;&#x4E0B;&#x8FB9;&#x8DDD; public CandidateView(Context context) { super(context); Log.d(this.getClass().toString(), &quot;CandidateView: &quot;); Resources r = context.getResources(); mCandidateVPadding = r.getDimensionPixelSize(R.dimen.candidateVerticalPadding); setBackgroundColor(r.getColor(R.color.candidateBackground, null)); // &#x8BBE;&#x7F6E;&#x80CC;&#x666F;&#x8272; mPaint = new Paint(); mPaint.setColor(r.getColor(R.color.candidate, null)); // &#x8BBE;&#x7F6E;&#x524D;&#x666F;&#x8272; mPaint.setAntiAlias(true); // &#x8BBE;&#x7F6E;&#x5B57;&#x4F53; mPaint.setTextSize(r.getDimensionPixelSize(R.dimen.candidateFontHeight)); // &#x8BBE;&#x7F6E;&#x5B57;&#x53F7; mPaint.setStrokeWidth(0); setWillNotDraw(false); // &#x8986;&#x76D6;&#x4E86;onDraw&#x51FD;&#x6570;&#x5E94;&#x6E05;&#x9664;&#x8BE5;&#x6807;&#x8BB0; } @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { Log.d(this.getClass().toString(), &quot;onMeasure: &quot;); int wMode = MeasureSpec.getMode(widthMeasureSpec); int wSize = MeasureSpec.getSize(widthMeasureSpec); int measuredWidth = resolveSize(50, widthMeasureSpec); final int desiredHeight = ((int)mPaint.getTextSize()) + mCandidateVPadding; // &#x7CFB;&#x7EDF;&#x4F1A;&#x6839;&#x636E;&#x8FD4;&#x56DE;&#x503C;&#x786E;&#x5B9A;&#x7A97;&#x4F53;&#x7684;&#x5927;&#x5C0F; setMeasuredDimension(measuredWidth, resolveSize(desiredHeight, heightMeasureSpec)); } @Override protected void onDraw(Canvas canvas) { Log.d(this.getClass().toString(), &quot;onDraw: &quot;); super.onDraw(canvas); if (mSuggestions == null) return; // &#x4F9D;&#x6B21;&#x7ED8;&#x5236;&#x6BCF;&#x7EC4;&#x5019;&#x9009;&#x5B57;&#x4E32; int x = 0; final int count = mSuggestions.size(); final int height = getHeight(); final int y = (int) (((height - mPaint.getTextSize()) / 2) - mPaint.ascent()); for (int i = 0; i &lt; count; i++) { String suggestion = mSuggestions.get(i); float textWidth = mPaint.measureText(suggestion); final int wordWidth = (int) textWidth + X_GAP * 2; canvas.drawText(suggestion, x + X_GAP, y, mPaint); x += wordWidth; } } public void setSuggestions(List&lt;String&gt; suggestions) { // &#x8BBE;&#x7F6E;&#x5019;&#x9009;&#x5B57;&#x4E32;&#x5217;&#x8868; if (suggestions != null) { mSuggestions = new ArrayList&lt;String&gt;(suggestions); } invalidate(); requestLayout(); }} &#x5176;&#x4E2D;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x5173;&#x952E;&#x7684;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; * onDraw(Canvas canvas); &#x7ED8;&#x5236;&#x5019;&#x9009;&#x7A97; * onMeasure(int widthMeasureSpec, int heightMeasureSpec); &#x544A;&#x8BC9;&#x7CFB;&#x7EDF;&#x5019;&#x9009;&#x7A97;&#x7684;&#x5927;&#x5C0F; &#x663E;&#x793A;&#x5019;&#x9009;&#x7A97;&#x53E3; &#x5728;AndroidIMESampleService&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class AndroidIMESampleService extends InputMethodService implements KeyboardView.OnKeyboardActionListener { ... private CandidateView mCandidateView; // &#x5019;&#x9009;&#x7A97; private StringBuilder m_composeString = new StringBuilder(); // &#x4FDD;&#x5B58;&#x5199;&#x4F5C;&#x4E32; @Override public View onCreateCandidatesView(){ Log.d(this.getClass().toString(), &quot;onCreateCandidatesView: &quot;); mCandidateView = new CandidateView(this); return mCandidateView; } @Override public void onStartInput(EditorInfo editorInfo, boolean restarting){ super.onStartInput(editorInfo, restarting); Log.d(this.getClass().toString(), &quot;onStartInput: &quot;); m_composeString.setLength(0); setCandidatesViewShown(false); } @Override public void onKey(int primaryCode, int[] keyCodes) { InputConnection ic = getCurrentInputConnection(); switch(primaryCode){ ... default: char code = (char)primaryCode; if(code == &apos; &apos;){ // &#x5982;&#x679C;&#x6536;&#x5230;&#x7684;&#x662F;&#x7A7A;&#x683C; if(m_composeString.length() &gt; 0) { // &#x5982;&#x679C;&#x6709;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x5219;&#x5C06;&#x9996;&#x4E2A;&#x5019;&#x9009;&#x63D0;&#x4EA4;&#x4E0A;&#x5C4F; ic.commitText(m_composeString, m_composeString.length()); m_composeString.setLength(0); }else{ // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x5C06;&#x7A7A;&#x683C;&#x4E0A;&#x5C4F; ic.commitText(&quot; &quot;, 1); } setCandidatesViewShown(false); }else { // &#x5426;&#x5219;&#xFF0C;&#x5C06;&#x5B57;&#x7B26;&#x8BA1;&#x5165;&#x5199;&#x4F5C;&#x4E32; m_composeString.append(code); ic.setComposingText(m_composeString, 1); if(mCandidateView != null){ ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;(); list.add(m_composeString.toString()); mCandidateView.setSuggestions(list); } } } } ...} &#x5176;&#x4E2D; * onCreateCandidatesView()&#x51FD;&#x6570;&#x4F1A;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x88AB;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x8BE6;&#x89C1;&#x8F93;&#x5165;&#x6CD5;&#x751F;&#x547D;&#x5468;&#x671F; * onStartInput(...)&#x51FD;&#x6570;&#x4F1A;&#x5728;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x83B7;&#x5F97;&#x7126;&#x70B9;&#x65F6;&#x88AB;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x8BE6;&#x89C1;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x7684;&#x8F93;&#x5165;&#x7C7B;&#x578B; * &#x4FEE;&#x6539;onKey(...)&#x4E2D;&#x7684;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#x4E3A;&#xFF1A;&#x9664;&#x7A7A;&#x683C;&#x4EE5;&#x5916;&#x7684;&#x5B57;&#x7B26;&#x5747;&#x6682;&#x5B58;&#x5982;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x7A7A;&#x683C;&#x7528;&#x6765;&#x4F7F;&#x9996;&#x4E2A;&#x5019;&#x9009;&#x4E0A;&#x5C4F; &#x672C;&#x6587;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x53C2;&#x89C1;AndroidIMESample v1.1]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS下基于IMK的输入法（三）——绘制候选窗口]]></title>
    <url>%2F2017%2F03%2F27%2F2017%2F0327macOSIMKSample3%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x82F9;&#x679C;&#x7ED9;&#x7684;&#x4F8B;&#x5B50;NumberInput_IMKit_Sample&#x4E2D;&#xFF0C;NumberInput2&#x6307;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x663E;&#x793A;&#x5019;&#x9009;&#x7A97;&#x53E3;&#xFF0C;&#x4F46;&#x8FD9;&#x4E2A;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x7684;&#x7ED8;&#x5236;&#x662F;&#x7531;&#x7CFB;&#x7EDF;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x53EA;&#x662F;&#x7ED9;&#x5B83;&#x63D0;&#x4F9B;&#x5019;&#x9009;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x6307;&#x5B9A;&#x6A2A;/&#x7AD6;&#x6392;&#x7B49;&#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x4E0D;&#x80FD;&#x53C2;&#x4E0E;&#x5230;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x7684;&#x7ED8;&#x5236;&#xFF0C;&#x65E0;&#x6CD5;&#x652F;&#x6301;&#x76AE;&#x80A4;&#x7B49;&#x7279;&#x6027;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;&#x7B2C;&#x4E09;&#x65B9;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5F00;&#x53D1;&#x610F;&#x4E49;&#x4E0D;&#x5927;&#x3002;&#x901A;&#x5E38;&#x90FD;&#x662F;&#x5173;&#x95ED;&#x8BE5;&#x5C5E;&#x6027;&#xFF0C;&#x800C;&#x7531;&#x8F93;&#x5165;&#x6CD5;&#x81EA;&#x884C;&#x521B;&#x5EFA;&#x548C;&#x7ED8;&#x5236;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x3002; &#x672C;&#x6587;&#x5C31;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5B8C;&#x6210;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x7684;&#x521B;&#x5EFA;&#x548C;&#x7ED8;&#x5236;&#x3002;&#x672C;&#x4F8B;&#x7684;&#x529F;&#x80FD;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x8FD8;&#x662F;&#x7F13;&#x5B58;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x6309;&#x7A7A;&#x683C;&#x6216;&#x56DE;&#x8F66;&#x4E0A;&#x5C4F;&#x3002;&#x53EA;&#x662F;&#x7F13;&#x5B58;&#x7684;&#x5199;&#x4F5C;&#x4E32;&#x5C06;&#x540C;&#x65F6;&#x7ED8;&#x5236;&#x5230;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x4E0A;&#xFF0C;&#x4E0A;&#x5C4F;&#x540E;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x6D88;&#x5931;&#x3002; &#x72EC;&#x7ACB;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x5F15;&#x64CE; &#x5728;&#x524D;&#x6587;&#x4E2D;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x76F8;&#x5173;&#x7684;&#x6570;&#x636E;&#x76F4;&#x63A5;&#x653E;&#x5728;IMKSampleController&#x4E2D;&#x7EF4;&#x62A4;&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x53EA;&#x6709;&#x5199;&#x4F5C;&#x4E32;&#x3002;&#x5982;&#x679C;&#x8981;&#x652F;&#x6301;&#x81EA;&#x7ED8;&#x5019;&#x9009;&#x7A97;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5728;&#x591A;&#x4E2A;&#x7C7B;&#x4E2D;&#x8BBF;&#x95EE;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5C06;&#x8BE5;&#x6570;&#x636E;&#x72EC;&#x7ACB;&#x51FA;&#x6765;&#xFF0C;&#x653E;&#x5230;&#x8F93;&#x5165;&#x6CD5;&#x5F15;&#x64CE;&#x4E2D;&#x4E86;&#xFF1A; 12345678// SGDXIMEngine.h@interface SGDXIMEngine : NSObject+(SGDXIMEngine*) sharedObject;-(NSMutableString*) appendComposeString:(NSString*)string; // &#x5411;&#x5199;&#x4F5C;&#x4E32;&#x8FFD;&#x52A0;&#x5B57;&#x7B26;-(void) cleanComposeString; // &#x6E05;&#x9664;&#x5199;&#x4F5C;&#x4E32;-(NSMutableString*) composeString; // &#x83B7;&#x5F97;&#x5199;&#x4F5C;&#x4E32;@end 1234567891011121314151617181920212223242526272829303132333435363738394041// SGDXIMEngine.m@implementation SGDXIMEngine{ NSMutableString* _composeString;}+(SGDXIMEngine*)sharedObject{ static SGDXIMEngine* sObject = nil; @synchronized (self) { if(sObject == nil){ sObject = [[self alloc]init]; } } return sObject;}-(NSMutableString*) composeString{ if(_composeString == nil){ _composeString = [[NSMutableString alloc]init]; } return _composeString;}-(void) setComposeString:(NSString*) value{ [[self composeString] setString:value];}-(NSString*)appendComposeString:(NSString *)string{ [[self composeString] appendString:string]; return [self composeString];}-(void)cleanComposeString{ [[self composeString] setString:@&quot;&quot;];}@end &#x6DFB;&#x52A0;&#x663E;&#x793A;&#x5199;&#x4F5C;&#x4E32;&#x7684;&#x5019;&#x9009;&#x89C6;&#x56FE; &#x5728;&#x8FD9;&#x4E2A;&#x89C6;&#x56FE;&#x4E2D;&#x4E00;&#x822C;&#x8981;&#x663E;&#x793A;&#x5019;&#x9009;&#x4E32;&#xFF0C;&#x6B64;&#x5904;&#x5E76;&#x6CA1;&#x6709;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x914D;&#x5907;&#x8F6C;&#x6362;&#x5F15;&#x64CE;&#xFF0C;&#x56E0;&#x6B64;&#x8BA9;&#x5B83;&#x663E;&#x793A;&#x5199;&#x4F5C;&#x4E32;&#x5373;&#x53EF;&#x3002;&#x53EA;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x51FD;&#x6570;-(void)drawRect:(NSRect)dirtyRect&#x5B8C;&#x6210;&#x7ED8;&#x5236;&#xFF1A; 12345// IMKSCandidatesView.h#import &lt;Cocoa/Cocoa.h&gt;@interface IMKSCandidatesView : NSView@end 12345678910111213141516171819202122232425262728// IMKSCandidatesView.m#import &quot;IMKSCandidatesView.h&quot;#import &quot;SGDXIMEngine.h&quot;@implementation IMKSCandidatesView- (void)drawRect:(NSRect)dirtyRect { [super drawRect:dirtyRect]; // Drawing code here. NSLog(@&quot;IMKSCandidatesView::drawRect&quot;); // &#x7ED8;&#x5236;&#x7070;&#x8272;&#x80CC;&#x666F; NSRect bounds = [self bounds]; [[NSColor lightGrayColor]set]; [NSBezierPath fillRect:bounds]; SGDXIMEngine *imEngine = [SGDXIMEngine sharedObject]; // &#x7ED8;&#x5236;&#x5199;&#x4F5C;&#x4E32; NSMutableAttributedString* compString = [[NSMutableAttributedString alloc]initWithString:[imEngine composeString]]; [compString addAttribute:NSFontAttributeName value:[NSFont userFontOfSize:16] range:NSMakeRange(0, [[imEngine composeString]length])]; [compString drawInRect:[self bounds]];}@end &#x6DFB;&#x52A0;&#x5019;&#x9009;&#x7A97;&#x53E3; &#x8FD9;&#x4E2A;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x5305;&#x542B;&#x524D;&#x9762;&#x521B;&#x5EFA;&#x7684;&#x89C6;&#x56FE;&#xFF0C;&#x8D1F;&#x8D23;&#x5728;compString&#x975E;&#x7A7A;&#x7684;&#x65F6;&#x5019;&#x663E;&#x793A;&#xFF0C;&#x4E3A;&#x7A7A;&#x7684;&#x65F6;&#x5019;&#x9690;&#x85CF;&#x3002;&#x663E;&#x793A;&#x7684;&#x4F4D;&#x7F6E;&#x4F4D;&#x4E8E;&#x5149;&#x6807;&#x7684;&#x4E0B;&#x65B9;&#x3002; 1234567// IMKSCandidatesWindow.h#import &lt;Cocoa/Cocoa.h&gt;#import &lt;InputMethodKit/InputMethodKit.h&gt;@interface IMKSCandidatesWindow : NSWindow-(void)update:(id&lt;IMKTextInput, NSObject&gt;)sender;@end 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768// IMKSCandidatesWindow.m#import &quot;IMKSCandidatesWindow.h&quot;#import &quot;SGDXIMEngine.h&quot;#import &quot;IMKSCandidatesView.h&quot;@implementation IMKSCandidatesWindow{ IMKSCandidatesView* _view;}-(id)initWithContentRect:(NSRect)contentRect styleMask:(NSWindowStyleMask)style backing:(NSBackingStoreType)bufferingType defer:(BOOL)flag{ self = [super initWithContentRect:contentRect styleMask:NSBorderlessWindowMask backing:bufferingType defer:flag]; if(self){ [self setOpaque:NO]; [self setLevel:NSFloatingWindowLevel]; [self setBackgroundColor:[NSColor clearColor]]; _view = [[IMKSCandidatesView alloc]initWithFrame:self.frame]; [self setContentView:_view]; [self orderFront:nil]; } return self;}// &#x8BA1;&#x7B97;&#x5149;&#x6807;&#x4F4D;&#x7F6E;-(NSPoint) getCaretPosition:(id&lt;IMKTextInput, NSObject&gt;)sender{ NSPoint ps; NSRect lineHeightRect; [sender attributesForCharacterIndex:0 lineHeightRectangle:&amp;lineHeightRect]; ps = NSMakePoint(lineHeightRect.origin.x, lineHeightRect.origin.y); return ps;}-(void)update:(id&lt;IMKTextInput, NSObject&gt;)sender{ NSPoint caretPosition = [self getCaretPosition:sender]; SGDXIMEngine *imEngine = [SGDXIMEngine sharedObject]; NSMutableAttributedString* compString = [[NSMutableAttributedString alloc]initWithString:[imEngine composeString]]; [compString addAttribute:NSFontAttributeName value:[NSFont userFontOfSize:16] range:NSMakeRange(0, [[imEngine composeString]length])]; NSRect rect = NSZeroRect; // &#x5199;&#x4F5C;&#x4E32;&#x4E3A;&#x7A7A;&#x5219;&#x4E0D;&#x663E;&#x793A; // &#x8BA1;&#x7B97;&#x7A97;&#x53E3;&#x533A;&#x57DF; if([[[SGDXIMEngine sharedObject]composeString] length] &gt; 0){ rect = NSMakeRect(caretPosition.x, caretPosition.y - [compString size].height, [compString size].width , [compString size].height); } NSLog(@&quot;IMKSCandidatesWindow::update rect:(%.0f, %.0f, %.0f, %.0f)&quot;, rect.origin.x, rect.origin.y, rect.size.width, rect.size.height); [self setFrame:rect display:YES]; // &#x8BA1;&#x7B97;&#x89C6;&#x56FE;&#x533A;&#x57DF; [_view setFrame:NSMakeRect(0, 0, rect.size.width, rect.size.height)]; [_view setNeedsDisplay:YES];}@end InputInputController&#x5B50;&#x7C7B; &#x8BE5;&#x5B50;&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#x5728;&#x4E4B;&#x524D;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x9700;&#x8981;&#xFF1A;1&#x3001;&#x521B;&#x5EFA;&#x5019;&#x9009;&#x7A97;&#x53E3;&#xFF1B;2&#x3001;&#x6BCF;&#x6B21;&#x8FFD;&#x52A0;&#x5199;&#x4F5C;&#x4E32;&#x6216;&#x4E0A;&#x5C4F;&#x540E;&#x9700;&#x8981;&#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97;&#x53E3;&#xFF1A; 1234567// IMKSampleController.h#import &lt;Cocoa/Cocoa.h&gt;#import &lt;InputMethodKit/InputMethodKit.h&gt;@interface IMKSampleController : IMKInputController@end 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#import &quot;IMKSampleController.h&quot;#import &quot;SGDXIMEngine.h&quot;#import &quot;IMKSCandidatesWindow.h&quot;@implementation IMKSampleController{ IMKSCandidatesWindow* _candidatesWindow;}-(IMKSCandidatesWindow*) candidatesWindow{ if(_candidatesWindow == nil){ _candidatesWindow = [[IMKSCandidatesWindow alloc] initWithContentRect:NSZeroRect styleMask:NSBorderlessWindowMask backing:NSBackingStoreBuffered defer:YES]; } return _candidatesWindow;}-(void) appendComposedString:(NSString*) string client:(id)sender{ SGDXIMEngine* imEngine = [SGDXIMEngine sharedObject]; NSString *compString = [imEngine appendComposeString:string]; // &#x5411;&#x5149;&#x6807;&#x5904;&#x63D2;&#x5165;&#x5185;&#x5D4C;&#x6587;&#x5B57; [sender setMarkedText:compString selectionRange:NSMakeRange(0, [compString length]) replacementRange:NSMakeRange(NSNotFound, NSNotFound)]; [[self candidatesWindow]update:[self client]]; // &#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97;}-(void) commitComposedString:(id)sender{ SGDXIMEngine* imEngine = [SGDXIMEngine sharedObject]; // &#x5411;&#x5149;&#x6807;&#x5904;&#x63D2;&#x5165;&#x4E0A;&#x5C4F;&#x6587;&#x5B57; [sender insertText:[[SGDXIMEngine sharedObject] composeString] replacementRange:NSMakeRange(NSNotFound, NSNotFound)]; [imEngine cleanComposeString]; [[self candidatesWindow]update:[self client]]; // &#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97;}- (BOOL)handleEvent:(NSEvent *)event client:(id)sender{// NSLog(@&quot;%@&quot;, event); if([event type] == NSKeyDown){ unichar key = [[event characters] characterAtIndex:0]; // &#x5982;&#x679C;&#x662F;&#x5B57;&#x7B26;&#x5219;&#x8FFD;&#x52A0;&#x5230;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x5E76;&#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97; if((key &gt;= &apos;a&apos; &amp;&amp; key &lt;= &apos;z&apos;) ||(key &gt;= &apos;0&apos; &amp;&amp; key &lt;= &apos;9&apos;)){ [self appendComposedString:[event characters] client:sender]; return YES; } // &#x5982;&#x679C;&#x662F;&#x7A7A;&#x683C;&#x6216;&#x56DE;&#x8F66;&#x4E14;&#x6709;&#x5199;&#x4F5C;&#x4E32;&#x5219;&#x4E0A;&#x5C4F;&#xFF0C;&#x5E76;&#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97; if(([event keyCode] == kVK_Space || [event keyCode] == kVK_Return)&amp;&amp; [[[SGDXIMEngine sharedObject] composeString] length] &gt; 0) { [self commitComposedString:sender]; return YES; } } return NO;}- (NSUInteger)recognizedEvents:(id)sender { return NSEventMaskFlagsChanged | NSEventMaskKeyDown | NSEventMaskKeyUp;}@end]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建Android下的输入法(一)——创建步骤]]></title>
    <url>%2F2017%2F03%2F27%2F2017%2F0327AndroidIMESample1%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x6587;&#x57FA;&#x4E8E;&#x300A;&#x5728;Android&#x4E0B;&#x521B;&#x5EFA;&#x8F93;&#x5165;&#x6CD5;&#xFF08;&#x8BD1;&#xFF09;&#x300B;&#x6F14;&#x793A;&#x521B;&#x5EFA;Android&#x7CFB;&#x7EDF;&#x4E0B;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x3002; &#x521B;&#x5EFA;&#x5DE5;&#x7A0B; &#x6253;&#x5F00;AndroidStudio&#xFF0C;&#x9009;&#x62E9;Start a new Android Studio project&#xFF0C;&#x586B;&#x5199; Application name&#xFF1A;AndroidIMESample Company Domain&#xFF1A;ime.palanceli.com &#x70B9;&#x51FB; Next &gt; Next &gt; &#x9009;&#x62E9;Add No Activity &gt; Finish&#x3002; &#x5728;manifest&#x4E2D;&#x6DFB;&#x52A0;&#x670D;&#x52A1; &#x5728;app&#x4E0A;&#x53F3;&#x952E; &gt; New &gt; Service &gt; Service&#xFF0C;&#x586B;&#x5199; ClassName&#xFF1A;AndroidIMESampleService &#x70B9;&#x51FB; Finish&#x3002; &#x7F16;&#x8F91;AndroidManifest.xml&#xFF0C;&#x4FEE;&#x6539;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x7684;service&#x90E8;&#x5206;&#xFF1A; 123456789101112131415161718192021222324&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.palanceli.ime.androidimesample&quot;&gt; &lt;application android:allowBackup=&quot;true&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:label=&quot;@string/app_name&quot; android:supportsRtl=&quot;true&quot; android:theme=&quot;@style/AppTheme&quot;&gt; &lt;service android:name=&quot;.AndroidIMESampleService&quot; android:label=&quot;AndroidIMESample&quot; android:permission=&quot;android.permission.BIND_INPUT_METHOD&quot; android:enabled=&quot;true&quot; android:exported=&quot;true&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.view.InputMethod&quot; /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=&quot;android.view.im&quot; android:resource=&quot;@xml/method&quot; /&gt; &lt;/service&gt; &lt;/application&gt;&lt;/manifest&gt; &#x5176;&#x4E2D;service&#x7684;android:label&#x5C5E;&#x6027;&#x5B9A;&#x4E49;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x8F93;&#x5165;&#x6CD5;&#x5217;&#x8868;&#x4E2D;&#x770B;&#x5230;&#x7684;&#x540D;&#x79F0;&#x5C31;&#x662F;&#x4ECE;&#x6B64;&#x5904;&#x83B7;&#x53D6;&#x5230;&#x7684;&#x3002;&#x5728;service&#x7684;meta-data&#x4E2D;&#x5F15;&#x7528;&#x4E86;&#x5143;&#x6570;&#x636E;@xml/method&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6DFB;&#x52A0;&#x5B83;&#x3002; # &#x6DFB;&#x52A0;&#x5143;&#x6570;&#x636E; &#x5728;&#x5DE5;&#x7A0B;res&#x4E2D;&#x521B;&#x5EFA;xml&#x76EE;&#x5F55;&#xFF0C;&#x7136;&#x540E;&#x5728;res&#x53F3;&#x952E; &gt; New &gt; Android resource file &#x586B;&#x5199; File name&#xFF1A;method &#x70B9;&#x51FB;OK&#x3002;&#x4FEE;&#x6539;&#x5176;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 1234567&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;input-method xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;subtype android:label=&quot;English (US)&quot; android:imeSubtypeLocale=&quot;en_US&quot; android:imeSubtypeMode=&quot;keyboard&quot; /&gt;&lt;/input-method&gt; &#x5173;&#x4E8E;subtype&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;InputMethodSubtype&#xFF1A; label&#x662F;&#x8BE5;subtype&#x7684;&#x540D;&#x5B57; imeSubtypeLocale&#x662F;&#x8BE5;subtype&#x652F;&#x6301;&#x7684;&#x8BED;&#x8A00;&#x7C7B;&#x578B; imeSubtypeMode&#x662F;&#x5B83;&#x6240;&#x652F;&#x6301;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;keyboard&#x6216;&#x8005;voice&#xFF0C;&#x5F53;&#x8F93;&#x5165;&#x6CD5;&#x88AB;&#x8C03;&#x8D77;&#x662F;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x628A;&#x7528;&#x6237;&#x9009;&#x62E9;&#x7684;mode&#x503C;&#x4F20;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x3002; # &#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x5E03;&#x5C40; &#x5728;res&#x4E0A;&#x53F3;&#x952E; &gt; New &gt; XML &gt; Layout XML File&#xFF0C;&#x586B;&#x5199; Layout File name&#xFF1A;keyboard &#x70B9;&#x51FB;Finish&#x3002;&#x4FEE;&#x6539;&#x5176;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; 123456789&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.inputmethodservice.KeyboardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:id=&quot;@+id/keyboard&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_alignParentBottom=&quot;true&quot; android:keyPreviewLayout =&quot;@layout/preview&quot; /&gt; &#x7EE7;&#x7EED;&#x5728;res/layout/&#x4E2D;&#x6DFB;&#x52A0;Layout XML File&#xFF0C;&#x586B;&#x5199; Layout File name&#xFF1A;preview&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A; 12345678910&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;TextView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:gravity=&quot;center&quot; android:background=&quot;#ffff00&quot; android:textStyle=&quot;bold&quot; android:textSize=&quot;30sp&quot; &gt;&lt;/TextView&gt; &#x5728;res/xml/&#x4E2D;&#x6DFB;&#x52A0;qwerty.xml&#x6587;&#x4EF6;&#xFF0C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:keyWidth=&quot;10%p&quot; android:horizontalGap=&quot;0px&quot; android:verticalGap=&quot;0px&quot; android:keyHeight=&quot;60dp&quot;&gt; &lt;Row&gt; &lt;Key android:codes=&quot;113&quot; android:keyLabel=&quot;q&quot; android:keyEdgeFlags=&quot;left&quot;/&gt; &lt;Key android:codes=&quot;119&quot; android:keyLabel=&quot;w&quot;/&gt; &lt;Key android:codes=&quot;101&quot; android:keyLabel=&quot;e&quot;/&gt; &lt;Key android:codes=&quot;114&quot; android:keyLabel=&quot;r&quot;/&gt; &lt;Key android:codes=&quot;116&quot; android:keyLabel=&quot;t&quot;/&gt; &lt;Key android:codes=&quot;121&quot; android:keyLabel=&quot;y&quot;/&gt; &lt;Key android:codes=&quot;117&quot; android:keyLabel=&quot;u&quot;/&gt; &lt;Key android:codes=&quot;105&quot; android:keyLabel=&quot;i&quot;/&gt; &lt;Key android:codes=&quot;111&quot; android:keyLabel=&quot;o&quot;/&gt; &lt;Key android:codes=&quot;112&quot; android:keyLabel=&quot;p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt; &lt;/Row&gt; &lt;Row android:layout_centerHorizontal=&quot;true&quot;&gt; &lt;Key android:codes=&quot;97&quot; android:keyLabel=&quot;a&quot; android:horizontalGap=&quot;5%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt; &lt;Key android:codes=&quot;115&quot; android:keyLabel=&quot;s&quot;/&gt; &lt;Key android:codes=&quot;100&quot; android:keyLabel=&quot;d&quot;/&gt; &lt;Key android:codes=&quot;102&quot; android:keyLabel=&quot;f&quot;/&gt; &lt;Key android:codes=&quot;103&quot; android:keyLabel=&quot;g&quot;/&gt; &lt;Key android:codes=&quot;104&quot; android:keyLabel=&quot;h&quot;/&gt; &lt;Key android:codes=&quot;106&quot; android:keyLabel=&quot;j&quot;/&gt; &lt;Key android:codes=&quot;107&quot; android:keyLabel=&quot;k&quot;/&gt; &lt;Key android:codes=&quot;108&quot; android:keyLabel=&quot;l&quot; android:keyEdgeFlags=&quot;right&quot;/&gt; &lt;/Row&gt; &lt;Row&gt; &lt;Key android:codes=&quot;39&quot; android:keyLabel=&quot;&apos;&quot; android:keyEdgeFlags=&quot;left&quot;/&gt; &lt;Key android:codes=&quot;122&quot; android:keyLabel=&quot;z&quot;/&gt; &lt;Key android:codes=&quot;120&quot; android:keyLabel=&quot;x&quot;/&gt; &lt;Key android:codes=&quot;99&quot; android:keyLabel=&quot;c&quot;/&gt; &lt;Key android:codes=&quot;118&quot; android:keyLabel=&quot;v&quot;/&gt; &lt;Key android:codes=&quot;98&quot; android:keyLabel=&quot;b&quot;/&gt; &lt;Key android:codes=&quot;110&quot; android:keyLabel=&quot;n&quot;/&gt; &lt;Key android:codes=&quot;109&quot; android:keyLabel=&quot;m&quot;/&gt; &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt; &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot; android:keyEdgeFlags=&quot;right&quot;/&gt; &lt;/Row&gt; &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt; &lt;Key android:codes=&quot;63&quot; android:keyLabel=&quot;\?&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt; &lt;Key android:codes=&quot;47&quot; android:keyLabel=&quot;/&quot; android:keyWidth=&quot;10%p&quot; /&gt; &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot; &quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt; &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;DEL&quot; android:keyWidth=&quot;20%p&quot; android:isRepeatable=&quot;true&quot;/&gt; &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;DONE&quot; android:keyWidth=&quot;20%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt; &lt;/Row&gt;&lt;/Keyboard&gt; &#x5728;AndroidIMESampleService::onCreateInputView()&#x51FD;&#x6570;&#x4E2D;&#x5C06;&#x6839;&#x636E;res/layout/keyboard.xml&#x6765;&#x521B;&#x5EFA;&#x952E;&#x76D8;&#x89C6;&#x56FE;&#xFF0C;&#x518D;&#x6839;&#x636E;res/xml/qwerty.xml&#x5C06;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x521B;&#x5EFA;&#x5728;&#x8BE5;&#x89C6;&#x56FE;&#x4E0A;&#x3002; &#x5728;android.inputmethodservice.Keyboard&#x4E2D;&#x6709;&#x5BF9;&#x952E;&#x76D8;xml&#x683C;&#x5F0F;&#x7684;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E; &#x663E;&#x793A;&#x8F93;&#x5165;&#x7A97;&#x53E3; &#x7F16;&#x8F91;&#x6587;&#x4EF6;app/java/com.palanceli.ime.androidimesample/AndroidIMESampleService.java&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172package com.palanceli.ime.androidimesample;import android.inputmethodservice.InputMethodService;import android.inputmethodservice.Keyboard;import android.inputmethodservice.KeyboardView;import android.media.AudioManager;import android.view.KeyEvent;import android.view.View;import android.view.inputmethod.InputConnection;public class AndroidIMESampleService extends InputMethodService implements KeyboardView.OnKeyboardActionListener { private KeyboardView mKeyboardView; // &#x5BF9;&#x5E94;keyboard.xml&#x4E2D;&#x5B9A;&#x4E49;&#x7684;KeyboardView private Keyboard mKeyboard; // &#x5BF9;&#x5E94;qwerty.xml&#x4E2D;&#x5B9A;&#x4E49;&#x7684;Keyboard @Override public View onCreateInputView() { // res/layout/keyboard.xml mKeyboardView = (KeyboardView)getLayoutInflater().inflate(R.layout.keyboard, null); mKeyboard = new Keyboard(this, R.xml.qwerty); // res/xml/qwerty.xml mKeyboardView.setKeyboard(mKeyboard); // &#x5C06;&#x81EA;&#x5DF1;&#x8BBE;&#x4E3A;mKeyboardView&#x7684;listener,&#x4EE5;&#x4FBF;&#x63A5;&#x6536;&#x548C;&#x5904;&#x7406;&#x952E;&#x76D8;&#x6D88;&#x606F; mKeyboardView.setOnKeyboardActionListener(this); return mKeyboardView; } @Override public void onKey(int primaryCode, int[] keyCodes) { InputConnection ic = getCurrentInputConnection(); switch(primaryCode){ case Keyboard.KEYCODE_DELETE : ic.deleteSurroundingText(1, 0); break; case Keyboard.KEYCODE_DONE: ic.sendKeyEvent(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_ENTER)); break; default: char code = (char)primaryCode; ic.commitText(String.valueOf(code), 1); } } @Override public void onPress(int primaryCode) { } @Override public void onRelease(int primaryCode) { } @Override public void onText(CharSequence text) { } @Override public void swipeDown() { } @Override public void swipeLeft() { } @Override public void swipeRight() { } @Override public void swipeUp() { }} &#x5728;&#x51FD;&#x6570;AndroidIMESample::onCreateInputView()&#x4E2D;&#xFF0C;&#x5B83;&#x5C06;&#x81EA;&#x5DF1;&#x8BBE;&#x4E3A;&#x952E;&#x76D8;&#x89C6;&#x56FE;&#x7684;listener&#xFF0C;&#x56E0;&#x6B64;AndroidIMESample&#x5FC5;&#x987B;&#x5B9E;&#x73B0;KeyboardView.OnKeyboardActionListener&#x5B9A;&#x4E49;&#x7684;&#x51E0;&#x4E2A;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#xFF1A; * onKey(int primaryCode, int[] keyCodes) &#x5411;listener&#x53D1;&#x9001;key press&#x4E8B;&#x4EF6; * onPress(int primaryCode) &#x54CD;&#x5E94;&#x7528;&#x6237;&#x6309;&#x4E0B;&#x6309;&#x952E;&#x7684;&#x52A8;&#x4F5C; * onRelease(int primaryCode) &#x54CD;&#x5E94;&#x7528;&#x6237;&#x677E;&#x5F00;&#x6309;&#x952E;&#x7684;&#x52A8;&#x4F5C; * onText(CharSequence text) &#x5411;listener&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5E8F;&#x5217; * swipeDown() &#x54CD;&#x5E94;&#x7528;&#x6237;&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#x5FEB;&#x901F;&#x626B;&#x8FC7;&#x7684;&#x52A8;&#x4F5C; * swipeLeft() &#x54CD;&#x5E94;&#x7528;&#x6237;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x5FEB;&#x901F;&#x626B;&#x8FC7;&#x7684;&#x52A8;&#x4F5C; * swipeRight() &#x54CD;&#x5E94;&#x7528;&#x6237;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x5FEB;&#x901F;&#x626B;&#x8FC7;&#x7684;&#x52A8;&#x4F5C; * swipeUp() &#x54CD;&#x5E94;&#x7528;&#x6237;&#x4ECE;&#x4E0B;&#x5230;&#x4E0A;&#x5FEB;&#x901F;&#x626B;&#x8FC7;&#x7684;&#x52A8;&#x4F5C; &#x6784;&#x5EFA;apk&#x5E76;&#x5B89;&#x88C5; &#x70B9;&#x51FB;Android Studio &#x83DC;&#x5355; Build &gt; Build APK&#xFF0C;&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#x4F1A;&#x5F39;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x5728;Finder&#x4E2D;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6B64;APK&#x3002; &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E2D;&#x5B89;&#x88C5;&#x8BE5;&#x8F93;&#x5165;&#x6CD5;&#xFF1A;&#x6253;&#x5F00;&#x6A21;&#x62DF;&#x5668;&#xFF0C;&#x5C06;APK&#x76F4;&#x63A5;&#x62D6;&#x5165;&#x6A21;&#x62DF;&#x5668;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x3002; &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E2D;&#x70B9;&#x51FB;&#xFF1A;&#x8BBE;&#x7F6E; &gt; &#x8BED;&#x8A00;&#x548C;&#x8F93;&#x5165;&#x6CD5; &gt; &#x5F53;&#x524D;&#x8F93;&#x5165;&#x6CD5; &gt; &#x9009;&#x62E9;&#x952E;&#x76D8;&#xFF0C;&#x5373;&#x53EF;&#x770B;&#x5230;AndroidIMESample&#xFF0C;&#x5C06;&#x4E4B;&#x5F00;&#x542F;&#x3002; &#x518D;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#xFF1A;&#x8BBE;&#x7F6E; &gt; &#x8BED;&#x8A00;&#x548C;&#x8F93;&#x5165;&#x6CD5; &gt; &#x5F53;&#x524D;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x5373;&#x53EF;&#x9009;&#x62E9;AndroidIMESample&#x3002; &#x968F;&#x4FBF;&#x8FDB;&#x5165;&#x4E00;&#x4E2A;&#x53EF;&#x7F16;&#x8F91;&#x533A;&#x57DF;&#xFF0C;&#x5373;&#x53EF;&#x770B;&#x5230;&#x5F39;&#x51FA;&#x7684;&#x952E;&#x76D8;&#x3002; &#x672C;&#x6587;&#x7684;&#x6E90;&#x7801;&#x53EF;&#x53C2;&#x89C1;AndroidIMESample v1.0]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS下基于IMK的输入法（二）——处理流程]]></title>
    <url>%2F2017%2F03%2F23%2F2017%2F0323macOSIMKSample2%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x6587;&#x5206;&#x6790;&#x4E86;&#x57FA;&#x4E8E;IMK&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x521B;&#x5EFA;&#x6B65;&#x9AA4;&#xFF0C;&#x672C;&#x6587;&#x5C06;&#x5206;&#x6790;&#x5BF9;&#x6309;&#x952E;&#x7684;&#x5904;&#x7406;&#x6D41;&#x7A0B;&#x548C;&#x89C4;&#x8303;&#x3002;&#x300A;Input Method Kit&#xFF08;&#x8BD1;&#xFF09;&#x300B;&#x4E2D;&#x63D0;&#x5230;IMKServerInput&#x5BF9;&#x6309;&#x952E;&#x7684;&#x5904;&#x7406;&#x6A21;&#x5F0F;&#x6709;&#x4E09;&#x79CD;&#xFF1A;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#xFF0C;&#x4EC5;&#x5904;&#x7406;&#x6587;&#x672C;&#x6570;&#x636E;&#xFF0C;&#x5904;&#x7406;&#x6240;&#x6709;&#x4E8B;&#x4EF6;&#x3002;&#x8FD9;&#x4E09;&#x79CD;&#x6A21;&#x5F0F;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5904;&#x7406;&#x7A7A;&#x95F4;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x7075;&#x6D3B;&#x6027;&#x8D8A;&#x6765;&#x8D8A;&#x5F3A;&#xFF0C;&#x53EF;&#x5B9E;&#x73B0;&#x7684;&#x529F;&#x80FD;&#x4E5F;&#x8D8A;&#x6765;&#x8D8A;&#x5F3A;&#x5927;&#xFF0C;&#x5F53;&#x7136;&#x8981;&#x627F;&#x62C5;&#x7684;&#x804C;&#x8D23;&#x4E5F;&#x5C31;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x3002; # &#x952E;&#x76D8;&#x7ED1;&#x5B9A; &gt; &#x7CFB;&#x7EDF;&#x628A;&#x6BCF;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x6309;&#x4E0B;&#x4E8B;&#x4EF6;&#x6620;&#x5C04;&#x5230;&#x5230;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x6210;&#x529F;&#xFF08;&#x627E;&#x5230;&#x6B64;&#x6620;&#x5C04;&#x65B9;&#x6CD5;&#xFF09;&#xFF0C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;didCommandBySelector:client:&#xFF0C;&#x5426;&#x5219;&#xFF08;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x8BE5;&#x65B9;&#x6CD5;&#xFF09;&#x8C03;&#x7528;inputText:client:&#x3002;&#x9488;&#x5BF9;&#x6B64;&#x65B9;&#x5F0F;&#xFF0C;&#x4F60;&#x5E94;&#x5F53;&#x5B9E;&#x73B0;inputText(_:client:) &#x548C;didCommand(by:client:)&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x3002; &#x4EE5;&#x4E0A;&#x662F;&#x82F9;&#x679C;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x53EF;&#x4EE5;&#x505A;&#x4E2A;&#x5B9E;&#x9A8C;&#x6765;&#x89C2;&#x5BDF;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x6D41;&#x7A0B;&#xFF1A; 123456789101112131415161718#import &quot;IMKSampleController.h&quot;@implementation IMKSampleController// &#x8BE5;&#x65B9;&#x6CD5;&#x63A5;&#x6536;&#x6765;&#x81EA;&#x5BA2;&#x6237;&#x7A0B;&#x5E8F;&#x7684;&#x6309;&#x952E;&#x8F93;&#x5165;&#xFF0C;InputMethodKit&#x4F1A;&#x628A;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#x8F6C;&#x6362;&#x6210;NSString&#x53D1;&#x9001;&#x7ED9;&#x672C;&#x65B9;&#x6CD5;&#x3002;//&#x8FD4;&#x56DE;YES&#x8868;&#x660E;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x4E0D;&#x518D;&#x628A;&#x6309;&#x952E;&#x7EE7;&#x7EED;&#x53D1;&#x9001;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;NO-(BOOL)inputText:(NSString*)string client:(id)sender{ NSLog(@&quot;%@&quot;, string); return NO;}-(BOOL)didCommandBySelector:(SEL)aSelector client:(id)sender{ // &#x5982;&#x679C;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;YES&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;NO NSLog(@&quot;didCommandBySelector:%@&quot;, NSStringFromSelector(aSelector)); return NO;}@end &#x5207;&#x51FA;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x6309;&#x4E0B;a&#x3001;b&#x3001;c&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x8F93;&#x51FA;&#xFF1A; 123&#x9ED8;&#x8BA4; 12:33:25.769423 +0800 IMKSample a&#x9ED8;&#x8BA4; 12:33:33.385260 +0800 IMKSample b&#x9ED8;&#x8BA4; 12:33:33.385260 +0800 IMKSample c &#x6309;&#x4E0B;Backspace&#x3001;&#x56DE;&#x8F66;&#x3001;Tab&#x4EE5;&#x53CA;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x952E;&#xFF0C;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x8F93;&#x51FA;&#xFF1A; 1234567&#x9ED8;&#x8BA4; 12:33:36.319315 +0800 IMKSample didCommandBySelector:deleteBackward:&#x9ED8;&#x8BA4; 12:33:27.258984 +0800 IMKSample didCommandBySelector:insertNewline:&#x9ED8;&#x8BA4; 12:33:45.027618 +0800 IMKSample didCommandBySelector:insertTab:&#x9ED8;&#x8BA4; 12:36:20.385862 +0800 IMKSample didCommandBySelector:moveUp:&#x9ED8;&#x8BA4; 12:36:21.633254 +0800 IMKSample didCommandBySelector:moveDown:&#x9ED8;&#x8BA4; 12:36:21.063002 +0800 IMKSample didCommandBySelector:moveLeft:&#x9ED8;&#x8BA4; 12:36:22.083668 +0800 IMKSample didCommandBySelector:moveRight: &#x6211;&#x627E;&#x4E0D;&#x5230;&#x7CFB;&#x7EDF;&#x5728;&#x54EA;&#x91CC;&#x505A;&#x7684;&#x6309;&#x952E;&#x4E0E;&#x65B9;&#x6CD5;&#x7684;&#x6620;&#x5C04;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x904D;&#x5386;&#x51FA;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x9009;&#x62E9;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x7ED3;&#x8BBA;&#xFF1A; 1. &#x5F53;&#x6309;&#x4E0B;&#x5B57;&#x7B26;&#x952E;&#xFF0C;&#x5C06;&#x8C03;&#x7528;input&#x200B;Text:&#x200B;client:&#x200B;&#x5E76;&#x4F20;&#x5165;&#x6309;&#x4E0B;&#x7684;&#x5B57;&#x7B26; 2. &#x5F53;&#x6309;&#x4E0B;&#x63A7;&#x5236;&#x952E;&#xFF0C;&#x5C06;&#x8C03;&#x7528;did&#x200B;Command&#x200B;By&#x200B;Selector:&#x200B;client:&#x200B;&#x5E76;&#x4F20;&#x5165;&#x8BE5;&#x63A7;&#x5236;&#x952E;&#x5BF9;&#x5E94;&#x7684;&#x65B9;&#x6CD5;&#x9009;&#x62E9;&#x5668; &#x5728;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x5904;&#x7406;&#x8BE5;&#x5B57;&#x7B26;/&#x63A7;&#x5236;&#x952E;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;YES&#xFF0C;&#x8BE5;&#x6309;&#x952E;&#x5C31;&#x4E0D;&#x5728;&#x4F20;&#x9012;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;NO&#xFF0C;&#x540C;&#x65F6;&#x6309;&#x952E;&#x88AB;&#x53D1;&#x9001;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x90FD;&#x662F;&#x5F53;&#x7528;&#x6237;&#x6709;&#x6309;&#x952E;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x4E00;&#x4E2A;&#x662F;&#x6309;&#x5B57;&#x7B26;&#x952E;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x6309;&#x63A7;&#x5236;&#x952E;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x6839;&#x636E;&#x6309;&#x952E;&#x5185;&#x5BB9;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x66F4;&#x65B0;&#x5199;&#x4F5C;&#x4E32;&#x3001;&#x5019;&#x9009;&#x4E32;&#x4EE5;&#x53CA;&#x662F;&#x5426;&#x4E0A;&#x5C4F;&#x3002; ## &#x5B9E;&#x73B0;&#x65B9;&#x6CD5; &#x5047;&#x8BBE;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x903B;&#x8F91;&#x662F;&#xFF1A;&#x5BF9;&#x4E8E;&#x5B57;&#x7B26;&#x6309;&#x952E;&#x6682;&#x65F6;&#x7F13;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x901A;&#x8FC7;&#x56DE;&#x8F66;&#x6216;&#x7A7A;&#x683C;&#x5B8C;&#x6210;&#x4E0A;&#x5C4F;&#x3002;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#xFF1A;&#x5728;input&#x200B;Text:&#x200B;client:&#x200B;&#x4E2D;&#x7F13;&#x5B58;&#x7A7A;&#x683C;&#x4EE5;&#x5916;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7A7A;&#x683C;&#x5219;&#x4E0A;&#x5C4F;&#xFF1B;&#x5728;did&#x200B;Command&#x200B;By&#x200B;Selector:&#x200B;client:&#x200B;&#x4E2D;&#x5904;&#x7406;&#x56DE;&#x8F66;&#x5B8C;&#x6210;&#x4E0A;&#x5C4F;&#x3002;&#x4EE5;&#x4E0B;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#xFF1A; 12345678910111213141516171819202122-(BOOL)inputText:(NSString*)string client:(id)sender{ NSLog(@&quot;inputText:%@&quot;, string); if([string isEqualToString:@&quot; &quot;]){ // &#x5982;&#x679C;&#x662F;&#x7A7A;&#x683C;&#x5219;&#x4E0A;&#x5C4F; [self commitComposedString:sender]; }else{ // &#x5426;&#x5219;&#x8FFD;&#x52A0;&#x5230;&#x5199;&#x4F5C;&#x4E32; [self appendComposedString:string client:sender]; NSLog(@&quot;composed String:%@&quot;, [self composedString]); } return YES;}-(BOOL)didCommandBySelector:(SEL)aSelector client:(id)sender{ // &#x5982;&#x679C;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;YES&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;NO NSLog(@&quot;didCommandBySelector:%@&quot;, NSStringFromSelector(aSelector)); if(aSelector == @selector(insertNewline:)){ // &#x5982;&#x679C;&#x662F;&#x56DE;&#x8F66;&#x5219;&#x4E0A;&#x5C4F; [self commitComposedString:sender]; return YES; } return NO;} &#x672C;&#x8282;&#x7684;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x53C2;&#x89C1;macIMKSample v1.1&#x3002; # &#x4EC5;&#x5904;&#x7406;&#x6587;&#x672C;&#x6570;&#x636E; &gt; &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#x4F60;&#x65E0;&#x9700;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x5C31;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x6240;&#x6709;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x89E3;&#x6790;&#x76F8;&#x5173;&#x7684;&#x6587;&#x672C;&#x6570;&#x636E;&#x3002;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x4F1A;&#x5305;&#x542B;Unicodes&#xFF0C;&#x4EA7;&#x751F;&#x5B83;&#x4EEC;&#x7684;&#x952E;&#x76D8;&#x7801;&#xFF0C;&#x4FEE;&#x9970;&#x6807;&#x8BB0;&#x3002;&#x8BE5;&#x6570;&#x636E;&#x88AB;&#x53D1;&#x9001;&#x7ED9;&#x65B9;&#x6CD5;- (BOOL)inputText:key:modifiers:client:&#xFF0C;&#x4F60;&#x5E94;&#x5F53;&#x5B9E;&#x73B0;&#x8BE5;&#x65B9;&#x6CD5;&#x3002; &#x6309;&#x7167;&#x4E0E;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x540C;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;- (BOOL)inputText:key:modifiers:client:&#x5E76;&#x89C2;&#x5BDF;&#x7CFB;&#x7EDF;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#xFF1A; 123456789- (BOOL)inputText:(NSString*)string key:(NSInteger)keyCode modifiers:(NSUInteger)flags client:(id)sender{ NSLog(@&quot;inputText:%@ key:0x%2lX modifiers:0x%4lX&quot;, string, (long)keyCode, (unsigned long)flags); return NO;} &#x5982;&#x679C;&#x65E2;&#x5B9E;&#x73B0;&#x4E86;input&#x200B;Text:&#x200B;client:&#x200B;&#x53C8;&#x5B9E;&#x73B0;&#x4E86;input&#x200B;Text:&#x200B;key:&#x200B;modifiers:&#x200B;client:&#x200B;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x8C03;&#x7528;&#x540E;&#x8005;&#x3002;&#x5207;&#x51FA;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x6309;&#x4E0B;a&#x3001;shift-a&#x3001;Ctrl-a&#x3001;Backspace&#x3001;&#x56DE;&#x8F66;&#x3001;Tab&#x4EE5;&#x53CA;&#x2192;&#x952E;&#xFF0C;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x8F93;&#x51FA;&#xFF1A; 1234567817/3/24 &#x4E0A;&#x5348;1:17:03.266 IMKSample[7202]: inputText:a key:0x 0 modifiers:0x 017/3/24 &#x4E0A;&#x5348;1:17:06.854 IMKSample[7202]: inputText:A key:0x 0 modifiers:0x2000017/3/24 &#x4E0A;&#x5348;1:17:08.136 IMKSample[7202]: inputText: key:0x 0 modifiers:0x4000017/3/24 &#x4E0A;&#x5348;1:17:10.206 IMKSample[7202]: inputText: key:0x33 modifiers:0x 017/3/24 &#x4E0A;&#x5348;1:17:10.972 IMKSample[7202]: inputText: key:0x24 modifiers:0x 017/3/24 &#x4E0A;&#x5348;1:17:13.244 IMKSample[7202]: inputText: key:0x30 modifiers:0x 017/3/24 &#x4E0A;&#x5348;1:17:16.203 IMKSample[7202]: inputText:&#xF703; key:0x7C modifiers:0xA00000 &#x5B9E;&#x73B0;&#x65B9;&#x6CD5; &#x5728;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#x5B9E;&#x73B0;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x5F88;&#x50CF;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x628A;&#x5728;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x91CC;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x653E;&#x5728;input&#x200B;Text:&#x200B;key:&#x200B;modifiers:&#x200B;client:&#x200B;&#x8FD9;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x91CC;&#x5E72;&#x4E86;&#x3002;mac&#x4E3A;keyCode&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x5957;&#x5E38;&#x91CF;&#xFF0C;&#x4F4D;&#x4E8E;Events.h&#x4E2D;&#x7684;kVK_ANSI_xxx&#x3002;&#x6839;&#x636E;&#x4F20;&#x5165;&#x7684;&#x6309;&#x952E;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5B57;&#x7B26;&#x5219;&#x8FFD;&#x52A0;&#x5165;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7A7A;&#x683C;&#x6216;&#x56DE;&#x8F66;&#xFF0C;&#x4E14;&#x5199;&#x4F5C;&#x4E32;&#x975E;&#x7A7A;&#xFF0C;&#x5219;&#x4E0A;&#x5C4F;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324- (BOOL)inputText:(NSString*)string key:(NSInteger)keyCode modifiers:(NSUInteger)flags client:(id)sender{ NSLog(@&quot;inputText:%@ key:0x%02lX modifiers:0x%04lX&quot;, string, (long)keyCode, (unsigned long)flags); unichar key = [string characterAtIndex:0]; if((key &gt;= &apos;a&apos; &amp;&amp; key &lt;= &apos;z&apos;) || (key &gt;= &apos;0&apos; &amp;&amp; key &lt;= &apos;9&apos;)) { // &#x5982;&#x679C;&#x662F;&#x5B57;&#x7B26;&#x5219;&#x8FFD;&#x52A0;&#x5230;&#x5199;&#x4F5C;&#x4E32; [self appendComposedString:string client:sender]; return YES; } if((keyCode == kVK_Space || keyCode == kVK_Return) &amp;&amp; [[self composedString] length]&gt;0) { // &#x5982;&#x679C;&#x662F;&#x7A7A;&#x683C;&#x6216;&#x56DE;&#x8F66;&#x4E14;&#x6709;&#x5199;&#x4F5C;&#x4E32;&#x5219;&#x4E0A;&#x5C4F; [self commitComposedString:sender]; return YES; } return NO;} &#x672C;&#x8282;&#x7684;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x53C2;&#x89C1;macIMKSample v1.2&#x3002; # &#x5904;&#x7406;&#x6240;&#x6709;&#x4E8B;&#x4EF6; &gt; &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#x8F93;&#x5165;&#x6CD5;&#x4F1A;&#x63A5;&#x6536;&#x5230;&#x6765;&#x81EA;&#x6587;&#x672C;&#x670D;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x88AB;&#x5C01;&#x88C5;&#x4E3A;NSEvent&#x5BF9;&#x8C61;&#x3002;&#x4F60;&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;handle&#x200B;Event:&#x200B;client:&#x200B;&#x3002; &#x540C;&#x7406;&#xFF0C;&#x53EF;&#x4EE5;&#x6253;&#x5370;handle&#x200B;Event:&#x200B;client:&#x200B;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x770B;&#x7CFB;&#x7EDF;&#x90FD;&#x4F20;&#x5165;&#x4E86;&#x4EC0;&#x4E48;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x8F93;&#x5165;&#x6CD5;&#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86;&#x4E09;&#x79CD;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F7F;&#x7528;&#x5B83;&#x4EEC;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x662F;&#xFF1A;&#x5904;&#x7406;&#x6587;&#x672C;&#x6570;&#x636E;&gt;&#x5904;&#x7406;&#x6240;&#x6709;&#x4E8B;&#x4EF6;&gt;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x3002;&#x6240;&#x4EE5;&#x5728;&#x5B9E;&#x73B0;handle&#x200B;Event:&#x200B;client:&#x200B;&#x4E4B;&#x524D;&#x5FC5;&#x987B;&#x628A;input&#x200B;Text:&#x200B;key:&#x200B;modifiers:&#x200B;client:&#x200B;&#x6CE8;&#x6389;&#x3002;&#x6B64;&#x5916;&#x8FD8;&#x8981;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;recognizedEvents:`&#x5E76;&#x8FD4;&#x56DE;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x4EF6;&#xFF1A; 123456789- (NSUInteger)recognizedEvents:(id)sender { return NSEventMaskFlagsChanged | NSEventMaskKeyDown | NSEventMaskKeyUp;}- (BOOL)handleEvent:(NSEvent *)event client:(id)sender{ NSLog(@&quot;%@&quot;, event); return NO;} &#x5207;&#x51FA;&#x8F93;&#x5165;&#x6CD5;&#x6309;&#x4E0B;&#xFF1A;a&#x3001;shift&#x3001;control&#x3001;option&#x3001;command&#x770B;&#x5230;&#x5982;&#x4E0B;&#x8F93;&#x51FA;&#xFF1A; 12345678910... NSEvent: type=KeyDown ... flags=0 win=0x0 winNum=0 ctxt=0x0 chars=&quot;a&quot; unmodchars=&quot;a&quot; repeat=0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0x20000 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0x40000 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0x80000 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0x100000 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0 win=0x0 winNum=0 ctxt=0x0 keyCode=0... NSEvent: type=FlagsChanged ... flags=0x100000 win=0x0 winNum=0 ctxt=0x0 keyCode=0 &#x53EF;&#x89C1;&#xFF0C;&#x63A5;&#x7BA1;&#x6240;&#x6709;&#x4E8B;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x6536;&#x5230;shift&#x3001;control&#x3001;option&#x3001;command&#x7B49;&#x6309;&#x952E;&#xFF0C;&#x8FD9;&#x5728;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x6216;&#x5904;&#x7406;&#x6587;&#x672C;&#x6570;&#x636E;&#x7684;&#x65B9;&#x5F0F;&#x4E0B;&#x662F;&#x6536;&#x4E0D;&#x5230;&#x7684;&#x3002;&#x4ECE;recognizedEvents:&#x7684;&#x8FD4;&#x56DE;&#x6765;&#x770B;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x5E94;&#x8BE5;&#x80FD;&#x54CD;&#x5E94;&#x6BCF;&#x4E2A;&#x6309;&#x952E;&#x7684;&#x6309;&#x4E0B;&#x62AC;&#x8D77;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x5374;&#x53EA;&#x80FD;&#x6536;&#x5230;&#x63A7;&#x5236;&#x952E;&#x7684;&#x62AC;&#x8D77;&#xFF0C;&#x6536;&#x4E0D;&#x5230;&#x5B57;&#x7B26;&#x7684;&#x6309;&#x952E;&#x62AC;&#x8D77;&#x4E8B;&#x4EF6;&#x3002; &#x5B9E;&#x73B0;&#x65B9;&#x6CD5; &#x8981;&#x5B9E;&#x73B0;&#x4E0E;&#x524D;&#x9762;&#x540C;&#x7B49;&#x529F;&#x80FD;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x9700;&#x8981;&#x5728;handle&#x200B;Event:&#x200B;client:&#x200B;&#x51FD;&#x6570;&#x4E2D;&#x5224;&#x65AD;&#x5982;&#x679C;&#x662F;&#x5B57;&#x7B26;&#x6309;&#x952E;&#x5219;&#x7F13;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x56DE;&#x8F66;&#x6216;&#x7A7A;&#x683C;&#x5219;&#x4E0A;&#x5C4F;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718- (BOOL)handleEvent:(NSEvent *)event client:(id)sender{ NSLog(@&quot;%@&quot;, event); if([event type] == NSKeyDown){ unichar key = [[event characters] characterAtIndex:0]; if((key &gt;= &apos;a&apos; &amp;&amp; key &lt;= &apos;z&apos;) ||(key &gt;= &apos;0&apos; &amp;&amp; key &lt;= &apos;9&apos;)){ [self appendComposedString:[event characters] client:sender]; return YES; } if(([event keyCode] == kVK_Space || [event keyCode] == kVK_Return)&amp;&amp; [[self composedString] length] &gt; 0) { [self commitComposedString:sender]; return YES; } } return NO;} &#x672C;&#x8282;&#x7684;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x53C2;&#x89C1;macIMKSample v1.3&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOS下开发Custom Keyboard]]></title>
    <url>%2F2017%2F03%2F11%2F2017%2F0311iOSCKImeSample%2F</url>
    <content type="text"><![CDATA[iOS&#x4E0B;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x521B;&#x5EFA;&#x65B9;&#x6CD5;&#x5728;&#x300A;Custom Keyboard&#xFF08;&#x8BD1;&#xFF09;&#x300B;&#x4E2D;&#x6709;&#x8BE6;&#x7EC6;&#x63CF;&#x8FF0;&#xFF0C;&#x5B83;&#x751F;&#x6210;&#x7684;&#x952E;&#x76D8;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x767D;&#x677F;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x628A;&#x5B83;&#x5B8C;&#x5584;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x6837;&#x5B50;&#x3002; &#x9879;&#x76EE;&#x7684;&#x540D;&#x79F0;&#x4E3A;iOSCKImeSample&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x5BB9;&#x5668;app&#x7684;&#x540D;&#x5B57;&#x3002;&#x952E;&#x76D8;&#x7684;Target name&#x4E3A;CKbd&#x3002; &#x5728;&#x5BB9;&#x5668;app&#x4E2D;&#x6DFB;&#x52A0;&#x53EF;&#x8F93;&#x5165;&#x5BF9;&#x8C61; &#x5982;&#x56FE;&#xFF0C;&#x5728;&#x5BB9;&#x5668;app&#x4E2D;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x63A7;&#x4EF6;&#xFF0C;&#x4EE5;&#x4FBF;&#x9A8C;&#x8BC1;&#x952E;&#x76D8;&#xFF1A; Xcode&#x6A21;&#x677F;&#x751F;&#x6210;&#x7684;&#x952E;&#x76D8; &#x5148;&#x6765;&#x770B;&#x770B;Xcode&#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x6837;&#x5B50;&#xFF1A; &#x5728;iOSCKImeSampleCKbd/KeyboardViewController.m&#x4E2D;&#xFF0C; KeyboardViewController::viewDidLoad&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122- (void)viewDidLoad { [super viewDidLoad]; // &#x751F;&#x6210;&#x65B9;&#x5F62;&#x5706;&#x89D2;&#x6309;&#x94AE; self.nextKeyboardButton = [UIButton buttonWithType:UIButtonTypeSystem]; // &#x8BBE;&#x7F6E;&#x6807;&#x9898;&#xFF0C;&#x548C;&#x72B6;&#x6001; [self.nextKeyboardButton setTitle: NSLocalizedString(@&quot;Next Keyboard&quot;, @&quot;Title for &apos;Next Keyboard&apos; button&quot;) forState:UIControlStateNormal]; // &#x6309;&#x94AE;&#x5C3A;&#x5BF8;&#x4E3A;&#x80FD;&#x5BB9;&#x7EB3;&#x5185;&#x5BB9;&#x7684;&#x6700;&#x5C0F;&#x5316;&#x5C3A;&#x5BF8; [self.nextKeyboardButton sizeToFit]; self.nextKeyboardButton.translatesAutoresizingMaskIntoConstraints = NO; // &#x8BBE;&#x7F6E;&#x54CD;&#x5E94;&#xFF1A;&#x957F;&#x6309;&#x663E;&#x793A;&#x8F93;&#x5165;&#x6CD5;&#x5217;&#x8868;&#xFF0C;&#x77ED;&#x6309;&#x5207;&#x6362;&#x8F93;&#x5165;&#x6CD5; [self.nextKeyboardButton addTarget:self action:@selector(handleInputModeListFromView:withEvent:) forControlEvents:UIControlEventAllTouchEvents]; // &#x5C06;&#x6309;&#x94AE;&#x6DFB;&#x52A0;&#x4E3A;view&#x7684;&#x5B50;&#x89C6;&#x56FE; [self.view addSubview:self.nextKeyboardButton]; // &#x5C06;&#x6309;&#x94AE;&#x5DE6;/&#x4E0B;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50;&#x5230;view&#x7684;&#x5DE6;&#x4E0B;&#x8FB9;&#x7F18; [self.nextKeyboardButton.leftAnchor constraintEqualToAnchor:self.view.leftAnchor].active = YES; [self.nextKeyboardButton.bottomAnchor constraintEqualToAnchor:self.view.bottomAnchor].active = YES;} &#x5B83;&#x76F4;&#x63A5;&#x5728;&#x4E3B;&#x89C6;&#x56FE;&#x4E0A;&#x751F;&#x6210;&#x4E86;&#x4E00;&#x4E2A;Next Keyboard&#x6309;&#x94AE;&#xFF0C;&#x5E76;&#x54CD;&#x5E94;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x3002;&#x5B8C;&#x5584;&#x8BE5;&#x952E;&#x76D8;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;&#x4E3B;&#x89C6;&#x56FE;&#x4E0A;&#x957F;&#x51FA;&#x5B8C;&#x6574;&#x7684;&#x952E;&#x76D8;&#x6309;&#x94AE;&#xFF0C;&#x5E76;&#x54CD;&#x5E94;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x5373;&#x53EF;&#x3002; # Step1 &#x521B;&#x5EFA;&#x6309;&#x952E;&#x5E03;&#x5C40; &#x4E3A;KeyboardViewController&#x6DFB;&#x52A0;&#x51FD;&#x6570;createCKbdUI&#xFF0C;&#x5E76;&#x5728;KeyboardViewController::viewDidLoad&#x4E2D;&#x8C03;&#x7528;&#x5B83;&#xFF1A; 1234- (void)viewDidLoad { [super viewDidLoad]; [self createCKbdUI]; // &#x521B;&#x5EFA;&#x952E;&#x76D8;&#x5E03;&#x5C40;} Step1.1 createCKbdUI 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576- (void)createCKbdUI{ self.allButtons= [NSMutableArray array]; self.isPressShiftKey= NO; // &#x5B9A;&#x4E49;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x952E;&#x5E3D;&#x5B57;&#x7B26; NSArray *titles = @[@[@&quot;q&quot;,@&quot;w&quot;,@&quot;e&quot;,@&quot;r&quot;,@&quot;t&quot;,@&quot;y&quot;,@&quot;u&quot;,@&quot;i&quot;,@&quot;o&quot;,@&quot;p&quot;], @[@&quot;a&quot;,@&quot;s&quot;,@&quot;d&quot;,@&quot;f&quot;,@&quot;g&quot;,@&quot;h&quot;,@&quot;j&quot;,@&quot;k&quot;,@&quot;l&quot;], @[@&quot;shift&quot;,@&quot;z&quot;,@&quot;x&quot;,@&quot;c&quot;,@&quot;v&quot;,@&quot;b&quot;,@&quot;n&quot;,@&quot;m&quot;,@&quot;bksp&quot;], @[@&quot;123&quot;,@&quot;next&quot;,@&quot;space&quot;,@&quot;return&quot;]]; // &#x4E3A;&#x6BCF;&#x4E00;&#x884C;&#x521B;&#x5EFA;&#x89C6;&#x56FE;&#xFF0C;&#x5E76;&#x52A0;&#x5165;&#x4E3B;&#x89C6;&#x56FE; NSMutableArray *rowViews = [NSMutableArray array]; for(NSArray *rowTitle in titles){ UIView* view = [self createRowOfButtons:rowTitle]; // &#x1F3C1; [self.view addSubview:view]; [rowViews addObject:view]; } // &#x4E3A;&#x6BCF;&#x884C;&#x89C6;&#x56FE;&#x6DFB;&#x52A0;&#x7EA6;&#x675F; for(UIView *rowView in rowViews) { NSInteger index = [rowViews indexOfObject:rowView]; rowView.translatesAutoresizingMaskIntoConstraints = NO; // &#x5DE6;&#x53F3;&#x90FD;&#x4E0E;&#x4E3B;&#x89C6;&#x56FE;&#x7684;&#x5DE6;&#x53F3;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50; NSLayoutConstraint *rightConstraint = [NSLayoutConstraint constraintWithItem:rowView attribute:NSLayoutAttributeRight relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeRight multiplier:1.0 constant:0]; NSLayoutConstraint *leftConstraint = [NSLayoutConstraint constraintWithItem:rowView attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0]; // &#x9996;&#x884C;view&#x4E0E;&#x4E3B;&#x89C6;&#x56FE;&#x4E0A;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50;&#xFF0C;&#x4E4B;&#x540E;&#x7684;&#x4E0E;&#x4E0A;&#x90BB;view&#x4E0B;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50; id toItem = self.view; NSLayoutAttribute toItemAttribute = NSLayoutAttributeTop; if(index &gt; 0){ toItem = rowViews[index - 1]; toItemAttribute = NSLayoutAttributeBottom; } NSLayoutConstraint *topConstraint = [NSLayoutConstraint constraintWithItem:rowView attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:toItem attribute:toItemAttribute multiplier:1.0 constant:0]; // &#x672B;&#x884C;view&#x4E0E;&#x4E3B;&#x89C6;&#x56FE;&#x4E0B;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x4E0E;&#x4E0B;&#x90BB;view&#x4E0A;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50; toItem = self.view; toItemAttribute = NSLayoutAttributeBottom; if(index &lt; rowViews.count - 1){ toItem = rowViews[index +1]; toItemAttribute = NSLayoutAttributeTop; } NSLayoutConstraint *buttomConstraint = [NSLayoutConstraint constraintWithItem:rowView attribute:NSLayoutAttributeBottom relatedBy:NSLayoutRelationEqual toItem:toItem attribute:toItemAttribute multiplier:1.0 constant:0]; // &#x7B49;&#x9AD8;&#x7EA6;&#x675F; UIView *firstRow = rowViews[0]; NSLayoutConstraint *heightConstraint = [NSLayoutConstraint constraintWithItem:firstRow attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:rowView attribute:NSLayoutAttributeHeight multiplier:1.0 constant:0]; [self.view addConstraint:heightConstraint]; [self.view addConstraints:@[leftConstraint,rightConstraint,topConstraint,buttomConstraint]]; }} Step1.2 createRowOfButtons &#x6839;&#x636E;buttonTitles&#x521B;&#x5EFA;&#x5305;&#x542B;&#x4E00;&#x6392;&#x6309;&#x952E;&#x7684;&#x89C6;&#x56FE; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990- (UIView* )createRowOfButtons:(NSArray*)buttonTitles{ // &#x4E3A;&#x6BCF;&#x884C;&#x6309;&#x952E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;view UIView *keyBoardRowView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 50)]; NSMutableArray *buttons = [NSMutableArray array]; //&#x904D;&#x5386;title&#xFF0C;&#x4F9D;&#x6B21;&#x521B;&#x5EFA;&#x6309;&#x952E;&#xFF0C;&#x5E76;&#x52A0;&#x5165;&#x5230;keyBoardRowView for(NSString *title in buttonTitles) { UIButton *btn = [UIButton buttonWithType:(UIButtonTypeSystem)]; btn.frame = CGRectMake(0, 0, 20, 30); [btn setTitle:title forState:(UIControlStateNormal)]; [btn sizeToFit]; [btn.layer setBorderWidth:1.0]; btn.titleLabel.font = [UIFont systemFontOfSize:15]; [btn setTranslatesAutoresizingMaskIntoConstraints:false]; [btn setTitleColor:[UIColor darkGrayColor] forState:(UIControlStateNormal)]; // &#x6307;&#x5B9A;&#x54CD;&#x5E94;&#x51FD;&#x6570; [btn addTarget:self action:@selector(didTapButton:) forControlEvents:(UIControlEventTouchUpInside)]; // &#x1F3C1; [buttons addObject:btn]; [self.allButtons addObject:btn]; [keyBoardRowView addSubview:btn]; } // &#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#xFF0C;&#x8BBE;&#x7F6E;&#x7EA6;&#x675F; for(UIButton *button in buttons) { NSInteger space = 1; // &#x8FB9;&#x8DDD; NSInteger index = [buttons indexOfObject:button]; //&#x5173;&#x95ED;button&#x81EA;&#x52A8;&#x7FFB;&#x8BD1;&#x7EA6;&#x675F;&#x7684;&#x529F;&#x80FD; button.translatesAutoresizingMaskIntoConstraints = NO; // button &#x9876;&#x90E8;&#x4E0E;keyboardView&#x9876;&#x90E8;&#x5BF9;&#x9F50; NSLayoutConstraint *topConstraint = [NSLayoutConstraint constraintWithItem:button attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:keyBoardRowView attribute:NSLayoutAttributeTop multiplier:1.0 constant:space]; // button &#x5E95;&#x90E8;&#x4E0E;keyboardView&#x5E95;&#x90E8;&#x5BF9;&#x9F50; NSLayoutConstraint *bottomConstraint = [NSLayoutConstraint constraintWithItem:button attribute:NSLayoutAttributeBottom relatedBy:NSLayoutRelationEqual toItem:keyBoardRowView attribute:NSLayoutAttributeBottom multiplier:1.0 constant:-space]; // &#x884C;&#x9996;button&#x4E0E;keyboardView&#x5DE6;&#x4FA7;&#x5BF9;&#x9F50;&#xFF0C;&#x4E4B;&#x540E;&#x7684;&#x4E0E;&#x5DE6;&#x90BB;button&#x53F3;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50; id toItem = keyBoardRowView; NSLayoutAttribute toItemAttribute = NSLayoutAttributeLeft; if (index &gt; 0){ toItem = buttons[index - 1]; toItemAttribute = NSLayoutAttributeRight; } NSLayoutConstraint *leftConstraint = [NSLayoutConstraint constraintWithItem:button attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEqual toItem:toItem attribute:toItemAttribute multiplier:1.0 constant:space]; // &#x884C;&#x672B;button&#x4E0E;keyboardView&#x53F3;&#x4FA7;&#x5BF9;&#x9F50;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x4E0E;&#x53F3;&#x90BB;button&#x5DE6;&#x8FB9;&#x7F18;&#x5BF9;&#x9F50; toItem = keyBoardRowView; toItemAttribute = NSLayoutAttributeRight; if(index &lt; buttons.count - 1){ toItem = buttons[index + 1]; toItemAttribute = NSLayoutAttributeLeft; } NSLayoutConstraint *rightConstraint = [NSLayoutConstraint constraintWithItem:button attribute:NSLayoutAttributeRight relatedBy:NSLayoutRelationEqual toItem:toItem attribute:toItemAttribute multiplier:1.0 constant:-space]; // &#x6BCF;&#x4E2A;&#x6309;&#x952E;&#x90FD;&#x7B49;&#x5BBD; UIButton *firstButton = buttons[0]; NSLayoutConstraint *widthConstraint = [NSLayoutConstraint constraintWithItem:firstButton attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:button attribute:NSLayoutAttributeWidth multiplier:1.0 constant:0]; [keyBoardRowView addConstraint:widthConstraint]; [keyBoardRowView addConstraints:@[topConstraint,bottomConstraint,rightConstraint,leftConstraint]]; } return keyBoardRowView;} &#x8FD0;&#x884C;&#x540E;&#x80FD;&#x770B;&#x5230;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x5982;&#x4E0B;&#xFF1A; # Step2 &#x6307;&#x5B9A;&#x952E;&#x76D8;&#x54CD;&#x5E94;&#x51FD;&#x6570; &#x5728;Step1.2&#x521B;&#x5EFA;&#x6BCF;&#x4E2A;&#x6309;&#x952E;&#x540E;&#xFF0C;&#x8C03;&#x7528;addTarget&#x4E3A;&#x4E4B;&#x6307;&#x5B9A;&#x54CD;&#x5E94;&#x51FD;&#x6570;didTapButton: 12345678910111213141516171819202122232425262728293031- (void)didTapButton:(UIButton*)sender{ //&#x83B7;&#x53D6;&#x88AB;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x7684;title NSString *title = [sender titleForState:(UIControlStateNormal)]; if([title caseInsensitiveCompare:@&quot;shift&quot;] == NSOrderedSame){ self.isPressShiftKey = !self.isPressShiftKey; [self onShift]; // &#x5207;&#x6362;&#x5927;&#x5C0F;&#x5199; }else if([title caseInsensitiveCompare:@&quot;bksp&quot;] == NSOrderedSame){ [self.textDocumentProxy deleteBackward]; }else if([title caseInsensitiveCompare:@&quot;space&quot;] == NSOrderedSame){ [self.textDocumentProxy insertText:@&quot; &quot;]; }else if([title caseInsensitiveCompare:@&quot;return&quot;] == NSOrderedSame){ [self.textDocumentProxy insertText:@&quot;\n&quot;]; }else if([title caseInsensitiveCompare:@&quot;next&quot;] == NSOrderedSame){ [self advanceToNextInputMode]; }else{ [self.textDocumentProxy insertText:title]; }}- (void)onShift{ // &#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#xFF0C;&#x5207;&#x6362;&#x952E;&#x5E3D;&#x5927;&#x5C0F;&#x5199; for(UIButton *button in self.allButtons) { NSString *title = [button titleForState:UIControlStateNormal]; if (self.isPressShiftKey) { title = [title uppercaseString]; }else{ title = [title lowercaseString]; } [button setTitle:title forState:(UIControlStateNormal)]; }} &#x53C2;&#x89C1;&#x300A;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E4B;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;API&#x300B;&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x952E;&#x76D8;&#x4E0E;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x4EA4;&#x4E92;&#x7684;API&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x8F93;&#x5165;&#x6CD5;&#x5904;&#x7406;&#x6309;&#x952E;&#x4E3B;&#x8981;&#x8C03;&#x7528;&#x7684;API&#x3002; &#x603B;&#x7ED3; &#x5230;&#x6B64;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x53EF;&#x5904;&#x7406;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x3002;&#x548C;Windows&#x7684;IMM&#x6846;&#x67B6;&#x76F8;&#x6BD4;&#xFF0C;iOS&#x7684;Custom Keyboard&#x4F53;&#x7CFB;&#x8BA9;&#x8F93;&#x5165;&#x6CD5;&#x80FD;&#x6700;&#x5C0F;&#x5316;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#xFF0C;&#x8981;&#x7B80;&#x5355;&#x592A;&#x591A;&#x4E86;&#x3002;&#x6211;&#x5206;&#x6790;&#x539F;&#x56E0;&#x5982;&#x4E0B;&#xFF1A; * &#x624B;&#x673A;&#x4E0A;&#x7684;&#x6309;&#x952E;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#x6765;&#x81EA;&#x952E;&#x76D8;&#x754C;&#x9762;&#xFF1B;&#x800C;Windows&#x7684;IMM&#x5219;&#x6765;&#x81EA;&#x7CFB;&#x7EDF;&#xFF0C;&#x56E0;&#x6B64;Windows&#x987B;&#x5B9A;&#x4E49;&#x4E00;&#x5957;&#x534F;&#x8BAE;&#x8BA9;&#x6309;&#x952E;&#x4ECE;IMM&#x4F20;&#x9012;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x90A3;&#x5341;&#x51E0;&#x4E2A;Imexxx&#x7684;&#x5BFC;&#x51FA;&#x51FD;&#x6570;&#x3002; * &#x800C;&#x4E14;Windows&#x5904;&#x7406;&#x6BCF;&#x4E2A;&#x6309;&#x952E;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5BFC;&#x51FA;&#x51FD;&#x6570;&#x5C31;&#x80FD;&#x5B8C;&#x6210;&#xFF0C;&#x800C;&#x9700;&#x8981;ImeProcessKey&#x548C;ImeToAsciiEx&#x4E24;&#x6B21;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x4E00;&#x76F4;&#x4E0D;&#x7406;&#x89E3;&#x7684;&#x5730;&#x65B9;&#x3002; * iOS&#x4E0B;&#x5904;&#x7406;&#x6309;&#x952E;&#x662F;&#x7531;&#x952E;&#x76D8;&#x89C6;&#x56FE;&#x9A71;&#x52A8;&#xFF0C;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x89C6;&#x56FE;&#x65B9;&#x6CD5;&#x66F4;&#x65B0;&#x754C;&#x9762;&#xFF1B;&#x800C;Windows&#x5904;&#x7406;&#x5B8C;&#x6309;&#x952E;&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x754C;&#x9762;&#x66F4;&#x65B0;&#xFF0C;&#x800C;&#x662F;&#x628A;&#x5F85;&#x66F4;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x8F6C;&#x6362;&#x6210;&#x6D88;&#x606F;&#xFF0C;&#x901A;&#x77E5;&#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x53E3;&#xFF0C;UI&#x7A97;&#x53E3;&#x518D;&#x628A;&#x6D88;&#x606F;&#x7FFB;&#x8BD1;&#x6210;&#x66F4;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5C55;&#x73B0;&#x5230;&#x5B50;&#x7A97;&#x53E3;&#x4E0A;&#x3002;&#x8FD9;&#x76F8;&#x5F53;&#x4E8E;&#x7CFB;&#x7EDF;&#x6709;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x5C42;WM_IME_xxx&#x7684;&#x6D88;&#x606F;&#x534F;&#x8BAE;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A7;&#x5236;&#x754C;&#x9762;&#x5462;&#xFF1F;&#x5E94;&#x8BE5;&#x662F;&#x6015;&#x5361;&#x6B7B;&#x4E3B;&#x8FDB;&#x7A0B;&#xFF0C;&#x8BD5;&#x60F3;&#x4E00;&#x822C;&#x7684;Windows UI&#x7A0B;&#x5E8F;&#xFF0C;&#x5047;&#x8BBE;&#x8981;&#x5B9A;&#x65F6;&#x5237;&#x65B0;&#x754C;&#x9762;&#xFF0C;&#x4E0D;&#x662F;&#x5728;&#x5B9A;&#x65F6;&#x5668;&#x91CC;&#x76F4;&#x63A5;&#x7ED8;&#x5236;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x5B9A;&#x65F6;&#x5668;&#x91CC;&#x8BBE;&#x7F6E;&#x65E0;&#x6548;&#x533A;&#x57DF;&#xFF0C;&#x5728;WM_PAINT&#x6D88;&#x606F;&#x4E2D;&#x5904;&#x7406;&#x7ED8;&#x5236;&#x3002; * Windows&#x7684;IMC&#x662F;&#x6BCF;&#x7EBF;&#x7A0B;&#x4E00;&#x4EFD;&#xFF0C;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8FDB;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#x7126;&#x70B9;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x6301;&#x4E0A;&#x6B21;&#x7684;&#x8F93;&#x5165;&#x72B6;&#x6001;&#x548C;&#x5185;&#x5BB9;&#xFF0C;&#x4F46;&#x4E5F;&#x8BA9;&#x6570;&#x636E;&#x548C;&#x5BF9;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7684;&#x5904;&#x7406;&#x5FC5;&#x987B;&#x5206;&#x79BB;&#x5F00;&#xFF1B;&#x800C;iOS&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;&#x5219;&#x4E0E;&#x8F93;&#x5165;app&#x65E0;&#x5173;&#xFF0C;&#x5F53;&#x8F93;&#x5165;&#x7126;&#x70B9;&#x5207;&#x6362;&#xFF0C;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;&#x4E5F;&#x5C31;&#x4E22;&#x5931;&#x4E86;&#x3002;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;&#x8F93;&#x5165;&#x6CD5;&#x4E0D;&#x5FC5;&#x8D1F;&#x8D23;&#x6839;&#x636E;&#x4E0A;&#x4E0B;&#x6587;&#x6062;&#x590D;&#x5F53;&#x524D;&#x72B6;&#x6001;&#xFF0C;&#x7701;&#x53BB;&#x4E86;&#x903B;&#x8F91;&#x7684;&#x590D;&#x6742;&#x6027;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x5728;Windows&#x4E0B;&#x72B6;&#x6001;&#x673A;&#x505A;&#x5F97;&#x6F02;&#x4EAE;&#xFF0C;&#x8FD9;&#x4E2A;&#x590D;&#x6742;&#x5EA6;&#x5012;&#x4E5F;&#x4E0D;&#x5927;&#xFF0C;&#x8FD9;&#x9700;&#x8981;&#x4ED8;&#x51FA;&#x66F4;&#x5927;&#x7684;&#x8BBE;&#x8BA1;&#x6210;&#x672C;&#x3002; * iOS&#x5E95;&#x5C42;&#x4E00;&#x5B9A;&#x6709;&#x66F4;&#x4FBF;&#x5229;&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x673A;&#x5236;&#xFF0C;&#x8BA9;&#x8F93;&#x5165;&#x6CD5;&#x53EF;&#x4EE5;&#x548C;&#x8F93;&#x5165;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#xFF1B;&#x8FD9;&#x662F;Windows&#x6240;&#x4E0D;&#x5177;&#x5907;&#x7684;&#x3002;iOS&#x8FD9;&#x4E2A;&#x673A;&#x5236;&#x8BA9;&#x8F93;&#x5165;&#x6CD5;&#x66F4;&#x65B9;&#x4FBF;&#x3001;&#x51C6;&#x786E;&#x5730;&#x83B7;&#x5F97;&#x8F93;&#x5165;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x66F4;&#x597D;&#x7684;&#x8054;&#x60F3;&#x5019;&#x9009;&#x3002; &#x534F;&#x8BAE;&#x4E3A;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x7684;&#x4EA4;&#x4E92;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x5C42;&#xFF0C;&#x4F7F;&#x5F97;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x89E3;&#x9664;&#x4E86;&#x8026;&#x5408;&#xFF0C;&#x4F46;&#x540C;&#x65F6;&#x4E5F;&#x589E;&#x52A0;&#x4E86;&#x5B66;&#x4E60;&#x6210;&#x672C;&#xFF0C;&#x5982;&#x679C;&#x539F;&#x672C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x5176;&#x5185;&#x90E8;&#x8C03;&#x7528;&#x4E5F;&#x7528;&#x534F;&#x8BAE;&#x6765;&#x9694;&#x79BB;&#xFF0C;&#x90A3;&#x5C31;&#x4F1A;&#x628A;&#x4E8B;&#x60C5;&#x590D;&#x6742;&#x5316;&#x3002;Windows&#x7684;Imexxx&#x5BFC;&#x51FA;&#x51FD;&#x6570;&#x8FD9;&#x5C42;&#x534F;&#x8BAE;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x4F46;&#x8FD9;&#x5341;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x5FC5;&#x987B;&#x7684;&#x4E5F;&#x5C31;&#x56DB;&#x4E94;&#x4E2A;&#xFF0C;&#x5176;&#x5B83;&#x5927;&#x90E8;&#x5206;&#x7528;&#x4E0D;&#x5230;&#xFF1B;WM_IME_xxx&#x8FD9;&#x5C42;&#x534F;&#x8BAE;&#x5C31;&#x628A;&#x4E8B;&#x60C5;&#x5F04;&#x590D;&#x6742;&#x4E86;&#xFF0C;&#x4F46;&#x53C8;&#x4E0D;&#x5F97;&#x4E0D;&#x8FD9;&#x4E48;&#x505A;&#x3002;Windows&#x6BCF;&#x7EBF;&#x7A0B;&#x4E00;&#x4EFD;&#x7684;IMC&#x5374;&#x5BF9;&#x8BBE;&#x8BA1;&#x63D0;&#x51FA;&#x66F4;&#x9AD8;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x5E26;&#x6765;&#x591A;&#x5927;&#x7684;&#x597D;&#x5904;&#xFF0C;&#xFF0C;&#x6BD4;&#x5982;macOS&#x4E0B;&#x4E5F;&#x6CA1;&#x6709;&#x57FA;&#x4E8E;&#x8FDB;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x7684;&#x8F93;&#x5165;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x4E5F;&#x4E0D;&#x89C9;&#x5F97;&#x7F3A;&#x61BE;&#x3002;&#x4EE5;&#x4E0A;&#x5C31;&#x662F;Windows&#x7684;IMM&#x6846;&#x67B6;&#x6BD4;iOS&#x590D;&#x6742;&#x7684;&#x539F;&#x56E0;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOS下的自定义键盘（译）]]></title>
    <url>%2F2017%2F03%2F07%2F2017%2F0307CustomKeyboard%2F</url>
    <content type="text"><![CDATA[&#xFF08;&#x672C;&#x6587;&#x6765;&#x81EA;&#x300A;Custom Keyboard&#x300B;&#xFF09; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E3A;&#x90A3;&#x4E9B;&#x5E0C;&#x671B;&#x4F53;&#x9A8C;&#x66F4;&#x65B0;&#x9896;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x6216;&#x8005;&#x9700;&#x8981;&#x7528;&#x5230;iOS&#x4E0D;&#x652F;&#x6301;&#x7684;&#x8BED;&#x8A00;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x66FF;&#x4EE3;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x7684;&#x5907;&#x9009;&#x3002;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x6838;&#x5FC3;&#x529F;&#x80FD;&#x5F88;&#x7B80;&#x5355;&#xFF1A;&#x54CD;&#x5E94;&#x6309;&#x952E;&#x3001;&#x624B;&#x52BF;&#x6216;&#x5176;&#x5B83;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x6587;&#x672C;&#x5B57;&#x4E32;&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x5B57;&#x4E32;&#x63D2;&#x5165;&#x5230;&#x5F53;&#x524D;&#x7684;&#x5149;&#x6807;&#x4F4D;&#x7F6E;&#x3002; &gt; ** &#x5F00;&#x59CB;&#x9605;&#x8BFB;&#x524D; ** &gt; &#x8BF7;&#x5148;&#x786E;&#x8BA4;&#x4F60;&#x9700;&#x8981;&#x5F00;&#x53D1;&#x7684;&#x7684;&#x786E;&#x662F;&#x7CFB;&#x7EDF;&#x8303;&#x56F4;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002;&#x5982;&#x679C;&#x53EA;&#x662F;&#x5E0C;&#x671B;&#x5728;&#x4F60;&#x7684;app&#x5185;&#x90E8;&#x63D0;&#x4F9B;&#x53EF;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x952E;&#x76D8;&#xFF0C;&#x53EF;&#x4EE5;&#x5230;&#x300A;Custom Views for Data Input &#x300B;&#x548C;&#x300A;Text Programming Guide for iOS&#x300B;&#x4E86;&#x89E3;&#x81EA;&#x5B9A;&#x4E49;&#x8F93;&#x5165;&#x89C6;&#x56FE;&#x548C;&#x8F93;&#x5165;&#x8F85;&#x52A9;&#x89C6;&#x56FE;&#x7684;&#x76F8;&#x5173;&#x5185;&#x5BB9;&#xFF0C;iOS SDK&#x4E3A;&#x6B64;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x5907;&#x9009;&#x65B9;&#x6848;&#x3002; &#x5F53;&#x7528;&#x6237;&#x9009;&#x62E9;&#x4E86;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#xFF0C;&#x8BE5;&#x952E;&#x76D8;&#x5373;&#x6210;&#x4E3A;&#x6BCF;&#x4E2A;app&#x7684;&#x952E;&#x76D8;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4F60;&#x521B;&#x5EFA;&#x7684;&#x952E;&#x76D8;&#x5FC5;&#x987B;&#x5305;&#x542B;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x529F;&#x80FD;&#x3002;&#x5176;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x5FC5;&#x987B;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x5207;&#x6362;&#x5230;&#x5176;&#x5B83;&#x952E;&#x76D8;&#x3002; &#x7406;&#x89E3;&#x7528;&#x6237;&#x5BF9;&#x952E;&#x76D8;&#x7684;&#x9884;&#x671F; &#x8981;&#x7406;&#x89E3;&#x7528;&#x6237;&#x5BF9;&#x4E8E;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x9884;&#x671F;&#xFF0C;&#x53EF;&#x4EE5;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x4E3A;&#x6807;&#x6746;&#x2014;&#x2014;&#x5B83;&#x53CD;&#x5E94;&#x7075;&#x654F;&#x4E14;&#x9AD8;&#x6548;&#x3002;&#x5B83;&#x4E0D;&#x4F1A;&#x7528;&#x5783;&#x573E;&#x4FE1;&#x606F;&#x6216;&#x8BF7;&#x6C42;&#x6253;&#x65AD;&#x7528;&#x6237;&#x8F93;&#x5165;&#x3002;&#x5982;&#x679C;&#x4F60;&#x63D0;&#x4F9B;&#x4E86;&#x9700;&#x8981;&#x7528;&#x6237;&#x4EA4;&#x4E92;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5E94;&#x8BE5;&#x628A;&#x5B83;&#x4EEC;&#x653E;&#x5230;&#x952E;&#x76D8;&#x7684;app&#x91CC;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x952E;&#x76D8;&#x4E0A;&#x3002; ## iOS&#x7528;&#x6237;&#x9884;&#x671F;&#x7684;&#x952E;&#x76D8;&#x529F;&#x80FD; &#x6BCF;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x90FD;&#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x7684;iOS&#x7528;&#x6237;&#x6240;&#x9884;&#x671F;&#x7684;&#x952E;&#x76D8;&#x529F;&#x80FD;&#x662F;&#xFF1A;&#x5207;&#x6362;&#x5230;&#x5176;&#x5B83;&#x952E;&#x76D8;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5728;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x5C0F;&#x5730;&#x7403;&#x7684;&#x6309;&#x952E;&#x7528;&#x6765;&#x5B8C;&#x6210;&#x6B64;&#x529F;&#x80FD;&#x3002;iOS 8&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x4E13;&#x95E8;&#x7684;API&#x7528;&#x4E8E;&#x5207;&#x6362;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;&#x300A;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x5207;&#x6362;&#x5230;&#x5176;&#x5B83;&#x952E;&#x76D8;&#x7684;&#x65B9;&#x6CD5;&#x300B;&#x3002; &#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x4F1A;&#x6839;&#x636E;&#x5F53;&#x524D;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x7684;UIKeyboardType&#x5C5E;&#x6027;&#xFF0C;&#x5C55;&#x73B0;&#x4E0E;&#x4E4B;&#x5339;&#x914D;&#x7684;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x3002;&#x5982;&#x679C;&#x5F53;&#x524D;&#x7684;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x9700;&#x8981;&#x8F93;&#x5165;&#x90AE;&#x7BB1;&#xFF0C;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x7684;&#x53E5;&#x53F7;&#x5EFA;&#x5C31;&#x4F1A;&#x53D8;&#x5316;&#xFF1A;&#x957F;&#x6309;&#x4F1A;&#x5192;&#x51FA;&#x4E00;&#x4E9B;&#x9876;&#x7EA7;&#x57DF;&#x540D;&#x7684;&#x540E;&#x7F00;&#x4F5C;&#x4E3A;&#x5019;&#x9009;&#x3002;&#x4F60;&#x5728;&#x8BBE;&#x8BA1;&#x81EA;&#x5DF1;&#x7684;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x65F6;&#x4E5F;&#x5E94;&#x5F53;&#x8003;&#x8651;&#x5230;&#x5F53;&#x524D;&#x7684;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x5C5E;&#x6027;&#x3002; iOS&#x7528;&#x6237;&#x8FD8;&#x671F;&#x671B;&#x81EA;&#x52A8;&#x5927;&#x5199;&#xFF1A;&#x5728;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684;&#x6587;&#x672C;&#x8F93;&#x5165;&#x533A;&#x57DF;&#xFF0C;&#x5BF9;&#x4E8E;&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x8BED;&#x8A00;&#x6765;&#x8BF4;&#xFF0C;&#x5E94;&#x5F53;&#x8BA9;&#x53E5;&#x9996;&#x7684;&#x5B57;&#x6BCD;&#x81EA;&#x52A8;&#x5927;&#x5199;&#x3002; &#x8FD9;&#x7C7B;&#x529F;&#x80FD;&#x5217;&#x51FA;&#x5982;&#x4E0B;&#xFF1A; &#x5BF9;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x8003;&#x8651;&#x9002;&#x5F53;&#x7684;&#x952E;&#x76D8;&#x5E03;&#x5C40; &#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x548C;&#x5EFA;&#x8BAE; &#x81EA;&#x52A8;&#x5927;&#x5199; &#x4E24;&#x4E2A;&#x7A7A;&#x683C;&#x540E;&#x81EA;&#x52A8;&#x6DFB;&#x52A0;&#x53E5;&#x53F7; Caps lock&#x952E;&#x7684;&#x652F;&#x6301; &#x952E;&#x5E3D;&#x4E0A;&#x7684;&#x7F8E;&#x89C2; &#x5BF9;&#x4E8E;&#x8C61;&#x5F62;&#x6587;&#x5B57;&#x7684;&#x591A;&#x5C42;&#x8F6C;&#x6362; &#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x5B9E;&#x73B0;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#xFF1B;&#x7CFB;&#x7EDF;&#x5E76;&#x6CA1;&#x6709;&#x4E3A;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x63D0;&#x4F9B;&#x4E13;&#x7528;&#x7684;API&#xFF0C;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x4E2D;&#x63D0;&#x4F9B;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x7684;&#x4EA7;&#x54C1;&#x66F4;&#x6709;&#x7ADE;&#x4E89;&#x529B;&#x3002; &#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x4E2D;&#x7684;&#x54EA;&#x4E9B;&#x529F;&#x80FD;&#x4E0D;&#x9002;&#x7528;&#x4E8E;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x4E2D;&#x7684;&#x901A;&#x7528;&#x952E;&#x76D8;&#x8BBE;&#x7F6E;&#x6570;&#x636E;&#xFF08;&#x8BBE;&#x7F6E; &gt; &#x901A;&#x7528; &gt; &#x952E;&#x76D8;&#xFF09;&#xFF0C;&#x6BD4;&#x5982;&#x81EA;&#x52A8;&#x5927;&#x5199;&#x3001;&#x4F7F;Caps Lock&#x53EF;&#x7528;&#x3002;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E5F;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x5B57;&#x5178;&#x8FD8;&#x539F;&#x4FE1;&#x606F;&#xFF08;&#x8BBE;&#x7F6E; &gt; &#x901A;&#x7528; &gt; &#x8FD8;&#x539F; &gt; &#x8FD8;&#x539F;&#x952E;&#x76D8;&#x8BCD;&#x5178;&#xFF09;&#x3002;&#x8981;&#x6EE1;&#x8DB3;&#x4F60;&#x7528;&#x6237;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x8981;&#x6C42;&#xFF0C;&#x4F60;&#x5E94;&#x8BE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684;&#x8BBE;&#x7F6E;bundle&#xFF0C;&#x8FD9;&#x4E2A;&#x8BDD;&#x9898;&#x5728;&#x300A;&#x504F;&#x597D;&#x548C;&#x8BBE;&#x7F6E;&#x7F16;&#x7A0B;&#x6307;&#x5357;&#x300B;&#x7684;&#x300A;&#x5B9E;&#x73B0;iOS&#x8BBE;&#x7F6E;Bundle&#x300B;&#x4E2D;&#x6709;&#x8BA8;&#x8BBA;&#x3002;&#x8FD9;&#x6837;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x8BBE;&#x7F6E;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x7684;&#x952E;&#x76D8;&#x533A;&#x57DF;&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x662F;&#x4E0D;&#x80FD;&#x5728;&#x5176;&#x4E0A;&#x8FDB;&#x884C;&#x8F93;&#x5165;&#x7684;&#x3002;&#x9996;&#x5148;&#x5C31;&#x662F;&#x4EFB;&#x4F55;&#x5B89;&#x5168;&#x76F8;&#x5173;&#x7684;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x3002;&#x8FD9;&#x7C7B;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x8BBE;&#x7F6E;&#x4E86;&#x5176;secureTextEntry&#x5C5E;&#x6027;&#x4E3A;YES&#xFF0C;&#x5728;&#x5176;&#x4E0A;&#x7684;&#x8F93;&#x5165;&#x5185;&#x5BB9;&#x5C06;&#x5448;&#x73B0;&#x4E3A;&#x5706;&#x70B9;&#x3002; &#x5F53;&#x7528;&#x6237;&#x5728;&#x5BC6;&#x7801;&#x6846;&#x91CC;&#x8F93;&#x5165;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x4E34;&#x65F6;&#x7528;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x6765;&#x66FF;&#x4EE3;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002;&#x5F53;&#x7528;&#x6237;&#x5728;&#x975E;&#x5BC6;&#x7801;&#x6846;&#x91CC;&#x8F93;&#x5165;&#x65F6;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x53C8;&#x4F1A;&#x6062;&#x590D;&#x56DE;&#x6765;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E5F;&#x65E0;&#x6743;&#x5728;&#x62E8;&#x53F7;&#x8F93;&#x5165;&#x7684;&#x4F4D;&#x7F6E;&#x51FA;&#x73B0;&#xFF0C;&#x4F8B;&#x5982;&#x901A;&#x8BAF;&#x5F55;&#x7684;&#x7535;&#x8BDD;&#x53F7;&#x7801;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x3002;&#x5BF9;&#x4E8E;&#x8FD9;&#x7C7B;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#xFF0C;&#x952E;&#x76D8;&#x662F;&#x7531;&#x8FD0;&#x8425;&#x5546;&#x6307;&#x5B9A;&#x7684;&#x4E00;&#x4E2A;&#x6570;&#x5B57;/&#x5B57;&#x6BCD;&#x7684;&#x5C0F;&#x96C6;&#x5408;&#x7EC4;&#x6210;&#xFF0C;&#x5E76;&#x4E14;&#x5177;&#x5907;&#x5982;&#x4E0B;&#x5C5E;&#x6027;&#xFF1A; UIKeyboardTypePhonePad UIKeyboardTypeNamePhonePad &#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x62E8;&#x53F7;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x4E34;&#x65F6;&#x7528;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x66FF;&#x6362;&#x6389;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002;&#x5F53;&#x7528;&#x6237;&#x518D;&#x70B9;&#x51FB;&#x5176;&#x5B83;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x53C8;&#x4F1A;&#x6062;&#x590D;&#x56DE;&#x6765;&#x3002; app&#x7684;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x5728;app&#x5185;&#x90E8;&#x4E0D;&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002;&#x4F8B;&#x5982;&#x94F6;&#x884C;&#x7C7B;app&#xFF0C;&#x6216;&#x8005;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x7F8E;&#x56FD;HIPAA&#x9690;&#x79C1;&#x89C4;&#x5219;&#x7684;app&#xFF0C;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x5E72;&#x3002;&#x8FD9;&#x7C7B;app&#x5B9E;&#x73B0;&#x6765;&#x81EA;UIApplicationDelegate&#x534F;&#x8BAE;&#x7684;application:shouldAllowExtensionPointIdentifier:&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;NO&#xFF0C;&#x4EE5;&#x8FBE;&#x5230;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x7684;&#x6548;&#x679C;&#x3002; &#x7531;&#x4E8E;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x53EA;&#x80FD;&#x7ED8;&#x5236;&#x5176;UIInputViewController&#x5BF9;&#x8C61;&#x5185;&#x7684;&#x4E3B;&#x89C6;&#x56FE;&#xFF0C;&#x5728;&#x5B83;&#x4E0A;&#x9762;&#x4E0D;&#x80FD;&#x9009;&#x62E9;&#x6587;&#x5B57;&#x3002;&#x9009;&#x62E9;&#x6587;&#x5B57;&#x662F;&#x4F7F;&#x7528;&#x952E;&#x76D8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x63A7;&#x5236;&#x7684;&#x3002;&#x5982;&#x679C;app&#x63D0;&#x4F9B;&#x4E86;&#x7F16;&#x8F91;&#x83DC;&#x5355;&#xFF08;&#x5982;&#x526A;&#x5207;&#x3001;&#x62F7;&#x8D1D;&#x548C;&#x7C98;&#x8D34;&#xFF09;&#xFF0C;&#x952E;&#x76D8;&#x662F;&#x65E0;&#x6743;&#x8BBF;&#x95EE;&#x5B83;&#x7684;&#x3002;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x5728;&#x5149;&#x6807;&#x4F4D;&#x7F6E;&#x7684;&#x81EA;&#x52A8;inline&#x7EA0;&#x9519;&#x80FD;&#x529B;&#x3002; &#x5728;iOS8.0&#x4E0B;&#xFF0C;&#x5982;&#x6240;&#x6709;&#x6269;&#x5C55;app&#x4E00;&#x6837;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x9EA6;&#x514B;&#x98CE;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x5B9E;&#x73B0;&#x8BED;&#x97F3;&#x8F93;&#x5165;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x663E;&#x793A;&#x63D2;&#x56FE;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;&#x952E;&#x76D8;&#x7684;&#x4E3B;&#x89C6;&#x56FE;&#x4E0A;&#x8FB9;&#x7F18;&#xFF0C;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x53EF;&#x4EE5;&#xFF0C;&#x4F46;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E0D;&#x884C;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x548C;&#x7CFB;&#x7EDF;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5DEE;&#x522B;&#xFF1A; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;API &#x672C;&#x8282;&#x5C06;&#x7ED9;&#x51FA;&#x5F00;&#x53D1;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x5FEB;&#x901F;&#x5165;&#x95E8;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x5B83;&#x5C55;&#x793A;&#x4E86;&#x952E;&#x76D8;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E00;&#x4E9B;&#x91CD;&#x8981;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x53CA;&#x5B83;&#x4EEC;&#x5728;&#x5F00;&#x53D1;&#x6D41;&#x7A0B;&#x4E2D;&#x7684;&#x7684;&#x4F4D;&#x7F6E;&#xFF1A; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x6A21;&#x677F;&#xFF08;&#x5728;iOS&#x201C;Application Extension&#x201D;&#x76EE;&#x6807;&#x6A21;&#x677F;&#x7EC4;&#xFF09;&#x5305;&#x542B;&#x4E00;&#x4E2A;UIInputViewController&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x5B83;&#x662F;&#x4F60;&#x5F00;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x7684;&#x4E3B;&#x89C6;&#x56FE;&#x63A7;&#x5236;&#x5668;&#x3002;&#x8BE5;&#x6A21;&#x677F;&#x5305;&#x542B;&#x952E;&#x76D8;&#x6240;&#x5FC5;&#x9700;&#x7684;&#x201C;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x201D;&#x6309;&#x94AE;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5B83;&#x8C03;&#x7528;&#x4E86;UIInputViewController&#x7C7B;&#x7684;advanceToNextInputMode&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x8F93;&#x5165;&#x89C6;&#x56FE;&#x63A7;&#x5236;&#x5668;&#x7684;&#x4E3B;&#x89C6;&#x56FE;&#xFF08;&#x5728;&#x5176;inputView&#x5C5E;&#x6027;&#xFF09;&#x4E2D;&#x6DFB;&#x52A0;&#x5B50;&#x89C6;&#x56FE;&#x3001;&#x63A7;&#x5236;&#x5668;&#x4EE5;&#x53CA;&#x624B;&#x52BF;&#x8BC6;&#x522B;&#x5668;&#x7B49;&#x3002;&#x5BF9;&#x4E8E;&#x5176;&#x5B83;&#x7C7B;&#x578B;&#x7684;&#x6269;&#x5C55;&#x5E94;&#x7528;&#xFF0C;&#x5728;&#x76EE;&#x6807;&#x4E0A;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x7A97;&#x4F53;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x6CA1;&#x6709;&#x6839;&#x89C6;&#x56FE;&#x63A7;&#x5236;&#x5668;&#x4E86;&#x3002; &#x5728;&#x6A21;&#x677F;&#x7684;Info.plist&#x6587;&#x4EF6;&#x4E2D;&#x6709;&#x9884;&#x5148;&#x914D;&#x7F6E;&#x597D;&#x7684;&#x952E;&#x76D8;&#x6240;&#x9700;&#x8981;&#x7684;&#x6700;&#x57FA;&#x672C;&#x7684;&#x503C;&#x3002;&#x53C2;&#x89C1;&#x5176;&#x4E2D;&#x7684;NSExtensionAttributes&#x5B57;&#x5178;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x7684;&#x5173;&#x952E;&#x5B57;&#x5728;&#x300A;&#x914D;&#x7F6E;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;Info.plist&#x6587;&#x4EF6;&#x300B;&#x4E2D;&#x6709;&#x4ECB;&#x7ECD;&#x3002; &#x9ED8;&#x8BA4;&#xFF0C;&#x952E;&#x76D8;&#x4E0D;&#x80FD;&#x8BBF;&#x95EE;&#x7F51;&#x7EDC;&#xFF0C;&#x4E0D;&#x80FD;&#x548C;&#x5B83;&#x7684;app&#x5171;&#x4EAB;&#x5BB9;&#x5668;&#x3002;&#x5982;&#x679C;&#x8981;&#x5177;&#x5907;&#x8FD9;&#x79CD;&#x80FD;&#x529B;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x5C06;Info.plist&#x6587;&#x4EF6;&#x4E2D;RequestsOpenAccess&#x7684;&#x503C;&#x7F6E;&#x4E3A;YES&#x3002;&#x8FD9;&#x9700;&#x8981;&#x6269;&#x5C55;&#x952E;&#x76D8;&#x7684;&#x6C99;&#x76D2;&#xFF0C;&#x5728;&#x300A;&#x8BBE;&#x8BA1;&#x7528;&#x6237;&#x4FE1;&#x4EFB;&#x300B;&#x4E2D;&#x6709;&#x4ECB;&#x7ECD;&#x76F8;&#x5173;&#x5185;&#x5BB9;&#x3002; &#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x89C6;&#x56FE;&#x63A7;&#x5236;&#x5668;&#x9075;&#x4ECE;&#x5404;&#x79CD;&#x4E0E;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x5185;&#x5BB9;&#x4EA4;&#x4E92;&#x7684;&#x534F;&#x8BAE;&#xFF1A; &#x54CD;&#x5E94;&#x89E6;&#x6478;&#x6D88;&#x606F;&#x65F6;&#x5982;&#x679C;&#x8981;&#x63D2;&#x5165;&#x6216;&#x5220;&#x9664;&#x6587;&#x672C;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;UIKeyInput&#x534F;&#x8BAE;&#x7684;insertText:&#x548C;deleteBackward&#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x4EE5;&#x5728;&#x89C6;&#x56FE;&#x63A7;&#x5236;&#x5668;&#x7684;textDocumentProxy&#x5C5E;&#x6027;&#x4E2D;&#x8C03;&#x7528;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x5C5E;&#x6027;&#x4EE3;&#x8868;&#x5F53;&#x524D;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x9075;&#x4ECE;UITextDocumentProxy&#x534F;&#x8BAE;&#x3002;&#x5982;&#x4E0B;&#xFF1A; 123[self.textDocumentProxy insertText:@&quot;hello &quot;]; // Inserts the string &quot;hello &quot; at the insertion point[self.textDocumentProxy deleteBackward]; // Deletes the character to the left of the insertion point[self.textDocumentProxy insertText:@&quot;\n&quot;]; // In a text view, inserts a newline character at the insertion point &#x5728;&#x8C03;&#x7528;deleteBackward&#x4E4B;&#x524D;&#x8981;&#x5148;&#x51B3;&#x5B9A;&#x5220;&#x9664;&#x7684;&#x5B57;&#x7B26;&#x6570;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;textDocumentProxy&#x7684;documentContextBeforeInput&#x5C5E;&#x6027;&#xFF0C;&#x6765;&#x83B7;&#x5F97;&#x5149;&#x6807;&#x9644;&#x8FD1;&#x7684;&#x6587;&#x672C;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x4E0B;&#xFF1A; 1NSString *precedingContext = self.textDocumentProxy.documentContextBeforeInput; &#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x4F60;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x5B57;&#x533A;&#x57DF;&#x4E86;&#xFF0C;&#x6BD4;&#x5982;&#x5355;&#x4E2A;&#x5B57;&#x7B26;&#x8FD8;&#x662F;&#x7A7A;&#x683C;&#x540E;&#x7684;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x3002;&#x5982;&#x679C;&#x8981;&#x6309;&#x7167;&#x8BED;&#x4E49;&#x6267;&#x884C;&#x5220;&#x9664;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x3001;&#x53E5;&#x5B50;&#x3001;&#x8FD8;&#x662F;&#x4E00;&#x4E2A;&#x6BB5;&#x843D;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x300A; CFStringTokenizer Reference&#x300B;&#x4E2D;&#x63CF;&#x8FF0;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x6CE8;&#x610F;&#x6BCF;&#x4E2A;&#x8BED;&#x79CD;&#x7684;&#x8BED;&#x4E49;&#x89C4;&#x5219;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002; &#x4E3A;&#x4E86;&#x63A7;&#x5236;&#x5149;&#x6807;&#x6240;&#x5728;&#x4F4D;&#x7F6E;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#x652F;&#x6301;&#x5411;&#x524D;&#x5220;&#x9664;&#x6587;&#x5B57;&#xFF0C;&#x9700;&#x8981;&#x8C03;&#x7528;UITextDocumentProxy&#x534F;&#x8BAE;&#x4E2D;&#x7684;adjustTextPositionByCharacterOffset:&#x65B9;&#x6CD5;&#x3002;&#x6BD4;&#x5982;&#x5411;&#x524D;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234- (void) deleteForward { [self.textDocumentProxy adjustTextPositionByCharacterOffset: 1]; [self.textDocumentProxy deleteBackward];} &#x901A;&#x8FC7;&#x5B9E;&#x73B0;UITextInputDelegate&#x534F;&#x8BAE;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x54CD;&#x5E94;&#x5F53;&#x524D;&#x8F93;&#x5165;&#x6587;&#x672C;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x4E9B;&#x53D8;&#x5316;&#xFF0C;&#x6BD4;&#x5982;&#x5185;&#x5BB9;&#x53D8;&#x5316;&#x4EE5;&#x53CA;&#x7528;&#x6237;&#x89E6;&#x53D1;&#x7684;&#x5149;&#x6807;&#x4F4D;&#x7F6E;&#x7684;&#x53D8;&#x5316;&#x3002; &#x4E3A;&#x4E86;&#x5C55;&#x73B0;&#x4E0E;&#x5F53;&#x524D;&#x6587;&#x672C;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x7684;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#xFF0C;&#x9700;&#x8981;&#x53C2;&#x7167;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;UIKeyboardType&#x5C5E;&#x6027;&#xFF0C;&#x6839;&#x636E;&#x6BCF;&#x79CD;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x6240;&#x80FD;&#x652F;&#x6301;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x53D8;&#x5316;&#x5E03;&#x5C40;&#x5185;&#x5BB9;&#x3002; &#x5728;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E2D;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x652F;&#x6301;&#x591A;&#x8BED;&#x8A00;&#xFF1A; &#x4E3A;&#x6BCF;&#x4E2A;&#x8BED;&#x8A00;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#xFF0C;&#x6BCF;&#x4E2A;&#x952E;&#x76D8;&#x90FD;&#x4F5C;&#x4E3A;&#x5411;&#x5BB9;&#x5668;app&#x6DFB;&#x52A0;&#x7684;&#x72EC;&#x7ACB;&#x7684;Target &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x591A;&#x8BED;&#x8A00;&#x952E;&#x76D8;&#xFF0C;&#x52A8;&#x6001;&#x5207;&#x6362;&#x5F53;&#x524D;&#x8BED;&#x8A00;&#x3002;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;UIInputViewController&#x7C7B;&#x7684;primaryLanguage&#x5C5E;&#x6027;&#x6765;&#x52A8;&#x6001;&#x5207;&#x6362;&#x8BED;&#x8A00;&#x3002; &#x6839;&#x636E;&#x4F60;&#x8981;&#x652F;&#x6301;&#x7684;&#x8BED;&#x8A00;&#x6570;&#x91CF;&#x4EE5;&#x53CA;&#x4F60;&#x60F3;&#x63D0;&#x4F9B;&#x7684;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4ECE;&#x4E0A;&#x9762;&#x9009;&#x62E9;&#x6700;&#x5408;&#x9002;&#x7684;&#x65B9;&#x6848;&#x3002; &#x6BCF;&#x79CD;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#xFF08;&#x9700;&#x8981;RequestsOpenAccess&#xFF09;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;UILexicon&#x7C7B;&#x8BBF;&#x95EE;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x7684;&#x8BCD;&#x5178;&#x3002;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x8BE5;&#x7C7B;&#xFF0C;&#x5E76;&#x7ED3;&#x5408;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x8BCD;&#x5178;&#x8BBE;&#x8BA1;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x7528;&#x6237;&#x8F93;&#x5165;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E3A;&#x4ED6;&#x63D0;&#x4F9B;&#x8F93;&#x5165;&#x5EFA;&#x8BAE;&#x548C;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x3002;UILexicon&#x5BF9;&#x8C61;&#x5305;&#x542B;&#x6765;&#x81EA;&#x5982;&#x4E0B;&#x6E90;&#x7684;&#x5355;&#x8BCD;&#xFF1A; * &#x6765;&#x81EA;&#x7528;&#x6237;&#x901A;&#x8BAF;&#x5F55;&#x7684;&#x4EBA;&#x540D;&#x548C;&#x59D3; * &#x5728; &#x8BBE;&#x7F6E; &gt; &#x901A;&#x7528; &gt; &#x952E;&#x76D8; &gt; &#x5FEB;&#x6377;&#x65B9;&#x5F0F;&#xFF08;&#x6587;&#x672C;&#x66FF;&#x6362;&#xFF09; &#x5217;&#x8868; * &#x901A;&#x7528;&#x8BCD;&#x5178; &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x81EA;&#x52A8;&#x5E03;&#x5C40;&#x6765;&#x8C03;&#x6574;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E3B;&#x89C6;&#x56FE;&#x7684;&#x9AD8;&#x5EA6;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4F1A;&#x6839;&#x636E;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#x4EE5;&#x53CA;&#x8BBE;&#x5907;&#x65B9;&#x5411;&#xFF0C;&#x548C;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x7684;&#x5C3A;&#x5BF8;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x5BBD;&#x5EA6;&#x901A;&#x5E38;&#x4E0E;&#x5C4F;&#x5E55;&#x5F53;&#x524D;&#x5BBD;&#x5EA6;&#x4E00;&#x81F4;&#x3002;&#x4FEE;&#x6539;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E3B;&#x89C6;&#x56FE;&#x7684;&#x9AD8;&#x5EA6;&#x7EA6;&#x675F;&#x5373;&#x53EF;&#x4FEE;&#x6539;&#x5176;&#x9AD8;&#x5EA6;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5C55;&#x793A;&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x548C;&#x6DFB;&#x52A0;&#x7EA6;&#x675F;&#xFF1A; 12345678910CGFloat _expandedHeight = 500;NSLayoutConstraint *_heightConstraint = [NSLayoutConstraint constraintWithItem: self.view attribute: NSLayoutAttributeHeight relatedBy: NSLayoutRelationEqual toItem: nil attribute: NSLayoutAttributeNotAnAttribute multiplier: 0.0 constant: _expandedHeight];[self.view addConstraint: _heightConstraint]; ** &#x6CE8;&#x610F; ** &#x5728; iOS8.8&#x4E0B;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x4E3B;&#x89C6;&#x56FE;&#x753B;&#x5230;&#x5C4F;&#x5E55;&#x4E4B;&#x540E;&#x7684;&#x4EFB;&#x4F55;&#x65F6;&#x95F4;&#x91CC;&#x8C03;&#x6574;&#x952E;&#x76D8;&#x9AD8;&#x5EA6;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x5F00;&#x53D1;&#x5173;&#x952E; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x5F00;&#x53D1;&#x6709;&#x4E24;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#xFF1A; * &#x4FE1;&#x4EFB;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x80FD;&#x8BBF;&#x95EE;&#x7528;&#x6237;&#x8F93;&#x5165;&#x7684;&#x5185;&#x5BB9; &#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x952E;&#x76D8;&#x548C;&#x7528;&#x6237;&#x95F4;&#x5EFA;&#x7ACB;&#x4FE1;&#x4EFB;&#x975E;&#x5E38;&#x5173;&#x952E;&#x3002; * &#x201C;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x201D;&#x952E;&#x3002; &#x901A;&#x8FC7;&#x952E;&#x76D8;&#x754C;&#x9762;&#x5FC5;&#x987B;&#x80FD;&#x8BA9;&#x7528;&#x6237;&#x80FD;&#x5207;&#x6362;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x3002; &#x4E3A;&#x7528;&#x6237;&#x4FE1;&#x4EFB;&#x6240;&#x505A;&#x7684;&#x8BBE;&#x8BA1; &#x4F5C;&#x4E3A;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x5F00;&#x53D1;&#x8005;&#xFF0C;&#x4F60;&#x9996;&#x5148;&#x5E94;&#x5F53;&#x8003;&#x8651;&#x7684;&#x662F;&#x5982;&#x4F55;&#x5EFA;&#x7ACB;&#x548C;&#x7EF4;&#x62A4;&#x7528;&#x6237;&#x4FE1;&#x4EFB;&#x3002;&#x4F60;&#x8981;&#x7406;&#x89E3;&#x9690;&#x79C1;&#x7B56;&#x7565;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x5E76;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x5B83;&#x624D;&#x80FD;&#x5F88;&#x597D;&#x5730;&#x8DF5;&#x884C;&#x3002; &gt; &#x6CE8;&#x610F; &gt; &#x672C;&#x8282;&#x4E3A;&#x4F60;&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x63D0;&#x4F9B;&#x76F8;&#x5173;&#x7684;&#x5F00;&#x53D1;&#x624B;&#x518C;&#xFF0C;&#x8BE5;&#x624B;&#x518C;&#x8981;&#x6C42;&#x5C0A;&#x91CD;&#x7528;&#x6237;&#x9690;&#x79C1;&#x3002;&#x4E86;&#x89E3;iOS&#x7F16;&#x7A0B;&#x8981;&#x6C42;&#xFF0C;&#x8BF7;&#x9605;&#x8BFB;&#x5E94;&#x7528;&#x5546;&#x5E97;&#x5BA1;&#x6838;&#x624B;&#x518C;&#xFF0C;iOS&#x4EBA;&#x673A;&#x4EA4;&#x4E92;&#x624B;&#x518C;&#xFF0C;iOS&#x5F00;&#x53D1;&#x8BB8;&#x53EF;&#x534F;&#x8BAE;&#xFF0C;&#x8BF7;&#x53C2;&#x89C1;&#x82F9;&#x679C;&#x7684;&#x300A;&#x5E94;&#x7528;&#x5BA1;&#x6838;&#x652F;&#x6301;&#x300B;&#xFF0C;&#x300A;&#x652F;&#x6301;&#x7528;&#x6237;&#x9690;&#x79C1;&#x300B;&#xFF0C;&#x300A;iOS&#x5E94;&#x7528;&#x7F16;&#x7A0B;&#x6307;&#x5357;&#x300B;&#x3002; &#x5BF9;&#x4E8E;&#x952E;&#x76D8;&#xFF0C;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x65B9;&#x9762;&#x5BF9;&#x4E8E;&#x5EFA;&#x7ACB;&#x548C;&#x7EF4;&#x62A4;&#x7528;&#x6237;&#x4FE1;&#x4EFB;&#x81F3;&#x5173;&#x91CD;&#x8981;&#xFF1A; ** &#x6309;&#x952E;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x3002; &#x7528;&#x6237;&#x5E0C;&#x671B;&#x4ED6;&#x4EEC;&#x7684;&#x6572;&#x952E;&#x4F1A;&#x843D;&#x5728;&#x6587;&#x6863;&#x4EE5;&#x53CA;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x5185;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E0A;&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#x6216;&#x8005;&#x7528;&#x4E8E;&#x5176;&#x4ED6;&#x4E0D;&#x660E;&#x76EE;&#x7684;&#x3002; &#x6700;&#x5C0F;&#x5316;&#x5408;&#x7406;&#x5229;&#x7528;&#x5176;&#x5B83;&#x7528;&#x6237;&#x6570;&#x636E;&#x3002; &#x5982;&#x679C;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x8FD8;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x4F8B;&#x5982;&#x5B9A;&#x4F4D;&#x670D;&#x52A1;&#x6216;&#x8005;&#x901A;&#x8BAF;&#x5F55;&#xFF0C;&#x4F60;&#x6709;&#x4E49;&#x52A1;&#x89E3;&#x91CA;&#x8FD9;&#x7ED9;&#x7528;&#x6237;&#x5E26;&#x6765;&#x7684;&#x597D;&#x5904;&#x662F;&#x4EC0;&#x4E48;&#x3002; &#x51C6;&#x786E;&#x3002; ** &#x628A;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#x8F6C;&#x6362;&#x6210;&#x6587;&#x672C;&#x8981;&#x6C42;&#x7CBE;&#x51C6;&#xFF0C;&#x8FD9;&#x672C;&#x8EAB;&#x867D;&#x7136;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x9690;&#x79C1;&#x8BDD;&#x9898;&#xFF0C;&#x4F46;&#x4ED6;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x4FE1;&#x4EFB;&#xFF1A;&#x6BCF;&#x6B21;&#x6587;&#x5B57;&#x8F6C;&#x6362;&#x9700;&#x8981;&#x4F53;&#x73B0;&#x51FA;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x7CBE;&#x51C6;&#x3002; &#x5728;&#x4FE1;&#x4EFB;&#x7684;&#x5F00;&#x53D1;&#x8BBE;&#x8BA1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x8003;&#x8651;&#x7684;&#x662F;&#x662F;&#x5426;&#x8981;&#x83B7;&#x53D6;open access&#x6743;&#x9650;&#x3002;&#x5C3D;&#x7BA1;&#x5F00;&#x542F;&#x4E86;open access&#x6743;&#x9650;&#x80FD;&#x7ED9;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x5F00;&#x53D1;&#x5E26;&#x6765;&#x6781;&#x5927;&#x4FBF;&#x5229;&#xFF0C;&#x4F46;&#x8FD9;&#x4E5F;&#x589E;&#x52A0;&#x4E86;&#x4F60;&#x4F5C;&#x4E3A;&#x5F00;&#x53D1;&#x8005;&#x7684;&#x8D23;&#x4EFB;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x6807;&#x51C6;&#x7684;open access&#x7684;&#x80FD;&#x529B;&#x548C;&#x9690;&#x79C1;&#x8003;&#x8651;&#xFF1A; Open Access &#x80FD;&#x529B;&#x548C;&#x9650;&#x5236; &#x9690;&#x79C1;&#x8003;&#x8651; Off(default) &#xB7;&#x952E;&#x76D8;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x6240;&#x6709;&#x57FA;&#x672C;&#x952E;&#x76D8;&#x7684;&#x804C;&#x8D23;&#xB7;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x901A;&#x7528;&#x8BCD;&#x5178;&#x4EE5;&#x652F;&#x6301;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x548C;&#x8F93;&#x5165;&#x5EFA;&#x8BAE;&#xB7;&#x8BBF;&#x95EE;&#x8BBE;&#x7F6E;&#x91CC;&#x7684;&#x5FEB;&#x6377;&#x77ED;&#x8BED;&#xB7;&#x4E0D;&#x4E0E;containing&#x5E94;&#x7528;&#x5171;&#x4EAB;&#x5BB9;&#x5668;&#xB7;&#x4E0D;&#x8BBF;&#x95EE;&#x952E;&#x76D8;&#x5BB9;&#x5668;&#x4EE5;&#x5916;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xB7;&#x4E0D;&#x8BBF;&#x95EE;&#x952E;&#x76D8;&#x5BB9;&#x5668;&#x4EE5;&#x5916;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xB7;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x6216;&#x95F4;&#x63A5;&#x8BBF;&#x95EE;iCloud&#x6216;&#x6E38;&#x620F;&#x4E2D;&#x5FC3;&#x6216;&#x5E94;&#x7528;&#x5185;&#x8D2D;&#x4E70; &#x7528;&#x6237;&#x4E86;&#x89E3;&#x6309;&#x952E;&#x4EC5;&#x4EC5;&#x88AB;&#x53D1;&#x9001;&#x5230;&#x5F53;&#x524D;&#x4F7F;&#x7528;&#x952E;&#x76D8;&#x7684;&#x5E94;&#x7528;&#x91CC; On &#xB7;&#x5177;&#x5907;&#x975E;&#x8054;&#x7F51;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x6240;&#x6709;&#x80FD;&#x529B;&#xB7;&#x5728;&#x7528;&#x6237;&#x8BB8;&#x53EF;&#x60C5;&#x51B5;&#x4E0B;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x4F4D;&#x7F6E;&#x670D;&#x52A1;&#x548C;&#x901A;&#x8BAF;&#x5F55;&#xB7;&#x952E;&#x76D8;&#x548C;containing app&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5171;&#x4EAB;&#x5BB9;&#x5668;&#xB7;&#x952E;&#x76D8;&#x53EF;&#x4EE5;&#x4E3A;&#x670D;&#x52A1;&#x5668;&#x4FA7;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x53D1;&#x9001;&#x6309;&#x952E;&#x6216;&#x5176;&#x4ED6;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#xB7;containing app&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x5B57;&#x5178;&#x63D0;&#x4F9B;&#x7F16;&#x8F91;&#x754C;&#x9762;&#xB7;&#x901A;&#x8FC7;containing app&#x952E;&#x76D8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;iCloud&#x6765;&#x4FDD;&#x8BC1;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178;&#x548C;&#x8BBE;&#x7F6E;&#x7684;&#x66F4;&#x65B0;&#xB7;&#x901A;&#x8FC7;containing app&#xFF0C;&#x952E;&#x76D8;&#x53EF;&#x4EE5;&#x53C2;&#x4E0E;&#x5230;&#x6E38;&#x620F;&#x4E2D;&#x5FC3;&#x548C;&#x5E94;&#x7528;&#x5185;&#x8D2D;&#x4E70;&#xB7;&#x5982;&#x679C;&#x952E;&#x76D8;&#x652F;&#x6301;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x7BA1;&#x7406;(MDM)&#xFF0C;&#x5B83;&#x53EF;&#x4E0E;&#x88AB;&#x7BA1;&#x7406;&#x7684;&#x5E94;&#x7528;&#x5171;&#x540C;&#x5DE5;&#x4F5C; &#xB7;&#x7528;&#x6237;&#x4E86;&#x89E3;&#x952E;&#x76D8;&#x5F00;&#x53D1;&#x8005;&#x4F1A;&#x5229;&#x7528;&#x6309;&#x952E;&#x6570;&#x636E;&#xB7;&#x4F60;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x6709;&#x8054;&#x7F51;&#x80FD;&#x529B;&#x7684;&#x952E;&#x76D8;&#x5F00;&#x53D1;&#x624B;&#x518C;&#x548C;iOS&#x5F00;&#x53D1;&#x8BB8;&#x53EF;&#x534F;&#x8BAE;&#xFF0C;&#x53EF;&#x53C2;&#x89C1;&#x300A;&#x5E94;&#x7528;&#x5BA1;&#x6838;&#x652F;&#x6301;&#x300B; &#x5982;&#x679C;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x4E0D;&#x9700;&#x8981;open access&#x6743;&#x9650;&#xFF0C;&#x7CFB;&#x7EDF;&#x786E;&#x4FDD;&#x6572;&#x952E;&#x4FE1;&#x606F;&#x4E0D;&#x4F1A;&#x88AB;&#x53D1;&#x9001;&#x7ED9;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x4EE5;&#x53CA;&#x522B;&#x7684;&#x5730;&#x65B9;&#x3002;&#x5982;&#x679C;&#x53EA;&#x60F3;&#x63D0;&#x4F9B;&#x4E00;&#x822C;&#x7684;&#x952E;&#x76D8;&#x529F;&#x80FD;&#xFF0C;&#x8BF7;&#x4E0D;&#x8981;&#x7ED9;&#x952E;&#x76D8;&#x914D;&#x5907;&#x8054;&#x7F51;&#x80FD;&#x529B;&#x3002;&#x7531;&#x4E8E;&#x6709;&#x6C99;&#x76D2;&#x9650;&#x5236;&#xFF0C;&#x4E0D;&#x8054;&#x7F51;&#x7684;&#x952E;&#x76D8;&#x4E00;&#x5B9A;&#x662F;&#x6EE1;&#x8DB3;&#x82F9;&#x679C;&#x7684;&#x6570;&#x636E;&#x9690;&#x79C1;&#x624B;&#x518C;&#x5E76;&#x80FD;&#x83B7;&#x5F97;&#x7528;&#x6237;&#x4FE1;&#x4EFB;&#x7684;&#x3002; &#x5F00;&#x542F;open access&#x6743;&#x9650;&#xFF08;&#x5982;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;Info.plist&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;&#xFF09;&#xFF0C;&#x80FD;&#x7ED9;&#x4F60;&#x7684;&#x5F00;&#x53D1;&#x5E26;&#x6765;&#x66F4;&#x591A;&#x53EF;&#x80FD;&#x6027;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x5E26;&#x6765;&#x66F4;&#x591A;&#x7684;&#x8D23;&#x4EFB;&#x3002; &#x6CE8;&#x610F; &#x5411;&#x5E94;&#x7528;&#x5546;&#x5E97;&#x63D0;&#x4EA4;&#x4E00;&#x4E2A;open-access&#x7684;&#x952E;&#x76D8;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x82F9;&#x679C;&#x300A;&#x5E94;&#x7528;&#x5BA1;&#x6838;&#x652F;&#x6301;&#x300B;&#x4E2D;&#x7684;&#x76F8;&#x5173;&#x6761;&#x6B3E;&#x3002; &#x6BCF;&#x4E00;&#x4E2A;&#x4E0E;open access&#x76F8;&#x5173;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x9700;&#x8981;&#x4F60;&#x5C65;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x8D23;&#x4EFB;&#xFF0C;&#x5E94;&#x5F53;&#x6700;&#x5927;&#x9650;&#x5EA6;&#x5730;&#x5C0A;&#x91CD;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x4E0D;&#x5F97;&#x7528;&#x4E8E;&#x4E0E;&#x7528;&#x6237;&#x8F93;&#x5165;&#x65E0;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x76EE;&#x7684;&#x3002;&#x4E0B;&#x8868;&#x5217;&#x51FA;&#x4E86;open access&#x5E26;&#x6765;&#x7684;&#x597D;&#x5904;&#x4EE5;&#x53CA;&#x5F00;&#x53D1;&#x8005;&#x9700;&#x627F;&#x62C5;&#x7684;&#x8D23;&#x4EFB;&#xFF1A; &#x80FD;&#x529B; &#x7528;&#x6237;&#x5229;&#x76CA;&#x793A;&#x4F8B; &#x5F00;&#x53D1;&#x8005;&#x8D23;&#x4EFB; &#x4E0E;containing app&#x5171;&#x4EAB;&#x5BB9;&#x5668; &#x4E3A;&#x952E;&#x76D8;&#x7684;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178;&#x7BA1;&#x7406;UI&#x754C;&#x9762; &#x8981;&#x8003;&#x8651;&#x5230;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x6570;&#x636E;&#x5C5E;&#x4E8E;&#x7528;&#x6237;&#x9690;&#x79C1;&#x3002;&#x4E0D;&#x8981;&#x628A;&#x4ED6;&#x53D1;&#x5230;&#x4F60;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x7528;&#x4F5C;&#x4E0E;&#x8F93;&#x5165;&#x65E0;&#x5173;&#x7684;&#x7528;&#x9014;&#x3002; &#x628A;&#x6309;&#x952E;&#x6570;&#x636E;&#x53D1;&#x5230;&#x4F60;&#x7684;&#x670D;&#x52A1;&#x5668; &#x901A;&#x8FC7;&#x5F00;&#x53D1;&#x8005;&#x7684;&#x8BA1;&#x7B97;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x66F4;&#x597D;&#x7684;&#x6309;&#x952E;&#x5904;&#x7406;&#x7ED3;&#x679C;&#x548C;&#x8F93;&#x5165;&#x9884;&#x6D4B; &#x53EA;&#x6709;&#x4E3A;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x66F4;&#x597D;&#x7684;&#x8F93;&#x5165;&#x4F53;&#x9A8C;&#x4E4B;&#x7528;&#x65F6;&#xFF0C;&#x624D;&#x80FD;&#x4FDD;&#x5B58;&#x6309;&#x952E;&#x548C;&#x8BED;&#x97F3;&#x6570;&#x636E; &#x57FA;&#x4E8E;&#x4E91;&#x7684;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178; &#x628A;&#x4EBA;&#x540D;&#x3001;&#x5730;&#x540D;&#x3001;&#x70ED;&#x70B9;&#x65B0;&#x95FB;&#x52A0;&#x5165;&#x5230;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178;&#x4E2D; &#x4E0D;&#x8981;&#x628A;&#x7528;&#x6237;&#x8EAB;&#x4EFD;&#x4E0E;&#x8F93;&#x5165;&#x6570;&#x636E;&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x4E0D;&#x5F97;&#x5C06;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x7528;&#x4F5C;&#x4E0E;&#x8F93;&#x5165;&#x4F53;&#x9A8C;&#x65E0;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x76EE;&#x7684; &#x901A;&#x8BAF;&#x5F55; &#x628A;&#x4EBA;&#x540D;&#x3001;&#x5730;&#x540D;&#x3001;&#x7535;&#x8BDD;&#x53F7;&#x7801;&#x6DFB;&#x52A0;&#x5230;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178;&#x4E2D; &#x4E0D;&#x5F97;&#x8BB2;&#x901A;&#x8BAF;&#x5F55;&#x7528;&#x4F5C;&#x4E0E;&#x8F93;&#x5165;&#x4F53;&#x9A8C;&#x65E0;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x76EE;&#x7684; &#x4F4D;&#x7F6E;&#x670D;&#x52A1; &#x5C06;&#x9644;&#x8FD1;&#x7684;&#x5730;&#x540D;&#x6DFB;&#x52A0;&#x5230;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178;&#x4E2D; &#x4E0D;&#x8981;&#x5728;&#x540E;&#x53F0;&#x4F7F;&#x7528;&#x4F4D;&#x7F6E;&#x670D;&#x52A1;&#xFF0C;&#x4E0D;&#x5F97;&#x5C06;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x53D1;&#x9001;&#x5230;&#x4F60;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5E76;&#x7528;&#x4E8E;&#x4E0E;&#x8F93;&#x5165;&#x4F53;&#x9A8C;&#x65E0;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x76EE;&#x7684; &#x4E00;&#x4E2A;&#x5177;&#x6709;open-access&#x6743;&#x9650;&#x7684;&#x952E;&#x76D8;&#x548C;&#x5176;containing app&#x80FD;&#x5C06;&#x6309;&#x952E;&#x6570;&#x636E;&#x53D1;&#x9001;&#x5230;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x4E3A;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x66F4;&#x597D;&#x7684;&#x8F93;&#x5165;&#x4F53;&#x9A8C;&#x3002;&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x4E86;&#x8FD9;&#x4E9B;&#x80FD;&#x529B;&#xFF0C;&#x5F53;&#x4E0D;&#x9700;&#x8981;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BF7;&#x53CA;&#x65F6;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5220;&#x9664;&#x3002;&#x53C2;&#x89C1;&#x4E0A;&#x9762;&#x7684;&#x8868;&#x683C;&#x6765;&#x5C65;&#x884C;&#x4F60;&#x4F7F;&#x7528;open-access&#x6743;&#x9650;&#x4E2D;&#x7684;&#x4E49;&#x52A1;&#x3002; &#x63D0;&#x4F9B;&#x5207;&#x6362;&#x5230;&#x5176;&#x4ED6;&#x952E;&#x76D8;&#x7684;&#x65B9;&#x6CD5; &#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x7684;&#x5C0F;&#x5730;&#x7403;&#x6309;&#x952E;&#x7528;&#x4E8E;&#x5207;&#x6362;&#x5230;&#x5176;&#x4ED6;&#x952E;&#x76D8;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; &#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x7C7B;&#x4F3C;&#x7684;&#x673A;&#x5236;&#x80FD;&#x5207;&#x6362;&#x5230;&#x5176;&#x4ED6;&#x952E;&#x76D8;&#x3002; &gt; &#x6CE8;&#x610F; &gt; &#x8981;&#x901A;&#x8FC7;&#x5E94;&#x7528;&#x5BA1;&#x6838;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x4E0A;&#x63D0;&#x4F9B;&#x660E;&#x663E;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x5207;&#x6362;&#x952E;&#x76D8;&#x7684;UI&#x6807;&#x8BC6;&#x3002; &#x8C03;&#x7528;UIInputViewController&#x7C7B;&#x7684;advanceToNextInputMode&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5207;&#x6362;&#x5230;&#x5176;&#x4ED6;&#x952E;&#x76D8;&#x3002;&#x7CFB;&#x7EDF;&#x4F1A;&#x9009;&#x62E9;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#xFF0C;&#x6CA1;&#x6709;&#x80FD;&#x83B7;&#x5F97;&#x952E;&#x76D8;&#x5217;&#x8868;&#x7684;API&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x5207;&#x6362;&#x5230;&#x6307;&#x5B9A;&#x952E;&#x76D8;&#x7684;API&#x3002; Xcode&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x6A21;&#x677F;&#x4E2D;&#x5C31;&#x5DF2;&#x7ECF;&#x5728;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x6309;&#x94AE;&#x4E0A;&#x5177;&#x5907;&#x4E86;advanceToNextInputMode&#x7684;&#x529F;&#x80FD;&#x3002;&#x4E3A;&#x4E86;&#x63D0;&#x4F9B;&#x6700;&#x597D;&#x7684;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x5E94;&#x5F53;&#x628A;&#x4F60;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x6309;&#x952E;&#x653E;&#x5728;&#x9760;&#x8FD1;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x7684;&#x5C0F;&#x5730;&#x7403;&#x952E;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x5F00;&#x59CB;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x5F00;&#x53D1; &#x672C;&#x8282;&#x4E2D;&#x4F60;&#x5C06;&#x5B66;&#x4E60;&#x5230;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#xFF0C;&#x6839;&#x636E;&#x4F60;&#x7684;&#x76EE;&#x6807;&#x914D;&#x7F6E;&#x5E76;&#x5728;iOS&#x6A21;&#x62DF;&#x5668;&#x6216;&#x7269;&#x7406;&#x673A;&#x4E0A;&#x628A;&#x5B83;&#x8FD0;&#x884C;&#x8D77;&#x6765;&#x3002;&#x4F60;&#x8FD8;&#x5C06;&#x5B66;&#x4E60;&#x5230;&#x4E00;&#x4E9B;&#x66FF;&#x4EE3;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x5E94;&#x8C28;&#x8BB0;&#x7684;UI&#x8981;&#x70B9;&#x3002; &#x4F7F;&#x7528;Xcode&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x6A21;&#x677F; &#x521B;&#x5EFA;&#x952E;&#x76D8;&#x53CA;&#x5176;containing app&#x4E0E;&#x5176;&#x4ED6;&#x6269;&#x5C55;&#x5E94;&#x7528;&#x7565;&#x6709;&#x4E0D;&#x540C;&#x3002;&#x672C;&#x8282;&#x5C06;&#x5E26;&#x4F60;&#x9886;&#x7565;&#x57FA;&#x672C;&#x952E;&#x76D8;&#x7684;&#x5F00;&#x53D1;&#x548C;&#x8FD0;&#x884C;&#x3002; &#x5728;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;app&#x4E2D;&#x521B;&#x5EFA;&#x952E;&#x76D8;&#xFF0C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5728;Xcode&#x4E2D;&#x9009;&#x62E9;File &gt; New &gt; Project &gt; iOS &gt; Application&#x9009;&#x62E9;Single View Application&#x6A21;&#x677F;&#x3002; 2. &#x70B9;&#x51FB;Next&#x3002; 3. &#x586B;&#x5199;Project Name&#xFF08;&#x5982;CKIme&#xFF09;&#xFF0C;&#x70B9;&#x51FB;Next&#x3002; 4. &#x9009;&#x62E9;&#x8981;&#x4FDD;&#x5B58;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x70B9;&#x51FB;Create&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x4F60;&#x5C31;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x7A7A;app&#xFF0C;&#x8BE5;app&#x53EA;&#x80FD;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5B83;&#x5C06;&#x627F;&#x8F7D;&#x952E;&#x76D8;&#x3002;&#x5728;&#x4F60;&#x63D0;&#x4EA4;&#x5230;&#x5E94;&#x7528;&#x5546;&#x5E97;&#x4E4B;&#x524D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x4E00;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x529F;&#x80FD;&#x3002;&#x8BF7;&#x5230;&#x5E94;&#x7528;&#x5BA1;&#x6838;&#x652F;&#x6301;&#x53C2;&#x8003;&#x5E94;&#x7528;&#x5546;&#x5E97;&#x5BA1;&#x6838;&#x6307;&#x5357;&#x3002; 5. &#x9009;&#x62E9;File &gt; New &gt; Target &gt; iOS &gt; Application Extension&#x9009;&#x62E9;Custom Keyboard Extension&#xFF0C;&#x70B9;&#x51FB;Next&#x3002; 6. &#x586B;&#x5199;Product Name&#xFF08;&#x5982;CKbd&#xFF09;&#xFF0C;&#x70B9;&#x51FB;Finish&#x3002; 7. &#x786E;&#x8BA4;Project&#x548C;Embed in Application&#x4E2D;&#x90FD;&#x663E;&#x793A;&#x7684;&#x662F;&#x5BB9;&#x5668;app&#x7684;&#x540D;&#x5B57;&#xFF08;CKIme&#xFF09;&#xFF0C;&#x70B9;&#x51FB;Finish&#x3002;&#x5982;&#x679C;&#x5F39;&#x51FA;Activate &#x201C;CKbd&#x201D; scheme&#x63D0;&#x793A;&#x8BA9;&#x6FC0;&#x6D3B;&#x952E;&#x76D8;&#x5DE5;&#x7A0B;&#xFF0C;&#x70B9;&#x51FB;Activate&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x9700;&#x8981;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;group name&#xFF0C;&#x5B83;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x8BBE;&#x7F6E;&#x4E2D;&#x7684;&#x5DF2;&#x8D2D;&#x4E70;&#x952E;&#x76D8;&#x5217;&#x8868;&#x4E2D;&#x3002; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;group name&#xFF0C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5728;Xcode&#x5DE5;&#x7A0B;&#x5BFC;&#x822A;&#x89C6;&#x56FE;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x5BB9;&#x5668;app&#x7684;Info.plist&#x6587;&#x4EF6;&#xFF0C; 2. &#x5728;&#x53F3;&#x4FA7;plist&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#xFF0C;&#x9F20;&#x6807;hover&#x5230;Bundle name&#x4E0A;&#xFF0C;&#x70B9;&#x201C;+&#x201D;&#x6309;&#x94AE;&#x521B;&#x5EFA;&#x4E00;&#x884C;&#x7A7A;&#x5C5E;&#x6027;&#x3002; 3. &#x5728;Key&#x4E2D;&#x586B;&#x5199;Bundle display name&#xFF0C;&#x56DE;&#x8F66; 4. &#x53CC;&#x51FB;&#x8BE5;&#x884C;&#x7684;Value&#xFF0C;&#x586B;&#x5199;&#x4F60;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x952E;&#x76D8;group name&#x3002; 5. &#x9009;&#x62E9;File &gt; Save&#x4FDD;&#x5B58;&#x8BBE;&#x7F6E;&#x3002; &#x4E0B;&#x8868;&#x6C47;&#x603B;&#x4E86;&#x5728;&#x5BB9;&#x5668;app&#x548C;&#x952E;&#x76D8;app&#x7684;Info.plist&#x6587;&#x4EF6;&#x4E2D;&#x4F60;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x7684;UI&#x5B57;&#x7B26;&#x4E32;&#xFF1A; iOSUI&#x5B57;&#x7B26;&#x4E32; Info.plist&#x5173;&#x952E;&#x5B57; &#xB7; &#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x7684;&#x5DF2;&#x8D2D;&#x952E;&#x76D8;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x952E;&#x76D8;group name &#x5728;&#x5BB9;&#x5668;app&#x7684;Info.plist&#x6587;&#x4EF6;&#x4E2D;&#x7684;Bundle display name &#xB7; &#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x4E2D;&#x7684;&#x952E;&#x76D8;&#x540D;&#x79F0;&#xB7; &#x952E;&#x76D8;&#x6362;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x952E;&#x76D8;&#x540D;&#x79F0; &#x5728;&#x952E;&#x76D8;app&#x7684;Info.plist&#x6587;&#x4EF6;&#x4E2D;&#x7684;Bundle display name &#x73B0;&#x5728;&#x4F60;&#x53EF;&#x4EE5;&#x5728;iOS&#x6A21;&#x62DF;&#x5668;&#x6216;&#x771F;&#x673A;&#x4E0A;&#x8FD0;&#x884C;&#x8BE5;&#x952E;&#x76D8;&#xFF0C;&#x770B;&#x770B;&#x5B83;&#x76EE;&#x524D;&#x90FD;&#x5177;&#x5907;&#x4EC0;&#x4E48;&#x884C;&#x4E3A;&#x548C;&#x80FD;&#x529B;&#x5427;&#x3002; ** &#x8FD0;&#x884C;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x5E76;&#x5C06;Xcode&#x8C03;&#x8BD5;&#x5668;attach&#x5230;&#x5B83;&#x4E0A;&#x9762; ** 1. &#x5728;Xcode&#xFF0C;&#x4F60;&#x7684;view controller&#x5B9E;&#x73B0;&#x4E2D;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x65AD;&#x70B9;&#xFF08;&#x6BD4;&#x5982;&#x53EF;&#x4EE5;&#x65AD;&#x5728;viewDidLoad&#x4E0A;&#xFF09;&#x3002; 2. &#x5728;Xcode&#x5DE5;&#x5177;&#x680F;&#x786E;&#x4FDD;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7684;&#x9879;&#x76EE;&#x4E3A;&#x952E;&#x76D8;&#x9879;&#x76EE;&#xFF0C;&#x5E76;&#x5BF9;&#x5E94;iOS&#x6A21;&#x62DF;&#x5668;&#x6216;&#x8BBE;&#x5907;&#x3002; 3. &#x9009;&#x62E9;&#x83DC;&#x5355;Project &gt; Run&#xFF0C;&#x6216;&#x70B9;&#x51FB;Build and then run the current scheme&#x6309;&#x94AE;&#xFF08;&#x5373;&#x64AD;&#x653E;&#x6309;&#x94AE;&#xFF09;&#x3002;Xcode&#x4F1A;&#x63D0;&#x793A;&#x9009;&#x62E9;host app&#x3002;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x8F93;&#x5165;&#x6846;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x901A;&#x8BAF;&#x5F55;&#x6216;Safari&#x3002; 4. &#x70B9;&#x51FB;Run&#x3002; Xcode&#x5C06;&#x8FD0;&#x884C;&#x8D77;&#x4F60;&#x6307;&#x5B9A;&#x7684;host app&#x3002;&#x5982;&#x679C;&#x8FD9;&#x662F;&#x4F60;&#x7B2C;&#x4E00;&#x6B21;&#x4F7F;&#x7528;&#x952E;&#x76D8;&#x6269;&#x5C55;&#x5E94;&#x7528;&#xFF0C;&#x9700;&#x8981;&#x73B0;&#x5728;&#x8BBE;&#x7F6E;&#x4E2D;&#x6DFB;&#x52A0;&#x5E76;&#x542F;&#x7528;&#x952E;&#x76D8;&#xFF1A; 1. Settings &gt; General &gt; Keyboard &gt; Keyboards 2. &#x70B9;&#x51FB;Add New Keyboard... 3. &#x5728;OTHER IPHONE KEYBOARDS&#x4E2D;&#x70B9;&#x51FB;&#x4F60;&#x521A;&#x521A;&#x521B;&#x5EFA;&#x7684;&#x952E;&#x76D8; 5. &#x5728;iOS&#x6A21;&#x62DF;&#x5668;&#x6216;&#x771F;&#x673A;&#x4E0A;&#xFF0C;&#x8C03;&#x51FA;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002; &#x70B9;&#x51FB;&#x4EFB;&#x610F;&#x53EF;&#x8F93;&#x5165;&#x533A;&#x57DF;&#xFF0C;&#x5C06;&#x663E;&#x793A;&#x51FA;&#x7CFB;&#x7EDF;&#x952E;&#x76D8;&#x3002;&#x6309;&#x4F4F;&#x5C0F;&#x5730;&#x7403;&#xFF0C;&#x9009;&#x62E9;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002; &#x6B64;&#x65F6;&#x4F60;&#x5C06;&#x770B;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#xFF0C;&#x4F46;&#x662F;&#x8C03;&#x8BD5;&#x5668;&#x5C1A;&#x672A;attach&#x4E0A;&#x6765;&#x3002;&#x4E00;&#x4E2A;&#x4ECE;&#x6A21;&#x677F;&#x6784;&#x5EFA;&#x800C;&#x6765;&#x7684;&#x6781;&#x7B80;&#x952E;&#x76D8;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;Next Keyboard&#x6309;&#x94AE;&#xFF0C;&#x70B9;&#x51FB;&#x540E;&#x5207;&#x6362;&#x56DE;&#x524D;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x3002; 6. &#x53D6;&#x6D88;&#x4F60;&#x7684;&#x952E;&#x76D8;&#xFF08;&#x4EE5;&#x4FBF;&#x5728;&#x7B2C;8&#x6B65;&#x4E2D;&#x4F60;&#x53EF;&#x4EE5;&#x518D;&#x6B21;&#x8C03;&#x51FA;&#x952E;&#x76D8;&#x4EE5;&#x547D;&#x4E2D;viewDidLoad&#x65AD;&#x70B9;&#xFF09; 7. &#x5728;Xcode&#x4E2D;&#xFF0C;&#x9009;&#x62E9;Debug &gt; Attach to Process &gt; By Process Identifier(PID) or Name &#x5728;&#x5F39;&#x51FA;&#x5BF9;&#x8BDD;&#x6846;&#x4E2D;&#xFF0C;&#x8F93;&#x5165;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x6269;&#x5C55;&#x5E94;&#x7528;&#x7684;&#x540D;&#x5B57;&#xFF08;&#x5305;&#x542B;&#x7A7A;&#x683C;&#xFF09;.&#x9ED8;&#x8BA4;&#x5C31;&#x662F;&#x8BE5;&#x6269;&#x5C55;&#x5E94;&#x7528;&#x5728;&#x5DE5;&#x7A0B;&#x5BFC;&#x822A;&#x7A97;&#x53E3;&#x91CC;&#x7684;group name&#x3002; 8. &#x70B9;&#x51FB;Attach&#x3002; Xcode&#x5C06;&#x663E;&#x793A;&#x51FA;&#x7B49;&#x5F85;attach&#x7684;&#x8C03;&#x8BD5;&#x5668;&#x3002; 9. &#x5728;&#x4EFB;&#x610F;&#x80FD;&#x8F93;&#x5165;&#x6587;&#x5B57;&#x7684;app&#x4E2D;&#x8C03;&#x51FA;&#x952E;&#x76D8;&#x3002; &#x5F53;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x4E3B;&#x89C6;&#x56FE;&#x5F00;&#x59CB;&#x52A0;&#x8F7D;&#x65F6;&#xFF0C;Xcode&#x8C03;&#x8BD5;&#x5668;&#x5C06;attache&#x5230;&#x4F60;&#x7684;&#x952E;&#x76D8;&#xFF0C;&#x5E76;&#x547D;&#x4E2D;&#x65AD;&#x70B9;&#x3002; &#x4E3A;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x914D;&#x7F6E;Info.plist&#x6587;&#x4EF6; &#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;Info.plist&#x6587;&#x4EF6;&#x5141;&#x8BB8;&#x9759;&#x6001;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x73B0;&#x5F0F;&#x7279;&#x5F81;&#xFF0C;&#x5305;&#x62EC;&#x4E3B;&#x8981;&#x8BED;&#x8A00;&#xFF0C;&#x4EE5;&#x53CA;&#x662F;&#x5426;&#x9700;&#x8981;open access&#x6743;&#x9650;&#x3002; &#x6253;&#x5F00;Xcode&#x5E76;&#x5207;&#x6362;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;target&#x3002;&#x5728;&#x5DE5;&#x7A0B;&#x5BFC;&#x822A;&#x680F;&#x9009;&#x62E9;Info.plist&#x6587;&#x4EF6;&#xFF0C;&#x6309;&#x6587;&#x672C;&#x683C;&#x5F0F;&#x5448;&#x73B0;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718&lt;key&gt;NSExtension&lt;/key&gt;&lt;dict&gt; &lt;key&gt;NSExtensionAttributes&lt;/key&gt; &lt;dict&gt; &lt;key&gt;IsASCIICapable&lt;/key&gt; &lt;false/&gt; &lt;key&gt;PrefersRightToLeft&lt;/key&gt; &lt;false/&gt; &lt;key&gt;PrimaryLanguage&lt;/key&gt; &lt;string&gt;en-US&lt;/string&gt; &lt;key&gt;RequestsOpenAccess&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;key&gt;NSExtensionPointIdentifier&lt;/key&gt; &lt;string&gt;com.apple.keyboard-service&lt;/string&gt; &lt;key&gt;NSExtensionPrincipalClass&lt;/key&gt; &lt;string&gt;KeyboardViewController&lt;/string&gt;&lt;/dict&gt; &#x6BCF;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x5728;App Extension Keys&#x4E2D;&#x90FD;&#x6709;&#x89E3;&#x91CA;&#x3002;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5B57;&#x5178;NSExtensionAttributes&#x4E2D;&#x7684;&#x5173;&#x952E;&#x5B57;&#x6765;&#x63CF;&#x8FF0;&#x4F60;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x7684;&#x7279;&#x5F81;&#x548C;&#x9700;&#x6C42;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; IsASCIICapable - &#x9ED8;&#x8BA4;&#x4E3A;NO&#x7684;&#x5E03;&#x5C14;&#x503C;&#x3002;&#x7528;&#x6237;&#x952E;&#x76D8;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x5411;&#x6587;&#x6863;&#x4E2D;&#x63D2;&#x5165;ASCII&#x5B57;&#x4E32;&#x3002;&#x5982;&#x679C;&#x8981;&#x4E3A;UIKeyboardTypeASCIICapable&#x5C5E;&#x6027;&#x7684;&#x8F93;&#x5165;&#x5BF9;&#x8C61;&#x5C55;&#x73B0;&#x5355;&#x72EC;&#x7C7B;&#x578B;&#x7684;&#x952E;&#x76D8;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x8BE5;&#x503C;&#x7F6E;&#x4E3A;YES&#x3002; PrefersRightToLeft - &#x9ED8;&#x8BA4;&#x4E3A;NO&#x7684;&#x5E03;&#x5C14;&#x503C;&#x3002;&#x662F;&#x5426;&#x4E3A;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x7684;&#x8BED;&#x79CD;&#x8BBE;&#x8BA1;&#x7684;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x952E;&#x76D8;&#x3002; PrimaryLanguage - &#x9ED8;&#x8BA4;&#x4E3A;en-US&#x7684;&#x5B57;&#x4E32;&#x3002;&#x4EE5;-&#x7684;&#x5F62;&#x5F0F;&#x63CF;&#x8FF0;&#x952E;&#x76D8;&#x7684;&#x4E3B;&#x8BED;&#x8A00;&#x3002;&#x53EF;&#x4EE5;&#x5230;http://www.opensource.apple.com/source/CF/CF-476.14/CFLocaleIdentifier.c&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x8BED;&#x79CD;&#x548C;&#x533A;&#x57DF;&#x3002; RequestsOpenAccess - &#x9ED8;&#x8BA4;&#x4E3A;NO&#x7684;&#x5E03;&#x5C14;&#x503C;&#x3002;&#x662F;&#x5426;&#x9700;&#x8981;&#x6BD4;&#x57FA;&#x7840;&#x952E;&#x76D8;&#x66F4;&#x5927;&#x7684;&#x6C99;&#x76D2;&#x8303;&#x56F4;&#x3002;&#x628A;&#x8BE5;&#x503C;&#x7F6E;&#x4E3A;YES&#x5C06;&#x9700;&#x8981;&#x5B8C;&#x5168;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x5C06;&#x83B7;&#x5F97;&#x5982;&#x4E0B;&#x80FD;&#x529B;&#xFF0C;&#x6BCF;&#x4E2A;&#x80FD;&#x529B;&#x90FD;&#x4F34;&#x968F;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x6743;&#x9650;&#xFF1A; * &#x8BBF;&#x95EE;&#x5B9A;&#x4F4D;&#x670D;&#x52A1;&#xFF0C;&#x901A;&#x8BAF;&#x5F55;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x76F8;&#x673A;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x9700;&#x8981;&#x7528;&#x6237;&#x5141;&#x8BB8; * &#x4E0E;&#x952E;&#x76D8;&#x7684;&#x5BB9;&#x5668;app&#x5171;&#x4EAB;&#x5BB9;&#x5668;&#x6570;&#x636E;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B8C;&#x6210;&#x6BD4;&#x5982;&#x5728;&#x5BB9;&#x5668;app&#x4E2D;&#x7BA1;&#x7406;&#x7528;&#x6237;&#x8BCD;&#x5E93;&#x7684;&#x754C;&#x9762;&#x7684;&#x529F;&#x80FD; * &#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x53D1;&#x9001;&#x6309;&#x952E;&#x3001;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#x4E4B;&#x7C7B;&#x7684;&#x6570;&#x636E;&#x4F9B;&#x4E91;&#x7AEF;&#x5904;&#x7406; * &#x4F7F;&#x7528;UIPasteboard&#x7C7B; * &#x64AD;&#x653E;&#x97F3;&#x9891;&#xFF0C;&#x5305;&#x62EC;&#x4F7F;&#x7528;playInputClick&#x65B9;&#x6CD5;&#x64AD;&#x653E;&#x6309;&#x952E;&#x97F3; * &#x8BBF;&#x95EE;iCloud&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6839;&#x636E;&#x7528;&#x6237;&#x8EAB;&#x4EFD;&#x540C;&#x6B65;&#x6BD4;&#x5982;&#x952E;&#x76D8;&#x8BBE;&#x7F6E;&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x81EA;&#x52A8;&#x7EA0;&#x9519;&#x8BCD;&#x5178; * &#x901A;&#x8FC7;&#x5BB9;&#x5668;app&#x8BBF;&#x95EE;&#x6E38;&#x620F;&#x4E2D;&#x5FC3;&#x548C;&#x5E94;&#x7528;&#x5185;&#x8D2D;&#x4E70; * &#x5982;&#x679C;&#x4F60;&#x7684;&#x952E;&#x76D8;&#x652F;&#x6301;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x7BA1;&#x7406;&#xFF08;MDM&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0E;&#x88AB;&#x7BA1;&#x7406;&#x7684;app&#x65E0;&#x7F1D;&#x5408;&#x4F5C; &#x5F53;&#x8003;&#x8651;&#x662F;&#x5426;&#x5C06;&#x8FD9;&#x4E9B;&#x5173;&#x952E;&#x5B57;&#x8BBE;&#x7F6E;&#x4E3A;YES&#x4E4B;&#x524D;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5148;&#x9605;&#x8BFB;&#x300A;&#x7528;&#x6237;&#x4FE1;&#x4EFB;&#x8BBE;&#x8BA1;&#x300B;&#xFF0C;&#x8FD9;&#x91CC;&#x63CF;&#x8FF0;&#x4E86;&#x5982;&#x4F55;&#x5C0A;&#x91CD;&#x548C;&#x4FDD;&#x62A4;&#x7528;&#x6237;&#x6570;&#x636E;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS下的Input Method Kit（译）]]></title>
    <url>%2F2017%2F03%2F06%2F2017%2F0306InputMethodKit%2F</url>
    <content type="text"><![CDATA[&#xFF08;&#x672C;&#x6587;&#x6765;&#x81EA;&#x300A;Input Method Kit API Reference&#x300B;&#xFF09; Input Method Kit&#x7528;&#x4E8E;&#x5F00;&#x53D1;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x5E76;&#x7BA1;&#x7406;&#x4E0E;&#x5BA2;&#x6237;&#x7AEF;&#x5E94;&#x7528;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x8BAF;&#xFF0C;&#x7BA1;&#x7406;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x548C;&#x8F93;&#x5165;&#x6A21;&#x5F0F;&#x7B49;&#x3002; &#x6982;&#x8981; OSX &#x5728;10.5&#x7248;&#x672C;&#x4E2D;&#x5F15;&#x5165;&#x4E86;IMK&#xFF0C;&#x8BE5;&#x6846;&#x67B6;&#x63D0;&#x4F9B;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x5F00;&#x53D1;&#x7684;&#x539F;&#x578B;&#x63A5;&#x53E3;&#xFF0C;&#x4E0E;&#x8001;&#x7248;&#x672C;&#x7684;mac&#x76F8;&#x6BD4;&#xFF0C;&#x8FD9;&#x5957;&#x63A5;&#x53E3;&#x5927;&#x5927;&#x7B80;&#x5316;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x5F00;&#x53D1;&#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#x3002;&#x8BE5;&#x6846;&#x67B6;&#x4E0E;&#x6587;&#x5B57;&#x670D;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#x5145;&#x5206;&#x6574;&#x5408;&#xFF0C;&#x4F7F;&#x5F97;32&#x4F4D;&#x548C;64&#x4F4D;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x548C;&#x8F93;&#x5165;&#x6CD5;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x65E0;&#x7F1D;&#x5408;&#x4F5C;&#x3002; IMK&#x901A;&#x8FC7;&#x51E0;&#x4E2A;&#x7C7B;&#x548C;&#x534F;&#x8BAE;&#x6765;&#x652F;&#x6301;&#x8F93;&#x5165;&#x6CD5;&#x4E0E;&#x5BA2;&#x6237;&#x7AEF;&#x5E94;&#x7528;&#x95F4;&#x7684;&#x901A;&#x8BAF;&#xFF0C;&#x5E76;&#x7BA1;&#x7406;&#x5019;&#x9009;&#x7A97;&#x548C;&#x8F93;&#x5165;&#x6A21;&#x5F0F;&#x7B49;&#x3002;&#x8F93;&#x5165;&#x6CD5;&#x4ECE;&#x8F6C;&#x6362;&#x5F15;&#x64CE;&#x63D0;&#x4F9B;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x6587;&#x5B57;&#xFF08;&#x8BE5;&#x5F15;&#x64CE;&#x53EF;&#x4EE5;&#x7528;C&#xFF0C;C++&#xFF0C;Objective-C&#xFF0C;Python&#x7B49;&#x7F16;&#x5199;&#xFF09;&#xFF0C;&#x8FD8;&#x4F1A;&#x63D0;&#x4F9B;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x3001;&#x53EF;&#x9009;&#x7684;&#x4E8B;&#x4EF6;&#x5904;&#x7406;&#x3001;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x6269;&#x5C55;&#x7684;Info.plist&#x6587;&#x4EF6;&#x63D0;&#x4F9B;&#x66F4;&#x591A;&#x8F93;&#x5165;&#x6CD5;&#x4FE1;&#x606F;&#x3002;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x83DC;&#x5355;&#x9879;&#x652F;&#x6301;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x7279;&#x6B8A;&#x547D;&#x4EE4;&#x6216;&#x504F;&#x597D;&#x8BBE;&#x7F6E;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x770B;IMK&#x6D89;&#x53CA;&#x7684;&#x7C7B;&#x3001;&#x534F;&#x8BAE;&#x548C;&#x5176;&#x5B83;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002; IMKCandidates IMKCandidates&#x7C7B;&#x7528;&#x6765;&#x8868;&#x793A;&#x5019;&#x9009;&#x3002;&#x5728;&#x7528;&#x6237;&#x9009;&#x62E9;&#x4E86;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x540E;&#xFF0C;&#x4F1A;&#x901A;&#x77E5;&#x5BF9;&#x5E94;&#x7684;IMKInputController&#x5BF9;&#x8C61;&#x3002;&#x5019;&#x9009;&#x662F;&#x5BF9;&#x5DF2;&#x7ECF;&#x8F93;&#x5165;&#x7684;&#x6587;&#x5B57;&#x5E8F;&#x5217;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x3002;IMKCandidates&#x7C7B;&#x652F;&#x6301;&#x5728;&#x4F60;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x4E2D;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x6765;&#x5C55;&#x73B0;&#x5185;&#x5BB9;&#x3002;&#x8BE5;&#x7C7B;&#x7684;&#x4F7F;&#x7528;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x8F93;&#x5165;&#x6CD5;&#x90FD;&#x9700;&#x8981;&#x5B83;&#x3002; &#x5F53;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;IMKCandidates&#x5BF9;&#x8C61;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5C06;&#x5B83;&#x5F52;&#x5C5E;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x7684;IMKServer&#x5BF9;&#x8C61;&#x3002;&#x7136;&#x540E;&#x91CD;&#x5199;IMKInputController&#x7684;&#x65B9;&#x6CD5;candidateSelectionChanged:&#x548C;candidateSelected:&#xFF0C;&#x5E76;&#x5728;&#x4F60;&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E2D;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x65B9;&#x6CD5;&#x3002;IMKInputController&#x5B50;&#x7C7B;&#x901A;&#x8FC7;&#x5B9E;&#x73B0;&#x5019;&#x9009;&#x65B9;&#x6CD5;&#x6765;&#x4E3A;IMKCandidate&#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x5019;&#x9009;&#x3002;&#x5F53;&#x9700;&#x8981;&#x663E;&#x793A;&#x5019;&#x9009;&#x7A97;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x5019;&#x9009;&#x65B9;&#x6CD5;&#x6765;&#x66F4;&#x65B0;&#x5019;&#x9009;&#x5217;&#x8868;&#x5E76;&#x663E;&#x793A;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x3002;&#x8BE5;&#x7C7B;&#x6D89;&#x53CA;&#x7684;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; &#x521D;&#x59CB;&#x5316;&#x5019;&#x9009;&#x7A97; init!(server: IMKServer!, panelType: IMKCandidatePanelType) &#x2003; &#x8FD4;&#x56DE;&#x521D;&#x59CB;&#x5316;&#x7684;IMKCandidates&#x5BF9;&#x8C61; &#x7BA1;&#x7406;&#x9009;&#x62E9;&#x6309;&#x952E; func setSelectionKeys([Any]!) &#x2003; &#x4E3A;&#x5019;&#x9009;&#x8BBE;&#x7F6E;&#x9009;&#x62E9;&#x952E; func selectionKeys() &#x2003; &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;NSNumber&#x5BF9;&#x8C61;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x952E;&#x76D8;&#x7801; func setSelectionKeysKeylayout(TISInputSource!) &#x2003; &#x8BBE;&#x7F6E;&#x7528;&#x6765;&#x6620;&#x5C04;&#x865A;&#x62DF;&#x952E;&#x76D8;&#x7801;&#x5230;&#x5B57;&#x7B26;&#x7684;&#x952E;&#x76D8;&#x5E03;&#x5C40; func selectionKeysKeylayout() &#x2003; &#x8FD4;&#x56DE;&#x7528;&#x6765;&#x6620;&#x5C04;&#x865A;&#x62DF;&#x952E;&#x76D8;&#x7801;&#x5230;&#x5B57;&#x7B26;&#x7684;&#x952E;&#x76D8;&#x5E03;&#x5C40; &#x7BA1;&#x7406;&#x7A97;&#x53E3;&#x5C55;&#x73B0;&#x548C;&#x884C;&#x4E3A; func show(IMKCandidatesLocationHint) &#x2003; &#x663E;&#x793A;&#x5019;&#x9009;&#x7A97; func hide() &#x2003; &#x9690;&#x85CF;&#x5019;&#x9009;&#x7A97; func isVisible() &#x2003; &#x8FD4;&#x56DE;&#x5019;&#x9009;&#x7A97;&#x662F;&#x5426;&#x53EF;&#x89C1; func setDismissesAutomatically(Bool) &#x2003; &#x8BBE;&#x7F6E;&#x5019;&#x9009;&#x7A97;&#x662F;&#x5426;&#x81EA;&#x52A8;&#x53D6;&#x6D88;&#x7684;&#x6807;&#x5FD7; func dismissesAutomatically() &#x2003; &#x8FD4;&#x56DE;&#x5019;&#x9009;&#x7A97;&#x662F;&#x5426;&#x81EA;&#x52A8;&#x53D6;&#x6D88;&#x7684;&#x6807;&#x5FD7; func update() &#x2003; &#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97;&#x4E0A;&#x7684;&#x5019;&#x9009;&#x5217;&#x8868; &#x7BA1;&#x7406;&#x7A97;&#x4F53;&#x7C7B;&#x578B;&#x548C;&#x6587;&#x5B57;&#x5C5E;&#x6027; func panelType() &#x2003; &#x8FD4;&#x56DE;&#x5019;&#x9009;&#x7A97;&#x7684;&#x98CE;&#x683C; func setPanelType(IMKCandidatePanelType) &#x2003; &#x8BBE;&#x7F6E;&#x5019;&#x9009;&#x7A97;&#x98CE;&#x683C; func setAttributes([AnyHashable : Any]!) &#x2003; &#x8BBE;&#x7F6E;&#x5019;&#x9009;&#x7A97;&#x5C5E;&#x6027; func attributes() &#x2003; &#x8FD4;&#x56DE;&#x5019;&#x9009;&#x7A97;&#x5C5E;&#x6027; &#x663E;&#x793A;&#x6CE8;&#x91CA;&#x7A97;&#x53E3; func showAnnotation(NSAttributedString!) &#x2003; &#x5728;&#x6CE8;&#x91CA;&#x7A97;&#x53E3;&#x4E0A;&#x663E;&#x793A;&#x6CE8;&#x91CA;&#x4E32; &#x5E38;&#x91CF; IMKCandidatePanelType &#x2003; IMK&#x63D0;&#x4F9B;&#x7684;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x7684;&#x7C7B;&#x578B; IMKCandidatesLocationHint &#x2003; &#x653E;&#x7F6E;&#x5019;&#x9009;&#x7A97;&#x53E3;&#x7684;&#x4F4D;&#x7F6E;&#x63D0;&#x793A; IMKCandidatesOpacityAttributeName &#x2003; &#x5019;&#x9009;&#x7A97;&#x53E3;&#x7684;&#x900F;&#x660E;&#x5EA6;&#x7EA7;&#x522B; &#x521D;&#x59CB;&#x5316;&#x5668; init!(server: IMKServer!, panelType: IMKCandidatePanelType, styleType: IMKStyleType) &#x2003; &#x5B9E;&#x4F8B;&#x65B9;&#x6CD5; func attachChild(IMKCandidates!, toCandidate: Int, type: IMKStyleType) &#x2003; func candidateFrame() &#x2003; func candidateIdentifier(atLineNumber: Int) &#x2003; func candidateStringIdentifier(Any!) &#x2003; func clearSelection() &#x2003; func detachChild(Int) &#x2003; func hideChild() &#x2003; func lineNumberForCandidate(withIdentifier: Int) &#x2003; func selectCandidate(Int) &#x2003; func selectCandidate(withIdentifier: Int) &#x2003; func selectedCandidate() &#x2003; func selectedCandidateString() &#x2003; func setCandidateData([Any]!) &#x2003; func setCandidateFrameTopLeft(NSPoint) &#x2003; func show() &#x2003; func showChild() &#x2003; func showSublist([Any]!, subListDelegate: Any!) &#x2003; IMKInputController IMKInputController&#x4E3A;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x57FA;&#x7C7B;&#x3002;&#x7531;IMKServer&#x4E3A;&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x4F1A;&#x8BDD;&#x521B;&#x5EFA;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#xFF0C;IMKServer&#x901A;&#x5E38;&#x5728;main&#x51FD;&#x6570;&#x7684;&#x5F00;&#x5934;&#x521B;&#x5EFA;&#xFF0C;&#x8F93;&#x5165;&#x4F1A;&#x8BDD;&#x5219;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x5E94;&#x7528;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x4F1A;&#x8BDD;&#x90FD;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x5373;IMKInputController&#x5BF9;&#x8C61;&#x3002; IMKInputController&#x5BF9;&#x8C61;&#x7528;&#x7EB8;&#x8F93;&#x5165;&#x6CD5;&#x4FA7;&#x7684;&#x6587;&#x672C;&#x8F93;&#x5165;&#x3002;&#x5B83;&#x7BA1;&#x7406;&#x6765;&#x81EA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E8B;&#x4EF6;&#x548C;&#x6587;&#x672C;&#x4EE5;&#x53CA;&#x88AB;&#x8F93;&#x5165;&#x6CD5;&#x5F15;&#x64CE;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x6587;&#x672C;&#x3002;IMKInputController&#x5B8C;&#x5168;&#x5B9E;&#x73B0;&#x4E86;IMKStateSetting&#x534F;&#x8BAE;&#x548C;IMKMouseHandling&#x534F;&#x8BAE;&#x3002;&#x901A;&#x5E38;&#x4F60;&#x4E0D;&#x9700;&#x8981;&#x8986;&#x5199;&#x8BE5;&#x7C7B;&#xFF0C;&#x800C;&#x53EA;&#x9700;&#x8981;&#x4E3A;&#x4F60;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x3002;IMKInputController&#x534F;&#x8BAE;&#x65B9;&#x6CD5;&#x7684;&#x7248;&#x672C;&#x4F1A;&#x68C0;&#x67E5;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x5B9E;&#x73B0;&#x4E86;&#x67D0;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5219;&#x8C03;&#x7528;&#x6B64;&#x4EE3;&#x7406;&#x7248;&#x672C;&#x3002;&#x4EE5;&#x4E0B;&#x662F;&#x5B83;&#x7684;&#x6210;&#x5458;&#xFF1A; &#x521D;&#x59CB;&#x5316;InputController init!(server: IMKServer!, delegate: Any!, client: Any!) &#x2003; &#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x4EE3;&#x7406;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668; &#x533A;&#x57DF;&#x76F8;&#x5173; func compositionAttributes(at: NSRange) &#x2003; &#x8FD4;&#x56DE;&#x6587;&#x672C;&#x5C5E;&#x6027;&#x7684;&#x5B57;&#x5178; func selectionRange() &#x2003; &#x8FD4;&#x56DE;&#x9009;&#x4E2D;&#x6587;&#x672C;&#x7684;&#x533A;&#x57DF;&#xFF0C;&#x8BE5;&#x533A;&#x57DF;&#x7684;&#x6587;&#x672C;&#x4F1A;&#x88AB;&#x9009;&#x4E2D;&#x4E14;&#x66FF;&#x6362;&#x6389; func replacementRange() &#x2003; &#x8FD4;&#x56DE;&#x5BA2;&#x6237;&#x7AEF;&#x6587;&#x6863;&#x4E2D;&#x5E94;&#x5F53;&#x88AB;&#x66FF;&#x6362;&#x6389;&#x7684;&#x6587;&#x672C;&#x7684;&#x533A;&#x57DF; func mark(forStyle: Int, at: NSRange) &#x2003; &#x8FD4;&#x56DE;&#x6587;&#x672C;&#x5C5E;&#x6027;&#x7684;&#x5B57;&#x5178;&#xFF0C;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6807;&#x6CE8;&#x4E00;&#x6BB5;&#x5C5E;&#x6027;&#x4E32;&#x7684;&#x533A;&#x57DF;&#x5E76;&#x53D1;&#x9001;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x5E94;&#x7528; &#x7BA1;&#x7406;&#x4EE3;&#x7406; func setDelegate(Any!) &#x2003; &#x4E3A;&#x8F93;&#x5165;&#x6CD5;&#x63A7;&#x5236;&#x5668;&#x5BF9;&#x8C61;&#x8BBE;&#x7F6E;&#x4EE3;&#x7406; &#x83B7;&#x5F97;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#x5BF9;&#x8C61; func server() &#x2003; &#x8FD4;&#x56DE;&#x7BA1;&#x7406;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x7684;server&#x5BF9;&#x8C61; func client() &#x2003; &#x8FD4;&#x56DE;&#x4E0E;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x5173;&#x8054;&#x7684;client&#x5BF9;&#x8C61; &#x8DDF;&#x8E2A;&#x9009;&#x62E9; func annotationSelected(NSAttributedString!, forCandidate: NSAttributedString!) &#x2003; &#x5411;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x53D1;&#x9001;&#x88AB;&#x9009;&#x4E2D;&#x7684;&#x5019;&#x9009;&#x4E32;&#x548C;&#x6CE8;&#x91CA;&#x4E32; func candidateSelectionChanged(NSAttributedString!) &#x2003; &#x901A;&#x77E5;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x5F53;&#x524D;&#x5019;&#x9009;&#x7A97;&#x4E2D;&#x9009;&#x4E2D;&#x7684;&#x5019;&#x9009;&#x9879;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316; func candidateSelected(NSAttributedString!) &#x2003; &#x901A;&#x77E5;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5019;&#x9009;&#x88AB;&#x9009;&#x4E2D;&#x4E86; &#x7BA1;&#x7406;&#x5199;&#x4F5C;&#x4E32; func updateComposition() &#x2003; &#x901A;&#x77E5;&#x8F93;&#x5165;&#x63A7;&#x5236;&#x5668;&#x5199;&#x4F5C;&#x4E32;&#x53D1;&#x751F;&#x53D8;&#x5316; func cancelComposition() &#x2003; &#x53D6;&#x6D88;&#x5F53;&#x524D;&#x5199;&#x4F5C;&#x4E32;&#xFF0C;&#x5E76;&#x7528;&#x539F;&#x59CB;&#x4E32;&#x66FF;&#x4EE3;&#x5F53;&#x524D;&#x6807;&#x8BB0;&#x7684;&#x6587;&#x672C; &#x9690;&#x85CF;&#x7528;&#x6237;&#x754C;&#x9762; func hidePalettes() &#x2003; &#x901A;&#x77E5;&#x8F93;&#x5165;&#x6CD5;&#x9690;&#x85CF;&#x7528;&#x6237;&#x754C;&#x9762; &#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x547D;&#x4EE4; func doCommand(by: Selector!, command: [AnyHashable : Any]!) &#x2003; &#x4F20;&#x9012;&#x7531;&#x975E;&#x8F93;&#x5165;&#x6CD5;&#x8FDB;&#x7A0B;&#x4EA7;&#x751F;&#x7684;&#x547D;&#x4EE4; func menu() &#x2003; &#x8FD4;&#x56DE;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x547D;&#x4EE4;&#x83DC;&#x5355; &#x5B9E;&#x4F8B;&#x65B9;&#x6CD5; func delegate() &#x2003; func inputControllerWillClose() &#x2003; IMKServer IMKServer&#x7C7B;&#x7BA1;&#x7406;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x8FDE;&#x63A5;&#x3002;&#x5E94;&#x5F53;&#x5728;main&#x51FD;&#x6570;&#x4E2D;&#x521B;&#x5EFA;IMKServer&#x5BF9;&#x8C61;&#xFF0C;&#x6C38;&#x8FDC;&#x4E0D;&#x8981;&#x4FEE;&#x6539;&#x8BE5;&#x7C7B;&#xFF0C;&#x4E0D;&#x8981;&#x4ECE;&#x5B83;&#x6D3E;&#x751F;&#x5B50;&#x7C7B;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x5B83;&#x7684;&#x6210;&#x5458;&#xFF1A; ## &#x521D;&#x59CB;&#x5316;&#x5BF9;&#x8C61; init!(name: String!, bundleIdentifier: String!) &#x2003; &#x6839;&#x636E;plist&#x6587;&#x4EF6;&#x63D0;&#x4F9B;&#x7684;&#x4FE1;&#x606F;&#x521B;&#x5EFA;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;server&#x5BF9;&#x8C61; init!(name: String!, controllerClass: AnyClass!, delegateClass: AnyClass!) &#x2003; &#x6839;&#x636E;&#x53C2;&#x6570;&#x521B;&#x5EFA;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;server&#x5BF9;&#x8C61; &#x83B7;&#x5F97;&#x8F93;&#x5165;&#x6CD5;&#x7684;Bundle func bundle() &#x2003; &#x8FD4;&#x56DE;&#x8F93;&#x5165;&#x6CD5;&#x7684;NSBundle&#x5BF9;&#x8C61; &#x5E38;&#x91CF; IMKModeDictionary &#x2003; &#x8F93;&#x5165;&#x6CD5;&#x6A21;&#x5F0F;&#x5B57;&#x5178;&#x5173;&#x952E;&#x5B57; IMKControllerClass &#x2003; &#x8F93;&#x5165;&#x6CD5;&#x63A7;&#x5236;&#x5668;&#x7C7B;&#x7684;&#x5173;&#x952E;&#x5B57; IMKDelegateClass &#x2003; &#x8F93;&#x5165;&#x6CD5;&#x4EE3;&#x7406;&#x7C7B;&#x7684;&#x5173;&#x952E;&#x5B57; &#x5B9E;&#x4F8B;&#x65B9;&#x6CD5; func lastKeyEventWasDeadKey() &#x2003; func paletteWillTerminate() &#x2003; IMKMouseHandling &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x534F;&#x8BAE;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7684;&#x9F20;&#x6807;&#x5904;&#x7406;&#x4E8B;&#x4EF6;&#x3002;&#x4E00;&#x4E0B;&#x662F;&#x5B83;&#x7684;&#x6210;&#x5458;&#xFF1A; ## &#x5904;&#x7406;&#x9F20;&#x6807;&#x4E8B;&#x4EF6; func mouseDown(onCharacterIndex: Int, coordinate: NSPoint, withModifier: Int, continueTracking: UnsafeMutablePointer!, client: Any!) &#x2003; &#x5904;&#x7406;&#x53D1;&#x9001;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x9F20;&#x6807;&#x6309;&#x4E0B;&#x4E8B;&#x4EF6; func mouseUp(onCharacterIndex: Int, coordinate: NSPoint, withModifier: Int, client: Any!) &#x2003; &#x5904;&#x7406;&#x53D1;&#x9001;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x9F20;&#x6807;&#x62AC;&#x8D77;&#x4E8B;&#x4EF6; func mouseMoved(onCharacterIndex: Int, coordinate: NSPoint, withModifier: Int, client: Any!) &#x2003; &#x5904;&#x7406;&#x53D1;&#x9001;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x9F20;&#x6807;&#x79FB;&#x52A8;&#x4E8B;&#x4EF6; IMKServerInput &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x534F;&#x8BAE;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x5904;&#x7406;&#x6587;&#x672C;&#x4E8B;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x5F0F;&#x534F;&#x8BAE;&#xFF0C;&#x56E0;&#x4E3A;&#x6709;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x5904;&#x7406;&#x4E8B;&#x4EF6;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x9009;&#x62E9;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x6765;&#x5B9E;&#x73B0;&#x5BF9;&#x5E94;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x4E0B;&#xFF1A; &#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x3002;&#x7CFB;&#x7EDF;&#x628A;&#x6BCF;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x6309;&#x4E0B;&#x4E8B;&#x4EF6;&#x6620;&#x5C04;&#x5230;&#x5230;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x6210;&#x529F;&#xFF08;&#x627E;&#x5230;&#x6B64;&#x6620;&#x5C04;&#x65B9;&#x6CD5;&#xFF09;&#xFF0C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;didCommandBySelector:client:&#xFF0C;&#x5426;&#x5219;&#xFF08;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x8BE5;&#x65B9;&#x6CD5;&#xFF09;&#x8C03;&#x7528;inputText:client:&#x3002;&#x9488;&#x5BF9;&#x6B64;&#x65B9;&#x5F0F;&#xFF0C;&#x4F60;&#x5E94;&#x5F53;&#x5B9E;&#x73B0;input&#x200B;Text:&#x200B;client:&#x200B; &#x548C;did&#x200B;Command&#x200B;By&#x200B;Selector:&#x200B;client:&#x200B;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x3002; &#x53EA;&#x5904;&#x7406;&#x6587;&#x672C;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#x4F60;&#x65E0;&#x9700;&#x952E;&#x76D8;&#x7ED1;&#x5B9A;&#x5C31;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x6240;&#x6709;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x89E3;&#x6790;&#x76F8;&#x5173;&#x7684;&#x6587;&#x672C;&#x6570;&#x636E;&#x3002;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x4F1A;&#x5305;&#x542B;Unicodes&#xFF0C;&#x4EA7;&#x751F;&#x5B83;&#x4EEC;&#x7684;&#x952E;&#x76D8;&#x7801;&#xFF0C;&#x4FEE;&#x9970;&#x6807;&#x8BB0;&#x3002;&#x8BE5;&#x6570;&#x636E;&#x88AB;&#x53D1;&#x9001;&#x7ED9;&#x65B9;&#x6CD5;input&#x200B;Text:&#x200B;key:&#x200B;modifiers:&#x200B;client:&#x200B;&#xFF0C;&#x4F60;&#x5E94;&#x5F53;&#x5B9E;&#x73B0;&#x8BE5;&#x65B9;&#x6CD5;&#x3002; &#x5904;&#x7406;&#x6240;&#x6709;&#x4E8B;&#x4EF6;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#x8F93;&#x5165;&#x6CD5;&#x4F1A;&#x63A5;&#x6536;&#x5230;&#x6765;&#x81EA;&#x6587;&#x672C;&#x670D;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x88AB;&#x5C01;&#x88C5;&#x4E3A;NSEvent&#x5BF9;&#x8C61;&#x3002;&#x4F60;&#x5FC5;&#x987B;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;handle&#x200B;Event:&#x200B;client:&#x200B;&#x3002; &#x652F;&#x6301;&#x952E;&#x76D8;&#x7ED1;&#x5B9A; - (BOOL)inputText:(NSString *)string client:(id)sender; &#x2003; &#x5904;&#x7406;&#x6CA1;&#x6709;&#x6620;&#x5C04;&#x5230;&#x54CD;&#x5E94;&#x65B9;&#x6CD5;&#x7684;&#x952E;&#x76D8;&#x6309;&#x4E0B;&#x4E8B;&#x4EF6; - (BOOL)didCommandBySelector:(SEL)aSelector client:(id)sender; &#x2003; &#x5904;&#x7406;&#x7531;&#x7528;&#x6237;&#x884C;&#x4E3A;&#x4EA7;&#x751F;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x6BD4;&#x5982;&#x6309;&#x4E0B;&#x67D0;&#x4E2A;&#x6309;&#x952E;&#x6216;&#x70B9;&#x51FB;&#x4E86;&#x9F20;&#x6807;&#x6309;&#x952E; &#x89E3;&#x6790;&#x6587;&#x672C;&#x6570;&#x636E; - (BOOL)inputText:(NSString *)string key:(NSInteger)keyCode modifiers:(NSUInteger)flags client:(id)sender; &#x2003; &#x63A5;&#x6536;unicode&#x3001;&#x952E;&#x76D8;&#x7801;&#x4EE5;&#x53CA;&#x952E;&#x76D8;&#x7684;&#x4FEE;&#x9970;&#x6807;&#x8BB0;&#x6570;&#x636E; &#x76F4;&#x63A5;&#x4ECE;&#x6587;&#x672C;&#x670D;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#x63A5;&#x6536;&#x4E8B;&#x4EF6; - (BOOL)handleEvent:(NSEvent *)event client:(id)sender; &#x2003; &#x5904;&#x7406;&#x952E;&#x76D8;&#x6309;&#x4E0B;&#x548C;&#x9F20;&#x6807;&#x4E8B;&#x4EF6; &#x63D0;&#x4EA4;&#x5199;&#x4F5C;&#x4E32; func commitComposition(Any!) &#x2003; &#x901A;&#x77E5;&#x63A7;&#x5236;&#x5668;&#xFF0C;&#x63D0;&#x4EA4;&#x7EC4;&#x7EC7;&#x4E32; &#x83B7;&#x5F97;&#x8F93;&#x5165;&#x4E32;&#x548C;&#x5019;&#x9009;&#x4E32; func composedString(Any!) &#x2003; &#x8FD4;&#x56DE;&#x5F53;&#x524D;&#x7EC4;&#x7EC7;&#x4E32; func originalString(Any!) &#x2003; &#x8FD4;&#x56DE;&#x7EC4;&#x7EC7;&#x524D;&#x7684;unicode&#x5B57;&#x4E32; func candidates(Any!) &#x2003; &#x8FD4;&#x56DE;&#x5019;&#x9009;&#x5217;&#x8868; &#x5E38;&#x91CF; Info Dictionary Keys &#x2003; IMKStateSetting &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x534F;&#x8BAE;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x8BBE;&#x7F6E;&#x548C;&#x4FEE;&#x6539;&#x8F93;&#x5165;&#x6CD5;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x5B83;&#x7684;&#x6210;&#x5458; ## &#x6FC0;&#x6D3B;&#x548C;&#x89E3;&#x9664;&#x6FC0;&#x6D3B;Server func activateServer(Any!) &#x2003; &#x6FC0;&#x6D3B;&#x8F93;&#x5165;&#x6CD5;server func deactivateServer(Any!) &#x2003; &#x89E3;&#x9664;&#x6FC0;&#x6D3B;&#x8F93;&#x5165;&#x6CD5;server &#x663E;&#x793A;&#x504F;&#x597D;&#x8BBE;&#x7F6E;&#x7A97;&#x53E3; func showPreferences(Any!) &#x2003; &#x663E;&#x793A;&#x504F;&#x597D;&#x8BBE;&#x7F6E;&#x7A97;&#x53E3; &#x83B7;&#x5F97;&#x652F;&#x6301;&#x7684;&#x4E8B;&#x4EF6; func recognizedEvents(Any!) &#x2003; &#x8FD4;&#x56DE;&#x8868;&#x793A;&#x4E8B;&#x4EF6;&#x63A9;&#x7801;&#x7684;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x5F62;&#x6570; &#x83B7;&#x5F97;&#x6A21;&#x5F0F;&#x5B57;&#x5178; func modes(Any!) &#x2003; &#x8FD4;&#x56DE;&#x4E0E;&#x8F93;&#x5165;&#x6CD5;&#x5173;&#x8054;&#x7684;&#x6A21;&#x5F0F;&#x5B57;&#x5178; &#x5B58;&#x53D6;&#x503C; func value(forTag: Int, client: Any!) &#x2003; &#x8FD4;&#x56DE;&#x4E0E;tag&#x5339;&#x914D;&#x7684;&#x503C; func setValue(Any!, forTag: Int, client: Any!) &#x2003; &#x5C06;&#x503C;&#x4FDD;&#x5B58;&#x5230;key&#x4E0B; NSObject &#x8FD9;&#x662F;Objective-C&#x6D3E;&#x751F;&#x4F53;&#x7CFB;&#x7684;&#x6839;&#x7C7B;&#xFF0C;&#x4ECE;&#x8BE5;&#x7C7B;&#x53EF;&#x4EE5;&#x7EE7;&#x627F;Objective-C&#x5BF9;&#x8C61;&#x7684;&#x57FA;&#x672C;&#x80FD;&#x529B;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS下基于IMK的输入法（一）——创建步骤]]></title>
    <url>%2F2017%2F03%2F05%2F2017%2F0305macOSIMKSample1%2F</url>
    <content type="text"><![CDATA[NumberInput_IMKit_Sample&#x548C;&#x300A;Input Method Kit API Reference&#x300B;&#x662F;&#x82F9;&#x679C;&#x4E3A;&#x8F93;&#x5165;&#x6CD5;&#x5F00;&#x53D1;&#x63D0;&#x4F9B;&#x4EC5;&#x6709;&#x7684;&#x4E24;&#x7BC7;&#x6750;&#x6599;&#xFF0C;&#x672C;&#x6587;&#x6839;&#x636E;&#x5B83;&#x4EEC;&#x7814;&#x7A76;macOS &#x57FA;&#x4E8E;IMKit framework&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x7F16;&#x5199;&#x3002; &#x4F7F;&#x7528;Xcode&#x521B;&#x5EFA;&#x8F93;&#x5165;&#x6CD5;&#x9879;&#x76EE; &#x521D;&#x59CB;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5728;Xcode&#x4E2D;&#x9009;&#x62E9;File &gt; New &gt; Project &gt; macOS &gt; Cocoa&#x70B9;&#x51FB;Next 2. &#x586B;&#x5199;Project Name&#x4E3A;IMKSample&#xFF0C;&#x6CE8;&#x610F;&#x5728;Organization Identifier&#x4E2D;&#x4E00;&#x5B9A;&#x8981;&#x5305;&#x542B;.InputMethod.&#x5982;&#xFF1A;palanceli.inputmethod&#xFF0C;&#x70B9;&#x51FB;Next 3. &#x9009;&#x62E9;&#x8981;&#x4FDD;&#x5B58;&#x7684;&#x4F4D;&#x7F6E;IMKSample/&#xFF0C;&#x70B9;&#x51FB;Create&#x3002; 4. &#x6253;&#x5F00;Info.plist&#x6587;&#x4EF6;&#x7F16;&#x8F91;&#x5668;&#xFF0C;&#x6DFB;&#x52A0;4&#x4E2A;Key&#xFF0C;&#x89C1;&#x4E0B;&#x8868;&#x3002; 5. &#x6DFB;&#x52A0;&#x56FE;&#x6807;&#x6587;&#x4EF6;IMKSample/main.tif 6. &#x9009;&#x4E2D;&#x5DE6;&#x4FA7;&#x5BFC;&#x822A;&#x680F;&#x7684;IMKSample&#x9879;&#x76EE;&#xFF0C;&#x9009;&#x4E2D;TARGETS&#x4E2D;&#x7684;IMKSample&#xFF0C;General &gt; Linked Frameworks and Libraries&#x70B9;&#x51FB;+&#x53F7;&#xFF0C;&#x6DFB;&#x52A0;InputMethodKit.framework table th:nth-of-type(1){ width: 300px; } table th:nth-of-type(2){ width: 60px; } Key Type Value InputMethodConnectionName String IMKSampleConnection InputMethodServerControllerClass String IMKSampleController Application is background only Boolean YES tsInputMethodIconFileKey String main.tif tsInputMethodCharacterRepertoireKey Array (String)Latn &#x6B64;&#x65F6;&#x7F16;&#x8BD1;&#x662F;&#x6CA1;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x4F46;&#x8BE5;&#x9879;&#x76EE;&#x8FD8;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x6DFB;&#x52A0;IMKSampleController &#x4E3A;&#x9879;&#x76EE;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;&#xFF0C;&#x9009;&#x62E9;macOS &gt; Cocoa Class&#x70B9;&#x51FB;Next &#x586B;&#x5199;Class&#x4E3A;IMKSampleController&#xFF0C;Subclass...&#x4E3A;IMKInputController&#xFF0C;&#x70B9;&#x51FB;Next&#xFF0C;&#x9009;&#x62E9;&#x8981;&#x4FDD;&#x5B58;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x70B9;&#x51FB;Create &#x4FEE;&#x6539;&#x751F;&#x6210;&#x7684;IMKSampleController.h&#x5982;&#x4E0B;&#xFF1A; 123456#import &lt;Cocoa/Cocoa.h&gt;#import &lt;InputMethodKit/InputMethodKit.h&gt; // &#x6DFB;&#x52A0;&#x6B64;&#x884C;@interface IMKSampleController : IMKInputController@end &#x4FEE;&#x6539;&#x751F;&#x6210;&#x7684;IMKSampleController.m&#x5982;&#x4E0B;&#xFF1A; 1234567891011#import &quot;IMKSampleController.h&quot;@implementation IMKSampleController// &#x8BE5;&#x65B9;&#x6CD5;&#x63A5;&#x6536;&#x6765;&#x81EA;&#x5BA2;&#x6237;&#x7A0B;&#x5E8F;&#x7684;&#x6309;&#x952E;&#x8F93;&#x5165;&#xFF0C;InputMethodKit&#x4F1A;&#x628A;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#x8F6C;&#x6362;&#x6210;NSString&#x53D1;&#x9001;&#x7ED9;&#x672C;&#x65B9;&#x6CD5;&#x3002;//&#x8FD4;&#x56DE;YES&#x8868;&#x660E;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x4E0D;&#x518D;&#x628A;&#x6309;&#x952E;&#x7EE7;&#x7EED;&#x53D1;&#x9001;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;NO-(BOOL)inputText:(NSString*)string client:(id)sender{ NSLog(@&quot;%@&quot;, string); return NO;}@end &#x4FEE;&#x6539;main.m&#x6587;&#x4EF6; 1234567891011121314151617181920#import &lt;Cocoa/Cocoa.h&gt;#import &lt;InputMethodKit/InputMethodKit.h&gt; // &#x6DFB;&#x52A0;&#x5305;&#x542B;// &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x6CD5;&#x5FC5;&#x987B;&#x6709;&#x552F;&#x4E00;&#x8FDE;&#x63A5;&#x540D;&#x79F0;&#xFF0C;&#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x70B9;&#x548C;&#x7A7A;&#x683C;const NSString* kConnectionName = @&quot;IMKSampleConnection&quot;;IMKServer* server;int main(int argc, const char * argv[]) { @autoreleasepool{ // &#x83B7;&#x53D6;bundle ID NSString* bundleID = [[NSBundle mainBundle] bundleIdentifier]; server = [[IMKServer alloc] initWithName:(NSString*)kConnectionName bundleIdentifier:bundleID]; //finally run everything [[NSApplication sharedApplication] run]; } return 0;} &#x5220;&#x9664;&#x591A;&#x4F59;&#x6587;&#x4EF6; &#x5220;&#x9664;AppDelegate.h&#x3001;AppDelegate.m&#x3001;ViewController.h&#x3001;ViewController.m&#x8FD9;&#x4E9B;&#x7531;&#x6A21;&#x677F;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x3002; &#x7F16;&#x8BD1; &#x6267;&#x884C;sudo chmod -R 777 /Library/Input Methods&#xFF0C;&#x786E;&#x4FDD;Xcode&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x751F;&#x6210;app&#x6587;&#x4EF6;&#x5230;&#x8FD9;&#x91CC;&#x3002; &#x6765;&#x5230;Xcode&#x4E2D;IMKSample&#x7684;&#x914D;&#x7F6E;&#xFF1A;Build Settings &gt; All &gt; Build Locations &gt; Per-configuration Build Products Path &gt; Debug&#x6539;&#x4E3A;/Library/Input Methods&#x3002; &#x8C03;&#x8BD5; &#x4E0D;&#x8981;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x4E2D;&#x8BBE;&#x7F6E;&#x65AD;&#x70B9;&#xFF0C;&#x56E0;&#x4E3A;macOS&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x662F;&#x5168;&#x5C40;&#x7684;&#x2014;&#x2014;&#x5728;&#x67D0;&#x4E2A;app&#x4E2D;&#x4FEE;&#x6539;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x5728;&#x5176;&#x4ED6;&#x6240;&#x6709;app&#x4E2D;&#x90FD;&#x5C06;&#x751F;&#x6548;&#x3002;&#x5982;&#x679C;&#x5728;&#x8BB0;&#x4E8B;&#x672C;&#x4E2D;&#x547D;&#x4E2D;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x65AD;&#x70B9;&#xFF0C;&#x6B64;&#x65F6;&#x7126;&#x70B9;&#x5C06;&#x5207;&#x5230;xcode&#xFF0C;xcode&#x4E2D;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x4E5F;&#x53D8;&#x6210;&#x88AB;&#x8C03;&#x8BD5;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;xcode&#x672C;&#x8EAB;&#x4E5F;&#x5C06;&#x88AB;&#x5361;&#x6B7B;&#x3002; &#x5728;-(BOOL)inputText:(NSString*)string client:(id)sender&#x51FD;&#x6570;&#x4E2D;&#x6709;NSLog&#x8F93;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7528;Xcode&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x8D77;app&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5176;Debug area&#x4E2D;&#x770B;&#x5230;&#x8F93;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x901A;&#x8FC7;Xcode&#x8C03;&#x8D77;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x4E2D;&#x770B;&#x5230;&#x8F93;&#x51FA;&#x3002; &#x82F9;&#x679C;&#x5173;&#x4E8E;IMKit&#x7684;&#x5B98;&#x65B9;&#x6750;&#x6599;&#x63D0;&#x4F9B;&#x5F97;&#x5F88;&#x5C11;&#xFF0C;&#x9664;&#x4E86;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF0C;&#x8FD8;&#x6709;&#x4E9B;&#x4EF7;&#x503C;&#x7684;&#x8FD8;&#x6709;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Headers/TextInputSources.h&#x5176;&#x4E2D;&#x6709;&#x5927;&#x91CF;&#x7684;&#x6CE8;&#x91CA;&#x3002; &#x672C;&#x6587;&#x4EE3;&#x7801;&#x53C2;&#x89C1;macIMKSample v1.0&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用CMake+Boost中遇到的几个问题]]></title>
    <url>%2F2017%2F02%2F19%2F2017%2F0218CMake%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x5728;&#x65B0;&#x7684;Windows&#x7CFB;&#x7EDF;&#x4E0B;&#x4F7F;&#x7528;CMake+Boost&#xFF0C;&#x4E0D;&#x614E;&#x8E29;&#x4E86;&#x597D;&#x591A;&#x5751;&#xFF0C;&#x6D6A;&#x8D39;&#x4E0D;&#x5C11;&#x65F6;&#x95F4;&#x3002;&#x5907;&#x5FD8;&#x5982;&#x4E0B;&#xFF1A; # &#x5B89;&#x88C5;Boost&#x524D;&#x5148;&#x5B89;&#x88C5;python &#x524D;&#x6587;&#x66FE;&#x7ECF;&#x4ECB;&#x7ECD;&#x8FC7;&#xFF0C;&#x5B89;&#x88C5;&#x4F7F;&#x7528;Boost&#x672C;&#x6765;&#x662F;&#x5F88;&#x7B80;&#x5355;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x6267;&#x884C;booststrap.bat&#x548C;b2.exe&#x5373;&#x53EF;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x4E00;&#x5B9A;&#x8981;&#x4ED4;&#x7EC6;&#x770B;&#x4E8C;&#x8005;&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF0C;b2.exe&#x597D;&#x50CF;&#x4F9D;&#x8D56;python&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B89;&#x88C5;python&#xFF0C;&#x8FD9;&#x4E2A;&#x7F16;&#x8BD1;&#x4F1A;&#x62A5;&#x9519;&#x3002;python&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x8981;&#x628A;python.exe&#x7684;&#x8DEF;&#x5F84;&#x6DFB;&#x52A0;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;PATH&#x4E2D;&#x3002; &#x7F16;&#x8BD1;Boost &#x7F16;&#x8BD1;&#x53C2;&#x6570;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; 1b2.exe --build-dir=build --stagedir=./stage/x64 --build-type=complete address-model=64 threading=multi --toolset=msvc-14.0 runtime-link=static -j 12 &#x53C2;&#x6570; &#x8BF4;&#x660E; variant=debug/release &#x7F16;&#x8BD1;&#x7248;&#x672C;&#x7C7B;&#x578B;&#xFF0C;debug&#x7248;&#x6587;&#x4EF6;&#x540D;&#x6709;_d&#xFF0C;release&#x7248;&#x6CA1;&#x6709;&#xFF0C;&#x751F;&#x6210;_d&#x4E5F;&#x5FC5;&#x7136;&#x4F7F;&#x7528;debug&#x7248;&#x7684;C++&#x8FD0;&#x884C;&#x65F6;&#x5E93;&#xFF0C;&#x56E0;&#x6B64;_gd&#x662F;&#x540C;&#x65F6;&#x51FA;&#x73B0;&#x7684; link=static/shared &#x7F16;&#x8BD1;&#x4E3A;&#x9759;&#x6001;&#x5E93;&#x8FD8;&#x662F;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x751F;&#x6210;.lib&#x8FD8;&#x662F;.dll&#xFF0C;&#x5BF9;&#x5E94;&#x6587;&#x4EF6;&#x4E2D;&#x7684;BOOST_LIB_PREFIX threading=single/multi &#x4F7F;&#x7528;&#x5355;&#x7EBF;&#x7A0B;&#x8FD8;&#x662F;&#x591A;&#x7EBF;&#x7A0B;CRT&#xFF0C;&#x591A;&#x7EBF;&#x7A0B;&#x7248;&#x6587;&#x4EF6;&#x540D;&#x6709;_mt&#xFF0C;&#x5355;&#x7EBF;&#x7A0B;&#x7248;&#x6CA1;&#x6709;&#x3002;&#x5BF9;&#x5E94;&#x6587;&#x4EF6;&#x4E2D;&#x7684;BOOST_LIB_THREAD_OPT runtime-link=static/shared &#x9759;&#x6001;&#x8FD8;&#x662F;&#x52A8;&#x6001;&#x94FE;&#x63A5;CRT&#xFF0C;&#x9759;&#x6001;&#x94FE;&#x63A5;&#x6587;&#x4EF6;&#x540D;&#x6709;_s&#xFF0C;&#x5BF9;&#x5E94;&#x6587;&#x4EF6;&#x4E2D;&#x7684;BOOST_LIB_THREAD_OPT address-model=32/64 32&#x4F4D;&#x6216;64&#x4F4D;&#x7F16;&#x8BD1; --toolset C++&#x7F16;&#x8BD1;&#x5668; --build-dir=[builddir] &#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6; --stagedir=[stagedir] &#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x5E93;&#x6587;&#x4EF6;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;stage --build-type=complete &#x7F16;&#x8BD1;&#x6240;&#x6709;&#x7248;&#x672C;&#xFF0C;&#x5426;&#x5219;&#x53EA;&#x7F16;&#x8BD1;&#x4E00;&#x5C0F;&#x90E8;&#x5206;&#x7248;&#x672C;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;:variant=release, threading=multi;link=shared/static;runtime-link=shared&#xFF09; --with-[library] &#x53EA;&#x7F16;&#x8BD1;&#x6307;&#x5B9A;&#x7684;&#x5E93;&#xFF0C;&#x5982;&#x8F93;&#x5165;--with-regex&#x5C31;&#x53EA;&#x7F16;&#x8BD1;regex&#x5E93;&#x4E86;&#x3002; --show-libraries &#x663E;&#x793A;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x7684;&#x5E93;&#x540D;&#x79F0; &#x751F;&#x6210;&#x6587;&#x4EF6;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219; &#x4EE5;libboost_regex-vc71-mt-d-1_34.lib&#x4E3A;&#x4F8B;&#xFF1A; * lib &#x524D;&#x7F00;&#xFF1A;&#x9664;&#x4E86;Microsoft Windows&#x4E4B;&#x5916;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;Boost&#x5E93;&#x7684;&#x540D;&#x5B57;&#x90FD;&#x4EE5;&#x6B64;&#x5B57;&#x7B26;&#x4E32;&#x5F00;&#x59CB;&#x3002;&#x5728;Windows&#x4E0A;&#xFF0C;&#x53EA;&#x6709;&#x666E;&#x901A;&#x7684;&#x9759;&#x6001;&#x5E93;&#x4F7F;&#x7528;lib&#x524D;&#x7F00;&#xFF1B;&#x5BFC;&#x5165;&#x5E93;&#x548C;DLL&#x4E0D;&#x4F7F;&#x7528;&#x3002; * boost_regex &#x5E93;&#x540D;&#x79F0;&#xFF1A;&#x6240;&#x6709;boost&#x5E93;&#x540D;&#x6587;&#x4EF6;&#x4EE5;boost_&#x5F00;&#x5934;&#x3002; * -vc71 Toolset &#x6807;&#x8BB0;&#xFF1A;&#x6807;&#x8BC6;&#x4E86;&#x6784;&#x5EFA;&#x8BE5;&#x5E93;&#x6240;&#x7528;&#x7684;toolset&#x548C;&#x7248;&#x672C;&#x3002; * -mt Threading &#x6807;&#x8BB0;&#xFF1A;&#x6807;&#x8BC6;&#x6784;&#x5EFA;&#x8BE5;&#x5E93;&#x542F;&#x7528;&#x4E86;&#x591A;&#x7EBF;&#x7A0B;&#x652F;&#x6301;&#x3002;&#x4E0D;&#x652F;&#x6301;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x5E93;&#x6CA1;&#x6709;-mt&#x3002; * -d ABI&#x6807;&#x8BB0;&#xFF1A;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x79CD;&#x7279;&#x6027;&#xFF0C;&#x5411;&#x6807;&#x8BB0;&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#xFF1A; &#x6807;&#x8BB0; &#x542B;&#x4E49; s &#x9759;&#x6001;&#x94FE;&#x63A5;CRT g &#x4F7F;&#x7528;&#x8C03;&#x8BD5;&#x7248;&#x672C;&#x7684;CRT d &#x6784;&#x5EFA;&#x8C03;&#x8BD5;&#x7248;&#x672C;&#x7684;Boost y &#x4F7F;&#x7528;Python&#x7684;&#x7279;&#x6B8A;&#x8C03;&#x8BD5;&#x6784;&#x5EFA; p &#x4F7F;&#x7528;STLPort&#x6807;&#x51C6;&#x5E93;&#x800C;&#x4E0D;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x63D0;&#x4F9B;&#x7684;&#x9ED8;&#x8BA4;&#x5E93; n &#x4F7F;&#x7528;STLPort&#x5DF2;&#x88AB;&#x5F03;&#x7528;&#x7684;&#x201C;native iostreams&#x201D; -1_34 &#x7248;&#x672C;&#x6807;&#x8BB0;&#xFF1A;&#x5B8C;&#x6574;&#x7684;Boost&#x53D1;&#x5E03;&#x53F7;&#xFF0C;&#x4E0B;&#x5212;&#x7EBF;&#x4EE3;&#x66FF;&#x70B9;&#x3002;&#x4F8B;&#x5982;&#xFF0C;1.31.1&#x7248;&#x672C;&#x5C06;&#x88AB;&#x6807;&#x8BB0;&#x4E3A;&#x201C;-1_31_1&#x201D;&#x3002; .lib &#x6269;&#x5C55;&#x540D;&#xFF1A;&#x53D6;&#x51B3;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3002;&#x5728;&#x5927;&#x591A;&#x6570;unix&#x5E73;&#x53F0;&#x4E0A;&#xFF0C;.a&#x662F;&#x9759;&#x6001;&#x5E93;&#xFF0C;.so&#x662F;&#x5171;&#x4EAB;&#x5E93;&#x3002;&#x5728;Windows&#x4E0A;&#xFF0C;.dll&#x8868;&#x793A;&#x5171;&#x4EAB;&#x5E93;&#xFF0C;.lib&#x662F;&#x9759;&#x6001;&#x6216;&#x5BFC;&#x5165;&#x5E93;&#x3002; &#x53EF;&#x89C1;&#xFF0C;32&#x4F4D;&#x6216;64&#x4F4D;&#x4FE1;&#x606F;&#x5E76;&#x4E0D;&#x4F53;&#x73B0;&#x5728;&#x6587;&#x4EF6;&#x547D;&#x540D;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5206;&#x76EE;&#x5F55;&#x5B58;&#x653E;&#x3002;&#x901A;&#x5E38;&#x5728;&#x751F;&#x6210;&#x5E93;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x8981;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x4E24;&#x6761;&#x547D;&#x4EE4;&#xFF1A; 12b2.exe --build-dir=build --stagedir=./stage/x64 --build-type=complete address-model=64 threading=multi --toolset=msvc-14.0 runtime-link=static -j 12b2.exe --build-dir=build --stagedir=./stage/win32 --build-type=complete address-model=32 threading=multi --toolset=msvc-14.0 runtime-link=static -j 12 &#x4F7F;&#x7528;Boost &#x4F7F;&#x7528;32/64&#x4F4D;&#x7248;&#x672C; &#x53EF;&#x4EE5;&#x5728;CMake&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x5224;&#x65AD;&#x5E76;&#x8BBE;&#x7F6E;Boost_LIBRARY_DIR&#xFF1A; 1234567891011if(CMAKE_SIZEOF_VOID_P EQUAL 8) set(Boost_LIBRARY_DIR &quot;$ENV{BOOST_ROOT}\\stage\\x64\\lib&quot;)elseif(CMAKE_SIZEOF_VOID_P EQUAL 4) set(Boost_LIBRARY_DIR &quot;$ENV{BOOST_ROOT}\\stage\\win32\\lib&quot;)endif()set(Boost_USE_STATIC_LIBS ON)find_package(Boost COMPONENTS program_options log REQUIRED)message(STATUS &quot;Boost_LIBRARIES:${Boost_LIBRARIES}&quot;) &#x6267;&#x884C; cmake -G &quot;Visual Studio 14 Win64&quot; .. &#x8F93;&#x51FA;Boost_LIBRARIES&#x4E3A;&#xFF1A; 1-- Boost_LIBRARIES:.../stage/x64/lib/libboost_xxx-mt-s-1_62.lib;... &#x6267;&#x884C; cmake -G &quot;Visual Studio 14&quot; .. &#x8F93;&#x51FA;Boost_LIBRARIES&#x4E3A;&#xFF1A; 1-- Boost_LIBRARIES:.../stage/Win32/lib/libboost_xxx-mt-s-1_62.lib;... &#x591A;&#x7EBF;&#x7A0B;&#x3001;CRT&#x5F00;&#x5173; &#x4F7F;&#x7528;Boost&#x65F6;&#xFF0C;&#x5728;CMake&#x4E2D;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x9009;&#x9879;&#x5BF9;&#x5E94;&#x4E0D;&#x540C;&#x7684;Boost&#x751F;&#x6210;&#x5E93;&#xFF1A; &#x9009;&#x9879; &#x8BF4;&#x660E; Boost_USE_MULTITHREADED &#x4F7F;&#x7528;&#x4E0E;&#x5355;&#x7EBF;&#x7A0B;/&#x591A;&#x7EBF;&#x7A0B;&#x94FE;&#x63A5;CRT&#x7684;Boost&#xFF08;_mt&#xFF09;&#xFF0C;&#x9ED8;&#x8BA4;ON Boost_USE_STATIC_LIBS &#x4F7F;&#x7528;Boost&#x7684;&#x9759;&#x6001;/&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x9ED8;&#x8BA4;OFF Boost_USE_STATIC_RUNTIME &#x4F7F;&#x7528;&#x9759;&#x6001;/&#x52A8;&#x6001;&#x94FE;&#x63A5;CRT&#x7684;Boost&#xFF08;_s&#xFF09;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4F9D;&#x8D56;&#x5E73;&#x53F0; Boost_USE_DEBUG_RUNTIME &#x4F7F;&#x7528;&#x94FE;&#x63A5;&#x4E86;debug/release&#x7248;CRT&#x7684;Boost&#xFF08;_g)&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;ON &#x4F46;&#x6211;&#x53D1;&#x73B0;&#x8FD9;&#x51E0;&#x4E2A;&#x5F00;&#x5173;&#x5B9E;&#x9645;&#x4E0A;&#x5E76;&#x4E0D;&#x662F;&#x5E73;&#x884C;&#x7684;&#x5404;&#x7BA1;&#x5404;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 123456789set(Boost_USE_STATIC_LIBS ON)set(Boost_USE_STATIC_RUNTIME ON)set(Boost_USE_DEBUG_RUNTIME ON)set(Boost_USE_MULTITHREADED ON)find_package(Boost COMPONENTS log REQUIRED)message(STATUS &quot;Boost_LIBRARIES:${Boost_LIBRARIES}&quot;) &#x6267;&#x884C; cmake -G &quot;Visual Studio 14&quot; .. ** Boost_USE_STATIC_LIBS=ON **&#xFF0C;&#x8F93;&#x51FA;&#x7684;Boost_LIBRARIES&#x4E3A;&#xFF1A; 1...libboost_xxx-mt-s-1_62.lib;... ** Boost_USE_STATIC_RUNTIME=ON **&#xFF0C;Boost_LIBRARIES&#x4E3A;&#xFF1A; 12optimized;...libboost_xxx-mt-s-1_62.lib;debug;...libboost_xxx-mt-sgd-1_62.lib; &#x6B64;&#x65F6;&#x5982;&#x679C;Boost_USE_DEBUG_RUNTIME=OFF&#x5219;&#x4E0D;&#x751F;&#x6210;sgd&#x7248;&#x672C;&#x3002; &#x5982;&#x679C;Boost_USE_STATIC_RUNTIME=OFF&#xFF0C;&#x5F00;&#x5173;Boost_USE_DEBUG_RUNTIME&#x5C06;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#xFF0C;Boost_LIBRARIES&#x603B;&#x662F;&#x4E3A;&#xFF1A; 1optimized;...libboost_xxx-mt-s-1_62.lib; &#x6240;&#x4EE5;&#x4E00;&#x822C;&#x9759;&#x6001;&#x94FE;&#x63A5;Boost&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x4E24;&#x884C;&#x5373;&#x53EF;&#x6EE1;&#x8DB3;Debug&#x548C;Release&#x7248;&#x672C;&#x7684;&#x94FE;&#x63A5;&#xFF1A; 12set(Boost_USE_STATIC_LIBS ON)set(Boost_USE_STATIC_RUNTIME ON) Release&#x7248;&#x4F7F;&#x7528;&#xFF1A; &#x7F16;&#x8BD1;Boost&#x4F7F;&#x7528;&#x7684;VS&#x8981;&#x548C;CMake&#x7F16;&#x8BD1;&#x5DE5;&#x7A0B;&#x4F7F;&#x7528;&#x7684;VS&#x7248;&#x672C;&#x4E00;&#x81F4; &#x6765;boost_1_62_0\stage\lib&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#x7684;lib&#x6587;&#x4EF6;&#x540D;&#x662F;&#x5305;&#x542B;VC&#x7248;&#x672C;&#x53F7;&#x7684;&#xFF0C;&#x5982;&#xFF1A; libboost_atomic-vc140-mt-1_62.lib&#x3002; vc140&#x5BF9;&#x5E94;Visual Studio 2015&#xFF0C;&#x5982;&#x679C;&#x6B64;&#x65F6;CMake&#x7F16;&#x8BD1;project&#x7684;Visual Studio&#x7248;&#x672C;&#x4E0D;&#x662F;2015&#xFF0C;&#x800C;&#x53C8;&#x4F9D;&#x8D56;&#x4E86;Boost&#xFF1A; 12set(Boost_USE_STATIC_LIBS ON) find_package(Boost COMPONENTS program_options log REQUIRED) &#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;CMake&#x80FD;&#x627E;&#x5230;Boost&#xFF0C;&#x5374;&#x627E;&#x4E0D;&#x5230;&#x9700;&#x8981;&#x7684;program_options&#x548C;log&#x7EC4;&#x4EF6;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;CMake&#x8981;&#x627E;&#x4E0E;&#x6307;&#x5B9A;Visual Studio&#x7248;&#x672C;&#x5BF9;&#x5E94;&#x7684;libboost&#x5E93;&#x6587;&#x4EF6;&#x3002;&#x62A5;&#x51FA;&#x7684;&#x9519;&#x662F;&#x627E;&#x4E0D;&#x5230;&#x6307;&#x5B9A;&#x7684;Boost&#x7248;&#x672C;&#xFF0C;&#x5176;&#x5B9E;&#x8DDF;Boost&#x7248;&#x672C;&#x65E0;&#x5173;&#xFF0C;&#x8DDF;&#x7F16;&#x8BD1;&#x5B83;&#x4F7F;&#x7528;&#x7684;VS&#x7248;&#x672C;&#x6709;&#x5173;&#x3002; &#x73AF;&#x5883;&#x53D8;&#x91CF;BOOST_ROOT &#x5982;&#x679C;&#x6307;&#x5B9A;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;BOOST_ROOT&#x7684;&#x503C;&#x4E3A;boost&#x6240;&#x5728;&#x7684;&#x4E0A;&#x4E00;&#x7EA7;&#x76EE;&#x5F55;&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x7684;&#x76EE;&#x5F55;&#x5982;&#x4E0B;&#xFF1A; 12345678910c:\boost_1_62_0 &lt;-- BOOST_ROOT&#x6307;&#x5411;&#x8FD9;&#x91CC; &#x251C;&#x2500;bin.v2 &#x251C;&#x2500;boost &#x251C;&#x2500;doc &#x251C;&#x2500;libs &#x251C;&#x2500;more &#x251C;&#x2500;stage &#x251C;&#x2500;status &#x251C;&#x2500;tools &#x2514;&#x2500;... &#x73AF;&#x5883;&#x53D8;&#x91CF;&#x5E94;&#x8BBE;&#x4E3A;&#xFF1A;BOOST_ROOT=c:\boost_1_62_0&#x3002; &#x6211;&#x5C1D;&#x8BD5;&#x4E0D;&#x5199;&#x8FD9;&#x4E2A;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x53D1;&#x73B0;CMake&#x4F9D;&#x7136;&#x80FD;&#x627E;&#x5230;Boost&#xFF0C;&#x90A3;&#x5C31;&#x4E0D;&#x8981;&#x5199;&#x4E86;&#x5427;~]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows下创建基于IMM的输入法]]></title>
    <url>%2F2017%2F02%2F18%2F2017%2F0218WinImmImeSample1%2F</url>
    <content type="text"><![CDATA[&#x57FA;&#x4E8E;IMM&#x6846;&#x67B6;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x662F;&#x4E00;&#x4E2A;&#x6309;&#x7167;&#x7CFB;&#x7EDF;&#x8981;&#x6C42;&#x5BFC;&#x51FA;&#x5341;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#x7684;DLL&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x5341;&#x51E0;&#x4E2A;&#x5BFC;&#x51FA;&#x51FD;&#x6570;&#x7684;&#x539F;&#x578B;&#x5B9A;&#x4E49;&#x4E8E;imm.h&#x6587;&#x4EF6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5B9A;&#x4E49;&#x4E86;&#x5B83;&#x4EEC;&#x7684;&#x8C03;&#x7528;&#x65F6;&#x673A;&#xFF0C;&#x6BD4;&#x5982;&#x5207;&#x51FA;&#x8F93;&#x5165;&#x6CD5;&#x3001;&#x6309;&#x952E;&#x5904;&#x7406;&#x7B49;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4ECE;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x8981;&#x6C42;&#x5F00;&#x59CB;&#xFF0C;&#x9010;&#x6B65;&#x5206;&#x6790;&#x57FA;&#x4E8E;IMM&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x5B9E;&#x73B0;&#x6B65;&#x9AA4;&#x3002; &#x8981;&#x786E;&#x4FDD;&#x8F93;&#x5165;&#x6CD5;&#x80FD;&#x8FD0;&#x8F6C;&#x8D77;&#x6765;&#xFF0C;&#x9700;&#x8981;&#x5177;&#x5907;&#x56DB;&#x4E2A;&#x6761;&#x4EF6;&#xFF1A; 1. &#x662F;&#x4E00;&#x4E2A;DLL&#x6587;&#x4EF6; 2. &#x4F9D;&#x7167;imm.h&#x5BFC;&#x51FA;&#x5341;&#x51E0;&#x4E2A;&#x51FD;&#x6570; 3. &#x6709;&#x4E00;&#x4E2A;UI&#x7A97;&#x53E3; 4. &#x6709;&#x4E00;&#x7CFB;&#x5217;&#x6269;&#x5C55;&#x7A97;&#x53E3; 5. &#x6267;&#x884C;&#x7279;&#x5B9A;&#x7684;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B; &#x80FD;&#x6700;&#x5C0F;&#x5316;&#x8FD0;&#x8F6C;&#x4E0D;&#x4EE3;&#x8868;&#x80FD;&#x6B63;&#x5E38;&#x4EA4;&#x4E92;&#xFF0C;&#x53EA;&#x662F;&#x6280;&#x672F;&#x8DEF;&#x5F84;&#x4E0A;&#x8DD1;&#x901A;&#x4E86;&#x3002;&#x50CF;&#x4E00;&#x4E2A;&#x5B8C;&#x5907;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x90A3;&#x6837;&#x6B63;&#x5E38;&#x4EA4;&#x4E92;&#x8D77;&#x6765;&#x8FD8;&#x8981;&#x5177;&#x5907;&#x5199;&#x4F5C;&#x7A97;&#x3001;&#x5019;&#x9009;&#x7A97;&#xFF0C;&#x8FD8;&#x8981;&#x5904;&#x7406;&#x4ECE;&#x62FC;&#x97F3;&#x5230;&#x6C49;&#x5B57;&#x3001;&#x8BCD;&#x7684;&#x8F6C;&#x5316;&#x3002;&#x672C;&#x8282;&#x5148;&#x4ECB;&#x7ECD;&#x6700;&#x5C0F;&#x5316;&#x8FD0;&#x8F6C;&#x7684;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x3002; DLL&#x6587;&#x4EF6; &#x8981;&#x5728;DllMain&#x7684;DLL_PROCESS_ATTACH&#x5206;&#x652F;&#x4E0B;&#x6CE8;&#x518C;UI&#x7A97;&#x4F53;&#x7C7B;&#xFF0C;&#x7CFB;&#x7EDF;IMM&#x6846;&#x67B6;&#x4F1A;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x8BE5;&#x7A97;&#x4F53;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x5411;&#x8BE5;&#x7A97;&#x4F53;&#x53D1;&#x6D88;&#x606F;&#x8BA9;&#x8F93;&#x5165;&#x6CD5;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8BE5;&#x663E;&#x793A;/&#x9690;&#x85CF;&#x5199;&#x4F5C;&#x7A97;&#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8BE5;&#x663E;&#x793A;/&#x9690;&#x85CF;&#x5019;&#x9009;&#x7A97;&#x3002;&#x5173;&#x4E8E;UI&#x7A97;&#x53E3;&#x5728;&#x4E0B;&#x6587;&#x8FD8;&#x6709;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x3002; &#x8981;&#x5728;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF08;*.rc&#xFF09;&#x4E2D;&#x8BBE;&#x7F6E;&#x51E0;&#x4E2A;key: FILEOS = 0x4L FILETYPE = VFT_DRV FILESUBTYPE = VFT2_DRV_INPUTMETHOD Block Header = &#x4E2D;&#x6587;&#xFF08;&#x7B80;&#x4F53;&#xFF0C;&#x4E2D;&#x56FD;&#xFF09;&#xFF08;0x0404b0&#xFF09; &#x9009;&#x62E9;Language&#x4E3A;Chinese&#xFF08;Simplified PRC&#xFF09;&#x5373;&#x4E3A;&#x6B64;&#x8BBE;&#x7F6E;&#x3002; &#x5305;&#x542B;&#x4E00;&#x4E2A;icon&#x56FE;&#x6807;&#xFF0C;&#x8BE5;&#x56FE;&#x6807;&#x7528;&#x4E8E;&#x5728;&#x7CFB;&#x7EDF;&#x8BED;&#x8A00;&#x680F;&#x663E;&#x793A;&#x521B;&#x5EFA;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x3002; &#x5BFC;&#x51FA;&#x51FD;&#x6570; &#x5F15;&#x5165;imm.h&#x6587;&#x4EF6; &#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x539F;&#x578B;&#x5B9A;&#x4E49;&#x5728;imm.h&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x8BE5;&#x6587;&#x4EF6;&#x6709;&#x4E24;&#x4EFD;&#x5B9A;&#x4E49;&#xFF0C;&#x4E00;&#x4EFD;&#x6765;&#x81EA;DDK&#xFF0C;&#x4E00;&#x4EFD;&#x6765;&#x81EA;SDK&#x3002;&#x5F00;&#x53D1;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#x5E94;&#x4F7F;&#x7528;DDK&#x7248;&#x672C;&#x3002;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;Windows DDK&#x7248;&#x672C;&#x4E2D;&#x547D;&#x540D;&#x53D1;&#x751F;&#x8FC7;&#x53D8;&#x5316;&#xFF0C;&#x6700;&#x65E9;&#x662F;imm.h&#xFF0C;&#x5728;win2kDDK&#x7684;&#x67D0;&#x4E2A;&#x7248;&#x672C;&#x4E2D;&#x5C31;&#x53D8;&#x6210;&#x4E86;immdev.h&#xFF0C;&#x540E;&#x6765;&#x7684;Windows DDK&#x4E00;&#x76F4;&#x6CBF;&#x7528;immdev.h&#x3002; &#x4F7F;&#x7528;imm.h&#x4F1A;&#x5BFC;&#x81F4;&#x548C;SDK&#x7248;&#x672C;&#x91CD;&#x540D;&#xFF0C;&#x786E;&#x5B9E;&#x4E0D;&#x65B9;&#x4FBF;&#x3002;&#x8FD9;&#x8981;&#x6C42;&#x5305;&#x542B;&#x8BE5;&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x5FC5;&#x987B;&#x8FD9;&#x4E48;&#x5199;&#xFF1A; 12345# define NOIME#include &lt;windows.h&gt;#include &quot;imm.h&quot;#define _DDKIMM_H_... windows.h&#x5FC5;&#x987B;&#x5199;&#x5728;imm.h&#x524D;&#x9762;&#xFF0C;&#x56E0;&#x4E3A;imm.h&#x4F9D;&#x8D56;windows.h&#xFF0C;&#x53EF;&#x662F;&#x5728;windows.h&#x4E2D;&#x53C8;&#x5305;&#x542B;&#x4E86;SDK&#x7248;&#x672C;&#x7684;imm.h&#xFF1A; 123456// windows.h...#ifndef NOIME#include &lt;imm.h&gt;#endif... &#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5728;#include &lt;windows.h&gt;&#x524D;&#x5FC5;&#x987B;&#x5148;&#x5B9A;&#x4E49;NOIME&#xFF0C;&#x8BA9;windows.h&#x4E2D;&#x7684;imm.h&#x65E0;&#x6548;&#x3002; &#x5982;&#x679C;&#x4F7F;&#x7528;immdev.h&#xFF0C;&#x5219;&#x4E0D;&#x5B58;&#x5728;&#x5934;&#x6587;&#x4EF6;&#x547D;&#x540D;&#x51B2;&#x7A81;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x5728;&#x7F16;&#x5199;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#xFF0C;&#x8FD8;&#x662F;&#x4F7F;&#x7528;&#x8001;&#x7248;&#x672C;&#x7684;imm.h&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x786E;&#x5B9A;&#x4F7F;&#x7528;immdev.h&#x80FD;&#x5426;&#x5B8C;&#x5168;&#x4E0E;&#x8001;&#x7684;Windows&#x7CFB;&#x7EDF;&#x517C;&#x5BB9;&#x3002; ## &#x5B9A;&#x4E49;&#x5341;&#x4E94;&#x4E2A;&#x5BFC;&#x51FA;&#x51FD;&#x6570; &#x5173;&#x4E8E;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x4ECB;&#x7ECD;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;win2kddk&#xFF0C;&#x8FD9;&#x4E2A;&#x7248;&#x672C;&#x7684;DDK&#x5728;Ntddk/src/ime/docs&#x76EE;&#x5F55;&#x4E0B;&#x6709;&#x4E24;&#x4EFD;&#x8F93;&#x5165;&#x6CD5;&#x5F00;&#x53D1;&#x6587;&#x6863;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4E3A;&#x6570;&#x4E0D;&#x591A;&#x7684;&#x5FAE;&#x8F6F;&#x53D1;&#x5E03;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x5F00;&#x53D1;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002;&#x6211;&#x4EEC;&#x53EA;&#x6311;&#x6700;&#x5FC5;&#x987B;&#x7684;&#x6587;&#x4EF6;&#x91CD;&#x70B9;&#x4ECB;&#x7ECD;&#x3002; ## ImeInquire &#x8BE5;&#x51FD;&#x6570;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x9996;&#x6B21;&#x5207;&#x51FA;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x8D1F;&#x8D23;&#x5904;&#x7406;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;IMEINFO&#x7ED3;&#x6784;&#x4F53;&#x4EE5;&#x53CA;&#x8F93;&#x5165;&#x6CD5;&#x7684;UI&#x7A97;&#x4F53;&#x7C7B;&#x540D;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#x4E3A;&#xFF1A; 123456789101112131415161718192021222324BOOL WINAPI ImeInquire(LPIMEINFO lpImeInfo, LPTSTR lpszUIClass, LPCTSTR lpszOptions){ // &#x5982;&#x679C;&#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#x4E3A;Winlogon&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x9000;&#x51FA; if((DWORD_PTR)lpszOptions &amp; IME_SYSINFO_WINLOGON ) return FALSE; lpImeInfo-&gt;dwPrivateDataSize = 0; //sizeof(t_uiExtra); lpImeInfo-&gt;fdwProperty = IME_PROP_COMPLETE_ON_UNSELECT | IME_PROP_SPECIAL_UI | IME_PROP_CANDLIST_START_FROM_1 | IME_PROP_UNICODE | IME_PROP_KBD_CHAR_FIRST; // &#x8F93;&#x5165;&#x6CD5;&#x5C5E;&#x6027; lpImeInfo-&gt;fdwConversionCaps = IME_CMODE_SYMBOL | IME_CMODE_SOFTKBD | IME_CMODE_FULLSHAPE; // &#x8F6C;&#x6362;&#x6A21;&#x5F0F; lpImeInfo-&gt;fdwSentenceCaps = IME_SMODE_NONE; // &#x53E5;&#x5B50;&#x6A21;&#x5F0F; lpImeInfo-&gt;fdwUICaps = UI_CAP_SOFTKBD| UI_CAP_2700; // UI&#x6807;&#x8BB0; lpImeInfo-&gt;fdwSCSCaps = 0x00000000; lpImeInfo-&gt;fdwSelectCaps = 0x00000000; // &#x7A97;&#x4F53;&#x7C7B;&#x540D; _tcscpy_s(lpszUIClass, MAX_CLASSNAME_UI, UIWnd::GetUIWndClassName()); return TRUE;} &#x7CFB;&#x7EDF;&#x901A;&#x8FC7;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x7A97;&#x4F53;&#x7C7B;&#x540D;&#x521B;&#x5EFA;&#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x4F53;&#x3002; ## ImeProcessKey &#x6BCF;&#x5F53;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#x64CD;&#x4F5C;&#xFF0C;IMM&#x4F1A;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x6839;&#x636E;&#x6309;&#x952E;&#x9884;&#x5224;&#x65AD;&#x662F;&#x5426;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x5904;&#x7406;&#x8FD4;&#x56DE;TRUE&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;FALSE&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EA;&#x5904;&#x7406;&#x5B57;&#x7B26;A~Z&#x4EE5;&#x53CA;&#x56DE;&#x8F66;&#x3001;&#x7A7A;&#x683C;&#x548C;ESC&#xFF1A; 12345678910111213BOOL WINAPI ImeProcessKey(HIMC hImc, UINT unVirtKey, DWORD unScanCode, CONST LPBYTE achKeyState){ ImcHandle imcHandle(hImc); Comp* pComp = imcHandle.GetComp(); LPTSTR szCompString = pComp-&gt;GetCompString(); if (unVirtKey &gt;= 0x41 &amp;&amp; unVirtKey &lt;= 0x5A) { return TRUE; // &#x4ECE;A&#x5230;Z } if (_tcslen(szCompString) &gt; 0 &amp;&amp;(unVirtKey == VK_RETURN || unVirtKey == VK_SPACE || unVirtKey == VK_ESCAPE)) { return TRUE; // &#x5F53;&#x6709;&#x5199;&#x4F5C;&#x4E32;&#x4E14;&#x5F53;&#x524D;&#x6309;&#x952E;&#x4E3A;&#x56DE;&#x8F66;&#x3001;&#x7A7A;&#x683C;&#x6216;ESC } return FALSE;} ImeToAsciiEx &#x5982;&#x679C;&#x7ECF;&#x8FC7;&#x4E0A;&#x4E00;&#x6B65;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x9884;&#x5224;&#x65AD;&#xFF0C;&#x9700;&#x8981;&#x5904;&#x7406;&#xFF0C;IMM&#x5219;&#x7EE7;&#x7EED;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#x8FDB;&#x5165;&#x5904;&#x7406;&#x903B;&#x8F91;&#xFF1B;&#x5982;&#x679C;&#x4E0D;&#x9700;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x5219;&#x4E0D;&#x4F1A;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x628A;&#x6309;&#x952E;&#x4EE5;WM_KEYDOWN/WM_KEYUP&#x7684;&#x5F62;&#x5F0F;&#x53D1;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x5904;&#x7406;&#x5206;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; 1. &#x5904;&#x7406;&#x6309;&#x952E;&#xFF0C;&#x901A;&#x5E38;&#x8981;&#x8FFD;&#x52A0;&#x5F53;&#x524D;&#x7684;&#x8F93;&#x5165;&#x5185;&#x5BB9;&#x8FDB;&#x5165;&#x5199;&#x4F5C;&#x4E32;&#xFF1B; 2. &#x5B8C;&#x6210;&#x8F6C;&#x6362;&#xFF0C;&#x8FD9;&#x662F;&#x8F93;&#x5165;&#x6CD5;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x6839;&#x636E;&#x5199;&#x4F5C;&#x4E32;&#x91CC;&#x7684;&#x62FC;&#x97F3;&#x8F6C;&#x6210;&#x6C49;&#x5B57;&#xFF1B; 3. &#x5B8C;&#x6210;&#x754C;&#x9762;&#x7684;&#x66F4;&#x65B0;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x7EC4;&#x88C5;&#x76F8;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x5230;lpdwTransBuf&#x6307;&#x5411;&#x7684;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;IMM&#x4F1A;&#x628A;&#x8FD9;&#x4E9B;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x53E3;&#xFF0C;&#x7531;UI&#x7A97;&#x53E3;&#x7EE7;&#x7EED;&#x5B8C;&#x6210;&#x754C;&#x9762;&#x7684;&#x5904;&#x7406;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576UINT WINAPI ImeToAsciiEx(UINT unKey, UINT unScanCode, CONST LPBYTE achKeyState, LPDWORD lpdwTransBuf, UINT fuState, HIMC hImc){ ImcHandle imcHandle(hImc); Comp* pComp = imcHandle.GetComp(); LPTSTR szCompString = pComp-&gt;GetCompString(); COMPOSITIONSTRING&amp; compCore = pComp-&gt;GetCore(); size_t ccOriginCompLen = _tcslen(szCompString); if (HIWORD(unKey) &gt;= &apos;a&apos; &amp;&amp; HIWORD(unKey) &lt;= &apos;z&apos;) { TCHAR szKey[2] = { HIWORD(unKey), 0 }; _tcscat_s(szCompString, Comp::c_MaxCompString, szKey); // &#x5C06;&#x5B57;&#x7B26;&#x8FFD;&#x52A0;&#x5230;&#x5199;&#x4F5C;&#x4E32; compCore.dwCompStrLen = (DWORD)_tcslen(szCompString); } const DWORD dwBufLen = *lpdwTransBuf; lpdwTransBuf += sizeof(size_t) / sizeof(DWORD); UINT cMsg = 0; LPTRANSMSG lpTransMsg = (LPTRANSMSG)lpdwTransBuf; if(ccOriginCompLen == 0){ // &#x6CA1;&#x6709;&#x5199;&#x4F5C;&#x4E32; if(HIWORD(unKey) &gt;= &apos;a&apos; &amp;&amp; HIWORD(unKey) &lt;= &apos;z&apos;){ lpTransMsg[0].message = WM_IME_STARTCOMPOSITION; // &#x6253;&#x5F00;&#x5199;&#x4F5C;&#x7A97; lpTransMsg[0].wParam = 0; lpTransMsg[0].lParam = 0; cMsg++; lpTransMsg[1].message = WM_IME_COMPOSITION; // &#x66F4;&#x65B0;&#x5199;&#x4F5C;&#x7A97; lpTransMsg[1].wParam = 0; lpTransMsg[1].lParam = GCS_COMPSTR | GCS_CURSORPOS | GCS_COMPATTR; cMsg++; lpTransMsg[2].message = WM_IME_NOTIFY; // &#x6253;&#x5F00;&#x5019;&#x9009;&#x7A97; lpTransMsg[2].wParam = IMN_OPENCANDIDATE; lpTransMsg[2].lParam = 1; cMsg++; lpTransMsg[3].message = WM_IME_NOTIFY; // &#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97; lpTransMsg[3].wParam = IMN_CHANGECANDIDATE; lpTransMsg[3].lParam = 1; cMsg++; return cMsg; } }else{ // _tcslen(szCompString) &gt; 0 // &#x6709;&#x5199;&#x4F5C;&#x4E32; if(HIWORD(unKey) &gt;= &apos;a&apos; &amp;&amp; HIWORD(unKey) &lt;= &apos;z&apos;){ // &#x66F4;&#x65B0;&#x5199;&#x4F5C;&#x7A97; ... // &#x66F4;&#x65B0;&#x5019;&#x9009;&#x7A97; ... return cMsg; }else if(HIWORD(unKey) == VK_RETURN || HIWORD(unKey) == VK_SPACE){ // &#x56DE;&#x8F66;&#x6216;&#x7A7A;&#x683C; LPTSTR szResultString = pComp-&gt;GetResultString(); _tcscpy_s(szResultString, Comp::c_MaxResultString, szCompString); // &#x5C06;&#x5199;&#x4F5C;&#x4E32;&#x62F7;&#x5165;&#x7ED3;&#x679C;&#x4E32; compCore.dwResultStrLen = (DWORD)_tcslen(szResultString); memset(szCompString, 0, sizeof(TCHAR) * Comp::c_MaxCompString); // &#x6E05;&#x7A7A;&#x5199;&#x4F5C;&#x4E32; compCore.dwCompStrLen = 0; // &#x66F4;&#x65B0;&#x5199;&#x4F5C;&#x7A97; ... // &#x5173;&#x95ED;&#x5199;&#x4F5C;&#x7A97; ... // &#x5173;&#x95ED;&#x5019;&#x9009;&#x7A97; ... return cMsg; }else if(HIWORD(unKey) == VK_ESCAPE){ // ESC memset(szCompString, 0, sizeof(TCHAR) * Comp::c_MaxCompString); compCore.dwCompStrLen = 0; // &#x66F4;&#x65B0;&#x5199;&#x4F5C;&#x7A97; ... // &#x5173;&#x95ED;&#x5199;&#x4F5C;&#x7A97; ... // &#x5173;&#x95ED;&#x5019;&#x9009;&#x7A97; ... return cMsg; } } return cMsg;} &#x4EE5;&#x4E0A;&#x5C31;&#x662F;&#x8F93;&#x5165;&#x6CD5;&#x6700;&#x6700;&#x5173;&#x952E;&#x7684;&#x4E09;&#x4E2A;&#x5BFC;&#x51FA;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#x4F7F;&#x4E00;&#x4E2A;&#x4E30;&#x6EE1;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#x4E5F;&#x662F;&#x5728;&#x8FD9;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x5C24;&#x5176;&#x662F;ImeProcessKey&#x548C;ImeToAsciiEx&#x4E2D;&#x3002; ** &#x7279;&#x522B;&#x6CE8;&#x610F; ** &#x5728;DDK&#x7684;immdev.h&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;LPTRANSMSGLIST&#x662F;&#x9519;&#x8BEF;&#x7684;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x7F13;&#x51B2;&#x533A;&#x957F;&#x5EA6;TRANSMSGLIST::uMsgCount&#x7684;&#x7C7B;&#x578B;&#x4E3A;UINT&#xFF0C;&#x5176;&#x5B9E;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x957F;&#x5EA6;&#x5728;32&#x4F4D;&#x548C;64&#x4F4D;&#x7CFB;&#x7EDF;&#x4E0B;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;32&#x4F4D;&#x4E0B;&#x662F;4&#x5B57;&#x8282;&#xFF0C;64&#x4F4D;&#x4E0B;&#x662F;8&#x5B57;&#x8282;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x6709;&#xFF1A; 1lpdwTransBuf += sizeof(size_t) / sizeof(DWORD); UI&#x7A97;&#x53E3; &#x6982;&#x8FF0; &#x8F93;&#x5165;&#x6CD5;&#x53EF;&#x5206;&#x4E3A;&#x6846;&#x67B6;&#x5C42;&#x548C;&#x903B;&#x8F91;&#x5C42;&#xFF0C;&#x6846;&#x67B6;&#x5C42;&#x5B9A;&#x4E49;&#x4E86;&#x63A7;&#x5236;&#x6D41;&#x3001;&#x6570;&#x636E;&#x6D41;&#x7684;&#x6D41;&#x8F6C;&#x8DEF;&#x5F84;&#xFF0C;&#x4EE5;&#x53CA;&#x63A7;&#x5236;&#x7C7B;&#x578B;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#x88AB;&#x6309;&#x4E0B;&#xFF0C;&#x9996;&#x5148;&#x7531;&#x5BFC;&#x51FA;&#x51FD;&#x6570;ImeProcessKey&#x3001;ImeToAsciiEx&#x5904;&#x7406;&#xFF0C;&#x4E4B;&#x540E;&#x518D;&#x901A;&#x8FC7;IMM&#x6D88;&#x606F;&#x901A;&#x77E5;UI&#x7A97;&#x53E3;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x5C5E;&#x4E8E;&#x63A7;&#x5236;&#x6D41;&#x3002;&#x901A;&#x77E5;UI&#x7A97;&#x53E3;&#x7684;&#x6D88;&#x606F;&#x5219;&#x5C5E;&#x4E8E;&#x63A7;&#x5236;&#x7C7B;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#x663E;&#x793A;/&#x9690;&#x85CF;&#x5199;&#x4F5C;&#x7A97;&#x3001;&#x663E;&#x793A;/&#x9690;&#x85CF;&#x5019;&#x9009;&#x7A97;&#x3002;&#x4EE5;&#x4E0A;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x6846;&#x67B6;&#x5C42;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x800C;&#x5728;&#x4E1A;&#x52A1;&#x5C42;&#x5219;&#x8D1F;&#x8D23;&#x5904;&#x7406;&#x5177;&#x4F53;&#x6536;&#x5230;&#x663E;&#x793A;/&#x9690;&#x85CF;&#x5199;&#x4F5C;&#x7A97;&#x7684;&#x65F6;&#x5019;&#x600E;&#x4E48;&#x663E;&#x793A;&#xFF0C;&#x663E;&#x793A;&#x5728;&#x54EA;&#xFF0C;&#x7B49;&#x7B49;&#x3002; &#x901A;&#x5E38;&#x6211;&#x4EEC;&#x80FD;&#x770B;&#x5230;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x53E3;&#x90FD;&#x5C5E;&#x4E8E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;&#x7684;&#x8303;&#x7574;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6846;&#x67B6;&#x5C42;&#x3002;&#x5B83;&#x4EEC;&#x90FD;&#x662F;UI&#x7A97;&#x53E3;&#x7684;&#x5B50;&#x7A97;&#x53E3;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x9700;&#x8981;&#x51B3;&#x5B9A;&#x521B;&#x5EFA;&#x591A;&#x5C11;&#x4E2A;&#x5B50;&#x7A97;&#x53E3;&#xFF0C;&#x5E76;&#x51B3;&#x5B9A;&#x600E;&#x4E48;&#x663E;&#x793A;&#x5B83;&#x4EEC;&#x3002; UI&#x7A97;&#x53E3;&#x662F;&#x6846;&#x67B6;&#x5C42;&#x548C;&#x4E1A;&#x52A1;&#x5C42;&#x7684;&#x6865;&#x6881;&#x2014;&#x2014;&#x6846;&#x67B6;&#x5C42;&#x628A;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x7ED9;UI&#x7A97;&#x53E3;&#xFF0C;&#x7531;&#x5B83;&#x51B3;&#x5B9A;&#x8981;&#x4E0D;&#x8981;&#x544A;&#x8BC9;&#x4E1A;&#x52A1;&#x5C42;&#x7684;&#x5B50;&#x7A97;&#x4F53;&#xFF0C;&#x4E5F;&#x7531;&#x5B83;&#x6765;&#x63A7;&#x5236;&#x8981;&#x4E0D;&#x8981;&#x663E;&#x793A;&#x6216;&#x9690;&#x85CF;&#x8FD9;&#x4E9B;&#x7A97;&#x4F53;&#x3002; &#x6CE8;&#x518C;&#x7A97;&#x4F53;&#x7C7B; &#x65E2;&#x7136;&#x662F;Windows&#x7A97;&#x4F53;&#xFF0C;&#x5FC5;&#x7136;&#x5305;&#x542B;&#x6CE8;&#x518C;&#x7A97;&#x4F53;&#x7C7B;&#x3001;&#x521B;&#x5EFA;&#x7A97;&#x4F53;&#x3001;&#x6267;&#x884C;&#x7A97;&#x4F53;&#x51FD;&#x6570;&#x8FD9;&#x4E09;&#x4E2A;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3002;&#x6CE8;&#x518C;&#x7A97;&#x4F53;&#x7C7B;&#x662F;&#x5728;DllMain&#x51FD;&#x6570;&#x7684;DLL_PROCESS_ATTACH&#x5206;&#x652F;&#x4E2D;&#x5B8C;&#x6210;&#xFF0C;&#x5728;DLL_PROCESS_DETACH&#x5206;&#x652F;&#x5B8C;&#x6210;&#x6CE8;&#x9500;&#x7A97;&#x4F53;&#x7C7B;&#x3002;&#x548C;&#x666E;&#x901A;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x7A97;&#x4F53;&#x7C7B;&#x4E0D;&#x540C;&#x5728;&#x4E8E;style&#x5B57;&#x6BB5;&#x548C;cbWndExtra&#x5B57;&#x6BB5;&#xFF1A; 123456789101112131415161718void UIWnd::RegisterUIWndClass(HINSTANCE hInstance){ WNDCLASSEX wc = { 0 }; wc.cbSize = sizeof(WNDCLASSEX); wc.style = CS_IME; // &#x6CE8;&#x610F;1 wc.lpfnWndProc = UIWndProc; wc.cbClsExtra = 0; wc.cbWndExtra = 2 * sizeof(LONG_PTR); // &#x6CE8;&#x610F;2&#xFF1A;&#x7CFB;&#x7EDF;&#x8981;&#x5B58;&#x653E;IMMGWL_IMC &#x548C; IMMGWL_PRIVATE wc.hInstance = hInstance; wc.hCursor = NULL; wc.hIcon = NULL; wc.lpszMenuName = NULL; wc.lpszClassName = GetUIWndClassName(); wc.hbrBackground = NULL; wc.hIconSm = NULL; ATOM atomUi = RegisterClassEx(&amp;wc); mhInstance = hInstance;} &#x521B;&#x5EFA;&#x7A97;&#x4F53; &#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x4F53;&#x548C;&#x666E;&#x901A;&#x81EA;&#x5B9A;&#x4E49;&#x7A97;&#x4F53;&#x6700;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#x7A97;&#x4F53;&#x7684;&#x521B;&#x5EFA;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x7A97;&#x4F53;&#x8981;&#x901A;&#x8FC7;&#x8C03;&#x7528;CreateWindow(...)&#x51FD;&#x6570;&#x6765;&#x5B8C;&#x6210;&#x521B;&#x5EFA;&#xFF0C;&#x4F46;&#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x4F53;&#x5219;&#x662F;&#x7531;&#x7CFB;&#x7EDF;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x7684;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x8981;&#x4F20;&#x5165;&#x7A97;&#x4F53;&#x7C7B;&#x540D;&#xFF0C;&#x7CFB;&#x7EDF;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x7A97;&#x4F53;&#x7C7B;&#x540D;&#x7684;&#x5462;&#xFF1F;&#x524D;&#x9762;&#x5DF2;&#x7ECF;&#x8BB2;&#x8FC7;&#xFF1A;&#x5728;&#x5BFC;&#x51FA;&#x51FD;&#x6570;ImeInquire&#x90A3;&#x91CC;&#x3002; &#x7A97;&#x4F53;&#x51FD;&#x6570; &#x7A97;&#x4F53;&#x51FD;&#x6570;&#x4E2D;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x8981;&#x8BA9;WM_IME_xxx&#x7C7B;&#x7684;&#x6D88;&#x606F;&#x4EA4;&#x7ED9;DefWindowProc&#x51FD;&#x6570;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4F1A;&#x628A;&#x8FD9;&#x7C7B;&#x6D88;&#x606F;&#x518D;&#x4EA4;&#x7ED9;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x53E3;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x6B7B;&#x5FAA;&#x73AF;&#x3002;&#x5BF9;&#x4E8E;&#x4E0D;&#x5904;&#x7406;&#x7684;WM_IME_xxx&#x6D88;&#x606F;&#xFF0C;&#x8FD4;&#x56DE;0&#x5373;&#x53EF;&#x3002; &#x4E0E;&#x666E;&#x901A;&#x7528;&#x6237;&#x7A97;&#x4F53;&#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#x4ED6;&#x8981;&#x5904;&#x7406;&#x4E00;&#x7CFB;&#x5217;&#x7684;WM_IME_xxx&#x6D88;&#x606F;&#xFF0C;&#x4EE5;&#x54CD;&#x5E94;&#x6765;&#x81EA;ImeToAsciiEx&#x7684;&#x6D88;&#x606F;&#x2014;&#x2014;&#x663E;&#x793A;&#x6216;&#x9690;&#x85CF;&#x5199;&#x4F5C;&#x7A97;&#x3001;&#x5019;&#x9009;&#x7A97;&#x3001;&#x72B6;&#x6001;&#x680F;&#x4EE5;&#x53CA;&#x66F4;&#x65B0;&#x5B83;&#x4EEC;&#x3002;&#x672C;&#x6587;&#x6211;&#x4EEC;&#x5148;&#x4E0D;&#x7740;&#x6025;&#x5F15;&#x5165;&#x8FD9;&#x4E9B;&#x7A97;&#x53E3;&#xFF0C;&#x4F60;&#x4F1A;&#x770B;&#x5230;&#x5F53;&#x6572;&#x5B57;&#x6BCD;&#x952E;&#x7684;&#x65F6;&#x5019;&#x6CA1;&#x6709;&#x53CD;&#x5E94;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x8F93;&#x5165;&#x6CD5;&#x628A;&#x8FD9;&#x4E9B;&#x5B57;&#x6BCD;&#x201C;&#x5403;&#x6389;&#x201D;&#x4E86;&#xFF0C;&#x518D;&#x6309;&#x7A7A;&#x683C;&#x6216;&#x56DE;&#x8F66;&#x4F1A;&#x4E00;&#x6B21;&#x4E0A;&#x5C4F;&#xFF0C;&#x6309;ESC&#x5219;&#x6E05;&#x7A7A;&#x201C;&#x5403;&#x6389;&#x201D;&#x7684;&#x5B57;&#x6BCD;&#xFF0C;&#x8FDB;&#x5165;&#x91CD;&#x65B0;&#x8F93;&#x5165;&#x7684;&#x72B6;&#x6001;&#x3002; &#x6269;&#x5C55;&#x7A97;&#x53E3; &#x6269;&#x5C55;&#x7A97;&#x53E3;&#x5305;&#x62EC;&#x5199;&#x4F5C;&#x7A97;&#x3001;&#x5019;&#x9009;&#x7A97;&#x3001;&#x72B6;&#x6001;&#x680F;&#x7B49;&#x3002;&#x8FD9;&#x4E9B;&#x7A97;&#x53E3;&#x9700;&#x8981;&#x5177;&#x5907;&#x4E00;&#x4E9B;&#x5171;&#x540C;&#x7684;&#x7279;&#x5F81;&#xFF1A; 1. &#x5173;&#x4E8E;&#x7A97;&#x4F53;&#x7C7B;&#x98CE;&#x683C;&#xFF0C;&#x9700;&#x8981;&#x6307;&#x5B9A;CS_IME&#x6807;&#x8BB0;&#x3002;&#x4F46;&#x6211;&#x89C9;&#x5F97;&#x5176;&#x5B9E;&#x53EA;&#x6709;&#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x53E3;&#x7528;&#x8BE5;&#x98CE;&#x683C;&#xFF0C;&#x5176;&#x4F59;&#x7684;&#x6269;&#x5C55;&#x7A97;&#x53E3;&#x5E94;&#x8BE5;&#x4E0D;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x7684;&#x521B;&#x5EFA;&#x662F;&#x7531;&#x5F00;&#x53D1;&#x8005;&#x521B;&#x5EFA;&#x7684;&#x3002; 2. &#x5728;&#x521B;&#x5EFA;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x4F53;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x6307;&#x5B9A;&#x7A97;&#x4F53;&#x98CE;&#x683C;&#x4E3A;WS_DISABLED&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x4F53;&#x4E0D;&#x80FD;&#x63A5;&#x53D7;&#x8F93;&#x5165;&#x7126;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x53C8;&#x4F1A;&#x6FC0;&#x6D3B;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x8F93;&#x5165;&#x903B;&#x8F91;&#x5C31;&#x5D4C;&#x5957;&#x4E86;&#x3002; 3. &#x8FD9;&#x4E9B;&#x7A97;&#x53E3;&#x53EF;&#x4EE5;&#x5728;&#x8F93;&#x5165;&#x6CD5;UI&#x7A97;&#x53E3;&#x7684;WM_CREATE&#x51FD;&#x6570;&#x4E2D;&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#x548C;&#x521B;&#x5EFA;&#x3002; 4. &#x8FD9;&#x4E9B;&#x7A97;&#x53E3;&#x91CC;&#x8981;&#x73B0;&#x5B9E;&#x7684;&#x5185;&#x5BB9;&#x9700;&#x8981;&#x4F5C;&#x4E3A;IMCC&#x5728;IMC&#x4E2D;&#x521B;&#x5EFA;&#x3002;IMC&#x4E2D;&#x6709;&#x4E00;&#x4E9B;&#x9ED8;&#x8BA4;&#x7684;IMCC&#x662F;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x6B64;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 12345678typedef struct tagINPUTCONTEXT { ... HIMCC hCompStr; HIMCC hCandInfo; HIMCC hGuideLine; HIMCC hPrivate; ...} INPUTCONTEXT, *PINPUTCONTEXT, NEAR *NPINPUTCONTEXT, FAR *LPINPUTCONTEXT; &#x5728;ImeSelect&#x51FD;&#x6570;&#x4E2D;&#x9996;&#x6B21;&#x83B7;&#x5F97;IMC&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x83B7;&#x5F97;&#x8FD9;&#x4E9B;IMCC&#x7684;&#x5C3A;&#x5BF8;&#xFF0C;&#x53D1;&#x73B0;&#x662F;&#x975E;0&#x7684;&#xFF0C;&#x8BF4;&#x660E;&#x8FD9;&#x4E9B;IMCC&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E86;&#x3002;&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x9002;&#x914D;&#x81EA;&#x5DF1;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x6211;&#x5728;ImeSelect&#x4E2D;&#x521D;&#x59CB;&#x5316;IMC&#xFF0C;&#x8C03;&#x7528;ImmReSizeIMCC(m_pContext-&gt;hCompStr, sizeof(Comp));&#xFF0C;&#x7528;&#x81EA;&#x5DF1;&#x7684;Comp&#x7C7B;&#x66FF;&#x6362;&#x6389;&#x4E86;&#x539F;&#x5148;&#x7684;hCompStr&#x3002; &#x5B89;&#x88C5; &#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5B89;&#x88C5;&#x8981;&#x505A;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;1&#x3001;&#x5C06;ime&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;Windows/System32&#x76EE;&#x5F55;&#x4E0B;&#xFF1B;2&#x3001;&#x8C03;&#x7528;ImmInstallIME&#x6CE8;&#x518C;&#x8BE5;&#x8F93;&#x5165;&#x6CD5;&#x3002; &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5728;64&#x4F4D;&#x673A;&#x5668;&#x4E0B;&#xFF0C;&#x5E94;&#x8BE5;&#x4E3A;32&#x4F4D;&#x548C;64&#x4F4D;&#x751F;&#x6210;&#x4E24;&#x4EFD;ime&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6837;&#x5728;64&#x4F4D;&#x548C;32&#x4F4D;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x91CC;&#x624D;&#x80FD;&#x5206;&#x522B;&#x5207;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x3002;64&#x4F4D;ime&#x6587;&#x4EF6;&#x653E;&#x5728;Windows/System32&#x4E0B;&#xFF0C;32&#x4F4D;&#x653E;&#x5728;Windows/SysWOW64&#x4E0B;&#x3002; &#x901A;&#x5E38;&#x8FD9;&#x4E9B;&#x6D3B;&#x662F;&#x7531;NSIS&#x811A;&#x672C;&#x5E72;&#x7684;&#xFF0C;&#x6B64;&#x5904;&#x6211;&#x5199;&#x4E86;&#x4E00;&#x4E2A;ImeInstall&#x7A0B;&#x5E8F;&#x6765;&#x505A;&#xFF0C;&#x6CE8;&#x610F;&#xFF1A;&#x56E0;&#x4E3A;&#x8981;&#x5F80;Windows/System32&#x4E0B;&#x5199;&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x7A0B;&#x5E8F;&#x5FC5;&#x987B;&#x5177;&#x5907;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF0C;&#x56E0;&#x6B64;&#x5728;CMake&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x94FE;&#x63A5;&#x9009;&#x9879;&#xFF1A; 1SET_TARGET_PROPERTIES(ImeInstaller PROPERTIES LINK_FLAGS &quot;/level=&apos;requireAdministrator&apos; /uiAccess=&apos;false&apos;&quot;) &#x672C;&#x6587;&#x4EE3;&#x7801;&#x5DF2;&#x63D0;&#x4EA4;&#x81F3;WinImmImeSample-MiniIme]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CMake Demo （二）带GoogleTest的多项目构建]]></title>
    <url>%2F2017%2F02%2F11%2F2017%2F0211CMakeDemo2%2F</url>
    <content type="text"><![CDATA[&#x5F15;&#x5165;GoogleTest&#x8FDB;&#x884C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;&#x540C;&#x65F6;&#x6784;&#x5EFA;GoogleTest&#x548C;&#x4E1A;&#x52A1;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x51E0;&#x4E4E;&#x6210;&#x4E86;&#x4E00;&#x79CD;&#x5957;&#x8DEF;&#xFF0C;&#x6240;&#x4EE5;&#x5355;&#x72EC;&#x628A;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x5907;&#x5FD8;&#x4E0B;&#x6765;&#x3002; &#x4EE3;&#x7801;&#x6811;&#x4E3A;&#xFF1A; 1234567891011121314151617demo2&#x251C;&#x2500;&#x2500; CMakeLists.txt&#x251C;&#x2500;&#x2500; co.sh --&gt; &#x8BE5;&#x811A;&#x672C;&#x7528;&#x4E8E;&#x62C9;&#x53D6;googletest&#x251C;&#x2500;&#x2500; googletest --&gt; &#x88AB;co.sh&#x62C9;&#x53D6;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x4E0D;&#x5C5E;&#x4E8E;&#x4EE3;&#x7801;&#x6811;&#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; ...&#x251C;&#x2500;&#x2500; include&#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; MyLib.h --&gt; mylib&#x66B4;&#x9732;&#x51FA;&#x6765;&#x7684;&#x63A5;&#x53E3;&#x251C;&#x2500;&#x2500; myexe&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; CMakeLists.txt&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; MyDemo.cpp&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; MyDemo.h&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; MyDemo_unittest.cpp&#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; main.cpp&#x2514;&#x2500;&#x2500; mylib &#x251C;&#x2500;&#x2500; CMakeLists.txt &#x251C;&#x2500;&#x2500; MyLib.cpp &#x2514;&#x2500;&#x2500; MyLib_unittest.cpp &#x603B;&#x4F53;&#x4E0A;&#xFF0C;&#x5404;&#x5B50;&#x9879;&#x76EE;&#x7684;&#x6784;&#x5EFA;&#x5C31;&#x653E;&#x5230;&#x9879;&#x76EE;&#x5185;&#x7684;CMake&#x6587;&#x4EF6;&#x91CC;&#x6765;&#x505A;&#xFF0C;demo2/CMakeLists.txt&#x91CC;&#x53EA;&#x8D1F;&#x8D23;&#x5305;&#x542B;&#x5B50;&#x9879;&#x76EE;&#xFF0C;&#x4EE5;&#x53CA;&#x521B;&#x5EFA;unittest&#x9879;&#x76EE;&#x3002;&#x56E0;&#x4E3A;unittest&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x6309;&#x7167;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x518D;&#x7EC6;&#x5206;&#x6A21;&#x5757;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5FC5;&#x987B;&#x5728;&#x6BCF;&#x4E2A;&#x5B50;&#x9879;&#x76EE;&#x91CC;&#x90FD;&#x5199;&#x4E00;&#x4EFD;&#x7C7B;&#x4F3C;&#x7684;&#x9879;&#x76EE;&#x903B;&#x8F91;&#x3002; &#x4E3B;CMakeLists.txt 12345678910111213141516171819202122cmake_minimum_required (VERSION 2.6)project(CMakeDemo)add_subdirectory(mylib)add_subdirectory(myexe)add_subdirectory(googletest)# &#x6784;&#x5EFA;unittest&#x7684;&#x53EF;&#x6267;&#x884C;&#x9879;&#x76EE;include_directories(${PROJECT_SOURCE_DIR}/googletest/googletest/include)include_directories(${PROJECT_SOURCE_DIR}/include)# &#x6536;&#x96C6;&#x5404;&#x5B50;&#x9879;&#x7684;*.cpp&#x3001;*.h&#x6587;&#x4EF6;foreach ( folder myexe mylib) file(GLOB_RECURSE SRC &quot;${PROJECT_SOURCE_DIR}/${folder}/*.cpp&quot; &quot;${PROJECT_SOURCE_DIR}/${folder}/*.h&quot;) list(APPEND ALL_SRC ${SRC})endforeach(folder)# &#x5C4F;&#x853D;main&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;gtest_main&#x5DF2;&#x7ECF;&#x6709;&#x4E86;LIST(REMOVE_ITEM ALL_SRC &quot;${PROJECT_SOURCE_DIR}/myexe/main.cpp&quot;)add_executable(myexe_test ${ALL_SRC})target_link_libraries(myexe_test gtest_main) &#x5305;&#x542B;&#x5B50;&#x9879;&#x76EE;&#x7684;&#x90E8;&#x5206;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x3002;&#x6784;&#x5EFA;unittest&#x9879;&#x76EE;&#x662F;&#x628A;&#x5404;&#x5B50;&#x9879;&#x76EE;&#x91CC;&#x6240;&#x6709;&#x6E90;&#x6587;&#x4EF6;&#x548C;_unittest.*&#x6C47;&#x603B;&#x8D77;&#x6765;&#xFF0C;&#x7F16;&#x8BD1;&#x5E76;&#x94FE;&#x63A5;&#x5230;gtest_main&#xFF0C;gtest_main&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;main&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x652F;&#x6301;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x53EA;&#x8FD0;&#x884C;&#x6307;&#x5B9A;&#x7684;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 12$ ./myexe_test --gtest_filter=MyDemoUnitTest*$ ./myexe_test --gtest_filter=MyDemoUnitTest.Test* &#x56E0;&#x6B64;&#x9700;&#x8981;&#x628A;&#x4E1A;&#x52A1;&#x7684;main&#x51FD;&#x6570;&#x5C4F;&#x853D;&#x6389;&#x3002; myexe/CMakeLists.txt 123456cmake_minimum_required (VERSION 2.6)include_directories(${PROJECT_SOURCE_DIR}/include)set(SRC MyDemo.cpp MyDemo.h main.cpp ${PROJECT_SOURCE_DIR}/include/MyLib.h)add_executable(myexe ${SRC})target_link_libraries(myexe mylib_shared) # &#x9759;&#x6001;&#x94FE;&#x63A5;mylib &#x8FD9;&#x4E2A;&#x5B50;CMake&#x5C31;&#x5F88;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x53EA;&#x8D1F;&#x8D23;&#x6784;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x5373;&#x53EF;&#x3002; mylib/CMakeLists.txt 123456789101112cmake_minimum_required (VERSION 2.6)MESSAGE(STATUS &quot;operation system is ${CMAKE_SYSTEM_NAME}&quot;)include_directories(${PROJECT_SOURCE_DIR}/include)set(SRC MyLib.cpp ${PROJECT_SOURCE_DIR}/include/MyLib.h)if(APPLE) set(CMAKE_MACOSX_RPATH 1)endif()add_library(mylib_static STATIC ${SRC})add_library(mylib_shared SHARED ${SRC}) &#x8FD9;&#x4E2A;&#x5B50;CMake&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x8D1F;&#x8D23;&#x6784;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x9759;&#x6001;/&#x52A8;&#x6001;&#x5E93;&#x5373;&#x53EF;&#x3002; &#x603B;&#x7ED3; CMake&#x7684;&#x5206;&#x5C42;&#x5904;&#x7406;&#x8BA9;&#x6BCF;&#x4E2A;&#x5B50;&#x9879;&#x76EE;&#x8D1F;&#x8D23;&#x505A;&#x81EA;&#x5DF1;&#x7684;&#x6784;&#x5EFA;&#x903B;&#x8F91;&#xFF0C;&#x9AD8;&#x5C42;CMake&#x53EA;&#x8D1F;&#x8D23;&#x5305;&#x542B;&#x5B50;&#x6A21;&#x5757;&#x548C;&#x6784;&#x5EFA;&#x8DE8;&#x6A21;&#x5757;&#x9879;&#x76EE;&#x3002;&#x5982;&#x679C;&#x662F;&#x5728;VC&#x91CC;&#xFF0C;&#x8FD9;&#x79CD;&#x4EA4;&#x53C9;&#x5F15;&#x7528;&#x6E90;&#x6587;&#x4EF6;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x5982;&#x679C;&#x5B50;&#x9879;&#x76EE;&#x589E;&#x52A0;&#x6216;&#x5220;&#x51CF;&#x4E86;&#x6587;&#x4EF6;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x505A;&#x4E00;&#x7CFB;&#x5217;&#x624B;&#x5DE5;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x6709;32&#x4F4D;/64&#x4F4D;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#xFF0C;&#x5DE5;&#x4F5C;&#x91CF;&#x5C31;&#x8981;&#x7FFB;&#x500D;&#x3002;&#x5176;&#x5B9E;Demo2&#x7684;CMake&#x8FD8;&#x53EF;&#x4EE5;&#x505A;&#x5F97;&#x66F4;&#x667A;&#x80FD;&#x4E00;&#x4E9B;&#x2014;&#x2014;&#x5982;&#x4E3B;CMake&#x6587;&#x4EF6;&#x90A3;&#x6837;&#xFF0C;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x627E;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x786C;&#x7F16;&#x7801;&#xFF0C;&#x8FD9;&#x6837;&#x672A;&#x6765;&#x589E;&#x5220;&#x6587;&#x4EF6;&#x90FD;&#x4E0D;&#x4F1A;&#x5E26;&#x6765;&#x989D;&#x5916;&#x5DE5;&#x4F5C;&#x3002;&#x76F8;&#x6BD4;&#x4E4B;&#x4E0B;&#x6548;&#x7387;&#x4E0A;&#x6709;&#x91CF;&#x7EA7;&#x7684;&#x63D0;&#x5347;&#xFF01;]]></content>
      <categories>
        <category>CMake</category>
      </categories>
      <tags>
        <tag>CMake Demo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CMake Demo （一）构建可执行文件的基本步骤]]></title>
    <url>%2F2017%2F02%2F11%2F2017%2F0211CMakeDemo1%2F</url>
    <content type="text"><![CDATA[&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x5404;&#x9694;&#x51E0;&#x4E2A;&#x793C;&#x62DC;&#x518D;&#x6B21;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x53C8;&#x8981;&#x5B66;&#x4E60;&#x4E00;&#x904D;&#xFF0C;&#x672C;&#x6587;&#x5907;&#x5FD8;CMake&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7528;&#x6CD5;&#x3002;&#x4E0D;&#x6C42;&#x7CFB;&#x7EDF;&#x5168;&#x9762;&#xFF0C;&#x53EA;&#x628A;&#x81EA;&#x5DF1;&#x4F7F;&#x7528;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x5907;&#x5FD8;&#x4E0B;&#x6765;&#x3002;&#x7CFB;&#x7EDF;&#x5168;&#x9762;&#x90A3;&#x662F;&#x5B98;&#x65B9;&#x6559;&#x7A0B;&#x5E94;&#x8BE5;&#x505A;&#x7684;&#x4E8B;~ # &#x6784;&#x5EFA;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6; &#x4EE3;&#x7801;&#x6811;&#x4E3A;&#xFF1A; 1234567demo1&#x251C;&#x2500;&#x2500; CMakeLists.txt&#x251C;&#x2500;&#x2500; demo.cpp&#x251C;&#x2500;&#x2500; demo.h&#x251C;&#x2500;&#x2500; main.cpp&#x2514;&#x2500;&#x2500; build --&gt; &#x8BE5;&#x76EE;&#x5F55;&#x4E0D;&#x5C5E;&#x4E8E;&#x4EE3;&#x7801;&#x6811;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x6784;&#x5EFA;&#x6587;&#x4EF6;&#x521B;&#x5EFA;&#x5728;&#x6B64; &#xA0;&#xA0; &#x2514;&#x2500;&#x2500; ... CMakeLists.txt&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 1234567cmake_minimum_required (VERSION 2.6)project(CMakeDemo) # &#x9879;&#x76EE;&#x540D;set(src_list main.cpp demo.cpp demo.h)message(STATUS &quot;This is Binary dir &quot; ${CMakeDemo_BINARY_DIR})message(STATUS &quot;This is Source dir &quot; ${CMakeDemo_SOURCE_DIR})add_executable(Demo1 ${src_list}) &#x5B83;&#x5305;&#x542B;CMake&#x6587;&#x4EF6;&#x6700;&#x57FA;&#x672C;&#x7684;&#x4E24;&#x4E2A;&#x8981;&#x7D20;&#xFF1A;project&#x548C;add_executable&#x3002; # project project &#x7528;&#x6765;&#x7ED9;&#x9879;&#x76EE;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5982;&#x679C;&#x751F;&#x6210;&#x7684;&#x662F;Visual C++&#x9879;&#x76EE;&#xFF0C;&#x8BE5;&#x540D;&#x5B57;&#x5C31;&#x662F;&#x9879;&#x76EE;&#x7684;Solution Name&#x4EE5;&#x53CA;sln&#x6587;&#x4EF6;&#x540D;&#x3002; &#x6211;&#x5C1D;&#x8BD5;&#x628A;&#x8FD9;&#x884C;&#x6CE8;&#x6389;&#xFF0C;&#x7ED3;&#x679C;&#x867D;&#x7136;&#x8FD8;&#x80FD;&#x751F;&#x6210;&#x9879;&#x76EE;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x4E9B;&#x4F9D;&#x8D56;&#x8BE5;&#x503C;&#x7684;&#x53D8;&#x91CF;&#x90FD;&#x4F1A;&#x4E0D;&#x6B63;&#x5E38;&#xFF0C;&#x6BD4;&#x5982;CMakeDemo_BINARY_DIR&#x548C;CMakeDemo_SOURCE_DIR&#xFF0C;&#x6CA1;&#x4E86;&#x8FD9;&#x4E9B;&#x57FA;&#x672C;&#x53D8;&#x91CF;&#x4F1A;&#x8BA9;CMake&#x65E0;&#x6CD5;&#x8FD0;&#x4F5C;&#x3002; add_executable add_executable(&lt;name&gt; source1 [source2 ...]) &#x5B9A;&#x4E49;&#x4E86;&#x5DE5;&#x7A0B;&#x751F;&#x6210;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5982;&#x679C;&#x751F;&#x6210;&#x7684;&#x662F;Visual C++&#x9879;&#x76EE;&#xFF0C;&#x8BE5;&#x884C;&#x5BF9;&#x5E94;solution&#x4E2D;&#x7684;&#x4E00;&#x4E2A;project&#xFF0C;&#x5C31;&#x5BF9;&#x5E94;&#x8BE5;project&#x540D;&#x79F0;&#x3002; sourceN&#x5219;&#x662F;&#x7F16;&#x8BD1;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x3002;&#x8BB0;&#x5F97;&#x628A;.h&#x6587;&#x4EF6;&#x4E5F;&#x52A0;&#x8FDB;&#x6765;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x52A0;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x7F16;&#x8BD1;&#x3001;&#x6784;&#x5EFA;&#x90FD;&#x662F;&#x6CA1;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x751F;&#x6210;&#x7684;IDE&#x4E2D;&#x4E5F;&#x5C31;&#x4E0D;&#x5305;&#x542B;&#x5934;&#x6587;&#x4EF6;&#x4E86;&#xFF0C;&#x8FD9;&#x7ED9;&#x7F16;&#x8F91;&#x5E26;&#x6765;&#x4E0D;&#x4FBF;&#x3002; set set(&lt;variable&gt; &lt;value&gt;... [PARENT_SCOPE]) &#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#xFF0C;&#x6B64;&#x5904;&#x5B9A;&#x4E49;&#x4E86;&#x6E90;&#x6587;&#x4EF6;&#x5217;&#x8868;&#xFF0C;&#x8BE5;&#x5217;&#x8868;&#x53EF;&#x80FD;&#x88AB;&#x591A;&#x6B21;&#x5F15;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x65E9;&#x65E9;&#x5730;&#x628A;&#x5B83;&#x8D4B;&#x7ED9;&#x53D8;&#x91CF;src_list &#x9690;&#x5F0F;&#x53D8;&#x91CF; &lt;projectname&gt;_BINARY_DIR &#x6307;&#x5411;demo1/build &lt;projectname&gt;_SRC_DIR &#x6307;&#x5411;demo1 CMake&#x7CFB;&#x7EDF;&#x4E5F;&#x9884;&#x5B9A;&#x4E49;&#x4E86;&#x53D8;&#x91CF;&#xFF1A; PROJECT_BINARY_DIR&#x4E0E;&lt;projectname&gt;_BINARY_DIR&#x4E00;&#x81F4; PROJECT_SOURCE_DIR&#x4E0E;&lt;projectname&gt;_SRC_DIR&#x4E00;&#x81F4; &#x663E;&#x7136;&#x5E94;&#x5F53;&#x4F7F;&#x7528;&#x524D;&#x8005;&#x3002; message message([&lt;mode&gt;] &quot;message to display&quot; ...) &#x663E;&#x793A;&#x4E00;&#x6761;&#x6D88;&#x606F;&#xFF0C;&#x8FD9;&#x662F;&#x8C03;&#x8BD5;CMake&#x6587;&#x4EF6;&#x6700;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5176;&#x4E2D;&#x662F;&#x6D88;&#x606F;&#x7C7B;&#x578B;&#xFF0C;&#x5E38;&#x89C1;&#x53D6;&#x503C;&#xFF1A; 1234STATUS = &#x6B21;&#x8981;&#x4FE1;&#x606F;WARNING = &#x8B66;&#x544A;&#x4FE1;&#x606F;&#xFF0C;&#x4E0D;&#x6253;&#x65AD;CMake&#x7684;&#x5904;&#x7406;SEND_ERROR = &#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x4E0D;&#x6253;&#x65AD;CMake&#x7684;&#x5904;&#x7406;&#xFF0C;&#x751F;&#x6210;&#x8FC7;&#x7A0B;&#x88AB;&#x8DF3;&#x8FC7;FATAL_ERROR = &#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x7ACB;&#x5373;&#x7EC8;&#x6B62;CMake&#x7684;&#x5904;&#x7406; &#x5173;&#x4E8E;&#x5927;&#x5C0F;&#x5199; CMake&#x5173;&#x952E;&#x5B57;&#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF0C;&#x4F46;&#x662F;&#x53D8;&#x91CF;&#x540D;&#x662F;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x7684;: MESSAGE(STATUS &quot;This is Binary dir &quot; ${PROJECT_BINARY_DIR})&#x2705; message(STATUS &quot;This is Binary dir &quot; ${PROJECT_BINARY_DIR})&#x2705; message(STATUS &quot;This is Binary dir &quot; ${project_binary_dir})&#x274C; &#x5173;&#x4E8E;CMake&#x7684;GUI&#x5DE5;&#x5177; &#x521A;&#x5F00;&#x59CB;&#x4EE5;&#x4E3A;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x662F;&#x7528;&#x6765;&#x751F;&#x6210;CMake&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x539F;&#x6765;&#x53EA;&#x662F;&#x4F9D;&#x636E;CMake&#x6587;&#x4EF6;&#x751F;&#x6210;&#x672C;&#x5730;&#x5177;&#x4F53;&#x9879;&#x76EE;&#x7684;&#x5DE5;&#x5177;&#x3002;&#x4E0D;&#x8FC7;&#x5427;&#xFF0C;&#x80FD;&#x514D;&#x53BB;&#x8BB0;&#x5FC6;CMake&#x7684;&#x53C2;&#x6570;&#x5F62;&#x5F0F;&#xFF0C;&#x4E5F;&#x8FD8;&#x662F;&#x6709;&#x7528;&#x3002; &#x672C;&#x6587;&#x6E90;&#x7801;&#x5728;CMakeDemo&#x53EF;&#x4E0B;&#x8F7D;&#x3002;]]></content>
      <categories>
        <category>CMake</category>
      </categories>
      <tags>
        <tag>CMake Demo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Android下创建输入法（译）]]></title>
    <url>%2F2017%2F02%2F07%2F2017%2F0207CreatingAnInputMethod%2F</url>
    <content type="text"><![CDATA[&#x539F;&#x6587;&#x6765;&#x81EA;Android Delelopers&#x5F00;&#x53D1;&#x5B98;&#x7F51;&#xFF1A;Creating an Input Method&#x3002; &#x6982;&#x8FF0; &#x8F93;&#x5165;&#x6CD5;&#x662F;&#x7528;&#x6765;&#x8F93;&#x5165;&#x6587;&#x5B57;&#x7684;&#x7EC4;&#x4EF6;&#x3002;&#x57FA;&#x4E8E;&#x5B89;&#x5353;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x6846;&#x67B6;&#x5F00;&#x53D1;&#x51FA;&#x65B0;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5411;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x53EF;&#x9009;&#x7684;&#x3001;&#x7EDF;&#x4E00;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E9B;&#x8F93;&#x5165;&#x6CD5;&#x53EF;&#x57FA;&#x4E8E;&#x89E6;&#x5C4F;&#x952E;&#x76D8;&#x4E5F;&#x53EF;&#x57FA;&#x4E8E;&#x8BED;&#x97F3;&#x7B49;&#x3002;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x81EA;&#x4E3B;&#x5B89;&#x88C5;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x91CC;&#x9009;&#x62E9;&#x4E3A;&#x9ED8;&#x8BA4;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x80FD;&#x4F7F;&#x7528;&#x4E86;&#x3002;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x53EA;&#x80FD;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x6CD5;&#x3002; &#x5728;&#x5B89;&#x5353;&#x7CFB;&#x7EDF;&#x91CC;&#x521B;&#x5EFA;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x9996;&#x5148;&#x5E94;&#x8BE5;&#x4ECE;InputMethodService&#x6D3E;&#x751F;&#x5B50;&#x7C7B;&#x5E76;&#x5B9E;&#x73B0;&#x5B83;&#xFF0C;&#x901A;&#x5E38;&#x8FD8;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8BBE;&#x7F6E;activity&#xFF0C;&#x7528;&#x6765;&#x8BBE;&#x7F6E;&#x8F93;&#x5165;&#x6CD5;&#x5F00;&#x5173;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5C55;&#x73B0;&#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x4E2D;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x3002; &#x672C;&#x6587;&#x4E0B;&#x9762;&#x7684;&#x90E8;&#x5206;&#x5C06;&#x8986;&#x76D6;&#x5982;&#x4E0B;&#x4E3B;&#x9898;&#xFF1A; * &#x8F93;&#x5165;&#x6CD5;&#x751F;&#x547D;&#x5468;&#x671F; * &#x5728;manifest&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x8F93;&#x5165;&#x6CD5;&#x7EC4;&#x4EF6; * &#x8F93;&#x5165;&#x6CD5;API * &#x8BBE;&#x8BA1;&#x8F93;&#x5165;&#x6CD5;UI * &#x4ECE;&#x8F93;&#x5165;&#x6CD5;&#x5411;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0A;&#x5C4F;&#x6587;&#x5B57; * &#x8F93;&#x5165;&#x6CD5;&#x5B50;&#x7C7B; &#x5982;&#x679C;&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x63A5;&#x89E6;&#x8FC7;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x5EFA;&#x8BAE;&#x5148;&#x9605;&#x8BFB;&#x300A;&#x89E6;&#x5C4F;&#x8F93;&#x5165;&#x6CD5;&#x300B;&#x8FD9;&#x7BC7;&#x4ECB;&#x7ECD;&#x6027;&#x6587;&#x7AE0;&#x3002;SDK&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;SoftKeyboard&#x4E5F;&#x662F;&#x5B66;&#x4E60;&#x7F16;&#x5199;&#x8F93;&#x5165;&#x6CD5;&#x4E0D;&#x9519;&#x7684;&#x53C2;&#x8003;&#x3002; &#x8F93;&#x5165;&#x6CD5;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF08;The IME Lifecycle&#xFF09; &#x4E0B;&#x56FE;&#x5C55;&#x793A;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF1A; &#x672C;&#x6587;&#x5269;&#x4E0B;&#x7684;&#x90E8;&#x5206;&#x5C06;&#x6309;&#x7167;&#x8BE5;&#x751F;&#x547D;&#x5468;&#x671F;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x754C;&#x9762;&#x548C;&#x7F16;&#x7801;&#x3002; &#x5728;Manifest&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x8F93;&#x5165;&#x6CD5;&#x7EC4;&#x4EF6;&#xFF08;Declaring IME Components in the Manifest&#xFF09; &#x5728;&#x5B89;&#x5353;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x662F;&#x4E00;&#x7C7B;&#x5305;&#x542B;IME&#x670D;&#x52A1;&#x7684;&#x7279;&#x6B8A;&#x5E94;&#x7528;&#x3002;&#x9700;&#x8981;&#x5728;manifest&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x8BE5;&#x670D;&#x52A1;&#x548C;&#x5FC5;&#x8981;&#x7684;&#x6743;&#x9650;&#xFF0C;&#x63D0;&#x4F9B;&#x5339;&#x914D;action.view.InputMethod&#x7684;intent filter&#xFF0C;&#x63D0;&#x4F9B;&#x5B9A;&#x4E49;&#x8F93;&#x5165;&#x6CD5;&#x7279;&#x5F81;&#x7684;&#x5143;&#x6570;&#x636E;&#x3002;&#x5B9A;&#x4E49;&#x4E3B;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x4EE5;&#x53CA;&#x80FD;&#x4ECE;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x4E2D;&#x542F;&#x52A8;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x6CD5;&#x670D;&#x52A1;&#x3002;&#x5B83;&#x5305;&#x542B;&#xFF1A;&#x7533;&#x8BF7;BIND_INPUT_METHOD&#x6743;&#x9650;&#xFF0C;&#x8BE5;&#x6743;&#x9650;&#x5141;&#x8BB8;&#x672C;&#x670D;&#x52A1;&#x5C06;&#x8F93;&#x5165;&#x6CD5;&#x8FDE;&#x63A5;&#x5230;&#x7CFB;&#x7EDF;&#xFF1B;&#x521B;&#x5EFA;&#x5339;&#x914D;android.view.InputMethod&#x7684;intent filter&#xFF0C;&#x5E76;&#x5B9A;&#x4E49;&#x5143;&#x6570;&#x636E;&#xFF1A; 12345678910&lt;!-- &#x5B9A;&#x4E49;IME &#x670D;&#x52A1; --&gt;&lt;service android:name=&quot;FastInputIME&quot; android:label=&quot;@string/fast_input_label&quot; android:permission=&quot;android.permission.BIND_INPUT_METHOD&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.view.InputMethod&quot; /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=&quot;android.view.im&quot; android:resource=&quot;@xml/method&quot; /&gt;&lt;/service&gt; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x58F0;&#x660E;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x8BBE;&#x7F6E;activity&#x3002;&#x5B83;&#x5728;intent filter&#x4E2D;&#x6307;&#x5B9A;&#x4E86;ACTION_MAIN&#xFF0C;&#x8868;&#x660E;&#x8BE5;activity&#x662F;&#x8F93;&#x5165;&#x6CD5;&#x5E94;&#x7528;&#x7684;&#x4E3B;&#x5165;&#x53E3;&#x3002; 1234567&lt;!-- &#x53EF;&#x9009;&#x8BBE;&#x7F6E;: &#x63A7;&#x5236;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x7684;Activity --&gt;&lt;activity android:name=&quot;FastInputIMESettings&quot; android:label=&quot;@string/fast_input_settings&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt; &lt;/intent-filter&gt;&lt;/activity&gt; &#x5E94;&#x8BE5;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x952E;&#x76D8;&#x754C;&#x9762;&#x91CC;&#x63D0;&#x4F9B;&#x6253;&#x5F00;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x7684;&#x5165;&#x53E3;&#x3002; &#x8F93;&#x5165;&#x6CD5;&#x76F8;&#x5173;&#x7684;API&#xFF08;The Input Method API&#xFF09; &#x5728;&#x5305;android.inputmethodservice&#x548C;android.view.inputmethod&#x4E2D;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x548C;&#x8F93;&#x5165;&#x6CD5;&#x76F8;&#x5173;&#x7684;&#x7C7B;&#x3002;class KeyEvent&#x7528;&#x6765;&#x5904;&#x7406;&#x952E;&#x76D8;&#x6570;&#x636E;&#x3002; &#x8F93;&#x5165;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x90E8;&#x5206;&#x662F;&#x4ECE;InputMethodService&#x6D3E;&#x751F;&#x7684;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x7EC4;&#x4EF6;&#x3002;&#x9664;&#x4E86;&#x8981;&#x5B9E;&#x73B0;&#x666E;&#x901A;&#x670D;&#x52A1;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x4EE5;&#x5916;&#xFF0C;&#x8BE5;&#x7C7B;&#x8FD8;&#x4E3A;&#x8F93;&#x5165;&#x6CD5;UI&#x7ED8;&#x5236;&#x3001;&#x7528;&#x6237;&#x8F93;&#x5165;&#x5904;&#x7406;&#x3001;&#x4E0A;&#x5C4F;&#x6587;&#x5B57;&#x7B49;&#x63D0;&#x4F9B;&#x4E86;&#x76F8;&#x5E94;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x3002;InputMethodService&#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x7BA1;&#x7406;&#x8F93;&#x5165;&#x6CD5;&#x72B6;&#x6001;&#x3001;&#x662F;&#x5426;&#x53EF;&#x89C1;&#x4EE5;&#x53CA;&#x548C;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x4EA4;&#x4E92;&#x7684;&#x9ED8;&#x8BA4;&#x884C;&#x4E3A;&#x3002; &#x4E0B;&#x9762;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x7C7B;&#xFF1A; * BaseInputConnection &#x5B9A;&#x4E49;&#x4ECE;InputMethod&#x56DE;&#x8C03;&#x5BBF;&#x4E3B;&#x7684;&#x901A;&#x9053;&#x3002;&#x4F7F;&#x7528;&#x8BE5;&#x7C7B;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x5149;&#x6807;&#x9644;&#x8FD1;&#x7684;&#x6587;&#x5B57;&#xFF0C;&#x4E0A;&#x5C4F;&#x8F93;&#x5165;&#x6CD5;&#x5199;&#x4F5C;&#x3001;&#x5019;&#x9009;&#x7A97;&#x4E2D;&#x6587;&#x672C;&#xFF0C;&#x628A;&#x539F;&#x59CB;&#x7684;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#x53D1;&#x9001;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E94;&#x8BE5;&#x6269;&#x5C55;&#x8BE5;&#x7C7B;&#xFF0C;&#x800C;&#x4E0D;&#x53EA;&#x662F;&#x5B9E;&#x73B0;InputConnection&#x7684;&#x63A5;&#x53E3;&#x3002; KeyboardView &#x63D0;&#x4F9B;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x5E76;&#x54CD;&#x5E94;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#x7684;View&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;xml&#x6587;&#x4EF6;&#x5B9A;&#x4E49;keyboard&#xFF0C;&#x5B83;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x3002; &#x8BBE;&#x8BA1;&#x8F93;&#x5165;&#x6CD5;&#x754C;&#x9762;&#xFF08;Designing the Input Method UI&#xFF09; &#x8F93;&#x5165;&#x6CD5;&#x6709;&#x4E24;&#x4E2A;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7684;&#x754C;&#x9762;&#x5143;&#x7D20;&#xFF1A;&#x8F93;&#x5165;&#x7A97;&#x548C;&#x5019;&#x9009;&#x7A97;&#x3002;&#x4ED6;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x9ED8;&#x8BA4;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x548C;&#x8F93;&#x5165;&#x6CD5;&#x76F8;&#x5173;&#x7684;&#x5143;&#x7D20;&#x5373;&#x53EF;&#x3002; &#x8F93;&#x5165;&#x7A97;&#xFF08;Input view&#xFF09; &#x8F93;&#x5165;&#x7A97;&#x662F;&#x7528;&#x6237;&#x8F93;&#x5165;&#x6587;&#x5B57;&#x7684;&#x533A;&#x57DF;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x952E;&#x76D8;&#x3001;&#x624B;&#x5199;&#x6216;&#x624B;&#x52BF;&#x3002;&#x5F53;&#x8F93;&#x5165;&#x6CD5;&#x9996;&#x6B21;&#x663E;&#x793A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x56DE;&#x8C03;onCreateInputView()&#x51FD;&#x6570;&#x3002;&#x5728;&#x5B9E;&#x73B0;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E94;&#x5F53;&#x521B;&#x5EFA;&#x4F60;&#x5E0C;&#x671B;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x4F53;&#x4E0A;&#x5C55;&#x73B0;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5E76;&#x5C06;&#x6B64;&#x5E03;&#x5C40;&#x8FD4;&#x56DE;&#x7ED9;&#x7CFB;&#x7EDF;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;onCreateInputView()&#x51FD;&#x6570;&#x7684;&#x4F8B;&#x7A0B;&#xFF1A; 12345678910@Overridepublic View onCreateInputView() { MyKeyboardView inputView = (MyKeyboardView) getLayoutInflater().inflate( R.layout.input, null); inputView.setOnKeyboardActionListener(this); inputView.setKeyboard(mLatinKeyboard); return mInputView;} &#x5728;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;MyKeyboardView&#x662F;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;keyboard&#x5B9E;&#x4F8B;&#xFF0C;&#x5B83;&#x5B9E;&#x73B0;&#x4E86;KeyboardView&#x63A5;&#x53E3;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F20;&#x7EDF;&#x7684;QWERT&#x952E;&#x76D8;&#xFF0C;&#x8BF7;&#x53C2;&#x89C1;KeyboardView&#x7C7B;&#x3002; &#x5019;&#x9009;&#x7A97;&#xFF08;Candidates view&#xFF09; &#x5019;&#x9009;&#x7A97;&#x7528;&#x6765;&#x663E;&#x793A;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5019;&#x9009;&#x6216;&#x8054;&#x60F3;&#x6587;&#x5B57;&#x3002;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x91CC;&#xFF0C;&#x5F53;&#x8981;&#x663E;&#x793A;&#x5019;&#x9009;&#x7A97;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C06;&#x56DE;&#x8C03;onCreateCandidatesView()&#x51FD;&#x6570;&#x3002;&#x5728;&#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x5E94;&#x5F53;&#x8FD4;&#x56DE;&#x663E;&#x793A;&#x5019;&#x9009;&#x6587;&#x5B57;&#x7684;&#x5E03;&#x5C40;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8981;&#x663E;&#x793A;&#x7684;&#x5185;&#x5BB9;&#x5219;&#x8FD4;&#x56DE;null&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x8FD4;&#x56DE;&#x503C;&#x3002; &#x5728;SoftKeyboard&#x4F8B;&#x7A0B;&#x4E2D;&#xFF0C;&#x6F14;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x5019;&#x9009;&#x7A97;&#x3002; &#x754C;&#x9762;&#x8BBE;&#x8BA1;&#xFF08;UI design considerations&#xFF09; &#x672C;&#x8282;&#x8BB2;&#x8FF0;&#x5173;&#x4E8E;&#x8F93;&#x5165;&#x6CD5;&#x7279;&#x6B8A;&#x7684;UI&#x8BBE;&#x8BA1;&#x8003;&#x8651;&#x3002; ### &#x5904;&#x7406;&#x4E0D;&#x540C;&#x7684;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8; &#x8F93;&#x5165;&#x6CD5;&#x754C;&#x9762;&#x5FC5;&#x987B;&#x80FD;&#x9002;&#x914D;&#x4E0D;&#x540C;&#x7684;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#xFF0C;&#x8FD8;&#x8981;&#x5904;&#x7406;&#x6A2A;&#x7AD6;&#x5C4F;&#x3002;&#x5728;&#x975E;&#x5168;&#x5C4F;&#x8F93;&#x5165;&#x6CD5;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;&#x8981;&#x4E3A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7559;&#x51FA;&#x8DB3;&#x591F;&#x7684;&#x7A7A;&#x95F4;&#x663E;&#x793A;&#x4E0A;&#x5C4F;&#x6587;&#x5B57;&#x4EE5;&#x53CA;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x56E0;&#x6B64;&#x8F93;&#x5165;&#x6CD5;&#x4E0D;&#x8981;&#x5360;&#x7528;&#x8D85;&#x8FC7;&#x4E00;&#x534A;&#x7684;&#x5C4F;&#x5E55;&#x9AD8;&#x5EA6;&#x3002;&#x5168;&#x5C4F;&#x8F93;&#x5165;&#x6CD5;&#x6A21;&#x5F0F;&#x5219;&#x4E0D;&#x5B58;&#x5728;&#x6B64;&#x95EE;&#x9898;&#xFF0C;&#x73B0;&#x5728;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x4EA7;&#x54C1;&#x90FD;&#x662F;&#x534A;&#x5C4F;&#x6A21;&#x5F0F;&#x3002; &#x5904;&#x7406;&#x4E0D;&#x540C;&#x7684;&#x8F93;&#x5165;&#x7C7B;&#x578B; &#x5728;&#x5B89;&#x5353;&#x7CFB;&#x7EDF;&#x4E0B;&#xFF0C;&#x6587;&#x672C;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x5141;&#x8BB8;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x201C;&#x8F93;&#x5165;&#x7C7B;&#x578B;&#x201D;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x6BD4;&#x5982;&#x6587;&#x672C;&#x3001;&#x6570;&#x5B57;&#x3001;URL&#x3001;email&#x5730;&#x5740;&#x6216;&#x8005;&#x641C;&#x7D22;&#x4E32;&#x3002;&#x5F53;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x63A2;&#x6D4B;&#x5F53;&#x524D;&#x7684;&#x8F93;&#x5165;&#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;&#x754C;&#x9762;&#x3002;&#x4E0D;&#x8FC7;&#x4F60;&#x4E0D;&#x5FC5;&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x6CD5;&#x68C0;&#x67E5;&#x7528;&#x6237;&#x8F93;&#x5165;&#x7684;&#x5408;&#x6CD5;&#x6027;&#x2014;&#x2014;&#x8FD9;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E94;&#x8BE5;&#x5E72;&#x7684;&#x4E8B;&#x513F;&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x9488;&#x5BF9;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x662F;&#x666E;&#x901A;&#x6587;&#x672C;&#x548C;&#x6570;&#x5B57;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x622A;&#x56FE;&#xFF1A; &#x5F53;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x83B7;&#x5F97;&#x7126;&#x70B9;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x8C03;&#x7528;&#x51FD;&#x6570;onStartInputView()&#x542F;&#x52A8;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x5E76;&#x4F20;&#x5165;&#x4E00;&#x4E2A;EditorInfo&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x5305;&#x542B;&#x4E86;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x7684;&#x8F93;&#x5165;&#x7C7B;&#x578B;&#x7B49;&#x76F8;&#x5173;&#x5C5E;&#x6027;&#xFF0C;&#x5176;inputType&#x6210;&#x5458;&#x5C31;&#x8868;&#x793A;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x7684;&#x8F93;&#x5165;&#x7C7B;&#x578B;&#x3002; inputType&#x5B57;&#x6BB5;&#x662F;&#x4E00;&#x4E2A;&#x6574;&#x578B;&#x503C;&#xFF0C;&#x5B83;&#x662F;&#x7531;&#x4EE3;&#x8868;&#x4E0D;&#x540C;&#x8F93;&#x5165;&#x7C7B;&#x578B;&#x7684;&#x4F4D;&#x201C;&#x903B;&#x8F91;&#x6216;&#x201D;&#x8D77;&#x6765;&#x7684;&#x6570;&#x503C;&#x3002;&#x53EF;&#x4EE5;&#x5C06;&#x8BE5;&#x503C;&#x4E0E;TYPE_MASK_CLASS&#x6C42;&#x903B;&#x8F91;&#x4E0E;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 1inputType &amp; InputType.TYPE_MASK_CLASS &#x53EF;&#x6709;&#x5982;&#x4E0B;&#x51E0;&#x79CD;&#x53D6;&#x503C;&#xFF1A; * TYPE_CLASS_NUMBER &#x9700;&#x8981;&#x8F93;&#x5165;&#x6570;&#x5B57;&#x3002;&#x5982;&#x524D;&#x6587;&#x6240;&#x793A;&#xFF0C;Latin IME&#x6B64;&#x65F6;&#x5728;&#x952E;&#x76D8;&#x533A;&#x57DF;&#x663E;&#x793A;&#x6570;&#x5B57;&#x952E;&#x76D8;&#x3002; * TYPE_CLASS_DATETIME &#x9700;&#x8981;&#x8F93;&#x5165;&#x65E5;&#x671F;&#x548C;&#x65F6;&#x95F4;&#x3002; * TYPE_CLASS_PHONE &#x9700;&#x8981;&#x8F93;&#x5165;&#x7535;&#x8BDD;&#x53F7;&#x7801;&#x3002; * TYPE_CLASS_TEXT &#x53EF;&#x4EE5;&#x8F93;&#x5165;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x3002; &#x8FD9;&#x4E9B;&#x5E38;&#x91CF;&#x5728;InputType&#x7684;&#x53C2;&#x8003;&#x624B;&#x518C;&#x4E2D;&#x6709;&#x8BE6;&#x7EC6;&#x63CF;&#x8FF0;&#x3002;&#x6B64;&#x5916;&#xFF0C;InputType&#x5B57;&#x6BB5;&#x8FD8;&#x5305;&#x542B;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x7684;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#xFF0C;&#x5982;&#xFF1A; * TYPE_TEXT_VARIATION_PASSWORD &#x5728;TYPE_CLASS_TEXT&#x7C7B;&#x578B;&#x4E0B;&#x8868;&#x793A;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x4E3A;&#x5BC6;&#x7801;&#xFF0C;&#x6B64;&#x65F6;&#x8F93;&#x5165;&#x6CD5;&#x4E0D;&#x8981;&#x660E;&#x6587;&#x663E;&#x793A;&#x8F93;&#x5165;&#x5185;&#x5BB9; * TYPE_TEXT_VARIATION_URI &#x5728;TYPE_CLASS_TEXT&#x7C7B;&#x578B;&#x4E0B;&#x8868;&#x793A;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x4E3A;URL&#x6216;&#x8005;URI(Uniform Resource Identifiers)&#x3002; * TYPE_TEXT_FLAG_AUTO_COMPLETE &#x5728;TYPE_CLASS_TEXT&#x7C7B;&#x578B;&#x4E0B;&#x8868;&#x793A;&#x8F93;&#x5165;&#x7684;&#x6587;&#x672C;&#x4F1A;&#x88AB;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5B9E;&#x73B0;&#x81EA;&#x52A8;&#x8865;&#x5168;&#xFF0C;&#x5BBF;&#x4E3B;&#x7A0B;&#x5E8F;&#x4F1A;&#x6839;&#x636E;&#x5B57;&#x5178;&#x3001;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x6216;&#x5176;&#x5B83;&#x673A;&#x5236;&#x5B8C;&#x6210;&#x81EA;&#x52A8;&#x8865;&#x5168;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5F53;&#x8F93;&#x5165;&#x6CD5;&#x5728;&#x5BC6;&#x7801;&#x533A;&#x57DF;&#x8F93;&#x5165;&#x65F6;&#xFF0C;&#x5728;&#x8F93;&#x5165;&#x7A97;&#x548C;&#x5019;&#x9009;&#x7A97;&#x4E2D;&#x90FD;&#x4E0D;&#x8981;&#x663E;&#x793A;&#x660E;&#x6587;&#xFF0C;&#x4F46;&#x5728;&#x4E0A;&#x5C4F;&#x65F6;&#xFF0C;&#x53D1;&#x9001;&#x7ED9;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x7684;&#x5E94;&#x8BE5;&#x662F;&#x660E;&#x6587;&#xFF0C;&#x6B64;&#x5904;&#x5E94;&#x5F53;&#x6CE8;&#x610F;&#x3002;&#x5207;&#x8BB0;&#x4E0D;&#x8981;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x4FDD;&#x5B58;&#x66FE;&#x7ECF;&#x8F93;&#x5165;&#x8FC7;&#x7684;&#x5BC6;&#x7801;&#x3002;&#x53C2;&#x8003;&#x5B89;&#x5168;&#x8BBE;&#x8BA1;&#xFF0C;&#x53EF;&#x4EE5;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x548C;&#x5B89;&#x5168;&#x76F8;&#x5173;&#x7684;&#x4E3B;&#x9898;&#x3002; &#x4E0A;&#x5C4F;&#x6587;&#x5B57;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF08;Sending Text to the Application&#xFF09; &#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x8F93;&#x5165;&#x6CD5;&#x6309;&#x952E;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x901A;&#x8FC7;&#x53D1;&#x9001;&#x6309;&#x952E;&#x4E8B;&#x4EF6;&#x5411;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x9001;&#x6587;&#x5B57;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7F16;&#x8F91;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x4E2D;&#x5149;&#x6807;&#x9644;&#x8FD1;&#x7684;&#x6587;&#x672C;&#x3002;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;InputConnection&#x7684;&#x5B9E;&#x4F8B;&#x6765;&#x4F20;&#x9012;&#x6587;&#x672C;&#x7684;&#x3002;&#x8C03;&#x7528;&#x9759;&#x6001;&#x51FD;&#x6570;InputMethodService.getCurrentInputConnection()&#x53EF;&#x83B7;&#x5F97;&#x8BE5;&#x5B9E;&#x4F8B;&#x3002; &#x7F16;&#x8F91;&#x5149;&#x6807;&#x9644;&#x8FD1;&#x7684;&#x6587;&#x672C;&#xFF08;Editing the text around the cursor&#xFF09; &#x5F53;&#x8981;&#x64CD;&#x4F5C;&#x7F16;&#x8F91;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x6587;&#x5B57;&#x65F6;&#xFF0C;BaseInputConnection&#x7684;&#x65B9;&#x6CD5;&#x4F1A;&#x5F88;&#x6709;&#x7528;&#xFF1A; * getTextBeforeCursor() &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;CharSequence&#x5BF9;&#x8C61;&#xFF0C;&#x5305;&#x542B;&#x5149;&#x6807;&#x524D;&#x6307;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5E8F;&#x5217;&#x3002; * getTextAfterCursor() &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;CharSequence&#x5BF9;&#x8C61;&#xFF0C;&#x5305;&#x542B;&#x5149;&#x6807;&#x540E;&#x6307;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5E8F;&#x5217;&#x3002; * deleteSurroundingText() &#x5220;&#x9664;&#x5149;&#x6807;&#x524D;/&#x540E;&#x6307;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; * commitText() &#x5411;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x4E0A;&#x5C4F;&#x4E00;&#x4E2A;CharSequence&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x65B0;&#x7684;&#x5149;&#x6807;&#x4F4D;&#x7F6E;&#x3002; &#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x6BB5;&#x6F14;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x5C06;&#x5149;&#x6807;&#x5DE6;&#x8FB9;&#x7684;&#x56DB;&#x4E2A;&#x5B57;&#x7B26;&#x66FF;&#x6362;&#x4E3A;&quot;Hello!&quot;&#xFF1A; 1234InputConnection ic = getCurrentInputConnection();ic.deleteSurroundingText(4, 0);ic.commitText(&quot;Hello&quot;, 1);ic.commitText(&quot;!&quot;, 1); &#x4E0A;&#x5C4F;&#x524D;&#x7EC4;&#x7EC7;&#x5199;&#x4F5C;&#x4E32;&#xFF08;Composing text before committing&#xFF09; &#x5982;&#x679C;&#x8F93;&#x5165;&#x6CD5;&#x8981;&#x505A;&#x6587;&#x672C;&#x9884;&#x6D4B;&#x6216;&#x8005;&#x9700;&#x8981;&#x591A;&#x6B65;&#x624D;&#x80FD;&#x7EC4;&#x7EC7;&#x6210;&#x8C61;&#x5F62;&#x6587;&#x5B57;&#x6216;&#x77ED;&#x8BED;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5199;&#x4F5C;&#x7A97;&#x663E;&#x793A;&#x6682;&#x65F6;&#x7684;&#x7EC4;&#x7EC7;&#x8FC7;&#x7A0B;&#xFF0C;&#x7528;&#x6237;&#x9009;&#x62E9;&#x63D0;&#x4EA4;&#x6587;&#x5B57;&#x4F1A;&#x4F7F;&#x7528;&#x5019;&#x9009;&#x4E32;&#x66FF;&#x4EE3;&#x90E8;&#x5206;&#x5199;&#x4F5C;&#x4E32;&#x3002;&#x8C03;&#x7528;&#x51FD;&#x6570;setComposingText()&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x7247;&#x6BB5;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6F14;&#x793A;&#x5982;&#x4F55;&#x5728;&#x6587;&#x672C;&#x533A;&#x663E;&#x793A;&#x8F93;&#x5165;&#x8FC7;&#x7A0B;&#xFF1A; 123456 InputConnection ic = getCurrentInputConnection(); ic.setComposingText(&quot;Composi&quot;, 1);... ic.setComposingText(&quot;Composin&quot;, 1);... ic.commitText(&quot;Composing &quot;, 1); &#x4E0B;&#x9762;&#x7684;&#x622A;&#x56FE;&#x6F14;&#x793A;&#x4E86;&#x7528;&#x6237;&#x770B;&#x5230;&#x7684;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF1A; &#x76D1;&#x542C;&#x786C;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF08;Intercepting hardware key events&#xFF09; &#x5C3D;&#x7BA1;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x53E3;&#x4E0D;&#x4F1A;&#x83B7;&#x5F97;&#x8F93;&#x5165;&#x7126;&#x70B9;&#xFF0C;&#x5B83;&#x4F9D;&#x7136;&#x662F;&#x9996;&#x5148;&#x6536;&#x5230;&#x786C;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x3002;&#x6536;&#x5230;&#x4E8B;&#x4EF6;&#x540E;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x5403;&#x6389;&#x5E76;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#x6216;&#x8005;&#x8F6C;&#x53D1;&#x51FA;&#x53BB;&#x4F7F;&#x5F97;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x6536;&#x5230;&#x5B83;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x65B9;&#x5411;&#x952E;&#x6765;&#x9009;&#x62E9;&#x5019;&#x9009;&#xFF0C;&#x8FD9;&#x6837;&#x5728;&#x8F93;&#x5165;&#x671F;&#x95F4;&#xFF0C;&#x65B9;&#x5411;&#x952E;&#x5C31;&#x88AB;&#x8F93;&#x5165;&#x6CD5;&#x5403;&#x6389;&#x4E86;&#x3002;&#x53EF;&#x4EE5;&#x540C;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#x5904;&#x7406;back&#x6309;&#x952E;&#x6765;&#x53D6;&#x6D88;&#x6765;&#x81EA;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5F39;&#x51FA;&#x7A97;&#x53E3;&#x3002; &#x5982;&#x679C;&#x8981;&#x76D1;&#x542C;&#x786C;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x8986;&#x76D6;&#x51FD;&#x6570;onKeyDown()&#x548C;onKeyUp()&#x3002;&#x4F8B;&#x7A0B;SoftKeyboard&#x4E2D;&#x6709;&#x793A;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x4E0D;&#x6253;&#x7B97;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x8BB0;&#x5F97;&#x8C03;&#x7528;super()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x6837;&#x8BE5;&#x4E8B;&#x4EF6;&#x5C31;&#x80FD;&#x88AB;&#x7EE7;&#x7EED;&#x8F6C;&#x53D1;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x521B;&#x5EFA;&#x8F93;&#x5165;&#x6CD5;&#x5B50;&#x7C7B;&#xFF08;Creating an IME Subtype&#xFF09; &#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x5B50;&#x7C7B;&#xFF0C;&#x8F93;&#x5165;&#x6CD5;&#x53EF;&#x4EE5;&#x66B4;&#x9732;&#x591A;&#x79CD;&#x8F93;&#x5165;&#x6A21;&#x5F0F;&#x548C;&#x8BED;&#x8A00;&#xFF0C;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#xFF1A; * &#x4E00;&#x4E2A;&#x8BED;&#x79CD;&#x5982;en_US&#x6216;fr_FR * &#x4E00;&#x79CD;&#x8F93;&#x5165;&#x6A21;&#x5F0F;&#x5982;&#xFF1A;&#x8BED;&#x97F3;&#x3001;&#x952E;&#x76D8;&#x6216;&#x624B;&#x5199; * &#x66F4;&#x591A;&#x7684;&#x8F93;&#x5165;&#x98CE;&#x683C;&#x3001;&#x5F62;&#x5F0F;&#x6216;&#x8005;&#x7279;&#x6027;&#xFF0C;&#x6BD4;&#x5982;10&#x952E;&#x6216;QWERTY&#x952E;&#x76D8;&#x5E03;&#x5C40; &#x901A;&#x5E38;&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x4E32;&#x6765;&#x8868;&#x793A;&#x8FD9;&#x4E9B;&#x6A21;&#x5F0F;&#xFF0C;&#x6BD4;&#x5982;&quot;keyboard&quot;, &quot;voice&quot;&#x7B49;&#x7B49;&#x3002;&#x8F93;&#x5165;&#x5B50;&#x7C7B;&#x53EF;&#x4EE5;&#x662F;&#x8FD9;&#x4E9B;&#x6A21;&#x5F0F;&#x7684;&#x7EC4;&#x5408;&#x3002; &#x5B50;&#x7C7B;&#x4FE1;&#x606F;&#x4F1A;&#x5728;&#x901A;&#x77E5;&#x680F;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x5207;&#x6362;&#x9762;&#x677F;&#x4E2D;&#x88AB;&#x7528;&#x5230;&#xFF0C;&#x4E5F;&#x4F1A;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#x4E0A;&#x88AB;&#x7528;&#x5230;&#x3002;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x4EE4;&#x7CFB;&#x7EDF;&#x6846;&#x67B6;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x63D0;&#x4F9B;&#x6307;&#x5B9A;&#x7684;&#x5B50;&#x7C7B;&#x3002;&#x5728;&#x6784;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#xFF0C;&#x5E94;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#x5B50;&#x7C7B;&#x673A;&#x5236;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6709;&#x52A9;&#x4E8E;&#x8BA9;&#x7528;&#x6237;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x8BED;&#x8A00;&#x548C;&#x6A21;&#x5F0F;&#x4E0B;&#x5B9A;&#x4F4D;&#x548C;&#x5207;&#x6362;&#x3002; &#x53EF;&#x4EE5;&#x5728;&#x8F93;&#x5165;&#x6CD5;XML&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x4F7F;&#x7528;&lt;subtype&gt;&#x5143;&#x7D20;&#x6765;&#x5B9A;&#x4E49;&#x5B50;&#x7C7B;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x7247;&#x6BB5;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A;&#x5B50;&#x7C7B;&#xFF1A;&#x4E00;&#x4E2A;&#x662F;&#x82F1;&#x6587;&#x952E;&#x76D8;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x6CD5;&#x8BED;&#x952E;&#x76D8;&#xFF1A; 12345678910111213141516171819&lt;input-method xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:settingsActivity=&quot;com.example.softkeyboard.Settings&quot; android:icon=&quot;@drawable/ime_icon&quot;&gt; &lt;subtype android:name=&quot;@string/display_name_english_keyboard_ime&quot; android:icon=&quot;@drawable/subtype_icon_english_keyboard_ime&quot; android:imeSubtypeLanguage=&quot;en_US&quot; android:imeSubtypeMode=&quot;keyboard&quot; android:imeSubtypeExtraValue=&quot;somePrivateOption=true&quot; /&gt; &lt;subtype android:name=&quot;@string/display_name_french_keyboard_ime&quot; android:icon=&quot;@drawable/subtype_icon_french_keyboard_ime&quot; android:imeSubtypeLanguage=&quot;fr_FR&quot; android:imeSubtypeMode=&quot;keyboard&quot; android:imeSubtypeExtraValue=&quot;foobar=30,someInternalOption=false&quot; /&gt; &lt;subtype android:name=&quot;@string/display_name_german_keyboard_ime&quot; ... /&gt;&lt;/input-method&gt; &#x4E3A;&#x786E;&#x4FDD;&#x4F60;&#x7684;&#x5B50;&#x7C7B;&#x80FD;&#x5728;&#x754C;&#x9762;&#x4E0A;&#x6B63;&#x786E;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x5E94;&#x4F7F;&#x7528;%s&#x6765;&#x83B7;&#x5F97;&#x5B50;&#x7C7B;&#x5B57;&#x4E32;&#xFF0C;&#x8FD9;&#x6837;&#x83B7;&#x5F97;&#x7684;&#x5B57;&#x4E32;&#x663E;&#x793A;&#x5B50;&#x7C7B;&#x7684;&#x8BED;&#x79CD;&#x6807;&#x7B7E;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x6F14;&#x793A;&#x4E86;&#x8F93;&#x5165;&#x6CD5;XML&#x90E8;&#x5206;&#xFF1A; 12345&lt;subtype android:label=&quot;@string/label_subtype_generic&quot; android:imeSubtypeLocale=&quot;en_US&quot; android:icon=&quot;@drawable/icon_en_us&quot; android:imeSubtypeMode=&quot;keyboard&quot; /&gt; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x8F93;&#x5165;&#x6CD5;&#x7684;string.xml&#x90E8;&#x5206;&#x3002;&#x5B57;&#x4E32;&#x8D44;&#x6E90;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;label_subtype_generic&#xFF0C;&#x7528;&#x4E8E;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x754C;&#x9762;&#x4E2D;&#x663E;&#x793A;&#x5B50;&#x7C7B;&#x6807;&#x7B7E;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 1&lt;string name=&quot;label_subtype_generic&quot;&gt;%s&lt;/string&gt; &#x8BE5;&#x8BBE;&#x7F6E;&#x4F1A;&#x8BA9;&#x8F93;&#x5165;&#x6CD5;&#x663E;&#x793A;&#x7684;&#x5B50;&#x7C7B;&#x540D;&#x79F0;&#x548C;&#x7CFB;&#x7EDF;&#x8BED;&#x79CD;&#x8BBE;&#x7F6E;&#x76F8;&#x5339;&#x914D;&#x3002;&#x4F8B;&#x5982;&#x5BF9;&#x4E8E;&#x82F1;&#x6587;&#x8BED;&#x79CD;&#xFF0C;&#x663E;&#x793A;&#x540D;&#x79F0;&#x4E3A;&quot;English (United States)&quot;&#x3002; &#x4ECE;&#x901A;&#x77E5;&#x680F;&#x9009;&#x62E9;&#x8F93;&#x5165;&#x6CD5;&#x5B50;&#x7C7B;&#xFF08;Choosing IME subtypes from the notification bar&#xFF09; &#x5B89;&#x5353;&#x7CFB;&#x7EDF;&#x4F1A;&#x7BA1;&#x7406;&#x6240;&#x6709;&#x8F93;&#x5165;&#x6CD5;&#x66B4;&#x9732;&#x51FA;&#x6765;&#x7684;&#x6240;&#x6709;&#x5B50;&#x7C7B;&#x3002;&#x6BCF;&#x4E2A;&#x5B50;&#x7C7B;&#x96B6;&#x5C5E;&#x4E8E;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x662F;&#x8BE5;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x4E00;&#x79CD;&#x6A21;&#x5F0F;&#x3002;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5728;&#x901A;&#x77E5;&#x680F;&#x9009;&#x62E9;&#x5F53;&#x524D;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; ## &#x4ECE;&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;&#x4E2D;&#x9009;&#x62E9;&#x8F93;&#x5165;&#x6CD5;&#x5B50;&#x7C7B;&#xFF08;Choosing IME subtypes from System Settings&#xFF09; &#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5728;&#x7CFB;&#x7EDF;&#x7684;&#x201C;&#x8BED;&#x8A00;&#x548C;&#x8F93;&#x5165;&#x6CD5;&#x201D;&#x8BBE;&#x7F6E;&#x9762;&#x677F;&#x4E2D;&#x9009;&#x62E9;&#x5B50;&#x7C7B;&#x3002;&#x5728;&#x4F8B;&#x7A0B;SoftKeyboard&#x4E2D;&#xFF0C;&#x6587;&#x4EF6;InputMethodSettingsFragment.java&#x5B9E;&#x73B0;&#x4E86;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x4E2D;&#x7684;&#x5B50;&#x7C7B;&#x673A;&#x5236;&#x3002;&#x5728;&#x5B89;&#x5353;SDK&#x4E2D;&#x53EF;&#x4EE5;&#x627E;&#x5230;SoftKeyboard&#xFF0C;&#x66F4;&#x591A;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x8BE5;&#x4F8B;&#x7A0B;&#x3002; # &#x5728;&#x8F93;&#x5165;&#x6CD5;&#x5B50;&#x7C7B;&#x4E2D;&#x5207;&#x6362;&#xFF08;Switching among IME Subtypes&#xFF09; &#x5E94;&#x8BE5;&#x5728;&#x952E;&#x76D8;&#x91CC;&#x63D0;&#x4F9B;&#x5B50;&#x7C7B;&#x7684;&#x5207;&#x6362;&#x5165;&#x53E3;&#xFF0C;&#x5982;&#x63D0;&#x4F9B;&#x5C0F;&#x5730;&#x7403;&#x56FE;&#x6807;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x5730;&#x5207;&#x6362;&#x3002;&#x8FD9;&#x4E48;&#x505A;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x952E;&#x76D8;&#x7684;&#x6613;&#x7528;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x7528;&#x6237;&#x907F;&#x514D;&#x56F0;&#x60D1;&#x3002;&#x6309;&#x7167;&#x5982;&#x4E0B;&#x6B65;&#x9AA4;&#x53EF;&#x4EE5;&#x8BA9;&#x8F93;&#x5165;&#x6CD5;&#x957F;&#x51FA;&#x6B64;&#x5F00;&#x5173;&#xFF1A; 1. &#x5728;&#x8F93;&#x5165;&#x6CD5;&#x7684;xml&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;supportsSwitchingToNextInputMethod = &quot;true&quot;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 1234&lt;input-method xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:settingsActivity=&quot;com.example.softkeyboard.Settings&quot; android:icon=&quot;@drawable/ime_icon&quot; android:supportsSwitchingToNextInputMethod=&quot;true&quot;&gt; &#x8C03;&#x7528;&#x51FD;&#x6570;shouldOfferSwitchingToNextInputMethod() &#x5982;&#x679C;&#x8BE5;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;true&#xFF0C;&#x663E;&#x793A;&#x4E00;&#x4E2A;&#x5207;&#x6362;&#x952E; &#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x4E86;&#x5207;&#x6362;&#x952E;&#xFF0C;&#x8C03;&#x7528;switchToNextInputMethod()&#xFF0C;&#x7ED9;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x5165;false&#x3002;false&#x4F1A;&#x5728;&#x4E0D;&#x540C;&#x8F93;&#x5165;&#x6CD5;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#x5404;&#x79CD;&#x5B50;&#x7C7B;&#xFF1B;&#x6307;&#x5B9A;true&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x8F93;&#x5165;&#x6CD5;&#x5185;&#x5207;&#x6362;&#x6240;&#x6709;&#x5B50;&#x7C7B;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5728;Android5.0(API 21)&#x4E4B;&#x524D;&#xFF0C;&#x51FD;&#x6570;switchToNextInputMethod()&#x662F;&#x4E0D;&#x77E5;&#x9053;&#x6709;supportsSwitchingToNextInputMethod &#x5C5E;&#x6027;&#x7684;&#x3002;&#x5982;&#x679C;&#x7528;&#x6237;&#x5207;&#x5165;&#x4E86;&#x67D0;&#x4E2A;&#x4E0D;&#x5E26;&#x5207;&#x6362;&#x952E;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x4ED6;&#x5C06;&#x8FDB;&#x5165;&#x6B7B;&#x80E1;&#x540C;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x80FD;&#x65B9;&#x4FBF;&#x5730;&#x5207;&#x5230;&#x522B;&#x7684;&#x8F93;&#x5165;&#x6CD5;&#x3002; &#x5B9E;&#x73B0;&#x901A;&#x7528;&#x8F93;&#x5165;&#x6CD5;&#x8FD8;&#x9700;&#x8981;&#x8003;&#x8651;&#x4EC0;&#x4E48;&#xFF08;General IME Considerations&#xFF09; &#x8FD9;&#x91CC;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x5B9E;&#x73B0;&#x8F93;&#x5165;&#x6CD5;&#x65F6;&#x9700;&#x8981;&#x8003;&#x8651;&#x7684;&#x5176;&#x5B83;&#x95EE;&#x9898;&#xFF1A; * &#x8981;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x952E;&#x76D8;&#x4E0A;&#x63D0;&#x4F9B;&#x5165;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x5165;&#x8F93;&#x5165;&#x6CD5;&#x8BBE;&#x7F6E;&#x754C;&#x9762; * &#x7531;&#x4E8E;&#x8BBE;&#x5907;&#x91CC;&#x53EF;&#x80FD;&#x540C;&#x65F6;&#x5B89;&#x88C5;&#x4E86;&#x591A;&#x4E2A;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x5E94;&#x8BE5;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x754C;&#x9762;&#x91CC;&#x63D0;&#x4F9B;&#x5207;&#x5230;&#x5176;&#x4ED6;&#x8F93;&#x5165;&#x6CD5;&#x7684;&#x5165;&#x53E3; * &#x5C3D;&#x53EF;&#x80FD;&#x5FEB;&#x5730;&#x5207;&#x51FA;&#x8F93;&#x5165;&#x6CD5;&#x3002;&#x8BA9;&#x8F83;&#x5927;&#x6570;&#x636E;&#x5757;&#x7684;&#x52A0;&#x8F7D;&#x653E;&#x5230;&#x540E;&#x53F0;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x7528;&#x6237;&#x5728;&#x70B9;&#x51FB;&#x53EF;&#x8F93;&#x5165;&#x533A;&#x57DF;&#x540E;&#x7ACB;&#x523B;&#x5C31;&#x80FD;&#x770B;&#x5230;&#x952E;&#x76D8;&#x5207;&#x51FA;&#x3002;&#x5982;&#x679C;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x9891;&#x7E41;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x8D44;&#x6E90;&#xFF0C;&#x5E94;&#x8BE5;&#x628A;&#x5B83;&#x4EEC;&#x7F13;&#x5B58;&#x8D77;&#x6765;&#x3002; * &#x5F53;&#x8F93;&#x5165;&#x6CD5;&#x7A97;&#x53E3;&#x9690;&#x85CF;&#x540E;&#xFF0C;&#x5E94;&#x5F53;&#x5C3D;&#x5FEB;&#x91CA;&#x653E;&#x5927;&#x5757;&#x5185;&#x5B58;&#xFF0C;&#x4EE5;&#x4FBF;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x5185;&#x5B58;&#x53EF;&#x8FD0;&#x884C;&#x3002;&#x5E94;&#x5F53;&#x8003;&#x8651;&#x4F7F;&#x7528;delayed message&#x6765;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#xFF0C;&#x4EE5;&#x4FBF;&#x8F93;&#x5165;&#x6CD5;&#x5904;&#x4E8E;&#x9690;&#x85CF;&#x72B6;&#x6001;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#xFF0C;&#x4E0D;&#x518D;&#x7EE7;&#x7EED;&#x5360;&#x7528;&#x8D44;&#x6E90;&#x3002; * &#x9488;&#x5BF9;&#x5F53;&#x524D;&#x7684;&#x8BED;&#x8A00;&#x548C;&#x8BED;&#x79CD;&#xFF0C;&#x4FDD;&#x8BC1;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x8F93;&#x5165;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x5207;&#x8BB0;&#xFF1A;&#x7528;&#x6237;&#x53EF;&#x80FD;&#x5728;&#x8D26;&#x53F7;&#x6216;&#x5BC6;&#x7801;&#x4E2D;&#x8F93;&#x5165;&#x6807;&#x70B9;&#x7B26;&#x53F7;&#xFF0C;&#x56E0;&#x6B64;&#x8F93;&#x5165;&#x6CD5;&#x5E94;&#x5F53;&#x5728;&#x5BC6;&#x7801;&#x6846;&#x4E2D;&#x7ED9;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x8DB3;&#x591F;&#x591A;&#x7684;&#x5B57;&#x7B26;&#x3002;]]></content>
      <categories>
        <category>Android开发</category>
      </categories>
      <tags>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《未来简史》读书笔记]]></title>
    <url>%2F2017%2F02%2F01%2F2017%2F0201HomoDeus1%2F</url>
    <content type="text"><![CDATA[&#x6625;&#x8282;&#x671F;&#x95F4;&#x5982;&#x9884;&#x671F;&#x5B8C;&#x6210;&#x4E86;&#x4E24;&#x4E2A;&#x8BA1;&#x5212;&#xFF1A;1&#x3001;&#x8BFB;&#x5B8C;&#x4E86;&#x300A;Android&#x7CFB;&#x7EDF;&#x6E90;&#x4EE3;&#x7801;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#x5E76;&#x7ED9;&#x5927;&#x90E8;&#x5206;&#x7AE0;&#x8282;&#x5199;&#x4E86;&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#x5927;&#x90E8;&#x5206;&#x662F;&#x5229;&#x7528;&#x4E86;2016&#x5E74;&#x7684;&#x4E1A;&#x4F59;&#x65F6;&#x95F4;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x6625;&#x8282;&#x53EA;&#x662F;&#x7ED9;&#x4ED6;&#x753B;&#x4E86;&#x4E2A;&#x53E5;&#x53F7;&#x3002;2&#x3001;&#x8BFB;&#x5B8C;&#x4E86;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#xFF0C;&#x8FD9;&#x662F;&#x7528;&#x4E94;&#x5929;&#x7684;&#x65F6;&#x95F4;&#x8BFB;&#x5B8C;&#x7684;&#x3002; &#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x5F88;&#x597D;&#x8BFB;&#xFF0C;&#x601D;&#x8DEF;&#x6E05;&#x6670;&#x3002;&#x4ED6;&#x9996;&#x5148;&#x5206;&#x6790;&#x4E86;&#x73B0;&#x4EE3;&#x4EBA;&#x7C7B;&#x8D4B;&#x4E88;&#x81EA;&#x8EAB;&#x7684;&#x610F;&#x4E49;&#xFF0C;&#x7136;&#x540E;&#x53C8;&#x9010;&#x4E2A;&#x5206;&#x6790;&#x8FD9;&#x4E9B;&#x610F;&#x4E49;&#x5B58;&#x5728;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x8FDB;&#x800C;&#x63A8;&#x5BFC;&#x51FA;&#x5BF9;&#x672A;&#x6765;&#x7684;&#x4E00;&#x79CD;&#x731C;&#x60F3;&#x2014;&#x2014;&#x6240;&#x6709;&#x7684;&#x610F;&#x4E49;&#x7EC8;&#x5C06;&#x70DF;&#x6D88;&#x4E91;&#x6563;&#xFF0C;&#x6570;&#x636E;&#x5C06;&#x6210;&#x4E16;&#x754C;&#x7684;&#x4E3B;&#x5BB0;&#x3002;&#x6709;&#x4E9B;&#x63A8;&#x5BFC;&#x7684;&#x5FC5;&#x7136;&#x6027;&#x503C;&#x5F97;&#x53CD;&#x590D;&#x54C1;&#x5473;&#xFF0C;&#x53CD;&#x6B63;&#x4EC5;&#x51ED;&#x4E00;&#x6B21;&#x9605;&#x8BFB;&#xFF0C;&#x6211;&#x4E5F;&#x6CA1;&#x6709;&#x60F3;&#x660E;&#x767D;&#x3002;&#x5176;&#x4E2D;&#x5F88;&#x591A;&#x601D;&#x8003;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x662F;&#x5F88;&#x6709;&#x610F;&#x601D;&#x7684;&#x3002;&#x8FD9;&#x91CC;&#x968F;&#x4FBF;&#x4E3E;&#x51E0;&#x4E2A;&#x5370;&#x8C61;&#x6DF1;&#x523B;&#x7684;&#x4F8B;&#x5B50;&#x3002; &#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x8BF4;&#x7814;&#x7A76;&#x5386;&#x53F2;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x6323;&#x8131;&#x8FC7;&#x53BB;&#x7684;&#x684E;&#x688F;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x80FD;&#x770B;&#x5411;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x5E76;&#x5F00;&#x59CB;&#x6CE8;&#x610F;&#x5230;&#x524D;&#x4EBA;&#x65E0;&#x6CD5;&#x60F3;&#x8C61;&#x6216;&#x8FC7;&#x53BB;&#x4E0D;&#x5E0C;&#x671B;&#x6211;&#x4EEC;&#x60F3;&#x8C61;&#x5230;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002;&#x8FD9;&#x4E0E;&#x53F8;&#x9A6C;&#x5149;&#x7684;&#x201C;&#x4EE5;&#x53F2;&#x4E3A;&#x9274;&#x201D;&#x6709;&#x4E9B;&#x4E0D;&#x540C;&#x3002;&#x201C;&#x4EE5;&#x53F2;&#x4E3A;&#x9274;&#x201D;&#x662F;&#x628A;&#x5386;&#x53F2;&#x5F53;&#x4F5C;&#x4E00;&#x79CD;&#x6307;&#x5BFC;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x514D;&#x4E8E;&#x8E29;&#x5751;&#x6216;&#x8005;&#x770B;&#x5230;&#x673A;&#x4F1A;&#x3002;&#x6BD4;&#x5982;&#x77E5;&#x9053;&#x201C;&#x53CC;&#x5341;&#x4E00;&#x201D;&#x7684;&#x5386;&#x53F2;&#xFF0C;&#x4F60;&#x77E5;&#x9053;&#x521D;&#x671F;&#x5546;&#x5BB6;&#x4E3A;&#x4E86;&#x8BB2;&#x6545;&#x4E8B;&#x3001;&#x9020;&#x8282;&#x65E5;&#xFF0C;&#x786E;&#x5B9E;&#x4E0B;&#x4E86;&#x672C;&#xFF0C;&#x5F53;&#x5168;&#x6C11;&#x57F9;&#x517B;&#x8D77;&#x201C;&#x53CC;&#x5341;&#x4E00;&#x8840;&#x62FC;&#x201D;&#x7684;&#x4E60;&#x60EF;&#x4EE5;&#x540E;&#xFF0C;&#x964D;&#x4EF7;&#x3001;&#x6253;&#x6298;&#x5C31;&#x6210;&#x4E86;&#x4F20;&#x8BF4;&#xFF0C;&#x8FD9;&#x79CD;&#x597D;&#x4E8B;&#x662F;&#x5F88;&#x96BE;&#x62A2;&#x5230;&#x7684;&#xFF0C;&#x77E5;&#x9053;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x6307;&#x5BFC;&#x4F60;&#x4EE5;&#x540E;&#x53CC;&#x5341;&#x4E00;&#x524D;&#x5929;&#x665A;&#x4E0A;&#x4E0D;&#x5FC5;&#x518D;&#x75F4;&#x75F4;&#x5B88;&#x591C;&#x3002;&#x800C;&#x300A;&#x7B80;&#x53F2;&#x300B;&#x7684;&#x89C2;&#x5FF5;&#x5219;&#x662F;&#x901A;&#x8FC7;&#x957F;&#x7126;&#x955C;&#x5934;&#x770B;&#x5F85;&#x8FD9;&#x6BB5;&#x5386;&#x53F2;&#xFF0C;&#x8BA9;&#x4F60;&#x77E5;&#x9053;&#x201C;&#x53CC;&#x5341;&#x4E00;&#x201D;&#x3001;&#x201C;&#x60C5;&#x4EBA;&#x8282;&#x201D;&#x3001;&#x201C;&#x94BB;&#x77F3;&#x201D;&#x3001;&#x201C;&#x540D;&#x724C;&#x201D;&#x2026;&#x2026;&#x8FD9;&#x4E9B;&#x90FD;&#x53EA;&#x662F;&#x4EBA;&#x9020;&#x6545;&#x4E8B;&#x800C;&#x5DF2;&#xFF0C;&#x5F53;&#x4F60;&#x5BF9;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x75F4;&#x8FF7;&#x800C;&#x65E0;&#x6CD5;&#x81EA;&#x62D4;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ED4;&#x7EC6;&#x60F3;&#x60F3;&#x662F;&#x4E0D;&#x662F;&#x53C8;&#x6DF1;&#x9677;&#x5230;&#x4E86;&#x67D0;&#x4E2A;&#x4EBA;&#x9020;&#x6545;&#x4E8B;&#x91CC;&#x3002;&#x8FD9;&#x7C7B;&#x6545;&#x4E8B;&#x5982;&#x201C;&#x6587;&#x9769;&#x201D;&#x3001;&#x5982;&#x201C;&#x7EB3;&#x7CB9;&#x201D;&#x4E00;&#x6837;&#xFF0C;&#x7ECF;&#x5386;&#x4E5F;&#x8BB8;&#x4E0D;&#x7528;&#x592A;&#x4E45;&#x7684;&#x65F6;&#x95F4;&#x6D17;&#x793C;&#xFF0C;&#x5C31;&#x4F1A;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x53EF;&#x7B11;&#x3002;&#x90A3;&#x4E48;&#x6211;&#x8BE5;&#x5982;&#x4F55;&#x9009;&#x62E9;&#xFF0C;&#x8FD8;&#x5BF9;&#x5BF9;&#x5B83;&#x90A3;&#x4E48;&#x75F4;&#x8FF7;&#x5417;&#xFF1F; &#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x8BF4;&#x667A;&#x4EBA;&#x7EDF;&#x6CBB;&#x4E16;&#x754C;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x667A;&#x4EBA;&#x80FD;&#x7F16;&#x7EC7;&#x51FA;&#x4E92;&#x4E3A;&#x4E3B;&#x4F53;&#x7684;&#x610F;&#x4E49;&#x4E4B;&#x7F51;&#x3002;&#x6211;&#x4EEC;&#x6BCF;&#x4E2A;&#x4EBA;&#xFF0C;&#x6BCF;&#x5206;&#x6BCF;&#x79D2;&#x90FD;&#x6D3B;&#x5728;&#x8FD9;&#x5F20;&#x7F51;&#x91CC;&#x3002;&#x6709;&#x7684;&#x65F6;&#x5019;&#x8FD9;&#x5F20;&#x7F51;&#x5C31;&#x662F;&#x4F60;&#x7684;&#x7262;&#x7B3C;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#x4F60;&#x53C8;&#x8981;&#x4F9D;&#x9760;&#x8FD9;&#x5F20;&#x7F51;&#x7ED9;&#x4F60;&#x8D4B;&#x80FD;&#x3002;&#x6BD4;&#x5982;&#x4F60;&#x7684;&#x5DE5;&#x4F5C;&#x3001;&#x4F60;&#x7684;&#x804C;&#x4F4D;&#x3001;&#x4F60;&#x7684;&#x5BB6;&#x5EAD;&#x3001;&#x4F60;&#x7684;&#x94F6;&#x884C;&#x8D26;&#x6237;&#x7B49;&#x7B49;&#x3002;&#x8282;&#x524D;&#x8DDF;&#x4E00;&#x4F4D;&#x670B;&#x53CB;&#x804A;&#x5929;&#xFF0C;&#x804A;&#x5230;&#x4E86;&#x5047;&#x79BB;&#x5A5A;&#x5356;&#x623F;&#x8FD9;&#x4E8B;&#x513F;&#xFF0C;&#x6211;&#x8FD8;&#x5632;&#x7B11;&#x4ED6;&#x592A;&#x6B7B;&#x8111;&#x7B4B;&#x3002;&#x6211;&#x548C;&#x6211;&#x8001;&#x5A46;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x53EA;&#x6709;&#x6211;&#x4FE9;&#x6700;&#x6E05;&#x695A;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x4E5F;&#x6CA1;&#x6709;&#x4EBA;&#x6709;&#x8D44;&#x683C;&#x88C1;&#x51B3;&#x5B83;&#x3002;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x5229;&#x7528;&#x201C;&#x6709;&#x5173;&#x90E8;&#x95E8;&#x201D;&#x5F00;&#x5177;&#x4E00;&#x5F20;&#x7EB8;&#xFF0C;&#x7528;&#x6765;&#x5411;&#x53E6;&#x5916;&#x4E00;&#x4E9B;&#x201C;&#x6709;&#x5173;&#x90E8;&#x95E8;&#x201D;&#x529E;&#x4E8B;&#x7684;&#x65F6;&#x5019;&#x65B9;&#x4FBF;&#xFF0C;&#x624D;&#x529E;&#x4E86;&#x7ED3;&#x5A5A;&#x8BC1;&#x3002;&#x800C;&#x4E0D;&#x662F;&#x5A5A;&#x59FB;&#x8106;&#x5F31;&#x5230;&#x9700;&#x8981;&#x7528;&#x90A3;&#x5F20;&#x7EB8;&#x6765;&#x4FDD;&#x62A4;&#x548C;&#x8BC1;&#x660E;&#x3002;&#x6709;&#x6CA1;&#x6709;&#x90A3;&#x5F20;&#x7EB8;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x662F;&#x592B;&#x59BB;&#xFF0C;&#x8FD9;&#x5C31;&#x8DDF;&#x6709;&#x6CA1;&#x6709;&#x51FA;&#x751F;&#x8BC1;&#x660E;&#xFF0C;&#x6211;&#x5BB6;&#x95FA;&#x5973;&#x90FD;&#x6765;&#x5230;&#x4E16;&#x4E0A;&#x4E00;&#x6837;&#x3002;&#x9700;&#x8981;&#x6BDB;&#x7684;&#x8BC1;&#x660E;&#xFF01;&#x65E2;&#x7136;&#x8FD9;&#x5F20;&#x7EB8;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x8BA9;&#x529E;&#x4E8B;&#x65B9;&#x4FBF;&#xFF0C;&#x90A3;&#x73B0;&#x5728;&#x6211;&#x8981;&#x4E70;&#x623F;&#xFF0C;&#x8FD9;&#x4E48;&#x6B63;&#x7ECF;&#x7684;&#x4E8B;&#x513F;&#xFF0C;&#x90A3;&#x5F20;&#x7EB8;&#x5F53;&#x7136;&#x8981;&#x4E3A;&#x8FD9;&#x4E8B;&#x513F;&#x5927;&#x5F00;&#x7EFF;&#x706F;&#xFF0C;&#x96BE;&#x5F97;&#x6709;&#x51E0;&#x6B21;&#x7528;&#x5B83;&#x7684;&#x65F6;&#x5019;&#xFF01;&#x5373;&#x4F7F;&#x5982;&#x6B64;&#xFF0C;&#x6211;&#x4F9D;&#x7136;&#x5728;&#x201C;&#x5A5A;&#x59FB;&#x201D;&#x8FD9;&#x5F20;&#x7F51;&#x4E4B;&#x5185;&#xFF0C;&#x201C;&#x5A5A;&#x59FB;&#x201D;&#x4E5F;&#x662F;&#x667A;&#x4EBA;&#x7F16;&#x5236;&#x51FA;&#x7684;&#x610F;&#x4E49;&#x4E4B;&#x7F51;&#xFF0C;&#x4E0D;&#x662F;&#x561B;&#x3002; &#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x8BF4;&#x4EBA;&#x53EA;&#x662F;&#x8089;&#x505A;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x800C;&#x5DF2;&#xFF0C;&#x5176;&#x5185;&#x90E8;&#x8FD0;&#x884C;&#x7684;&#x662F;&#x751F;&#x5316;&#x7B97;&#x6CD5;&#x3002;&#x4F60;&#x611F;&#x89C9;&#x5230;&#x75BC;&#x662F;&#x56E0;&#x4E3A;&#x5927;&#x8111;&#x56DE;&#x8DEF;&#x7684;&#x5F00;&#x5408;&#xFF0C;&#x4F60;&#x611F;&#x89C9;&#x5230;&#x5F00;&#x5FC3;&#x662F;&#x56E0;&#x4E3A;&#x5927;&#x8111;&#x56DE;&#x8DEF;&#x7684;&#x5F00;&#x5408;&#xFF0C;&#x4F60;&#x60F3;&#x5403;&#x996D;&#x662F;&#x56E0;&#x4E3A;&#x5927;&#x8111;&#x56DE;&#x8DEF;&#x7684;&#x5F00;&#x5408;&#xFF0C;&#x4F60;&#x9009;&#x62E9;&#x7279;&#x6717;&#x666E;&#x5F53;&#x603B;&#x7EDF;&#x4F9D;&#x7136;&#x662F;&#x56E0;&#x4E3A;&#x5927;&#x8111;&#x56DE;&#x8DEF;&#x7684;&#x5F00;&#x5408;&#x3002;&#x6240;&#x8C13;&#x7684;&#x201C;&#x4E3B;&#x89C2;&#x610F;&#x8BC6;&#x201D;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x201C;&#x4F60;&#x4EE5;&#x4E3A;&#x201D;&#x4E0D;&#x8FC7;&#x662F;&#x5F53;&#x4E0B;&#x79D1;&#x6280;&#x8FD8;&#x672A;&#x89E6;&#x8FBE;&#x7684;&#x67D0;&#x4E2A;&#x5927;&#x8111;&#x56DE;&#x8DEF;&#x7684;&#x5F00;&#x5408;&#x3002;&#x8FD9;&#x4E0E;&#x9A6C;&#x514B;&#x601D;&#x8BF4;&#x201C;&#x4EBA;&#x7684;&#x672C;&#x8D28;&#x662F;&#x5176;&#x4E00;&#x5207;&#x793E;&#x4F1A;&#x5173;&#x7CFB;&#x7684;&#x603B;&#x548C;&#x201D;&#x76F8;&#x53BB;&#x751A;&#x8FDC;&#xFF0C;&#x201C;&#x4E00;&#x5207;&#x793E;&#x4F1A;&#x5173;&#x7CFB;&#x201D;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x6570;&#x636E;&#x3002;&#x628A;&#x4EBA;&#x7684;&#x672C;&#x8D28;&#x8BF4;&#x6210;&#x201C;&#x5728;&#x5176;&#x8089;&#x4F53;&#x4E4B;&#x4E0A;&#x4E00;&#x5207;&#x7B97;&#x6CD5;&#x7684;&#x603B;&#x548C;&#x201D;&#x5012;&#x66F4;&#x8D34;&#x5207;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x7684;&#x89C2;&#x70B9;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x89C2;&#x70B9;&#x6210;&#x7ACB;&#xFF0C;&#x90A3;&#x771F;&#x5730;&#x7EC6;&#x601D;&#x6781;&#x6050;&#x4E86;&#x3002;&#x5E78;&#x798F;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x4EBA;&#x6D3B;&#x7740;&#x7684;&#x610F;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x4EBA;&#x7C7B;&#x793E;&#x4F1A;&#x53D1;&#x5C55;&#x7684;&#x8109;&#x7EDC;&#x5982;&#x679C;&#x662F;&#x671D;&#x7740;&#x7B97;&#x6CD5;&#x8D8A;&#x6765;&#x8D8A;&#x6709;&#x6548;&#x7387;&#x6F14;&#x8FDB;&#xFF0C;&#x90A3;&#x4E48;&#x5F53;&#x673A;&#x5668;&#x6BD4;&#x8089;&#x4F53;&#x8FD0;&#x7B97;&#x66F4;&#x5FEB;&#x66F4;&#x6709;&#x6548;&#x7387;&#xFF0C;&#x90A3;&#x5757;&#x8089;&#x8FD8;&#x6709;&#x5B58;&#x5728;&#x7684;&#x5FC5;&#x8981;&#x4E48;&#xFF1F; &#x8FD9;&#x4E2A;&#x6625;&#x8282;&#x6CA1;&#x6709;&#x56DE;&#x5BB6;&#xFF0C;&#x6211;&#x5DF2;&#x7ECF;&#x8FDE;&#x7740;&#x4E24;&#x4E2A;&#x5E74;&#x90FD;&#x662F;&#x5F85;&#x5728;&#x5BB6;&#x91CC;&#x4E00;&#x5468;&#x770B;&#x4E66;&#x5B66;&#x4E60;&#xFF0C;&#x6D88;&#x9664;&#x5185;&#x5FC3;&#x5BF9;&#x532E;&#x4E4F;&#x7684;&#x7126;&#x8651;&#x3002;&#x8BFB;&#x4E86;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x4E4B;&#x540E;&#xFF0C;&#x611F;&#x89C9;&#x5185;&#x5FC3;&#x66F4;&#x52A0;&#x8352;&#x51C9;&#x4E86;&#x3002;&#x5C0F;&#x7684;&#x65F6;&#x5019;&#x6B63;&#x6708;&#x5341;&#x4E94;&#x4E4B;&#x524D;&#x96C6;&#x5E02;&#x3001;&#x5546;&#x5E97;&#x90FD;&#x4E0D;&#x5F00;&#x5F20;&#xFF0C;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x4F1A;&#x201C;&#x614C;&#x5E74;&#x201D;&#xFF0C;&#x8D76;&#x5728;&#x8FC7;&#x5E74;&#x4E4B;&#x524D;&#x50A8;&#x5907;&#x8DB3;&#x591F;&#x591A;&#x5403;&#x7684;&#xFF0C;&#x5988;&#x5988;&#x4F1A;&#x5728;&#x5934;&#x4E00;&#x5929;&#x665A;&#x4E0A;&#x7ED9;&#x6211;&#x8D76;&#x505A;&#x597D;&#x65B0;&#x8863;&#x670D;&#xFF0C;&#x5168;&#x5BB6;&#x56F4;&#x5728;&#x4E00;&#x8D77;&#x770B;&#x6625;&#x665A;&#x3002;&#x76F4;&#x5230;&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x5BB6;&#x5B9D;&#x5B9D;&#x8FC7;&#x5E74;&#x90A3;&#x5929;&#x7ED9;&#x5728;&#x8001;&#x5BB6;&#x7684;&#x5988;&#x5988;&#x5FAE;&#x4FE1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x5988;&#x8FD8;&#x95EE;&#x201C;&#x6709;&#x6CA1;&#x6709;&#x65B0;&#x8863;&#x670D;&#x201D;&#x3002;&#x5230;&#x4E86;&#x516C;&#x5143;2017&#x5E74;&#x7684;&#x4ECA;&#x5929;&#xFF0C;&#x8FC7;&#x5E74;&#x8D85;&#x5E02;&#x3001;&#x996D;&#x5E97;&#x4E0D;&#x6253;&#x70CA;&#xFF0C;&#x9700;&#x8981;&#x4EC0;&#x4E48;&#x968F;&#x65F6;&#x53BB;&#xFF1B;&#x4E00;&#x5E74;&#x56DB;&#x5B63;&#x9700;&#x8981;&#x6DFB;&#x8863;&#x670D;&#x4E86;&#x90FD;&#x61D2;&#x5F97;&#x51FA;&#x95E8;&#xFF0C;&#x70B9;&#x70B9;&#x624B;&#x673A;&#x5C31;&#x7ED9;&#x4F60;&#x9001;&#x5230;&#x5BB6;&#xFF1B;&#x7F8E;&#x5267;&#x3001;&#x5927;&#x7247;&#x3001;&#x8D5B;&#x4E8B;&#x6BCF;&#x5929;&#x4E0D;&#x65AD;&#xFF0C;&#x201C;&#x665A;&#x4F1A;&#x201D;&#x5DF2;&#x7ECF;&#x6210;&#x4E86;&#x4E0A;&#x4E00;&#x4E2A;&#x4E16;&#x7EAA;&#x7684;&#x8BCD;&#x6C47;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x751F;&#x6D3B;&#x8D8A;&#x6765;&#x8D8A;&#x6709;&#x6548;&#x7387;&#xFF0C;&#x4E5F;&#x8D8A;&#x6765;&#x8D8A;&#x5E73;&#x6DE1;&#x2014;&#x2014;&#x4EBA;&#x7C7B;&#x6B63;&#x653E;&#x5F03;&#x610F;&#x4E49;&#x800C;&#x6362;&#x53D6;&#x529B;&#x91CF;&#x2014;&#x2014;&#x8FD9;&#x4E5F;&#x662F;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x201C;&#x73B0;&#x4EE3;&#x6027;&#x201D;&#x5951;&#x7EA6;&#x3002; &#x597D;&#x4E0D;&#x5E0C;&#x671B;&#x8FD9;&#x4E2A;&#x9884;&#x8A00;&#x662F;&#x771F;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x8C8C;&#x4F3C;&#x5C31;&#x5728;&#x4E00;&#x70B9;&#x4E00;&#x70B9;&#x5730;&#x53D1;&#x751F;&#x3002;&#x6211;&#x548C;&#x7236;&#x6BCD;&#x4E00;&#x8D77;&#x7ECF;&#x5386;&#x8FC7;&#x90A3;&#x4E9B;&#x610F;&#x4E49;&#xFF0C;&#x597D;&#x6B79;&#x4E00;&#x4E9B;&#x8BED;&#x8A00;&#x3001;&#x884C;&#x4E3A;&#x8FD8;&#x80FD;&#x5FC3;&#x9886;&#x795E;&#x4F1A;&#x3002;&#x7B49;&#x5230;&#x6211;&#x7684;&#x5973;&#x513F;&#x957F;&#x5927;&#xFF0C;&#x4E5F;&#x8BB8;&#x8FC7;&#x5E74;&#x8FDB;&#x4E00;&#x6B65;&#x8715;&#x53D8;&#x6210;&#x4F4D;&#x4E8E;&#x5730;&#x7403;&#x4E24;&#x7AEF;&#x7684;&#x4E24;&#x4E2A;app&#x4E4B;&#x95F4;&#x51E0;&#x79D2;&#x949F;&#x7684;&#x7535;&#x4FE1;&#x53F7;&#x800C;&#x5DF2;&#x2026;&#x2026;&#x54CE;&#xFF0C;&#x4E00;&#x58F0;&#x53F9;&#x606F;&#x3002; &#x4E0D;&#x8FC7;&#x4E5F;&#x6709;&#x597D;&#x6D88;&#x606F;&#x2014;&#x2014;&#x7814;&#x7A76;&#x5386;&#x53F2;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x6323;&#x8131;&#x8FC7;&#x53BB;&#x7684;&#x684E;&#x688F;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x80FD;&#x770B;&#x5411;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5411;&#xFF0C;&#x5E76;&#x5F00;&#x59CB;&#x6CE8;&#x610F;&#x5230;&#x524D;&#x4EBA;&#x65E0;&#x6CD5;&#x60F3;&#x8C61;&#x6216;&#x8FC7;&#x53BB;&#x4E0D;&#x5E0C;&#x671B;&#x6211;&#x4EEC;&#x60F3;&#x8C61;&#x5230;&#x7684;&#x53EF;&#x80FD;&#x6027;:) &#x672A;&#x6765;&#x6211;&#x8981;&#x52AA;&#x529B;&#x7ED9;&#x81EA;&#x5DF1;&#x7684;&#x751F;&#x6D3B;&#x8425;&#x9020;&#x51FA;&#x610F;&#x4E49;&#xFF0C;&#x7ED9;&#x81EA;&#x5DF1;&#x4E5F;&#x7ED9;&#x6211;&#x7684;&#x5BB6;&#x4EBA;&#x3002;&#x56E0;&#x4E3A;&#x8FC7;&#x5F80;&#x7684;&#x5E78;&#x798F;&#x611F;&#x6765;&#x81EA;&#x610F;&#x4E49;&#xFF0C;&#x6765;&#x81EA;&#x6545;&#x4E8B;&#x3002;&#x867D;&#x7136;&#x8FD9;&#x4E2A;&#x60F3;&#x6CD5;&#x8FDC;&#x6CA1;&#x6709;&#x8FBE;&#x5230;&#x6323;&#x8131;&#x684E;&#x688F;&#x7684;&#x5883;&#x754C;&#xFF0C;&#x4F46;&#x6211;&#x8BA4;&#x4E3A;&#x80FD;&#x591F;&#x770B;&#x5230;&#x5386;&#x53F2;&#xFF0C;&#x80FD;&#x591F;&#x7406;&#x89E3;&#x672A;&#x6765;&#x7684;&#x53D1;&#x5C55;&#x8109;&#x7EDC;&#xFF0C;&#x81F3;&#x5C11;&#x5C31;&#x5DF2;&#x7ECF;&#x4E0D;&#x662F;&#x68A6;&#x4E2D;&#x4EBA;&#xFF0C;&#x80FD;&#x8BA9;&#x81EA;&#x5DF1;&#x601D;&#x8003;&#x5982;&#x4F55;&#x6253;&#x7834;&#x684E;&#x688F;&#xFF0C;&#x8FD9;&#x662F;&#x8BFB;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x7684;&#x6536;&#x83B7;&#x3002; 2017&#x6211;&#x8FD8;&#x4F1A;&#x53CD;&#x590D;&#x8BFB;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x8FD9;&#x672C;&#x4E66;&#xFF0C;&#x5E76;&#x628A;&#x7EC6;&#x54C1;&#x51FA;&#x7684;&#x5473;&#x9053;&#x5199;&#x6210;&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;&#x3002;&#x684C;&#x4E0A;&#x8FD8;&#x6709;&#x4E24;&#x672C;&#x521A;&#x5230;&#x7684;&#x300A;&#x738B;&#x9633;&#x660E;&#x2014;&#x2014;&#x4E00;&#x5207;&#x5FC3;&#x6CD5;&#x300B;&#x6211;&#x9690;&#x7EA6;&#x611F;&#x53D7;&#x5B83;&#x548C;&#x300A;&#x672A;&#x6765;&#x7B80;&#x53F2;&#x300B;&#x4E4B;&#x95F4;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x5173;&#x8054;&#x7684;&#x3002;2017&#x60DF;&#x613F;&#x81EA;&#x5DF1;&#x81EA;&#x7531;&#xFF01;]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>未来简史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[消息循环几个常用类]]></title>
    <url>%2F2017%2F01%2F31%2F2017%2F0131MessageQueue5%2F</url>
    <content type="text"><![CDATA[&#x5E26;&#x6709;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5B50;&#x7EBF;&#x7A0B; HandlerThread &#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A; 1234567891011121314// &#x5B9A;&#x4E49;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;public class WorkThread extends Thread{ public WorkThread(String name){ super(name); } public void run(){ // work... }}// &#x4F7F;&#x7528;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;WorkThread workThread = new WorkThread(&quot;Work Thread&quot;);workThread.start(); &#x8FD9;&#x79CD;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x9002;&#x5408;&#x9ED8;&#x9ED8;&#x65E0;&#x95FB;&#x5728;&#x540E;&#x53F0;&#x5E72;&#x6D3B;&#xFF0C;&#x5F53;&#x9700;&#x8981;&#x548C;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x6709;&#x5173;&#x8054;&#x6216;&#x4EA4;&#x4E92;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x9002;&#x5408;&#x7528;&#x4E00;&#x4E2A;&#x914D;&#x5907;&#x4E86;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x6765;&#x5904;&#x7406;&#x4E86;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;HandlerThread&#x7684;&#x7528;&#x6B66;&#x4E4B;&#x5730;&#x3002; &#x5047;&#x8BBE;&#x6709;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x4E0D;&#x65AD;&#x4EA7;&#x751F;&#x6570;&#x636E;&#xFF1B;&#x524D;&#x53F0;UI&#x4E5F;&#x53EF;&#x4EE5;&#x4EA7;&#x751F;&#x6570;&#x636E;&#xFF1B;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x90FD;&#x9700;&#x8981;&#x4FDD;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;HandlerThread&#x6765;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; * WorkThread&#x4E2D;&#x6BCF;&#x9694;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4EA7;&#x751F;&#x4E00;&#x6761;&#x6570;&#x636E;&#xFF0C;&#x4E4B;&#x540E;&#x6253;&#x5370;&#x6570;&#x636E;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x901A;&#x77E5;DataThread&#x4FDD;&#x5B58;&#x3002; * MainThread&#x4E2D;&#x6BCF;&#x6B21;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x6761;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x901A;&#x77E5;DataThread&#x4FDD;&#x5B58;&#x3002; * DataThread&#x4E2D;&#x6536;&#x5230;&#x4FDD;&#x5B58;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x5148;Sleep&#x7247;&#x523B;&#x8868;&#x793A;&#x6B63;&#x5728;&#x4FDD;&#x5B58;&#xFF0C;&#x4E4B;&#x540E;&#x6253;&#x5370;&#x4FDD;&#x5B58;&#x4FE1;&#x606F;&#x3002; &#x521B;&#x5EFA;DataThread &#x521B;&#x5EFA;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#x4E0E;&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x6CA1;&#x6709;&#x5DEE;&#x522B;&#xFF0C;&#x53EA;&#x662F;&#x9700;&#x8981;&#x62FF;&#x5230;&#x5176;Handler&#x4EE5;&#x5907;&#x540E;&#x9762;&#x5411;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF1A; 123456// &#x521B;&#x5EFA;&#x6570;&#x636E;&#x7EBF;&#x7A0B;mDataThread = new HandlerThread(&quot;Data Thread&quot;);mDataThread.start();// &#x4FDD;&#x5B58;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#x7684;HandlermDataThreadHandler = new Handler(mDataThread.getLooper());... &#x5411;DataThread&#x53D1;&#x9001;&#x6D88;&#x606F; &#x5728;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x6BCF;&#x5B8C;&#x6210;&#x4E00;&#x9879;&#x5DE5;&#x4F5C;&#x540E;&#x5411;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF1A; 123456789101112131415161718192021public class WorkThread extends Thread{ private int mWorkNum; public WorkThread(String name){ super(name); } public void run(){ int tid = android.os.Process.myTid(); for (; mWorkNum&lt;10; mWorkNum++){ try { Thread.sleep(1000); // &#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x5B8C;&#x6210;&#x6BCF;&#x6B21;&#x5DE5;&#x4F5C; } catch (InterruptedException e) { e.printStackTrace(); } System.out.printf(&quot;[Work Thread %d] Complete Work %d.\n&quot;, tid, mWorkNum); // &#x5411;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;&#x6D88;&#x606F; mDataThreadHandler.post(new DataTask(mWorkNum, true)); } }} &#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x6BCF;&#x6309;&#x4E00;&#x6B21;&#x6309;&#x94AE;&#x4E5F;&#x4EA7;&#x751F;&#x4E00;&#x6B21;&#x6570;&#x636E;&#x8BF7;&#x6C42;&#xFF0C;&#x53D1;&#x9001;&#x7ED9;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#xFF1A; 123456789mManualWorkNum = 0;final Button clickMeButton = (Button)findViewById(R.id.ManualWorkButton);clickMeButton.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View view) { mManualWorkNum++; mDataThreadHandler.post(new DataTask(mManualWorkNum, false)); } }); &#x5C01;&#x88C5;&#x6210;&#x6D88;&#x606F;&#x7684;&#x6570;&#x636E;&#x8BF7;&#x6C42; &#x65E0;&#x8BBA;&#x662F;&#x624B;&#x52A8;&#x8FD8;&#x662F;&#x81EA;&#x52A8;&#x6570;&#x636E;&#x8BF7;&#x6C42;&#xFF0C;&#x90FD;&#x662F;&#x628A;DataTask&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x6761;&#x6D88;&#x606F;&#xFF0C;post&#x7ED9;DataThread&#x3002; DataTask&#x5B9E;&#x73B0;&#x4E86;Runnable&#x63A5;&#x53E3;&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E2D;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF1A; 123456789101112131415161718192021// &#x5B9A;&#x4E49;&#x5728;&#x6570;&#x636E;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684;&#x5DE5;&#x4F5C;&#x4EFB;&#x52A1;public class DataTask implements Runnable{ private int mWorkNum; private boolean mAutoWork = true; // &#x624B;&#x52A8;&#x8FD8;&#x662F;&#x81EA;&#x52A8; public DataTask(int workNum, boolean autoWork){ mWorkNum = workNum; mAutoWork = autoWork; } public void run(){ int tid = android.os.Process.myTid(); try { Thread.sleep(2000); // &#x5047;&#x8BBE;&#x9700;&#x8981;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4FDD;&#x5B58;&#x6570;&#x636E; } catch (InterruptedException e) { e.printStackTrace(); } if(mAutoWork) System.out.printf(&quot;[Data Thread %d] Save auto work %d\n&quot;, tid, mWorkNum); else System.out.printf(&quot;[Data Thread %d] Save manual work %d\n&quot;, tid, mWorkNum); }} &#x5728;&#x5B83;&#x7684;run()&#x51FD;&#x6570;&#x91CC;&#xFF0C;&#x6BCF;&#x6B21;&#x5B8C;&#x6210;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#xFF0C;&#x90FD;&#x628A;&#x5F53;&#x524D;&#x7684;&#x7EBF;&#x7A0B;id&#x6253;&#x5370;&#x51FA;&#x6765;&#x3002;&#x4ECE;log&#x4E2D;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF1A;&#x4E0D;&#x7BA1;&#x662F;&#x4ECE;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x8FD8;&#x662F;&#x4ECE;&#x4E3B;&#x7EBF;&#x7A0B;&#x53D1;&#x8D77;&#x7684;post&#xFF0C;&#x5728;&#x4FDD;&#x5B58;&#x5B8C;&#x6210;&#x540E;&#x6253;&#x5370;&#x7684;&#x7EBF;&#x7A0B;id&#x90FD;&#x662F;DataThread&#x7684;tid&#x3002; &#x53EF;&#x66F4;&#x65B0;&#x4E3B;&#x7EBF;&#x7A0B;UI&#x7684;&#x5B50;&#x7EBF;&#x7A0B; AsyncTask Step0 &#x5B9A;&#x4E49;&#x548C;&#x542F;&#x52A8;AsyncTask 1234567891011121314151617181920212223242526272829303132333435363738394041// &#x5B9A;&#x4E49;AsyncTask&#xFF0C;// public abstract class AsyncTask&lt;Params, Progress, Result&gt; &#x4E09;&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#xFF1A;// Params&#xFF1A; doInBackground&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;// Progress&#xFF1A;AsyncTask&#x6240;&#x6267;&#x884C;&#x7684;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x7684;&#x8FDB;&#x5EA6;&#x7C7B;&#x578B;// Result&#xFF1A; &#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x7684;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x7C7B;&#x578B;AsyncTask&lt;Integer, Integer, Integer&gt; task = new AsyncTask&lt;Integer, Integer, Integer&gt;() { @Override protected Integer doInBackground(Integer... integers) { Integer asyncTaskNum = integers[0]; int tid = android.os.Process.myTid(); for(; asyncTaskNum&lt;10; asyncTaskNum++){ try { Thread.sleep(1000); System.out.printf(&quot;[Async Task Thread %d] Complete async task%d.\n&quot;, tid, asyncTaskNum); } catch (InterruptedException e) { e.printStackTrace(); } publishProgress(asyncTaskNum); } return asyncTaskNum; } protected void updateAsyncTextInfo(Integer val){ TextView tv = (TextView)findViewById(R.id.aysncTextInfo); int tid = android.os.Process.myTid(); tv.setText(&quot;Completed &quot; + val + &quot; async tasks.(tid=&quot; + tid + &quot;)&quot;); } @Override protected void onProgressUpdate(Integer... integers){ super.onProgressUpdate(integers); updateAsyncTextInfo(integers[0]); } @Override protected void onPostExecute(Integer integer){ updateAsyncTextInfo(integer); }};// &#x542F;&#x52A8;task.execute(0);... &#x4ECE;demo&#x4E2D;&#x7684;log&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x51FD;&#x6570;doInBackground(...)&#x662F;&#x7531;AsyncTask&#x5728;&#x5185;&#x90E8;&#x7EBF;&#x7A0B;&#x6C60;&#x6267;&#x884C;&#xFF0C;&#x5176;&#x4F59;&#x65B9;&#x6CD5;&#x5747;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x3002; AsyncTask&#x4E3B;&#x8981;&#x63D0;&#x4F9B;&#x4E86;&#x5982;&#x4E0B;&#x65B9;&#x6CD5;&#xFF1A; * onPreExecute() &#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x524D;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x7528;&#x4E8E;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x51C6;&#x5907;&#x5DE5;&#x4F5C; * doInBackground(Params... params) &#x5B9A;&#x4E49;&#x8981;&#x6267;&#x884C;&#x7684;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4E2D;&#x53EF;&#x4EE5;&#x8C03;&#x7528;publishProgress&#x6765;&#x66F4;&#x65B0;&#x4EFB;&#x52A1;&#x8FDB;&#x5EA6;&#xFF08;publishProgress&#x5185;&#x90E8;&#x4F1A;&#x8C03;&#x7528;onProgressUpdate&#x65B9;&#x6CD5;&#xFF09; * onProgressUpdate(Progress... values) &#x7531;publishProgress&#x5185;&#x90E8;&#x8C03;&#x7528;&#xFF0C;&#x8868;&#x793A;&#x4EFB;&#x52A1;&#x8FDB;&#x5EA6;&#x66F4;&#x65B0; * onPostExecute(Result result) &#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x540E;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x53C2;&#x6570;&#x5373;&#x4E3A;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x7684;&#x8FD4;&#x56DE;&#x7ED3;&#x679C; * onCancelled() &#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x88AB;&#x53D6;&#x6D88;&#x65F6;&#x88AB;&#x8C03;&#x7528; &#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x4ECE;&#x51FD;&#x6570;doInBackground(...)&#x4E2D;&#x8FD4;&#x56DE;&#xFF0C;&#x5E76;&#x5C06;&#x5B83;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5206;&#x53D1;&#x7ED9;&#x51FD;&#x6570;onPostExecute(...)&#x5904;&#x7406;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6DF1;&#x5165;&#x5230;AsyncTask&#x5185;&#x90E8;&#x6765;&#x770B;&#x5B83;&#x7684;&#x5B9E;&#x73B0;&#x3002; Step1 AsyncTask&#x7684;&#x521B;&#x5EFA;AsyncTask() 12345678910111213141516171819202122232425262728293031323334// frameworks/base/core/java/android/os/AsyncTask.java:180public abstract class AsyncTask&lt;Params, Progress, Result&gt; {...//:288 public AsyncTask() { // mWorker&#x548C;mFuture&#x5171;&#x540C;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x5373;&#x5C06;&#x8981;&#x6267;&#x884C;&#x7684;&#x5DE5;&#x4F5C;&#x4EFB;&#x52A1; mWorker = new WorkerRunnable&lt;Params, Result&gt;() { public Result call() throws Exception { mTaskInvoked.set(true); // &#x8868;&#x793A;&#x4EFB;&#x52A1;&#x5DF2;&#x7ECF;&#x88AB;&#x8C03;&#x7528;&#x8FC7; Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND); //noinspection unchecked Result result = doInBackground(mParams); // &#x6267;&#x884C;&#x540E;&#x53F0;&#x4EFB;&#x52A1; Binder.flushPendingCommands(); // &#x4ECE;&#x51FD;&#x6570;&#x540D;&#x4E0A;&#x53EF;&#x4EE5;&#x5224;&#x65AD;postResult(...)&#x7684;&#x6267;&#x884C;&#x5E76;&#x4E0D;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C; // &#x800C;&#x5E94;&#x8BE5;&#x662F;&#x5C01;&#x88C5;&#x6210;&#x6D88;&#x606F;&#x6254;&#x7ED9;&#x4E86;&#x4E3B;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x5237;&#x65B0;UI return postResult(result); } }; mFuture = new FutureTask&lt;Result&gt;(mWorker) { @Override protected void done() { try { postResultIfNotInvoked(get()); } catch (InterruptedException e) ... } }; }//:677 private static abstract class WorkerRunnable&lt;Params, Result&gt; implements Callable&lt;Result&gt; { Params[] mParams; } &#x6784;&#x9020;&#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#x4E86;&#x4E24;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002;mWorker&#x6D3E;&#x751F;&#x81EA;WorkerRunnable&#xFF0C;&#x540E;&#x8005;&#x5B9E;&#x73B0;&#x4E86;&#x63A5;&#x53E3;Callable&#xFF0C;&#x8BE5;&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 12345// libcore/luni/src/main/java/java/util/concurrent/Callable.java:28public interface Callable&lt;V&gt; { ... V call() throws Exception;} &#x56E0;&#x6B64;mWorker&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x5B9A;&#x4E86;&#x53C2;&#x6570;&#x3001;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;&#x4E86;call&#x63A5;&#x53E3;&#x7684;Callable&#x5BF9;&#x8C61;&#xFF0C;&#x5728;mWorker.call()&#x4E2D;&#x6267;&#x884C;&#x4E86;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x7684;&#x6838;&#x5FC3;&#x5904;&#x7406;&#x903B;&#x8F91;&#x3002; mFuture&#x6D3E;&#x751F;&#x81EA;FutureTask&#xFF0C; 12345678910// libcore/luni/src/main/java/java/util/concurrent/FutureTask.java:35public class FutureTask&lt;V&gt; implements RunnableFuture&lt;V&gt; {...//:123 public FutureTask(Callable&lt;V&gt; callable) { if (callable == null) throw new NullPointerException(); this.callable = callable; this.state = NEW; // ensure visibility of callable } &#x662F;&#x5BF9;mWorker&#x7684;&#x8FDB;&#x4E00;&#x6B65;&#x5C01;&#x88C5;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x5730;&#x53D6;&#x6D88;&#x4EFB;&#x52A1;&#x4EE5;&#x53CA;&#x83B7;&#x53D6;&#x4EFB;&#x52A1;&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF0C;&#x4E3B;&#x5E72;&#x903B;&#x8F91;&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x7528;mFuture.call()&#x5230;&#x8FBE;mWorker.call()&#x3002;&#x90A3;&#x4E48;mFuture.call()&#x662F;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x5462;&#xFF1F;&#x63A5;&#x4E0B;&#x6765;&#x770B;&#x6267;&#x884C;&#x7684;&#x5BFC;&#x706B;&#x7D22;AsyncTask::execute(...)&#x3002; ## Step2 AsyncTask&#x7684;&#x6267;&#x884C;execute(...) 1234// frameworks/base/core/java/android/os/AsyncTask.java:550public final AsyncTask&lt;Params, Progress, Result&gt; execute(Params... params) { return executeOnExecutor(sDefaultExecutor, params); // &#x1F3C1;} &#x53C2;&#x6570;params&#x6B63;&#x662F;&#x5728;Step0&#x4E2D;AsyncTask&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x521D;&#x59CB;&#x6570;&#x636E;&#x3002; ## Step3 AsyncTask::executeOnExecutor(...) 1234567891011121314151617181920212223242526// frameworks/base/core/java/android/os/AsyncTask.java:588public final AsyncTask&lt;Params, Progress, Result&gt; executeOnExecutor(Executor exec, Params... params) { // exec = sDefaultExecutor // &#x53EF;&#x89C1;&#xFF0C;&#x4E0D;&#x80FD;&#x91CD;&#x590D;&#x6267;&#x884C;&#x201C;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x201D;&#x548C;&#x201C;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x201D;&#x7684;AsyncTask&#x4EFB;&#x52A1;&#xFF0C;&#x5373;&#x53EA;&#x80FD;&#x88AB;&#x6267;&#x884C;&#x4E00;&#x6B21; if (mStatus != Status.PENDING) { switch (mStatus) { case RUNNING: throw new IllegalStateException(&quot;Cannot execute task:&quot; + &quot; the task is already running.&quot;); case FINISHED: throw new IllegalStateException(&quot;Cannot execute task:&quot; + &quot; the task has already been executed &quot; + &quot;(a task can be executed only once)&quot;); } } mStatus = Status.RUNNING; onPreExecute(); // &#x7531;&#x6B64;&#x53EF;&#x89C1;onPreExecute()&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C; mWorker.mParams = params; exec.execute(mFuture); // &#x1F3C1; return this;} exec&#x662F;sDefaultExecutor&#xFF0C;&#x8FFD;&#x6EAF;&#x5176;&#x6765;&#x6E90;&#xFF1A; 123456// frameworks/base/core/java/android/os/AsyncTask.java:180public abstract class AsyncTask&lt;Params, Progress, Result&gt; {... public static final Executor SERIAL_EXECUTOR = new SerialExecutor(); ... private static volatile Executor sDefaultExecutor = SERIAL_EXECUTOR; &#x7C7B;&#x578B;&#x4E3A;SerialExecutor&#xFF0C;&#x6765;&#x770B;&#x5B83;&#x7684;&#x5B9A;&#x4E49;&#xFF1A; ## Step4 SerialExecutor 12345678910111213141516171819202122232425// frameworks/base/core/java/android/os/AsyncTask.java:226 private static class SerialExecutor implements Executor { // &#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x4EFB;&#x52A1;&#x7F13;&#x5B58;&#x961F;&#x5217; final ArrayDeque&lt;Runnable&gt; mTasks = new ArrayDeque&lt;Runnable&gt;(); Runnable mActive; public synchronized void execute(final Runnable r) { mTasks.offer(new Runnable() { // &#x5411;mTasks&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1; public void run() { try { r.run(); } finally { scheduleNext(); } } }); if (mActive == null) { // &#x9996;&#x6B21;&#x6267;&#x884C;&#x4E3A;&#x771F; scheduleNext(); } } protected synchronized void scheduleNext() { if ((mActive = mTasks.poll()) != null) { THREAD_POOL_EXECUTOR.execute(mActive); } } } &#x5728;Step3&#x4E2D;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x5B83;&#x7684;execute(...)&#x51FD;&#x6570;&#xFF0C;&#x628A;&#x540E;&#x53F0;&#x4EFB;&#x52A1;mFuture&#x6DFB;&#x52A0;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;&#x4EFB;&#x52A1;&#x7F13;&#x5B58;&#x961F;&#x5217;SerialExecutor::mTasks&#x4E2D;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x597D;&#x4E86;&#x201C;&#x542F;&#x52A8;&#x6309;&#x94AE;&#x201D;run()&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x8C03;&#x7528;mFuture.run()&#xFF0C;&#x540E;&#x8005;&#x518D;&#x8C03;&#x7528;mWorker.call()&#x3002;&#x90A3;&#x4E48;&#x8C01;&#x6765;&#x8D1F;&#x8D23;&#x6309;&#x4E0B;&#x8FD9;&#x4E2A;&#x201C;&#x542F;&#x52A8;&#x6309;&#x94AE;&#x201D;&#x5462;&#xFF1F;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;&#x3002; SerialExecutor&#x6709;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;mActive&#x8868;&#x793A;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x4E3A;&#x7A7A;&#xFF0C;&#x4E8E;&#x662F;&#x6267;&#x884C;scheduleNext()&#xFF0C;&#x5176;&#x5185;&#x90E8;&#x53D6;&#x51FA;mTasks&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x5373;mFuture&#xFF0C;&#x5C14;&#x540E;&#x7EE7;&#x7EED;&#x6267;&#x884C;execute(...)&#x51FD;&#x6570;&#x3002;THREAD_POOL_EXECUTOR&#x662F;&#x4EC0;&#x4E48;&#xFF1F; Step5 THREAD_POOL_EXECUTOR 1234567891011121314151617181920212223242526272829// frameworks/base/core/java/android/os/AsyncTask.java:180public abstract class AsyncTask&lt;Params, Progress, Result&gt; {... private static final int CPU_COUNT = Runtime.getRuntime().availableProcessors(); private static final int CORE_POOL_SIZE = CPU_COUNT + 1; private static final int MAXIMUM_POOL_SIZE = CPU_COUNT * 2 + 1; private static final int KEEP_ALIVE = 1; // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5DE5;&#x5382;&#x7C7B;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x51FA;&#x6765;&#x7684;&#x7EBF;&#x7A0B;&#x7528;&#x4E8E;&#x6267;&#x884C;sPoolWorkQueue&#x4E2D;&#x7684;&#x4EFB;&#x52A1; private static final ThreadFactory sThreadFactory = new ThreadFactory() { private final AtomicInteger mCount = new AtomicInteger(1); public Thread newThread(Runnable r) { return new Thread(r, &quot;AsyncTask #&quot; + mCount.getAndIncrement()); } }; // &#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x5747;&#x4E3A;&#x5B9E;&#x73B0;&#x4E86;Runnable&#x63A5;&#x53E3;&#x7684;&#x4EFB;&#x52A1; // &#x8BE5;&#x961F;&#x5217;&#x6709;&#x4E24;&#x4E2A;&#x6027;&#x8D28;&#xFF1A;1&#x3001;&#x4ECE;&#x7A7A;&#x961F;&#x5217;&#x4E2D;&#x53D6;&#x51FA;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5C06;&#x5BFC;&#x81F4;&#x963B;&#x585E;&#x77E5;&#x9053;&#x6709;&#x65B0;&#x4EFB;&#x52A1;&#x6DFB;&#x52A0;&#x8FDB;&#x6765;&#xFF1B; // 2&#x3001;&#x5411;&#x6EE1;&#x7684;&#x961F;&#x5217;&#x4E2D;&#x6DFB;&#x52A0;&#x65B0;&#x4EFB;&#x52A1;&#x540C;&#x6837;&#x5BFC;&#x81F4;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x961F;&#x5217;&#x817E;&#x51FA;&#x65B0;&#x7684;&#x7A7A;&#x95F2;&#x4F4D;&#x7F6E;&#x4E3A;&#x6B62;&#x3002; private static final BlockingQueue&lt;Runnable&gt; sPoolWorkQueue = new LinkedBlockingQueue&lt;Runnable&gt;(128); ...// :202 // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#x5BF9;&#x8C61; public static final Executor THREAD_POOL_EXECUTOR = new ThreadPoolExecutor(CORE_POOL_SIZE, MAXIMUM_POOL_SIZE, KEEP_ALIVE, TimeUnit.SECONDS, sPoolWorkQueue, sThreadFactory); THREAD_POOL_EXECUTOR&#x662F;&#x6839;&#x636E;CPU&#x4E2A;&#x6570;&#x521B;&#x5EFA;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x5BF9;&#x8C61;&#xFF0C;&#x4F5C;&#x4E3A;AsyncTask&#x7684;&#x5E95;&#x5C42;&#x6267;&#x884C;&#x5F15;&#x64CE;&#x3002;&#x4E4D;&#x4E00;&#x770B;AsyncTask&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x4EFB;&#x52A1;mFuture&#xFF0C;&#x800C;&#x4E14;&#x6BCF;&#x4E2A;AsyncTask&#x4EC5;&#x80FD;&#x8C03;&#x7528;&#x4E00;&#x6B21;execute(...)&#x51FD;&#x6570;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#x6765;&#x4E3A;&#x4E4B;&#x670D;&#x52A1;&#x5462;&#xFF1F;&#x539F;&#x56E0;&#x5F88;&#x7B80;&#x5355;&#xFF0C;AsyncTask&#x7684;&#x5E95;&#x5C42;&#x6267;&#x884C;&#x5F15;&#x64CE;sDefaultExecutor&#x662F;&#x9759;&#x6001;&#x6210;&#x5458;&#xFF0C;&#x4E0A;&#x5C42;&#x6709;&#x53EF;&#x80FD;&#x521B;&#x5EFA;&#x591A;&#x4E2A;AsyncTask&#x5BF9;&#x8C61;&#xFF0C;&#x4E0D;&#x7BA1;&#x521B;&#x5EFA;&#x4E86;&#x591A;&#x5C11;&#x4E2A;&#xFF0C;&#x5230;&#x4E86;&#x5E95;&#x5C42;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5F15;&#x64CE;&#xFF0C;&#x5177;&#x4F53;&#x6267;&#x884C;&#x7B56;&#x7565;&#x8DDF;&#x591A;&#x5C11;&#x4E2A;&#x4EFB;&#x52A1;&#x65E0;&#x5173;&#xFF0C;&#x800C;&#x662F;&#x6839;&#x636E;CPU&#x4E2A;&#x6570;&#x800C;&#x5B9A;&#xFF0C;&#x8FD9;&#x4E2A;&#x8BBE;&#x8BA1;&#x5F88;&#x68D2;&#xFF01; Step6 AsyncTask::postResult(...) 123456789101112131415161718// frameworks/base/core/java/android/os/AsyncTask.java:325 private static Handler getHandler() { synchronized (AsyncTask.class) { if (sHandler == null) { sHandler = new InternalHandler(); } return sHandler; } }// :325 private Result postResult(Result result) { @SuppressWarnings(&quot;unchecked&quot;) Message message = getHandler().obtainMessage(MESSAGE_POST_RESULT, new AsyncTaskResult&lt;Result&gt;(this, result)); message.sendToTarget(); return result; } getHandler()&#x8FD4;&#x56DE;sHandler&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x5B83;&#x53D1;&#x9001;&#x4E00;&#x4E2A;MESSAGE_POST_RESULT&#x6D88;&#x606F;&#xFF0C;sHandler&#x53C8;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; Step 7 AsyncTask::sHandler 1234567891011121314151617181920212223// frameworks/base/core/java/android/os/AsyncTask.java:216private static InternalHandler sHandler;// :656 private static class InternalHandler extends Handler { public InternalHandler() { super(Looper.getMainLooper()); // &#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x4F20;&#x5165;&#x7684;&#x662F;&#x4E3B;&#x7EBF;&#x7A0B;&#x7684;Looper } @SuppressWarnings({&quot;unchecked&quot;, &quot;RawUseOfParameterizedType&quot;}) @Override public void handleMessage(Message msg) { AsyncTaskResult&lt;?&gt; result = (AsyncTaskResult&lt;?&gt;) msg.obj; switch (msg.what) { case MESSAGE_POST_RESULT: // There is only one result result.mTask.finish(result.mData[0]); break; case MESSAGE_POST_PROGRESS: result.mTask.onProgressUpdate(result.mData); break; } } } InternalHandler&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;&#x7684;&#x662F;&#x4E3B;&#x7EBF;&#x7A0B;&#x7684;Looper&#xFF0C;&#x7531;&#x6B64;&#x786E;&#x4FDD;&#x4E86;&#x5176;&#x6D88;&#x606F;&#x5904;&#x7406;&#x51FD;&#x6570;handleMessage(...)&#x4E5F;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7684;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x5370;&#x8BC1;&#x4E86;&#x5728;Step1&#x4E2D;&#x7684;&#x731C;&#x6D4B;&#xFF1A;&#x7684;&#x786E;&#x662F;&#x628A;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x5C01;&#x88C5;&#x6210;&#x4E86;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x7ED9;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002; ## &#x603B;&#x7ED3; &#x5F53;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x518D;&#x770B;AsyncTask&#x7684;&#x8BBE;&#x8BA1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x7531;&#x5F97;&#x611F;&#x53F9;&#xFF1A;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x8BBE;&#x8BA1;&#x5F97;&#x591F;&#x7CBE;&#x5999;&#xFF01;&#x5B83;&#x6709;&#x4E09;&#x5C42;&#x7ED3;&#x6784;&#xFF1A;&#x4E00;&#x3001;&#x6700;&#x4E0A;&#x5C42;&#x662F;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x8C03;&#x7528;&#xFF0C;&#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x4E1A;&#x52A1;&#x5C42;&#x903B;&#x8F91;&#xFF1B;&#x4E8C;&#x3001;&#x4E2D;&#x95F4;&#x5C42;&#x5C06;&#x4E0A;&#x5C42;&#x5B9A;&#x4E49;&#x7684;&#x540E;&#x53F0;&#x4EFB;&#x52A1;&#x6392;&#x961F;&#x8FDB;&#x5165;&#x4EFB;&#x52A1;&#x7F13;&#x5B58;&#x961F;&#x5217;&#xFF1B;&#x4E09;&#x3001;&#x6839;&#x636E;CPU&#x4E2A;&#x6570;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5B8C;&#x6210;&#x6267;&#x884C;&#x5F15;&#x64CE;&#x7684;&#x804C;&#x8D23;&#x3002; AsyncTask&#x539F;&#x7406; &#x672C;&#x6587;&#x7684;Demo&#x6E90;&#x7801;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>消息循环</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用消息队列（四）——消息处理]]></title>
    <url>%2F2017%2F01%2F30%2F2017%2F0130MessageQueue4%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;Android&#x5E94;&#x7528;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF08;&#x4E8C;&#xFF09;&#x2014;&#x2014;&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217;&#x300B;&#x4E2D;&#x5206;&#x6790;&#x4E86;Looper::loop()&#x7684;&#x524D;&#x534A;&#x90E8;&#x5206;&#xFF0C;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x3002;&#x5F53;&#x83B7;&#x53D6;&#x5230;&#x6D88;&#x606F;&#x4EE5;&#x540E;&#x5C06;&#x5904;&#x7406;&#x6D88;&#x606F;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7EE7;&#x7EED;&#x5206;&#x6790;Looper::loop()&#x5904;&#x7406;&#x6D88;&#x606F;&#x7684;&#x90E8;&#x5206;&#x3002; # Step1 Looper::loop(...) 123456789101112131415161718192021// frameworks/base/core/java/android/os/Looper.java:122public static void loop() { final Looper me = myLooper(); // &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217; ... final MessageQueue queue = me.mQueue; // Make sure the identity of this thread is that of the local process, // and keep track of what that identity token actually is. Binder.clearCallingIdentity(); final long ident = Binder.clearCallingIdentity(); for (;;) { Message msg = queue.next(); // &#x83B7;&#x53D6;&#x6D88;&#x606F;might block ... msg.target.dispatchMessage(msg); // &#x1F3C1;&#x5904;&#x7406;&#x6D88;&#x606F; ... // Make sure that during the course of dispatching the // identity of the thread wasn&apos;t corrupted. final long newIdent = Binder.clearCallingIdentity(); ... msg.recycleUnchecked(); }} msg.target&#x7684;&#x7C7B;&#x578B;&#x4E3A;Handler&#x3002; # Step2 Handler::dispatchMessage(...) 12345678910111213// frameworks/base/core/java/android/os/Handler.java:93public void dispatchMessage(Message msg) { if (msg.callback != null) { // &#x5982;&#x679C;&#x6D88;&#x606F;&#x5728;&#x53D1;&#x9001;&#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;&#x4E86;&#x56DE;&#x8C03;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x6B64;&#x56DE;&#x8C03; handleCallback(msg); // &#x1F3C1; Step3 } else { if (mCallback != null) {// &#x5982;&#x679C;&#x8D1F;&#x8D23;&#x5206;&#x53D1;&#x6D88;&#x606F;&#x7684;Handler&#x5BF9;&#x8C61;&#x6709;&#x56DE;&#x8C03;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x6B64;&#x56DE;&#x8C03; if (mCallback.handleMessage(msg)) { return; } } handleMessage(msg); // &#x1F3C1; Step4 }} Step3 Handler::handleCallback(...) 1234// frameworks/base/core/java/android/os/Handler.java:738private static void handleCallback(Message message) { message.callback.run();} message.callback&#x7684;&#x7C7B;&#x578B;&#x4E3A;Runnable&#xFF0C;&#x56E0;&#x6B64;message.callback.run()&#x8C03;&#x7528;&#x7684;&#x662F;Runnable::run()&#x3002; # Step4 Handler::handleMessage(...) 123// frameworks/base/core/java/android/os/Handler.java:87 public void handleMessage(Message msg) { } &#x8BE5;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x663E;&#x7136;&#x7136;&#x5728;&#x5904;&#x7406;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x7531;Handler&#x6D3E;&#x751F;&#x5B50;&#x7C7B;&#x5E76;&#x5B9E;&#x73B0;handleMessage(...)&#x51FD;&#x6570;&#x3002; # &#x7A7A;&#x95F2;&#x6D88;&#x606F;&#x7684;&#x6267;&#x884C; &#x518D;&#x6765;&#x770B;&#x300A;Android&#x5E94;&#x7528;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF08;&#x4E8C;&#xFF09;&#x2014;&#x2014;&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217;&#x300B;&#x4E2D;&#x7684;MessageQueue::next()&#x4E2D;&#x5BF9;&#x4E8E;&#x7A7A;&#x95F2;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960// frameworks/base/core/java/android/os/MessageQueue.java:307Message next() { ... int pendingIdleHandlerCount = -1; // -1 only during first iteration int nextPollTimeoutMillis = 0; for (;;) { ... nativePollOnce(ptr, nextPollTimeoutMillis); // &#x68C0;&#x67E5;&#x65B0;&#x6D88;&#x606F; synchronized (this) { // &#x83B7;&#x53D6;&#x65B0;&#x6D88;&#x606F; ... // If first time idle, then get the number of idlers to run. // Idle handles only run if the queue is empty or if the first message // in the queue (possibly a barrier) is due to be handled in the future. if (pendingIdleHandlerCount &lt; 0 &amp;&amp; (mMessages == null || now &lt; mMessages.when)) { // &#x9996;&#x6B21;&#x8FDB;&#x5165;&#x5FAA;&#x73AF;&#xFF0C;&#x6CA1;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x6216;&#x8005;&#x8FD8;&#x4E0D;&#x8BE5;&#x5904;&#x7406;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x5F97;&#x5230;&#x6CE8;&#x518C;&#x7684;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x5668;&#x4E2A;&#x6570; pendingIdleHandlerCount = mIdleHandlers.size(); } if (pendingIdleHandlerCount &lt;= 0) { // No idle handlers to run. Loop and wait some more. // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x6CE8;&#x518C;&#x7684;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x5668;&#x5219;&#x62C9;&#x5012; mBlocked = true; continue; } if (mPendingIdleHandlers == null) { // &#x5C06;&#x6CE8;&#x518C;&#x7684;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x5668;&#x62F7;&#x8D1D;&#x5230;&#x7F13;&#x5B58;&#x4E2D; mPendingIdleHandlers = new IdleHandler[Math.max(pendingIdleHandlerCount, 4)]; } mPendingIdleHandlers = mIdleHandlers.toArray(mPendingIdleHandlers); } // Run the idle handlers. // We only ever reach this code block during the first iteration. for (int i = 0; i &lt; pendingIdleHandlerCount; i++) { // &#x4F9D;&#x6B21;&#x6267;&#x884C;&#x7F13;&#x5B58;&#x4E2D;&#x7684;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x5668; final IdleHandler idler = mPendingIdleHandlers[i]; mPendingIdleHandlers[i] = null; // release the reference to the handler boolean keep = false; try { keep = idler.queueIdle(); } catch (Throwable t) ... if (!keep) { synchronized (this) { mIdleHandlers.remove(idler); } } } // Reset the idle handler count to 0 so we do not run them again. pendingIdleHandlerCount = 0; // While calling an idle handler, a new message could have been delivered // so go back and look again for a pending message without waiting. nextPollTimeoutMillis = 0; }} &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x4E0D;&#x662F;&#x5728;&#x6D88;&#x606F;&#x5904;&#x7406;&#x7684;&#x73AF;&#x8282;&#x6267;&#x884C;&#xFF0C;&#x56E0;&#x4E3A;&#x5230;&#x4E86;&#x6D88;&#x606F;&#x5904;&#x7406;&#x73AF;&#x8282;&#xFF0C;&#x8BF4;&#x660E;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x90A3;&#x5C31;&#x8F6E;&#x4E0D;&#x4E0A;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x4E86;&#x3002;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x662F;&#x5728;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x672A;&#x9042;&#x7684;&#x65F6;&#x5019;&#xFF08;&#x53EF;&#x80FD;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x8FD8;&#x6CA1;&#x6709;&#x5230;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#xFF09;&#xFF0C;&#x624D;&#x6709;&#x673A;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x3002; # &#x7A7A;&#x95F2;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5668; 1234567891011// frameworks/base/core/java/android/os/MessageQueue.java:777public static interface IdleHandler { /** * Called when the message queue has run out of messages and will now * wait for more. Return true to keep your idle handler active, false * to have it removed. This may be called if there are still messages * pending in the queue, but they are all scheduled to be dispatched * after the current time. */ boolean queueIdle();} &#x548C;Handler&#x7C7B;&#x4F3C;&#xFF0C;&#x5B83;&#x53EA;&#x5B9A;&#x4E49;&#x4E86;&#x63A5;&#x53E3;&#xFF0C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x8BE5;&#x63A5;&#x53E3;&#x3002;&#x901A;&#x8FC7;&#x8C03;&#x7528;MessageQueue::addIdleHandler(...)&#x5411;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6CE8;&#x518C;&#x7A7A;&#x95F2;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5668;&#xFF1A; 1234567// frameworks/base/core/java/android/os/MessageQueue.java:115public void addIdleHandler(@NonNull IdleHandler handler) { ... synchronized (this) { mIdleHandlers.add(handler); }} &#x603B;&#x7ED3; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;Looper::loop()&#x51FD;&#x6570;&#x662F;Android&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x7684;&#x5904;&#x7406;&#x6838;&#x5FC3;&#x3002;&#x5B83;&#x7684;&#x4E3B;&#x5E72;&#x903B;&#x8F91;&#x662F;&#xFF1A;&#x4ECE;&#x6D88;&#x606F;&#x961F;&#x5217;&#x83B7;&#x53D6;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x6216;&#x8005;&#x65B0;&#x6D88;&#x606F;&#x8FD8;&#x6CA1;&#x6709;&#x5230;&#x8981;&#x5904;&#x7406;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x5728;&#x518C;&#x7684;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x5668;&#xFF1B;&#x5982;&#x679C;&#x6709;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x65B0;&#x6D88;&#x606F;&#x3002;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用消息队列（三）——发送消息]]></title>
    <url>%2F2017%2F01%2F30%2F2017%2F0130MessageQueue3%2F</url>
    <content type="text"><![CDATA[Handler::sendMessage(...)&#x7528;&#x6765;&#x5411;&#x6D88;&#x606F;&#x961F;&#x5217;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x4F9D;&#x6B21;&#x51FD;&#x6570;&#x4E3A;&#x8D77;&#x70B9;&#x7EE7;&#x7EED;&#x5B66;&#x4E60;&#x3002; # Step1 Handler::sendMessage(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556// frameworks/base/core/java/android/os/Handler.java//:64public class Handler {...//:113 public Handler() { this(null, false); }...//:188 public Handler(Callback callback, boolean async) { // &#x9ED8;&#x8BA4;callback = null; async = false ... mLooper = Looper.myLooper(); ... mQueue = mLooper.mQueue; mCallback = callback; mAsynchronous = async; }...//:505 public final boolean sendMessage(Message msg) { // &#x53D1;&#x9001;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x4E3A;&#x7CFB;&#x7EDF;&#x5F53;&#x524D;&#x65F6;&#x95F4; return sendMessageDelayed(msg, 0); }...//:565 public final boolean sendMessageDelayed(Message msg, long delayMillis) { // &#x53D1;&#x9001;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x4E3A;&#x5C06;&#x6765;&#x7684;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x65F6;&#x95F4; if (delayMillis &lt; 0) { delayMillis = 0; } return sendMessageAtTime(msg, SystemClock.uptimeMillis() + delayMillis); }...//:592 public boolean sendMessageAtTime(Message msg, long uptimeMillis) { // &#x53D1;&#x9001;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x4E3A;&#x5C06;&#x6765;&#x7684;&#x4E00;&#x4E2A;&#x7EDD;&#x5BF9;&#x65F6;&#x95F4; // uptimeMillis&#x63CF;&#x8FF0;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4; MessageQueue queue = mQueue; ... return enqueueMessage(queue, msg, uptimeMillis); }...//:626 private boolean enqueueMessage(MessageQueue queue, Message msg, long uptimeMillis) { msg.target = this; // &#x5C06;msg.target&#x8BBE;&#x7F6E;&#x4E3A;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x5904;&#x7406;&#x7684;Handler&#x5BF9;&#x8C61; ... // &#x5C06;msg&#x53D1;&#x9001;&#x5230;&#x6D88;&#x606F;&#x961F;&#x5217;mQueue&#x4E2D; return queue.enqueueMessage(msg, uptimeMillis); }...//:742 final MessageQueue mQueue; final Looper mLooper;... Step2 MessageQueue::enqueueMessage(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748// frameworks/base/core/java/android/os/MessageQueue.java:533 boolean enqueueMessage(Message msg, long when) { ... synchronized (this) { ... msg.when = when; Message p = mMessages; boolean needWake; if (p == null || when == 0 || when &lt; p.when) { // New head, wake up the event queue if blocked. // &#x6D88;&#x606F;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x662F;&#x6309;&#x7167;&#x5176;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x987A;&#x5E8F;&#x6392;&#x5217;&#xFF0C;&#x56E0;&#x6B64;&#x5F53;&#x76EE;&#x6807;&#x961F;&#x5217;&#x4E3A;&#x7A7A; // &#x6216; msg&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x4E3A;0 &#x6216; msg&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x5C0F;&#x4E8E;&#x961F;&#x5217;&#x5934;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x65F6;&#x95F4;&#xFF0C; // &#x53EA;&#x9700;&#x5C06;msg&#x63D2;&#x5165;&#x5230;&#x961F;&#x5217;&#x5934;&#x90E8; msg.next = p; mMessages = msg; // mBlocked&#x8868;&#x793A;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x6B63;&#x5904;&#x4E8E;&#x7761;&#x7720;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x679C;&#x4E3A;true&#x8868;&#x793A;&#x6B63;&#x5728;&#x7761;&#x7720; // &#x6B64;&#x65F6;&#x5411;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5934;&#x90E8;&#x63D2;&#x5165;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x5219;&#x5FC5;&#x987B;&#x5C06;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x5524;&#x9192; needWake = mBlocked; } else { // &#x5269;&#x4F59;&#x60C5;&#x51B5;&#x9700;&#x8981;&#x628A;msg&#x63D2;&#x5165;&#x5230;&#x961F;&#x5217;&#x7684;&#x5408;&#x9002;&#x4F4D;&#x7F6E; // Inserted within the middle of the queue. Usually we don&apos;t have to wake // up the event queue unless there is a barrier at the head of the queue // and the message is the earliest asynchronous message in the queue. // &#x7531;&#x4E8E;&#x4E0D;&#x662F;&#x5F80;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5934;&#x90E8;&#x63D2;&#x5165;&#x6D88;&#x606F;&#xFF0C;&#x4E0D;&#x6539;&#x53D8;&#x65E2;&#x6709;&#x7684;&#x5904;&#x7406;&#x8282;&#x594F;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x5524;&#x9192;&#x6D88;&#x606F;&#x5FAA;&#x73AF; needWake = mBlocked &amp;&amp; p.target == null &amp;&amp; msg.isAsynchronous(); Message prev; for (;;) { prev = p; p = p.next; if (p == null || when &lt; p.when) { break; } if (needWake &amp;&amp; p.isAsynchronous()) { needWake = false; } } msg.next = p; // invariant: p == prev.next prev.next = msg; } // We can assume mPtr != 0 because mQuitting is false. if (needWake) { nativeWake(mPtr); // &#x1F3C1; &#x5524;&#x9192;&#x6D88;&#x606F;&#x5FAA;&#x73AF; } } return true; } Step3 MessageQueue::nativeWake(...) &#x8FD9;&#x662F;&#x4E00;&#x4E2A;JNI&#x51FD;&#x6570;&#xFF1A; 12345// frameworks/base/core/jni/android_os_MessageQueue.cpp:194static void android_os_MessageQueue_nativeWake(JNIEnv* env, jclass clazz, jlong ptr) { NativeMessageQueue* nativeMessageQueue = reinterpret_cast&lt;NativeMessageQueue*&gt;(ptr); nativeMessageQueue-&gt;wake(); // &#x1F3C1; } Step4 NativeMessageQueue::wake() 1234// frameworks/base/core/jni/android_os_MessageQueue.cpp:121void NativeMessageQueue::wake() { mLooper-&gt;wake(); // &#x1F3C1;} Step5 Looper::wake() 1234567891011// system/core/libutils/Looper.cpp:404void Looper::wake() {... uint64_t inc = 1; ssize_t nWrite = TEMP_FAILURE_RETRY(write(mWakeEventFd, &amp;inc, sizeof(uint64_t))); if (nWrite != sizeof(uint64_t)) { if (errno != EAGAIN) { ALOGW(&quot;Could not write wake signal, errno=%d&quot;, errno); } }} &#x603B;&#x7ED3; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x6240;&#x8C13;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A; 1. &#x5411;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4E2D;&#x63D2;&#x5165;&#x63CF;&#x8FF0;&#x6D88;&#x606F;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1B; 2. &#x5411;&#x6D88;&#x606F;&#x6CF5;&#x7684;Looper::mWakeEventFd&#x4E2D;&#x5199;&#x5165;&#x6570;&#x5B57;1&#xFF0C;&#x4F7F;&#x5F97;&#x8BE5;&#x6D88;&#x606F;&#x6CF5;&#x4E2D;&#x7B49;&#x5F85;read&#x7684;&#x8C03;&#x7528;&#x88AB;&#x5524;&#x9192;&#x3002; &#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用消息队列（二）——创建消息队列]]></title>
    <url>%2F2017%2F01%2F30%2F2017%2F0130MessageQueue2%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;&#x7EC6;&#x80DE;&#x5206;&#x88C2;&#x2014;&#x2014;Android&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x7684;&#x5C3E;&#x90E8;&#xFF0C;&#x901A;&#x8FC7;Looper.prepareMainLooper()&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x6CF5;&#x4E4B;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;Looper.loop()&#x8FDB;&#x5165;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4EE5;&#x6B64;&#x4E3A;&#x8D77;&#x70B9;&#x8FDB;&#x5165;&#x5B66;&#x4E60;&#x3002; # Step1 Looper::loop() 1234567891011121314151617181920212223// frameworks/base/core/java/android/os/Looper.java:122public static void loop() { final Looper me = myLooper(); // &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217; ... final MessageQueue queue = me.mQueue; // Make sure the identity of this thread is that of the local process, // and keep track of what that identity token actually is. Binder.clearCallingIdentity(); final long ident = Binder.clearCallingIdentity(); for (;;) { Message msg = queue.next(); // &#x1F3C1;might block ... msg.target.dispatchMessage(msg); ... // Make sure that during the course of dispatching the // identity of the thread wasn&apos;t corrupted. final long newIdent = Binder.clearCallingIdentity(); ... msg.recycleUnchecked(); }} Step2 MessageQueue::next() 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071// frameworks/base/core/java/android/os/MessageQueue.java:307Message next() { ... // &#x7528;&#x6765;&#x4FDD;&#x5B58;&#x6CE8;&#x518C;&#x5230;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x7A7A;&#x95F2;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5668;(IdleHandler)&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5F53;&#x6D88;&#x606F;&#x961F;&#x5217; // &#x6CA1;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x9700;&#x8981;&#x5904;&#x7406;&#x65F6;&#xFF0C;&#x4E0D;&#x662F;&#x9A6C;&#x4E0A;&#x8FDB;&#x5165;&#x7761;&#x7720;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#xFF0C;&#x800C;&#x662F;&#x5148;&#x8C03;&#x7528;&#x5DF2;&#x6CE8;&#x518C;&#x7684;IdleHandler // &#x5BF9;&#x8C61;&#x7684;queueIdle(...)&#x51FD;&#x6570;&#xFF0C;&#x4EE5;&#x4FBF;&#x6709;&#x673A;&#x4F1A;&#x8FDB;&#x884C;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#x3002; int pendingIdleHandlerCount = -1; // -1 only during first iteration // &#x82E5;&#x6CA1;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x5F85;&#x5904;&#x7406;&#xFF0C;&#x7EBF;&#x7A0B;&#x7761;&#x7720;&#x7B49;&#x5F85;&#x7684;&#x65F6;&#x95F4;&#x3002; // 0&#x8868;&#x793A;&#x4E0D;&#x8981;&#x8FDB;&#x5165;&#x7761;&#x7720;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#xFF1B;-1&#x8868;&#x793A;&#x82E5;&#x65E0;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x5219;&#x6C38;&#x4E45;&#x7761;&#x7720;&#x7B49;&#x5F85; int nextPollTimeoutMillis = 0; for (;;) { if (nextPollTimeoutMillis != 0) { Binder.flushPendingCommands(); } // &#x1F3C1;&#x68C0;&#x67E5;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x662F;&#x5426;&#x6709;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x9996;&#x6B21;&#x4E0D;&#x8FDB;&#x5165;&#x7761;&#x7720;&#x7B49;&#x5F85; nativePollOnce(ptr, nextPollTimeoutMillis); // mMessages&#x63CF;&#x8FF0;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x9700;&#x8981;&#x5904;&#x7406;&#x7684;&#x6D88;&#x606F;&#xFF0C;nativePollOnce(...)&#x4F1A;&#x7ED9;mMessages // &#x5B8C;&#x6210;&#x8D4B;&#x503C; synchronized (this) { // Try to retrieve the next message. Return if found. final long now = SystemClock.uptimeMillis(); Message prevMsg = null; Message msg = mMessages; ... if (msg != null) { if (now &lt; msg.when) { // Next message is not ready. Set a timeout to wake up when it is ready. // &#x8BA1;&#x7B97;&#x4E0B;&#x6B21;&#x8C03;&#x7528;nativePollOnce(...)&#x7684;&#x65F6;&#x95F4; nextPollTimeoutMillis = (int) Math.min(msg.when - now, Integer.MAX_VALUE); } else { ... mMessages = msg.next; ... msg.next = null; ... return msg; } } else { // No more messages. &#x6CA1;&#x6709;&#x6D88;&#x606F;&#x5904;&#x7406;&#xFF0C;&#x5219;&#x7761;&#x7720;&#x7B49;&#x5F85; nextPollTimeoutMillis = -1; } ... } // Run the idle handlers. // We only ever reach this code block during the first iteration. for (int i = 0; i &lt; pendingIdleHandlerCount; i++) { final IdleHandler idler = mPendingIdleHandlers[i]; mPendingIdleHandlers[i] = null; // release the reference to the handler boolean keep = false; try { keep = idler.queueIdle(); } catch (Throwable t) ... if (!keep) { synchronized (this) { mIdleHandlers.remove(idler); } } } // Reset the idle handler count to 0 so we do not run them again. pendingIdleHandlerCount = 0; // While calling an idle handler, a new message could have been delivered // so go back and look again for a pending message without waiting. nextPollTimeoutMillis = 0; }} Step3 MessageQueue::nativePollOnce(...) &#x8FD9;&#x662F;&#x4E00;&#x4E2A;JNI&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;Native&#x5C42;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A; 123456// frameworks/base/core/jni/android_os_MessageQueue.cpp:188static void android_os_MessageQueue_nativePollOnce(JNIEnv* env, jobject obj, jlong ptr, jint timeoutMillis) { NativeMessageQueue* nativeMessageQueue = reinterpret_cast&lt;NativeMessageQueue*&gt;(ptr); nativeMessageQueue-&gt;pollOnce(env, obj, timeoutMillis);} Step4 NativeMessageQueue::pollOnce(...) 123456// frameworks/base/core/jni/android_os_MessageQueue.cpp:107void NativeMessageQueue::pollOnce(JNIEnv* env, jobject pollObj, int timeoutMillis) { ... mLooper-&gt;pollOnce(timeoutMillis); ...} Step5 Looper::pollOnce(...) 12345678910111213// system/core/libutils/Looper.cpp:184int Looper::pollOnce(int timeoutMillis, int* outFd, int* outEvents, void** outData) { int result = 0; for (;;) { ... if (result != 0) { ... return result; // &#x5982;&#x679C;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x5904;&#x7406;&#xFF0C;&#x5219;&#x8FD4;&#x56DE; } result = pollInner(timeoutMillis); // &#x5FAA;&#x73AF;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x8981;&#x5904;&#x7406; }} Step6 Looper::pollInner(...) &#x5728;&#x300A;Android&#x5E94;&#x7528;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217;&#x300B;&#x4E4B;Step5&#x4E2D;&#xFF0C;&#x5728;Native&#x5C42;&#x521B;&#x5EFA;mLooper&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x5176;&#x6784;&#x9020;&#x51FD;&#x6570;&#x91CC;&#x521B;&#x5EFA;&#x4E86;&#x4E8B;&#x4EF6;&#x5BF9;&#x8C61;mWakeEventFd&#x3001;epoll&#x5B9E;&#x4F8B;mEpollFd&#xFF0C;&#x5E76;&#x5C06;mWakeEventFd&#x6CE8;&#x518C;&#x5230;mEpollFd&#xFF0C;&#x6B64;&#x5904;&#x5F00;&#x59CB;&#x7B49;&#x5F85;mEpollFd&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061// system/core/libutils/Looper.cpp:220int Looper::pollInner(int timeoutMillis) {... // Poll. int result = POLL_WAKE; mResponses.clear(); mResponseIndex = 0; // We are about to idle. mPolling = true; struct epoll_event eventItems[EPOLL_MAX_EVENTS]; int eventCount = epoll_wait(mEpollFd, eventItems, EPOLL_MAX_EVENTS, timeoutMillis); ... for (int i = 0; i &lt; eventCount; i++) { int fd = eventItems[i].data.fd; uint32_t epollEvents = eventItems[i].events; if (fd == mWakeEventFd) { if (epollEvents &amp; EPOLLIN) { awoken(); // &#x5982;&#x679C;&#x662F;mWakeEventFd&#x7684;EPOLLIN&#x4E8B;&#x4EF6;&#xFF0C;&#x5219;&#x8BFB;&#x51FA;&#x6570;&#x636E; } else ... } else { // &#x5982;&#x679C;&#x662F;mWakeEventFd&#x4EE5;&#x5916;&#x7684;epoll&#x4E8B;&#x4EF6;&#xFF0C;&#x5219;&#x7F13;&#x5B58;requestIndex&#x5230;mResponse ssize_t requestIndex = mRequests.indexOfKey(fd); if (requestIndex &gt;= 0) { int events = 0; if (epollEvents &amp; EPOLLIN) events |= EVENT_INPUT; if (epollEvents &amp; EPOLLOUT) events |= EVENT_OUTPUT; if (epollEvents &amp; EPOLLERR) events |= EVENT_ERROR; if (epollEvents &amp; EPOLLHUP) events |= EVENT_HANGUP; pushResponse(events, mRequests.valueAt(requestIndex)); } else ... } }Done: ; ... // Invoke all response callbacks. // &#x904D;&#x5386;&#x524D;&#x9762;&#x7F13;&#x5B58;&#x5230;mResponse&#x4E2D;&#x7684;request&#xFF0C;&#x8C03;&#x7528;&#x4FDD;&#x5B58;&#x5728;&#x5176;&#x4E2D;&#x7684;callback&#xFF0C;&#x8FD9;&#x4E9B; // &#x51FD;&#x6570;&#x901A;&#x5E38;&#x4E3A;&#x4E1A;&#x52A1;&#x5C42;&#x903B;&#x8F91;&#xFF0C;&#x56E0;&#x6B64;&#x4EE5;callback&#x7684;&#x5F62;&#x5F0F;&#x4FDD;&#x5B58;&#xFF08;&#x6CE8;&#x518C;&#xFF09;&#x5230;&#x673A;&#x5236;&#x5C42; for (size_t i = 0; i &lt; mResponses.size(); i++) { Response&amp; response = mResponses.editItemAt(i); if (response.request.ident == POLL_CALLBACK) { int fd = response.request.fd; int events = response.events; void* data = response.request.data;... // Invoke the callback. Note that the file descriptor may be closed by // the callback (and potentially even reused) before the function returns so // we need to be a little careful when removing the file descriptor afterwards. int callbackResult = response.request.callback-&gt;handleEvent(fd, events, data); if (callbackResult == 0) { removeFd(fd, response.request.seq); } // Clear the callback reference in the response structure promptly because we // will not clear the response vector itself until the next poll. response.request.callback.clear(); result = POLL_CALLBACK; } } return result;} &#x603B;&#x7ED3; &#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用消息队列（一）——创建消息队列]]></title>
    <url>%2F2017%2F01%2F29%2F2017%2F0129MessageQueue1%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;&#x7EC6;&#x80DE;&#x5206;&#x88C2;&#x2014;&#x2014;Android&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x7684;&#x5C3E;&#x90E8;&#xFF0C;Zygote&#x5206;&#x88C2;&#x51FA;&#x4E86;&#x65B0;&#x7684;&#x8FDB;&#x7A0B;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x6267;&#x884C;ActivityThread::main(...)&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;&#x6267;&#x884C;&#x8D77;&#x70B9;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x4E3B;&#x8981;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x521B;&#x5EFA;&#x548C;&#x8FDB;&#x5165;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4EE5;Looper::prepareMainLooper()&#x548C;Looper::prepare()&#x4E3A;&#x8D77;&#x70B9;&#x5F00;&#x59CB;&#x5206;&#x6790;&#x3002; &#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217; 12345678910111213141516171819202122232425262728293031323334353637383940// frameworks/base/core/java/android/os/Looper.java:54public final class Looper {...// :68// &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5C40;&#x90E8;&#x5BF9;&#x8C61;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x521B;&#x5EFA;&#x4E86;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x7EBF;&#x7A0B;&#x90FD;&#x5173;&#x8054;&#x4E00;&#x4E2A;Looper&#x5BF9;&#x8C61;// &#x901A;&#x8FC7;&#x5176;&#x6210;&#x5458;&#x51FD;&#x6570;get()&#x6216;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;myLooper()&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x4E0E;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x5173;&#x8054;&#x7684;Looper&#x5BF9;&#x8C61;static final ThreadLocal&lt;Looper&gt; sThreadLocal = new ThreadLocal&lt;Looper&gt;();// &#x4E3B;&#x7EBF;&#x7A0B;&#x7684;Looper&#x5BF9;&#x8C61;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x7528;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x9759;&#x6001;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x4FDD;&#x5B58;&#xFF0C;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;// Looper::getMainLooper()&#x6765;&#x8BBF;&#x95EE;&#x5B83;&#x3002;private static Looper sMainLooper; // guarded by Looper.classfinal MessageQueue mQueue;...// :82 public static void prepare() { prepare(true); } private static void prepare(boolean quitAllowed) { if (sThreadLocal.get() != null) { throw new RuntimeException(&quot;Only one Looper may be created per thread&quot;); } sThreadLocal.set(new Looper(quitAllowed)); // &#x1F3C1; } /** * Initialize the current thread as a looper, marking it as an * application&apos;s main looper. The main looper for your application * is created by the Android environment, so you should never need * to call this function yourself. See also: {@link #prepare()} */ public static void prepareMainLooper() { prepare(false); synchronized (Looper.class) { if (sMainLooper != null) { throw new IllegalStateException(&quot;The main Looper has already been prepared.&quot;); } sMainLooper = myLooper(); } } Looper::prepare(...)&#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;Looper::prepareMainLooper()&#x53EA;&#x80FD;&#x7528;&#x4E8E;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x5B83;&#x624D;&#x80FD;&#x6267;&#x884C;&#x4E0E;UI&#x76F8;&#x5173;&#x7684;&#x64CD;&#x4F5C;&#x3002; Step2 Looper::Looper(...) 12345// frameworks/base/core/java/android/os/Looper.java:186 private Looper(boolean quitAllowed) { mQueue = new MessageQueue(quitAllowed); // &#x1F3C1; mThread = Thread.currentThread(); } Step3 MessageQueue::MessageQueue(...) 1234567891011// frameworks/base/core/java/android/os/MessageQueue.java:38public final class MessageQueue {...// :46private long mPtr; // used by native code...// :68 MessageQueue(boolean quitAllowed) { mQuitAllowed = quitAllowed; mPtr = nativeInit(); // &#x1F3C1; } Step4 MessageQueue::nativeInit() &#x8FD9;&#x662F;&#x4E00;&#x4E2A;JNI&#x51FD;&#x6570;&#xFF1A; 1234567// frameworks/base/core/jni/android_os_MessageQueue.cpp:172static jlong android_os_MessageQueue_nativeInit(JNIEnv* env, jclass clazz) { NativeMessageQueue* nativeMessageQueue = new NativeMessageQueue(); // &#x1F3C1; ... nativeMessageQueue-&gt;incStrong(env); return reinterpret_cast&lt;jlong&gt;(nativeMessageQueue);} Step5 NativeMessageQueue::NativeMessageQueue() 123456789// frameworks/base/core/jni/android_os_MessageQueue.cpp:78NativeMessageQueue::NativeMessageQueue() : mPollEnv(NULL), mPollObj(NULL), mExceptionObj(NULL) { mLooper = Looper::getForThread(); // &#x83B7;&#x53D6;Looper&#x7EBF;&#x7A0B;&#x5C40;&#x90E8;&#x53D8;&#x91CF; if (mLooper == NULL) { mLooper = new Looper(false); // &#x1F3C1; Looper::setForThread(mLooper); }} &#x5728;&#x6B64;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x68C0;&#x67E5;&#x5982;&#x679C;&#x6CA1;&#x6709;Looper&#x7684;&#x7EBF;&#x7A0B;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x3002; Looper&#x7684;&#x521B;&#x5EFA;&#x53EF;&#x53C2;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x2014;&#x2014;Looper&#x673A;&#x5236;&#x300B;&#x3002;&#x5728;Looper::Looper()&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x521B;&#x5EFA;&#x4E86;&#x4E8B;&#x4EF6;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x6CE8;&#x518C;&#x5230;epoll&#x673A;&#x5236;&#x4E2D;&#xFF0C;&#x5B8C;&#x6210;&#x4E86;&#x6D88;&#x606F;&#x6CF5;&#x7684;&#x521B;&#x5EFA;&#x3002; &#x603B;&#x7ED3; &#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[细胞分裂——Android进程的启动]]></title>
    <url>%2F2017%2F01%2F29%2F2017%2F0129Process%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;&#x521B;&#x4E16;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;Zygote&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x4E4B;step7&#x4E2D;&#xFF0C;Zygote&#x521B;&#x5EFA;&#x4E86;&#x865A;&#x62DF;&#x673A;&#x3002;&#x5728;&#x63A5;&#x4E0B;&#x6765;&#x7684;step8&#x4E2D;&#x521B;&#x5EFA;&#x4E86;server&#x7AEF;socket&#xFF0C;&#x542F;&#x52A8;&#x4E86;system&#x8FDB;&#x7A0B;&#x3002;&#x5C14;&#x540E;&#x5C31;&#x5F00;&#x59CB;&#x7B49;&#x5F85;ActivityManagerService&#x521B;&#x5EFA;&#x8FDB;&#x7A0B;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x63A5;&#x6536;&#x5230;&#x8BE5;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;Zygote&#x7EE7;&#x7EED;fork&#x6267;&#x884C;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5B8C;&#x6210;&#x5206;&#x88C2;&#xFF0C;&#x56E0;&#x6B64;&#x4ECE;Zygote&#x5206;&#x88C2;&#x51FA;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#x90FD;&#x7EE7;&#x627F;&#x4E86;Zygote&#x521B;&#x5EFA;&#x7684;&#x865A;&#x62DF;&#x673A;&#x3002;ActivityManagerService&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x51FD;&#x6570;startProcessLocked()&#x542F;&#x52A8;&#x65B0;&#x8FDB;&#x7A0B;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x8FDB;&#x5165;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x5B66;&#x4E60;&#x3002; Step1 ActivityManagerService::startProcessLocked(...) &#x5728;Activity&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x4E4B;Step31&#x5206;&#x6790;Activity&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x65F6;&#x66FE;&#x63A5;&#x89E6;&#x8FC7;Android&#x5E94;&#x7528;&#x7684;&#x542F;&#x52A8;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:3106final ProcessRecord startProcessLocked(String processName, ApplicationInfo info, boolean knownToBeDead, int intentFlags, String hostingType, ComponentName hostingName, boolean allowWhileBooting, boolean isolated, boolean keepIfLarge) { // &#x1F3C1;&#x8C03;&#x7528;&#x540C;&#x540D;&#x51FD;&#x6570; return startProcessLocked(processName, info, knownToBeDead, intentFlags, hostingType, hostingName, allowWhileBooting, isolated, 0 /* isolatedUid */, keepIfLarge, null /* ABI override */, null /* entryPoint */, null /* entryPointArgs */, null /* crashHandler */);}//&#xFF1A;3116final ProcessRecord startProcessLocked(String processName, ApplicationInfo info, boolean knownToBeDead, int intentFlags, String hostingType, ComponentName hostingName, boolean allowWhileBooting, boolean isolated, int isolatedUid, boolean keepIfLarge, String abiOverride, String entryPoint, String[] entryPointArgs, Runnable crashHandler) { long startTime = SystemClock.elapsedRealtime(); ProcessRecord app; if (!isolated) { app = getProcessRecordLocked(processName, info.uid, keepIfLarge); ... } ... String hostingNameStr = hostingName != null ? hostingName.flattenToShortString() : null; if (app == null) { ... app = newProcessRecordLocked(info, processName, isolated, isolatedUid); ... } ... startProcessLocked( // &#x1F3C1;&#x8C03;&#x7528;&#x540C;&#x540D;&#x51FD;&#x6570; app, hostingType, hostingNameStr, abiOverride, entryPoint, entryPointArgs); ... return (app.pid != 0) ? app : null;}//:3247private final void startProcessLocked(ProcessRecord app, String hostingType, String hostingNameStr, String abiOverride, String entryPoint, String[] entryPointArgs) { ... try { ... int uid = app.uid; int[] gids = null; ... // &#x83B7;&#x5F97;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;&#x7528;&#x6237;ID&#x53CA;&#x7EC4;ID app.gids = gids; app.requiredAbi = requiredAbi; app.instructionSet = instructionSet; // Start the process. It will either succeed and return a result containing // the PID of the new process, or else throw a RuntimeException. boolean isActivityProcess = (entryPoint == null); if (entryPoint == null) entryPoint = &quot;android.app.ActivityThread&quot;; ... // &#x1F3C1; &#x521B;&#x5EFA;&#x8FDB;&#x7A0B; Process.ProcessStartResult startResult = Process.start(entryPoint, app.processName, uid, uid, gids, debugFlags, mountExternal, app.info.targetSdkVersion, app.info.seinfo, requiredAbi, instructionSet, app.info.dataDir, entryPointArgs); ... } catch (RuntimeException e) ...} Step2 Process::start(...) 1234567891011121314151617// frameworks/base/core/java/android/os/Process.java:481public static final ProcessStartResult start(final String processClass, final String niceName, int uid, int gid, int[] gids, int debugFlags, int mountExternal, int targetSdkVersion, String seInfo, String abi, String instructionSet, String appDataDir, String[] zygoteArgs) { try { // &#x1F3C1; return startViaZygote(processClass, niceName, uid, gid, gids, debugFlags, mountExternal, targetSdkVersion, seInfo, abi, instructionSet, appDataDir, zygoteArgs); } catch (ZygoteStartFailedEx ex) ...} Step3 Process::startViaZygote(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243// frameworks/base/core/java/android/os/Process.java:603private static ProcessStartResult startViaZygote(final String processClass, final String niceName, final int uid, final int gid, final int[] gids, int debugFlags, int mountExternal, int targetSdkVersion, String seInfo, String abi, String instructionSet, String appDataDir, String[] extraArgs) throws ZygoteStartFailedEx { synchronized(Process.class) { ArrayList&lt;String&gt; argsForZygote = new ArrayList&lt;String&gt;(); // &#x7EC4;&#x7EC7;&#x542F;&#x52A8;&#x53C2;&#x6570;&#xFF0C;&#x4FDD;&#x5B58;&#x5728;argsForZygote&#x4E2D; // --runtime-args, --setuid=, --setgid=, // and --setgroups= must go first argsForZygote.add(&quot;--runtime-args&quot;); argsForZygote.add(&quot;--setuid=&quot; + uid); argsForZygote.add(&quot;--setgid=&quot; + gid); ... if (niceName != null) { argsForZygote.add(&quot;--nice-name=&quot; + niceName); } if (seInfo != null) { argsForZygote.add(&quot;--seinfo=&quot; + seInfo); } if (instructionSet != null) { argsForZygote.add(&quot;--instruction-set=&quot; + instructionSet); } if (appDataDir != null) { argsForZygote.add(&quot;--app-data-dir=&quot; + appDataDir); } ... // &#x1F3C1; &#x7EE7;&#x7EED;&#x521B;&#x5EFA;&#x8FDB;&#x7A0B; return zygoteSendArgsAndGetResult(openZygoteSocketIfNeeded(abi), argsForZygote); }} Step4 Process::zygoteSendArgsAndGetResult(...) 12345678910111213141516171819202122232425262728293031323334353637383940// frameworks/base/core/java/android/os/Process.java:537private static ProcessStartResult zygoteSendArgsAndGetResult( ZygoteState zygoteState, ArrayList&lt;String&gt; args) throws ZygoteStartFailedEx { try { /** * See com.android.internal.os.ZygoteInit.readArgumentList() * Presently the wire format to the zygote process is: * a) a count of arguments (argc, in essence) * b) a number of newline-separated argument strings equal to count * &#x4F9D;&#x6B21;&#x5C06;&#x53C2;&#x6570;&#x5199;&#x5165;Zygote socket&#xFF0C;&#x5E76;&#x8BFB;&#x51FA;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;pid&#x4F5C;&#x4E3A;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;&#x8FD4;&#x56DE;&#x503C; * * After the zygote process reads these it will write the pid of * the child or -1 on failure, followed by boolean to * indicate whether a wrapper process was used. */ final BufferedWriter writer = zygoteState.writer; final DataInputStream inputStream = zygoteState.inputStream; writer.write(Integer.toString(args.size())); writer.newLine(); int sz = args.size(); for (int i = 0; i &lt; sz; i++) { String arg = args.get(i); ... writer.write(arg); writer.newLine(); } writer.flush(); // Should there be a timeout on this? ProcessStartResult result = new ProcessStartResult(); result.pid = inputStream.readInt(); ... result.usingWrapper = inputStream.readBoolean(); return result; } catch (IOException ex) ...} &#x53EF;&#x89C1;&#xFF0C;ActivityManagerService&#x901A;&#x8FC7;&#x8C03;&#x7528;startProcessLocked(...)&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B;&#x5E76;&#x975E;&#x5728;&#x8BE5;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B8C;&#x6210;&#x8FDB;&#x7A0B;&#x7684;&#x521B;&#x5EFA;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;socket&#x628A;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x9700;&#x6C42;&#x53D1;&#x9001;&#x7ED9;Zygote&#xFF0C;&#x7B49;&#x5F85;Zyogte&#x5206;&#x88C2;&#x51FA;&#x4E00;&#x4E2A;&#x65B0;&#x8FDB;&#x7A0B;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x53EF;&#x4EE5;&#x63A5;&#x5230;&#x300A;&#x521B;&#x4E16;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;Zygote&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x4E4B;Step11&#xFF0C;&#x5728;&#x51FD;&#x6570;ZygoteInit::runSelectLoop(&#x2026;)&#x4E2D;&#x7B49;&#x5F85;&#x4ECE;socket&#x8BFB;&#x53D6;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x8BF7;&#x6C42;&#x3002;&#x4E00;&#x65E6;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#xFF0C;&#x5219;&#x8C03;&#x7528;boolean done = peers.get(i).runOnce();&#x5904;&#x7406;&#x8BF7;&#x6C42;&#x3002;peers&#x7684;&#x58F0;&#x660E;&#x4E3A;ArrayList&lt;ZygoteConnection&gt; peers = new ArrayList&lt;ZygoteConnection&gt;();&#xFF0C;&#x56E0;&#x6B64;&#x63A5;&#x4E0B;&#x6765;&#x8FDB;&#x5165;ZygoteConnection::runOnce()&#x3002; # Step5 ZygoteConnection::runOnce() 1234567891011121314151617181920212223242526272829303132333435363738// frameworks/base/core/java/com/android/internal/os/ZygoteConnection.java:132boolean runOnce() throws ZygoteInit.MethodAndArgsCaller { String args[]; Arguments parsedArgs = null; ... try { // &#x8BFB;&#x53D6;&#x53C2;&#x6570; args = readArgumentList(); ... } catch (IOException ex) ... ... int pid = -1; ... try { parsedArgs = new Arguments(args); ... // &#x5206;&#x88C2;&#x51FA;&#x65B0;&#x8FDB;&#x7A0B; pid = Zygote.forkAndSpecialize(parsedArgs.uid, parsedArgs.gid, parsedArgs.gids, parsedArgs.debugFlags, rlimits, parsedArgs.mountExternal, parsedArgs.seInfo, parsedArgs.niceName, fdsToClose, parsedArgs.instructionSet, parsedArgs.appDataDir); } catch (ErrnoException ex) ... try { if (pid == 0) { // in child IoUtils.closeQuietly(serverPipeFd); serverPipeFd = null; // &#x1F3C1; &#x5B50;&#x8FDB;&#x7A0B;&#x7684;&#x5165;&#x53E3;&#x51FD;&#x6570; handleChildProc(parsedArgs, descriptors, childPipeFd, newStderr); // should never get here, the child is expected to either // throw ZygoteInit.MethodAndArgsCaller or exec(). return true; } else ... } finally ...} Step6 ZygoteConnection::handleChildProc(...) 123456789101112131415161718192021222324252627282930313233343536373839// frameworks/base/core/java/com/android/internal/os/ZygoteConnection.java:716private void handleChildProc(Arguments parsedArgs, FileDescriptor[] descriptors, FileDescriptor pipeFd, PrintStream newStderr) throws ZygoteInit.MethodAndArgsCaller { /** * By the time we get here, the native code has closed the two actual Zygote * socket connections, and substituted /dev/null in their place. The LocalSocket * objects still need to be closed properly. */ closeSocket(); ZygoteInit.closeServerSocket(); if (descriptors != null) { try { Os.dup2(descriptors[0], STDIN_FILENO); Os.dup2(descriptors[1], STDOUT_FILENO); Os.dup2(descriptors[2], STDERR_FILENO); for (FileDescriptor fd: descriptors) { IoUtils.closeQuietly(fd); } newStderr = System.err; } catch (ErrnoException ex) ... } if (parsedArgs.niceName != null) { Process.setArgV0(parsedArgs.niceName); } // End of the postFork event. ... if (parsedArgs.invokeWith != null) { ... } else { // &#x1F3C1;&#x5728;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x521D;&#x59CB;&#x5316;&#x8FD0;&#x884C;&#x65F6;&#x5E93;&#x3001;&#x542F;&#x52A8;Binder&#x7EBF;&#x7A0B;&#x6C60; RuntimeInit.zygoteInit(parsedArgs.targetSdkVersion, parsedArgs.remainingArgs, null /* classLoader */); }} Step7 RuntimeInit::zygoteInit(...) 12345678// frameworks/base/core/java/com/android/internal/os/RuntimeInit.java:269public static final void zygoteInit(int targetSdkVersion, String[] argv, ClassLoader classLoader) throws ZygoteInit.MethodAndArgsCaller { ... commonInit(); // &#x521D;&#x59CB;&#x5316;&#x8FD0;&#x884C;&#x65F6;&#x5E93; nativeZygoteInit(); // &#x1F3C1;&#x542F;&#x52A8;Binder&#x7EBF;&#x7A0B;&#x6C60; applicationInit(targetSdkVersion, argv, classLoader); // &#x1F3C1;step10&#x521B;&#x5EFA;&#x6D88;&#x606F;&#x5FAA;&#x73AF;} &#x81F3;&#x6B64;&#xFF0C;&#x53C8;&#x4E0E;system&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x903B;&#x8F91;&#x91CD;&#x5408;&#x4E86;&#xFF0C;&#x652F;&#x6301;&#x903B;&#x8F91;&#x91CD;&#x5408;&#xFF0C;&#x6570;&#x636E;&#xFF08;&#x53C2;&#x6570;&#xFF09;&#x5374;&#x4E0D;&#x540C;&#x3002; &#x5176;&#x4E2D;nativeZygoteInit()&#x662F;&#x4E00;&#x4E2A;JNI&#x65B9;&#x6CD5;&#xFF0C;&#x5728;frameworks/base/core/jni/AndroidRuntime.cpp:219&#x4E2D;&#x6709;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#xFF1A; 123456static JNINativeMethod gMethods[] = { ... { &quot;nativeZygoteInit&quot;, &quot;()V&quot;, (void*) com_android_internal_os_RuntimeInit_nativeZygoteInit }, ...}; &#x63A5;&#x4E0B;&#x6765;&#x770B;&#x8FD9;&#x4E2A;JNI&#x65B9;&#x6CD5;&#x3002; # Step8 com_android_internal_os_RuntimeInit_nativeZygoteInit(...) 1234567891011// frameworks/base/core/jni/AndroidRuntime.cpp:205static void com_android_internal_os_RuntimeInit_nativeZygoteInit(JNIEnv* env, jobject clazz){ gCurRuntime-&gt;onZygoteInit(); // &#x1F3C1;}// :238AndroidRuntime::AndroidRuntime(char* argBlockStart, const size_t argBlockLength) : ...{ ... gCurRuntime = this;} &#x5728;zygote&#x8FDB;&#x7A0B;&#x7684;main&#x51FD;&#x6570;&#x7684;&#x5934;&#x90E8;&#xFF0C;&#x5B9A;&#x4E49;&#x4E86;AppRuntime&#x53D8;&#x91CF;&#xFF0C;AppRuntime&#x7EE7;&#x627F;&#x81EA;AndroidRuntime&#xFF0C;&#x56E0;&#x6B64;&#x5728;zygote&#x8FDB;&#x7A0B;&#x4E2D;gCurRuntime&#x7684;&#x7C7B;&#x578B;&#x5373;&#x4E3A;AppRuntime&#x3002; # Step9 AppRuntime::onZygoteInit() 1234567// frameworks/base/cmds/app_process/app_main.cpp:91virtual void onZygoteInit(){ sp&lt;ProcessState&gt; proc = ProcessState::self(); ... proc-&gt;startThreadPool(); // } Step10 RuntimeInit::applicationInit(...) 12345678910111213141516171819202122// frameworks/base/core/java/com/android/internal/os/RuntimeInit.java::299private static void applicationInit(int targetSdkVersion, String[] argv, ClassLoader classLoader) throws ZygoteInit.MethodAndArgsCaller { // If the application calls System.exit(), terminate the process // immediately without running any shutdown hooks. It is not possible to // shutdown an Android application gracefully. Among other things, the // Android runtime shutdown hooks close the Binder driver, which can cause // leftover running threads to crash before the process actually exits. nativeSetExitWithoutCleanup(true); // We want to be fairly aggressive about heap utilization, to avoid // holding on to a lot of memory that isn&apos;t needed. VMRuntime.getRuntime().setTargetHeapUtilization(0.75f); VMRuntime.getRuntime().setTargetSdkVersion(targetSdkVersion); final Arguments args; try { args = new Arguments(argv); } catch (IllegalArgumentException ex) {...} ... // Remaining arguments are passed to the start class&apos;s static main // &#x1F3C1;&#x8C03;&#x7528;&#x51FD;&#x6570;android.app.ActivityThread::main(...) invokeStaticMain(args.startClass, args.startArgs, classLoader);} &#x5176;&#x4E2D;args.startClass&#x6765;&#x81EA;step1&#x4E2D;Process.start(...)&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#xFF1A;&quot;android.app.ActivityThread&quot;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5B83;&#x8C03;&#x7528;&#x5230;andoird.app.ActivityThread::main(...)&#x51FD;&#x6570;&#x3002; Step11 ActivityThread::main(...) 1234567891011// frameworks/base/core/java/android/app/ActivityThread.java:5379public static void main(String[] args) { ... Looper.prepareMainLooper(); // &#x521B;&#x5EFA;&#x6D88;&#x606F;&#x5FAA;&#x73AF; ActivityThread thread = new ActivityThread(); thread.attach(false); ... Looper.loop(); // &#x8FDB;&#x5165;&#x6D88;&#x606F;&#x5FAA;&#x73AF; ...} &#x603B;&#x7ED3; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x5F53;&#x9700;&#x8981;&#x542F;&#x52A8;&#x65B0;&#x8FDB;&#x7A0B;&#x65F6;&#xFF0C;ActivityManagerService&#x4F1A;&#x5411;Zygote&#x7684;socket&#x5199;&#x5165;&#x521B;&#x5EFA;&#x8BF7;&#x6C42;&#xFF0C;&#x7531;Zygote&#x5206;&#x88C2;&#x51FA;&#x65B0;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x5E76;&#x5C06;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;pid&#x5199;&#x5165;socket&#x8FD4;&#x56DE;&#x7ED9;Zygote&#xFF0C;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Android进程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创世记（二）——system进程的启动]]></title>
    <url>%2F2017%2F01%2F28%2F2017%2F0128init2%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;&#x521B;&#x4E16;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;Zygote&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x4E4B;Step10 ZygoteInit::startSystemServer(&#x2026;)&#x4E2D;&#xFF0C;Zygote&#x542F;&#x52A8;system&#x8FDB;&#x7A0B;&#xFF0C;&#x5E76;&#x6267;&#x884C;ZygoteInit::handleSystemServerProcess(...)&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x8BE5;&#x8FDB;&#x7A0B;&#x5165;&#x53E3;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4E00;&#x6B21;&#x51FD;&#x6570;&#x4E3A;&#x8D77;&#x70B9;&#x7EE7;&#x7EED;&#x5206;&#x6790;&#x3002; Step1 ZygoteInit::handleSystemServerProcess(...) 123456789101112131415161718// frameworks/base/core/java/com/android/internal/os/ZygoteInit.java:415private static void handleSystemServerProcess( ZygoteConnection.Arguments parsedArgs) throws ZygoteInit.MethodAndArgsCaller { closeServerSocket(); // &#x7531;&#x4E8E;&#x662F;&#x4ECE;Zygote&#x8FDB;&#x7A0B;fork&#x800C;&#x6765;&#xFF0C;&#x5148;&#x5173;&#x95ED;&#x6389;system&#x4E0D;&#x9700;&#x8981;&#x7684;socket ... if (parsedArgs.invokeWith != null) {... } else { ... /* * &#x1F3C1;Pass the remaining arguments to SystemServer. */ RuntimeInit.zygoteInit(parsedArgs.targetSdkVersion, parsedArgs.remainingArgs, cl); } /* should never reach here */} Step2 RuntimeInit::zygoteInit(...) 1234567891011121314151617181920212223242526272829303132// frameworks/base/core/java/com/android/internal/os/RuntimeInit.java:269 public static final void zygoteInit(int targetSdkVersion, String[] argv, ClassLoader classLoader) throws ZygoteInit.MethodAndArgsCaller { ... commonInit(); nativeZygoteInit(); // &#x542F;&#x52A8;&#x4E00;&#x4E2A;Binder&#x7EBF;&#x7A0B;&#x6C60; applicationInit(targetSdkVersion, argv, classLoader); }// :299private static void applicationInit(int targetSdkVersion, String[] argv, ClassLoader classLoader) throws ZygoteInit.MethodAndArgsCaller { // If the application calls System.exit(), terminate the process // immediately without running any shutdown hooks. It is not possible to // shutdown an Android application gracefully. Among other things, the // Android runtime shutdown hooks close the Binder driver, which can cause // leftover running threads to crash before the process actually exits. nativeSetExitWithoutCleanup(true); // We want to be fairly aggressive about heap utilization, to avoid // holding on to a lot of memory that isn&apos;t needed. VMRuntime.getRuntime().setTargetHeapUtilization(0.75f); VMRuntime.getRuntime().setTargetSdkVersion(targetSdkVersion); final Arguments args; try { args = new Arguments(argv); } catch (IllegalArgumentException ex) {...} ... // Remaining arguments are passed to the start class&apos;s static main // &#x1F3C1;&#x8C03;&#x7528;&#x51FD;&#x6570;com.android.server.SystemServer::main(...) invokeStaticMain(args.startClass, args.startArgs, classLoader);} &#x53C2;&#x89C1;&#x300A;&#x521B;&#x4E16;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;Zygote&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x4E4B;Step10&#xFF0C;&#x5728;&#x51FD;&#x6570;ZygoteInit::startSystemServer(&#x2026;)&#x4E2D;&#x4EE5;&#x786C;&#x7F16;&#x7801;&#x7684;&#x5F62;&#x5F0F;&#x7EC4;&#x7EC7;system&#x7684;&#x542F;&#x52A8;&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x4E2D;args.startClass=&quot;com.android.server.SystemServer&quot;&#x3002; Step3 RuntimeInit::invokeStaticMain(...) 12345678910111213141516171819202122// frameworks/base/core/java/com/android/internal/os/RuntimeInit.java:198private static void invokeStaticMain(String className, String[] argv, ClassLoader classLoader) throws ZygoteInit.MethodAndArgsCaller { Class&lt;?&gt; cl; try { cl = Class.forName(className, true, classLoader); } catch (ClassNotFoundException ex) {...} Method m; try { m = cl.getMethod(&quot;main&quot;, new Class[] { String[].class }); } catch ... /* * This throw gets caught in ZygoteInit.main(), which responds * by invoking the exception&apos;s run() method. This arrangement * clears up all the stack frames that were required in setting * up the process. */ throw new ZygoteInit.MethodAndArgsCaller(m, argv);} &#x51FD;&#x6570;&#x5C3E;&#x90E8;&#x7684;&#x6CE8;&#x91CA;&#x8BF4;&#x7684;&#x5F88;&#x660E;&#x767D;&#xFF0C;&#x5F02;&#x5E38;&#x662F;&#x5728;&#x300A;&#x521B;&#x4E16;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;Zygote&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x300B;&#x4E4B;Step8&#xFF0C;ZygoteInit::main&#x51FD;&#x6570;&#x4E2D;&#x6355;&#x83B7;&#x548C;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x662F;com.android.server.SystemServer::main&#x51FD;&#x6570;&#xFF0C;&#x6355;&#x83B7;&#x8BE5;&#x5F02;&#x5E38;&#x540E;&#x5C06;&#x6267;&#x884C;&#x6B64;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x4E2A;&#x624B;&#x6CD5;&#x662F;&#x4E3A;&#x4E86;&#x6E05;&#x9664;&#x6240;&#x6709;&#x5806;&#x6808;&#xFF0C;&#x4F7F;system&#x8FDB;&#x7A0B;&#x8BA4;&#x4E3A;&#x51FD;&#x6570;com.android.server.SystemServer::main&#x662F;&#x8FDB;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x8D77;&#x70B9;&#x3002; Step4 SystemServer::main(...) 1234567891011121314151617181920// frameworks/base/services/java/com/android/server/SystemServer.javapublic final class SystemServer {// :167 public static void main(String[] args) { new SystemServer().run(); }// :176 private void run() { ... // Start services. try { startBootstrapServices(); // &#x1F3C1; startCoreServices(); startOtherServices(); } catch (Throwable ex) {...} ... // Loop forever. Looper.loop(); ... } Step5 SystemServer::startBootstrapServices() &#x5728;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5F88;&#x591A;&#x719F;&#x6089;&#x7684;Service&#x542F;&#x52A8; 123456789101112131415161718192021222324// frameworks/base/services/java/com/android/server/SystemServer.java:322private void startBootstrapServices() { ... // Activity manager runs the show. mActivityManagerService = mSystemServiceManager.startService( ActivityManagerService.Lifecycle.class).getService(); ... mPowerManagerService = mSystemServiceManager.startService(PowerManagerService.class); ... mSystemServiceManager.startService(LightsService.class); ... mDisplayManagerService = mSystemServiceManager.startService(DisplayManagerService.class); ... mSystemServiceManager.startBootPhase(SystemService.PHASE_WAIT_FOR_DEFAULT_DISPLAY); ... mPackageManagerService = PackageManagerService.main(mSystemContext, installer, mFactoryTestMode != FactoryTest.FACTORY_TEST_OFF, mOnlyCore); ... startSensorService();} &#x603B;&#x7ED3; &#x672C;&#x8282;system&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x53EA;&#x662F;&#x524D;&#x4E00;&#x8282;Zygote&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x7684;&#x4E00;&#x4E2A;&#x73AF;&#x8282;&#xFF0C;system&#x8FDB;&#x7A0B;&#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x542F;&#x52A8;&#x4E86;&#x82E5;&#x5E72;&#x7CFB;&#x7EDF;&#x670D;&#x52A1;&#xFF0C;&#x5982;ActivityManagerService&#x3001;PackageManagerService&#x7B49;&#x3002;&#x542F;&#x52A8;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#x8FD4;&#x56DE;&#x5230;Zygote&#x8FDB;&#x7A0B;&#x7684;ZygoteInit::main(&#x2026;)&#x51FD;&#x6570;&#xFF0C;&#x5C06;&#x7B49;&#x5F85;&#x5904;&#x7406;&#x6765;&#x81EA;ActivityManagerService&#x542F;&#x52A8;&#x65B0;&#x8FDB;&#x7A0B;&#x7684;&#x8BF7;&#x6C42;&#x3002; system&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>system进程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创世记（一）——Zygote进程的启动]]></title>
    <url>%2F2017%2F01%2F27%2F2017%2F0127init1%2F</url>
    <content type="text"><![CDATA[Android&#x7CFB;&#x7EDF;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x662F;init&#xFF0C;&#x5B83;&#x5C06;Zygote&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x8D77;&#x6765;&#xFF0C;&#x6240;&#x6709;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#x4EE5;&#x53CA;&#x8FD0;&#x884C;&#x7CFB;&#x7EDF;&#x5173;&#x952E;&#x670D;&#x52A1;&#x7684;System&#x8FDB;&#x7A0B;&#x7531;Zygote&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x3002; Step1 init.rc&#x811A;&#x672C; init&#x542F;&#x52A8;&#x540E;&#x4F1A;&#x6839;&#x636E;init.rc&#x521B;&#x5EFA;Zygote&#x8FDB;&#x7A0B;&#xFF0C;init.rc&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 123456789// system/core/rootdir/init.rc...import /init.environ.rcimport /init.usb.rcimport /init.${ro.hardware}.rcimport /init.usb.configfs.rcimport /init.${ro.zygote}.rcimport /init.trace.rc... Android 5.0&#x5F00;&#x59CB;&#x652F;&#x6301;64&#x4F4D;&#x7A0B;&#x5E8F;&#xFF0C;&#x6240;&#x4EE5;&#x5728;init.rc&#x4E2D;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x60C5;&#x51B5;&#x5F15;&#x5165;&#x4E0D;&#x540C;&#x811A;&#x672C;&#x3002;&#x5728;system/core/rootdir&#x4E0B;&#xFF0C;zygote&#x6709;&#x56DB;&#x4E2A;&#x914D;&#x7F6E;&#xFF1A; &#x811A;&#x672C;&#x540D;&#x79F0; &#x8BF4;&#x660E; init.zygote32.rc &#x7EAF;32&#x4F4D;&#x6A21;&#x5F0F;&#xFF0C;zygote&#x8FDB;&#x7A0B;&#x5BF9;&#x5E94;app_process init.zygote32_64.rc &#x7EAF;64&#x4F4D;&#x6A21;&#x5F0F;&#xFF0C;zygote&#x8FDB;&#x7A0B;&#x5BF9;&#x5E94;app_process64 init.zygote64.rc &#x542F;&#x52A8;&#x4E24;&#x4E2A;zygote&#x8FDB;&#x7A0B;(zygote&#x548C;zygote_secondary)&#x5206;&#x522B;&#x5BF9;&#x5E94;app_process32&#xFF08;&#x4E3B;&#x6A21;&#x5F0F;&#xFF09;&#x548C;app_process64 init.zygote64_32.rc &#x542F;&#x52A8;&#x4E24;&#x4E2A;zygote&#x8FDB;&#x7A0B;(zygote&#x548C;zygote_secondary)&#x5206;&#x522B;&#x5BF9;&#x5E94;app_process64(&#x4E3B;&#x6A21;&#x5F0F;)&#x548C;app_process32 Step2 init.zygote32.rc &#x6765;&#x770B;init.zygote32.rc&#xFF1A; 12345678service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server class main socket zygote stream 660 root system onrestart write /sys/android_power/request_state wake onrestart write /sys/power/state on onrestart restart media onrestart restart netd writepid /dev/cpuset/foreground/tasks &#x811A;&#x672C;&#x683C;&#x5F0F;&#x8BF4;&#x660E;&#x53EF;&#x53C2;&#x89C1;system/core/init/readme.txt&#x3002; service&#x662F;&#x7531;init&#x542F;&#x52A8;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; 1234service &lt;name&gt; &lt;pathname&gt; [ &lt;argument&gt; ]* &lt;option&gt; &lt;option&gt; ... option&#x7528;&#x4E8E;&#x4FEE;&#x9970;service&#xFF0C;&#x4ED6;&#x4EEC;&#x4F1A;&#x5F71;&#x54CD;&#x5230;init&#x542F;&#x52A8;service&#x7684;&#x65F6;&#x673A;&#x548C;&#x65B9;&#x5F0F;&#x3002;&#x76F8;&#x5173;&#x7684;option&#x7C7B;&#x683C;&#x5F0F;&#x8BF4;&#x660E;&#xFF1A; 1234567891011socket &lt;name&gt; &lt;type&gt; &lt;perm&gt; [ &lt;user&gt; [ &lt;group&gt; [ &lt;seclabel&gt; ] ] ] &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#x4E3A;/dev/socket/&lt;name&gt;&#x7684;&#x5957;&#x63A5;&#x5B57;&#xFF0C;&#x5E76;&#x628A;&#x63CF;&#x8FF0;&#x7B26;&#x4F20;&#x7ED9;&#x8FDB;&#x7A0B;&#x3002;&lt;type&gt;&#x5FC5;&#x53D6;&quot;dgram&quot;&#x3001;&quot;stream&quot;&#x6216;&quot;seqpacket&quot;&#x4E4B;&#x4E00;&#x3002;&lt;user&gt;&#x3001;&lt;group&gt;&#x9ED8;&#x8BA4;&#x4E3A;0.&lt;seclable&gt;&#x662F;&#x5957;&#x63A5;&#x5B57;&#x7684;SELinux&#x5B89;&#x5168;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;service&#x7684;&#x5B89;&#x5168;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x6216;&#x8005;&#x7531;seclable&#x6307;&#x5B9A;&#xFF0C;&#x6216;&#x8005;&#x57FA;&#x4E8E;service&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x5B89;&#x5168;&#x4E0A;&#x4E0B;&#x6587;&#x8BA1;&#x7B97;&#x5F97;&#x51FA;&#x3002;&#x5176;&#x4E2D;perm&#x7684;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x662F;&#x7531;w=4,r=2,x=1&#x7EC4;&#x5408;&#x800C;&#x6210;&#xFF0C;&#x4E09;&#x4E2A;&#x6570;&#x5B57;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5B9A;&#x4E49;owner&#x3001;group&#x3001;other&#x7684;&#x6743;&#x9650;&#x3002;class &lt;name&gt; &#x6307;&#x5B9A;&#x670D;&#x52A1;&#x6240;&#x5728;&#x7C7B;&#x540D;&#xFF0C;&#x4EE5;&#x4FBF;&#x76F8;&#x540C;&#x7C7B;&#x540D;&#x7684;&#x670D;&#x52A1;&#x53EF;&#x4EE5;&#x4E00;&#x8D77;&#x542F;&#x52A8;&#x548C;&#x505C;&#x6B62;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;&quot;default&quot;&#x3002;onrestart &#x91CD;&#x542F;&#x65F6;&#x6267;&#x884C;&#x4E00;&#x6761;&#x547D;&#x4EE4;&#x3002;writepid &lt;file...&gt; &#x6267;&#x884C;fork&#x65F6;&#xFF0C;&#x628A;&#x5B50;&#x8FDB;&#x7A0B;id&#x5199;&#x5165;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x3002; &#x56E0;&#x6B64;&#x518D;&#x6765;&#x89E3;&#x8BFB;init.zygote32.rc&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x540D;&#x79F0;&#x4E3A;zygote&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x8BE5;&#x670D;&#x52A1;&#x6267;&#x884C;&#x6587;&#x4EF6;/syste/bin/app_process&#x53C2;&#x6570;&#x4E3A;&#xFF1A;-Xzygote /system/bin --zygote --start-system-server&#x3002;&#x5B83;&#x521B;&#x5EFA;&#x7684;socket&#x5BF9;&#x4E8E;owner&#x548C;group&#x5747;&#x4E3A;&#x53EF;&#x8BFB;&#x5199;&#x3002; Step3 service_start(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152// system/core/init/init.cpp:187void service_start(struct service *svc, const char *dynamic_args){ ... pid_t pid = fork(); // &#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x4E3A;init if (pid == 0) { // &#x5728;&#x5B50;&#x8FDB;&#x7A0B;&#xFF08;&#x5373;Zygote&#x8FDB;&#x7A0B;&#xFF09;&#x4E2D;&#x8FD4;&#x56DE; struct socketinfo *si; ... // svn-&gt;sockets&#x5373;&#x5728;init.zygote*.rc&#x4E2D;&#x7684;socket&#x90E8;&#x5206; // &#x904D;&#x5386;&#x8BE5;&#x90E8;&#x5206;&#x7684;&#x6240;&#x6709;socket&#x914D;&#x7F6E;&#xFF0C;&#x5E76;&#x521B;&#x5EFA; for (si = svc-&gt;sockets; si; si = si-&gt;next) { int socket_type = ( !strcmp(si-&gt;type, &quot;stream&quot;) ? SOCK_STREAM : (!strcmp(si-&gt;type, &quot;dgram&quot;) ? SOCK_DGRAM : SOCK_SEQPACKET)); // &#x1F3C1; Step4 int s = create_socket(si-&gt;name, socket_type, si-&gt;perm, si-&gt;uid, si-&gt;gid, si-&gt;socketcon ?: scon); if (s &gt;= 0) { publish_socket(si-&gt;name, s); // &#x1F3C1; Step5 } } ... // dynamic_args&#x662F;&#x8BE5;&#x670D;&#x52A1;&#x7684;&#x52A8;&#x6001;&#x542F;&#x52A8;&#x53C2;&#x6570;&#x5217;&#x8868; if (!dynamic_args) { // svn-&gt;args[0] = &quot;/system/bin/app_process&quot; // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x52A8;&#x6001;&#x542F;&#x52A8;&#x53C2;&#x6570;&#x5217;&#x8868;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x6267;&#x884C;init.zygote*.rc&#x4E2D;&#x7684;&#x547D;&#x4EE4; if (execve(svc-&gt;args[0], (char**) svc-&gt;args, (char**) ENV) &lt; 0) { ... } } else { // &#x5426;&#x5219;&#x628A;&#x52A8;&#x6001;&#x53C2;&#x6570;&#x548C;&#x9759;&#x6001;&#x53C2;&#x6570;&#x5408;&#x5E76;&#x5230;arg_ptrs&#x4E2D;&#x518D;&#x6267;&#x884C;service&#x547D;&#x4EE4; char *arg_ptrs[INIT_PARSER_MAXARGS+1]; int arg_idx = svc-&gt;nargs; char *tmp = strdup(dynamic_args); char *next = tmp; char *bword; /* Copy the static arguments */ memcpy(arg_ptrs, svc-&gt;args, (svc-&gt;nargs * sizeof(char *))); while((bword = strsep(&amp;next, &quot; &quot;))) { arg_ptrs[arg_idx++] = bword; if (arg_idx == INIT_PARSER_MAXARGS) break; } arg_ptrs[arg_idx] = NULL; execve(svc-&gt;args[0], (char**) arg_ptrs, (char**) ENV); } _exit(127); } ...} Step4 create_socket(...) 123456789101112131415161718192021222324252627// system/core/init/util.cpp:91int create_socket(const char *name, int type, mode_t perm, uid_t uid, gid_t gid, const char *socketcon){ // name = &quot;zygote&quot; // &#x6309;&#x7167;init.zygote*.rc&#x4E2D;&#x7684;&#x914D;&#x7F6E;&#x521B;&#x5EFA;socket&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x63CF;&#x8FF0;&#x7B26; struct sockaddr_un addr; int fd, ret; ... fd = socket(PF_UNIX, type, 0); ... memset(&amp;addr, 0 , sizeof(addr)); addr.sun_family = AF_UNIX; // ANDROID_SOCKET_DIR&#x4E3A;&quot;/dev/socket&quot; // addr.sun_path &#x4E3A;&quot;/dev/socket/zygote&quot; snprintf(addr.sun_path, sizeof(addr.sun_path), ANDROID_SOCKET_DIR&quot;/%s&quot;, name); ... ret = bind(fd, (struct sockaddr *) &amp;addr, sizeof (addr)); ... // perm&#x4E3A;660&#xFF0C;&#x5BF9;&#x4E8E;owner&#x548C;group&#x5747;&#x4E3A;&#x53EF;&#x8BFB;&#x5199; chown(addr.sun_path, uid, gid); chmod(addr.sun_path, perm); ... return fd; ...} Step5 publish_socket(...) 12345678910111213141516// system/core/init/init.cpp:172static void publish_socket(const char *name, int fd){ char key[64] = ANDROID_SOCKET_ENV_PREFIX; // &quot;ANDROID_SOCKET_&quot; char val[64]; // key = &quot;ANDROID_SOCKET_zygote&quot; strlcpy(key + sizeof(ANDROID_SOCKET_ENV_PREFIX) - 1, name, sizeof(key) - sizeof(ANDROID_SOCKET_ENV_PREFIX)); snprintf(val, sizeof(val), &quot;%d&quot;, fd); add_environment(key, val); // &#x628A;&#x63CF;&#x8FF0;&#x7B26;&#x5199;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;&quot;ANDROID_SOCKET_zygote&quot; /* make sure we don&apos;t close-on-exec */ fcntl(fd, F_SETFD, 0);} &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x8FDB;&#x7A0B;init&#x6839;&#x636E;&#x914D;&#x7F6E;&#x6587;&#x4EF6;init.zygote*.rc&#xFF1A; * &#x9996;&#x5148;&#x521B;&#x5EFA;socket&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x63CF;&#x8FF0;&#x7B26;&#x5199;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF1B; * &#x7136;&#x540E;&#x627E;&#x5230;zygote&#x5BF9;&#x5E94;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x542F;&#x52A8;&#x8FDB;&#x7A0B;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x627E;&#x5230;system/bin/app_process&#x7684;&#x5165;&#x53E3;&#x51FD;&#x6570;&#x3002; Step6 app_process::main(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115// frameworks/base/cmds/app_process/app_main.cpp:186int main(int argc, char* const argv[]){ if (prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0) &lt; 0) {...} AppRuntime runtime(argv[0], computeArgBlockSize(argc, argv)); // Process command line arguments // ignore argv[0] argc--; argv++; // Everything up to &apos;--&apos; or first non &apos;-&apos; arg goes to the vm. // // The first argument after the VM args is the &quot;parent dir&quot;, which // is currently unused. // // After the parent dir, we expect one or more the following internal // arguments : // // --zygote : Start in zygote mode // --start-system-server : Start the system server. // --application : Start in application (stand alone, non zygote) mode. // --nice-name : The nice name for this process. // // For non zygote starts, these arguments will be followed by // the main class name. All remaining arguments are passed to // the main method of this class. // // For zygote starts, all remaining arguments are passed to the zygote. // main function. // // Note that we must copy argument string values since we will rewrite the // entire argument block when we apply the nice name to argv0. int i; for (i = 0; i &lt; argc; i++) { if (argv[i][0] != &apos;-&apos;) { break; } if (argv[i][1] == &apos;-&apos; &amp;&amp; argv[i][2] == 0) { ++i; // Skip --. break; } runtime.addOption(strdup(argv[i])); } // Parse runtime arguments. Stop at first unrecognized option. bool zygote = false; bool startSystemServer = false; bool application = false; String8 niceName; String8 className; ++i; // Skip unused &quot;parent dir&quot; argument. while (i &lt; argc) { const char* arg = argv[i++]; if (strcmp(arg, &quot;--zygote&quot;) == 0) { zygote = true; // &#x7531;init.zygote*.rc&#x53EF;&#x77E5;&#x8BE5;&#x503C;&#x4E3A;true niceName = ZYGOTE_NICE_NAME; // &quot;zygote&quot; } else if (strcmp(arg, &quot;--start-system-server&quot;) == 0) { startSystemServer = true; } else if (strcmp(arg, &quot;--application&quot;) == 0) { application = true; } else if (strncmp(arg, &quot;--nice-name=&quot;, 12) == 0) { niceName.setTo(arg + 12); } else if (strncmp(arg, &quot;--&quot;, 2) != 0) { className.setTo(arg); break; } else { --i; break; } } Vector&lt;String8&gt; args; if (!className.isEmpty()) { // className &#x4E3A;&#x7A7A; // We&apos;re not in zygote mode, the only argument we need to pass // to RuntimeInit is the application argument. // // The Remainder of args get passed to startup class main(). Make // copies of them before we overwrite them with the process name. args.add(application ? String8(&quot;application&quot;) : String8(&quot;tool&quot;)); runtime.setClassNameAndArgs(className, argc - i, argv + i); } else { // We&apos;re in zygote mode. maybeCreateDalvikCache(); if (startSystemServer) { args.add(String8(&quot;start-system-server&quot;)); } char prop[PROP_VALUE_MAX]; if (property_get(ABI_LIST_PROPERTY, prop, NULL) == 0) {...} String8 abiFlag(&quot;--abi-list=&quot;); abiFlag.append(prop); args.add(abiFlag); // In zygote mode, pass all remaining arguments to the zygote // main() method. for (; i &lt; argc; ++i) { args.add(String8(argv[i])); } } if (!niceName.isEmpty()) { // niceName = &quot;zygote&quot; runtime.setArgv0(niceName.string()); set_process_name(niceName.string()); // &#x8FDB;&#x7A0B;&#x540D;&#x8BBE;&#x7F6E;&#x4E3A;&quot;zygote&quot; } if (zygote) { // zygote = true // &#x1F3C1; runtime.start(&quot;com.android.internal.os.ZygoteInit&quot;, args, zygote); } else ...} Step7 AppRuntime::start(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475// frameworks/base/core/jni/AndroidRuntime.cpp:1007void AndroidRuntime::start(const char* className, const Vector&lt;String8&gt;&amp; options, bool zygote){ // className = &quot;com.android.internal.os.ZygoteInit&quot; // zygote = true ... const char* rootDir = getenv(&quot;ANDROID_ROOT&quot;); if (rootDir == NULL) { rootDir = &quot;/system&quot;; ... setenv(&quot;ANDROID_ROOT&quot;, rootDir, 1); } ... /* &#x521B;&#x5EFA;&#x865A;&#x62DF;&#x673A; */ JniInvocation jni_invocation; jni_invocation.Init(NULL); JNIEnv* env; if (startVm(&amp;mJavaVM, &amp;env, zygote) != 0) { return; } onVmCreated(env); /* * &#x5728;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#x6CE8;&#x518C;&#x4E00;&#x7CFB;&#x5217;JNI&#x65B9;&#x6CD5; */ if (startReg(env) &lt; 0) { ... return; } /* * We want to call main() with a String array with arguments in it. * At present we have two arguments, the class name and an option string. * Create an array to hold them. */ jclass stringClass; jobjectArray strArray; jstring classNameStr; stringClass = env-&gt;FindClass(&quot;java/lang/String&quot;); ... // &#x521B;&#x5EFA;string array&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x542F;&#x52A8;&#x53C2;&#x6570;&#x5217;&#x8868; strArray = env-&gt;NewObjectArray(options.size() + 1, stringClass, NULL); ... // &#x521B;&#x5EFA;string&#x7528;&#x4E8E;&#x4FDD;&#x5B58;&#x7C7B;&#x540D; classNameStr = env-&gt;NewStringUTF(className); ... env-&gt;SetObjectArrayElement(strArray, 0, classNameStr); for (size_t i = 0; i &lt; options.size(); ++i) { // &#x521D;&#x59CB;&#x5316;&#x542F;&#x52A8;&#x53C2;&#x6570;&#x5217;&#x8868; jstring optionsStr = env-&gt;NewStringUTF(options.itemAt(i).string()); ... env-&gt;SetObjectArrayElement(strArray, i + 1, optionsStr); } /* * Start VM. This thread becomes the main thread of the VM, and will * not return until the VM exits. */ char* slashClassName = toSlashClassName(className); jclass startClass = env-&gt;FindClass(slashClassName); if (startClass == NULL) {... } else { jmethodID startMeth = env-&gt;GetStaticMethodID(startClass, &quot;main&quot;, &quot;([Ljava/lang/String;)V&quot;); // &#x83B7;&#x5F97;&#x5165;&#x53E3;&#x51FD;&#x6570; if (startMeth == NULL) {... } else { // &#x1F3C1;&#x8C03;&#x7528;com/android/internal/os/ZygoteInit::main(...)&#x51FD;&#x6570; env-&gt;CallStaticVoidMethod(startClass, startMeth, strArray);... } } free(slashClassName); ...} &#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;zygote&#x7684;main&#x51FD;&#x6570;&#x91CC;&#x542F;&#x52A8;&#x4E86;&#x865A;&#x62DF;&#x673A;&#xFF0C;&#x5E76;&#x5728;&#x865A;&#x62DF;&#x673A;&#x91CC;&#x6267;&#x884C;&#x51FD;&#x6570;com.android.internal.os.ZygoteInit::main&#x3002; # Step8 ZygoteInit::main(...) 1234567891011121314151617181920212223242526272829303132333435363738394041// frameworks/base/core/java/com/android/internal/os/ZygoteInit.javapackage com.android.internal.os;...public class ZygoteInit {...//:565 public static void main(String argv[]) { try { RuntimeInit.enableDdms(); // Start profiling the zygote initialization. SamplingProfilerIntegration.start(); boolean startSystemServer = false; String socketName = &quot;zygote&quot;; String abiList = null; for (int i = 1; i &lt; argv.length; i++) { if (&quot;start-system-server&quot;.equals(argv[i])) { startSystemServer = true; // &#x56DE;&#x987E;init.zygote*.rc&#xFF0C;&#x8BE5;&#x503C;&#x4E3A;true } else if (argv[i].startsWith(ABI_LIST_ARG)) { abiList = argv[i].substring(ABI_LIST_ARG.length()); } else if (argv[i].startsWith(SOCKET_NAME_ARG)) { socketName = argv[i].substring(SOCKET_NAME_ARG.length()); } else {...} } ... // &#x1F3C1;Step9 &#x521B;&#x5EFA;&#x4E00;&#x4E2A;server&#x7AEF;socket&#xFF0C;&#x7528;&#x6765;&#x7B49;&#x5F85;ActivityManagerService // &#x8BF7;&#x6C42;Zygote&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B; registerZygoteSocket(socketName); // socketName=&quot;zygote&quot; ... if (startSystemServer) { // true // &#x1F3C1;Step10 &#x542F;&#x52A8;system&#x8FDB;&#x7A0B;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x5C06;&#x7CFB;&#x7EDF;&#x7684;&#x5173;&#x952E;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x8D77;&#x6765; startSystemServer(abiList, socketName); } // &#x1F3C1;Step11&#x7B49;&#x5F85;ActivityManagerService&#x8BF7;&#x6C42;Zygote&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B; runSelectLoop(abiList); ... } catch (MethodAndArgsCaller caller) { caller.run(); } catch (RuntimeException ex) {...} } Step9 ZygoteInit::registerZygoteSocket(...) 12345678910111213141516171819202122// frameworks/base/core/java/com/android/internal/os/ZygoteInit.java:107private static void registerZygoteSocket(String socketName) { // socketName = &quot;zygote&quot; if (sServerSocket == null) { int fileDesc; // fullSocketName = &quot;ANDROID_SOCKET_zygote&quot; // &#x5728;Step5&#x4E2D;&#x5C06;socket&#x63CF;&#x8FF0;&#x7B26;&#x5199;&#x5165;&#x8BE5;&#x73AF;&#x5883;&#x53D8;&#x91CF; final String fullSocketName = ANDROID_SOCKET_PREFIX + socketName; try { String env = System.getenv(fullSocketName); fileDesc = Integer.parseInt(env); // &#x53D6;&#x51FA;socket&#x63CF;&#x8FF0;&#x7B26; } catch (RuntimeException ex) {...} try { FileDescriptor fd = new FileDescriptor(); fd.setInt$(fileDesc); // &#x6839;&#x636E;&#x63CF;&#x8FF0;&#x7B26;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;server&#x7AEF;socket&#xFF0C;zygote&#x5C06;system&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x540E;&#x5C31;&#x4F1A;&#x5728;&#x6B64; // socket&#x4E0A;&#x7B49;&#x5F85;ActivityManagerService&#x6765;&#x8BF7;&#x6C42;&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B; sServerSocket = new LocalServerSocket(fd); } catch (IOException ex) {...} }} Step10 ZygoteInit::startSystemServer(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051// frameworks/base/core/java/com/android/internal/os/ZygoteInit.java:493private static boolean startSystemServer(String abiList, String socketName) throws MethodAndArgsCaller, RuntimeException { long capabilities = posixCapabilitiesAsBits( OsConstants.CAP_BLOCK_SUSPEND, OsConstants.CAP_KILL, OsConstants.CAP_NET_ADMIN, OsConstants.CAP_NET_BIND_SERVICE, OsConstants.CAP_NET_BROADCAST, OsConstants.CAP_NET_RAW, OsConstants.CAP_SYS_MODULE, OsConstants.CAP_SYS_NICE, OsConstants.CAP_SYS_RESOURCE, OsConstants.CAP_SYS_TIME, OsConstants.CAP_SYS_TTY_CONFIG ); /* &#x6784;&#x9020;system&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x53C2;&#x6570;*/ String args[] = { &quot;--setuid=1000&quot;, &quot;--setgid=1000&quot;, &quot;--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1021,1032,3001,3002,3003,3006,3007&quot;, &quot;--capabilities=&quot; + capabilities + &quot;,&quot; + capabilities, &quot;--nice-name=system_server&quot;, &quot;--runtime-args&quot;, &quot;com.android.server.SystemServer&quot;, }; ZygoteConnection.Arguments parsedArgs = null; int pid; try { parsedArgs = new ZygoteConnection.Arguments(args); ... /* &#x521B;&#x5EFA;system&#x8FDB;&#x7A0B; */ pid = Zygote.forkSystemServer( parsedArgs.uid, parsedArgs.gid, parsedArgs.gids, parsedArgs.debugFlags, null, parsedArgs.permittedCapabilities, parsedArgs.effectiveCapabilities); } catch (IllegalArgumentException ex) {...} /* For child process */ if (pid == 0) { ... handleSystemServerProcess(parsedArgs); // &#x1F3C1;&#x5728;&#x65B0;&#x7684;&#x5B50;&#x8FDB;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x4E0B;&#x4E00;&#x8282;&#x4ECB;&#x7ECD; } return true;} Step11 ZygoteInit::runSelectLoop(...) 123456789101112131415161718192021222324252627282930313233343536373839404142// frameworks/base/core/java/com/android/internal/os/ZygoteInit.java:662 private static void runSelectLoop(String abiList) throws MethodAndArgsCaller { ArrayList&lt;FileDescriptor&gt; fds = new ArrayList&lt;FileDescriptor&gt;(); ArrayList&lt;ZygoteConnection&gt; peers = new ArrayList&lt;ZygoteConnection&gt;(); // sServerSocket&#x662F;Step9&#x4E2D;&#x521B;&#x5EFA;&#x7684;server&#x7AEF;socket fds.add(sServerSocket.getFileDescriptor()); peers.add(null); // &#x7B49;&#x5F85;ActivityManagerService&#x8BF7;&#x6C42;&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B; while (true) { // &#x5C06;fds&#x8F6C;&#x79FB;&#x5230;pollFds&#x4E2D; StructPollfd[] pollFds = new StructPollfd[fds.size()]; for (int i = 0; i &lt; pollFds.length; ++i) { pollFds[i] = new StructPollfd(); pollFds[i].fd = fds.get(i); pollFds[i].events = (short) POLLIN; } try { // &#x76D1;&#x63A7;socket&#x662F;&#x5426;&#x6709;&#x6570;&#x636E;&#x53EF;&#x8BFB; Os.poll(pollFds, -1); } catch (ErrnoException ex) {...} for (int i = pollFds.length - 1; i &gt;= 0; --i) { if ((pollFds[i].revents &amp; POLLIN) == 0) { continue; } if (i == 0) { // ActivityManagerService&#x901A;&#x8FC7;sServerSocket&#x4E0E;Zygote&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF0C; // &#x4F46;&#x8FD8;&#x6CA1;&#x6709;&#x8BF7;&#x6C42;&#x4F4D;&#x7F6E;&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x662F;&#x5C06;&#x6B64;&#x8FDE;&#x63A5;&#x6DFB;&#x52A0;&#x5230;peers&#x4E2D;&#xFF0C;&#x5E76;&#x5C06; // socket&#x63CF;&#x8FF0;&#x7B26;&#x6DFB;&#x52A0;&#x5230;fds&#xFF0C;&#x4E00;&#x8FB9;&#x63A5;&#x4E0B;&#x6765;&#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x5230;&#x521B;&#x5EFA;&#x8FDB;&#x7A0B;&#x7684;&#x8BF7;&#x6C42; ZygoteConnection newPeer = acceptCommandPeer(abiList); peers.add(newPeer); fds.add(newPeer.getFileDesciptor()); } else { // &#x5904;&#x7406;ActivityManagerService&#x7684;&#x521B;&#x5EFA;&#x8FDB;&#x7A0B;&#x7684;&#x8BF7;&#x6C42; boolean done = peers.get(i).runOnce(); if (done) { peers.remove(i); fds.remove(i); } } } } } &#x4E0E;Android2.x&#x76F8;&#x6BD4;&#xFF0C;&#x6B64;&#x5904;&#x4F7F;&#x7528;epoll&#x66FF;&#x4EE3;&#x4E86;select&#xFF0C;epoll&#x7684;&#x5177;&#x4F53;&#x7528;&#x6CD5;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x2014;&#x2014;Looper&#x673A;&#x5236;&#x300B;&#x3002; # &#x603B;&#x7ED3; Zygote&#x8FDB;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Zygote进程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[广播机制学习笔记（一）——BroadcastReceiver的注册]]></title>
    <url>%2F2017%2F01%2F01%2F2017%2F0104Broadcast1%2F</url>
    <content type="text"><![CDATA[&#x5E7F;&#x64AD;&#x7684;&#x4F7F;&#x7528;&#x5206;&#x4E24;&#x4E2A;&#x73AF;&#x8282;&#xFF1A;&#x6CE8;&#x518C;&#x548C;&#x53D1;&#x9001;/&#x63A5;&#x6536;&#x3002;&#x9996;&#x5148;&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#xFF0C;&#x624D;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5148;&#x7814;&#x7A76;&#x6CE8;&#x518C;&#x73AF;&#x8282;&#x3002; &#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;&#x8C03;&#x7528;registerReceiver(...)&#x6765;&#x5C06;&#x4E00;&#x4E2A;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;&#x6CE8;&#x518C;&#x5230;ActivityManagerService&#x4E2D;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6765;&#x81EA;ContextWrapper&#x7C7B;&#x3002; Step1 ContextWrapper::registerReceiver(...) 12345678910111213141516171819202122232425262728293031323334353637// frameworks/base/core/java/android/app/ContextImpl.java:1145 public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter) { return registerReceiver(receiver, filter, null, null); } public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler) { // getOuterContext()&#x8FD4;&#x56DE;&#x8C03;&#x7528;&#x8005;&#x6240;&#x5728;&#x7684;Activity&#x7EC4;&#x4EF6; return registerReceiverInternal(receiver, getUserId(), filter, broadcastPermission, scheduler, getOuterContext()); } ... private Intent registerReceiverInternal(BroadcastReceiver receiver, int userId, IntentFilter filter, String broadcastPermission, Handler scheduler, Context context) { IIntentReceiver rd = null; if (receiver != null) { if (mPackageInfo != null &amp;&amp; context != null) { if (scheduler == null) { // mMainThread&#x63CF;&#x8FF0;&#x5F53;&#x524D;&#x8FDB;&#x7A0B; // getHandler()&#x8FD4;&#x56DE;Handler&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x5411;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x53D1;&#x9001;&#x6D88;&#x606F; scheduler = mMainThread.getHandler(); } // &#x1F3C1;&#x5C06;receiver&#x5C01;&#x88C5;&#x6210;&#x5B9E;&#x73B0;&#x4E86;IIntentReceiver&#x63A5;&#x53E3;&#x7684;Binder&#x672C;&#x5730;&#x5BF9;&#x8C61;=&gt;rd rd = mPackageInfo.getReceiverDispatcher( receiver, context, scheduler, mMainThread.getInstrumentation(), true); } ... } try { // &#x1F3C1;Step4 &#x5C06;rd&#x53CA;filter&#x53D1;&#x9001;&#x7ED9;ActivityManagerService&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x5C06;rd // &#x6CE8;&#x518C;&#x5728;&#x5176;&#x5185;&#x90E8;&#xFF0C;&#x5E76;&#x5C06;filter&#x63CF;&#x8FF0;&#x7684;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x7ED9;&#x4ED6;&#x5904;&#x7406; return ActivityManagerNative.getDefault().registerReceiver( mMainThread.getApplicationThread(), mBasePackageName, rd, filter, broadcastPermission, userId); } catch (RemoteException e) ... } Step2 LoadedApk::getReceiverDispatcher(...) 1234567891011121314151617181920212223242526272829303132// frameworks/base/core/java/android/app/LoadedApk.java:706 public IIntentReceiver getReceiverDispatcher(BroadcastReceiver r, Context context, Handler handler, Instrumentation instrumentation, boolean registered) { synchronized (mReceivers) { LoadedApk.ReceiverDispatcher rd = null; ArrayMap&lt;BroadcastReceiver, LoadedApk.ReceiverDispatcher&gt; map = null; if (registered) { map = mReceivers.get(context); if (map != null) { rd = map.get(r); } } if (rd == null) { // &#x4FDD;&#x5B58;&#x6CE8;&#x518C;&#x5B83;&#x7684;Activity&#x7EC4;&#x4EF6;&#x4FE1;&#x606F; rd = new ReceiverDispatcher(r, context, handler, instrumentation, registered); if (registered) { if (map == null) { // &#x4EE5;context&#x4E3A;key&#x4FDD;&#x5B58;&#x5230;mReceivers map = new ArrayMap&lt;BroadcastReceiver, LoadedApk.ReceiverDispatcher&gt;(); mReceivers.put(context, map); } // &#x5C06;&#x88AB;&#x6CE8;&#x518C;&#x7684;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;r&#x4E0E;&#x6CE8;&#x518C;&#x5B83;&#x7684;Activity&#x7EC4;&#x4EF6;rd&#x5173;&#x8054;&#x8D77;&#x6765; map.put(r, rd); } } else { rd.validate(context, handler); } rd.mForgotten = false; return rd.getIIntentReceiver(); // &#x1F3C1; } } Step3 LoadedApk.ReceiverDispatcher::getIIntentReceiver() 12345678910111213141516171819202122232425262728293031323334353637// frameworks/base/core/java/android/app/LoadedApk.java:80public final class LoadedApk {// :786 static final class ReceiverDispatcher { // &#x2463; &#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x4E8E;&#x6B64; final static class InnerReceiver extends IIntentReceiver.Stub { final WeakReference&lt;LoadedApk.ReceiverDispatcher&gt; mDispatcher;... InnerReceiver(LoadedApk.ReceiverDispatcher rd, boolean strong) { mDispatcher = new WeakReference&lt;LoadedApk.ReceiverDispatcher&gt;(rd); ... } ... } ...// :827 final IIntentReceiver.Stub mIIntentReceiver; // &#x2461;&#x5B9A;&#x4E49;&#x4E8E;&#x6B64; final BroadcastReceiver mReceiver; // &#x4E0E;&#x8BE5;Activity&#x7EC4;&#x4EF6;&#x5173;&#x8054;&#x7684;BroadcastReceiver final Context mContext; // &#x6307;&#x5411;&#x8C03;&#x7528;&#x8005;&#x6240;&#x5728;&#x7684;Activity&#x7EC4;&#x4EF6; final Handler mActivityThread; // &#x4E0E;&#x8BE5;Activity&#x7EC4;&#x4EF6;&#x5173;&#x8054;&#x7684;Handler&#x5BF9;&#x8C61; ... ReceiverDispatcher(BroadcastReceiver receiver, Context context, Handler activityThread, Instrumentation instrumentation, boolean registered) { ... // &#x2462;&#x5728;&#x6B64;&#x5904;&#x521D;&#x59CB;&#x5316; mIIntentReceiver = new InnerReceiver(this, !registered); mReceiver = receiver; mContext = context; mActivityThread = activityThread; ... } ...// :944 IIntentReceiver getIIntentReceiver() { return mIIntentReceiver; // &#x2460; &#x8FD4;&#x56DE;&#x503C; } LoadedApk.ReceiverDispatcher::getIIntentReceiver()&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5373;LoadedApk.ReceiverDispatcher::mIIntentReceiver&#x3002;&#x8BE5;&#x503C;&#x7684;&#x5B9A;&#x4E49;&#x3001;&#x521D;&#x59CB;&#x5316;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7528;&#x2460;&#x2461;&#x2462;&#x2463;&#x6807;&#x51FA;&#x3002; Step4 ActivityManagerProxy::registerReceiver(...) &#x56DE;&#x5230;Step1&#x4E2D;ContextWrapper::registerReceiverInternal(...)&#xFF0C;&#x5728;&#x521B;&#x5EFA;&#x5B8C;IIntentReceiver&#x5BF9;&#x8C61;rd&#x540E;&#xFF0C;&#x8C03;&#x7528;ActivityManagerNative.getDefault().registerReceiver(...)&#x7EE7;&#x7EED;&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#x3002;ActivityManagerNative.getDefault()&#x8FD4;&#x56DE;&#x7684;&#x662F;ActivityManagerService&#x7684;&#x672C;&#x5730;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x3002; 12345678910111213141516171819202122232425// frameworks/base/core/java/android/app/ActivityManagerNative.java:2998 public Intent registerReceiver(IApplicationThread caller, String packageName, IIntentReceiver receiver, IntentFilter filter, String perm, int userId) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(caller != null ? caller.asBinder() : null); data.writeString(packageName); data.writeStrongBinder(receiver != null ? receiver.asBinder() : null); filter.writeToParcel(data, 0); data.writeString(perm); data.writeInt(userId); mRemote.transact(REGISTER_RECEIVER_TRANSACTION, data, reply, 0); reply.readException(); Intent intent = null; int haveIntent = reply.readInt(); if (haveIntent != 0) { intent = Intent.CREATOR.createFromParcel(reply); } reply.recycle(); data.recycle(); return intent; } &#x6B64;&#x5904;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E00;&#x4E2A;REGISTER_RECEIVER_TRANSACTION&#x8BF7;&#x6C42;&#xFF0C;&#x4EE5;&#x4E0A;&#x90FD;&#x662F;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x8FDB;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#x3002; ActivityManagerService::registerReceiver(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273// frameworks/base/core/java/com/android/server/am/ActivityManagerService.java:16208 public Intent registerReceiver(IApplicationThread caller, String callerPackage, IIntentReceiver receiver, IntentFilter filter, String permission, int userId) { ... synchronized(this) { if (caller != null) { // &#x63CF;&#x8FF0;&#x6B63;&#x5728;&#x7956;&#x518C;BroadcastReceiver&#x7684;Activity&#x7EC4;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x8FDB;&#x7A0B; callerApp = getRecordForAppLocked(caller); ... } ... } ArrayList&lt;Intent&gt; allSticky = null; if (stickyIntents != null) { final ContentResolver resolver = mContext.getContentResolver(); // Look for any matching sticky broadcasts... for (int i = 0, N = stickyIntents.size(); i &lt; N; i++) { Intent intent = stickyIntents.get(i); // If intent has scheme &quot;content&quot;, it will need to acccess // provider that needs to lock mProviderMap in ActivityThread // and also it may need to wait application response, so we // cannot lock ActivityManagerService here. if (filter.match(resolver, intent, true, TAG) &gt;= 0) { if (allSticky == null) { allSticky = new ArrayList&lt;Intent&gt;(); } allSticky.add(intent); } } } // Activity&#x7EC4;&#x4EF6;&#x6CE8;&#x518C;&#x4E00;&#x4E2A;BroadcastReceiver&#x5E76;&#x4E0D;&#x662F;&#x5C06;&#x8BE5;Reciever&#x6CE8;&#x518C;&#x5230; // ActivityManagerService&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x6CE8;&#x518C;&#x4E0E;&#x4ED6;&#x5173;&#x8054;&#x7684;InnerReceiver&#x5BF9;&#x8C61;&#x3002; // ActivityManagerService&#x63A5;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x65F6;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x8BE5;&#x5E7F;&#x64AD;&#x7C7B;&#x578B;&#x5728;&#x5185;&#x90E8;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684; // InnerReceiver&#x5BF9;&#x8C61;&#xFF0C;&#x518D;&#x6839;&#x636E;&#x6B64;&#x5BF9;&#x8C61;&#x5C06;&#x5E7F;&#x64AD;&#x53D1;&#x9001;&#x7ED9;&#x5BF9;&#x5E94;&#x7684;BroadcastReceiver // &#x5728;ActivityManagerService&#x4E2D;&#x4F7F;&#x7528;BroadcastFilter&#x6765;&#x63CF;&#x8FF0;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;&#xFF0C; // BroadcastFilter&#x662F;&#x6839;&#x636E;InnerReceiver&#x5BF9;&#x8C61;&#x548C;&#x8981;&#x63A5;&#x6536;&#x5230;&#x7684;&#x5E7F;&#x64AD;&#x7C7B;&#x578B;&#x800C;&#x521B;&#x5EFA;&#x51FA;&#x6765;&#x3002; // &#x5728;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x4E0D;&#x540C;Activity&#x53EF;&#x80FD;&#x4F7F;&#x7528;&#x540C;&#x4E00;&#x4E2A;InnerReceiver&#x6765;&#x6CE8;&#x518C;&#x4E0D;&#x540C;&#x7684;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;&#xFF0C; // ActivityManagerService&#x4F7F;&#x7528;&#x4E00;&#x4E2A;ReceiverList&#x6765;&#x4FDD;&#x5B58;&#x8FD9;&#x4E9B;&#x4F7F;&#x7528;&#x4E86;&#x76F8;&#x540C;InnserReceiver // &#x5BF9;&#x8C61;&#x6765;&#x6CE8;&#x518C;&#x7684;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;&#xFF0C;&#x5E76;&#x4EE5;&#x4ED6;&#x4EEC;&#x6240;&#x4F7F;&#x7528;&#x7684;InnerReceiver&#x4E3A;key&#x3002; // &#x5982;&#x679C;ActivityManagerService&#x5185;&#x90E8;&#x5B58;&#x5728;&#x4E0E;filter&#x5BF9;&#x5E94;&#x7684;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#xFF0C;&#x5219;&#x5C06;allSticky // &#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#x53D6;&#x51FA;&#x6765; // The first sticky in the list is returned directly back to the client. Intent sticky = allSticky != null ? allSticky.get(0) : null; ... if (receiver == null) { return sticky; } synchronized (this) { ... ReceiverList rl = mRegisteredReceivers.get(receiver.asBinder()); if (rl == null) { rl = new ReceiverList(this, callerApp, callingPid, callingUid, userId, receiver); ... mRegisteredReceivers.put(receiver.asBinder(), rl); } else ... // &#x63CF;&#x8FF0;&#x6B63;&#x5728;&#x6CE8;&#x518C;&#x7684;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005; BroadcastFilter bf = new BroadcastFilter(filter, rl, callerPackage, permission, callingUid, userId); rl.add(bf); ... mReceiverResolver.addFilter(bf); // &#x4EE5;&#x540E;ActivityManagerService&#x63A5;&#x6536;&#x5230;&#x5E7F;&#x64AD;&#x65F6;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5728;mReceiverResolver&#x4E2D; // &#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;&#x4E86; ... return sticky; } } &#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#x88AB;&#x53D1;&#x9001;&#x5230;ActivityManagerService&#x4E4B;&#x540E;&#x4F1A;&#x88AB;&#x4E00;&#x76F4;&#x4FDD;&#x5B58;&#xFF0C;&#x76F4;&#x5230;&#x4E0B;&#x6B21;&#x518D;&#x63A5;&#x6536;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#x4E3A;&#x6B62;&#x3002;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6;&#x5728;&#x5411;ActivityManagerService&#x6CE8;&#x518C;&#x63A5;&#x6536;&#x67D0;&#x4E00;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5E7F;&#x64AD;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x5176;&#x5185;&#x90E8;&#x6070;&#x597D;&#x4FDD;&#x5B58;&#x6709;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x6B64;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#x8FD4;&#x56DE;&#x7ED9;Activity&#xFF0C;&#x4EE5;&#x4FBF;&#x4ED6;&#x77E5;&#x9053;&#x7CFB;&#x7EDF;&#x4E0A;&#x6B21;&#x53D1;&#x51FA;&#x7684;&#x4ED6;&#x6240;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x5E7F;&#x64AD;&#x5185;&#x5BB9;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;ContextWrapper::sendStickyBroadcast(...)&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#x3002; &#x5230;&#x6B64;&#xFF0C;BroadcastReceiver&#x7684;&#x6CE8;&#x518C;&#x8FC7;&#x7A0B;&#x5C31;&#x8D70;&#x5B8C;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7EE7;&#x7EED;&#x7814;&#x7A76;&#x5E7F;&#x64AD;&#x7684;&#x53D1;&#x9001;&#x8FC7;&#x7A0B;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>广播机制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[广播机制学习笔记（二）——Broadcast的发送]]></title>
    <url>%2F2017%2F01%2F01%2F2017%2F0104Broadcast2%2F</url>
    <content type="text"><![CDATA[&#x5E7F;&#x64AD;&#x7684;&#x53D1;&#x9001;&#x59CB;&#x4E8E;&#x5BA2;&#x6237;&#x7AEF;&#x5BF9;sendBroadcast(...)&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7EE7;&#x627F;&#x81EA;ContextWrapper::sendBroadcast(...)&#x3002; # Step1 ContextWrapper::sendBroadcast(...) 1234// frameworks/base/core/java/android/app/ContextImpl.java:395 public void sendBroadcast(Intent intent) { mBase.sendBroadcast(intent); // &#x1F3C1; } mBase&#x7684;&#x7C7B;&#x578B;&#x4E3A;ContextImpl&#x3002; # Step2 ContextImpl::Broadcast(...) 123456789101112// frameworks/base/core/java/android/app/ContextImpl.java:762 public void sendBroadcast(Intent intent) { ... String resolvedType = intent.resolveTypeIfNeeded(getContentResolver()); try { intent.prepareToLeaveProcess(); ActivityManagerNative.getDefault().broadcastIntent( mMainThread.getApplicationThread(), intent, resolvedType, null, Activity.RESULT_OK, null, null, null, AppOpsManager.OP_NONE, null, false, false, getUserId()); // &#x1F3C1; } catch ... } Step3 ActivityManagerProxy::broadcastIntent(...) 123456789101112131415161718192021222324252627282930// frameworks/base/core/java/android/app/ActivityManagerNative.java:3033 public int broadcastIntent(IApplicationThread caller, Intent intent, String resolvedType, IIntentReceiver resultTo, int resultCode, String resultData, Bundle map, String[] requiredPermissions, int appOp, Bundle options, boolean serialized, boolean sticky, int userId) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(caller != null ? caller.asBinder() : null); intent.writeToParcel(data, 0); data.writeString(resolvedType); data.writeStrongBinder(resultTo != null ? resultTo.asBinder() : null); data.writeInt(resultCode); data.writeString(resultData); data.writeBundle(map); data.writeStringArray(requiredPermissions); data.writeInt(appOp); data.writeBundle(options); data.writeInt(serialized ? 1 : 0); data.writeInt(sticky ? 1 : 0); data.writeInt(userId); mRemote.transact(BROADCAST_INTENT_TRANSACTION, data, reply, 0); reply.readException(); int res = reply.readInt(); reply.recycle(); data.recycle(); return res; } &#x5B83;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E00;&#x4E2A;BROADCAST_INTENT_TRANSACTION&#x8BF7;&#x6C42;&#xFF0C;&#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x662F;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;ActivityManagerService&#x3002; # Step4 ActivityManagerService::broadcastIntent(...) 12345678910111213141516171819202122232425// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:17001 public final int broadcastIntent(IApplicationThread caller, Intent intent, String resolvedType, IIntentReceiver resultTo, int resultCode, String resultData, Bundle resultExtras, String[] requiredPermissions, int appOp, Bundle options, boolean serialized, boolean sticky, int userId) { ... synchronized(this) { intent = verifyBroadcastLocked(intent); final ProcessRecord callerApp = getRecordForAppLocked(caller); // &#x83B7;&#x5F97;&#x5E7F;&#x64AD;&#x53D1;&#x9001;&#x8FDB;&#x7A0B;&#x7684;&#x8EAB;&#x4EFD; final int callingPid = Binder.getCallingPid(); final int callingUid = Binder.getCallingUid(); final long origId = Binder.clearCallingIdentity(); // &#x1F3C1;&#x5904;&#x7406;intent&#x63CF;&#x8FF0;&#x7684;&#x5E7F;&#x64AD; int res = broadcastIntentLocked(callerApp, callerApp != null ? callerApp.info.packageName : null, intent, resolvedType, resultTo, resultCode, resultData, resultExtras, requiredPermissions, appOp, null, serialized, sticky, callingPid, callingUid, userId); Binder.restoreCallingIdentity(origId); return res; } } Step5 ActivityManagerService::broadcastIntentLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:16497 private final int broadcastIntentLocked(ProcessRecord callerApp, String callerPackage, Intent intent, String resolvedType, IIntentReceiver resultTo, int resultCode, String resultData, Bundle resultExtras, String[] requiredPermissions, int appOp, Bundle options, boolean ordered, boolean sticky, int callingPid, int callingUid, int userId) { intent = new Intent(intent); ... final String action = intent.getAction(); ... // Add to the sticky list if requested. // &#x5982;&#x679C;&#x662F;&#x7C98;&#x6027;&#x5E7F;&#x64AD;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x5B83;&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x4EE5;&#x4FBF;&#x540E;&#x9762;&#x6CE8;&#x518C;&#x63A5;&#x6536;&#x6B64;&#x79CD;&#x7C7B;&#x578B;&#x5E7F;&#x64AD;&#x7684; // BroadcastReceiver&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x6B64;&#x5E7F;&#x64AD; if (sticky) { ... // &#x6240;&#x6709;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#x7684;&#x9ECF;&#x6027;&#x5E7F;&#x64AD;&#x90FD;&#x4FDD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E9B;&#x5217;&#x8868;&#x53C8;&#x4FDD;&#x5B58;&#x5728;mStickBroadcasts // &#x4E2D;&#xFF0C;&#x5E76;&#x4EE5;&#x5E7F;&#x64AD;&#x7C7B;&#x578B;&#x4E3A;&#x5173;&#x952E;&#x5B57;&#x3002; // &#x5148;&#x6839;&#x636E;&#x5E7F;&#x64AD;&#x7C7B;&#x578B;&#x627E;&#x5230;&#x5339;&#x914D;&#x7684;&#x5E7F;&#x64AD;&#x5217;&#x8868; ArrayMap&lt;String, ArrayList&lt;Intent&gt;&gt; stickies = mStickyBroadcasts.get(userId); if (stickies == null) { stickies = new ArrayMap&lt;&gt;(); mStickyBroadcasts.put(userId, stickies); } ArrayList&lt;Intent&gt; list = stickies.get(intent.getAction()); if (list == null) { list = new ArrayList&lt;&gt;(); stickies.put(intent.getAction(), list); } // &#x518D;&#x4ECE;&#x5E7F;&#x64AD;&#x5217;&#x8868;&#x4E2D;&#x627E;&#x5230;&#x4E0E;intent&#x4E00;&#x81F4;&#x7684;&#x5E7F;&#x64AD; final int stickiesCount = list.size(); int i; for (i = 0; i &lt; stickiesCount; i++) { // &#x67E5;&#x627E;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E8E;intent&#x4E00;&#x81F4;&#x7684;&#x5E7F;&#x64AD; if (intent.filterEquals(list.get(i))) { // This sticky already exists, replace it. list.set(i, new Intent(intent)); break; } } if (i &gt;= stickiesCount) { list.add(new Intent(intent)); } } int[] users; if (userId == UserHandle.USER_ALL) { // Caller wants broadcast to go to all started users. users = mStartedUserArray; } else { // Caller wants broadcast to go to one specific user. users = new int[] {userId}; } // Figure out who all will receive this broadcast. List receivers = null; // &#x4FDD;&#x5B58;&#x9759;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x63A5;&#x6536;&#x8005; List&lt;BroadcastFilter&gt; registeredReceivers = null; // &#x4FDD;&#x5B58;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x63A5;&#x6536;&#x8005; // Need to resolve the intent to interested receivers... if ((intent.getFlags()&amp;Intent.FLAG_RECEIVER_REGISTERED_ONLY) == 0) { receivers = collectReceiverComponents(intent, resolvedType, callingUid, users); } if (intent.getComponent() == null) { if (userId == UserHandle.USER_ALL &amp;&amp; callingUid == Process.SHELL_UID) { // Query one target user at a time, excluding shell-restricted users UserManagerService ums = getUserManagerLocked(); for (int i = 0; i &lt; users.length; i++) { if (ums.hasUserRestriction( UserManager.DISALLOW_DEBUGGING_FEATURES, users[i])) { continue; } List&lt;BroadcastFilter&gt; registeredReceiversForUser = mReceiverResolver.queryIntent(intent, resolvedType, false, users[i]); if (registeredReceivers == null) { registeredReceivers = registeredReceiversForUser; } else if (registeredReceiversForUser != null) { registeredReceivers.addAll(registeredReceiversForUser); } } } else { registeredReceivers = mReceiverResolver.queryIntent(intent, resolvedType, false, userId); } } // &#x4E0A;&#x6B21;&#x63A5;&#x6536;&#x7684;&#x5E7F;&#x64AD;&#x8FD8;&#x672A;&#x6765;&#x5F97;&#x53CA;&#x8F6C;&#x53D1;&#x7ED9;&#x63A5;&#x6536;&#x8005; final boolean replacePending = (intent.getFlags()&amp;Intent.FLAG_RECEIVER_REPLACE_PENDING) != 0; ... int NR = registeredReceivers != null ? registeredReceivers.size() : 0; // &#x5F53;&#x524D;&#x53D1;&#x9001;&#x7684;&#x5E7F;&#x64AD;&#x662F;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD; &amp;&amp; &#x5B58;&#x5728;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x63A5;&#x6536;&#x8005; if (!ordered &amp;&amp; NR &gt; 0) { // If we are not serializing this broadcast, then send the // registered receivers separately so they don&apos;t wait for the // components to be launched. // &#x5C06;intent&#x63CF;&#x8FF0;&#x7684;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x7ED9;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#xFF0C;&#x7531;&#x6B64;&#x53EF;&#x89C1;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x5E7F;&#x64AD;&#x8981;&#x6BD4;&#x9759;&#x6001;&#x6CE8;&#x518C;&#x7684; // &#x4F18;&#x5148;&#x6536;&#x5230;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD; final BroadcastQueue queue = broadcastQueueForIntent(intent); // r&#x7528;&#x6765;&#x63CF;&#x8FF0;ActivityManagerService&#x8981;&#x6267;&#x884C;&#x7684;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1; BroadcastRecord r = new BroadcastRecord(queue, intent, callerApp, callerPackage, callingPid, callingUid, resolvedType, requiredPermissions, appOp, brOptions, registeredReceivers, resultTo, resultCode, resultData, resultExtras, ordered, sticky, false, userId); ... final boolean replaced = replacePending &amp;&amp; queue.replaceParallelBroadcastLocked(r); // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x9700;&#x8981;&#x66FF;&#x6362;&#x7684;&#x5E7F;&#x64AD;&#xFF0C;&#x5219;&#x5C06;r&#x63D2;&#x5165;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x8C03;&#x5EA6;&#x961F;&#x5217;&#xFF1B;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x5219;&#x4E0D;&#x518D;&#x91CD;&#x590D;&#x63D2;&#x5165; if (!replaced) { queue.enqueueParallelBroadcastLocked(r); queue.scheduleBroadcastsLocked(); // &#x1F3C1;&#x91CD;&#x65B0;&#x8C03;&#x5EA6;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1; } // &#x6B64;&#x65F6;&#xFF0C;&#x5BF9;&#x4E8E;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;&#x5DF2;&#x5C06;intent&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x7ED9;&#x90A3;&#x4E9B;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x63A5;&#x6536;&#x8005; registeredReceivers = null; NR = 0; } // &#x65E0;&#x8BBA;ActivityManagerService&#x5F53;&#x524D;&#x63A5;&#x6536;&#x5230;&#x7684;&#x662F;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x8FD8;&#x662F;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;&#x90FD;&#x4F1A;&#x5C06; // &#x8BE5;&#x5E7F;&#x64AD;&#x53CA;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x5C01;&#x88C5;&#x6210;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x5230;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x8C03;&#x5EA6;&#x961F;&#x5217;&#x4E2D;&#x3002; // mOrderedBroadcasts&#x63CF;&#x8FF0;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x8C03;&#x5EA6;&#x961F;&#x5217;&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1;&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x90FD;&#x662F;&#x6309;&#x7167; // &#x4F18;&#x5148;&#x7EA7;&#x7531;&#x9AD8;&#x5230;&#x4F4E;&#x6392;&#x5217;&#x7684;&#x3002; // Merge into one list. int ir = 0; // &#x5408;&#x5E76;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x548C;&#x9759;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#xFF0C;&#x6309;&#x7167;&#x4F18;&#x5148;&#x7EA7;&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x6392;&#x5217;&#xFF0C;&#x5B58;&#x653E;&#x5230;receivers if (receivers != null) { ... int NT = receivers != null ? receivers.size() : 0; int it = 0; ResolveInfo curt = null; BroadcastFilter curr = null; while (it &lt; NT &amp;&amp; ir &lt; NR) { if (curt == null) { curt = (ResolveInfo)receivers.get(it); } if (curr == null) { curr = registeredReceivers.get(ir); } if (curr.getPriority() &gt;= curt.priority) { // Insert this broadcast record into the final list. receivers.add(it, curr); ir++; curr = null; it++; NT++; } else { // Skip to the next ResolveInfo in the final list. it++; curt = null; } } } while (ir &lt; NR) { if (receivers == null) { receivers = new ArrayList(); } receivers.add(registeredReceivers.get(ir)); ir++; } if ((receivers != null &amp;&amp; receivers.size() &gt; 0) || resultTo != null) { BroadcastQueue queue = broadcastQueueForIntent(intent); BroadcastRecord r = new BroadcastRecord(queue, intent, callerApp, callerPackage, callingPid, callingUid, resolvedType, requiredPermissions, appOp, brOptions, receivers, resultTo, resultCode, resultData, resultExtras, ordered, sticky, false, userId); ... boolean replaced = replacePending &amp;&amp; queue.replaceOrderedBroadcastLocked(r); if (!replaced) { queue.enqueueOrderedBroadcastLocked(r); queue.scheduleBroadcastsLocked(); } } // &#x81F3;&#x6B64;&#xFF0C;ActivityManagerService&#x5C31;&#x627E;&#x5230;intent&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#xFF0C;&#x5E76;&#x5206;&#x522B;&#x5C06;&#x4ED6;&#x4EEC; // &#x4FDD;&#x5B58;&#x5728;&#x5185;&#x90E8;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x8C03;&#x5EA6;&#x961F;&#x5217;mParallelBroadcasts&#x548C;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;&#x961F;&#x5217; // mOrderedBroadcasts&#x4E2D; return ActivityManager.BROADCAST_SUCCESS; } &#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;&#x65E0;&#x8BBA;&#x5BF9;&#x4E8E;&#x6709;&#x5E8F;&#x8FD8;&#x662F;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;&#x90FD;&#x4F1A;&#x628A;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x4FDD;&#x5B58;&#x5230;mOrderedBroadcasts&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#xFF0C;&#x4F1A;&#x518D;&#x4FDD;&#x5B58;&#x5230;mParallelBroadcasts&#x4E2D;&#x3002; Step6 BroadcastQueue::scheduleBroadcastsLocked() 12345678910111213141516171819// frameworks/base/services/core/java/com/android/server/am/BroadcastQueue.javapublic final class BroadcastQueue {...// :155 final BroadcastHandler mHandler;...// :346// &#x6210;&#x5458;&#x53D8;&#x91CF;mBroadcastsScheduled&#x63CF;&#x8FF0;ActivityManagerService&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5411;&#x5B83;&#x6240;&#x5728;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;// &#x53D1;&#x9001;&#x4E86;&#x7C7B;&#x578B;&#x4E3A;BROADCAST_INTENT_MSG&#x7684;&#x6D88;&#x606F;&#x3002;ActivityManagerService&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x8BE5;&#x6D88;&#x606F;&#x6765;&#x8C03;&#x5EA6;// &#x4E24;&#x4E2A;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x5E7F;&#x64AD;&#x3002; public void scheduleBroadcastsLocked() { ... // ActivityManagerService&#x6240;&#x5728;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4E2D;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;BROADCAST_INTENT_MSG&#x6D88;&#x606F;&#x4E86; if (mBroadcastsScheduled) { return; } mHandler.sendMessage(mHandler.obtainMessage(BROADCAST_INTENT_MSG, this)); mBroadcastsScheduled = true; } mBroadcastsScheduled&#x7684;&#x7C7B;&#x578B;&#x4E3A;BroadcastHandler&#x3002; # Step7 BroadcastHandler::handleMessage(...) 12345678910// frameworks/base/services/core/java/com/android/server/am/BroadcastQueue.java:163 public void handleMessage(Message msg) { switch (msg.what) { case BROADCAST_INTENT_MSG: { ... processNextBroadcast(true); // &#x1F3C1; } break; ... } } Step8 BroadcastQueue::processNextBroadcast(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197// frameworks/base/services/core/java/com/android/server/am/BroadcastQueue.java:639 final void processNextBroadcast(boolean fromMsg) { synchronized(mService) { BroadcastRecord r; ... // &#x8868;&#x793A;&#x524D;&#x9762;&#x53D1;&#x9001;&#x5230;ActivityManagerService&#x7684;BROADCAST_INTENT_MSG&#x5DF2;&#x88AB;&#x5904;&#x7406; if (fromMsg) { mBroadcastsScheduled = false; } // First, deliver any non-serialized broadcasts right away. // &#x5C06;&#x4FDD;&#x5B58;&#x5728;&#x65E0;&#x5E8F;&#x961F;&#x5217;mParallelBroadcasts&#x4E2D;&#x7684;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1;&#x53D1;&#x9001;&#x7ED9;&#x63A5;&#x6536;&#x8005; while (mParallelBroadcasts.size() &gt; 0) { r = mParallelBroadcasts.remove(0); // &#x904D;&#x5386; ... final int N = r.receivers.size(); ... // &#x5C06;&#x4ED6;&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD;&#x53D1;&#x9001;&#x7ED9;&#x6BCF;&#x4E00;&#x4E2A;&#x63A5;&#x6536;&#x8005; for (int i=0; i&lt;N; i++) { Object target = r.receivers.get(i); ... // &#x1F3C1; deliverToRegisteredReceiverLocked(r, (BroadcastFilter)target, false); } ... } // &#x7EE7;&#x7EED;&#x5904;&#x7406;&#x4FDD;&#x5B58;&#x5728;&#x6709;&#x5E8F;&#x961F;&#x5217;mOrderedBroadcasts&#x4E2D;&#x7684;&#x5E7F;&#x64AD; // &#x6709;&#x5E8F;&#x961F;&#x5217;mOrderedBroadcast&#x63CF;&#x8FF0;&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x9759;&#x6001;&#x6CE8;&#x518C;&#xFF0C;&#x6B64;&#x65F6;&#x53EF;&#x80FD;&#x5C1A;&#x672A; // &#x88AB;&#x542F;&#x52A8;&#xFF0C;&#x56E0;&#x6B64;ActivityManagerService&#x5C06;&#x5E7F;&#x64AD;&#x53D1;&#x9001;&#x7ED9;&#x4ED6;&#x4EEC;&#x5904;&#x7406;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x5C06;&#x5B83;&#x4EEC; // &#x542F;&#x52A8;&#x8D77;&#x6765; // Now take care of the next serialized one... // If we are waiting for a process to come up to handle the next // broadcast, then do nothing at this point. Just in case, we // check that the process we&apos;re waiting for still exists. // mPendingBroadcast&#x63CF;&#x8FF0;&#x6B63;&#x5728;&#x7B49;&#x5F85;&#x9759;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x7684;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x4EFB;&#x52A1; if (mPendingBroadcast != null) { // &#x68C0;&#x67E5;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x662F;&#x5426;&#x542F;&#x52A8; ... boolean isDead; synchronized (mService.mPidsSelfLocked) { ProcessRecord proc = mService.mPidsSelfLocked.get(mPendingBroadcast.curApp.pid); isDead = proc == null || proc.crashing; } if (!isDead) { // &#x5982;&#x679C;&#x8FDB;&#x7A0B;&#x6B63;&#x5728;&#x542F;&#x52A8;&#xFF0C;&#x5219;ActivityManagerService&#x7EE7;&#x7EED;&#x7B49;&#x5F85; // It&apos;s still alive, so keep waiting return; } else { // &#x5426;&#x5219;&#x51C6;&#x5907;&#x5411;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x5E7F;&#x64AD; ... mPendingBroadcast.state = BroadcastRecord.IDLE; mPendingBroadcast.nextReceiver = mPendingBroadcastRecvIndex; mPendingBroadcast = null; } } boolean looped = false; do { if (mOrderedBroadcasts.size() == 0) { ... return; } r = mOrderedBroadcasts.get(0); // &#x904D;&#x5386;&#x6709;&#x5E8F;&#x961F;&#x5217; boolean forceReceive = false; ... // &#x5F97;&#x5230;r&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x7684;&#x4E2A;&#x6570; int numReceivers = (r.receivers != null) ? r.receivers.size() : 0; // &#x68C0;&#x67E5;&#x524D;&#x4E00;&#x4E2A;&#x63A5;&#x6536;&#x8005;&#x662F;&#x5426;&#x5728;&#x89C4;&#x5B9A;&#x65F6;&#x95F4;&#x5185;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x4E0A;&#x4E00;&#x4E2A;&#x6709;&#x5E8F;&#x5E7F;&#x64AD; if (mService.mProcessesReady &amp;&amp; r.dispatchTime &gt; 0) { long now = SystemClock.uptimeMillis(); // ActivityManagerService&#x5728;&#x5904;&#x7406;&#x5E7F;&#x64AD;&#x4EFB;&#x52A1;&#x65F6;&#xFF0C;&#x4F1A;&#x5C06;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x8BB0;&#x5F55;&#x5728; // r.dispatchTime&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5E7F;&#x64AD;&#x4E0D;&#x80FD;&#x5728; // (2*BROADCAST_TIMEOUT*numReceivers)&#x6BEB;&#x79D2;&#x5904;&#x7406;&#x5B8C; if ((numReceivers &gt; 0) &amp;&amp; (now &gt; r.dispatchTime + (2*mTimeoutPeriod*numReceivers))) { ... // &#x5F3A;&#x5236;&#x7ED3;&#x675F; broadcastTimeoutLocked(false); // forcibly finish this broadcast // &#x4E0B;&#x9762;&#x4E24;&#x884C;&#x8D4B;&#x503C;&#x8868;&#x793A;&#x8981;&#x7EE7;&#x7EED;&#x5904;&#x7406;&#x6709;&#x5E8F;&#x961F;&#x5217; forceReceive = true; r.state = BroadcastRecord.IDLE; } } // &#x68C0;&#x67E5;r&#x662F;&#x5426;&#x6B63;&#x5728;&#x5904;&#x7406;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x5219;&#x7B49;&#x5F85;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x5728;&#x8F6C;&#x53D1;&#x7ED9;&#x4E0B;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005; // &#x56E0;&#x6B64;&#x76F4;&#x63A5;&#x8FD4;&#x56DE; if (r.state != BroadcastRecord.IDLE) { ... return; } // &#x5982;&#x679C;r&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x5B8C;&#x6210;&#xFF0C;&#x6216;&#x8005;&#x88AB;&#x5F3A;&#x5236;&#x7ED3;&#x675F; if (r.receivers == null || r.nextReceiver &gt;= numReceivers || r.resultAbort || forceReceive) { // No more receivers for this broadcast! Send the final // result if requested... ... // &#x5220;&#x9664;&#x524D;&#x9762;&#x53D1;&#x9001;&#x5230;ActivityManagerService&#x7684; // BROADCAST_TIMEOUT_MSG&#x6D88;&#x606F; cancelBroadcastTimeoutLocked(); ... // ... and on to the next... ... mOrderedBroadcasts.remove(0); r = null; ... continue; } } while (r == null); // r.receivers&#x4FDD;&#x5B58;&#x5E7F;&#x64AD;r&#x7684;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x5217;&#x8868;&#xFF1B;r.nextReceiver&#x4FDD;&#x5B58;&#x4E0B;&#x4E00;&#x4E2A;&#x63A5;&#x6536;&#x8005;&#x5E8F;&#x53F7; // Get the next receiver... int recIdx = r.nextReceiver++; // Keep track of when this receiver started, and make sure there // is a timeout message pending to kill it if need be. // &#x8868;&#x793A;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;r&#x53D1;&#x9001;&#x7ED9;&#x4E0B;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x5904;&#x7406;&#x7684;&#x65F6;&#x95F4; r.receiverTime = SystemClock.uptimeMillis(); if (recIdx == 0) { // &#x8BF4;&#x660E;&#x5E7F;&#x64AD;r&#x521A;&#x5F00;&#x59CB;&#x88AB;&#x5904;&#x7406;&#xFF0C;&#x56E0;&#x6B64;&#x8BB0;&#x5F55;dispatchTime r.dispatchTime = r.receiverTime; ... } // &#x68C0;&#x67E5;ActivityManagerService&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5411;&#x5B83;&#x6240;&#x5728;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;&#x4E86; // BROADCAST_TIMEOUT_MSG&#x6D88;&#x606F;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x6CA1;&#x53D1;&#x9001;&#xFF0C;&#x5219;&#x53D1;&#x9001;&#xFF0C;&#x5E76;&#x6307;&#x5B9A;&#x5B83;&#x5728; // mTimeoutPeriod&#x4E4B;&#x540E;&#x5904;&#x7406; if (! mPendingBroadcastTimeoutMessage) { long timeoutTime = r.receiverTime + mTimeoutPeriod; ... setBroadcastTimeoutLocked(timeoutTime); } ... final Object nextReceiver = r.receivers.get(recIdx); if (nextReceiver instanceof BroadcastFilter) {// &#x8BF4;&#x660E;&#x662F;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684; // Simple case: this is a registered receiver who gets // a direct call. BroadcastFilter filter = (BroadcastFilter)nextReceiver; ... // &#x1F3C1; &#x56E0;&#x4E3A;&#x52A8;&#x6001;&#x6CE8;&#x518C;&#x7684;&#x63A5;&#x6536;&#x8005;&#x80AF;&#x5B9A;&#x5DF2;&#x542F;&#x52A8;&#xFF0C;&#x76F4;&#x63A5;&#x53D1;&#x9001;&#x5373;&#x53EF; deliverToRegisteredReceiverLocked(r, filter, r.ordered); // &#x68C0;&#x67E5;&#x5982;&#x679C;&#x662F;&#x65E0;&#x5E8F;&#x5E7F;&#x64AD; if (r.receiver == null || !r.ordered) { // The receiver has already finished, so schedule to // process the next one. ... // &#x8868;&#x793A;&#x65E0;&#x9700;&#x7B49;&#x5F85;&#x5B83;&#x524D;&#x4E00;&#x4E2A;&#x63A5;&#x6536;&#x8005;&#x5904;&#x7406;&#x5B8C;&#x6210;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x8BE5;&#x5E7F;&#x64AD;&#x7EE7;&#x7EED;&#x53D1;&#x9001;&#x7ED9; // &#x5B83;&#x4E0B;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005; r.state = BroadcastRecord.IDLE; scheduleBroadcastsLocked(); } ... return; } // Hard case: need to instantiate the receiver, possibly // starting its application process to host it. // &#x5982;&#x679C;nextReceiver&#x7C7B;&#x578B;&#x975E;BroadcastFilter&#xFF0C;&#x8BF4;&#x660E;&#x4E00;&#x5B9A;&#x662F;ResoveInfo // &#x5373;&#x9759;&#x6001;&#x6CE8;&#x518C;&#xFF0C;&#x6545;&#x53EF;&#x4EE5;&#x5F3A;&#x5236;&#x8F6C;&#x578B; ResolveInfo info = (ResolveInfo)nextReceiver; ... // &#x83B7;&#x53D6;&#x63A5;&#x6536;&#x8005;&#x7684;android:process&#x5C5E;&#x6027;&#xFF0C;&#x5373;&#x8FDB;&#x7A0B;&#x540D; String targetProcess = info.activityInfo.processName; ... // &#x68C0;&#x67E5;&#x8BE5;&#x8FDB;&#x7A0B;&#x662F;&#x5426;&#x5DF2;&#x542F;&#x52A8; // Is this receiver&apos;s application already running? ProcessRecord app = mService.getProcessRecordLocked(targetProcess, info.activityInfo.applicationInfo.uid, false); if (app != null &amp;&amp; app.thread != null) { try { // &#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x542F;&#x52A8;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x53D1;&#x9001;&#x7ED9;&#x5B83;&#x5904;&#x7406; ... processCurBroadcastLocked(r, app); return; } catch (RemoteException e) ... // If a dead object exception was thrown -- fall through to // restart the application. } ... // &#x5148;&#x542F;&#x52A8;&#x8FDB;&#x7A0B; if ((r.curApp=mService.startProcessLocked(targetProcess, info.activityInfo.applicationInfo, true, r.intent.getFlags() | Intent.FLAG_FROM_BACKGROUND, &quot;broadcast&quot;, r.curComponent, (r.intent.getFlags()&amp;Intent.FLAG_RECEIVER_BOOT_UPGRADE) != 0, false, false)) == null) { ... // &#x5982;&#x679C;&#x542F;&#x52A8;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x7ED3;&#x675F;&#x5BF9;&#x5E7F;&#x64AD;r&#x7684;&#x5904;&#x7406; scheduleBroadcastsLocked(); r.state = BroadcastRecord.IDLE; return; } // &#x8868;&#x793A;&#x6B63;&#x5728;&#x7B49;&#x5F85;&#x5E7F;&#x64AD;r&#x4E0B;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x8D77;&#x6765; mPendingBroadcast = r; mPendingBroadcastRecvIndex = recIdx; } } &#x5047;&#x8BBE;&#x5E7F;&#x64AD;r&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x662F;&#xFF1A;(&#x52A8;&#x6001;&#x6CE8;&#x518C; || (&#x9759;&#x6001;&#x6CE8;&#x518C; &amp;&amp; &#x8FDB;&#x7A0B;&#x5DF2;&#x7ECF;&#x542F;&#x52A8;&#x8D77;&#x6765;) )&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4F1A;&#x8C03;&#x7528;deliverToRegisteredReceiverLocked(...)&#x5C06;&#x5E7F;&#x64AD;&#x8F6C;&#x53D1;&#x7ED9;&#x8BE5;&#x63A5;&#x6536;&#x8005;&#x5904;&#x7406;&#x3002; Step9 BroadcastQueue::deliverToRegisteredReceiverLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839// frameworks/base/services/core/java/com/android/server/am/BroadcastQueue.java:465 private void deliverToRegisteredReceiverLocked(BroadcastRecord r, BroadcastFilter filter, boolean ordered) { boolean skip = false; if (filter.requiredPermission != null) { // &#x9700;&#x8981;&#x68C0;&#x67E5;&#x53D1;&#x9001;&#x8005;&#x6743;&#x9650; int perm = mService.checkComponentPermission(filter.requiredPermission, r.callingPid, r.callingUid, -1, true); if (perm != PackageManager.PERMISSION_GRANTED) { ... skip = true; } ... } // &#x9700;&#x8981;&#x68C0;&#x67E5;&#x63A5;&#x6536;&#x8005;&#x6743;&#x9650; if (!skip &amp;&amp; r.requiredPermissions != null &amp;&amp; r.requiredPermissions.length &gt; 0) { for (int i = 0; i &lt; r.requiredPermissions.length; i++) { String requiredPermission = r.requiredPermissions[i]; int perm = mService.checkComponentPermission(requiredPermission, filter.receiverList.pid, filter.receiverList.uid, -1, true); if (perm != PackageManager.PERMISSION_GRANTED) { ... skip = true; break; } ... } } ... if (!skip) { // &#x6210;&#x529F;&#x901A;&#x8FC7;&#x4E86;&#x6743;&#x9650;&#x68C0;&#x67E5; ... try { ... // &#x1F3C1;&#x5C06;r&#x8F6C;&#x53D1;&#x7ED9;filter&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x63A5;&#x6536;&#x8005; performReceiveLocked(filter.receiverList.app, filter.receiverList.receiver, new Intent(r.intent), r.resultCode, r.resultData, r.resultExtras, r.ordered, r.initialSticky, r.userId); ... } catch (RemoteException e) ... } } Step10 BroadcastQueue::performReceiveLocked(...) 123456789101112131415161718192021222324// frameworks/base/services/core/java/com/android/server/am/BroadcastQueue.java:445private static void performReceiveLocked(ProcessRecord app, IIntentReceiver receiver, Intent intent, int resultCode, String data, Bundle extras, boolean ordered, boolean sticky, int sendingUser) throws RemoteException { // app&#x63CF;&#x8FF0;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005;&#x6240;&#x5728;&#x8FDB;&#x7A0B; // receiver&#x63CF;&#x8FF0;&#x76EE;&#x6807;&#x63A5;&#x6536;&#x8005; // intent&#x63CF;&#x8FF0;&#x5373;&#x5C06;&#x53D1;&#x9001;&#x7684;&#x5E7F;&#x64AD; // Send the intent to the receiver asynchronously using one-way binder calls. if (app != null) { if (app.thread != null) { // If we have an app thread, do the call through that so it is // correctly ordered with other one-way calls. // &#x1F3C1; app.thread.scheduleRegisteredReceiver(receiver, intent, resultCode, data, extras, ordered, sticky, sendingUser, app.repProcState); } else { // Application has died. Receiver doesn&apos;t exist. throw new RemoteException(&quot;app.thread must not be null&quot;); } } else { receiver.performReceive(intent, resultCode, data, extras, ordered, sticky, sendingUser); }} app.thread&#x662F;&#x5F15;&#x7528;&#x4E86;&#x8FD0;&#x884C;&#x5728;&#x8BE5;&#x8FDB;&#x7A0B;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;ApplicationThread&#x5BF9;&#x8C61;&#x7684;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x4E3A;ApplicationThreadProxy&#x3002; Step11 ApplicationThreadProxy::scheduleRegisteredReceiver(...) 12345678910111213141516171819202122// frameworks/base/core/java/android/app/ApplicationThreadNative.java:707class ApplicationThreadProxy implements IApplicationThread {...// :1114 public void scheduleRegisteredReceiver(IIntentReceiver receiver, Intent intent, int resultCode, String dataStr, Bundle extras, boolean ordered, boolean sticky, int sendingUser, int processState) throws RemoteException { Parcel data = Parcel.obtain(); data.writeInterfaceToken(IApplicationThread.descriptor); data.writeStrongBinder(receiver.asBinder()); intent.writeToParcel(data, 0); data.writeInt(resultCode); data.writeString(dataStr); data.writeBundle(extras); data.writeInt(ordered ? 1 : 0); data.writeInt(sticky ? 1 : 0); data.writeInt(sendingUser); data.writeInt(processState); mRemote.transact(SCHEDULE_REGISTERED_RECEIVER_TRANSACTION, data, null, IBinder.FLAG_ONEWAY); data.recycle(); } &#x5B83;&#x5411;&#x53D1;&#x9001;&#x5E7F;&#x64AD;&#x6D88;&#x606F;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x9001;SCHEDULE_REGISTERED_RECEIVER_TRANSACTION&#x8BF7;&#x6C42;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8F6C;&#x5165;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; Step12 ApplicationThread::scheduleRegisteredReceiver(...) 1234567891011121314// frameworks/base/core/java/android/app/ActivityThread.java:150public final class ActivityThread {//:574 private class ApplicationThread extends ApplicationThreadNative { ...//:893 public void scheduleRegisteredReceiver(IIntentReceiver receiver, Intent intent, int resultCode, String dataStr, Bundle extras, boolean ordered, boolean sticky, int sendingUser, int processState) throws RemoteException { updateProcessState(processState, false); // &#x1F3C1; receiver.performReceive(intent, resultCode, dataStr, extras, ordered, sticky, sendingUser); } receiver&#x6307;&#x5411;&#x4E00;&#x4E2A;InnerReceiver&#x5BF9;&#x8C61;&#x3002; # Step13 InnerReceiver::performReceive(...) 123456789101112131415161718// frameworks/base/core/java/android/app/LoadedApk.java:786static final class ReceiverDispatcher { final static class InnerReceiver extends IIntentReceiver.Stub { final WeakReference&lt;LoadedApk.ReceiverDispatcher&gt; mDispatcher; ... public void performReceive(Intent intent, int resultCode, String data, Bundle extras, boolean ordered, boolean sticky, int sendingUser) { LoadedApk.ReceiverDispatcher rd = mDispatcher.get(); ... if (rd != null) { // &#x1F3C1; rd.performReceive(intent, resultCode, data, extras, ordered, sticky, sendingUser); } else ... } }} Step14 ReceiverDispatcher::performReceive(...) 123456789101112131415// frameworks/base/core/java/android/app/LoadedApk.java:786 static final class ReceiverDispatcher { ...//:956 public void performReceive(Intent intent, int resultCode, String data, Bundle extras, boolean ordered, boolean sticky, int sendingUser) { ... // &#x5C06;intent&#x63CF;&#x8FF0;&#x7684;&#x5E7F;&#x64AD;&#x5C01;&#x88C5;&#x6210;Args&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x7ED9;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x8BE5;&#x6D88;&#x606F;&#x6700;&#x7EC8;&#x7531; // Args.run&#x51FD;&#x6570;&#x6765;&#x5904;&#x7406; Args args = new Args(intent, resultCode, data, extras, ordered, sticky, sendingUser); if (!mActivityThread.post(args)) { ... } } # Step15 Args::run() 123456789101112131415161718192021222324252627282930// frameworks/base/core/java/android/app/LoadedApk.java:786static final class ReceiverDispatcher {...final BroadcastReceiver mReceiver; // &#x6307;&#x5411;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x8005;final boolean mRegistered; // &#x63CF;&#x8FF0;mReeiver&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6CE8;&#x518C;&#x5230;ActivityManagerService...//:837 final class Args extends BroadcastReceiver.PendingResult implements Runnable { private Intent mCurIntent; // &#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x5E7F;&#x64AD; private final boolean mOrdered; // mCurOrdered&#x662F;&#x5426;&#x4E3A;&#x6709;&#x5E8F;&#x5E7F;&#x64AD;//:850 ... public void run() { final BroadcastReceiver receiver = mReceiver; final boolean ordered = mOrdered; ... final IActivityManager mgr = ActivityManagerNative.getDefault(); final Intent intent = mCurIntent; ... try { ... receiver.onReceive(mContext, intent); // &#x5230;&#x8FBE;&#x63A5;&#x6536;&#x8005; } catch (Exception e) ... if (receiver.getPendingResult() != null) { finish(); } ... }}]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>广播机制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Service启动过程学习笔记（二）——进程内绑定Service组件]]></title>
    <url>%2F2016%2F12%2F31%2F2016%2F1121ServiceStarting2%2F</url>
    <content type="text"><![CDATA[&#x8FDB;&#x7A0B;&#x5185;&#x7ED1;&#x5B9A;Service&#x7EC4;&#x4EF6;&#x662F;&#x4EE5;&#x5BA2;&#x6237;&#x7AEF;&#x8C03;&#x7528;bindService(...)&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x539F;&#x578B;&#x4E3A;&#xFF1A; boolean bindService(Intent service, ServiceConnection conn, int flags); &#x5F53;&#x6210;&#x529F;&#x7ED1;&#x5B9A;&#x540E;&#xFF0C;conn&#x7684;onServiceConnected(...)&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x4EE5;&#x4FBF;&#x5BA2;&#x6237;&#x7AEF;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;Service&#x7684;&#x63A5;&#x53E3;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4EE5;&#x7236;&#x7C7B;&#x6210;&#x5458;&#x51FD;&#x6570;ContextWrapper::bindService(...)&#x4E3A;&#x8D77;&#x70B9;&#x5F00;&#x59CB;&#x5206;&#x6790;&#x3002; # Step1 ContextWrapper::bindService(...) 12345// frameworks/base/core/java/android/context/ContextWrapper.java:602public boolean bindService(Intent service, ServiceConnection conn, int flags) { return mBase.bindService(service, conn, flags);} &#x5176;&#x4E2D;mBase&#x6307;&#x5411;&#x4E00;&#x4E2A;ContextImpl&#x5BF9;&#x8C61;&#x3002; # Step2 ContextImpl::bindService(...) 12345678910111213141516171819202122232425262728293031323334// frameworks/base/core/java/android/app/ContextImpl.java:1283 public boolean bindService(Intent service, ServiceConnection conn, int flags) { warnIfCallingFromSystemProcess(); return bindServiceCommon(service, conn, flags, Process.myUserHandle()); } ... private boolean bindServiceCommon(Intent service, ServiceConnection conn, int flags, UserHandle user) { IServiceConnection sd; ... if (mPackageInfo != null) { // getOuterContext()&#x8FD4;&#x56DE;&#x7684;Context&#x5BF9;&#x8C61;&#x6307;&#x5411;&#x8C03;&#x7528;&#x65B9;&#x7684;Activity&#x7EC4;&#x4EF6; // mMainThread.getHandler()&#x8FD4;&#x56DE;mMainThread.mH&#xFF0C;&#x7528;&#x6765;&#x5411;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x53D1;&#x9001;&#x6D88;&#x606F; // &#x1F3C1;&#x5C06;conn&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86;IServiceConnection&#x63A5;&#x53E3;&#x7684;Binder&#x5BF9;&#x8C61; sd = mPackageInfo.getServiceDispatcher(conn, getOuterContext(), mMainThread.getHandler(), flags); } else ... validateServiceIntent(service); try { IBinder token = getActivityToken(); ... service.prepareToLeaveProcess(); // &#x1F3C1;Step5&#x5C06;sd&#x53CA;service&#xFF08;&#x662F;&#x4E2A;Intent&#x5BF9;&#x8C61;&#xFF09;&#x53D1;&#x9001;&#x7ED9;ActivityManagerService&#xFF0C;&#x4EE5;&#x4FBF; // &#x5B83;&#x5C06;Service&#x7EC4;&#x4EF6;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x3002;&#x6B64;&#x5904;&#x8C03;&#x7528;&#x7684;&#x662F;ActivityManagerService&#x4EE3;&#x7406;&#x5BF9;&#x8C61; // &#x7684;&#x6210;&#x5458;&#x51FD;&#x6570;bindService(...) int res = ActivityManagerNative.getDefault().bindService( mMainThread.getApplicationThread(), getActivityToken(), service, service.resolveTypeIfNeeded(getContentResolver()), sd, flags, getOpPackageName(), user.getIdentifier()); ... return res != 0; } catch (RemoteException e) ... } Step3 ContextImpl::getServiceDispatcher(...) 12345678910111213141516171819202122232425// frameworks/base/core/java/android/app/LoadedApk.java:977 public final IServiceConnection getServiceDispatcher(ServiceConnection c, Context context, Handler handler, int flags) { synchronized (mServices) { LoadedApk.ServiceDispatcher sd = null; // &#x6BCF;&#x4E2A;&#x7ED1;&#x5B9A;&#x8FC7;Service&#x7684;Activity&#x90FD;&#x4EE5;ServiceConnection&#x4E3A;key&#x4FDD;&#x5B58;&#x5728;HashMap // &#x4E2D;&#xFF0C;&#x8BE5;HashMap&#x518D;&#x4EE5;Activity::context&#x4E3A;key&#x4FDD;&#x5B58;&#x5728;mServices&#x4E2D;&#xFF0C;&#x5373;&#xFF1A; // &lt;Activity::Context, &lt;ServiceConnection, Activity&gt; &gt; ArrayMap&lt;ServiceConnection, LoadedApk.ServiceDispatcher&gt; map = mServices.get(context); if (map != null) { sd = map.get(c); } if (sd == null) { sd = new ServiceDispatcher(c, context, handler, flags); if (map == null) { map = new ArrayMap&lt;ServiceConnection, LoadedApk.ServiceDispatcher&gt;(); mServices.put(context, map); } map.put(c, sd); } else { sd.validate(context, handler); } return sd.getIServiceConnection(); // &#x1F3C1; } } Step4 LoadedApk.ServiceDispatcher::getIServiceConnection() sd&#x7684;&#x7C7B;&#x578B;&#x4E3A;LoadedApk.ServiceDispatcher&#xFF0C;&#x5176;getIServiceConnection()&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x6210;&#x5458;mIServiceConnection&#xFF0C;&#x8BE5;&#x6210;&#x5458;&#x662F;&#x5728;ServiceDispatcher&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334public final class LoadedApk {...// frameworks/base/core/java/android/app/LoadedApk.java:1049 static final class ServiceDispatcher { private final ServiceDispatcher.InnerConnection mIServiceConnection; // &#x5F53;&#x5BA2;&#x6237;&#x7AEF;C&#x7ED1;&#x5B9A;Service&#x7EC4;&#x4EF6;&#x65F6;&#xFF0C;LoadedApk&#x4F1A;&#x4E3A;&#x5B83;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;ServiceDispatcher&#x5BF9;&#x8C61; // &#x5176;mContext&#x6307;&#x5411;C&#x7684;Activity&#x7EC4;&#x4EF6;&#xFF0C; // &#x5176;mConnection&#x6307;&#x5411;C&#x5185;&#x90E8;&#x7684;serviceConnection&#x5BF9;&#x8C61;&#xFF0C; // &#x5176;mActivityThread&#x6307;&#x5411;C&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;Handler&#x5BF9;&#x8C61;&#xFF0C;&#x5373;ActivityThread::mH private final ServiceConnection mConnection; // &#x4E0E;mContext&#x5173;&#x8054;&#x7684;ServiceConnection&#x5BF9;&#x8C61; private final Context mContext; // &#x6307;&#x5411;Activity&#x7EC4;&#x4EF6; private final Handler mActivityThread; // &#x4E0E;mContext&#x5173;&#x8054;&#x7684;Handler&#x5BF9;&#x8C61; ... private static class InnerConnection extends IServiceConnection.Stub { final WeakReference&lt;LoadedApk.ServiceDispatcher&gt; mDispatcher; InnerConnection(LoadedApk.ServiceDispatcher sd) { mDispatcher = new WeakReference&lt;LoadedApk.ServiceDispatcher&gt;(sd); } ... }...// :1085 ServiceDispatcher(ServiceConnection conn, Context context, Handler activityThread, int flags) { mIServiceConnection = new InnerConnection(this); ... }...// :1130 IServiceConnection getIServiceConnection() { return mIServiceConnection; } Step5 ActivityManagerProxy::bindService(...) 12345678910111213141516171819202122232425262728// frameworks/base/core/java/android/app/ActivityManagerNative.java:2619class ActivityManagerProxy implements IActivityManager{...// frameworks/base/core/java/android/app/ActivityManagerNative.java:3740 public int bindService(IApplicationThread caller, IBinder token, Intent service, String resolvedType, IServiceConnection connection, int flags, String callingPackage, int userId) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(caller != null ? caller.asBinder() : null); data.writeStrongBinder(token); service.writeToParcel(data, 0); data.writeString(resolvedType); data.writeStrongBinder(connection.asBinder()); data.writeInt(flags); data.writeString(callingPackage); data.writeInt(userId); mRemote.transact(BIND_SERVICE_TRANSACTION, data, reply, 0); reply.readException(); int res = reply.readInt(); data.recycle(); reply.recycle(); return res; }...} &#x6B64;&#x5904;&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x7C7B;&#x578B;&#x4E3A;BIND_SERVICE_TRANSACTION&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x5747;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x5B8C;&#x6210;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8F6C;&#x5165;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#x3002; # Step6 ActivityManagerService::bindService(...) 1234567891011121314public final class ActivityManagerService extends ActivityManagerNative... final ActiveServices mServices;...// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:15973 public int bindService(IApplicationThread caller, IBinder token, Intent service, String resolvedType, IServiceConnection connection, int flags, String callingPackage, int userId) throws TransactionTooLargeException { ... synchronized(this) { return mServices.bindServiceLocked(caller, token, service, resolvedType, connection, flags, callingPackage, userId); } } Step7 ActiveServices::bindServiceLocked(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:697 int bindServiceLocked(IApplicationThread caller, IBinder token, Intent service, String resolvedType, IServiceConnection connection, int flags, String callingPackage, int userId) throws TransactionTooLargeException { ... // &#x5F97;&#x5230;&#x8BF7;&#x6C42;service&#x64CD;&#x4F5C;&#x7684;&#x8FDB;&#x7A0B; final ProcessRecord callerApp = mAm.getRecordForAppLocked(caller); ... ActivityRecord activity = null; if (token != null) { // &#x5F97;&#x5230;&#x8BF7;&#x6C42;service&#x64CD;&#x4F5C;&#x7684;activity activity = ActivityRecord.isInStackLocked(token); ... } ... ServiceLookupResult res = retrieveServiceLocked(service, resolvedType, callingPackage, Binder.getCallingPid(), Binder.getCallingUid(), userId, true, callerFg); ... ServiceRecord s = res.record; // &#x5F97;&#x5230;&#x5373;&#x5C06;&#x88AB;&#x7ED1;&#x5B9A;&#x7684;service&#x7EC4;&#x4EF6; ... // &#x4E00;&#x4E2A;service&#x7EC4;&#x4EF6;&#x53EF;&#x80FD;&#x88AB;&#x540C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x4E2D;&#x591A;&#x4E2A;Activity&#x7EC4;&#x4EF6;&#x4F7F;&#x7528;&#x540C;&#x4E00;&#x4E2A; // InnerConnection&#x5BF9;&#x8C61;&#x6765;&#x7ED1;&#x5B9A;&#x3002;&#x56E0;&#x6B64;ServiceRecord&#x5BF9;&#x8C61;&#x53EF;&#x80FD;&#x4F1A;&#x5BF9;&#x5E94;&#x591A;&#x4E2A; // ConnectionRecord&#x5BF9;&#x8C61;&#xFF0C;&#x4ED6;&#x4EEC;&#x88AB;&#x4FDD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x8BE5;&#x5217;&#x8868;&#x88AB;&#x4FDD;&#x5B58;&#x5728; // ServiceRecord::connection&#x6240;&#x63CF;&#x8FF0;&#x7684;HashMap&#x4E2D; // &#x1F3C1; AppBindRecord b = s.retrieveAppBindingLocked(service, callerApp); // &#x7528;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x4E2A;ConnectionRecord&#x5BF9;&#x8C61;c&#xFF0C;&#x8868;&#x793A;activity&#x7EC4;&#x4EF6;&#x901A;&#x8FC7;&#x53C2;&#x6570; // connection&#x7ED1;&#x5B9A;&#x4E86;s&#xFF0C;&#x4E14;activity&#x8BD5;&#x8FD0;&#x884C;&#x5728;callerApp&#x8FDB;&#x7A0B;&#x4E2D;&#x7684; ConnectionRecord c = new ConnectionRecord(b, activity, connection, flags, clientLabel, clientIntent); // connection&#x662F;&#x4E00;&#x4E2A;InnerConnection&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x6B64;&#x5904;&#x83B7;&#x5F97;&#x5176;IBinder&#x63A5;&#x53E3; IBinder binder = connection.asBinder(); // &#x67E5;&#x627E;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4EE5;binder&#x4E3A;key&#x7684;&#x5217;&#x8868; ArrayList&lt;ConnectionRecord&gt; clist = s.connections.get(binder); if (clist == null) { clist = new ArrayList&lt;ConnectionRecord&gt;(); s.connections.put(binder, clist); // &#x4EE5;binder&#x4E3A;key&#x4FDD;&#x5B58; } // &#x8868;&#x793A;activity&#x901A;&#x8FC7;&#x53C2;&#x6570;connection&#x7ED1;&#x5B9A;&#x4E86;s&#x6240;&#x63CF;&#x8FF0;&#x7684;Service&#x7EC4;&#x4EF6; clist.add(c); b.connections.add(c); ... if ((flags&amp;Context.BIND_AUTO_CREATE) != 0) { ... // &#x1F3C1;Step9&#x542F;&#x52A8;service if (bringUpServiceLocked(s, service.getFlags(), callerFg, false) != null) {...} } ... return 1; } Step8 ServiceRecord::retrieveAppBindingLocked(...) ServiceRecord::bindings&#x4E2D;&#x8BB0;&#x5F55;&#x4E86;&#x7ED1;&#x5B9A;&#x4E86;&#x6B64;Service&#x7684;&#x6240;&#x6709;&#x8FDB;&#x7A0B;&#x5BF9;&#x8C61;&#xFF0C;&#x5F62;&#x5F0F;&#x4E3A;&#xFF1A; 123456789101112131415161718192021222324final class ServiceRecord extends Binder {... final ArrayMap&lt;Intent.FilterComparison, IntentBindRecord&gt; bindings = new ArrayMap&lt;Intent.FilterComparison, IntentBindRecord&gt;(); // All active bindings to the service....// frameworks/base/services/core.java/com/android/server/am/ServiceRecord.java:363 public AppBindRecord retrieveAppBindingLocked(Intent intent, ProcessRecord app) { // &#x6839;&#x636E;intent&#x521B;&#x5EFA;FilterComparison&#x5BF9;&#x8C61; Intent.FilterComparison filter = new Intent.FilterComparison(intent); IntentBindRecord i = bindings.get(filter); // &#x6B64;key&#x662F;&#x5426;&#x5BF9;&#x5E94;&#x5185;&#x5BB9; if (i == null) { // &#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x521B;&#x5EFA; i = new IntentBindRecord(this, filter); bindings.put(filter, i); } AppBindRecord a = i.apps.get(app); // &#x662F;&#x5426;&#x5B58;&#x5728;AppBindRecord&#x5BF9;&#x8C61; if (a != null) { // &#x5982;&#x679C;&#x5B58;&#x5728;&#x8BF4;&#x660E;&#x8BE5;&#x8FDB;&#x7A0B;&#x5DF2;&#x7ECF;&#x7ED1;&#x5B9A;&#x8FC7;intent&#x63CF;&#x8FF0;&#x7684;Service&#x7EC4;&#x4EF6; return a; // &#x76F4;&#x63A5;&#x8FD4;&#x56DE; } // &#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x540E;&#x518D;&#x8FD4;&#x56DE; a = new AppBindRecord(this, i, app); i.apps.put(app, a); return a; } Step9 ActiveServices::bringUpServiceLocked(...) 12345678910111213141516171819202122// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:1371 private final String bringUpServiceLocked(ServiceRecord r, int intentFlags, boolean execInFg, boolean whileRestarting) throws TransactionTooLargeException { ... // &#x83B7;&#x5F97;service&#x7684;android:process&#x5C5E;&#x6027; final String procName = r.processName; ProcessRecord app; if (!isolated) { app = mAm.getProcessRecordLocked(procName, r.appInfo.uid, false); ... // Service&#x6307;&#x5B9A;&#x7684;&#x8FDB;&#x7A0B;&#x5DF2;&#x5B58;&#x5728; if (app != null &amp;&amp; app.thread != null) { try { app.addPackage(r.appInfo.packageName, r.appInfo.versionCode, mAm.mProcessStats); realStartServiceLocked(r, app, execInFg); return null; } ... } } else ... return null; } Step10 ActiveServices::realStartServiceLocked(...) 123456789101112131415161718192021222324// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:1501 private final void realStartServiceLocked(ServiceRecord r, ProcessRecord app, boolean execInFg) throws RemoteException { ... r.app = app; ... // &#x8868;&#x793A;r&#x662F;&#x5728;app&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x542F;&#x52A8;&#x7684; final boolean newService = app.services.add(r); ... boolean created = false; try { ... // &#x1F3C1; app.thread&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;ApplicationThreadProxy&#x7684;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C; // &#x5B83;&#x6307;&#x5411;app&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x4E2D;&#x7684;ApplicationThread&#x5BF9;&#x8C61;&#x3002;&#x7EE7;&#x7EED;&#x8BF7;&#x6C42;&#x542F;&#x52A8;service&#x3002; app.thread.scheduleCreateService(r, r.serviceInfo, mAm.compatibilityInfoForPackageLocked(r.serviceInfo.applicationInfo), app.repProcState); ... } catch (DeadObjectException e) ... // &#x1F3C1;Step15&#x5C06;service&#x7EC4;&#x4EF6;&#x548C;&#x8C03;&#x7528;&#x8005;activity&#x7EC4;&#x4EF6;&#x8FDE;&#x63A5;&#x8D77;&#x6765; requestServiceBindingsLocked(r, execInFg); ... } Step11 ApplicationThreadProxy.scheduleCreateService(...) &#x53EF;&#x53C2;&#x89C1;Service&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x4E4B;Step16 &#x5B83;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;SCHEDULE_CREATE_SERVICE_TRANSACTION&#x8BF7;&#x6C42;&#x3002;&#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x90FD;&#x662F;&#x5728;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;&#x5BA2;&#x6237;&#x7AEF;&#x3002; # Step12 ActivityThread::scheduleCreateService(&#x2026;) # Step13 ActivityThread::handleMessage(&#x2026;) # Step14 ActivityThread::handleCreateService(&#x2026;) &#x4ECE;Step12 &#x5230;Step14&#x53EF;&#x53C2;&#x89C1;Service&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x4E4B;Step17~19 &#x4E4B;&#x540E;&#x4FBF;&#x662F;&#x6267;&#x884C;&#x5BA2;&#x6237;&#x7AEF;service&#x7684;onCreate&#x51FD;&#x6570;&#x3002; Step15 ActiveServices::requestServiceBindingsLocked(...) &#x627F;&#x63A5;Step11&#x3002; 123456789101112// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:1491 // &#x53C2;&#x6570;r&#x63CF;&#x8FF0;&#x5DF2;&#x7ECF;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x7684;service&#x7EC4;&#x4EF6; private final void requestServiceBindingsLocked(ServiceRecord r, boolean execInFg) throws TransactionTooLargeException { // &#x5728;&#x5176;bindings&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;&#x4E00;&#x7CFB;&#x5217;IntentBindRecord&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x88AB;&#x7ED1;&#x5B9A;service&#x7684;&#x8FDB;&#x7A0B; for (int i=r.bindings.size()-1; i&gt;=0; i--) { IntentBindRecord ibr = r.bindings.valueAt(i); if (!requestServiceBindingLocked(r, ibr, execInFg, false)) { break; } } } Step16 ActiveServices::requestServiceBindingLocked(...) 12345678910111213141516171819202122// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:1165 private final boolean requestServiceBindingLocked(ServiceRecord r, IntentBindRecord i, boolean execInFg, boolean rebind) throws TransactionTooLargeException { ... // &#x662F;&#x5426;&#x8981;&#x5C06;r&#x91CD;&#x65B0;&#x7ED1;&#x5B9A;&#x5230;i&#x4E2D; if ((!i.requested || rebind) &amp;&amp; i.apps.size() &gt; 0) { try { ... // &#x518D;&#x8BB2;r&#x7ED1;&#x5B9A;&#x5230;i&#x4E4B;&#x524D;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x83B7;&#x5F97;&#x8FD9;&#x4E2A;service&#x7EC4;&#x4EF6;&#x5185;&#x90E8;&#x7684;binder&#x672C;&#x5730;&#x5BF9;&#x8C61;&#xFF0C; // &#x4EE5;&#x4FBF;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x6765;&#x83B7;&#x5F97;&#x8981;&#x7ED1;&#x5B9A;&#x7684;service&#x7EC4;&#x4EF6;&#x7684;&#x8BBF;&#x95EE;&#x63A5;&#x53E3; r.app.thread.scheduleBindService(r, i.intent.getIntent(), rebind, r.app.repProcState);// &#x1F3C1;&#x8BF7;&#x6C42;r&#x8FD4;&#x56DE;&#x5176;&#x5185;&#x90E8;&#x7684;binder&#x672C;&#x5730;&#x5BF9;&#x8C61; // &#x8868;&#x793A;i&#x5DF2;&#x7ECF;&#x63A5;&#x6536;&#x5230;r&#x8FD4;&#x56DE;&#x7684;binder&#x672C;&#x5730;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x514D;&#x4EE5;&#x540E;&#x91CD;&#x590D;&#x8BF7;&#x6C42; if (!rebind) { i.requested = true; } i.hasBound = true; i.doRebind = false; } catch (TransactionTooLargeException e) ... } return true; } Step17 ApplicationThreadProxy::scheduleBindService(...) 12345678910111213// frameworks/base/core/java/android/app/ApplicationThreadNative.java:937 public final void scheduleBindService(IBinder token, Intent intent, boolean rebind, int processState) throws RemoteException { Parcel data = Parcel.obtain(); data.writeInterfaceToken(IApplicationThread.descriptor); data.writeStrongBinder(token); intent.writeToParcel(data, 0); data.writeInt(rebind ? 1 : 0); data.writeInt(processState); mRemote.transact(SCHEDULE_BIND_SERVICE_TRANSACTION, data, null, IBinder.FLAG_ONEWAY); data.recycle(); } &#x6B64;&#x5904;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;SCHEDULE_BIND_SERVICE_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002;&#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x662F;&#x5728;AvtivityManagerService&#x4E2D;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;&#x5BA2;&#x6237;&#x7AEF;&#x6267;&#x884C;&#x3002; # Step18 ApplicationThread::scheduleBindService(...) 12345678910111213// frameworks/base/core/java/android/app/ActivityThread.java:729 public final void scheduleBindService(IBinder token, Intent intent, boolean rebind, int processState) { updateProcessState(processState, false); // &#x5C06;token&#x7684;service&#x7EC4;&#x4EF6;&#x4FE1;&#x606F;&#x5C01;&#x88C5;&#x6210;BinderServiceData&#x5BF9;&#x8C61; BindServiceData s = new BindServiceData(); s.token = token; s.intent = intent; s.rebind = rebind; ... sendMessage(H.BIND_SERVICE, s); } Step19 ApplicationThread::handleMessage(...) 123456789 public void handleMessage(Message msg) {...// frameworks/base/core/java/android/app/ActivityThread.java:1430 case BIND_SERVICE: ... handleBindService((BindServiceData)msg.obj); ... break;... Step20 ApplicationThread::handleBindService(...) 1234567891011121314151617181920212223// frameworks/base/core/java/android/app/ActivityThread.java:2894 private void handleBindService(BindServiceData data) { // data.token&#x6307;&#x5411;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x6307;&#x5411;ServiceRecord&#x5BF9;&#x8C61;&#xFF0C;&#x5F53;service&#x7EC4;&#x4EF6; // &#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x5728;&#x540C;&#x4E00;&#x8FDB;&#x7A0B;&#x65F6;&#xFF0C;&#x6B64;&#x5BF9;&#x8C61;&#x5373;&#x4F4D;&#x4E8E;&#x5BA2;&#x6237;&#x7AEF;&#x7684;service&#x7EC4;&#x4EF6;&#x3002;&#x524D;&#x9762;Step14&#x4E2D;&#xFF0C; // Service&#x7EC4;&#x4EF6;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x4F1A;&#x5C06;&#x81EA;&#x5DF1;&#x4FDD;&#x5B58;&#x5728;ActivityThread::mService // &#x4E2D;&#xFF0C;&#x5E76;&#x4EE5;data.token&#x4E3A;key&#xFF0C;&#x6B64;&#x5904;&#x5C06;&#x5B83;&#x53D6;&#x51FA;&#x3002; Service s = mServices.get(data.token); ... if (s != null) { try { ... try { if (!data.rebind) { // &#x8C03;&#x7528;service&#x7684;onBind(...)&#x83B7;&#x5F97;&#x5176;&#x5185;&#x90E8;&#x7684;Binder&#x672C;&#x5730;&#x5BF9;&#x8C61; IBinder binder = s.onBind(data.intent); // &#x1F3C1;&#x5C06;&#x6B64;&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7ED9;ActivityManagerService ActivityManagerNative.getDefault().publishService( data.token, data.intent, binder); } else ... } ... } ... } } Step21 ActivityManagerProxy::publishService(...) 1234567891011121314// frameworks/base/core/java/android/app/ApplicationThreadNative.java:3775 public void publishService(IBinder token, Intent intent, IBinder service) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(token); intent.writeToParcel(data, 0); data.writeStrongBinder(service); mRemote.transact(PUBLISH_SERVICE_TRANSACTION, data, reply, 0); reply.readException(); data.recycle(); reply.recycle(); } &#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;PUBLISH_SERVICE_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002;&#x4EE5;&#x4E0A;&#x662F;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;ActivityManagerService&#x4E2D;&#x3002; # Step22 ActivityManagerService::publishService(...) 1234567891011// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:15999 // token&#x63CF;&#x8FF0;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x7ED1;&#x5B9A;&#x7684;service&#x7EC4;&#x4EF6; // &#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;intent&#x5411;ActivityManagerService&#x8BF7;&#x6C42;&#x7ED1;&#x5B9A;service&#x7EC4;&#x4EF6; // service&#x6307;&#x5411;service&#x7EC4;&#x4EF6;&#x5185;&#x90E8;&#x7684;&#x4E00;&#x4E2A;binder&#x672C;&#x5730;&#x5BF9;&#x8C61; public void publishService(IBinder token, Intent intent, IBinder service) { ... synchronized(this) { ... mServices.publishServiceLocked((ServiceRecord)token, intent, service); } } Step23 ActiveServices::publishServiceLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:867 void publishServiceLocked(ServiceRecord r, Intent intent, IBinder service) { final long origId = Binder.clearCallingIdentity(); try { ... if (r != null) { Intent.FilterComparison filter = new Intent.FilterComparison(intent); IntentBindRecord b = r.bindings.get(filter); // b.received&#x63CF;&#x8FF0;r&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5C06;&#x5176;&#x5185;&#x90E8;&#x7684;binder&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7ED9; // ActivitManagerService&#x4E86; if (b != null &amp;&amp; !b.received) { b.binder = service; b.requested = true; b.received = true; // &#x6BCF;&#x4E2A;&#x9700;&#x8981;&#x7ED1;&#x5B9A;r&#x7684;Activity&#x7EC4;&#x4EF6;&#x90FD;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;ConnectionRecord&#x5BF9;&#x8C61; // &#x6765;&#x63CF;&#x8FF0;&#x3002;&#x4E0D;&#x540C;&#x7684;Activity&#x53EF;&#x80FD;&#x4F1A;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;InnerConnection&#x5BF9;&#x8C61; // &#x6765;&#x7ED1;&#x5B9A;Service&#x7EC4;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;ActivityManagerService&#x4F1A;&#x628A;&#x8FD9;&#x4E9B;&#x4F7F;&#x7528; // &#x76F8;&#x540C;InnerConnection&#x5BF9;&#x8C61;&#x7684;ConnectionRecord&#x5BF9;&#x8C61;&#x653E;&#x5230;&#x540C;&#x4E00;&#x4E2A;&#x5217; // &#x8868;&#x4E2D;&#x3002;&#x6B64;&#x5904;&#x83B7;&#x5F97;&#x6B64;&#x5217;&#x8868; for (int conni=r.connections.size()-1; conni&gt;=0; conni--) { ArrayList&lt;ConnectionRecord&gt; clist = r.connections.valueAt(conni); for (int i=0; i&lt;clist.size(); i++) { ConnectionRecord c = clist.get(i); ... try { // conn&#x5F15;&#x7528;&#x4E86;InnerConnection&#x7684;Binder&#x672C;&#x5730;&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5; // &#x5BF9;&#x8C61;&#x7528;&#x6765;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;Service&#x7EC4;&#x4EF6;&#x548C;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6;&#x3002; // &#x6B64;&#x5904;&#x8C03;&#x7528;&#x5BA2;&#x6237;&#x7AEF;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x4E00;&#x4E2A;InnerConnection&#x5BF9;&#x8C61; // &#x7684;&#x6210;&#x5458;&#x51FD;&#x6570;connected(...)&#x6765;&#x8FDE;&#x63A5;service&#x7EC4;&#x4EF6;&#x3002; c.conn.connected(r.name, service); } catch (Exception e) ... } } } ... } } ... } &#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x662F;&#x5728;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;&#x5BA2;&#x6237;&#x7AEF;&#x7A0B;&#x5E8F;&#x3002; # Step24 LoadedApk::ServiceDispatcher::connected(...) 1234567891011121314public final class LoadedApk {...// frameworks/base/core/java/android/app/LoadedApk.java:1048 static final class ServiceDispatcher { ... private static class InnerConnection extends IServiceConnection.Stub { ... public void connected(ComponentName name, IBinder service) throws RemoteException { LoadedApk.ServiceDispatcher sd = mDispatcher.get(); if (sd != null) { sd.connected(name, service); } } } Step26 LoadedApk::ServiceDispatcher::connected(...) 123456789101112public final class LoadedApk {... static final class ServiceDispatcher {... // frameworks/base/core/java/android/app/LoadedApk.java:1146 public void connected(ComponentName name, IBinder service) { if (mActivityThread != null) { // &#x5C01;&#x88C5;&#x6210;RunConnection&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x5C06;&#x6B64;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x5230;&#x5BA2;&#x6237;&#x7AEF;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002; // &#x8BE5;&#x6D88;&#x606F;&#x6700;&#x7EC8;&#x5728;RunConnection::run&#x4E2D;&#x88AB;&#x5904;&#x7406;&#x3002; mActivityThread.post(new RunConnection(name, service, 0)); } else ... } ServiceDispatcher::mActivityThread&#x6307;&#x5411;&#x4E0E;&#x8C03;&#x7528;&#x7AEF;Activity&#x76F8;&#x5173;&#x8054;&#x7684;Handler&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x5411;&#x8C03;&#x7528;&#x7AEF;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x3002; # Setp27 LoadedApk::ServiceDispatcher::RunConnection::run() 12345678910111213// frameworks/base/core/java/android/app/LoadedApk.java:1231 private final class RunConnection implements Runnable { RunConnection(ComponentName name, IBinder service, int command) { mName = name; mService = service; mCommand = command; } public void run() { if (mCommand == 0) { doConnected(mName, mService); // &#x1F3C1; } else ... } Step28 LoadedApk::ServiceDispatcher:: 123456789101112// frameworks/base/core/java/android/app/LoadedApk.java:1175 public void doConnected(ComponentName name, IBinder service) { ... // If there is a new service, it is now connected. if (service != null) { // mConnection&#x6307;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x5185;&#x90E8;&#x6210;&#x5458;&#x53D8;&#x91CF;serviceConnection&#x6240;&#x63CF;&#x8FF0;&#x7684; // service&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x6B64;&#x6B64;&#x5904;&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x7684;serviceConnection&#x7684; // &#x6210;&#x5458;&#x51FD;&#x6570;onServiceConnected(...)&#x4EE5;&#x4FBF;&#x5C06;service&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x672C;&#x5730; // binder&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002; mConnection.onServiceConnected(name, service); } } &#x5BA2;&#x6237;&#x7AEF;&#x83B7;&#x5F97;&#x4E86;service&#x7EC4;&#x4EF6;&#x7684;&#x8BBF;&#x95EE;&#x63A5;&#x53E3;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x8BE5;&#x63A5;&#x53E3;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Service启动过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CMake + gtest + boost]]></title>
    <url>%2F2016%2F12%2F11%2F2016%2F1211cmake_gtest_boost%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x53C2;&#x4E0E;&#x4E00;&#x4E2A;&#x8DE8;&#x5E73;&#x53F0;&#x534F;&#x4F5C;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x5176;&#x4E2D;&#x7684;CMake&#x3001;googletest&#x7684;&#x5F15;&#x5165;&#x4EE5;&#x53CA;&#x652F;&#x6491;&#x5C42;&#x57FA;&#x7840;&#x6A21;&#x5757;&#x7684;&#x7EC4;&#x7EC7;&#x5F62;&#x5F0F;&#xFF0C;&#x662F;&#x6211;&#x4E4B;&#x524D;&#x7684;&#x9879;&#x76EE;&#x91CC;&#x6CA1;&#x6709;&#x63A5;&#x89E6;&#x8FC7;&#x7684;&#x3002;&#x5F88;&#x5FEB;&#x6211;&#x4E5F;&#x9700;&#x8981;&#x7EC4;&#x7EC7;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x7684;&#x8DE8;&#x5E73;&#x53F0;&#x9879;&#x76EE;&#xFF0C;&#x6240;&#x4EE5;&#x8D81;&#x8FD9;&#x6B21;&#x53C2;&#x4E0E;&#xFF0C;&#x628A;&#x76F8;&#x5173;&#x7684;&#x5DE5;&#x5177;&#x6478;&#x7D22;&#x4E00;&#x904D;&#x3002; &#x7528;CMake&#x5B9E;&#x73B0;&#x8DE8;&#x5E73;&#x53F0;&#x9879;&#x76EE;&#x914D;&#x7F6E; &#x4EE5;&#x524D;&#x5728;Windows&#x4E0B;&#x5199;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x7528;Visual Studio&#x751F;&#x6210;solution&#xFF0C;&#x5E76;&#x5728;&#x91CC;&#x9762;&#x914D;&#x7F6E;&#xFF0C;&#x540C;&#x65F6;&#x628A;solution&#x6587;&#x4EF6;&#x4E0A;&#x4F20;svn&#xFF0C;&#x5728;macOS&#x4E0B;&#x5219;&#x4F7F;&#x7528;xcode&#x505A;&#x540C;&#x6837;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x4F46;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x9700;&#x8981;&#x8DE8;&#x5E73;&#x53F0;&#x534F;&#x4F5C;&#xFF0C;&#x9700;&#x8981;&#x5728;Windows&#x3001;Linux&#x3001;macOS&#x4E0B;&#x540C;&#x65F6;&#x7F16;&#x8BD1;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5C31;&#x6709;&#x5F88;&#x5927;&#x7684;&#x95EE;&#x9898;&#xFF1A;&#x9879;&#x76EE;&#x9700;&#x8981;&#x5F15;&#x5165;&#x54EA;&#x4E9B;&#x6A21;&#x5757;&#x3001;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x8981;&#x5728;&#x5404;&#x5E73;&#x53F0;&#x4E0B;&#x7684;IDE&#x5DE5;&#x5177;&#x91CC;&#x5404;&#x81EA;&#x5B8C;&#x6210;&#xFF0C;&#x4F46;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x65E0;&#x6CD5;&#x76F8;&#x4E92;&#x540C;&#x6B65;&#xFF0C;&#x8FD9;&#x5C31;&#x5F15;&#x5165;&#x4E86;&#x5F88;&#x591A;&#x91CD;&#x590D;&#x5DE5;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x540C;&#x5E73;&#x53F0;&#x4E0B;&#x53EF;&#x80FD;&#x662F;&#x4E0D;&#x540C;&#x7684;RD&#x5728;&#x8D1F;&#x8D23;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x5E26;&#x6765;&#x4E0D;&#x4E00;&#x81F4;&#x3002; &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;CMake&#x51FA;&#x573A;&#x4E86;&#xFF0C;&#x5B83;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x5DE5;&#x7A0B;&#x7684;&#x7EC4;&#x7EC7;&#x5F62;&#x5F0F;&#xFF0C;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x6210;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x8FD8;&#x662F;&#x9759;&#x6001;/&#x52A8;&#x6001;&#x5E93;&#x6587;&#x4EF6;&#xFF0C;&#x5404;&#x6A21;&#x5757;&#x7684;&#x7F16;&#x8BD1;&#x9009;&#x9879;&#x3001;&#x94FE;&#x63A5;&#x9009;&#x9879;&#x7B49;&#x7B49;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;CMake&#x53EF;&#x4EE5;&#x7528;&#x8FD9;&#x4E00;&#x5957;&#x4EE3;&#x7801;&#x5728;&#x5404;&#x5E73;&#x53F0;&#x4E0B;&#x751F;&#x6210;&#x6307;&#x5B9A;IDE&#x5DE5;&#x5177;&#x7684;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x652F;&#x6301;&#x7684;IDE&#x5305;&#x62EC;Visual Studio&#x3001;XCode&#x3001;Makefiles&#x3001;Eclipse&#x7B49;&#x3002; &#x5176;&#x5B9E;&#x4EE5;&#x524D;&#x4EC5;&#x5728;Windows&#x4E0B;&#x4F7F;&#x7528;Visual Studio&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x6210;&#x591A;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6BD4;&#x5982;&#x6700;&#x5E38;&#x89C1;&#x7684;32&#x4F4D;&#x3001;64&#x4F4D;&#x5404;&#x81EA;&#x7684;&#x9879;&#x76EE;&#x914D;&#x7F6E;&#x9700;&#x8981;&#x540C;&#x6B65;&#xFF0C;&#x66F4;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#x7684;&#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4EFD;&#x4EE3;&#x7801;&#x8981;&#x7F16;&#x8BD1;&#x51FA;&#x4E0D;&#x540C;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x6BD4;&#x5982;&#x8981;&#x628A;&#x6B63;&#x5F0F;&#x7248;&#x7684;exe&#x4E2D;&#x90E8;&#x5206;&#x6A21;&#x5757;&#x4EE5;DEBUG Lib&#x5E93;&#x7684;&#x5F62;&#x5F0F;&#x7F16;&#x8BD1;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;exe&#x4EE5;&#x5B8C;&#x6210;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002;&#x4EE5;&#x524D;&#x6211;&#x5C31;&#x662F;&#x7528;VS&#x751F;&#x6210;&#x591A;&#x5957;&#x9879;&#x76EE;&#x914D;&#x7F6E;&#xFF0C;&#x5F53;&#x9879;&#x76EE;&#x5927;&#x5230;&#x6709;&#x767E;&#x5341;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x4E00;&#x65E6;&#x67D0;&#x4E9B;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x6216;&#x8005;&#x7F16;&#x8BD1;&#x3001;&#x94FE;&#x63A5;&#x9009;&#x9879;&#x6709;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x5C31;&#x5341;&#x5206;&#x75DB;&#x82E6;&#xFF0C;&#x540C;&#x6837;&#x7684;&#x8BBE;&#x7F6E;&#x8981;&#x505A;N&#x904D;&#x3002; &#x8FD9;&#x90FD;&#x662F;CMake&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5F15;&#x5165;CMake&#x4EE5;&#x540E;&#xFF0C;&#x5404;IDE&#x7684;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#x5C31;&#x6210;&#x4E86;CMake&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x9700;&#x8981;&#x628A;CMakelists.txt&#x4E0A;&#x4F20;svn&#xFF0C;sln&#x3001;xcodeproj&#x4E4B;&#x7C7B;&#x5DE5;&#x5177;&#x76F8;&#x5173;&#x7684;&#x5DE5;&#x7A0B;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x90FD;&#x4E0D;&#x7528;&#x518D;&#x4E0A;&#x4F20;&#xFF0C;&#x6BCF;&#x6B21;&#x751F;&#x6210;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x8BA9;&#x6A21;&#x5757;&#x771F;&#x6B63;&#x6210;&#x4E3A;&#x79EF;&#x6728; &#x4EE5;&#x524D;&#x9879;&#x76EE;&#x7F3A;&#x4E4F;&#x6A21;&#x5757;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;&#xFF1A;A&#x9700;&#x8981;&#x538B;&#x7F29;&#xFF0C;&#x5C31;&#x4E0B;&#x4E00;&#x4EFD;ziplib&#x7684;&#x4EE3;&#x7801;&#x653E;&#x5230;&#x5DE5;&#x7A0B;&#x91CC;&#xFF1B;B&#x9700;&#x8981;&#x4E0B;&#x8F7D;&#xFF0C;&#x518D;&#x4E0B;&#x4E00;&#x4EFD;libcurl&#xFF1B;C&#x4E5F;&#x9700;&#x8981;&#x538B;&#x7F29;&#xFF0C;&#x5374;&#x4E0D;&#x77E5;&#x9053;&#x5DE5;&#x7A0B;&#x91CC;&#x5DF2;&#x7ECF;&#x6709;&#x4E00;&#x4EFD;ziplib&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x81EA;&#x5DF1;&#x53C8;&#x5F04;&#x4E86;&#x4E00;&#x5957;libzip&#x8FC7;&#x6765;&#xFF0C;&#x51E0;&#x5E74;&#x4E0B;&#x6765;&#xFF0C;&#x5DE5;&#x7A0B;&#x6DF7;&#x4E71;&#x4E0D;&#x582A;&#xFF0C;&#x79EF;&#x91CD;&#x96BE;&#x8FD4;&#x3002; &#x7406;&#x60F3;&#x7684;&#x505A;&#x6CD5;&#x5E94;&#x8BE5;&#x662F;&#x5728;&#x9009;&#x578B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5BF9;&#x57FA;&#x7840;&#x6A21;&#x5757;&#x4F5C;&#x51FA;&#x8BC4;&#x4F30;&#xFF0C;&#x627E;&#x5230;&#x8D28;&#x91CF;&#x6700;&#x9AD8;&#x3001;&#x6700;&#x7A33;&#x5B9A;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x653E;&#x5230;&#x516C;&#x5171;&#x6A21;&#x5757;&#x6C60;&#x91CC;&#xFF0C;&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#x6C60;&#x662F;&#x72EC;&#x7ACB;&#x4E8E;&#x4E1A;&#x52A1;&#x9879;&#x76EE;&#x7684;&#x3002;&#x4E1A;&#x52A1;&#x9879;&#x76EE;&#x6587;&#x4EF6;&#x91CC;&#x4EC5;&#x5B58;&#x653E;&#x81EA;&#x5DF1;&#x5F00;&#x53D1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;&#x811A;&#x672C;&#x628A;&#x9700;&#x8981;&#x7684;&#x57FA;&#x7840;&#x6A21;&#x5757;&#x4ECE;&#x516C;&#x5171;&#x6A21;&#x5757;&#x6C60;&#x4E2D;check out&#x51FA;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x7528;CMake&#x751F;&#x6210;sln&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x53EF;&#x80FD;&#x5305;&#x542B;&#x767E;&#x5341;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x53EF;&#x662F;&#x4EC5;&#x5728;svn&#x4E2D;&#x7BA1;&#x7406;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x51CF;&#x5C11;SVN&#x7684;&#x4F53;&#x79EF;&#x3002; &#x8BA9;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x6210;&#x4E3A;&#x4E60;&#x60EF; &#x8FD9;&#x4E00;&#x70B9;&#x5C31;&#x4E0D;&#x518D;&#x591A;&#x8BF4;&#x4E86;&#xFF0C;&#x4EE5;&#x524D;&#x6211;&#x81EA;&#x5DF1;&#x505A;&#x8FC7;&#x51E0;&#x4E2A;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF0C;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x7279;&#x70B9;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x66FE;&#x7ECF;&#x7528;C++&#x3001;python&#x505A;&#x8FC7;&#x5404;&#x79CD;&#x81EA;&#x6D4B;&#x673A;&#x5236;&#x3002;&#x4E00;&#x4E2A;&#x725B;&#x903C;&#x7684;&#x5F00;&#x53D1;&#xFF0C;&#x80FD;&#x591F;&#x4EE5;&#x4E00;&#x5F53;&#x5341;&#xFF0C;&#x9664;&#x4E86;&#x9AD8;&#x6548;&#xFF0C;&#x8FD8;&#x8981;&#x6709;&#x9AD8;&#x7A33;&#x5B9A;&#x6027;&#xFF0C;&#x4E0D;&#x8BA9;&#x6D4B;&#x8BD5;&#x6574;&#x5929;&#x8FFD;&#x5728;&#x5C41;&#x80A1;&#x540E;&#x5934;&#x6539;bug&#x3002;Googletest&#x4E3A;&#x6B64;&#x505A;&#x4E86;&#x5F88;&#x4E0D;&#x9519;&#x7684;&#x652F;&#x6491;&#x3002; &#x575A;&#x51B3;&#x62B5;&#x5236;&#x95ED;&#x95E8;&#x9020;&#x8F66; &#x5728;&#x505A;&#x9879;&#x76EE;&#x7684;&#x65F6;&#x5019;&#x7ECF;&#x5E38;&#x9047;&#x5230;&#x5BF9;&#x9020;&#x8F66;&#x8F6E;&#x6709;&#x763E;&#x7684;&#x4EBA;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x79CD;&#x4EBA;&#x4E3B;&#x5BFC;&#x9879;&#x76EE;&#xFF0C;&#x90A3;&#x5C06;&#x662F;&#x5669;&#x68A6;&#x3002;&#x4ECA;&#x5929;&#x7684;&#x5F00;&#x6E90;&#x4E16;&#x754C;&#x5DF2;&#x7ECF;&#x975E;&#x5E38;&#x5E7F;&#x9614;&#x4E14;&#x6210;&#x719F;&#xFF0C;&#x80FD;&#x9488;&#x5BF9;&#x9700;&#x6C42;&#x627E;&#x5230;&#x6700;&#x597D;&#x7684;&#x5F00;&#x6E90;&#x6A21;&#x5757;&#xFF0C;&#x628A;&#x5B83;&#x5403;&#x900F;&#x3001;&#x5E94;&#x7528;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x9879;&#x76EE;&#x5F53;&#x4E2D;&#x7EDD;&#x5BF9;&#x662F;&#x5F00;&#x53D1;&#x80FD;&#x529B;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;&#x5584;&#x4E8E;&#x53D1;&#x73B0;&#x548C;&#x4F7F;&#x7528;&#x4F18;&#x79C0;&#x7684;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#x597D;&#x5904;&#x591A;&#x591A;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x8BBE;&#x8BA1;&#x3001;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x4EE5;&#x53CA;&#x7F16;&#x7801;&#x89C4;&#x8303;&#x90FD;&#x80FD;&#x6210;&#x4E3A;&#x7A0B;&#x5E8F;&#x5458;&#x4E4B;&#x95F4;&#x6C9F;&#x901A;&#x7684;&#x6807;&#x51C6;&#x534F;&#x8BAE;&#x3002;&#x8FC7;&#x53BB;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x5F88;&#x591A;&#x4E1C;&#x897F;&#x90FD;&#x80FD;&#x5728;&#x5F00;&#x6E90;&#x4E16;&#x754C;&#x91CC;&#x627E;&#x5230;&#x4EE3;&#x66FF;&#x54C1;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x6BCF;&#x9694;&#x51E0;&#x5E74;&#x4E5F;&#x5E94;&#x8BE5;&#x5347;&#x7EA7;&#x4E00;&#x4E0B;&#x81EA;&#x5DF1;&#x5927;&#x8111;&#x91CC;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x628A;&#x90A3;&#x4E9B;&#x9648;&#x65E7;&#x7684;&#x4E1C;&#x897F;&#x6C38;&#x4E45;&#x5220;&#x9664;&#xFF0C;&#x914D;&#x5907;&#x4E0A;&#x6700;&#x65B0;&#x7684;&#x6A21;&#x5757;&#x3002; &#x5176;&#x5B9E;boost&#x4E5F;&#x4E0D;&#x662F;&#x5565;&#x65B0;&#x4E1C;&#x897F;&#x4E86;&#xFF0C;&#x6211;&#x7684;&#x9879;&#x76EE;&#x91CC;&#x5927;&#x90E8;&#x5206;&#x6A21;&#x5757;&#x6709;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x9700;&#x6C42;&#xFF0C;&#x5C31;&#x662F;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x89E3;&#x6790;&#xFF0C;&#x5F53;&#x5E74;&#x5F88;&#x591A;&#x5F00;&#x53D1;&#x90FD;&#x4E3A;&#x6B64;&#x5404;&#x81EA;&#x5B9E;&#x73B0;&#x4E00;&#x5957;&#xFF0C;&#x5BFC;&#x81F4;&#x5404;&#x81EA;&#x80FD;&#x63A5;&#x6536;&#x7684;&#x53C2;&#x6570;&#x683C;&#x5F0F;&#x90FD;&#x4E0D;&#x7EDF;&#x4E00;&#x3002;&#x6211;&#x5F53;&#x5E74;&#x662F;&#x4ECE;Solaris&#x91CC;&#x62C6;&#x51FA;&#x6765;&#x7684;getopt&#xFF0C;&#x6539;&#x5427;&#x6539;&#x5427;&#x5B9E;&#x73B0;&#x51FA;Windows&#x7248;&#x672C;&#x3002;&#x524D;&#x5929;&#x5199;&#x4E2A;&#x5C0F;&#x4EE3;&#x7801;&#x9047;&#x5230;&#x7B2C;&#x4E00;&#x4EF6;&#x4E8B;&#x513F;&#x53C8;&#x662F;&#x53C2;&#x6570;&#x89E3;&#x6790;&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x5B9E;boost&#x7684;program options&#x5DF2;&#x7ECF;&#x6709;&#x5F88;&#x5B8C;&#x5907;&#x7684;&#x5B9E;&#x73B0;&#x4E86;&#xFF0C;&#x7ACB;&#x9A6C;&#x653E;&#x5F03;&#x81EA;&#x5DF1;&#x7684;&#x7834;&#x73A9;&#x610F;&#xFF0C;&#x6539;&#x6295;boost&#x3002; &#x7EC4;&#x7EC7;&#x4E00;&#x4E2A;test&#x9879;&#x76EE; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x628A;&#x8FD9;&#x51E0;&#x4E2A;&#x73A9;&#x5177;&#x600E;&#x4E48;&#x62FC;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; 123456sgdxtest/&#x251C;&#x2500;&#x2500; co.bat&#x2514;&#x2500;&#x2500; src &#x251C;&#x2500;&#x2500; CMakeLists.txt &#x2514;&#x2500;&#x2500; main &#x2514;&#x2500;&#x2500; program_options_unittest.cpp &#x7EC4;&#x7EC7;&#x516C;&#x5171;&#x6A21;&#x5757; &#x5176;&#x4E2D;co.bat&#x7528;&#x4E8E;checkout&#x516C;&#x5171;&#x6A21;&#x5757;&#xFF0C;&#x5728;&#x672C;&#x9879;&#x76EE;&#x4E2D;&#x5C31;&#x662F;googletest&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12# co.batsvn co http://svn.xxx.com/svn/sgdxmodules/googletest-1.8.0 src/ &#x6267;&#x884C;&#x4E86;co.bat&#x4E4B;&#x540E;&#xFF0C;&#x4EE3;&#x7801;&#x6811;&#x4E3A;&#xFF1A; 12345678sgdxtest/&#x251C;&#x2500;&#x2500; co.bat&#x2514;&#x2500;&#x2500; src &#x251C;&#x2500;&#x2500; CMakeLists.txt &#x251C;&#x2500;&#x2500; googletest &#x2502;&#xA0;&#xA0; &#x2514;&#x2500;&#x2500; ... ... &#x2514;&#x2500;&#x2500; main &#x2514;&#x2500;&#x2500; program_options_unittest.cpp googletest&#x662F;&#x4ECE;github&#x4E0B;&#x8F7D;&#x7684;&#x7A33;&#x5B9A;&#x7248;&#x672C;&#xFF0C;&#x653E;&#x5230;&#x81EA;&#x5DF1;&#x7684;svn&#x516C;&#x5171;&#x6A21;&#x5757;&#x6C60;&#x91CC;&#x3002; &#x7F16;&#x5199;CMakeLists.txt CMakeLists.txt&#x7684;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425cmake_minimum_required(VERSION 3.7)project(SGDXTest)set(CMAKE_CXX_STANDARD 11)set(CMAKE_CXX_STANDARD_REQUIRED ON)message(STATUS &quot;C++11 support has been enabled by default.&quot;)set(Boost_USE_STATIC_LIBS ON) # &#x9759;&#x6001;&#x94FE;&#x63A5;boost&#xFF0C;&#x5E76;&#x5236;&#x5B9A;&#x9700;&#x8981;&#x7684;lib&#x5E93;find_package(Boost 1.62.0 COMPONENTS program_options REQUIRED)if(NOT Boost_FOUND) message(&quot;&#x672A;&#x53D1;&#x73B0;Boost!&quot;)endif()# &#x8BBE;&#x7F6E;googletest&#x7684;include&#x76EE;&#x5F55;include_directories(${PROJECT_SOURCE_DIR}/googletest/include ${Boost_INCLUDE_DIRS})# &#x6DFB;&#x52A0;googletest&#x5B50;&#x9879;&#x76EE;add_subdirectory(${PROJECT_SOURCE_DIR}/googletest)# &#x6307;&#x5B9A;&#x751F;&#x6210;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x9700;&#x8981;&#x94FE;&#x63A5;&#x7684;&#x5E93;&#x6587;&#x4EF6;add_executable(sgdx_test ${PROJECT_SOURCE_DIR}/main/program_options_unittest.cpp)target_link_libraries(sgdx_test gtest gtest_main)target_link_libraries(sgdx_test ${Boost_LIBRARIES}) &#x7F16;&#x5199;TestCase program_options_unitest.cpp&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;iterator&gt;#include &lt;gtest/gtest.h&gt;#include &lt;boost/program_options.hpp&gt;namespace boost_test{namespace po = boost::program_options;using namespace std;class ProgramOptionsTest : public testing::Test{ protected: static void SetUpTestCase(){ } static void TearDownTestCase(){ }};TEST_F(ProgramOptionsTest, Test1){ int opt; po::options_description desc(&quot;Allowed options&quot;); desc.add_options() (&quot;help,h&quot;, &quot;product help message&quot;) (&quot;optimization_level&quot;, po::value&lt;int&gt;(&amp;opt)-&gt;default_value(10)) (&quot;include-dir,I&quot;, po::value&lt; vector&lt;string&gt; &gt;(), &quot;include path&quot;) ; // a.out --optimization_level 2 -I&quot;c:/boost/include&quot;, &quot;gtest/include&quot; const char* argv[] = {&quot;a.out&quot;, &quot;--optimization_level&quot;, &quot;2&quot;, &quot;-I&quot;, &quot;c:/boost/include&quot;, &quot;-I&quot;, &quot;gtest/include&quot; }; int argc = 7; po::variables_map vm; po::store(po::parse_command_line(argc, argv, desc), vm); po::notify(vm); ASSERT_EQ(vm.count(&quot;help&quot;), 0); ASSERT_EQ(vm.count(&quot;optimization_level&quot;), 1); ASSERT_EQ(vm[&quot;optimization_level&quot;].as&lt;int&gt;(), 2); ASSERT_EQ(opt, 2); ASSERT_EQ(vm.count(&quot;include-dir&quot;), 1); const vector&lt;string&gt; vct = vm[&quot;include-dir&quot;].as&lt; vector&lt;string&gt; &gt;(); ASSERT_EQ(vct.size(), 2); ASSERT_EQ(vct[0], &quot;c:/boost/include&quot;); ASSERT_EQ(vct[1], &quot;gtest/include&quot;);}; &#x5B83;&#x5199;&#x4E86;&#x4E00;&#x4E2A;&#x7528;&#x4F8B;&#xFF0C;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;boost::program_options&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x4EE3;&#x7801;&#x80FD;&#x7F16;&#x8BD1;&#xFF0C;&#x9700;&#x8981;&#x5B89;&#x88C5;boost&#x3002; &#x5B89;&#x88C5;boost &#x5728;macOS&#x4E0B;&#xFF0C;&#x5B89;&#x88C5;boost&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C; 1$ brew install boost &#x5373;&#x53EF;&#x3002;&#x6211;&#x8BD5;&#x4E86;&#x5728;Windows&#x4E0B;&#x7F16;&#x8BD1;&#x6E90;&#x7801;&#xFF0C;&#x4E5F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C; 12booststrap.batb2.exe &#x5373;&#x53EF;&#x3002; &#x4F7F;&#x7528;CMake&#x751F;&#x6210;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6; &#x63A5;&#x4E0B;&#x6765;&#x5373;&#x53EF;&#x4F7F;&#x7528;CMake&#x751F;&#x6210;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x662F;&#x5728;macOS&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;make&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#xFF1A; 12345$ cd sgdxtest/src$ mkdir build$ cd build$ cmake ..$ make]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>googletest CMake boost</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[googletest在mac下的使用]]></title>
    <url>%2F2016%2F11%2F27%2F2016%2F1127gtest%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x7528;&#x5230;googletest&#x7ED9;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;googletest&#x7684;&#x8BBE;&#x8BA1;&#x3001;&#x4F7F;&#x7528;&#x548C;&#x4EE5;&#x524D;&#x7528;&#x5230;&#x7684;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x90FD;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x6DF1;&#x7A76;&#x3002;&#x4E3B;&#x8981;&#x662F;&#x5728;macOS xcode&#x4E0B;&#xFF0C;&#x642D;&#x5EFA;&#x73AF;&#x5883;&#x8D39;&#x4E86;&#x4E0D;&#x5C11;&#x529F;&#x592B;&#xFF0C;&#x5907;&#x5FD8;&#x4E00;&#x4E0B;&#x5427;&#x3002; &#x4E0B;&#x8F7D;googletest &#x4E0B;&#x8F7D;googletest&#xFF0C;&#x89E3;&#x538B;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x5047;&#x8BBE;&#x8DEF;&#x5F84;&#x4E3A;\((GTest)&#x3002;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6253;&#x5F00;\)(GTest)/googletest/xcode/gtest.xcodeproject&#xFF0C;&#x2318;-B&#x7F16;&#x8BD1;&#x4E00;&#x5207;OK&#x3002; &#x6DFB;&#x52A0;MyTest &#x6DFB;&#x52A0;&#x4E00;&#x4E2A;Command Line&#x7C7B;&#x578B;&#x7684;Target&#xFF1A; &#x4FEE;&#x6539;&#x7F16;&#x8BD1;&#x9009;&#x9879; &#x5C06;gtest-framework&#x548C;MyTest&#x7684;Build Settings - Apple LLVM 8.0 - Language - C++ - C++ Standard Library&#x90FD;&#x6539;&#x4E3A;libstdc++(GNU C++ standard library&#xFF1A; &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5728;MyTest&#x4E2D;&#x8FD8;&#x627E;&#x4E0D;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7F16;&#x8BD1;&#x9009;&#x9879;&#xFF0C;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x4F1A;&#x5F97;&#x5230;&#x51E0;&#x4E2A;Warning&#x548C;Error&#xFF0C;&#x70B9;&#x51FB;gtest&#x4E0B;&#x7684;Warning&#x4F1A;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x63D0;&#x793A;&#xFF1A; &#x70B9;&#x51FB;Perform Changes&#x3002;&#x7136;&#x540E;&#x5728;MyTest&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;Build Settings - Apple LLVM 8.0 - Language - C++ - C++ Standard Library&#x4E86;&#xFF0C;&#x6539;&#x4E3A;libstdc++(GNU C++ standard library&#x3002; &#x518D;&#x7F16;&#x8BD1;MyTest&#x5C31;OK&#x4E86;&#x3002; &#x6DFB;&#x52A0;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B; &#x4FEE;&#x6539;MyTest/main.cpp&#x4E3A; 1234567891011121314151617181920212223242526#include &quot;gtest/gtest.h&quot;using namespace std;namespace { class FooTest : public ::testing::Test { protected: FooTest() {} virtual ~FooTest() {} virtual void SetUp() {} virtual void TearDown() {} }; TEST_F(FooTest, MethodBarDoesAbc) { EXPECT_EQ(0, 0); } TEST_F(FooTest, DoesXyz) { } }int main(int argc, char **argv) { ::testing::InitGoogleTest(&amp;argc, argv); return RUN_ALL_TESTS();} &#x4E3A;MyTest&#x6DFB;&#x52A0;gtest.framework&#xFF1A; &#x4E3A;MyTest&#x6DFB;&#x52A0;include&#x8DEF;&#x5F84;&#xFF1A; # &#x7F16;&#x8BD1;&#x6267;&#x884C; &#x9F50;&#x6D3B;&#x513F;&#xFF0C;&#x6267;&#x884C;&#x2318;-R&#xFF1A; 12345678910111213[==========] Running 2 tests from 1 test case.[----------] Global test environment set-up.[----------] 2 tests from FooTest[ RUN ] FooTest.MethodBarDoesAbc[ OK ] FooTest.MethodBarDoesAbc (0 ms)[ RUN ] FooTest.DoesXyz[ OK ] FooTest.DoesXyz (0 ms)[----------] 2 tests from FooTest (0 ms total)[----------] Global test environment tear-down[==========] 2 tests from 1 test case ran. (1 ms total)[ PASSED ] 2 tests.Program ended with exit code: 0]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>googletest</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Service启动过程学习笔记（一）——跨进程启动Service组件]]></title>
    <url>%2F2016%2F11%2F21%2F2016%2F1121ServiceStarting1%2F</url>
    <content type="text"><![CDATA[&#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;startService(...)&#x542F;&#x52A8;Service&#x7EC4;&#x4EF6;&#x65F6;&#xFF0C;&#x5B83;&#x8C03;&#x7528;&#x7684;&#x662F;ContextWrapper::startService(...)&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4EE5;&#x6B64;&#x51FD;&#x6570;&#x4E3A;&#x8D77;&#x70B9;&#x5B66;&#x4E60;Service&#x7EC4;&#x4EF6;&#x7684;&#x542F;&#x52A8;&#x3002; # Step1 ContextWrapper::startService(...) 123456789public class ContextWrapper extends Context { Context mBase; // mBase&#x5B9E;&#x9645;&#x6307;&#x5411;&#x4E00;&#x4E2A;ContextImpl&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x6240;&#x8FD0;&#x884C;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x73AF;&#x5883;... ...// frameworks/base/core/java/android/content/ContextWrapper.java:580 public ComponentName startService(Intent service) { return mBase.startService(service); // &#x1F3C1; }... ...} Step2 ContextImpl::startService(...) 1234567891011121314151617181920212223242526// frameworks/base/core/java/android/app/ContextImpl.java:1220 public ComponentName startService(Intent service) { ... return startServiceCommon(service, mUser); // &#x1F3C1; }// frameworks/base/core/java/android/app/ContextImpl.java:1236 private ComponentName startServiceCommon(Intent service, UserHandle user) { try { validateServiceIntent(service); service.prepareToLeaveProcess(); // getDefault()&#x83B7;&#x5F97;ActivityManagerService&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; // startService(...)&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;&#x542F;&#x52A8;Service&#x7EC4;&#x4EF6; // mMainThread&#x7C7B;&#x578B;&#x4E3A;ActivityThread&#xFF0C;&#x5176;getApplicationThread() // &#x51FD;&#x6570;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;ApplicationThread&#x7684;Binder&#x672C;&#x5730;&#x5BF9;&#x8C61;&#xFF0C;&#x5C06;&#x6B64;&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7ED9; // ActivityManagerService&#x4EE5;&#x4FBF;&#x5B83;&#x77E5;&#x9053;&#x662F;&#x8C01;&#x8BF7;&#x6C42;&#x542F;&#x52A8;Service&#x7EC4;&#x4EF6; ComponentName cn = ActivityManagerNative.getDefault().startService( mMainThread.getApplicationThread(), service, service.resolveTypeIfNeeded( getContentResolver()), getOpPackageName(), user.getIdentifier()); // &#x1F3C1; ... return cn; } catch (RemoteException e) { ... } } Step3 ActivityManagerProxy::startService(...) 123456789101112131415161718192021222324class ActivityManagerProxy implements IActivityManager{...// frameworks/base/core/java/android/app/ActivityManagerNative.java:3670 public ComponentName startService(IApplicationThread caller, Intent service, String resolvedType, String callingPackage, int userId) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(caller != null ? caller.asBinder() : null); service.writeToParcel(data, 0); data.writeString(resolvedType); data.writeString(callingPackage); data.writeInt(userId); mRemote.transact(START_SERVICE_TRANSACTION, data, reply, 0); reply.readException(); ComponentName res = ComponentName.readFromParcel(reply); data.recycle(); reply.recycle(); return res; }...} &#x5B83;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;START_SERVICE_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002;&#x4EE5;&#x4E0A;&#x662F;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8F6C;&#x5165;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#x3002; # Step4 ActivityManagerService::startService(...) 12345678910111213141516171819202122public final class ActivityManagerService extends ActivityManagerNative implements Watchdog.Monitor, BatteryStatsImpl.BatteryCallback {... final ActiveServices mServices;... // frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:15737 public ComponentName startService(IApplicationThread caller, Intent service, String resolvedType, String callingPackage, int userId) throws TransactionTooLargeException { ... synchronized(this) { final int callingPid = Binder.getCallingPid(); final int callingUid = Binder.getCallingUid(); final long origId = Binder.clearCallingIdentity(); // &#x1F3C1; &#x7EE7;&#x7EED;&#x6267;&#x884C;&#x542F;&#x52A8;Service&#x7EC4;&#x4EF6;&#x64CD;&#x4F5C; ComponentName res = mServices.startServiceLocked(caller, service, resolvedType, callingPid, callingUid, callingPackage, userId); Binder.restoreCallingIdentity(origId); return res; } }...} Step5 ActiveService::startServiceLocked(...) 12345678910111213141516// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:306ComponentName startServiceLocked(IApplicationThread caller, Intent service, String resolvedType, int callingPid, int callingUid, String callingPackage, int userId) throws TransactionTooLargeException { ... // &#x6BCF;&#x4E2A;Service&#x7EC4;&#x4EF6;&#x5728;ActivityManagerService&#x4E2D;&#x90FD;&#x6709;&#x4E00;&#x4E2A;ServiceRecord&#x6765;&#x63CF;&#x8FF0;&#xFF0C; // &#x6B64;&#x5904;&#x83B7;&#x5F97;service&#x5BF9;&#x5E94;&#x7684;ServiceRecord&#x5BF9;&#x8C61; ServiceLookupResult res = retrieveServiceLocked(service, resolvedType, callingPackage, callingPid, callingUid, userId, true, callerFg); ... ServiceRecord r = res.record; // &#x83B7;&#x5F97;&#x4E0E;res&#x5BF9;&#x5E94;&#x7684;ServiceRecord ... // &#x1F3C1; return startServiceInnerLocked(smap, service, r, callerFg, addToStarting);} Step6 ActiveService::startServiceInnerLocked(...) 123456789// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:423ComponentName startServiceInnerLocked(ServiceMap smap, Intent service, ServiceRecord r, boolean callerFg, boolean addToStarting) throws TransactionTooLargeException { ... // &#x1F3C1; &#x7EE7;&#x7EED;&#x542F;&#x52A8;r&#x6240;&#x63CF;&#x8FF0;&#x7684;service&#x7EC4;&#x4EF6; String error = bringUpServiceLocked(r, service.getFlags(), callerFg, false); ... return r.name;} Step7 ActiveService::bringUpServiceLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839public final class ActiveServices {...final ActivityManagerService mAm;...// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:1371 private final String bringUpServiceLocked(ServiceRecord r, int intentFlags, boolean execInFg, boolean whileRestarting) throws TransactionTooLargeException { ... final String procName = r.processName; //&#x83B7;&#x53D6;android:process&#x5C5E;&#x6027; ProcessRecord app; ... // &#x6839;&#x636E;&#x5C5E;&#x6027;&#x503C;&#x67E5;&#x627E;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6709;ProcessRecord&#x5BF9;&#x8C61;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#xFF0C;&#x5373;&#x8FDB;&#x7A0B;&#x662F;&#x5426;&#x5B58;&#x5728; app = mAm.getProcessRecordLocked(procName, r.appInfo.uid, false); ... if (app != null &amp;&amp; app.thread != null) { //&#x8BE5;&#x8FDB;&#x7A0B;&#x5DF2;&#x7ECF;&#x5B58;&#x5728; try { app.addPackage(r.appInfo.packageName, r.appInfo.versionCode, mAm.mProcessStats); // &#x542F;&#x52A8;service&#x7EC4;&#x4EF6; realStartServiceLocked(r, app, execInFg); return null; } catch (TransactionTooLargeException e) {...} ... } ... // Not running -- get it started, and enqueue this service record // to be executed when the app comes up. if (app == null) { // &#x1F3C1; &#x542F;&#x52A8;&#x8FDB;&#x7A0B; if ((app=mAm.startProcessLocked(procName, r.appInfo, true, intentFlags, &quot;service&quot;, r.name, false, isolated, false)) == null) { ... bringDownServiceLocked(r); return msg; } ... } ... return null; } mAm&#x7684;&#x7C7B;&#x578B;&#x662F;ActivityManagerService&#x3002; # Step8 ActivityManagerService::startProcessLocked(...) &#x8FDB;&#x5165;&#x51FD;&#x6570;ActivityManagerService::startProcessLocked(...)&#x53EF;&#x53C2;&#x89C1;Activity&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x4E4B;Step30&#xFF0C;&#x5B83;&#x6700;&#x7EC8;&#x8C03;&#x7528;&#x5230;Process&#x7C7B;&#x7684;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;start(...)&#x521B;&#x5EFA;&#x65B0;&#x8FDB;&#x7A0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B0;&#x8FDB;&#x7A0B;&#x4EE5;ActivityThread&#x7C7B;&#x7684;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;main(...)&#x4E3A;&#x5165;&#x53E3;&#x3002; &#x4EE5;&#x4E0A;&#x90FD;&#x662F;&#x5728;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8F6C;&#x5165;&#x65B0;&#x8FDB;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x53EF;&#x53C2;&#x89C1;Activity&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x4E4B;Step31&#x3001;Step32&#x3001;Step33&#x3002; &#x5728;ActivityThread::main(...)&#x3002; # Step9 ActivityThread::main(&#x2026;) &#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x4F1A;&#x5728;&#x65B0;&#x8FDB;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;ActivityThread&#x5BF9;&#x8C61;&#x548C;ApplicationThread&#x5BF9;&#x8C61;&#x3002; # Step10 ActivityThread::attach(&#x2026;) # Step11 ActivityManagerProxy::attachApplication(&#x2026;) &#x901A;&#x8FC7;ActivityThread::attach(&#x2026;)&#x8C03;&#x7528;ActivityManagerProxy::attachApplication(...)&#xFF0C;&#x4F1A;&#x5411;ActivityManagerService&#x53D1;&#x51FA;&#x7C7B;&#x578B;&#x4E3A;ATTACH_APPLICATION_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;&#x5E76;&#x5C06;&#x524D;&#x9762;&#x521B;&#x5EFA;&#x7684;ApplicationThread&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7ED9;ActivityManagerService&#xFF0C;&#x4EE5;&#x4FBF;&#x548C;&#x65B0;&#x8FDB;&#x7A0B;&#x8FDB;&#x884C;Binder&#x901A;&#x4FE1;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x56DE;ActivityManagerService&#x5904;&#x7406;ATTACH_APPLICATION_TRANSACTION&#x8BF7;&#x6C42;&#x3002; Step12 ActivityManagerService::attachApplication(&#x2026;) &#x53C2;&#x7167;Activity&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x4E4B;Step34&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7528;&#x6765;&#x5904;&#x7406;ATTACH_APPLICATION_TRANSACTION&#x8BF7;&#x6C42;&#x3002; Step13 ActivityManagerService::attachApplicationLocked(&#x2026;) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:6016private final boolean attachApplicationLocked(IApplicationThread thread, int pid) { // pid&#x4E3A;&#x5C06;&#x8981;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;PID&#xFF0C;&#x524D;&#x9762;&#x66FE;&#x4EE5;&#x6B64;&#x4E3A;&#x5173;&#x952E;&#x5B57;&#x5C06;ProcessRecord&#x4FDD;&#x5B58;&#x5230; // mPidSelfLocked&#x4E2D;&#xFF0C;&#x6B64;&#x5904;&#x5148;&#x6839;&#x636E;pid&#x5C06;&#x5B83;&#x53D6;&#x51FA; ... ProcessRecord app; if (pid != MY_PID &amp;&amp; pid &gt;= 0) { synchronized (mPidsSelfLocked) { app = mPidsSelfLocked.get(pid); } } ...// &#x8FDB;&#x7A0B;&#x5DF2;&#x7ECF;&#x8D77;&#x6765;&#xFF0C;&#x5BF9;app&#x505A;&#x521D;&#x59CB;&#x5316; // thread&#x6307;&#x5411;ApplicationThread&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x4FBF;ActivityManagerService&#x901A;&#x8FC7;&#x6B64;&#x5BF9;&#x8C61; // &#x548C;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1; app.makeActive(thread, mProcessStats); app.curAdj = app.setAdj = -100; app.curSchedGroup = app.setSchedGroup = Process.THREAD_GROUP_DEFAULT; app.forcingToForeground = null; updateProcessForegroundLocked(app, false, false); app.hasShownUi = false; app.debugging = false; app.cached = false; app.killedByAm = false; // &#x5220;&#x9664;&#x6B64;&#x6D88;&#x606F;&#xFF0C;&#x56E0;&#x4E3A;&#x65B0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5DF2;&#x7ECF;&#x5728;&#x89C4;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x4E86; mHandler.removeMessages(PROC_START_TIMEOUT_MSG, app); boolean normalMode = mProcessesReady || isAllowedWhileBooting(app.info); List&lt;ProviderInfo&gt; providers = normalMode ? generateApplicationProvidersLocked(app) : null; ... // &#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;&#x5F53;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x5B8C;&#x6210;&#x540E;&#xFF0C;ActivityManagerService&#x4F1A;&#x4F18;&#x5148;&#x5904;&#x7406;Activity&#x7EC4;&#x4EF6;&#x7136;&#x540E; // &#x518D;&#x5904;&#x7406;Service&#x7EC4;&#x4EF6;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x524D;&#x8005;&#x9700;&#x8981;&#x7528;&#x6237;&#x4EA4;&#x4E92;&#xFF0C;&#x540E;&#x8005;&#x4E0D;&#x9700;&#x8981;&#x3002; // See if the top visible activity is waiting to run in this process... if (normalMode) { try { // &#x8BF7;&#x6C42;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6; if (mStackSupervisor.attachApplicationLocked(app)) { didSomething = true; } } ... } // Find any services that should be running in this process... if (!badApp) { try { // &#x67E5;&#x627E;&#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x662F;&#x5426;&#x6709;service&#x5B58;&#x5728; didSomething |= mServices.attachApplicationLocked(app, processName); } ... } ... return true;} mServices&#x7684;&#x7C7B;&#x578B;&#x4E3A;ActiveServices&#x3002; # Step14 ActiveServices::attachApplicationLocked(...) 123456789101112131415161718192021222324252627282930// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:2035boolean attachApplicationLocked(ProcessRecord proc, String processName) throws RemoteException { boolean didSomething = false; // Collect any services that are waiting for this process to come up. if (mPendingServices.size() &gt; 0) { ServiceRecord sr = null; try { // &#x68C0;&#x67E5;&#x4FDD;&#x5B58;&#x5728;mPendingService&#x4E2D;&#x7684;service&#x7EC4;&#x4EF6;&#x662F;&#x5426;&#x9700;&#x8981;&#x5728;app&#x4E2D;&#x542F;&#x52A8; for (int i=0; i&lt;mPendingServices.size(); i++) { // &#x5982;&#x679C;&#x9700;&#x8981;&#x542F;&#x52A8;&#xFF0C;&#x4ECE;mPendingService&#x4E2D;&#x53D6;&#x51FA;&#x5E76;&#x5220;&#x9664; sr = mPendingServices.get(i); if (proc != sr.isolatedProc &amp;&amp; (proc.uid != sr.appInfo.uid || !processName.equals(sr.processName))) { continue; } mPendingServices.remove(i); i--; proc.addPackage(sr.appInfo.packageName, sr.appInfo.versionCode, mAm.mProcessStats); // &#x1F3C1; &#x542F;&#x52A8;service realStartServiceLocked(sr, proc, sr.createdFromFg); didSomething = true; ... } } ... } ... return didSomething;} Step15 ActiveServices::realStartServiceLocked(...) 1234567891011121314151617// frameworks/base/services/core/java/com/android/server/am/ActiveServices.java:1501 private final void realStartServiceLocked(ServiceRecord r, ProcessRecord app, boolean execInFg) throws RemoteException { ... r.app = app; ... try { ... // app.thread&#x662F;&#x7C7B;&#x578B;&#x4E3A;ApplicationThreadProxy&#x7684;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61; // &#x8BF7;&#x6C42;&#x65B0;&#x8FDB;&#x7A0B;&#x5C06;r&#x6240;&#x63CF;&#x8FF0;&#x7684;service&#x7EC4;&#x4EF6;&#x542F;&#x52A8;&#x8D77;&#x6765; app.thread.scheduleCreateService(r, r.serviceInfo, mAm.compatibilityInfoForPackageLocked(r.serviceInfo.applicationInfo), app.repProcState); ... } catch ... ... } Step16 ApplicationThreadProxy::scheduleCreateService(...) 1234567891011121314151617181920public abstract class ApplicationThreadNative extends Binder implements IApplicationThread {// frameworks/base/core/java/android/app/ApplicationThreadNative.java:919 public final void scheduleCreateService(IBinder token, ServiceInfo info, CompatibilityInfo compatInfo, int processState) throws RemoteException { Parcel data = Parcel.obtain(); data.writeInterfaceToken(IApplicationThread.descriptor); data.writeStrongBinder(token); info.writeToParcel(data, 0); compatInfo.writeToParcel(data, 0); data.writeInt(processState); try { // &#x5411;&#x65B0;&#x5EFA;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;SCHEDULE_CREATE_SERVICE_TRANSACTION&#x8BF7;&#x6C42; mRemote.transact(SCHEDULE_CREATE_SERVICE_TRANSACTION, data, null, IBinder.FLAG_ONEWAY); } catch (TransactionTooLargeException e) ... data.recycle(); }...} &#x4EE5;&#x4E0A;&#x6B65;&#x9AA4;&#x662F;&#x5728;ActivityManagerService&#x4E2D;&#x8FDB;&#x884C;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8F6C;&#x5165;&#x65B0;&#x5EFA;&#x8FDB;&#x7A0B;&#x4E2D;&#x3002; # Step17 ActivityThread::scheduleCreateService(...) 123456789101112131415161718public final class ActivityThread { private class ApplicationThread extends ApplicationThreadNative {...// frameworks/base/core/java/android/app/ApplicationThreadNative.java:718 public final void scheduleCreateService(IBinder token, ServiceInfo info, CompatibilityInfo compatInfo, int processState) { updateProcessState(processState, false); CreateServiceData s = new CreateServiceData(); s.token = token; s.info = info; s.compatInfo = compatInfo; sendMessage(H.CREATE_SERVICE, s); } ... } ...} &#x6B64;&#x5904;&#x628A;&#x201C;&#x8981;&#x542F;&#x52A8;Service&#x7EC4;&#x4EF6;&#x201D;&#x4FE1;&#x606F;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;CreateServiceData&#x5BF9;&#x8C61;&#xFF0C;&#x518D;&#x901A;&#x8FC7;sendMessage&#x53D1;&#x9001;&#x5230;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x53EF;&#x53C2;&#x8003;Activity&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x4E4B;Step39 Step18 ActivityThread::handleMessage(&#x2026;) 12345678910111213// frameworks/base/core/java/android/app/ActivityThread.java:1335 public void handleMessage(Message msg) { ... ... switch (msg.what) { ... case CREATE_SERVICE: ... handleCreateService((CreateServiceData)msg.obj); ... break; ... }...} Step19 ActivityThread::handleCreateService(...) 123456789101112131415161718192021222324252627282930313233343536373839public final class ActivityThread {...// frameworks/base/core/java/android/app/ActivityThread.java:2849 private void handleCreateService(CreateServiceData data) { ... // &#x63CF;&#x8FF0;&#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;Service&#x7EC4;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;LoadedApk&#x5BF9;&#x8C61;&#xFF0C; // &#x901A;&#x8FC7;&#x5B83;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x8D44;&#x6E90; LoadedApk packageInfo = getPackageInfoNoCheck( data.info.applicationInfo, data.compatInfo); Service service = null; try { // &#x83B7;&#x5F97;&#x7C7B;&#x52A0;&#x8F7D;&#x5668; java.lang.ClassLoader cl = packageInfo.getClassLoader(); // &#x5C06;data&#x6240;&#x63CF;&#x8FF0;&#x7684;Service&#x7EC4;&#x4EF6;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58; service = (Service) cl.loadClass(data.info.name).newInstance(); } catch (Exception e) ... } try { ... // context&#x4F5C;&#x4E3A;service&#x8FD0;&#x884C;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x73AF;&#x5883;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x7279;&#x5B9A;&#x7684; // &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8D44;&#x6E90;&#xFF0C;&#x53CA;&#x542F;&#x52A8;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6; ContextImpl context = ContextImpl.createAppContext(this, packageInfo); context.setOuterContext(service); // &#x63CF;&#x8FF0;service&#x6240;&#x5C5E;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; Application app = packageInfo.makeApplication(false, mInstrumentation); // &#x521D;&#x59CB;&#x5316;service&#x5BF9;&#x8C61; service.attach(context, this, data.info.name, data.token, app, ActivityManagerNative.getDefault()); service.onCreate(); // &#x8C03;&#x7528;&#x5B83;&#x7684;onCreate()&#x6210;&#x5458;&#x51FD;&#x6570; // &#x4EE5;token&#x4E3A;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x628A;service&#x4FDD;&#x5B58;&#x5728;ActivityThread::mServices&#x4E2D; mServices.put(data.token, service); try { ActivityManagerNative.getDefault().serviceDoneExecuting( data.token, SERVICE_DONE_EXECUTING_ANON, 0, 0); } catch (RemoteException e) ... } catch (Exception e) ... } &#x81F3;&#x6B64;&#xFF0C;Service&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5C31;&#x5206;&#x6790;&#x5B8C;&#x4E86;&#x3002;&#x5B83;&#x548C;Activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#x3002; &#x90A3;&#x5929;&#x8001;&#x677F;&#x95EE;&#x6211;Android&#x4E0B;&#x7684;Activity&#x548C;Service&#x5982;&#x679C;&#x7C7B;&#x6BD4;&#x5230;Windows&#x4E0B;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x6709;&#x6CA1;&#x6709;&#x53EF;&#x6BD4;&#x7269;&#xFF0C;&#x6211;&#x7684;&#x56DE;&#x7B54;&#x662F;Window&#x3002;Android&#x5F31;&#x5316;&#x4E86;&#x8FDB;&#x7A0B;&#x7684;&#x6982;&#x5FF5;&#x4EE5;&#x53CA;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x7F18;&#x3002;&#x7A0B;&#x5E8F;&#x5458;&#x63A5;&#x89E6;&#x5230;&#x7684;&#x662F;&#x56DB;&#x5927;&#x7EC4;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E9B;&#x7EC4;&#x4EF6;&#x662F;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x540E;&#xFF0C;&#x6839;&#x636E;manifest&#x63CF;&#x8FF0;&#x518D;&#x521B;&#x5EFA;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x7EC4;&#x4EF6;&#x7684;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x5747;&#x7531;&#x8FDB;&#x7A0B;&#x5728;&#x5176;&#x751F;&#x547D;&#x5468;&#x671F;&#x5185;&#x5B8C;&#x6210;&#x3002;Windows&#x4E0B;&#x4E5F;&#x4E00;&#x6837;&#xFF0C;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x540E;&#x901A;&#x8FC7;CreateWindow(...)&#x521B;&#x5EFA;&#x7A97;&#x4F53;&#xFF0C;&#x7A97;&#x4F53;&#x9500;&#x6BC1;&#x540E;&#x8FDB;&#x7A0B;&#x53EF;&#x80FD;&#x8FD8;&#x5728;&#x3002; Android&#x901A;&#x8FC7;Binder&#x673A;&#x5236;&#x5F31;&#x5316;&#x4E86;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x7F18;&#xFF0C;&#x542F;&#x52A8;&#x5176;&#x5B83;&#x7EC4;&#x4EF6;&#x3001;&#x53D1;&#x9001;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x662F;&#x8DE8;&#x8FDB;&#x7A0B;&#x7684;&#xFF0C;&#x4F46;&#x5728;&#x5B9E;&#x73B0;&#x5C42;&#x9762;&#x4E0A;&#x548C;&#x8FDB;&#x7A0B;&#x5185;&#x6CA1;&#x6709;&#x5DEE;&#x522B;&#xFF0C;&#x8FD9;&#x548C;Windows&#x5C31;&#x6709;&#x5DEE;&#x522B;&#x4E86;&#xFF0C;&#x9996;&#x5148;Windows&#x6CA1;&#x6709;&#x7C7B;&#x4F3C;Binder&#x7684;&#x652F;&#x6301;&#xFF0C;&#x7A0D;&#x5FAE;&#x6709;&#x70B9;&#x76F8;&#x4F3C;&#x7684;&#x662F;&#x7A97;&#x4F53;&#x6D88;&#x606F;&#xFF0C;&#x53EF;&#x4EE5;&#x8DE8;&#x8FDB;&#x7A0B;&#x62FF;&#x5230;&#x7A97;&#x4F53;&#x53E5;&#x67C4;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x4F46;&#x5E76;&#x975E;&#x6240;&#x6709;&#x6D88;&#x606F;&#x90FD;&#x652F;&#x6301;&#x8FDB;&#x7A0B;&#x95F4;&#x53D1;&#x9001;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Service启动过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github对vendors访问404导致页面空白]]></title>
    <url>%2F2016%2F11%2F09%2F2016%2F1109Next404%2F</url>
    <content type="text"><![CDATA[&#x771F;&#x662F;&#x65E0;&#x5DE7;&#x4E0D;&#x6210;&#x4E66;&#xFF0C;&#x5468;&#x672B;&#x66F4;&#x65B0;&#x4E86;&#x51E0;&#x7BC7;&#x535A;&#x5BA2;&#xFF0C;&#x641E;&#x5F97;&#x592A;&#x665A;&#xFF0C;&#x63D0;&#x4EA4;&#x540E;&#x5C31;&#x6CA1;&#x68C0;&#x67E5;&#x5C31;&#x5173;&#x673A;&#x4E86;&#x3002;&#x7ED3;&#x679C;&#x5468;&#x4E00;&#x6765;&#x4E86;&#x53D1;&#x73B0;&#x9875;&#x9762;&#x4E00;&#x7247;&#x7A7A;&#x767D;&#xFF0C;&#x57DF;&#x540D;&#x8FD8;&#x88AB;&#x7535;&#x8111;&#x7BA1;&#x5BB6;&#x5224;&#x6210;&#x4E86;&#x201C;&#x5B58;&#x5728;&#x6076;&#x610F;&#x98CE;&#x9669;&#x201D;&#x7684;&#x7F51;&#x7AD9;&#x3002;&#x4EE5;&#x4E3A;&#x662F;&#x5468;&#x672B;&#x63D0;&#x4EA4;&#x7684;&#x5185;&#x5BB9;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4ECA;&#x5929;&#x4E00;&#x67E5;&#x53D1;&#x73B0;Github Pages&#x56E0;&#x4E3A;&#x7981;&#x6B62;&#x4E86;&#x5BF9;source/vendors&#x76EE;&#x5F55;&#x7684;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x5BFC;&#x81F4;&#x4E86;&#x9875;&#x9762;&#x663E;&#x793A;&#x4E0D;&#x6B63;&#x5E38;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x8FD8;&#x7B97;&#x7B80;&#x5355;&#xFF1A; 1. &#x4FEE;&#x6539;themes/next/source&#x76EE;&#x5F55;&#x4E3A;themes/next/lib&#x3002; 2. &#x4FEE;&#x6539;themes/next/_config.xml&#xFF0C;&#x5C06;_internal:vendors&#x4FEE;&#x6539;&#x4E3A;_internal:lib&#x3002; 3. &#x5728;themes/next&#x4E0B;&#x6267;&#x884C;find . -name &quot;*.*&quot;|args grep &quot;source/vendors&quot;&#xFF0C;&#x627E;&#x5230;themes/next/.bowerrc&#x3001;themes/next/.gitignore&#x3001;themes/next/bower.json&#xFF0C;&#x628A;source/vendors&#x4FEE;&#x6539;&#x4E3A;source/lib&#x3002; 4. &#x91CD;&#x65B0;hexo g&#xFF0C;hexo d&#x5373;&#x53EF;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>操作配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用程序的编译（三）——NDK编译]]></title>
    <url>%2F2016%2F11%2F06%2F2016%2F1106BuildAndroidApp3%2F</url>
    <content type="text"><![CDATA[&#x5F53;&#x5DE5;&#x7A0B;&#x5F53;&#x4E2D;&#x5305;&#x542B;C/C++&#x4EE3;&#x7801;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528;NDK&#x7F16;&#x8BD1;&#x751F;&#x6210;so&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x4F9B;java&#x8C03;&#x7528;&#xFF0C;&#x672C;&#x6587;&#x8BB0;&#x5F55;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x3002; # &#x5E26;&#x6709;JNI&#x7684;Android&#x5DE5;&#x7A0B; &#x540C;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x7F16;&#x8BD1;&#xFF08;&#x4E8C;&#xFF09;&#x2014;&#x2014;SDK&#x7F16;&#x8BD1;&#xFF0C;&#x4F7F;&#x7528;android create project&#x547D;&#x4EE4;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;HellAndroid&#xFF0C;&#x5728;&#x5176;&#x4E2D;&#x624B;&#x52A8;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;jni&#x76EE;&#x5F55;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324HelloAndroid&#x251C;&#x2500;&#x2500;bin&#x2502; &#x2514;&#x2500;&#x2500;&#x251C;&#x2500;&#x2500;libs&#x2502; &#x2514;&#x2500;&#x2500;&#x251C;&#x2500;&#x2500;res&#x2502; &#x2514;&#x2500;&#x2500;...&#x2502; &#x251C;&#x2500;&#x2500;layout&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;main.xml&#x2502; &#x2514;&#x2500;&#x2500;values&#x2502; &#x2514;&#x2500;&#x2500;strings.xml&#x251C;&#x2500;&#x2500;jni # &#x624B;&#x52A8;&#x6DFB;&#x52A0;&#x6B64;&#x76EE;&#x5F55;&#x2502; &#x251C;&#x2500;&#x2500;palance_li_hellojni_HelloJni.h&#x2502; &#x251C;&#x2500;&#x2500;palance_li_hellojni_HelloJni.c&#x2502; &#x251C;&#x2500;&#x2500;Android.mk&#x2502; &#x2514;&#x2500;&#x2500;Application.mk&#x251C;&#x2500;&#x2500;src/palance/li/hello&#x2502; &#x2514;&#x2500;&#x2500;MainActivity.java&#x251C;&#x2500;&#x2500;ant.properties&#x251C;&#x2500;&#x2500;local.properties&#x251C;&#x2500;&#x2500;project.properties&#x251C;&#x2500;&#x2500;proguard-project.txt&#x251C;&#x2500;&#x2500;AndroidManifest.xml&#x2514;&#x2500;&#x2500;build.xml &#x901A;&#x8FC7;javah&#x521B;&#x5EFA;.h&#x6587;&#x4EF6; javah&#x4F1A;&#x6839;&#x636E;javac&#x7F16;&#x8BD1;&#x51FA;&#x7684;class&#x6587;&#x4EF6;&#x751F;&#x6210;&#x5FC5;&#x8981;&#x7684;.h&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E2D;&#x751F;&#x6210;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x9996;&#x5148;&#xFF0C;&#x5728;src/palance/li/hello/MainActivity.java&#x4E2D;&#x6DFB;&#x52A0;native&#x51FD;&#x6570;&#x7684;&#x58F0;&#x660E;&#x548C;&#x8C03;&#x7528;&#xFF1A; 1234567891011121314151617181920212223package palance.li.hello;import android.app.Activity;import android.os.Bundle;import android.widget.TextView;public class MainActivity extends Activity{ public native String stringFromJNI(); // &#x58F0;&#x660E;native&#x51FD;&#x6570; static { System.loadLibrary(&quot;libhellojni&quot;); // &#x52A0;&#x8F7D;so } /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); TextView tv = (TextView)findViewById(R.id.tv); // &#x901A;&#x8FC7;id&#x83B7;&#x5F97;&#x5BF9;&#x8C61; tv.setText(stringFromJNI()); // &#x8C03;&#x7528;native&#x51FD;&#x6570;&#xFF0C;&#x8BBE;&#x7F6E;&#x5BF9;&#x8C61;&#x6587;&#x672C; }} &#x6B64;&#x5916;&#x8FD8;&#x8981;&#x5728;layout/main.xml&#x4E2D;&#x4E3A;TextView&#x6DFB;&#x52A0;id&#xFF1A; 12345678910111213&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot;&gt;&lt;!-- &#x4E3A;TextView&#x6DFB;&#x52A0;id --&gt;&lt;TextView android:id=&quot;@+id/tv&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Hello World, MainActivity&quot; /&gt;&lt;/LinearLayout&gt; &#x7F16;&#x8BD1;java&#x6E90;&#x6587;&#x4EF6;&#xFF1A; 12345$ javac -encoding utf-8 \ -source 1.6 -target 1.6 \ -bootclasspath ~/Library/Android/sdk/platforms/android-25/android.jar \ -d bin/classes \ src/palance/li/hello/HelloAndroid.java gen/palance/li/hello/R.java &#x8C03;&#x7528;javah&#x4E3A;class&#x6587;&#x4EF6;&#x751F;&#x6210;.h&#x5934;&#x6587;&#x4EF6;&#xFF1A; 1234$ javah -classpath bin/classes \ -bootclasspath /Users/palance/Library/Android/sdk/platforms/android-25/android.jar \ -d jni \ palance.li.hello.MainActivity -classpath &#x6307;&#x5B9A;javah&#x7528;&#x6765;&#x67E5;&#x8BE2;&#x7C7B;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5373;&#x9700;&#x8981;&#x4E3A;&#x4E4B;&#x751F;&#x6210;.h&#x6587;&#x4EF6;&#x7684;class&#x6587;&#x4EF6;&#x6240;&#x5728;&#x8DEF;&#x5F84; -bootclasspath &#x8986;&#x76D6;&#x5F15;&#x5BFC;&#x7C7B;&#x7684;&#x4F4D;&#x7F6E; -d &#x751F;&#x6210;&#x5934;&#x6587;&#x4EF6;&#x7684;&#x76EE;&#x5F55; &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x7C7B;&#x540D;&#x3002; &#x6211;&#x5728;&#x8C03;&#x7528;javah&#x7684;&#x65F6;&#x5019;&#x66FE;&#x7ECF;&#x9047;&#x5230;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x9519;&#x8BEF;: &#x65E0;&#x6CD5;&#x8BBF;&#x95EE;android.app.Activity&#x3001;&#x627E;&#x4E0D;&#x5230;android.app.Activity&#x7684;&#x7C7B;&#x6587;&#x4EF6;&#x4E4B;&#x7C7B;&#x7684;&#xFF0C;&#x7F51;&#x4E0A;&#x7ED9;&#x51FA;&#x7684;&#x529E;&#x6CD5;&#x591A;&#x662F;&#x6362;&#x4E2A;&#x5F53;&#x524D;&#x8DEF;&#x5F84;&#x3002;&#x5F53;&#x660E;&#x767D;javah&#x7684;&#x5DE5;&#x4F5C;&#x673A;&#x5236;&#x4EE5;&#x540E;&#xFF0C;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x5C31;&#x4E0D;&#x96BE;&#x89E3;&#x51B3;&#x4E86;&#xFF1A;&#x9996;&#x5148;&#x8981;&#x5728;java&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;native&#x51FD;&#x6570;&#x7684;&#x58F0;&#x660E;&#x548C;&#x8C03;&#x7528;&#xFF0C;&#x7136;&#x540E;&#x8981;&#x7F16;&#x8BD1;&#x6210;class&#x6587;&#x4EF6;&#xFF0C;&#x4E4B;&#x540E;&#x624D;&#x80FD;&#x8BA9;javah&#x6839;&#x636E;&#x8FD9;&#x4E9B;class&#x6587;&#x4EF6;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4EE3;&#x7801;&#x3002; # &#x521B;&#x5EFA;.c&#x6587;&#x4EF6; jni/palance_li_hello_MainActivity.c&#xFF1A; 123456#include &lt;string.h&gt;#include &quot;palance_li_hello_MainActivity.h&quot;JNIEXPORT jstring JNICALL Java_palance_li_hello_MainActivity_stringFromJNI(JNIEnv* env, jobject _this){ return (*env)-&gt;NewStringUTF(env, &quot;This is from JNI!&quot;);} &#x521B;&#x5EFA;jni/Android.mk&#x6587;&#x4EF6; 1234567891011LOCAL_PATH:=$(call my-dir)include $(CLEAR_VARS)LOCAL_MODULE := libhellojniLOCAL_SRC_FILES := \ palance_li_hello_MainActivity.cLOCAL_C_INCLUDES += \ $(JNI_H_INCLUDE)include $(BUILD_SHARED_LIBRARY) &#x901A;&#x8FC7;ndk-build&#x751F;&#x6210;so&#x6587;&#x4EF6; &#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 12$ cd HelloAndroid$ ndk-build ndk-build&#x6765;&#x81EA;$ ~/Library/Android/sdk/ndk-bundle/ndk-build&#x3002;&#x5B83;&#x4F1A;&#x751F;&#x6210;&#x76EE;&#x5F55;/libs&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E0B;&#x751F;&#x6210;&#x4E00;&#x5806;&#x5B50;&#x76EE;&#x5F55;&#xFF1A; 1234567891011121314151617HelloAndroid&#x251C;&#x2500;&#x2500;...&#x2514;&#x2500;&#x2500;libs &#x251C;&#x2500;&#x2500;arm64-v8a &#x2502; &#x2514;&#x2500;&#x2500;libhellojni.so &#x251C;&#x2500;&#x2500;armeabi &#x2502; &#x2514;&#x2500;&#x2500;libhellojni.so &#x251C;&#x2500;&#x2500;armeabi-v7a &#x2502; &#x2514;&#x2500;&#x2500;libhellojni.so &#x251C;&#x2500;&#x2500;mips &#x2502; &#x2514;&#x2500;&#x2500;libhellojni.so &#x251C;&#x2500;&#x2500;mips64 &#x2502; &#x2514;&#x2500;&#x2500;libhellojni.so &#x251C;&#x2500;&#x2500;x86 &#x2502; &#x2514;&#x2500;&#x2500;libhellojni.so &#x2514;&#x2500;&#x2500;x86_64 &#x2514;&#x2500;&#x2500;libhellojni.so &#x53EF;&#x4EE5;&#x653E;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;jni/Application.mk&#x6765;&#x5236;&#x5B9A;&#x9700;&#x8981;&#x7684;&#x5E73;&#x53F0;&#x7C7B;&#x578B;&#xFF1A; 1APP_ABI := armeabi-v7a x86_64 &#x518D;&#x6B21;&#x6267;&#x884C;ndk-build&#x547D;&#x4EE4;&#xFF0C;&#x5C31;&#x4F1A;&#x5728;/libs&#x4E0B;&#x53EA;&#x751F;&#x6210;armeabi-v7a&#x548C;x86_64&#x4E24;&#x4E2A;&#x5E73;&#x53F0;&#x7684;so&#x6587;&#x4EF6;&#x4E86;&#x3002; &#x751F;&#x6210;apk &#x63A5;&#x4E0B;&#x6765;&#x7684;&#x6253;&#x5305;&#x8FC7;&#x7A0B;&#x548C;&#x4F7F;&#x7528;SDK&#x7F16;&#x8BD1;&#x5C31;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x4E86;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x5DEE;&#x522B;&#x5728;&#x4E8E;&#x5728;&#x7B2C;4&#x6B65;&#x4E4B;&#x540E;&#x63D2;&#x5165;&#x4E00;&#x6B65;&#xFF0C;&#x628A;so&#x6587;&#x4EF6;&#x6DFB;&#x52A0;&#x5230;apk&#x91CC;&#xFF0C;&#x5B8C;&#x6574;&#x7684;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142$ cd HelloAndroid# 1. &#x5C06;&#x5DE5;&#x7A0B;&#x7684;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x5230;R.java&#x6587;&#x4EF6;$ aapt package -m -f \ -J gen \ -M AndroidManifest.xml \ -S res \ -I ~/Library/Android/sdk/platforms/android-25/android.jar# 2. &#x7F16;&#x8BD1;java&#x6E90;&#x6587;&#x4EF6;$ javac -encoding utf-8 \ -source 1.6 -target 1.6 \ -bootclasspath ~/Library/Android/sdk/platforms/android-25/android.jar \ -d bin/classes \ src/palance/li/hello/HelloAndroid.java gen/palance/li/hello/R.java# 3. &#x5C06;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x6253;&#x5305;&#x6210;dex&#x683C;&#x5F0F;$ dx --dex --output=bin/classes.dex bin/classes# 4. &#x521B;&#x5EFA;&#x672A;&#x7B7E;&#x540D;&#x7684;apk&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5C06;dex&#x548C;so&#x6587;&#x4EF6;&#x6DFB;&#x52A0;&#x5230;&#x8BE5;apk&#x4E2D;$ aapt package -f -M AndroidManifest.xml \ -S res -A assets -I ~/Library/Android/sdk/platforms/android-25/android.jar -F bin/HelloAndroid_unsigned.apk$ cd bin$ aapt add HelloAndroid_unsigned.apk classes.dex$ mv libs lib$ aapt add HelloAndroid_unsigned.apk lib/x86_64/libhellojni.so$ mv lib libs# 5. &#x5BF9;apk&#x6587;&#x4EF6;&#x7B7E;&#x540D;$ jarsigner -verbose \ -keystore ~/.android/debug.keystore \ -keypass android \ -storepass android \ -signedjar bin/HelloAndroid_signed.apk&quot; \ bin/HelloAndroid_unsigned.apk&quot; \ androiddebugkey# 6. &#x5BF9;&#x7B7E;&#x540D;&#x540E;&#x7684;apk&#x505A;&#x5BF9;&#x5176;&#x4F18;&#x5316;$ zipalign -f 4 bin/HelloAndroid_signed.apk bin/HelloAndroid.apk &#x5176;&#x4E2D;&#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5728;&#x7B2C;4&#x6B65;&#xFF0C;&#x6DFB;&#x52A0;so&#x6587;&#x4EF6;&#x4E00;&#x5B9A;&#x8981;&#x5E26;&#x7740;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x4E14;&#x5FC5;&#x987B;&#x662F;lib/&lt;&#x5E73;&#x53F0;&gt;/&lt;so&#x6587;&#x4EF6;&#x540D;&gt;&#xFF0C;&#x800C;&#x4E0D;&#x662F;android&#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x7684;libs&#x3002;&#x6211;&#x88AB;&#x8FD9;&#x4E2A;&#x5751;&#x641E;&#x4E86;&#x4E00;&#x4E2A;&#x591A;&#x5C0F;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;apk&#x786E;&#x5B9E;&#x628A;so&#x6253;&#x8FDB;&#x53BB;&#x4E86;&#xFF0C;&#x53EF;&#x5C31;&#x662F;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x91CC;&#x5B89;&#x88C5;&#x4E0D;&#x4E0A;&#x3002;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x5B89;&#x88C5;apk&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#xFF0C;so&#x6587;&#x4EF6;&#x5E94;&#x8BE5;&#x88AB;&#x62F7;&#x8D1D;&#x5230;/data/app/&lt;&#x5305;&#x540D;&gt;/lib/&lt;&#x5E73;&#x53F0;&#x540D;&gt;&#x4E0B;&#x7684;&#xFF0C;&#x7ED3;&#x5408;&#x672C;&#x4F8B;&#x5C31;&#x662F;/data/app/palance.li.hello/lib/x86_64&#x3002;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#xFF0C;&#x6DFB;&#x52A0;so&#x5230;apk&#x4E4B;&#x524D;&#x6211;&#x5148;&#x628A;libs&#x76EE;&#x5F55;&#x6539;&#x540D;&#x4E3A;lib&#xFF0C;&#x6DFB;&#x52A0;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x6539;&#x56DE;&#x6765;&#x3002; &#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x52A0;&#x8F7D;so&#x5931;&#x8D25;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x67E5;&#x770B;so&#x6587;&#x4EF6;&#x662F;&#x5426;&#x88AB;&#x6B63;&#x786E;&#x5B89;&#x88C5;&#xFF1A; 1$ adb shell ls /data/app/palance.li.hello-1/lib/x86_64 &#x5982;&#x679C;&#x8FD8;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;logcat&#x67E5;&#x770B;&#x5177;&#x4F53;&#x7684;&#x8F93;&#x51FA;&#xFF1A; 1$ adb shell logcat *:d &#x7EC8;&#x4E8E;&#x7B97;&#x6298;&#x817E;&#x51FA;&#x7ED3;&#x679C;&#x4E86;&#xFF1A; &#x6211;&#x628A;&#x672C;&#x6587;&#x7684;&#x4EE3;&#x7801;&#x653E;&#x5230;HelloAndroid&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E0B;&#x5199;&#x4E86;&#x4E00;&#x4E2A;&#x811A;&#x672C;build.sh&#x3002;&#x7531;&#x4E8E;&#x5E26;native&#x7684;Android&#x5E94;&#x7528;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x7A7F;&#x63D2;&#x81EA;&#x52A8;&#x548C;&#x624B;&#x52A8;&#x2014;&#x2014;&#x5148;&#x4FEE;&#x6539;java&#x4EE3;&#x7801;&#x3001;&#x7F16;&#x8BD1;&#x4E4B;&#x540E;&#x624D;&#x80FD;&#x751F;&#x6210;jni&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;build.sh&#x7B97;&#x662F;&#x4E2A;&#x534A;&#x81EA;&#x52A8;&#x811A;&#x672C;&#x3002;&#x9996;&#x6B21;&#x6267;&#x884C;&#xFF0C;&#x751F;&#x6210;R.java&#x3001;&#x7F16;&#x8BD1;java&#x6E90;&#x6587;&#x4EF6;&#x3001;&#x751F;&#x6210;dex&#x6587;&#x4EF6;&#xFF1B;&#x7136;&#x540E;&#x9700;&#x8981;&#x624B;&#x52A8;&#x6267;&#x884C;ndk-build&#xFF0C;&#x751F;&#x6210;so&#xFF1B;&#x7136;&#x540E;&#x5728;&#x6267;&#x884C;&#x4E00;&#x6B21;build.sh&#x5B8C;&#x6210;&#x6253;&#x5305;&#xFF1A; 1234$ cd HelloAndroid$ sh build.sh$ ndk-build$ sh build.sh]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用程序的编译（二）——SDK编译]]></title>
    <url>%2F2016%2F11%2F06%2F2016%2F1106BuildAndroidApp2%2F</url>
    <content type="text"><![CDATA[&#x4F7F;&#x7528;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x5E94;&#x7528;&#x5C42;&#x7A0B;&#x5E8F;&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x4E0D;&#x4FBF;&#x5229;&#x7684;&#x5730;&#x65B9;&#xFF1A; * &#x9700;&#x8981;&#x6709;Android&#x6E90;&#x7801;&#x3002;macOS&#x4E0B;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5927;&#x5C0F;&#x5199;&#x533A;&#x5206;&#x7684;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#x5B58;&#x653E;Android&#x6E90;&#x7801;&#xFF0C;&#x6BCF;&#x6B21;&#x4F7F;&#x7528;&#x90FD;&#x9700;&#x8981;&#x628A;&#x5148;&#x6302;&#x8F7D;&#x3002; * &#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF1A;source build/senvsetup.sh&#x3001;lunch aosp_arm-eng&#x7B49;&#x64CD;&#x4F5C;&#x3002; &#x4F7F;&#x7528;SDK&#x7F16;&#x8BD1;&#x5219;&#x4E0D;&#x9700;&#x8981;&#x8FD9;&#x4E24;&#x4E2A;&#x7E41;&#x7410;&#x7684;&#x6B65;&#x9AA4;&#x3002;AndroidStudio&#x914D;&#x5907;&#x6709;Android SDK&#x5E76;&#x8D1F;&#x8D23;&#x66F4;&#x65B0;&#x5347;&#x7EA7;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4E8B;&#x5148;&#x4E00;&#x6B21;&#x6027;&#x914D;&#x7F6E;&#x597D;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x4EE5;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E86;&#x3002;&#x800C;&#x4E14;SDK&#x9ED8;&#x8BA4;&#x8FD8;&#x5E26;&#x4E86;&#x4E00;&#x4E9B;&#x8F85;&#x52A9;&#x5DE5;&#x5177;&#xFF0C;&#x6BD4;&#x5982;&#x751F;&#x6210;&#x9ED8;&#x8BA4;&#x7684;Android&#x5E94;&#x7528;&#x4EE3;&#x7801;&#xFF0C;&#x4E0D;&#x5FC5;&#x624B;&#x6572;&#x3002; # &#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF; Android SDK&#x5728;macOS&#x7684;&#x5B58;&#x653E;&#x8DEF;&#x5F84;&#x4E3A;~/Library/Android/sdk&#xFF0C;&#x5176;&#x4E0B;&#x51E0;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x76EE;&#x5F55;&#x4E3A;&#xFF1A; * platform-tools : &#x9488;&#x5BF9;PC&#x7AEF;&#x548C;&#x79FB;&#x52A8;&#x7AEF;&#x4EA4;&#x4E92;&#x7684;&#x4E00;&#x4E9B;&#x5DE5;&#x5177;&#xFF0C;&#x5982;adb&#x3001;sqlite3&#x3002; * build-tools : &#x5B58;&#x653E;aapt&#x3001;aidl&#x5DE5;&#x5177;&#x3002; * tools : &#x9488;&#x5BF9;pc&#x5E73;&#x53F0;&#x4E0B;&#x4F7F;&#x7528;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5982;&#x6A21;&#x62DF;&#x5668;&#x3001;&#x6027;&#x80FD;&#x8FFD;&#x8E2A;&#x53EF;&#x89C6;&#x5316;&#x5DE5;&#x5177;traceview&#x7B49;&#x3002; * platforms : android.jar&#x6587;&#x4EF6; &#x8FD9;&#x4E9B;&#x5DE5;&#x5177;&#x5728;&#x7F16;&#x8BD1;&#x3001;&#x8C03;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#xFF0C;&#x8DEF;&#x5F84;&#x540D;&#x6709;&#x70B9;&#x957F;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x597D;&#x5148;&#x8BBE;&#x7F6E;&#x597D;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x628A;&#x5B83;&#x4EEC;&#x6DFB;&#x52A0;&#x5230;$PATH&#x4E2D;&#x3002;&#x6253;&#x5F00;.bash_profile&#x6211;&#x53D1;&#x73B0;sdk/tools&#x548C;sdk/platform-tools&#x5DF2;&#x7ECF;&#x88AB;&#x6DFB;&#x52A0;&#x8FC7;&#x4E86;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x518D;&#x52A0;&#x5165;build-tools&#x548C;ndk-bundle&#xFF1A; 1234export PATH=${PATH}:/Users/palance/Library/Android/sdk/platform-toolsexport PATH=${PATH}:/Users/palance/Library/Android/sdk/toolsexport PATH=${PATH}:/Users/palance/Library/Android/sdk/build-tools/25.0.0export PATH=${PATH}:/Users/palance/Library/Android/sdk/ndk-bundle &#x751F;&#x6210;&#x6807;&#x51C6;Android&#x5DE5;&#x7A0B; &#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x751F;&#x6210;&#x6807;&#x51C6;&#x7684;Android&#x5DE5;&#x7A0B;&#xFF1A; 12345$ android create project \ --activity MainActivity \ --target 4 \ --package palance.li.hello \ --path HelloAndroid android&#x6765;&#x81EA;sdk/tools/android&#xFF0C;&#x524D;&#x9762;&#x5DF2;&#x7ECF;&#x5C06;sdk/tools&#x8BBE;&#x7F6E;&#x5230;$PATH&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x3002;&#x5404;&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49;&#x4ECE;&#x5F62;&#x53C2;&#x540D;&#x79F0;&#x4E0A;&#x5C31;&#x80FD;&#x770B;&#x5F97;&#x51FA;&#x3002;&#x5176;&#x4E2D;target&#x7528;&#x4E8E;&#x6307;&#x5B9A;android&#x5E73;&#x53F0;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x547D;&#x4EE4;android list targets&#x67E5;&#x770B;&#x5404;id&#x7684;&#x542B;&#x4E49;&#xFF1A; 1234567891011121314151617181920212223$ android list targetsAvailable Android targets:----------id: 1 or &quot;android-21&quot; Name: Android 5.0.1 Type: Platform API level: 21 Revision: 2 Skins: HVGA, QVGA, WQVGA400, WQVGA432, WSVGA, WVGA800 (default), WVGA854, WXGA720, WXGA800, WXGA800-7in Tag/ABIs : no ABIs.----------id: 2 or &quot;android-22&quot;... ...----------id: 4 or &quot;android-23&quot; Name: Android 6.0 Type: Platform API level: 23 Revision: 3 Skins: HVGA, QVGA, WQVGA400, WQVGA432, WSVGA, WVGA800 (default), WVGA854, WXGA720, WXGA800, WXGA800-7in Tag/ABIs : no ABIs.----------... ... &#x7531;&#x6B64;&#x53EF;&#x89C1;id&#x4E3A;4&#x8868;&#x793A;android-23&#xFF0C;&#x5373;Android 6.0&#x3002; &#x56DE;&#x5230;&#x524D;&#x9762;&#x7684;android create project&#x547D;&#x4EE4;&#x4E0A;&#x6765;&#xFF0C;&#x5B83;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;&#x5982;&#x4E0B;&#x76EE;&#x5F55;&#x6811;&#xFF1A; 1234567891011121314151617181920212223242526HelloAndroid&#x251C;&#x2500;&#x2500;bin&#x2502; &#x2514;&#x2500;&#x2500;&#x251C;&#x2500;&#x2500;libs&#x2502; &#x2514;&#x2500;&#x2500;&#x251C;&#x2500;&#x2500;res&#x2502; &#x251C;&#x2500;&#x2500;drawable-hdpi # &#x4E0D;&#x540C;DPI&#x4E0B;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x56FE;&#x6807;&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;ic_launcher.png&#x2502; &#x251C;&#x2500;&#x2500;drawable-ldpi&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;ic_launcher.png&#x2502; &#x251C;&#x2500;&#x2500;drawable-mdpi&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;ic_launcher.png&#x2502; &#x251C;&#x2500;&#x2500;drawable-xhdpi&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;ic_launcher.pngd&#x2502; &#x251C;&#x2500;&#x2500;layout # &#x63CF;&#x8FF0;&#x754C;&#x9762;&#x5E03;&#x5C40;&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;main.xml&#x2502; &#x2514;&#x2500;&#x2500;values # &#x5B58;&#x653E;&#x5E38;&#x91CF;&#x2502; &#x2514;&#x2500;&#x2500;strings.xml&#x251C;&#x2500;&#x2500;src/palance/li/hello&#x2502; &#x2514;&#x2500;&#x2500;MainActivity.java # java&#x6E90;&#x7801;&#x251C;&#x2500;&#x2500;ant.properties&#x251C;&#x2500;&#x2500;local.properties&#x251C;&#x2500;&#x2500;project.properties&#x251C;&#x2500;&#x2500;proguard-project.txt&#x251C;&#x2500;&#x2500;AndroidManifest.xml # &#x63CF;&#x8FF0;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x540D;&#x79F0;&#x3001;&#x7EC4;&#x4EF6;&#x7B49;&#x76F8;&#x5173;&#x5C5E;&#x6027;&#x2514;&#x2500;&#x2500;build.xml &#x6211;&#x7528;&#x6CE8;&#x91CA;&#x6807;&#x51FA;&#x4E86;&#x5728;&#x300A;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x7F16;&#x8BD1;&#xFF08;&#x4E00;&#xFF09;&#x2014;&#x2014;&#x6E90;&#x7801;&#x4E0B;&#x7F16;&#x8BD1;&#x300B;&#x4E2D;&#x624B;&#x52A8;&#x521B;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5176;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x7528;&#x4E8E;ant&#x7F16;&#x8BD1;&#xFF0C;&#x6682;&#x65F6;&#x5148;&#x4E0D;&#x7BA1;&#x3002; &#x4F7F;&#x7528;SDK&#x7F16;&#x8BD1; &#x5C06;&#x5DE5;&#x7A0B;&#x7684;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x5230;R.java&#x6587;&#x4EF6;&#x3002; 12345$ aapt package -m -f \ -J gen \ -M AndroidManifest.xml \ -S res \ -I ~/Library/Android/sdk/platforms/android-25/android.jar &#x53C2;&#x6570;&#xFF1A; -m &#x4F7F;&#x751F;&#x6210;&#x7684;&#x5305;&#x7684;&#x76EE;&#x5F55;&#x5B58;&#x653E;&#x5728;-J&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55; -f &#x5982;&#x679C;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#x7684;&#x6587;&#x4EF6;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#xFF0C;&#x5F3A;&#x5236;&#x8986;&#x76D6; -J R.java&#x7684;&#x751F;&#x6210;&#x76EE;&#x5F55;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x5FC5;&#x987B;&#x4E8B;&#x5148;&#x521B;&#x5EFA;&#x597D; -M AndroidManifest.xml&#x8DEF;&#x5F84; -S res&#x8DEF;&#x5F84; -I android.jar&#x8DEF;&#x5F84; 2. &#x7F16;&#x8BD1;java&#x6E90;&#x6587;&#x4EF6;&#x3002; 12345$ javac -encoding utf-8 \ -source 1.6 -target 1.6 \ -bootclasspath ~/Library/Android/sdk/platforms/android-25/android.jar \ -d bin/classes \ src/palance/li/hello/MainActivity.java gen/palance/li/hello/R.java -encoding java&#x6587;&#x4EF6;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x5F0F; -source &#x6307;&#x5B9A;&#x7F16;&#x8BD1;&#x5668;&#x7248;&#x672C; -target &#x6307;&#x5B9A;&#x751F;&#x6210;&#x7684;class&#x6587;&#x4EF6;&#x548C;&#x54EA;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x865A;&#x62DF;&#x673A;&#x517C;&#x5BB9; -bootclasspath &#x8986;&#x76D6;&#x5F15;&#x5BFC;&#x7C7B;&#x7684;&#x4F4D;&#x7F6E; -d &#x7F16;&#x8BD1;&#x751F;&#x6210;class&#x6587;&#x4EF6;&#x7684;&#x76EE;&#x5F55; &#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x5FC5;&#x987B;&#x4E8B;&#x5148;&#x521B;&#x5EFA;&#x597D; &#x6700;&#x540E;&#x6307;&#x5B9A;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x7684;java&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x62EC;&#x7B2C;1&#x6B65;&#x751F;&#x6210;R.java 3. &#x5C06;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x6253;&#x5305;&#x6210;dex&#x683C;&#x5F0F;&#x3002; 1$ dx --dex --output=bin/classes.dex bin/classes dx&#x6765;&#x81EA;~/Library/Android/sdk/build-tools/25.0.0/dx&#x3002; --output &#x6307;&#x5B9A;&#x751F;&#x6210;dex&#x7684;&#x8DEF;&#x5F84; &#x6700;&#x540E;&#x6307;&#x5B9A;.class&#x6587;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55; 4. &#x521B;&#x5EFA;&#x672A;&#x7B7E;&#x540D;&#x7684;apk&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5C06;dex&#x6587;&#x4EF6;&#x6DFB;&#x52A0;&#x5230;&#x8BE5;apk&#x4E2D;&#xFF1A; 1234567$ aapt package -f -M AndroidManifest.xml \ -S res -A assets -I ~/Library/Android/sdk/platforms/android-25/android.jar -F bin/HelloAndroid_unsigned.apk$ cd bin$ aapt add HelloAndroid_unsigned.apk classes.dex &#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;classes.dex&#x6587;&#x4EF6;&#x524D;&#x4E00;&#x5B9A;&#x4E0D;&#x8981;&#x52A0;&#x989D;&#x5916;&#x8DEF;&#x5F84;&#xFF0C;&#x5426;&#x5219;&#x8FD9;&#x4E9B;&#x8DEF;&#x5F84;&#x4F1A;&#x4E00;&#x5E76;&#x5E26;&#x8FDB;apk&#x5305;&#x91CC;&#x3002;&#x800C;&#x5728;Android apk&#x91CC;&#x7684;classes.dex&#x6587;&#x4EF6;&#x662F;&#x4E0D;&#x80FD;&#x5E26;&#x8DEF;&#x5F84;&#x7684;&#x3002;&#x56E0;&#x6B64;&#x5728;&#x6DFB;&#x52A0;dex&#x4E4B;&#x524D;&#x9700;&#x8981;&#x5148;cd bin 5. &#x5BF9;apk&#x6587;&#x4EF6;&#x7B7E;&#x540D; 1234567$ jarsigner -verbose \ -keystore ~/.android/debug.keystore \ -keypass android \ -storepass android \ -signedjar bin/HelloAndroid_signed.apk&quot; \ bin/HelloAndroid_unsigned.apk&quot; \ androiddebugkey -keystore &#x79D8;&#x94A5;&#x5E93;&#x4F4D;&#x7F6E; -keypass &#x4E13;&#x7528;&#x5BC6;&#x94A5;&#x7684;&#x53E3;&#x4EE4; -storepass &#x7528;&#x4E8E;&#x79D8;&#x94A5;&#x5E93;&#x5B8C;&#x6574;&#x6027;&#x7684;&#x53E3;&#x4EE4; signedjar &#x7B7E;&#x540D;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x79F0; &#x4E4B;&#x540E;&#x8DDF;&#x968F;&#x7684;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x662F;&#x5F85;&#x7B7E;&#x540D;&#x7684;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x6587;&#x4EF6;&#x522B;&#x540D;&#x3002;&#x6B64;&#x5904;&#x4F7F;&#x7528;&#x4E86;debug&#x7B7E;&#x540D;&#x8BC1;&#x4E66;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x5BC6;&#x7801;&#x662F;android&#xFF0C;&#x522B;&#x540D;&#x662F;androiddebugkey&#x3002; 6. &#x5BF9;&#x7B7E;&#x540D;&#x540E;&#x7684;apk&#x505A;&#x5BF9;&#x5176;&#x4F18;&#x5316; 1zipalign -f 4 bin/HelloAndroid_signed.apk bin/HelloAndroid.apk &#x6211;&#x628A;&#x4EE5;&#x4E0A;&#x7684;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x5199;&#x6210;&#x811A;&#x672C;&#x653E;&#x5728;build.sh&#x3002; &#x5728;SDK&#x81EA;&#x5E26;&#x7684;emulator&#x4E2D;&#x8FD0;&#x884C; &#x4F7F;&#x7528;Android SDK &#x4E0B;&#x8F7D;&#x7684;x86&#x7684;&#x6A21;&#x62DF;&#x5668;&#x8FD0;&#x884C;&#x901F;&#x5EA6;&#x5DF2;&#x7ECF;&#x5FEB;&#x5F88;&#x591A;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x822C;&#x7684;app&#x8C03;&#x8BD5;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x3002;&#x8981;&#x6BD4;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x4F7F;&#x7528;&#x66F4;&#x65B9;&#x4FBF;&#x3002;&#x5728;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#x8981;&#x5148;&#x521B;&#x5EFA;&#x6A21;&#x62DF;&#x5668;&#xFF0C;&#x65B9;&#x6CD5;&#x4E3A;&#xFF1A; * &#x547D;&#x4EE4;&#x884C;&#x4E0B;&#x8FD0;&#x884C;android&#xFF0C;&#x70B9;&#x51FB;&#x83DC;&#x5355;Tools - Manager ADVs... * &#x52FE;&#x9009;&#x548C;&#x4E0B;&#x8F7D;&#x5373;&#x5C06;&#x4F7F;&#x7528;&#x7684;Android&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; * &#x9009;&#x62E9;Device Definitions&#xFF0C;&#x9009;&#x62E9;&#x6709;&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x70B9;&#x51FB;Create AVD...&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x6A21;&#x62DF;&#x5668;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x6211;&#x521B;&#x5EFA;&#x7684;&#x662F;&#x4E2A;x86&#x7684;&#x6A21;&#x62DF;&#x5668;&#xFF0C;&#x8FD9;&#x6837;&#x4F1A;&#x5728;&#x5BBF;&#x4E3B;&#x673A;&#x5668;&#x4E0A;&#x8DD1;&#x5F97;&#x5FEB;&#x4E00;&#x4E9B;&#xFF1A; * &#x6765;&#x5230;Android Virutal Devices&#x9875;&#x9762;&#xFF0C;&#x5373;&#x53EF;&#x542F;&#x52A8;&#x521A;&#x521A;&#x521B;&#x5EFA;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x3002;&#x5728;macOS&#x4E0A;&#x542F;&#x52A8;x86&#x7684;&#x6A21;&#x62DF;&#x5668;&#x9700;&#x8981;&#x5B89;&#x88C5;Intel Hardware Accelerated Execution Manager&#x3002; &#x521B;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x518D;&#x6B21;&#x542F;&#x52A8;&#x6A21;&#x62DF;&#x5668;&#x53EA;&#x9700;&#x8981;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E0B;&#x8C03;&#x7528;&#xFF1A; 1$ emulator -avd AVD_for_Nexus_6_by_Google &#x5176;&#x4E2D;emulator&#x6765;&#x81EA;~/Library/Android/sdk/tools/emulator&#x3002;&#x8981;&#x83B7;&#x5F97;root&#x6743;&#x9650;&#xFF0C;&#x53EA;&#x9700;&#x6267;&#x884C;&#xFF1A; 1$ adb root &#x5176;&#x4E2D;adb&#x6765;&#x81EA;~/Library/Android/sdk/platform-tools/adb]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android应用程序的编译（一）——源码下编译]]></title>
    <url>%2F2016%2F11%2F06%2F2016%2F1020BuildAndroidApp%2F</url>
    <content type="text"><![CDATA[&#x8FD9;&#x7BC7;&#x535A;&#x6587;&#x51E0;&#x7ECF;&#x4FEE;&#x6539;&#xFF0C;&#x672C;&#x6765;&#x60F3;&#x5199;&#x6210;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x6E90;&#x7801;&#x3001;SDK&#x4E0B;&#x7684;&#x7F16;&#x8BD1;&#x65B9;&#x6CD5;&#xFF0C;&#x641E;&#x4E2A;&#x82B1;&#x5F0F;&#x7F16;&#x8BD1;&#x65B9;&#x6CD5;&#x7684;&#x6C47;&#x603B;&#x8D34;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x662F;&#x4ECE;Android&#x6E90;&#x7801;&#x5F00;&#x59CB;&#x5B66;&#x4E60;&#x7684;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x5E76;&#x4E0D;&#x600E;&#x4E48;&#x5173;&#x5FC3;app&#x600E;&#x4E48;&#x5199;&#xFF0C;&#x5076;&#x5C14;&#x5199;&#x70B9;&#x4EE3;&#x7801;&#xFF0C;&#x4EE3;&#x7801;&#x91CF;&#x90FD;&#x4E0D;&#x5927;&#xFF0C;&#x4E3B;&#x8981;&#x4E3A;&#x4E86;&#x9A8C;&#x8BC1;&#x548C;&#x8C03;&#x8BD5;&#x7528;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x6700;&#x521D;&#x4E3B;&#x8981;&#x5C31;&#x7528;&#x7B80;&#x5355;&#x7684;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;+&#x6E90;&#x7801;&#x4E0B;mmm&#x6765;&#x7F16;&#x8BD1;&#x3002;&#x6B64;&#x5916;&#x6211;&#x4E5F;&#x4E0D;&#x592A;&#x559C;&#x6B22;&#x52A8;&#x8F84;&#x52A8;&#x7528;AndroidStudio&#x8FD9;&#x79CD;&#x5927;&#x4E1C;&#x897F;&#xFF0C;&#x81F3;&#x5C11;&#x5728;&#x5BF9;&#x5B83;&#x751F;&#x6210;&#x7684;&#x4E00;&#x5806;&#x6587;&#x4EF6;&#x6CA1;&#x6709;&#x6E05;&#x695A;&#x7406;&#x89E3;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x628A;&#x5B83;&#x5F53;&#x505A;&#x5B66;&#x4E60;Android&#x7684;&#x4E3B;&#x8981;&#x5DE5;&#x5177;&#x3002; &#x6700;&#x8FD1;&#x8981;&#x5B66;&#x4E60;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x65AD;&#x5F80;&#x5E94;&#x7528;&#x5C42;&#x6269;&#x5C55;&#xFF0C;&#x6709;&#x5FC5;&#x8981;&#x5BF9;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x7F16;&#x8BD1;&#x5F7B;&#x5E95;&#x641E;&#x6E05;&#x695A;&#x4E86;&#x3002;&#x6240;&#x8C13;&#x201C;&#x5F7B;&#x5E95;&#x641E;&#x6E05;&#x695A;&#x201D;&#x4E0D;&#x662F;&#x7528;AndroidStudio&#x8FD9;&#x79CD;IDE&#x4E00;&#x952E;&#x5B8C;&#x6210;&#xFF0C;&#x800C;&#x662F;&#x8981;&#x77E5;&#x9053;&#x8FD9;&#x4E00;&#x952E;&#x80CC;&#x540E;&#x90FD;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x539F;&#x751F;&#x7684;&#x65B9;&#x5F0F;&#x600E;&#x4E48;&#x505A;&#x3002;&#x7406;&#x89E3;&#x4E86;&#x8FD9;&#x4E9B;&#xFF0C;&#x4F7F;&#x7528;&#x4E0A;&#x5C42;&#x5DE5;&#x5177;&#x624D;&#x80FD;&#x66F4;&#x6DF1;&#x523B;&#xFF0C;&#x4EBA;&#x5251;&#x5408;&#x4E00;:) &#x8FD9;&#x4E24;&#x5929;&#x5728;&#x5B66;&#x4E60;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#xFF0C;&#x5173;&#x4E8E;SDK&#x7F16;&#x8BD1;&#x7684;&#x5927;&#x90E8;&#x5206;&#x6587;&#x7AE0;&#x90FD;&#x6BD4;&#x8F83;&#x8001;&#xFF0C;&#x6BD4;&#x5982;&#x90FD;&#x8FD8;&#x5728;&#x8BB2;apkbuilder&#x8FD9;&#x79CD;&#x88AB;Google&#x5E9F;&#x5F03;&#x7684;&#x65B9;&#x5F0F;&#xFF1B;&#x6B64;&#x5916;&#xFF0C;&#x4E0D;&#x65AD;&#x6DF1;&#x5165;&#xFF0C;&#x53D1;&#x73B0;&#x7EC6;&#x8282;&#x70B9;&#x8FD8;&#x633A;&#x591A;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x547D;&#x4EE4;&#x884C;&#x751F;&#x6210;&#x9879;&#x76EE;&#x3001;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x7684;&#x8BBE;&#x7F6E;&#x2026;&#x2026;&#x8FD9;&#x4E9B;&#x7EC6;&#x8282;&#x638C;&#x63E1;&#x4E86;&#xFF0C;&#x8FD9;&#x4E9B;&#x652F;&#x6491;&#x5C42;&#x7684;&#x73AF;&#x5883;&#x505A;&#x597D;&#x4E86;&#xFF0C;&#x5BF9;&#x4E8E;&#x4EE5;&#x540E;&#x628A;&#x73A9;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6548;&#x7387;&#x63D0;&#x5347;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x6253;&#x7B97;&#x628A;&#x539F;&#x5148;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x505A;&#x4E2A;&#x62C6;&#x5206;&#xFF1A;&#x201C;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x201D;&#x4F5C;&#x4E3A;&#x4E00;&#x7BC7;&#xFF0C;&#x201C;SDK&#x7F16;&#x8BD1;&#x201D;&#x4F5C;&#x4E3A;&#x4E00;&#x7BC7;&#xFF0C;&#x201C;NDK&#x7F16;&#x8BD1;&#x201D;&#x2026;&#x2026;&#x770B;&#x60C5;&#x51B5;&#x5427;&#xFF0C;&#x5F53;&#x4E0B;&#x8FD8;&#x6CA1;&#x6D89;&#x53CA;&#x5230;~ &#x6700;&#x7B80;&#x5355;&#x7684;Android&#x5DE5;&#x7A0B; &#x6211;&#x628A;&#x4EE3;&#x7801;&#x653E;&#x5728;&#x4E86;HelloAndroid&#xFF0C;&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; 12345678910111213HelloAndroid&#x251C;&#x2500;&#x2500;AndroidManifest.xml&#x251C;&#x2500;&#x2500;Android.mk&#x251C;&#x2500;&#x2500;src&#x2502; &#x2514;&#x2500;&#x2500;palance/li/hello&#x2502; &#x2514;&#x2500;&#x2500;HelloAndroid.java&#x2514;&#x2500;&#x2500;res &#x251C;&#x2500;&#x2500;layout &#x2502; &#x2514;&#x2500;&#x2500;main.xml &#x251C;&#x2500;&#x2500;values &#x2502; &#x2514;&#x2500;&#x2500;strings.xml &#x2514;&#x2500;&#x2500;drawable &#x2514;&#x2500;&#x2500;icon.png Android.mk 1234567LOCAL_PATH:=$(call my-dir)include $(CLEAR_VARS)LOCAL_MODULE_TAGS := optionalLOCAL_SRC_FILES := $(call all-subdir-java-files)LOCAL_PACKAGE_NAME := HelloAndroidinclude $(BUILD_PACKAGE) LOCAL_MODULE_TAGS&#x662F;&#x5F53;&#x524D;&#x6A21;&#x5757;&#x6240;&#x5305;&#x542B;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x6807;&#x7B7E;&#x3002;&#x53EF;&#x9009;&#x7684;&#x503C;&#x6709;&#xFF1A;debug, eng, user, development, optional&#xFF08;&#x9ED8;&#x8BA4;&#x503C;&#xFF09;&#x3002;&#x6807;&#x7B7E;&#x662F;&#x63D0;&#x4F9B;&#x7ED9;&#x7F16;&#x8BD1;&#x7C7B;&#x578B;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x7F16;&#x8BD1;&#x7C7B;&#x578B;&#x4F1A;&#x5B89;&#x88C5;&#x5305;&#x542B;&#x4E0D;&#x540C;&#x6807;&#x7B7E;&#x7684;&#x6A21;&#x5757;&#xFF1A; &#x540D;&#x79F0; &#x8BF4;&#x660E; eng &#x9ED8;&#x8BA4;&#x7C7B;&#x578B;&#x3002;&#x8BE5;&#x7F16;&#x8BD1;&#x7C7B;&#x578B;&#x9002;&#x7528;&#x4E8E;&#x5F00;&#x53D1;&#x9636;&#x6BB5;&#x3002;&#x5F53;&#x9009;&#x62E9;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x7F16;&#x8BD1;&#x7ED3;&#x679C;&#x5C06;&#xFF1A;&#x5B89;&#x88C5;&#x5305;&#x542B; eng, debug,user&#xFF0C;development &#x6807;&#x7B7E;&#x7684;&#x6A21;&#x5757;&#xFF1B;&#x5B89;&#x88C5;&#x6240;&#x6709;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x975E; APK &#x6A21;&#x5757;&#xFF1B;&#x5B89;&#x88C5;&#x6240;&#x6709;&#x4EA7;&#x54C1;&#x5B9A;&#x4E49;&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#x7684; APK&#x6A21;&#x5757; user &#x8BE5;&#x7F16;&#x8BD1;&#x7C7B;&#x578B;&#x9002;&#x5408;&#x7528;&#x4E8E;&#x6700;&#x7EC8;&#x53D1;&#x5E03;&#x9636;&#x6BB5;&#x3002;&#x5F53;&#x9009;&#x62E9;&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x7F16;&#x8BD1;&#x7ED3;&#x679C;&#x5C06;&#xFF1A;&#x5B89;&#x88C5;&#x6240;&#x6709;&#x5E26;&#x6709; user &#x6807;&#x7B7E;&#x7684;&#x6A21;&#x5757;&#xFF1B;&#x5B89;&#x88C5;&#x6240;&#x6709;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#x7684;&#x975E; APK &#x6A21;&#x5757;&#xFF1B;&#x5B89;&#x88C5;&#x6240;&#x6709;&#x4EA7;&#x54C1;&#x5B9A;&#x4E49;&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#x7684; APK &#x6A21;&#x5757;&#xFF0C;APK&#x6A21;&#x5757;&#x7684;&#x6807;&#x7B7E;&#x5C06;&#x88AB;&#x5FFD;&#x7565; userdebug &#x8BE5;&#x7F16;&#x8BD1;&#x7C7B;&#x578B;&#x9002;&#x5408;&#x7528;&#x4E8E; debug &#x9636;&#x6BB5;&#x3002;&#x8BE5;&#x7C7B;&#x578B;&#x548C; user &#x4E00;&#x6837;&#xFF0C;&#x9664;&#x4E86;&#xFF1A;&#x4F1A;&#x5B89;&#x88C5;&#x5305;&#x542B; debug &#x6807;&#x7B7E;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x7F16;&#x8BD1;&#x51FA;&#x7684;&#x7CFB;&#x7EDF;&#x5177;&#x6709; root &#x8BBF;&#x95EE;&#x6743;&#x9650; AndroidManifest.xml 1234567891011121314151617&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;palance.li.hello&quot; android:versionCode=&quot;1&quot; android:versionName=&quot;1.0&quot;&gt; &lt;application android:icon=&quot;@drawable/icon&quot; android:label=&quot;@string/app_name&quot;&gt; &lt;activity android:name=&quot;.HelloAndroid&quot; android:label=&quot;@string/app_name&quot;&gt; &lt;intent-filter&gt; &lt;!-- &#x8FD9;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#x7684;&#x8BBE;&#x7F6E;&#x4F7F;&#x5F97;HelloAndroid&#x7EC4;&#x4EF6;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x7EC4;&#x4EF6; --&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; HelloAndroid.java java&#x6587;&#x4EF6;&#x53EA;&#x5728;onCreate(...)&#x51FD;&#x6570;&#x4E2D;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x884C;log&#x8F93;&#x51FA;&#xFF1A; 1234567891011121314151617package palance.li.hello;import android.app.Activity;import android.os.Bundle;import android.util.Log;public class HelloAndroid extends Activity{ private final static String LOG_TAG = &quot;palance.li.hello.HelloAndroid&quot;; @Override public void onCreate(Bundle savedInstanceState){ super.onCreate(savedInstanceState); setContentView(R.layout.main); Log.i(LOG_TAG, &quot;OnCreate OK.&quot;); }} &#x8D44;&#x6E90;&#x6587;&#x4EF6;layout/main.xml 12345678910111213&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot; android:gravity=&quot;center&quot;&gt; &lt;TextView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:gravity=&quot;center&quot; android:text=&quot;@string/hello_android&quot; &gt; &lt;/TextView&gt;&lt;!-- &#x5728;&#x754C;&#x9762;&#x4E2D;&#x95F4;&#x589E;&#x52A0;&#x4E00;&#x4E2A;TextView&#xFF0C;&#x663E;&#x793A;&#x5185;&#x5BB9;&#x5B9A;&#x4E49;&#x5728;values/strings.xml --&gt;&lt;/LinearLayout&gt; &#x8D44;&#x6E90;&#x6587;&#x4EF6;values/strings.xml 12345&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&lt;resources&gt; &lt;string name=&quot;app_name&quot;&gt;HelloAndroid&lt;/string&gt; &lt;string name=&quot;hello_android&quot;&gt;Hello Android&lt;/string&gt;&lt;/resources&gt; Android&#x6E90;&#x7801;&#x4E0B;&#x7F16;&#x8BD1; &#x628A;&#x8BE5;&#x6587;&#x4EF6;&#x5939;&#x653E;&#x5230;/packages/experimental&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x6211;&#x5199;&#x4E86;&#x4E00;&#x4E2A;&#x811A;&#x672C;HelloAndroid/ln2android.sh&#xFF0C;&#x53EA;&#x8981;&#x6267;&#x884C; 1$ sh ln2android.sh &lt;android-dir&gt; &#x5373;&#x53EF;&#x5728;/packages/experimental&#x4E0B;&#x751F;&#x6210;&#x6307;&#x5411;HelloAndroid&#x7684;&#x8F6F;&#x94FE;&#x63A5;&#x3002;&#x6267;&#x884C;&#x547D;&#x4EE4;&#xFF1A; 1234$ cd &lt;android-dir&gt;$ source build/envsetup.sh$ lunch aosp_arm_eng$ mmm packages/experimental/HelloAndroid &#x5373;&#x53EF;&#x751F;&#x6210;apk&#x6587;&#x4EF6;&#xFF1A; &lt;android-dir&gt;/out/debug/target/product/generic/system/app/HelloAndroid/HelloAndroid.apk&#x3002; # &#x5728;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x4E2D;&#x8FD0;&#x884C; &#x5982;&#x679C;&#x5E26;&#x7740;HelloAndroid&#x7684;&#x4EE3;&#x7801;&#x7F16;&#x8BD1;Android&#x6E90;&#x7801;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;HelloAndroid&#x5C31;&#x662F;&#x968F;&#x7CFB;&#x7EDF;&#x5B89;&#x88C5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x5982;&#x679C;&#x4EE5;&#x540E;&#x4FEE;&#x6539;&#x4E86;&#x8BE5;&#x7A0B;&#x5E8F;&#xFF0C;&#x4E3A;&#x4E86;&#x4E0D;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;Android&#x6E90;&#x7801;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C;&#xFF1A; 1$ make snod &#x5373;&#x53EF;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x3002; &#x4F46;&#x641E;&#x6210;&#x7CFB;&#x7EDF;&#x81EA;&#x5E26;&#x5E94;&#x7528;&#x5E76;&#x4E0D;&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;&#x56E0;&#x4E3A;&#x7CFB;&#x7EDF;&#x81EA;&#x5E26;&#x5E94;&#x7528;&#x4E0D;&#x80FD;&#x5378;&#x8F7D;&#xFF0C;&#x4EE5;&#x540E;&#x4FEE;&#x6539;&#x4E86;&#x4EE3;&#x7801;&#xFF0C;&#x8981;&#x91CD;&#x65B0;&#x8C03;&#x8BD5;&#x5C31;&#x53EA;&#x80FD;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x3002; &#x53EF;&#x4EE5;&#x5728;&#x7F16;&#x8BD1;&#x6A21;&#x62DF;&#x5668;&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x8981;&#x628A;HelloAndroid&#x653E;&#x5230;/packages/experimental&#x4E0B;&#xFF0C;&#x7B49;&#x6A21;&#x62DF;&#x5668;&#x542F;&#x52A8;&#x540E;&#x518D;&#x5355;&#x72EC;&#x7F16;&#x8BD1;HelloAndroid&#x3002;&#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x540E;&#x5148;&#x67E5;&#x8BE2;&#x6A21;&#x62DF;&#x5668;&#x4E2D;&#x5DF2;&#x5B89;&#x88C5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF1A; 1234$ adb shell pm list packagespackage:com.android.providers.telephonypackage:palance.li.hello... ... &#x5982;&#x679C;&#x5E94;&#x7528;&#x5DF2;&#x5B89;&#x88C5;&#xFF0C;&#x5219;&#x5148;&#x5378;&#x8F7D;&#x518D;&#x5B89;&#x88C5;&#xFF1A; 123$ adb uninstall palance.li.hello... ...$ adb install ~/HelloAndroid.apk]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Qt的QHBoxLayout、QVBoxLayout布局管理]]></title>
    <url>%2F2016%2F10%2F31%2F2016%2F1031PyQt%2F</url>
    <content type="text"><![CDATA[&#x8D1F;&#x8D23;&#x6218;&#x7565;&#x5408;&#x4F5C;&#x7684;&#x540C;&#x5B66;&#x6700;&#x8FD1;&#x63A5;&#x4E86;&#x4E00;&#x6279;&#x8FB9;&#x7F18;&#x5E73;&#x53F0;&#x4E0B;&#x7684;&#x4E1A;&#x52A1;&#xFF0C;&#x8FD9;&#x4E9B;&#x5206;&#x652F;&#x548C;&#x4EA7;&#x54C1;&#x7684;&#x4E3B;&#x6D41;&#x903B;&#x8F91;&#x6709;&#x4E00;&#x4E9B;&#x5DEE;&#x5F02;&#xFF0C;&#x6BCF;&#x4E2A;&#x5E73;&#x53F0;&#x90FD;&#x8DB3;&#x4EE5;&#x6295;&#x4E00;&#x4E2A;&#x5C0F;&#x56E2;&#x961F;&#x6765;&#x641E;&#x4E86;&#x3002;&#x53EF;&#x662F;&#x7531;&#x4E8E;&#x4E1A;&#x52A1;&#x6BD4;&#x8F83;&#x8FB9;&#x7F18;&#xFF0C;&#x5F88;&#x96BE;&#x7ED9;&#x5230;&#x90A3;&#x4E48;&#x591A;&#x8D44;&#x6E90;&#xFF0C;&#x6700;&#x597D;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x6311;&#x4E00;&#x4E2A;&#x53EF;&#x8DE8;&#x5E73;&#x53F0;&#x4E14;&#x5F00;&#x53D1;&#x6210;&#x672C;&#x4F4E;&#x7684;&#x8BED;&#x8A00;&#x548C;&#x5E93;&#x6765;&#x641E;&#x4E86;&#xFF0C;&#x6211;&#x9009;&#x7528;&#x4E86;Qt&#xFF0C;&#x5148;&#x7528;PyQt&#x505A;&#x4E2A;demo&#x3002;&#x5468;&#x672B;&#x82B1;&#x4E86;&#x4E00;&#x4E0B;&#x5348;&#x770B;&#x770B;&#x6559;&#x7A0B;&#xFF0C;&#x679C;&#x7136;&#x9192;&#x76EE;&#xFF0C;&#x591F;&#x5FEB;~ &#x5173;&#x4E8E;&#x5E03;&#x5C40;&#xFF0C;&#x4E4B;&#x524D;&#x7528;WxPython&#x7684;&#x65F6;&#x5019;&#x5C31;&#x5E38;&#x5E38;&#x8FF7;&#x60D1;&#xFF0C;&#x56E0;&#x4E3A;&#x6307;&#x5B9A;&#x7684;&#x5C3A;&#x5BF8;&#x4E0D;&#x7075;&#x3002;&#x8FD9;&#x79CD;&#x73B0;&#x8C61;&#x5728;PyQt&#x4E2D;&#x4F9D;&#x7136;&#x5B58;&#x5728;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x628A;QHBoxLayout&#x548C;QVBoxLayout&#x7684;&#x5E03;&#x5C40;&#x7B80;&#x5355;&#x68B3;&#x7406;&#x4E00;&#x4E0B;&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980# -*- coding:utf-8 -*-import loggingimport sysfrom PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, \QLineEdit, QLabel, QPushButtonclass MainWidget(QWidget): def __init__(self): super().__init__() self.initUI() def initUI(self): self.resize(400, 200) vbox = QVBoxLayout() # &#x7B2C;&#x4E00;&#x884C; hbox = QHBoxLayout() label = QLabel(&apos;&#x59D3;&#x540D;&#xFF1A;&apos;, self) hbox.addWidget(label) editBox = QLineEdit(self) hbox.addWidget(editBox) hbox.setStretchFactor(editBox, 2) # &#x8BBE;&#x5B9A;&#x4E09;&#x4E2A;&#x63A7;&#x4EF6;&#x6A2A;&#x5411;&#x62C9;&#x4F38;&#x6BD4;&#x4F8B;&#x4E3A;2:1:5 label = QLabel(&apos;&#x5E74;&#x9F84;&#xFF1A;&apos;, self) hbox.addWidget(label) editBox = QLineEdit(self) hbox.addWidget(editBox) hbox.setStretchFactor(editBox, 1) label = QLabel(&apos;&#x5BB6;&#x5EAD;&#x4F4F;&#x5740;&#xFF1A;&apos;, self) hbox.addWidget(label) editBox = QLineEdit(self) hbox.addWidget(editBox) hbox.setStretchFactor(editBox, 5) vbox.addLayout(hbox) # &#x7B2C;&#x4E8C;&#x884C; hbox = QHBoxLayout() label = QLabel(&apos;&#x7535;&#x8BDD;&#xFF1A;&apos;, self) hbox.addWidget(label) # label&#x6309;&#x9700;&#x5206;&#x914D;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x6BD4;&#x4F8B;&#xFF0C;QLineEdit&#x5E73;&#x5747;&#x5206;&#x914D; editBox = QLineEdit(self) hbox.addWidget(editBox) label = QLabel(&apos;&#x90AE;&#x7BB1;&#xFF1A;&apos;, self) hbox.addWidget(label) editBox = QLineEdit(self) hbox.addWidget(editBox) vbox.addLayout(hbox) # &#x7B2C;&#x4E09;&#x884C; hbox = QHBoxLayout() label = QLabel(&apos;&#x8EAB;&#x4EFD;&#x8BC1;&#x53F7;&#xFF1A;&apos;, self) hbox.addWidget(label) editBox = QLineEdit(self) hbox.addWidget(editBox) vbox.addLayout(hbox) # &#x7B2C;&#x56DB;&#x884C; hbox = QHBoxLayout() hbox.addStretch(2) # &#x8BBE;&#x5B9A;&#x4E24;&#x4E2A;&#x6309;&#x94AE;&#x7684;&#x6A2A;&#x5411;&#x5E03;&#x5C40;&#x4E3A; 2 : &#x786E;&#x5B9A; : &#x53D6;&#x6D88; : 1 btn = QPushButton(&apos;&#x786E;&#x5B9A;&apos;) hbox.addWidget(btn) btn = QPushButton(&apos;&#x53D6;&#x6D88;&apos;) hbox.addWidget(btn) hbox.addStretch(1) vbox.addLayout(hbox) vbox.addStretch(1) self.setLayout(vbox) self.show()if __name__ == &apos;__main__&apos;: loggingFormat = &apos;%(asctime)s %(lineno)04d %(levelname)-8s %(message)s&apos; logging.basicConfig(level=logging.DEBUG, format=loggingFormat, datefmt=&apos;%H:%M&apos;,) app = QApplication(sys.argv) mainWidget = MainWidget() sys.exit(app.exec_()) &#x8BE5;&#x4F8B;&#x7A0B;&#x5728;test.py &#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x7B2C;&#x4E00;&#x884C;&#x7684;&#x51E0;&#x4E2A;&#x63A7;&#x4EF6;&#x5BBD;&#x5EA6;&#x6BD4;&#x4F8B;&#x901A;&#x8FC7; QBoxLayout::setStretchFactor(QWidget *widget, int stretch) &#x6765;&#x8BBE;&#x5B9A;&#xFF1A; 12345hbox.setStretchFactor(editBox, 2)... ...hbox.setStretchFactor(editBox, 1)... ...hbox.setStretchFactor(editBox, 5) &#x5982;&#x679C;&#x4E0D;&#x8BBE;&#x5B9A;&#xFF0C;&#x5BF9;&#x4E8E;QLabel&#x4F1A;&#x6309;&#x9700;&#x5206;&#x914D;&#xFF0C;&#x5BF9;&#x4E8E;QLineEdit&#x5219;&#x4F1A;&#x5E73;&#x5206;&#x5269;&#x4F59;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x5982;&#x7B2C;&#x4E8C;&#x884C;&#xFF1B; &#x5982;&#x679C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;QLineEdit&#x5219;&#x4F1A;&#x72EC;&#x5360;&#x5269;&#x4F59;&#x7A7A;&#x95F4;&#xFF0C;&#x5982;&#x7B2C;&#x4E09;&#x884C;&#x3002; &#x5982;&#x679C;&#x8981;&#x6307;&#x5B9A;&#x7A7A;&#x5360;&#x4F4D;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;QBoxLayout::addStretch(int stretch = 0)&#xFF0C;&#x6709;&#x4EBA;&#x628A;Stretch&#x79F0;&#x4F5C;&#x5F39;&#x7C27;&#xFF0C;&#x633A;&#x5F62;&#x8C61;&#x7684;&#x2014;&#x2014;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E0A;&#x6CA1;&#x6709;&#x5176;&#x5B83;&#x5F39;&#x7C27;&#xFF0C;&#x5219;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5F39;&#x7C27;&#x4F1A;&#x628A;&#x5176;&#x5B83;&#x6240;&#x6709;&#x63A7;&#x4EF6;&#x538B;&#x5230;&#x6700;&#x5C0F;&#xFF1B;&#x5982;&#x679C;&#x6DFB;&#x52A0;&#x4E86;&#x591A;&#x4E2A;&#x5F39;&#x7C27;&#xFF0C;&#x5219;&#x6309;&#x7167;&#x914D;&#x6BD4;&#x5206;&#x914D;&#x7A7A;&#x95F4;&#xFF0C;&#x7ED9;&#x63A7;&#x4EF6;&#x8BBE;&#x7F6E;&#x7684;StretchFactor&#x4E5F;&#x7B97;&#x4F5C;&#x5F39;&#x7C27;&#x3002;&#x5982;&#x6700;&#x540E;&#x4E00;&#x884C;&#xFF0C;&#x5728;&#x786E;&#x5B9A;&#x5DE6;&#x4FA7;&#x8BBE;&#x5B9A;&#x4E86;&#x56E0;&#x5B50;&#x4E3A;2&#x7684;&#x5F39;&#x7C27;&#xFF0C;&#x5728;&#x53D6;&#x6D88;&#x53F3;&#x4FA7;&#x8BBE;&#x5B9A;&#x4E86;&#x56E0;&#x5B50;&#x4E3A;1&#x7684;&#x5F39;&#x7C27;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Activity启动过程学习笔记（一）]]></title>
    <url>%2F2016%2F10%2F27%2F2016%2F1027ActivityStarting1%2F</url>
    <content type="text"><![CDATA[&#x627E;&#x5230;Launcher&#x542F;&#x52A8;app&#x7684;&#x5165;&#x53E3;&#x70B9; &#x5F53;&#x5728;&#x684C;&#x9762;&#x4E0A;&#x70B9;&#x51FB;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x56FE;&#x6807;&#x65F6;&#xFF0C;Luancher&#x54CD;&#x5E94;&#x70B9;&#x51FB;&#x6D88;&#x606F;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;Launcher::onClick(...)&#x3002; 123456789101112131415161718192021222324// packages/apps/Launcher3/src/com/android/launcher3/Launcher.java:2458 public void onClick(View v) { ... ... Object tag = v.getTag(); if (tag instanceof ShortcutInfo) { onClickAppShortcut(v); } else if (tag instanceof FolderInfo) { ... } else ... }// :2591 protected void onClickAppShortcut(final View v) { ... ... // Start activities startAppShortcutOrInfoActivity(v); ... ... }// :2647 @Thunk void startAppShortcutOrInfoActivity(View v) { Object tag = v.getTag(); ... ... boolean success = startActivitySafely(v, intent, tag); ... ... } &#x63A5;&#x4E0B;&#x6765;&#x4EE5;Launcher::startActivitySafely(...)&#x4E3A;&#x8D77;&#x70B9;&#x8FDB;&#x5165;app&#x542F;&#x52A8;&#x7684;&#x5206;&#x6790;&#x3002; # Step1 Launcher::startActivitySafely(...) 123456789// packages/apps/Launcher3/src/com/android/launcher3/Launcher.java:2938 public boolean startActivitySafely(View v, Intent intent, Object tag) { boolean success = false; ... ... try { success = startActivity(v, intent, tag); // &#x1F3C1; } catch (ActivityNotFoundException e) { ... } return success; } &#x5176;&#x4E2D;&#x53C2;&#x6570;intent&#x4E2D;&#x5305;&#x542B;Activity&#x7EC4;&#x5EFA;&#x7684;&#x4FE1;&#x606F;&#xFF1A; 123action=&quot;android.intent.action.MAIN&quot;category=&quot;android.instent.category.LAUNCHER&quot;cmp=&quot;palance.li.activity.MainActivity&quot; &#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x6765;&#x81EA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;AndroidManifest.xml&#x6587;&#x4EF6;&#xFF0C;&#x662F;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5B89;&#x88C5;&#x7684;&#x65F6;&#x5019;&#x7531;PackageManagerService&#x89E3;&#x6790;&#x5E76;&#x4FDD;&#x5B58;&#x7684;&#x3002; # Step2 Launcher::startActivity(...) 12345678910111213// packages/apps/Launcher3/src/com/android/launcher3/Launcher.java:2871 private boolean startActivity(View v, Intent intent, Object tag) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); try { ... ... if (user == null || user.equals(UserHandleCompat.myUserHandle())) { // Could be launching some bookkeeping activity startActivity(intent, optsBundle); // &#x1F3C1; } else {...} return true; } catch (SecurityException e) { ... } return false; } Launcher&#x7EE7;&#x627F;&#x81EA;Activity&#xFF0C;&#x8FD9;&#x4E2A;startActivity(...)&#x5C31;&#x6765;&#x81EA;&#x8BE5;&#x7236;&#x7C7B;&#x3002; # Step3 Activity::startActivity(...) 12345678910// frameworks/base/core/java/android/app/Activity.java:4207 public void startActivity(Intent intent, @Nullable Bundle options) { if (options != null) { startActivityForResult(intent, -1, options); } else { // Note we want to go through this call for compatibility with // applications that may have overridden the method. startActivityForResult(intent, -1); // &#x1F3C1; } } Step4 Activity::startActivityForResult(...) 123456789101112131415161718// frameworks/base/core/java/android/app/Activity.java:4555 @Override public void startActivityForResult( String who, Intent intent, int requestCode, @Nullable Bundle options) { ... ... // Instrumentation &#x7528;&#x6765;&#x76D1;&#x63A7;&#x5E94;&#x7528;&#x548C;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x7684;&#x4EA4;&#x4E92;&#x64CD;&#x4F5C;&#x3002; // mMainThread &#x63CF;&#x8FF0;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#xFF0C;Android&#x5E94;&#x7528;&#x7684;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x4F1A;&#x4FDD;&#x5B58;&#x8FD9;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002; // mMainThread.getApplicationThread() &#x8FD4;&#x56DE;Launcher&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x7684; // ApplicationThread&#x5BF9;&#x8C61;&#x3002; // mToken &#x6307;&#x5411;ActivityManagerService&#x4E2D;&#x7C7B;&#x578B;&#x4E3A;ActivityRecord&#x7684;Binder&#x5BF9;&#x8C61;&#xFF0C; // &#x6BCF;&#x4E2A;&#x5DF2;&#x542F;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6;&#x5728;ActivityManagerService&#x90FD;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x5BF9;&#x5E94;&#x7684; // ActivityRecord&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6765;&#x7EF4;&#x62A4;&#x5BF9;&#x5E94;Activity&#x7EC4;&#x4EF6;&#x7684;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#x53CA;&#x4FE1;&#x606F;&#x3002; Instrumentation.ActivityResult ar = mInstrumentation.execStartActivity( this, mMainThread.getApplicationThread(), mToken, who, intent, requestCode, options); // &#x1F3C1; ... ... } Step5 Instrumentation::execStartActivity(...) 123456789101112131415161718// frameworks/base/core/java/android/app/Instrumentation.java:1481 public ActivityResult execStartActivity( Context who, IBinder contextThread, IBinder token, Activity target, Intent intent, int requestCode, Bundle options) { ... ... try { ... ... // ActivityManagerNative.getDefault() &#x8FD4;&#x56DE;ActivityManagerService // &#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x3002; int result = ActivityManagerNative.getDefault() .startActivity(whoThread, who.getBasePackageName(), intent, intent.resolveTypeIfNeeded(who.getContentResolver()), token, target != null ? target.mEmbeddedID : null, requestCode, 0, null, options); // &#x1F3C1; ... ... } catch (RemoteException e) { ... } return null; } Step6 ActivityManagerProxy::startActivity(...) 123456789101112131415161718192021// frameworks/base/core/java/android/app/ActivityManagerNative.java:2631 public int startActivity(IApplicationThread caller, String callingPackage, Intent intent, String resolvedType, IBinder resultTo, String resultWho, int requestCode, int startFlags, ProfilerInfo profilerInfo, Bundle options) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); // caller&#x6307;&#x5411;Launcher&#x5BF9;&#x5E94;&#x7684;ApplicationThread&#x5BF9;&#x8C61;&#x3002; data.writeStrongBinder(caller != null ? caller.asBinder() : null); data.writeString(callingPackage); // intent &#x5305;&#x542B;&#x4E86;&#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6;&#x7684;&#x4FE1;&#x606F;&#x3002; intent.writeToParcel(data, 0); data.writeString(resolvedType); // resultTo &#x6307;&#x5411;ActivityManagerService&#x5185;&#x7684;ActivityRecord&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4FDD;&#x5B58;&#x4E86; // Launcher&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x3002; data.writeStrongBinder(resultTo); ... ... mRemote.transact(START_ACTIVITY_TRANSACTION, data, reply, 0); ... ... return result; } &#x5B83;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E86;START_ACTIVITY_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002; &#x4EE5;&#x4E0A;&#x7684;&#x6B65;&#x9AA4;&#x5728;Launcher&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; ** &#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;ActivityManagerService&#x3002;** # Setp7 ActivityManagerService::startActivity(...) 12345678// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:3849 public final int startActivity(IApplicationThread caller, String callingPackage, Intent intent, String resolvedType, IBinder resultTo, String resultWho, int requestCode, int startFlags, ProfilerInfo profilerInfo, Bundle options) { return startActivityAsUser(caller, callingPackage, intent, resolvedType, resultTo, resultWho, requestCode, startFlags, profilerInfo, options, UserHandle.getCallingUserId()); // &#x1F3C1; } Step8 ActivityManagerService::startActivityAsUser(...) 1234567891011// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:3858 public final int startActivityAsUser(IApplicationThread caller, String callingPackage, Intent intent, String resolvedType, IBinder resultTo, String resultWho, int requestCode, int startFlags, ProfilerInfo profilerInfo, Bundle options, int userId) { ... ... // &#x1F3C1; // mStackSupervisor&#x7C7B;&#x578B;&#x4E3A;ActivityStackSupervisor&#xFF0C;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6;&#x5806;&#x6808; return mStackSupervisor.startActivityMayWait(caller, -1, callingPackage, intent, resolvedType, null, null, resultTo, resultWho, requestCode, startFlags, profilerInfo, null, null, options, false, userId, null, null); } Step9 ActivityStackSupervisor::startActivityMayWait(...) 1234567891011121314151617181920212223242526272829// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:925 final int startActivityMayWait(IApplicationThread caller, int callingUid, String callingPackage, Intent intent, String resolvedType, IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor, IBinder resultTo, String resultWho, int requestCode, int startFlags, ProfilerInfo profilerInfo, WaitResult outResult, Configuration config, Bundle options, boolean ignoreTargetSecurity, int userId, IActivityContainer iContainer, TaskRecord inTask) { ... ... boolean componentSpecified = intent.getComponent() != null; // Don&apos;t modify the client&apos;s object! intent = new Intent(intent); // &#x89E3;&#x6790;intent&#x5185;&#x5BB9;&#xFF0C;&#x83B7;&#x5F97;&#x542F;&#x52A8;Activity&#x7EC4;&#x4EF6;&#x7684;&#x4FE1;&#x606F; ActivityInfo aInfo = resolveActivity(intent, resolvedType, startFlags, profilerInfo, userId); ... ... synchronized (mService) { ... ... int res = startActivityLocked(caller, intent, resolvedType, aInfo, voiceSession, voiceInteractor, resultTo, resultWho, requestCode, callingPid, callingUid, callingPackage, realCallingPid, realCallingUid, startFlags, options, ignoreTargetSecurity, componentSpecified, null, container, inTask); // &#x1F3C1; ... ... return res; } } Step10 ActivityStackSupervisor::startActivityMayWait(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:1399 final int startActivityLocked(IApplicationThread caller, Intent intent, String resolvedType, ActivityInfo aInfo, IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor, IBinder resultTo, String resultWho, int requestCode, int callingPid, int callingUid, String callingPackage, int realCallingPid, int realCallingUid, int startFlags, Bundle options, boolean ignoreTargetSecurity, boolean componentSpecified, ActivityRecord[] outActivity, ActivityContainer container, TaskRecord inTask) { int err = ActivityManager.START_SUCCESS; ProcessRecord callerApp = null; if (caller != null) { // callerApp&#x6307;&#x5411;Launcher&#x7EC4;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B; callerApp = mService.getRecordForAppLocked(caller); if (callerApp != null) { callingPid = callerApp.pid; callingUid = callerApp.info.uid; } else { ... } } ... ... ActivityRecord sourceRecord = null; ActivityRecord resultRecord = null; if (resultTo != null) { // resultTo&#x6307;&#x5411;Launcher&#x5728;ActivityManagerService&#x4E2D;&#x7684;ActivityRecord // &#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C; sourceRecord&#x5F97;&#x5230;&#x8BE5;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5728;&#x672C;&#x5730;&#x7684;ActivityRecord&#x5BF9;&#x8C61; sourceRecord = isInAnyStackLocked(resultTo); ... ... if (sourceRecord != null) { if (requestCode &gt;= 0 &amp;&amp; !sourceRecord.finishing) { resultRecord = sourceRecord; } } } ... ... // &#x521B;&#x5EFA;&#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6; ActivityRecord r = new ActivityRecord(mService, callerApp, callingUid, callingPackage, intent, resolvedType, aInfo, mService.mConfiguration, resultRecord, resultWho, requestCode, componentSpecified, voiceSession != null, this, container, options); if (outActivity != null) { outActivity[0] = r; } ... ... err = startActivityUncheckedLocked(r, sourceRecord, voiceSession, voiceInteractor, startFlags, true, options, inTask); // &#x1F3C1; ... ... return err; } Step11 ActivityStackSupervisor::startActivityUncheckedLocked(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:1828 final int startActivityUncheckedLocked(final ActivityRecord r, ActivityRecord sourceRecord, IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor, int startFlags, boolean doResume, Bundle options, TaskRecord inTask) { // r &#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6; final Intent intent = r.intent; final int callingUid = r.launchedFromUid; ... ... int launchFlags = intent.getFlags(); ... ... // &#x8BB0;&#x5F55;&#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;Activity&#x662F;&#x5426;&#x7531;&#x7528;&#x6237;&#x624B;&#x52A8;&#x542F;&#x52A8;&#x3002;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x4F1A;&#x5728;Step21&#x4E2D;&#x5411;&#x6E90; // Activity&#x5373;Launcher&#x53D1;&#x9001;&#x7528;&#x6237;&#x79BB;&#x5F00;&#x901A;&#x77E5; mUserLeaving = (launchFlags &amp; Intent.FLAG_ACTIVITY_NO_USER_ACTION) == 0; ... ... boolean addingToTask = false; ... ... boolean newTask = false; boolean keepCurTransition = false; TaskRecord taskToAffiliate = launchTaskBehind &amp;&amp; sourceRecord != null ? sourceRecord.task : null; // &#x9700;&#x8981;&#x521B;&#x5EFA;&#x65B0;&#x4EFB;&#x52A1; if (r.resultTo == null &amp;&amp; inTask == null &amp;&amp; !addingToTask &amp;&amp; (launchFlags &amp; Intent.FLAG_ACTIVITY_NEW_TASK) != 0) { newTask = true; targetStack = computeStackFocus(r, newTask); targetStack.moveToFront(&quot;startingNewTask&quot;); if (reuseTask == null) { r.setTask(targetStack.createTaskRecord(getNextTaskId(), newTaskInfo != null ? newTaskInfo : r.info, newTaskIntent != null ? newTaskIntent : intent, voiceSession, voiceInteractor, !launchTaskBehind /* toTop */), taskToAffiliate); ... ... } else { r.setTask(reuseTask, taskToAffiliate); } ... ... } else if (sourceRecord != null) { ... } else if (inTask != null) { ... } else { ... } ... ... // &#x1F3C1; targetStack.startActivityLocked(r, newTask, doResume, keepCurTransition, options); ... ... return ActivityManager.START_SUCCESS; } &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x76EE;&#x6807;Activity&#x7EC4;&#x4EF6;&#x548C;&#x6E90;&#x7EC4;&#x4EF6;&#x5E94;&#x8BE5;&#x8FD0;&#x884C;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x542F;&#x52A8;&#x6807;&#x5FD7;&#x7684;FLAG_ACTIVITY_NEW_TASK&#x7F6E;&#x4E3A;1&#xFF0C;&#x4E14;&#x6E90;&#x7EC4;&#x4EF6;&#x4E0D;&#x9700;&#x8981;&#x77E5;&#x9053;&#x76EE;&#x6807;&#x7684;&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#xFF0C;ActivityManagerService&#x5C31;&#x4F1A;&#x5C06;&#x76EE;&#x6807;&#x7EC4;&#x4EF6;&#x8FD0;&#x884C;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#x4E2D;&#x3002;&#x7EC4;&#x4EF6;&#x5C5E;&#x6027;android:taskAffinity&#x63CF;&#x8FF0;&#x5B83;&#x7684;&#x4E13;&#x5C5E;&#x4EFB;&#x52A1;&#xFF0C;&#x5F53;ActivityManagerService&#x51B3;&#x5B9A;&#x8981;&#x5C06;&#x76EE;&#x6807;&#x7EC4;&#x4EF6;&#x8FD0;&#x884C;&#x5728;&#x4E0D;&#x540C;&#x4EFB;&#x52A1;&#x4E2D;&#x65F6;&#xFF0C;ActivityManagerService&#x5C31;&#x4F1A;&#x68C0;&#x67E5;&#x76EE;&#x6807;&#x7EC4;&#x5EFA;&#x7684;&#x4E13;&#x5C5E;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5C31;&#x5728;&#x8BE5;&#x4E13;&#x5C5E;&#x4EFB;&#x52A1;&#x4E2D;&#x8FD0;&#x884C;&#xFF0C;&#x5426;&#x5219;&#x5148;&#x521B;&#x5EFA;&#x8BE5;&#x4E13;&#x5C5E;&#x4EFB;&#x52A1;&#x3002; targetStack&#x7684;&#x7C7B;&#x578B;&#x4E3A;ActivityStack&#x3002; # Step12 ActivityStack::startActivityLocked(...) 123456789101112131415161718192021222324// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:2074 final void startActivityLocked(ActivityRecord r, boolean newTask, boolean doResume, boolean keepCurTransition, Bundle options) { TaskRecord rTask = r.task; final int taskId = rTask.taskId; // &#x5C06;&#x76EE;&#x6807;Activity&#x4FDD;&#x5B58;&#x5230;&#x7EC4;&#x4EF6;&#x5806;&#x6808;&#x9876;&#x7AEF; if (!r.mLaunchTaskBehind &amp;&amp; (taskForIdLocked(taskId) == null || newTask)) { // Last activity in task had been removed or ActivityManagerService is reusing task. // Insert or replace. // Might not even be in. insertTaskAtTop(rTask, r); mWindowManager.moveTaskToTop(taskId); } ... ... task = r.task; ... ... task.addActivityToTop(r); task.setFrontOfTask(); ... ... if (doResume) { // &#x5C06;&#x7EC4;&#x4EF6;&#x5806;&#x6808;&#x9876;&#x7AEF;&#x7684;&#x7EC4;&#x4EF6;&#x6FC0;&#x6D3B; mStackSupervisor.resumeTopActivitiesLocked(this, r, options); } } mStackSupervisor&#x7684;&#x7C7B;&#x578B;&#x4E3A;ActivityStackSupervisor&#x3002; # Step13 ActivityStackSupervisor::resumeTopActivitiesLocked(...) 123456789101112131415161718192021222324252627// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:2727 boolean resumeTopActivitiesLocked(ActivityStack targetStack, ActivityRecord target, Bundle targetOptions) { if (targetStack == null) { targetStack = mFocusedStack; } // Do targetStack first. boolean result = false; if (isFrontStack(targetStack)) { result = targetStack.resumeTopActivityLocked(target, targetOptions); } for (int displayNdx = mActivityDisplays.size() - 1; displayNdx &gt;= 0; --displayNdx) { final ArrayList&lt;ActivityStack&gt; stacks = mActivityDisplays.valueAt(displayNdx).mStacks; for (int stackNdx = stacks.size() - 1; stackNdx &gt;= 0; --stackNdx) { final ActivityStack stack = stacks.get(stackNdx); if (stack == targetStack) { // Already started above. continue; } if (isFrontStack(stack)) { stack.resumeTopActivityLocked(null); } } } return result; } Step14 ActivityStack::resumeTopActivityLocked(...) 123456789// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:1540 final boolean resumeTopActivityLocked(ActivityRecord prev, Bundle options) { ... ... boolean result = false; ... ... result = resumeTopActivityInnerLocked(prev, options); ... ... return result; } Step15 ActivityStack::resumeTopActivityInnerLocked(...) 123456789101112131415161718192021222324252627282930// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:1561 private boolean resumeTopActivityInnerLocked(ActivityRecord prev, Bundle options) { ... ... // &#x53D6;&#x5F97;&#x5806;&#x6808;&#x9876;&#x7AEF;&#x7684;Activity&#x7EC4;&#x4EF6; final ActivityRecord next = topRunningActivityLocked(null); // Remember how we&apos;ll process this pause/resume situation, and ensure // that the state is reset however we wind up proceeding. final boolean userLeaving = mStackSupervisor.mUserLeaving; mStackSupervisor.mUserLeaving = false; ... ... // &#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;&#x7EC4;&#x4EF6;&#x4E5F;&#x662F;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x52A8;&#x7EC4;&#x4EF6;&#xFF0C;&#x5219;&#x5565;&#x4E5F;&#x4E0D;&#x505A;&#xFF0C;&#x9000;&#x51FA; if (mResumedActivity == next &amp;&amp; next.state == ActivityState.RESUMED &amp;&amp; mStackSupervisor.allResumedActivitiesComplete()) { ... ... return false; } ... ... // &#x5373;&#x5C06;&#x4F11;&#x7720; &#x4E14; &#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;&#x7EC4;&#x4EF6;&#x521A;&#x521A;&#x88AB;&#x4E2D;&#x6B62;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x9000; if (mService.isSleepingOrShuttingDown() &amp;&amp; mLastPausedActivity == next &amp;&amp; mStackSupervisor.allPausedActivitiesComplete()) { ... ... if (mResumedActivity != null) { ... ... pausing |= startPausingLocked(userLeaving, false, true, dontWaitForPause); } ... ... return true; } ActivityStack&#x4E2D;&#x4E09;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF1A; mResumedActivity&#xFF1A;&#x63CF;&#x8FF0;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6; mLastPausedActivity&#xFF1A;&#x63CF;&#x8FF0;&#x521A;&#x521A;&#x88AB;&#x7EC8;&#x6B62;&#x7684;Activity&#x7EC4;&#x4EF6; mPausingActivity&#xFF1A;&#x63CF;&#x8FF0;&#x6B63;&#x5728;&#x88AB;&#x4E2D;&#x6B62;&#x7684;Activity&#x7EC4;&#x4EF6; Step16 ActivityStack::startPausingLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839404142// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:816 final boolean startPausingLocked(boolean userLeaving, boolean uiSleeping, boolean resuming, boolean dontWait) { ... ... ActivityRecord prev = mResumedActivity; // &#x6307;&#x5411;&#x5373;&#x5C06;&#x8FDB;&#x5165;Paused&#x72B6;&#x6001;&#x7684;Launcher&#x7EC4;&#x4EF6; ... ... mResumedActivity = null; mPausingActivity = prev; mLastPausedActivity = prev; mLastNoHistoryActivity = (prev.intent.getFlags() &amp; Intent.FLAG_ACTIVITY_NO_HISTORY) != 0 || (prev.info.flags &amp; ActivityInfo.FLAG_NO_HISTORY) != 0 ? prev : null; prev.state = ActivityState.PAUSING; ... ... if (prev.app != null &amp;&amp; prev.app.thread != null) { ... ... try { ... ... // &#x1F3C1;&#x5411;Launcher&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x4E2D;&#x6B62;&#x901A;&#x77E5;&#xFF0C;&#x4EE5;&#x4FBF;Launcher&#x6709;&#x673A;&#x4F1A;&#x6267;&#x884C;&#x4FDD;&#x5B58;&#x64CD;&#x4F5C; prev.app.thread.schedulePauseActivity(prev.appToken, prev.finishing, userLeaving, prev.configChangeFlags, dontWait); } catch (Exception e) { ... } } else { ... } ... ... if (mPausingActivity != null) { ... ... if (dontWait) { ... } else { ... ... // &#x5411;ActivityManagerService&#x53D1;&#x9001;&#x7C7B;&#x578B;&#x4E3A;PAUSE_TIMEOUT_MSG&#x7684;&#x6D88;&#x606F; // &#x5E76;&#x6307;&#x5B9A;&#x8BE5;&#x6D88;&#x606F;&#x5728;PAUSE_TIMEOUT&#x6BEB;&#x79D2;&#x4E4B;&#x540E;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;Launcher&#x4E0D;&#x80FD;&#x5728; // &#x6B64;&#x65F6;&#x95F4;&#x5185;&#x518D;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x542F;&#x52A8;Activity&#x7EC4;&#x4EF6; // &#x7684;&#x901A;&#x77E5;&#xFF0C;ActivityManagerService&#x5C31;&#x4F1A;&#x8BA4;&#x4E3A;&#x5B83;&#x6CA1;&#x54CD;&#x5E94;&#x4E86;&#x3002; Message msg = mHandler.obtainMessage(PAUSE_TIMEOUT_MSG); msg.obj = prev; prev.pauseTime = SystemClock.uptimeMillis(); mHandler.sendMessageDelayed(msg, PAUSE_TIMEOUT); ... ... return true; } } else { ... } } prev&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3A;ActivityRecord&#xFF0C;&#x5B9A;&#x4E49;&#x5728;&#xFF1A; frameworks/base/services/core/java/com/android/server/am/ActivityRecord.java app&#x6210;&#x5458;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3A;ProcessRecord&#xFF0C;&#x5B9A;&#x4E49;&#x5728;&#xFF1A; frameworks/base/services/core/java/com/android/server/am/ProcessRecord.java thread&#x6210;&#x5458;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3A;ApplicationThreadProxy&#xFF0C;&#x5B9A;&#x4E49;&#x5728;&#xFF1A; frameworks/base/core/java/android/app/ApplicationThreadNative.java Setp17 ApplicationThreadProxy::schedulePauseActivity(...) 1234567891011121314151617// frameworks/base/core/java/android/app/ApplicationThreadNative.java:707class ApplicationThreadProxy implements IApplicationThread { ... ... // :718 public final void schedulePauseActivity(IBinder token, boolean finished, boolean userLeaving, int configChanges, boolean dontReport) throws RemoteException { Parcel data = Parcel.obtain(); data.writeInterfaceToken(IApplicationThread.descriptor); data.writeStrongBinder(token); data.writeInt(finished ? 1 : 0); data.writeInt(userLeaving ? 1 :0); data.writeInt(configChanges); data.writeInt(dontReport ? 1 : 0); mRemote.transact(SCHEDULE_PAUSE_ACTIVITY_TRANSACTION, data, null, IBinder.FLAG_ONEWAY); data.recycle(); } &#x5B83;&#x5411;Launcher&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;SCHEDULE_PAUSE_ACTIVITY_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002; &#x4EE5;&#x4E0A;&#x7684;&#x64CD;&#x4F5C;&#x5728;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x53C8;&#x8F6C;&#x5165;&#x5230;Launcher&#x4E2D;&#x6267;&#x884C;&#x3002;]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Activity启动过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Activity启动过程学习笔记（二）]]></title>
    <url>%2F2016%2F10%2F27%2F2016%2F1027ActivityStarting2%2F</url>
    <content type="text"><![CDATA[&#x6536;&#x5230;&#x6765;&#x81EA;ActivityManagerService&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;SCHEDULE_PAUSE_ACTIVITY_TRANSACTION&#x540E;&#xFF0C;Launcher&#x901A;&#x8FC7;ApplicationThread::schedulePauseActivity(...)&#x6765;&#x6267;&#x884C;&#x5904;&#x7406;&#x64CD;&#x4F5C;&#xFF1A; # Step18 ApplicationThread::schedulePauseActivity(...) 12345678910111213141516// frameworks/base/core/java/android/app/ActivityThread.javapublic final class ActivityThread { ... ... private class ApplicationThread extends ApplicationThreadNative { ... ...// :588 public final void schedulePauseActivity(IBinder token, boolean finished, boolean userLeaving, int configChanges, boolean dontReport) { sendMessage( finished ? H.PAUSE_ACTIVITY_FINISHING : H.PAUSE_ACTIVITY, token, (userLeaving ? 1 : 0) | (dontReport ? 2 : 0), configChanges); }... }...} &#x5176;&#x4E2D;&#x53C2;&#x6570; finished&#x4E3A;flase&#xFF1B; token&#x662F;&#x6307;&#x5411;ActivityManagerService&#x4E2D;Launcher&#x5BF9;&#x5E94;&#x7684;ActivityRecord&#x5BF9;&#x8C61;&#x7684;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF1B; userLeaving&#x4E3A;true&#x3002; &#x56E0;&#x6B64;&#xFF0C;sendMessage&#x5411;Launcher&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;PAUSE_ACTIVITY&#x6D88;&#x606F;&#x3002; # Step19 ActivityThread::sendMessage(...) 1234567891011121314151617181920// frameworks/base/core/java/android/app/ActivityThread.java:2265 private void sendMessage(int what, Object obj, int arg1, int arg2) { sendMessage(what, obj, arg1, arg2, false); } private void sendMessage(int what, Object obj, int arg1, int arg2, boolean async) { ... ... Message msg = Message.obtain(); msg.what = what; msg.obj = obj; msg.arg1 = arg1; msg.arg2 = arg2; if (async) { msg.setAsynchronous(true); } // mH&#x7528;&#x6765;&#x5904;&#x7406;&#x8FDB;&#x7A0B;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#xFF0C;&#x7C7B;&#x578B;&#x4E3A;H&#xFF0C;&#x7EE7;&#x627F;&#x81EA;Handle&#x3002;sendMessage&#x5411;&#x4E3B;&#x7EBF;&#x7A0B;&#x6D88;&#x606F;&#x961F;&#x5217; // &#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#xFF0C;&#x8BE5;&#x6D88;&#x606F;&#x6700;&#x7EC8;&#x7531;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E3B;&#x7EBF;&#x7A0B;&#x7684;handleMessage&#x5904;&#x7406;&#x3002;&#x6B64;&#x5904;&#x53D1;&#x9001;&#x7684;&#x6D88;&#x606F;&#x5C06;&#x5728; // Launcher&#x4E2D;&#x6267;&#x884C;&#x4E2D;&#x6B62;Launcher&#x7EC4;&#x5EFA;&#x7684;&#x64CD;&#x4F5C; mH.sendMessage(msg); } Step20 ActivityThread::handleMessage(...) 123456789101112131415// frameworks/base/core/java/android/app/ActivityThread.java:1335 public void handleMessage(Message msg) { ... ... switch (msg.what) { ... ... case PAUSE_ACTIVITY: ... ... handlePauseActivity((IBinder)msg.obj, false, (msg.arg1&amp;1) != 0, msg.arg2, (msg.arg1&amp;2) != 0); ... ... break; ... ... } ... } Step21 ActivityThread::handlePauseActivity(...) 12345678910111213141516171819202122232425262728// frameworks/base/core/java/android/app/ActivityThread.java:3305 private void handlePauseActivity(IBinder token, boolean finished, boolean userLeaving, int configChanges, boolean dontReport) { ActivityClientRecord r = mActivities.get(token); // &#x627E;&#x5230;Launcher&#x7684;ActivityRecord&#x5BF9;&#x8C61; if (r != null) { ... ... if (userLeaving) { performUserLeavingActivity(r); // &#x5411;Launcher&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x79BB;&#x5F00;&#x4E8B;&#x4EF6;&#x901A;&#x77E5; } r.activity.mConfigChangeFlags |= configChanges; // &#x5411;Launcher&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x4E2D;&#x6B62;&#x4E8B;&#x4EF6;&#x901A;&#x77E5; performPauseActivity(token, finished, r.isPreHoneycomb()); // &#x7B49;&#x5F85;&#x5B8C;&#x6210;&#x524D;&#x9762;Launcher&#x4E2D;&#x6B62;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x5B8C;&#x6210; if (r.isPreHoneycomb()) { QueuedWork.waitToFinish(); } // &#x1F3C1;&#x901A;&#x77E5;ActivityManagerService&#xFF0C;Launcher&#x7EC4;&#x4EF6;&#x5DF2;&#x7ECF;&#x8FDB;&#x5165;Paused&#x72B6;&#x6001; if (!dontReport) { try { // getDefault()&#x8FD4;&#x56DE;ActivityManagerService&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; ActivityManagerNative.getDefault().activityPaused(token); } catch (RemoteException ex) {} } mSomeActivitiesChanged = true; } } Step22 ActivityManagerProxy::activityPaused(...) 123456789101112// frameworks/base/core/java/android/app/ActivityManagerNative.java:3134 public void activityPaused(IBinder token) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(token); mRemote.transact(ACTIVITY_PAUSED_TRANSACTION, data, reply, 0); reply.readException(); data.recycle(); reply.recycle(); } &#x6B64;&#x5904;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x7C7B;&#x578B;&#x4E3A;ACTIVITY_PAUSED_TRANSACTION&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002; &#x4EE5;&#x4E0A;Step18~Step22&#x5728;Launcher&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x53C8;&#x8F6C;&#x5165;ActivityManagerService&#x6267;&#x884C;&#x3002; # Step23 ActivityManagerService::activityPaused(...) 123456789// frameworks/base/service/core/java/com/android/server/am/ActivityManagerService.java:6498 public final void activityPaused(IBinder token) { ... ... ActivityStack stack = ActivityRecord.getStackLocked(token); if (stack != null) { stack.activityPausedLocked(token, false); } ... ... } Step24 ActivityStack::activityPausedLocked(...) 1234567891011121314// frameworks/base/service/core/java/com/android/server/am/ActivityStack.java:928 final void activityPausedLocked(IBinder token, boolean timeout) { ... ... // &#x6839;&#x636E;token&#x627E;&#x5230;Launcher&#x5BF9;&#x5E94;&#x7684;ActivityRecord&#x5BF9;&#x8C61; final ActivityRecord r = isInStackLocked(token); if (r != null) { // Launcher&#x5DF2;&#x7ECF;&#x5728;&#x89C4;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x4E2D;&#x6B62;&#x901A;&#x77E5;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x6D88;&#x606F;&#x4E86; mHandler.removeMessages(PAUSE_TIMEOUT_MSG, r); if (mPausingActivity == r) { // &#x524D;&#x9762;&#x5DF2;&#x7ECF;&#x5C06;mPausingActivity&#x6307;&#x5411;Launcher ... ... completePauseLocked(true); // &#x1F3C1; &#x542F;&#x52A8;&#x65B0;&#x7EC4;&#x4EF6; } else { ... } } } Step25 ActivityStack::completePauseLocked(...) 12345678910111213141516171819// frameworks/base/service/core/java/com/android/server/am/ActivityStack.java:994 private void completePauseLocked(boolean resumeNext) { ActivityRecord prev = mPausingActivity; ... ... if (prev != null) { prev.state = ActivityState.PAUSED; ... ... mPausingActivity = null; // &#x7CFB;&#x7EDF;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x4E2D;&#x6B62;&#x7684;Activity&#x5DF2;&#x7ECF;&#x8FDB;&#x5165;Paused&#x72B6;&#x6001; } if (resumeNext) { final ActivityStack topStack = mStackSupervisor.getFocusedStack(); //&#x7CFB;&#x7EDF;&#x4E0D;&#x662F;&#x6B63;&#x8FDB;&#x5165;&#x4F11;&#x7720;&#x6216;&#x5173;&#x95ED;&#x72B6;&#x6001;&#xFF0C;&#x5219;&#x542F;&#x52A8;&#x4F4D;&#x4E8E;&#x7EC4;&#x4EF6;&#x5806;&#x6808;&#x9876;&#x7AEF;&#x7684;Activity if (!mService.isSleepingOrShuttingDown()) { mStackSupervisor.resumeTopActivitiesLocked(topStack, prev, null); } else { ... } } ... ... } Step26 ActivityStackSupervisor::resumeTopActivitiesLocked(...) 12345678910111213141516171819// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:2727 boolean resumeTopActivitiesLocked(ActivityStack targetStack, ActivityRecord target, Bundle targetOptions) { ... ... for (int displayNdx = mActivityDisplays.size() - 1; displayNdx &gt;= 0; --displayNdx) { final ArrayList&lt;ActivityStack&gt; stacks = mActivityDisplays.valueAt(displayNdx).mStacks; for (int stackNdx = stacks.size() - 1; stackNdx &gt;= 0; --stackNdx) { final ActivityStack stack = stacks.get(stackNdx); if (stack == targetStack) { // Already started above. continue; } if (isFrontStack(stack)) { stack.resumeTopActivityLocked(null); // &#x1F3C1; } } } return result; } Step27 ActivityStack::resumeTopActivityLocked(...) 123456789101112131415161718192021// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:1536 final boolean resumeTopActivityLocked(ActivityRecord prev) { return resumeTopActivityLocked(prev, null); } final boolean resumeTopActivityLocked(ActivityRecord prev, Bundle options) { ... ... boolean result = false; try { // Protect against recursion. mStackSupervisor.inResumeTopActivity = true; if (mService.mLockScreenShown == ActivityManagerService.LOCK_SCREEN_LEAVING) { mService.mLockScreenShown = ActivityManagerService.LOCK_SCREEN_HIDDEN; mService.updateSleepIfNeededLocked(); } result = resumeTopActivityInnerLocked(prev, options); // &#x1F3C1; } finally { mStackSupervisor.inResumeTopActivity = false; } return result; } Step28 ActivityStack::resumeTopActivityInnerLocked(...) 12345678910111213141516171819202122232425// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:1561 private boolean resumeTopActivityInnerLocked(ActivityRecord prev, Bundle options) { ... ... // Find the first activity that is not finishing. final ActivityRecord next = topRunningActivityLocked(null); ... ... // &#x524D;&#x9762;ActivityManagerServer&#x5DF2;&#x7ECF;&#x8C03;&#x7528;&#x8FC7;resumeTopActivityLocked&#x8BD5;&#x56FE;&#x542F;&#x52A8; // Activity&#x7EC4;&#x4EF6;&#x4E86;&#xFF0C;&#x4F46;&#x7531;&#x4E8E;&#x90A3;&#x65F6;&#x5019;Launcher&#x5C1A;&#x672A;&#x8FDB;&#x5165;Paused&#x72B6;&#x6001;&#xFF0C;&#x5C31;&#x5148;&#x8C03;&#x7528; // startPausingLocke&#x6267;&#x884C;&#x4E2D;&#x6B62;Launcher&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x5728;&#x5411;Launcher&#x53D1;&#x9001;&#x4E2D;&#x6B62;&#x901A;&#x77E5;&#x524D;&#xFF0C; // &#x5DF2;&#x7ECF;&#x5C06;mResumedActivity&#x7F6E;null&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x6B64;&#x5904;&#x4E3A;false if (mResumedActivity != null) { ... ... pausing |= startPausingLocked(userLeaving, false, true, dontWaitForPause); } ... ... // &#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6;&#x5C1A;&#x672A;&#x88AB;&#x542F;&#x52A8;&#x8D77;&#x6765;&#xFF0C;&#x56E0;&#x6B64;app&#x4E3A;null if (next.app != null &amp;&amp; next.app.thread != null) { ... } else { ... ... // &#x1F3C1;&#x542F;&#x52A8;next mStackSupervisor.startSpecificActivityLocked(next, true, true); } ... ... return true; } Step29 ActivityStackSupervisor::startSpecificActivityLocked(...) 1234567891011121314151617181920// frameworks/base/services/core/java/com/android/server/am/ActivityStack.java:1365 void startSpecificActivityLocked(ActivityRecord r, boolean andResume, boolean checkConfig) { // &#x83B7;&#x5F97;r&#x5BF9;&#x5E94;&#x7684;Activity&#x6240;&#x5728;&#x7684;&#x8FDB;&#x7A0B; ProcessRecord app = mService.getProcessRecordLocked(r.processName, r.info.applicationInfo.uid, true); ... ... if (app != null &amp;&amp; app.thread != null) { try { ... ... // &#x5982;&#x679C;&#x8FDB;&#x7A0B;&#x5DF2;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x901A;&#x77E5;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x7EC4;&#x4EF6; realStartActivityLocked(r, app, andResume, checkConfig); return; } catch (RemoteException e) { ... } ... } // &#x5426;&#x5219;&#x5148;&#x5C06;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x8D77;&#x6765; mService.startProcessLocked(r.processName, r.info.applicationInfo, true, 0, &quot;activity&quot;, r.intent.getComponent(), false, false, true); } mService&#x7684;&#x7C7B;&#x578B;&#x4E3A;ActivityManagerService&#x3002; Step30 ActivityManagerService::startProcessLocked(...) 123456789101112131415161718192021222324252627282930313233343536// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:3106 final ProcessRecord startProcessLocked(String processName, ApplicationInfo info, boolean knownToBeDead, int intentFlags, String hostingType, ComponentName hostingName, boolean allowWhileBooting, boolean isolated, boolean keepIfLarge) { // isolated=false return startProcessLocked(processName, info, knownToBeDead, intentFlags, hostingType, hostingName, allowWhileBooting, isolated, 0 /* isolatedUid */, keepIfLarge, null /* ABI override */, null /* entryPoint */, null /* entryPointArgs */, null /* crashHandler */); // &#x1F3C1; }// :3116 final ProcessRecord startProcessLocked(String processName, ApplicationInfo info, boolean knownToBeDead, int intentFlags, String hostingType, ComponentName hostingName, boolean allowWhileBooting, boolean isolated, int isolatedUid, boolean keepIfLarge, String abiOverride, String entryPoint, String[] entryPointArgs, Runnable crashHandler) { long startTime = SystemClock.elapsedRealtime(); ProcessRecord app; if (!isolated) { // isolated=false app = getProcessRecordLocked(processName, info.uid, keepIfLarge); ... ... } else {...} ... ... String hostingNameStr = hostingName != null ? hostingName.flattenToShortString() : null; if (app == null) { ... ... // &#x5982;&#x679C;&#x8BF7;&#x6C42;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x6839;&#x636E;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x548C;UID&#x521B;&#x5EFA;ProcessRecord&#x5BF9;&#x8C61; app = newProcessRecordLocked(info, processName, isolated, isolatedUid); ... ... } else { ... } ... ... // &#x1F3C1;&#x521B;&#x5EFA;&#x8FDB;&#x7A0B; startProcessLocked( app, hostingType, hostingNameStr, abiOverride, entryPoint, entryPointArgs); ... ... return (app.pid != 0) ? app : null; } Step30.1 ActivityManagerService::startProcessLocked(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:3247 private final void startProcessLocked(ProcessRecord app, String hostingType, String hostingNameStr, String abiOverride, String entryPoint, String[] entryPointArgs) { ... ... try { ... ... int uid = app.uid; int[] gids = null; ... ... if (!app.isolated) { int[] permGids = null; try { ... ... // &#x83B7;&#x53D6;&#x8981;&#x521B;&#x5EFA;&#x8FDB;&#x7A0B;&#x7684;uid&#x548C;gid final IPackageManager pm = AppGlobals.getPackageManager(); permGids = pm.getPackageGids(app.info.packageName, app.userId); ... ... } catch (RemoteException e) { ... } ... ... } ... ... int debugFlags = 0; ... ... app.gids = gids; app.requiredAbi = requiredAbi; app.instructionSet = instructionSet; ... ... // &#x6307;&#x5B9A;&#x51FD;&#x6570;&#x5165;&#x53E3;&#x4E3A;entryPoint&#x7684;main&#x51FD;&#x6570; if (entryPoint == null) entryPoint = &quot;android.app.ActivityThread&quot;; ... ... Process.ProcessStartResult startResult = Process.start(entryPoint, app.processName, uid, uid, gids, debugFlags, mountExternal, app.info.targetSdkVersion, app.info.seinfo, requiredAbi, instructionSet, app.info.dataDir, entryPointArgs); ... ... // &#x4EE5;pid&#x4E3A;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5C06;app&#x4FDD;&#x5B58;&#x5230;mPidsSelfLocked&#x4E2D; this.mPidsSelfLocked.put(startResult.pid, app); if (isActivityProcess) { // &#x5411;ActivityManagerService&#x53D1;&#x9001;&#x6B64;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x5236;&#x5B9A;&#x8BE5;&#x6D88;&#x606F;&#x5728; // PROC_START_TIMEOUT&#x6BEB;&#x79D2;&#x540E;&#x5904;&#x7406;&#x3002;&#x65B0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5FC5;&#x987B;&#x5728;&#x6B21;&#x65F6;&#x95F4;&#x5185;&#x5B8C;&#x6210;&#x542F; // &#x52A8;&#x5DE5;&#x4F5C;&#xFF0C;&#x5E76;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x542F;&#x52A8;&#x5B8C;&#x6210;&#x7684;&#x901A;&#x77E5;&#xFF0C;&#x4EE5;&#x4FBF; // ActivityManagerService&#x5728;&#x5B83;&#x91CC;&#x9762;&#x542F;&#x52A8;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6;&#xFF1B;&#x5426;&#x5219;&#x5C31;&#x4F1A; // &#x8BA4;&#x4E3A;&#x5B83;&#x8D85;&#x65F6;&#x4E86;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x5C06;Activity&#x542F;&#x52A8;&#x8D77;&#x6765;&#x3002; Message msg = mHandler.obtainMessage(PROC_START_TIMEOUT_MSG); msg.obj = app; mHandler.sendMessageDelayed(msg, startResult.usingWrapper ? PROC_START_TIMEOUT_WITH_WRAPPER : PROC_START_TIMEOUT); } ... ... } catch (RuntimeException e) {...} } &#x4EE5;&#x4E0A;Step23~Step30.1&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x5728;AvtivityManagerService&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x8C03;&#x7528;Process::start(...)&#x542F;&#x52A8;&#x65B0;&#x8FDB;&#x7A0B;&#x65F6;&#xFF0C;&#x6307;&#x5B9A;&#x8BE5;&#x8FDB;&#x7A0B;&#x7684;&#x5165;&#x53E3;&#x51FD;&#x6570;&#x4E3A;android.app.ActivityThread&#x7C7B;&#x7684;&#x9759;&#x6001;&#x6210;&#x5458;&#x51FD;&#x6570;main&#xFF0C;&#x56E0;&#x6B64;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4ECE;&#x65B0;&#x5E94;&#x7528;&#x7684;main&#x51FD;&#x6570;&#x5F00;&#x59CB;&#x5206;&#x6790;&#x5176;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x3002; # Step31 ActivityThread::main(...) 12345678910111213// frameworks/base/core/java/android/app/ActivityThread.java:5379 public static void main(String[] args) { ... ... Looper.prepareMainLooper(); // &#x521B;&#x5EFA;thread&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x4F1A;&#x5728;&#x5B83;&#x5185;&#x90E8;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;ApplicationThread&#x5BF9;&#x8C61;mAppThread // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;Binder&#x672C;&#x5730;&#x5BF9;&#x8C61;&#xFF0C;ActivityManagerService&#x901A;&#x8FC7;&#x5B83;&#x548C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1; ActivityThread thread = new ActivityThread(); thread.attach(false); // &#x53D1;&#x9001;&#x542F;&#x52A8;&#x5B8C;&#x6210;&#x901A;&#x77E5; ... ... Looper.loop(); // &#x8FDB;&#x5165;&#x6D88;&#x606F;&#x5FAA;&#x73AF; ... ... } Step32 ActivityThread::attach(...) 12345678910111213141516// frameworks/base/core/java/android/app/ActivityThread.java:5230 private void attach(boolean system) { sCurrentActivityThread = this; mSystemThread = system; if (!system) { ... ... // &#x83B7;&#x5F97;ActivityManagerService&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; final IActivityManager mgr = ActivityManagerNative.getDefault(); try { // &#x1F3C1;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;&#x628A;mAppThread&#x4F20;&#x9012;&#x7ED9;&#x5B83; mgr.attachApplication(mAppThread); } catch (RemoteException ex) {...} ... ... } else { ... } ... ... } mAppThread&#x7684;&#x7C7B;&#x578B;&#x4E3A;ApplicationThread&#xFF0C; # Step33 ActivityManagerProxy::attachApplication(...) 123456789101112// frameworks/base/core/java/android/app/ActivityManagerNative.java:3093 public void attachApplication(IApplicationThread app) throws RemoteException { Parcel data = Parcel.obtain(); Parcel reply = Parcel.obtain(); data.writeInterfaceToken(IActivityManager.descriptor); data.writeStrongBinder(app.asBinder()); mRemote.transact(ATTACH_APPLICATION_TRANSACTION, data, reply, 0); reply.readException(); data.recycle(); reply.recycle(); } &#x6B64;&#x5904;&#x5411;ActivityManagerService&#x53D1;&#x9001;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;Step31~Step33&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x5728;&#x65B0;&#x8FDB;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x8F6C;&#x5165;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#x3002; # Step34 ActivityManagerService::attachApplication(...) 12345678// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:6246 public final void attachApplication(IApplicationThread thread) { synchronized (this) { ... ... attachApplicationLocked(thread, callingPid); ... ... } } Step35 ActivityManagerService::attachApplicationLocked(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243// frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java:6016 private final boolean attachApplicationLocked(IApplicationThread thread, int pid) { // pid&#x4E3A;&#x5C06;&#x8981;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;PID&#xFF0C;&#x524D;&#x9762;&#x66FE;&#x4EE5;&#x6B64;&#x4E3A;&#x5173;&#x952E;&#x5B57;&#x5C06;ProcessRecord&#x4FDD;&#x5B58;&#x5230; // mPidSelfLocked&#x4E2D;&#xFF0C;&#x6B64;&#x5904;&#x5148;&#x6839;&#x636E;pid&#x5C06;&#x5B83;&#x53D6;&#x51FA; ... ... ProcessRecord app; if (pid != MY_PID &amp;&amp; pid &gt;= 0) { synchronized (mPidsSelfLocked) { app = mPidsSelfLocked.get(pid); } } else { ... } ... ... // &#x8FDB;&#x7A0B;&#x5DF2;&#x7ECF;&#x8D77;&#x6765;&#xFF0C;&#x5BF9;app&#x505A;&#x521D;&#x59CB;&#x5316; // thread&#x6307;&#x5411;ApplicationThread&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x4FBF;ActivityManagerService&#x901A;&#x8FC7;&#x6B64;&#x5BF9;&#x8C61; // &#x548C;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1; app.makeActive(thread, mProcessStats); app.curAdj = app.setAdj = -100; app.curSchedGroup = app.setSchedGroup = Process.THREAD_GROUP_DEFAULT; app.forcingToForeground = null; updateProcessForegroundLocked(app, false, false); app.hasShownUi = false; app.debugging = false; app.cached = false; app.killedByAm = false; // &#x5220;&#x9664;&#x6B64;&#x6D88;&#x606F;&#xFF0C;&#x56E0;&#x4E3A;&#x65B0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5DF2;&#x7ECF;&#x5728;&#x89C4;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x4E86; mHandler.removeMessages(PROC_START_TIMEOUT_MSG, app); boolean normalMode = mProcessesReady || isAllowedWhileBooting(app.info); List&lt;ProviderInfo&gt; providers = normalMode ? generateApplicationProvidersLocked(app) : null; ... ... // See if the top visible activity is waiting to run in this process... if (normalMode) { try { // &#x1F3C1;&#x8BF7;&#x6C42;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6; if (mStackSupervisor.attachApplicationLocked(app)) { didSomething = true; } } catch (Exception e) { ... } } ... ... return true; } Step36 ActivityStackSupervisor::attachApplicationLocked(...) 1234567891011121314151617181920212223242526272829// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:610 boolean attachApplicationLocked(ProcessRecord app) throws RemoteException { final String processName = app.processName; boolean didSomething = false; for (int displayNdx = mActivityDisplays.size() - 1; displayNdx &gt;= 0; --displayNdx) { ArrayList&lt;ActivityStack&gt; stacks = mActivityDisplays.valueAt(displayNdx).mStacks; for (int stackNdx = stacks.size() - 1; stackNdx &gt;= 0; --stackNdx) { final ActivityStack stack = stacks.get(stackNdx); if (!isFrontStack(stack)) { continue; } // &#x5F97;&#x5230;&#x6808;&#x9876;ActivityRecord&#x5BF9;&#x8C61; ActivityRecord hr = stack.topRunningActivityLocked(null); if (hr != null) { if (hr.app == null &amp;&amp; app.uid == hr.info.applicationInfo.uid &amp;&amp; processName.equals(hr.processName)) { try { // &#x1F3C1; if (realStartActivityLocked(hr, app, true, true)) { didSomething = true; } } catch (RemoteException e) { ... } } } } } ... ... return didSomething; } Step37 ActivityStackSupervisor::realStartActivityLocked(...) 123456789101112131415161718192021222324252627282930313233// frameworks/base/services/core/java/com/android/server/am/ActivityStackSupervisor.java:1179 final boolean realStartActivityLocked(ActivityRecord r, ProcessRecord app, boolean andResume, boolean checkConfig) throws RemoteException { ... ... r.app = app; // &#x5373;&#x5C06;&#x542F;&#x52A8;&#x7684;&#x8FDB;&#x7A0B; ... ... int idx = app.activities.indexOf(r); if (idx &lt; 0) { app.activities.add(r); // &#x5C06;&#x6B64;Activity&#x6DFB;&#x52A0;&#x5230;app&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x8FDB;&#x7A0B;&#x7EC4;&#x4EF6;&#x5217;&#x8868;&#x4E2D; } ... ... final ActivityStack stack = task.stack; try { ... ... List&lt;ResultInfo&gt; results = null; List&lt;ReferrerIntent&gt; newIntents = null; if (andResume) { results = r.results; newIntents = r.newIntents; } ... ... // &#x901A;&#x77E5;&#x524D;&#x9762;&#x521B;&#x5EFA;&#x7684;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x6709;r&#x6240;&#x63CF;&#x8FF0;&#x7684;Activity&#x7EC4;&#x4EF6; app.thread.scheduleLaunchActivity(new Intent(r.intent), r.appToken, System.identityHashCode(r), r.info, new Configuration(mService.mConfiguration), new Configuration(stack.mOverrideConfig), r.compat, r.launchedFromPackage, task.voiceInteractor, app.repProcState, r.icicle, r.persistentState, results, newIntents, !andResume, mService.isNextTransitionForward(), profilerInfo); ... ... } catch (RemoteException e) { ... } ... ... return true; } app.thread&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;ApplicationThreadProxy&#x7684;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x3002; # Step38 ApplicationThreadProxy::scheduleLaunchActivity(...) 1234567891011121314151617// frameworks/base/core/java/android/app/ApplicationThreadNative.java:791 public final void scheduleLaunchActivity(Intent intent, IBinder token, int ident, ActivityInfo info, Configuration curConfig, Configuration overrideConfig, CompatibilityInfo compatInfo, String referrer, IVoiceInteractor voiceInteractor, int procState, Bundle state, PersistableBundle persistentState, List&lt;ResultInfo&gt; pendingResults, List&lt;ReferrerIntent&gt; pendingNewIntents, boolean notResumed, boolean isForward, ProfilerInfo profilerInfo) throws RemoteException { Parcel data = Parcel.obtain(); data.writeInterfaceToken(IApplicationThread.descriptor); intent.writeToParcel(data, 0); data.writeStrongBinder(token); data.writeInt(ident); ... ... mRemote.transact(SCHEDULE_LAUNCH_ACTIVITY_TRANSACTION, data, null, IBinder.FLAG_ONEWAY); data.recycle(); } &#x6B64;&#x5904;&#x5411;&#x521A;&#x521A;&#x521B;&#x5EFA;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002;&#x4EE5;&#x4E0A;Step34~Step38&#x662F;&#x5728;ActivityManagerService&#x4E2D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x53C8;&#x8F6C;&#x5230;&#x521A;&#x521A;&#x521B;&#x5EFA;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x6267;&#x884C;&#x3002; # Step39 ActivityThread::scheduleLaunchActivity(...) 123456789101112131415161718// frameworks/base/core/java/android/app/ActivityThread.java:630 public final void scheduleLaunchActivity(Intent intent, IBinder token, int ident, ActivityInfo info, Configuration curConfig, Configuration overrideConfig, CompatibilityInfo compatInfo, String referrer, IVoiceInteractor voiceInteractor, int procState, Bundle state, PersistableBundle persistentState, List&lt;ResultInfo&gt; pendingResults, List&lt;ReferrerIntent&gt; pendingNewIntents, boolean notResumed, boolean isForward, ProfilerInfo profilerInfo) { updateProcessState(procState, false); ActivityClientRecord r = new ActivityClientRecord(); r.token = token; r.ident = ident; r.intent = intent; ... ... sendMessage(H.LAUNCH_ACTIVITY, r); // &#x1F3C1; } &#x6B64;&#x5904;&#x628A;&#x5C06;&#x8981;&#x542F;&#x52A8;&#x7684;Activity&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;ActivityClientRecord&#x5BF9;&#x8C61;&#xFF0C;&#x518D;&#x5C06;&#x6B64;&#x5BF9;&#x8C61;&#x901A;&#x8FC7;sendMessage&#x53D1;&#x9001;&#x5230;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x56DE;&#x987E;Step19&#xFF0C;&#x8BE5;&#x6D88;&#x606F;&#x6700;&#x7EC8;&#x843D;&#x5230;ActivityThread::handleMessage(...)&#x4E2D;&#x5904;&#x7406;&#x3002; # Step40 ActivityThread::handleMessage(...) 1234567891011121314151617181920// frameworks/base/core/java/android/app/ActivityThread.java:1335 public void handleMessage(Message msg) { ... ... switch (msg.what) { case LAUNCH_ACTIVITY: { ... ... final ActivityClientRecord r = (ActivityClientRecord) msg.obj; // &#x6BCF;&#x4E2A;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x90FD;&#x6253;&#x5305;&#x5728;&#x4E00;&#x4E2A;Apk&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;Apk&#x6587;&#x4EF6;&#x5305;&#x542B;&#x6B64;&#x5E94;&#x7528; // &#x7684;&#x6240;&#x6709;&#x8D44;&#x6E90;&#xFF0C;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x5728;&#x542F;&#x52A8;&#x4E00;&#x4E2A;Activity&#x7EC4;&#x4EF6;&#x65F6;&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x5B83;&#x6240;&#x5C5E;&#x7684;Apk // &#x6587;&#x4EF6;&#x4EE5;&#x4FBF;&#x8BBF;&#x95EE;&#x91CC;&#x9762;&#x7684;&#x8D44;&#x6E90;&#x3002;packageInfo&#x5C31;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5DF2;&#x52A0;&#x8F7D;&#x7684;Apk&#x6587;&#x4EF6;&#xFF0C; // &#x5176;&#x7C7B;&#x578B;&#x4E3A;LoadedApk r.packageInfo = getPackageInfoNoCheck( r.activityInfo.applicationInfo, r.compatInfo); handleLaunchActivity(r, null); // &#x1F3C1;&#x542F;&#x52A8;&#x7531;r&#x6307;&#x5B9A;&#x7684;Activity&#x7EC4;&#x4EF6; ... ... } break; ... }... } Step41 ActivityThread::handleLaunchActivity(...) 123456789101112131415// frameworks/base/core/java/android/app/ActivityThread.java:2456``` java private void handleLaunchActivity(ActivityClientRecord r, Intent customIntent) { ... ... // &#x1F3C1;&#x5C06;Activity&#x7EC4;&#x4EF6;&#x542F;&#x52A8;&#x8D77;&#x6765; Activity a = performLaunchActivity(r, customIntent); if (a != null) { r.createdConfig = new Configuration(mConfiguration); Bundle oldState = r.state; // &#x5C06;Activity&#x7EC4;&#x4EF6;&#x7684;&#x72B6;&#x6001;&#x8BBE;&#x4E3A;Resumed&#xFF0C;&#x8868;&#x793A;&#x5B83;&#x662F;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x52A8;Activity handleResumeActivity(r.token, false, r.isForward, !r.activity.mFinished &amp;&amp; !r.startsNotResumed); ... ... } else { ... } } Step42 ActivityThread::performLaunchActivity(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546// frameworks/base/core/java/android/app/ActivityThread.java:2293 private Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) { ... ... // &#x8981;&#x542F;&#x52A8;&#x7684;Activity&#x5305;&#x540D;&#x3001;&#x7C7B;&#x540D; ComponentName component = r.intent.getComponent(); ... ... Activity activity = null; try { // &#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x5E76;&#x521B;&#x5EFA;Activity&#x5B9E;&#x4F8B; java.lang.ClassLoader cl = r.packageInfo.getClassLoader(); activity = mInstrumentation.newActivity( cl, component.getClassName(), r.intent); ... ... } catch (Exception e) { ... } try { Application app = r.packageInfo.makeApplication(false, mInstrumentation); ... ... if (activity != null) { // appContext&#x7528;&#x6765;&#x4F5C;&#x4E3A;&#x521A;&#x521A;&#x521B;&#x5EFA;&#x7684;Activity&#x5BF9;&#x8C61;&#x8FD0;&#x884C;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x73AF;&#x5883;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x5C31; // &#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x7279;&#x5B9A;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8D44;&#x6E90;&#xFF0C;&#x4EE5;&#x53CA;&#x542F;&#x52A8;&#x5176;&#x4ED6;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;&#x3002; Context appContext = createBaseContextForActivity(r, activity); ... ... // &#x4F7F;&#x7528;appContext&#x548C;r&#x6765;&#x521D;&#x59CB;&#x5316;Activity&#x5BF9;&#x8C61; activity.attach(appContext, this, getInstrumentation(), r.token, r.ident, app, r.intent, r.activityInfo, title, r.parent, r.embeddedID, r.lastNonConfigurationInstances, config, r.referrer, r.voiceInteractor); ... ... // &#x5C06;Activity&#x5BF9;&#x8C61;&#x542F;&#x52A8;&#x8D77;&#x6765;&#xFF0C;&#x5728;&#x6B64;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;Activity::onCreate&#x5C31;&#x4F1A;&#x88AB;&#x8C03;&#x7528; if (r.isPersistable()) { mInstrumentation.callActivityOnCreate(activity, r.state, r.persistentState); } else { mInstrumentation.callActivityOnCreate(activity, r.state); } ... ... // r.token&#x662F;&#x4E00;&#x4E2A;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x6307;&#x5411;ActivityManagerService&#x5185;&#x90E8;&#x4E00;&#x4E2A; // ActivityRecord&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x548C;ActivityClientRecord&#x5BF9;&#x8C61;r&#x4E00;&#x6837;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0; // &#x521A;&#x521A;&#x542F;&#x52A8;&#x7684;Activity&#x7EC4;&#x4EF6;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;r.token&#x662F;&#x5728;ActivityManagerService&#x4E2D;&#x4F7F; // &#x7528;&#xFF0C;&#x800C;r&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x3002; // &#x4EE5;token&#x4E3A;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5C06;r&#x4FDD;&#x5B58;&#x5230;mActivities&#x4E2D; mActivities.put(r.token, r); } catch (SuperNotCalledException e) { ... } catch (Exception e) { ... } return activity; } &#x63A5;&#x4E0B;&#x6765;&#x8C03;&#x7528;&#x6307;&#x5B9A;&#x7EC4;&#x4EF6;&#x7684;onCreate&#x51FD;&#x6570;&#xFF0C;Activity&#x7EC4;&#x4EF6;&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x3002; &#x6700;&#x540E;&#x7684;Step39~Step42&#x662F;&#x5728;&#x65B0;&#x8FDB;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Activity启动过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android App安装过程学习笔记（二）]]></title>
    <url>%2F2016%2F10%2F23%2F2016%2F1024Installer2%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x4E2D;&#xFF0C;Android&#x7CFB;&#x7EDF;&#x5728;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x89E3;&#x6790;packages.xml&#x6587;&#x4EF6;&#xFF0C;&#x52A0;&#x8F7D;&#x8BB0;&#x5F55;&#x5728;&#x5176;&#x4E2D;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x904D;&#x5386;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x5B89;&#x88C5;&#x6709;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x83B7;&#x53D6;&#x5230;&#x5B9E;&#x9645;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x3002; &#x4EE5;/system/data&#x4E3A;&#x4F8B;&#xFF0C;&#x770B;&#x4E00;&#x4E0B;&#x5176;&#x4E0B;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#xFF1A; 123456789/system/data&#x251C;&#x2500;&#x2500;BasicDreams&#x2502; &#x2514;&#x2500;&#x2500;BasicDreams.apk&#x251C;&#x2500;&#x2500;Bluetooth&#x2502; &#x251C;&#x2500;&#x2500;Bluetooth.apk&#x2502; &#x2514;&#x2500;&#x2500;lib... ...&#x2514;&#x2500;&#x2500;webview &#x2514;&#x2500;&#x2500;webview.apk &#x6BCF;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x90FD;&#x6709;&#x4E00;&#x4E2A;apk&#x6587;&#x4EF6;&#x3002; # Step9: PackageManagerService::scanDirLI(...) 12345678910111213141516// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:5624 private void scanDirLI(File dir, int parseFlags, int scanFlags, long currentTime) { final File[] files = dir.listFiles(); ... ... for (File file : files) { // &#x904D;&#x5386;dir&#x4E0B;&#x7684;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6; final boolean isPackage = (isApkFile(file) || file.isDirectory()) &amp;&amp; !PackageInstallerService.isStageName(file.getName()); if (!isPackage) { continue; } try { // &#x1F3C1;&#x7EE7;&#x7EED;&#x89E3;&#x6790;Package scanPackageLI(file, parseFlags | PackageParser.PARSE_MUST_BE_APK, scanFlags, currentTime, null); } catch (PackageManagerException e) { ... } } } Step10: PackageManagerService::scanPackageLI(...) 123456789101112131415161718192021// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:5735 private PackageParser.Package scanPackageLI(File scanFile, int parseFlags, int scanFlags, long currentTime, UserHandle user) throws PackageManagerException { ... ... parseFlags |= mDefParseFlags; PackageParser pp = new PackageParser(); pp.setSeparateProcesses(mSeparateProcesses); pp.setOnlyCoreApps(mOnlyCore); pp.setDisplayMetrics(mMetrics); ... ... final PackageParser.Package pkg; ... ... // &#x1F3C1;Step11: &#x89E3;&#x6790;scanFile&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x6587;&#x4EF6; pkg = pp.parsePackage(scanFile, parseFlags); ... ... // &#x1F3C1;Step19: &#x5B89;&#x88C5;pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x4FBF;&#x83B7;&#x5F97;&#x5B83;&#x7684;&#x7EC4;&#x4EF6;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E3A;&#x5B83;&#x5206;&#x914D;LinuxUID PackageParser.Package scannedPkg = scanPackageLI(pkg, parseFlags, scanFlags | SCAN_UPDATE_SIGNATURE, currentTime, user); ... ... return scannedPkg; } Step11: PackageParser::parsePackage(...) 123456789// frameworks/base/core/java/android/content/pm/PackageParser.java:752 public Package parsePackage(File packageFile, int flags) throws PackageParserException { if (packageFile.isDirectory()) { // &#x89E3;&#x6790;&#x8BE5;&#x76EE;&#x5F55;&#x4E2D;&#x7684;&#x6240;&#x6709;APK&#x6587;&#x4EF6;&#xFF0C;&#x628A;&#x4ED6;&#x4EEC;&#x5F53;&#x505A;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;package&#x6765;&#x5904;&#x7406; return parseClusterPackage(packageFile, flags); } else { return parseMonolithicPackage(packageFile, flags); // &#x1F3C1; } } &#x6839;&#x636E;&#x8981;&#x89E3;&#x6790;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x8FD8;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x5206;&#x4E86;&#x4E24;&#x679D;&#x6765;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;parseClusterPackage(...)&#x4F1A;&#x89E3;&#x6790;&#x5176;&#x4E2D;&#x7684;&#x6240;&#x6709;APK&#x6587;&#x4EF6;&#xFF0C;&#x628A;&#x76EE;&#x5F55;&#x5F53;&#x505A;&#x4E00;&#x4E2A;package&#x6765;&#x5904;&#x7406;&#x3002;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x5F85;&#x5904;&#x7406;&#x7684;&#x662F;&#x5355;&#x4E2A;apk&#x6587;&#x4EF6;&#xFF0C;&#x8FDB;&#x5165;parseMonolithicPackage(...)&#x3002; Step12: PackageParser::parseMonollithicPackage(...) parseMonolithicPackageLite(...)&#x5C06;AndroidManifest.xml&#x4E2D;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x5E76;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x8F7B;&#x91CF;&#x7EA7;&#x5BF9;&#x8C61;PackageLite&#x3002; 123456789101112131415// frameworks/base/core/java/android/content/pm/PackageParser.java:827 public Package parseMonolithicPackage(File apkFile, int flags) throws PackageParserException { if (mOnlyCoreApps) { // &#x1F3C1;&#x6B64;&#x5904;&#x89E3;&#x6790;&#x51FA;&#x6982;&#x8981;&#x6570;&#x636E;&#xFF0C;&#x5C01;&#x88C5;&#x4E3A;&#x8F7B;&#x91CF;&#x7EA7;&#x5BF9;&#x8C61; final PackageLite lite = parseMonolithicPackageLite(apkFile, flags); ... ... } // &#x8FD9;&#x7684;&#x903B;&#x8F91;&#x6709;&#x70B9;&#x5947;&#x602A;&#xFF0C;&#x524D;&#x9762;&#x5C01;&#x88C5;&#x7684;lite&#x5E76;&#x6CA1;&#x6709;&#x5728;&#x4E0B;&#x9762;&#x6D3E;&#x4E0A;&#x7528;&#x573A; final AssetManager assets = new AssetManager(); ... ... // &#x1F3C1;Step14 final Package pkg = parseBaseApk(apkFile, assets, flags); pkg.codePath = apkFile.getAbsolutePath(); return pkg; ... ... } Step13: PackageParser::parseMonolithicPackageLite(...) 12345678// frameworks/base/core/java/android/content/pm/PackageParser.java:657 private static PackageLite parseMonolithicPackageLite(File packageFile, int flags) throws PackageParserException { // &#x1F3C1;&#x89E3;&#x6790;Apk&#x7684;&#x8F7B;&#x91CF;&#x7EA7;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5C01;&#x88C5;&#x6210;PackageLite&#x5BF9;&#x8C61; final ApkLite baseApk = parseApkLite(packageFile, flags); final String packagePath = packageFile.getAbsolutePath(); return new PackageLite(packagePath, baseApk, null, null, null); } Step13.1: PackageParser::parseApkLite(...) &#x8FD9;&#x4E9B;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5305;&#x542B;&#xFF1A;package name, split name, install location&#x7B49;&#x3002; 12345678// frameworks/base/core/java/android/content/pm/PackageParser.java:1155 public static ApkLite parseApkLite(File apkFile, int flags) throws PackageParserException { final String apkPath = apkFile.getAbsolutePath(); ... ... // &#x5C06;&#x89E3;&#x6790;&#x5230;&#x7684;&#x8F7B;&#x91CF;&#x7EA7;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x6210;ApkLite&#x5BF9;&#x8C61;&#x5E76;&#x8FD4;&#x56DE; return parseApkLite(apkPath, res, parser, attrs, flags, signatures); ... ... } Step13.2: PackageParser::parseApkLite(...) 123456789101112131415161718192021222324252627282930313233// frameworks/base/core/java/android/content/pm/PackageParser.java:1274 private static ApkLite parseApkLite(String codePath, Resources res, XmlPullParser parser, AttributeSet attrs, int flags, Signature[] signatures) throws IOException, XmlPullParserException, PackageParserException { // &#x1F3C1;&#x89E3;&#x6790;&#x5E76;&#x751F;&#x6210;&lt;package, split&gt;&#x7684;pair final Pair&lt;String, String&gt; packageSplit = parsePackageSplitNames(parser, attrs, flags); int installLocation = PARSE_DEFAULT_INSTALL_LOCATION; int versionCode = 0; int revisionCode = 0; boolean coreApp = false; boolean multiArch = false; boolean extractNativeLibs = true; // &#x89E3;&#x6790;&#x8FD9;&#x4E9B;&#x6807;&#x7B7E; for (int i = 0; i &lt; attrs.getAttributeCount(); i++) { final String attr = attrs.getAttributeName(i); if (attr.equals(&quot;installLocation&quot;)) { installLocation = attrs.getAttributeIntValue(i, PARSE_DEFAULT_INSTALL_LOCATION); } else if (attr.equals(&quot;versionCode&quot;)) { versionCode = attrs.getAttributeIntValue(i, 0); } else if (attr.equals(&quot;revisionCode&quot;)) { revisionCode = attrs.getAttributeIntValue(i, 0); } else if (attr.equals(&quot;coreApp&quot;)) { coreApp = attrs.getAttributeBooleanValue(i, false); } } ... ... // &#x5C06;&#x89E3;&#x6790;&#x5230;&#x7684;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x6210;ApkLite&#x5BF9;&#x8C61; return new ApkLite(codePath, packageSplit.first, packageSplit.second, versionCode, revisionCode, installLocation, verifiers, signatures, coreApp, multiArch, extractNativeLibs); } Step 13.3: PackageParser::parsePackageSplitNames(...) 1234567891011121314151617181920212223242526272829303132// frameworks/base/core/java/android/content/pm/PackageParser.java:123 private static Pair&lt;String, String&gt; parsePackageSplitNames(XmlPullParser parser, AttributeSet attrs, int flags) throws IOException, XmlPullParserException, PackageParserException { int type; while ((type = parser.next()) != XmlPullParser.START_TAG &amp;&amp; type != XmlPullParser.END_DOCUMENT) { } if (type != XmlPullParser.START_TAG) {...} if (!parser.getName().equals(&quot;manifest&quot;)) {... } // &#x627E;&#x5230;manifest/package final String packageName = attrs.getAttributeValue(null, &quot;package&quot;); if (!&quot;android&quot;.equals(packageName)) { final String error = validateName(packageName, true, true); if (error != null) {...} } // &#x627E;&#x5230;manifest/split String splitName = attrs.getAttributeValue(null, &quot;split&quot;); if (splitName != null) { if (splitName.length() == 0) { splitName = null; } else { final String error = validateName(splitName, false, false); if (error != null) {...} } } // &#x751F;&#x6210;&lt;package, split&gt;&#x7684;pair return Pair.create(packageName.intern(), (splitName != null) ? splitName.intern() : splitName); } &#x4E00;&#x4E2A;AndroidManifest.xml&#x7684;&#x6837;&#x4F8B; &#x6709;&#x5FC5;&#x8981;&#x6293;&#x4E00;&#x4E2A;AndroidManifest.xml&#x62FF;&#x6765;&#x770B;&#x4E00;&#x773C;&#xFF0C;&#x4E00;&#x822C;&#x7684;apk&#x89E3;&#x538B;&#x540E;&#xFF0C;AndroidManifest.xml&#x6587;&#x4EF6;&#x662F;&#x9700;&#x8981;&#x53CD;&#x7F16;&#x8BD1;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0B;&#x4E00;&#x4E2A;AXMLPrinter2.jar&#xFF0C;&#x6267;&#x884C;&#xFF1A; 1java -jar AXMLPrinter2.jar AndroidManifest.xml &#x5373;&#x53EF;&#x6253;&#x5370;&#x660E;&#x6587;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:versionCode=&quot;590&quot; android:versionName=&quot;8.5&quot; android:installLocation=&quot;1&quot; package=&quot;com.sohu.inputmethod.sogou&quot; platformBuildVersionCode=&quot;23&quot; platformBuildVersionName=&quot;6.0-2704002&quot; &gt; &lt;uses-sdk android:minSdkVersion=&quot;11&quot; android:targetSdkVersion=&quot;23&quot; &gt; &lt;/uses-sdk&gt; &lt;supports-screens android:anyDensity=&quot;true&quot; android:smallScreens=&quot;true&quot; android:normalScreens=&quot;true&quot; android:largeScreens=&quot;true&quot; android:xlargeScreens=&quot;true&quot; &gt; &lt;/supports-screens&gt; &lt;uses-permission android:name=&quot;com.xiaomi.permission.AUTH_SERVICE&quot; &gt; &lt;/uses-permission&gt; ... ... &lt;uses-feature android:name=&quot;android.hardware.telephony.gsm&quot; android:required=&quot;false&quot; &gt; &lt;/uses-feature&gt; &lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; &gt; &lt;/uses-permission&gt; &lt;uses-feature android:name=&quot;android.hardware.camera&quot; android:required=&quot;false&quot; &gt; &lt;/uses-feature&gt; &lt;application android:label=&quot;@7F0B0329&quot; android:icon=&quot;@7F02041F&quot; android:name=&quot;com.sohu.inputmethod.sogou.SogouAppApplication&quot; android:process=&quot;com.sohu.inputmethod.sogou&quot; android:allowBackup=&quot;false&quot; &gt; &lt;service android:label=&quot;@7F0B0329&quot; android:icon=&quot;@7F02041F&quot; android:name=&quot;com.sohu.inputmethod.sogou.SogouIME&quot; android:permission=&quot;android.permission.BIND_INPUT_METHOD&quot; &gt; &lt;intent-filter android:priority=&quot;100&quot; &gt; &lt;action android:name=&quot;android.view.InputMethod&quot; &gt; &lt;/action&gt; &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; &gt; &lt;/category&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=&quot;android.view.im&quot; android:resource=&quot;@7F060009&quot; &gt; &lt;/meta-data&gt; &lt;/service&gt; ... ... &lt;receiver android:name=&quot;com.sohu.inputmethod.multimedia.MultiMediaTransferReceiver&quot; &gt; &lt;/receiver&gt; &lt;activity android:label=&quot;@7F0B039E&quot; android:name=&quot;com.sohu.inputmethod.settings.AccountList&quot; android:excludeFromRecents=&quot;true&quot; android:configChanges=&quot;0x000000A0&quot; &gt; &lt;intent-filter &gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; &gt; &lt;/action&gt; &lt;/intent-filter&gt; &lt;/activity&gt; ... ... &lt;activity android:label=&quot;@7F0B0329&quot; android:name=&quot;com.sohu.inputmethod.sogou.SogouIMESettings&quot; android:excludeFromRecents=&quot;true&quot; android:configChanges=&quot;0x000004A0&quot; &gt; &lt;intent-filter &gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; &gt; &lt;/action&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;service android:name=&quot;com.sohu.inputmethod.sogou.push.PushReceiveService&quot; &gt; &lt;intent-filter &gt; &lt;action android:name=&quot;com.sogou.pushservice.action.message.RECEIVE&quot; &gt; &lt;/action&gt; ... ... &lt;/intent-filter&gt; &lt;/service&gt; &lt;receiver android:name=&quot;com.sogou.udp.push.SystemReceiver&quot; &gt; &lt;/receiver&gt; ... ... &lt;service android:name=&quot;sogou.mobile.explorer.hotwords.floatingpopup.PushFloatingWindowService&quot; android:exported=&quot;false&quot; android:process=&quot;sogou.mobile.explorer.hotwords&quot; &gt; &lt;/service&gt; &lt;meta-data android:name=&quot;SdkVersion&quot; android:value=&quot;3.7&quot; &gt; &lt;/meta-data&gt; ... ... &lt;meta-data android:name=&quot;QBSDKAppKey&quot; android:value=&quot;ACR8D+367NCAy7ZECvRBVmMC&quot; &gt; &lt;/meta-data&gt; &lt;/application&gt;&lt;/manifest&gt; Step14: PackageParser::parseBaseApk(...) 123456789101112131415161718192021222324252627282930313233// frameworks/base/core/java/android/content/pm/PackageParser.java:864 private Package parseBaseApk(File apkFile, AssetManager assets, int flags) throws PackageParserException { final String apkPath = apkFile.getAbsolutePath(); String volumeUuid = null; if (apkPath.startsWith(MNT_EXPAND)) { final int end = apkPath.indexOf(&apos;/&apos;, MNT_EXPAND.length()); volumeUuid = apkPath.substring(MNT_EXPAND.length(), end); } ... ... final int cookie = loadApkIntoAssetManager(assets, apkPath, flags); Resources res = null; XmlResourceParser parser = null; ... ... res = new Resources(assets, mMetrics, null); assets.setConfiguration(0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Build.VERSION.RESOURCES_SDK_INT); parser = assets.openXmlResourceParser(cookie, ANDROID_MANIFEST_FILENAME); final String[] outError = new String[1]; // &#x1F3C1;&#x8C03;&#x7528;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#x7EE7;&#x7EED;&#x89E3;&#x6790; final Package pkg = parseBaseApk(res, parser, flags, outError); ... ... pkg.volumeUuid = volumeUuid; pkg.applicationInfo.volumeUuid = volumeUuid; pkg.baseCodePath = apkPath; pkg.mSignatures = null; return pkg; ... ... } Step15: PackageParser::parseBaseApk(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// frameworks/base/core/java/android/content/pm/PackageParser.java:1354 private Package parseBaseApk(Resources res, XmlResourceParser parser, int flags, String[] outError) throws XmlPullParserException, IOException { ... ... Pair&lt;String, String&gt; packageSplit = parsePackageSplitNames(parser, attrs, flags); pkgName = packageSplit.first; splitName = packageSplit.second; ... ... int type; ... ... final Package pkg = new Package(pkgName); boolean foundApp = false; // &#x89E3;&#x6790;manifest&#x6807;&#x7B7E;&#x4E2D;&#x7684;android:sharedUserId&#x5C5E;&#x6027;&#x3002;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;&#x8BE5;&#x5C5E;&#x6027;&#xFF0C;&#x8868;&#x793A;app // &#x8981;&#x4E0E;&#x5176;&#x5B83;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5171;&#x4EAB;&#x4E00;&#x4E2A;LinuxUID&#x3002; TypedArray sa = res.obtainAttributes(attrs, com.android.internal.R.styleable.AndroidManifest); ... ... String str = sa.getNonConfigurationString( com.android.internal.R.styleable.AndroidManifest_sharedUserId, 0); if (str != null &amp;&amp; str.length() &gt; 0) { ... ... pkg.mSharedUserId = str.intern(); // &#x5C06;&#x5171;&#x4EAB;UID&#x63D0;&#x53D6;&#x51FA;&#x6765; ... ... } ... ... sa.recycle(); ... ... int outerDepth = parser.getDepth(); // &#x89E3;&#x6790;uses-permission&#x548C;application&#x6807;&#x7B7E;&#xFF0C;&#x5B83;&#x4EEC;&#x5747;&#x4E3A;manifest&#x7684;&#x5B50;&#x6807;&#x7B7E; while ((type = parser.next()) != XmlPullParser.END_DOCUMENT &amp;&amp; (type != XmlPullParser.END_TAG || parser.getDepth() &gt; outerDepth)) { ... ... String tagName = parser.getName(); if (tagName.equals(&quot;application&quot;)) { ... ... // &#x1F3C1; Step16: &#x89E3;&#x6790;&#x6BCF;&#x4E2A;app&#x5FC5;&#x987B;&#x5B58;&#x5728;&#x7684;application&#x6807;&#x7B7E; if (!parseBaseApplication(pkg, res, parser, attrs, flags, outError)) { return null; } } ... ... else if (tagName.equals(&quot;uses-permission&quot;)) { // uses-permission&#x5BF9;&#x5E94;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;app&#x7533;&#x8BF7;&#x4E86;&#x67D0;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C; // &#x5B83;&#x5C31;&#x4F1A;&#x83B7;&#x5F97;&#x4E00;&#x4E2A;&#x5BF9;&#x5E94;&#x7684;Linux&#x7528;&#x6237;&#x7EC4;ID&#x3002;&#x4E00;&#x4E2A;app&#x53EF;&#x4EE5;&#x7533;&#x8BF7;&#x591A;&#x4E2A;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C; // &#x6545;&#x5B83;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x53EF;&#x4EE5;&#x5B58;&#x5728;&#x591A;&#x4E2A;uses-permission&#x6807;&#x7B7E;&#xFF0C;&#x8FD9;&#x4E9B;&#x6807;&#x7B7E;&#x6709;&#x4E00;&#x4E2A; // name&#x5C5E;&#x6027;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5BF9;&#x5E94;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x7684;&#x540D;&#x79F0;&#x3002; if (!parseUsesPermission(pkg, res, parser, attrs)) { return null; } } ... ... } ... ... return pkg; } Step16: PackageParser::parseBaseApplication(...) 1234567891011121314151617181920212223242526272829303132333435363738// frameworks/base/core/java/android/content/pm/PackageParser.java:2406 private boolean parseBaseApplication(Package owner, Resources res, XmlPullParser parser, AttributeSet attrs, int flags, String[] outError) throws XmlPullParserException, IOException { ... ... final int innerDepth = parser.getDepth(); int type; while ((type = parser.next()) != XmlPullParser.END_DOCUMENT &amp;&amp; (type != XmlPullParser.END_TAG || parser.getDepth() &gt; innerDepth)) { ... ... // &#x5206;&#x522B;&#x83B7;&#x5F97;&#x56DB;&#x5927;&#x7EC4;&#x4EF6;&#x7684;&#x914D;&#x7F6E;&#x4FE1;&#x606F; String tagName = parser.getName(); if (tagName.equals(&quot;activity&quot;)) { Activity a = parseActivity(owner, res, parser, attrs, flags, outError, false, owner.baseHardwareAccelerated); ... ... owner.activities.add(a); } else if (tagName.equals(&quot;receiver&quot;)) { Activity a = parseActivity(owner, res, parser, attrs, flags, outError, true, false); ... ... owner.receivers.add(a); } else if (tagName.equals(&quot;service&quot;)) { Service s = parseService(owner, res, parser, attrs, flags, outError); ... ... owner.services.add(s); } else if (tagName.equals(&quot;provider&quot;)) { Provider p = parseProvider(owner, res, parser, attrs, flags, outError); ... ... owner.providers.add(p); } ... ... } ... ... return true; } &#x56DE;&#x5230;Step10&#x4E2D;&#xFF0C;&#x5728;&#x8C03;&#x7528;PackageParser::parsePackage(...)&#x89E3;&#x6790;&#x5B8C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;AndroidManifest.xml&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8C03;&#x7528;PackageManagerService::scanPackageLI&#x83B7;&#x5F97;&#x89E3;&#x6790;&#x5230;&#x7684;app&#x7684;&#x7EC4;&#x4EF6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E3A;app&#x5206;&#x914D;UID&#x3002; # Step17: PackageManagerService::scanPackageLI(...) 12345678910111213141516171819202122232425262728293031323334353637383940// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java// :477// &#x7CFB;&#x7EDF;&#x4E2D;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x7684;app&#x90FD;&#x662F;&#x7528;&#x4E00;&#x4E2A;Package&#x5BF9;&#x8C61;&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x8FD9;&#x4E9B;&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x5728;mPackages&#x8FD9;&#x4E2A;HashMap&#x4E2D;&#xFF0C;// &#x8BE5;HashMap&#x662F;&#x4EE5;Package&#x7684;&#x540D;&#x79F0;&#x4E3A;&#x5173;&#x952E;&#x5B57; final ArrayMap&lt;String, PackageParser.Package&gt; mPackages = new ArrayMap&lt;String, PackageParser.Package&gt;();// :528// &#x6BCF;&#x4E2A;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x7684;app&#x90FD;&#x5305;&#x542B;&#x82E5;&#x5E72;Activity&#x3001;Broadcast Receiver&#x3001;Service&#x548C;// Content Provider&#x7EC4;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E9B;&#x7EC4;&#x4EF6;&#x4FE1;&#x606F;&#x5206;&#x522B;&#x4FDD;&#x5B58;&#x5728;&#x4E0B;&#x9762;&#x7684;&#x53D8;&#x91CF;&#x4E2D; // All available activities, for your resolving pleasure. final ActivityIntentResolver mActivities = new ActivityIntentResolver(); // All available receivers, for your resolving pleasure. final ActivityIntentResolver mReceivers = new ActivityIntentResolver(); // All available services, for your resolving pleasure. final ServiceIntentResolver mServices = new ServiceIntentResolver(); // All available providers, for your resolving pleasure. final ProviderIntentResolver mProviders = new ProviderIntentResolver(); // Mapping from provider base names (first directory in content URI codePath) // to the provider information. final ArrayMap&lt;String, PackageParser.Provider&gt; mProvidersByAuthority = new ArrayMap&lt;String, PackageParser.Provider&gt;();// :6466 private PackageParser.Package scanPackageLI(PackageParser.Package pkg, int parseFlags, int scanFlags, long currentTime, UserHandle user) throws PackageManagerException { boolean success = false; ... ... // &#x1F3C1; final PackageParser.Package res = scanPackageDirtyLI(pkg, parseFlags, scanFlags, currentTime, user); success = true; return res; ... ... } Step18: PackageManagerService::scanPackageDirtyLI(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java : 6481private PackageParser.Package scanPackageDirtyLI(PackageParser.Package pkg, int parseFlags, int scanFlags, long currentTime, UserHandle user) throws PackageManagerException { ... ... SharedUserSetting suid = null; PackageSetting pkgSetting = null; ... ... // &#x4E3A;pkg&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5206;&#x914D;UID synchronized (mPackages) { if (pkg.mSharedUserId != null) {// &#x68C0;&#x67E5;pkg&#x662F;&#x5426;&#x6307;&#x5B9A;&#x4E86;&#x8981;&#x4E0E;&#x5176;&#x5B83;app&#x5171;&#x4EAB;UID // &#x1F3C1;Step19 pkg.mSharedUserId&#x662F;&#x201C;shared-user name&#x201D;&#xFF0C;&#x7CFB;&#x7EDF;&#x7684; // &#x5171;&#x4EAB;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;mSharedUser&#x4E2D;&#xFF0C;&#x56DE;&#x987E; // Step7 Settings::readSharedUserLPw(...)&#x3002;&#x6B64;&#x5904;&#x6839;&#x636E;name&#x627E;&#x5230; // SharedUserSetting&#x5BF9;&#x8C61; suid = mSettings.getSharedUserLPw(pkg.mSharedUserId, 0, 0, true); ... ... } ... ... // &#x1F3C1;Step20 &#x4E3A;pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5206;&#x914D;&#x4E00;&#x4E2A;UID pkgSetting = mSettings.getPackageLPw(pkg, origPackage, realName, suid, destCodeFile, destResourceFile, pkg.applicationInfo.nativeLibraryRootDir, pkg.applicationInfo.primaryCpuAbi, pkg.applicationInfo.secondaryCpuAbi, pkg.applicationInfo.flags, pkg.applicationInfo.privateFlags, user, false); ... ... } ... ... // writer synchronized (mPackages) { // We don&apos;t expect installation to fail beyond this point // Add the new setting to mSettings mSettings.insertPackageSettingLPw(pkgSetting, pkg); // Add the new setting to mPackages // &#x5C06;pkg&#x6307;&#x5411;&#x7684;Package&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x5728;mPackages&#x4E2D; mPackages.put(pkg.applicationInfo.packageName, pkg); ... ... // &#x5C06;pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;Content Provider&#x7EC4;&#x4EF6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;mProvidersByAuthority int N = pkg.providers.size(); StringBuilder r = null; int i; for (i=0; i&lt;N; i++) { PackageParser.Provider p = pkg.providers.get(i); p.info.processName = fixProcessName(pkg.applicationInfo.processName, p.info.processName, pkg.applicationInfo.uid); mProviders.addProvider(p); p.syncable = p.info.isSyncable; if (p.info.authority != null) { String names[] = p.info.authority.split(&quot;;&quot;); p.info.authority = null; for (int j = 0; j &lt; names.length; j++) { if (j == 1 &amp;&amp; p.syncable) { // We only want the first authority for a provider to possibly be // syncable, so if we already added this provider using a different // authority clear the syncable flag. We copy the provider before // changing it because the mProviders object contains a reference // to a provider that we don&apos;t want to change. // Only do this for the second authority since the resulting provider // object can be the same for all future authorities for this provider. p = new PackageParser.Provider(p); p.syncable = false; } if (!mProvidersByAuthority.containsKey(names[j])) { mProvidersByAuthority.put(names[j], p); if (p.info.authority == null) { p.info.authority = names[j]; } else { p.info.authority = p.info.authority + &quot;;&quot; + names[j]; } ... ... } ... ... } } ... ... } ... ... // &#x5C06;pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;Service&#x7EC4;&#x4EF6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;mServices&#x4E2D; N = pkg.services.size(); r = null; for (i=0; i&lt;N; i++) { PackageParser.Service s = pkg.services.get(i); s.info.processName = fixProcessName(pkg.applicationInfo.processName, s.info.processName, pkg.applicationInfo.uid); mServices.addService(s); ... ... } ... ... // &#x5C06;pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;Broadcast Receiver&#x7EC4;&#x4EF6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;mReceivers N = pkg.receivers.size(); r = null; for (i=0; i&lt;N; i++) { PackageParser.Activity a = pkg.receivers.get(i); a.info.processName = fixProcessName(pkg.applicationInfo.processName, a.info.processName, pkg.applicationInfo.uid); mReceivers.addActivity(a, &quot;receiver&quot;); ... ... } ... ... // &#x5C06;pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;Activity&#x7EC4;&#x4EF6;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;mActivities N = pkg.activities.size(); r = null; for (i=0; i&lt;N; i++) { PackageParser.Activity a = pkg.activities.get(i); a.info.processName = fixProcessName(pkg.applicationInfo.processName, a.info.processName, pkg.applicationInfo.uid); mActivities.addActivity(a, &quot;activity&quot;); ... ... } ... ... } return pkg; } Step19: Settings::getSharedUserLPw(...) 12345678910111213141516171819202122// frameworks/base/services/core/java/com/android/server/pm/Settings.java:398 SharedUserSetting getSharedUserLPw(String name, int pkgFlags, int pkgPrivateFlags, boolean create) { // name &#x63CF;&#x8FF0;&#x5171;&#x4EAB;&#x7684;LinuxUID // create &#x5F53;&#x7CFB;&#x7EDF;&#x4E0D;&#x5B58;&#x5728;&#x540D;&#x79F0;&#x4E3A;name&#x7684;UID&#x65F6;&#xFF0C;&#x662F;&#x5426;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; // &#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x5171;&#x4EAB;&#x7684;UID&#x90FD;&#x4FDD;&#x5B58;&#x5728;mSharedUsers&#xFF0C;&#x5148;&#x5230;&#x8FD9;&#x91CC;&#x67E5;&#x627E; SharedUserSetting s = mSharedUsers.get(name); if (s == null) { if (!create) { return null; } s = new SharedUserSetting(name, pkgFlags, pkgPrivateFlags); s.userId = newUserIdLPw(s); ... ... if (s.userId &gt;= 0) { mSharedUsers.put(name, s); } } return s; } Step20: Settings::getPackageLPw(...) 1234567891011// frameworks/base/services/core/java/com/android/server/pm/Settings.java:367 PackageSetting getPackageLPw(PackageParser.Package pkg, PackageSetting origPackage, String realName, SharedUserSetting sharedUser, File codePath, File resourcePath, String legacyNativeLibraryPathString, String primaryCpuAbi, String secondaryCpuAbi, int pkgFlags, int pkgPrivateFlags, UserHandle user, boolean add) { final String name = pkg.packageName; PackageSetting p = getPackageLPw(name, origPackage, realName, sharedUser, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbi, secondaryCpuAbi, pkg.mVersionCode, pkgFlags, pkgPrivateFlags, user, add, true /* allowInstall */); return p; } &#x5B83;&#x53C8;&#x8C03;&#x7528;&#x4E86;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#x3002; ## Step20.1 Settings::getPcakageLPw(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677// frameworks/base/services/core/java/com/android/server/pm/Settings.java:565 private PackageSetting getPackageLPw(String name, PackageSetting origPackage, String realName, SharedUserSetting sharedUser, File codePath, File resourcePath, String legacyNativeLibraryPathString, String primaryCpuAbiString, String secondaryCpuAbiString, int vc, int pkgFlags, int pkgPrivateFlags, UserHandle installUser, boolean add, boolean allowInstall) { // mPackages&#x4E2D;&#x4FDD;&#x5B58;&#x7684;&#x662F;&#x4ECE;packages.xml&#x4E2D;&#x8BFB;&#x53D6;&#x7684;&#x4FE1;&#x606F; PackageSetting p = mPackages.get(name); ... ... if (p != null) { ... ... // packages.xml&#x4E2D;&#x8BB0;&#x5F55;&#x7684;pkg&#x4F7F;&#x7528;&#x7684;sharedUser&#x548C;&#x5B9E;&#x9645;&#x7684;&#x5305;&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#x7684; // sharedUser&#x4E0D;&#x4E00;&#x81F4; if (p.sharedUser != sharedUser) { ... ... p = null; } else ... ... } if (p == null) { // &#x4E3A;&#x540D;&#x79F0;&#x4E3A;name&#x7684;app&#x521B;&#x5EFA;&#x65B0;&#x7684;PackageSetting&#x5BF9;&#x8C61; if (origPackage != null) { // &#x8BF4;&#x660E;&#x540D;&#x79F0;&#x4E3A;name&#x7684;app&#x5728;&#x7CFB;&#x7EDF;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x65E7;&#x7248;&#x672C; // &#x4E3A;&#x6B64;&#x65E7;&#x7248;&#x672C;&#x7684;app&#x7684;&#x540D;&#x79F0;&#x4EE5;&#x53CA;UID&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;PackageSetting&#x5BF9;&#x8C61; // We are consuming the data from an existing package. p = new PackageSetting(origPackage.name, name, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, null /* cpuAbiOverrideString */, vc, pkgFlags, pkgPrivateFlags); ... ... PackageSignatures s = p.signatures; p.copyFrom(origPackage); p.signatures = s; p.sharedUser = origPackage.sharedUser; p.appId = origPackage.appId; p.origPackage = origPackage; p.getPermissionsState().copyFrom(origPackage.getPermissionsState()); mRenamedPackages.put(name, origPackage.name); name = origPackage.name; // Update new package state. p.setTimeStamp(codePath.lastModified()); } else { // &#x8BF4;&#x660E;&#x540D;&#x79F0;&#x4E3A;name&#x7684;app&#x662F;&#x4E2A;&#x5168;&#x65B0;&#x5B89;&#x88C5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x4F7F;&#x7528;&#x672C;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x4E3A;&#x4E4B;&#x521B; // &#x5EFA;&#x4E00;&#x4E2A;&#x5168;&#x65B0;PackageSetting&#x5BF9;&#x8C61; p = new PackageSetting(name, realName, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, null /* cpuAbiOverrideString */, vc, pkgFlags, pkgPrivateFlags); p.setTimeStamp(codePath.lastModified()); p.sharedUser = sharedUser; ... ... // &#x540D;&#x79F0;&#x4E3A;name&#x7684;app&#x662F;&#x5426;&#x5236;&#x5B9A;&#x4E86;&#x8981;&#x4E0E;&#x5176;&#x5B83;app&#x5171;&#x4EAB;UID if (sharedUser != null) { p.appId = sharedUser.userId; } else { // Clone the setting here for disabled system packages // &#x662F;&#x5426;&#x662F;&#x4E00;&#x4E2A;&#x7981;&#x7528;&#x7684;&#x7CFB;&#x7EDF;&#x5E94;&#x7528; PackageSetting dis = mDisabledSysPackages.get(name); if (dis != null) {//&#x5982;&#x679C;&#x662F;&#xFF0C;&#x5219;&#x4E0D;&#x9700;&#x8981;&#x5206;&#x914D;&#x65B0;&#x7684;UID&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x539F;&#x6765;&#x7684; ... ... p.appId = dis.appId; // Clone permissions p.getPermissionsState().copyFrom(dis.getPermissionsState()); ... ... // Add new setting to list of user ids addUserIdLPw(p.appId, p, name); } else { // Assign new user id // &#x1F3C1;&#x5206;&#x914D;&#x65B0;UID p.appId = newUserIdLPw(p); } } } ... ... if (add) { // Finish adding new package by adding it and updating shared // user preferences addPackageSettingLPw(p, name, sharedUser); } } else {... ...} return p; } Step21: Settings::newUserIdLPw(...) 1234567891011121314151617181920// frameworks/base/services/core/java/com/android/server/pm/Settings.java:3736 private int newUserIdLPw(Object obj) { // Let&apos;s be stupidly inefficient for now... final int N = mUserIds.size(); for (int i = mFirstAvailableUid; i &lt; N; i++) { // &#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x8BF4;&#x660E;uid=FIRST_APPLICATION_UID+1&#x7684;UID&#x5C1A;&#x672A;&#x5206;&#x914D; if (mUserIds.get(i) == null) { mUserIds.set(i, obj); return Process.FIRST_APPLICATION_UID + i; } } // None left? if (N &gt; (Process.LAST_APPLICATION_UID-Process.FIRST_APPLICATION_UID)) { return -1; } mUserIds.add(obj); return Process.FIRST_APPLICATION_UID + N; } &#x4F3C;&#x66FE;&#x76F8;&#x8BC6;&#xFF0C;&#x8DDF;Step6 Settings::addUserIdLPw(...)&#x7684;&#x5DEE;&#x5F02;&#x5728;&#x4E8E;add&#x6307;&#x5B9A;&#x4E86;uid&#xFF0C;&#x800C;&#x6B64;&#x5904;&#x662F;&#x5728;mUserIds&#x7684;&#x6700;&#x672B;&#x7AEF;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;uid&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x8FD4;&#x56DE;&#x5230;Step2&#x4E2D;&#xFF0C;&#x8C03;&#x7528;PackageManagerService::updatePermissionLPw(...)&#x4E3A;&#x524D;&#x9762;&#x5B89;&#x88C5;&#x7684;app&#x5206;&#x914D;&#x7528;&#x6237;&#x7EC4;ID&#xFF0C;&#x5373;gid&#x3002;&#x6388;&#x4E88;&#x5B83;&#x4EEC;&#x6240;&#x7533;&#x8BF7;&#x7684;&#x8D44;&#x6E90;&#x7684;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x5C14;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x8C03;&#x7528;Settings::writeLPr()&#x5C06;&#x8FD9;&#x4E9B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;&#x672C;&#x5730;&#x4E86;&#x3002; # Step22: PackageManagerService::updatePermissionLPw(...) 123456// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:8244 private void updatePermissionsLPw(String changingPkg, PackageParser.Package pkgInfo, int flags) { final String volumeUuid = (pkgInfo != null) ? getVolumeUuidForPackage(pkgInfo) : null; updatePermissionsLPw(changingPkg, pkgInfo, volumeUuid, flags); } &#x8C03;&#x7528;&#x4E86;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#x3002; ## Step22.1: PackageManagerService::updatePermissionLPw(...) 123456789101112131415// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:8250 private void updatePermissionsLPw(String changingPkg, PackageParser.Package pkgInfo, String replaceVolumeUuid, int flags) { ... ... for (PackageParser.Package pkg : mPackages.values()) { if (pkg != pkgInfo) { // Only replace for packages on requested volume final String volumeUuid = getVolumeUuidForPackage(pkg); final boolean replace = ((flags &amp; UPDATE_PERMISSIONS_REPLACE_ALL) != 0) &amp;&amp; Objects.equals(replaceVolumeUuid, volumeUuid); grantPermissionsLPw(pkg, replace, changingPkg); } } ... ... } &#x56DE;&#x987E;Step15&#x4E2D;&#x7684;AndroidManifest.xml&#x6837;&#x4F8B;&#xFF0C;&#x5B83;&#x7684;user-permission&#x90E8;&#x5206;&#x5982;&#x4E0B;&#xFF1A; 123&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;&gt;&lt;/uses-permission&gt; &#x4ED6;&#x8BB0;&#x5F55;&#x4E86;app&#x6240;&#x9700;&#x8981;&#x7684;&#x6743;&#x9650;&#x540D;&#x79F0;&#x3002;&#x7CFB;&#x7EDF;&#x5728;/system/etc/permissions/platform.xml&#x4E2D;&#x4FDD;&#x5B58;&#x7740;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x5217;&#x8868;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x4E3B;&#x8981;&#x5F62;&#x5F0F;&#x4E3A;&#xFF1A; 123&lt;permission name=&quot;android.permission.BLUETOOTH&quot; &gt; &lt;group gid=&quot;net_bt&quot; /&gt;&lt;/permission&gt; &#x8FD9;&#x4E24;&#x4E2A;&#x8868;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x5C31;&#x77E5;&#x9053;app&#x6240;&#x9700;&#x8981;&#x7684;&#x7528;&#x6237;&#x7EC4;&#x540D;&#x79F0;&#xFF0C;&#x518D;&#x901A;&#x8FC7;getgrname&#x51FD;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x5BF9;&#x5E94;group id&#x3002;&#x4F46;&#x662F;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x5728;platform.xml&#x4E2D;&#x627E;&#x5230;READ_EXTERNAL_STORAGE&#x5BF9;&#x5E94;&#x7684;grout gid&#x6807;&#x7B7E;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F; PackageManagerService&#x4F1A;&#x7ED9;AndroiManifest.xml&#x4E2D;&#x6BCF;&#x4E2A;permission&#x6807;&#x7B7E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;BasePermission&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x4EE5;&#x6807;&#x7B7E;&#x4E2D;name&#x5C5E;&#x6027;&#x4F5C;&#x4E3A;&#x5173;&#x952E;&#x5B57;&#x5C06;&#x5BF9;&#x8C61;&#x4EEC;&#x4FDD;&#x5B58;&#x5728;mSettings.mPermissions&#x8FD9;&#x4E2A;HashMap&#x4E2D;&#x3002; /system/etc/permissions/platform.xml&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF1A; 12345678910111213141516171819202122232425262728&lt;permissions&gt; &lt;permission name=&quot;android.permission.BLUETOOTH_ADMIN&quot; &gt; &lt;group gid=&quot;net_bt_admin&quot; /&gt; &lt;/permission&gt; &lt;permission name=&quot;android.permission.BLUETOOTH&quot; &gt; &lt;group gid=&quot;net_bt&quot; /&gt; &lt;/permission&gt; &lt;permission name=&quot;android.permission.BLUETOOTH_STACK&quot; &gt; &lt;group gid=&quot;net_bt_stack&quot; /&gt; &lt;/permission&gt; ... ... &lt;assign-permission name=&quot;android.permission.MODIFY_AUDIO_SETTINGS&quot; uid=&quot;media&quot; /&gt; &lt;assign-permission name=&quot;android.permission.ACCESS_SURFACE_FLINGER&quot; uid=&quot;media&quot; /&gt; ... ... &lt;assign-permission name=&quot;android.permission.ACCESS_SURFACE_FLINGER&quot; uid=&quot;graphics&quot; /&gt; &lt;library name=&quot;android.test.runner&quot; file=&quot;/system/framework/android.test.runner.jar&quot; /&gt; &lt;library name=&quot;javax.obex&quot; file=&quot;/system/framework/javax.obex.jar&quot; /&gt; &lt;library name=&quot;org.apache.http.legacy&quot; file=&quot;/system/framework/org.apache.http.legacy.jar&quot; /&gt; &lt;allow-in-power-save-except-idle package=&quot;com.android.providers.downloads&quot; /&gt;&lt;/permissions&gt; Step23: PackageManagerService::grantPermissionsLPw(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:8338 private void grantPermissionsLPw(PackageParser.Package pkg, boolean replace, String packageOfInterest) { // pkg&#x63CF;&#x8FF0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x5C31;&#x4FDD;&#x5B58;&#x5728;mExtras&#x4E2D; final PackageSetting ps = (PackageSetting) pkg.mExtras; ... ... PermissionsState permissionsState = ps.getPermissionsState(); PermissionsState origPermissions = permissionsState; final int[] currentUserIds = UserManagerService.getInstance().getUserIds(); ... ... // &#x5C06;&#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x90FD;&#x5177;&#x5907;&#x7684;&#x9ED8;&#x8BA4;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x8D4B;&#x7ED9;&#x8BE5;&#x5E94;&#x7528; permissionsState.setGlobalGids(mGlobalGids); // &#x4F9D;&#x6B21;&#x68C0;&#x67E5;pkg&#x4E2D;&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650; final int N = pkg.requestedPermissions.size(); for (int i=0; i&lt;N; i++) { final String name = pkg.requestedPermissions.get(i); // &#x6BCF;&#x4E2A;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;BasePermission&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x4EE5;name&#x4F5C;&#x4E3A;&#x5173;&#x952E;&#x5B57; // &#x6B64;&#x5904;&#x53D6;&#x51FA;&#x8BE5;&#x5BF9;&#x8C61; final BasePermission bp = mSettings.mPermissions.get(name); ... ... // &#x5224;&#x65AD;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x68C0;&#x67E5;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x662F;&#x5426;&#x5408;&#x6CD5; final String perm = bp.name; boolean allowedSig = false; int grant = GRANT_DENIED; // Keep track of app op permissions. if ((bp.protectionLevel &amp; PermissionInfo.PROTECTION_FLAG_APPOP) != 0) { ArraySet&lt;String&gt; pkgs = mAppOpPermissionPackages.get(bp.name); if (pkgs == null) { pkgs = new ArraySet&lt;&gt;(); mAppOpPermissionPackages.put(bp.name, pkgs); } pkgs.add(pkg.packageName); } // &#x5206;&#x6790;bp&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x7684;&#x4FDD;&#x62A4;&#x7EA7;&#x522B; final int level = bp.protectionLevel &amp; PermissionInfo.PROTECTION_MASK_BASE; switch (level) { case PermissionInfo.PROTECTION_NORMAL: { // For all apps normal permissions are install time ones. grant = GRANT_INSTALL; // &#x5408;&#x6CD5; } break; case PermissionInfo.PROTECTION_DANGEROUS: { if (pkg.applicationInfo.targetSdkVersion &lt;= Build.VERSION_CODES.LOLLIPOP_MR1) { // For legacy apps dangerous permissions are install time ones. grant = GRANT_INSTALL_LEGACY; // &#x5408;&#x6CD5; } else if (origPermissions.hasInstallPermission(bp.name)) { // For legacy apps that became modern, install becomes runtime. grant = GRANT_UPGRADE; } else if (mPromoteSystemApps &amp;&amp; isSystemApp(ps) &amp;&amp; mExistingSystemPackages.contains(ps.name)) { // For legacy system apps, install becomes runtime. // We cannot check hasInstallPermission() for system apps since those // permissions were granted implicitly and not persisted pre-M. grant = GRANT_UPGRADE; } else { // For modern apps keep runtime permissions unchanged. grant = GRANT_RUNTIME; } } break; case PermissionInfo.PROTECTION_SIGNATURE: { // For all apps signature permissions are install time ones. // &#x9700;&#x8981;&#x7ED3;&#x5408;pkg&#x7684;&#x7B7E;&#x540D;&#x6765;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x68C0;&#x67E5;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x662F;&#x5426;&#x5408;&#x6CD5; allowedSig = grantSignaturePermission(perm, pkg, bp, origPermissions); if (allowedSig) { grant = GRANT_INSTALL; } } break; } ... ... if (grant != GRANT_DENIED) { if (!isSystemApp(ps) &amp;&amp; ps.installPermissionsFixed) { // If this is an existing, non-system package, then // we can&apos;t add any new permissions to it. if (!allowedSig &amp;&amp; !origPermissions.hasInstallPermission(perm)) { // Except... if this is a permission that was added // to the platform (note: need to only do this when // updating the platform). if (!isNewPlatformPermissionForPackage(perm, pkg)) { grant = GRANT_DENIED; } } } // &#x5C06;&#x5408;&#x6CD5;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x5BF9;&#x5E94;&#x7684;gid&#x5206;&#x914D;&#x7ED9;pkg switch (grant) { case GRANT_INSTALL: { // Revoke this as runtime permission to handle the case of // a runtime permission being downgraded to an install one. for (int userId : UserManagerService.getInstance().getUserIds()) { if (origPermissions.getRuntimePermissionState( bp.name, userId) != null) { // Revoke the runtime permission and clear the flags. origPermissions.revokeRuntimePermission(bp, userId); origPermissions.updatePermissionFlags(bp, userId, PackageManager.MASK_PERMISSION_FLAGS, 0); // If we revoked a permission permission, we have to write. changedRuntimePermissionUserIds = ArrayUtils.appendInt( changedRuntimePermissionUserIds, userId); } } // Grant an install permission. if (permissionsState.grantInstallPermission(bp) != PermissionsState.PERMISSION_OPERATION_FAILURE) { changedInstallPermission = true; } } break; case GRANT_INSTALL_LEGACY: { // Grant an install permission. if (permissionsState.grantInstallPermission(bp) != PermissionsState.PERMISSION_OPERATION_FAILURE) { changedInstallPermission = true; } } break; case GRANT_RUNTIME: { // Grant previously granted runtime permissions. for (int userId : UserManagerService.getInstance().getUserIds()) { PermissionState permissionState = origPermissions .getRuntimePermissionState(bp.name, userId); final int flags = permissionState != null ? permissionState.getFlags() : 0; if (origPermissions.hasRuntimePermission(bp.name, userId)) { if (permissionsState.grantRuntimePermission(bp, userId) == PermissionsState.PERMISSION_OPERATION_FAILURE) { // If we cannot put the permission as it was, we have to write. changedRuntimePermissionUserIds = ArrayUtils.appendInt( changedRuntimePermissionUserIds, userId); } } // Propagate the permission flags. permissionsState.updatePermissionFlags(bp, userId, flags, flags); } } break; case GRANT_UPGRADE: { // Grant runtime permissions for a previously held install permission. PermissionState permissionState = origPermissions .getInstallPermissionState(bp.name); final int flags = permissionState != null ? permissionState.getFlags() : 0; if (origPermissions.revokeInstallPermission(bp) != PermissionsState.PERMISSION_OPERATION_FAILURE) { // We will be transferring the permission flags, so clear them. origPermissions.updatePermissionFlags(bp, UserHandle.USER_ALL, PackageManager.MASK_PERMISSION_FLAGS, 0); changedInstallPermission = true; } // If the permission is not to be promoted to runtime we ignore it and // also its other flags as they are not applicable to install permissions. if ((flags &amp; PackageManager.FLAG_PERMISSION_REVOKE_ON_UPGRADE) == 0) { for (int userId : currentUserIds) { if (permissionsState.grantRuntimePermission(bp, userId) != PermissionsState.PERMISSION_OPERATION_FAILURE) { // Transfer the permission flags. permissionsState.updatePermissionFlags(bp, userId, flags, flags); // If we granted the permission, we have to write. changedRuntimePermissionUserIds = ArrayUtils.appendInt( changedRuntimePermissionUserIds, userId); } } } } break; ... ... } } else { // &#x6B63;&#x5728;&#x68C0;&#x67E5;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x4E0D;&#x5408;&#x6CD5;&#xFF0C;&#x5C06;&#x5B83;&#x4ECE;pkg&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x5217;&#x8868;&#x4E2D;&#x5220;&#x9664; if (permissionsState.revokeInstallPermission(bp) != PermissionsState.PERMISSION_OPERATION_FAILURE) { // Also drop the permission flags. permissionsState.updatePermissionFlags(bp, UserHandle.USER_ALL, PackageManager.MASK_PERMISSION_FLAGS, 0); changedInstallPermission = true; ... ... } ... ... } } if ((changedInstallPermission || replace) &amp;&amp; !ps.installPermissionsFixed &amp;&amp; !isSystemApp(ps) || isUpdatedSystemApp(ps)){ // This is the first that we have heard about this package, so the // permissions we have now selected are fixed until explicitly // changed. ps.installPermissionsFixed = true; } // Persist the runtime permissions state for users with changes. If permissions // were revoked because no app in the shared user declares them we have to // write synchronously to avoid losing runtime permissions state. for (int userId : changedRuntimePermissionUserIds) { mSettings.writeRuntimePermissionsForUserLPr(userId, runtimePermissionsRevoked); } } &#x5B8C;&#x6210;&#x7ED9;pkg&#x8D4B;&#x4E88;&#x9700;&#x8981;&#x7684;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x4E4B;&#x540E;&#xFF0C;&#x56DE;&#x5230;&#x524D;&#x9762;Step2&#x4E2D;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8C03;&#x7528;Settings::writeLPr()&#x5C06;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5728;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x4E2D;&#x3002; # Step24: Settings::writeLPr() 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465void writeLPr() { if (mSettingsFilename.exists()) { // &#x786E;&#x4FDD;packages-backup.xml&#x6587;&#x4EF6;&#x603B;&#x662F;packages.xml&#x7684;&#x5F71;&#x5B50; if (!mBackupSettingsFilename.exists()) { if (!mSettingsFilename.renameTo(mBackupSettingsFilename)) { ... ... return; } } else { mSettingsFilename.delete(); ... ... } } mPastSignatures.clear(); try { FileOutputStream fstr = new FileOutputStream(mSettingsFilename); BufferedOutputStream str = new BufferedOutputStream(fstr); // &#x521D;&#x59CB;&#x5316;&#x5934;&#x90E8; XmlSerializer serializer = new FastXmlSerializer(); serializer.setOutput(str, StandardCharsets.UTF_8.name()); serializer.startDocument(null, true); serializer.setFeature(&quot;http://xmlpull.org/v1/doc/features.html#indent-output&quot;, true); serializer.startTag(null, &quot;packages&quot;); ... ... for (final SharedUserSetting usr : mSharedUsers.values()) { serializer.startTag(null, &quot;shared-user&quot;); serializer.attribute(null, ATTR_NAME, usr.name); serializer.attribute(null, &quot;userId&quot;, Integer.toString(usr.userId)); usr.signatures.writeXml(serializer, &quot;sigs&quot;, mPastSignatures); writePermissionsLPr(serializer, usr.getPermissionsState() .getInstallPermissionStates()); serializer.endTag(null, &quot;shared-user&quot;); } ... ... mKeySetManagerService.writeKeySetManagerServiceLPr(serializer); serializer.endTag(null, &quot;packages&quot;); serializer.endDocument(); str.flush(); FileUtils.sync(fstr); str.close(); // New settings successfully written, old ones are no longer // needed. mBackupSettingsFilename.delete(); FileUtils.setPermissions(mSettingsFilename.toString(), FileUtils.S_IRUSR|FileUtils.S_IWUSR |FileUtils.S_IRGRP|FileUtils.S_IWGRP, -1, -1); writePackageListLPr(); writeAllUsersPackageRestrictionsLPr(); writeAllRuntimePermissionsLPr(); return; } catch(XmlPullParserException e) {... ...} ... ...} &#x81F3;&#x6B64;&#xFF0C;PackageManagerService&#x5C31;&#x5C06;&#x6BCF;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x7684;uid&#x4FDD;&#x5B58;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x4E4B;&#x540E;&#x5982;&#x679C;&#x4E00;&#x4E2A;app&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#xFF0C;uid&#x4E5F;&#x662F;&#x4E0D;&#x4F1A;&#x53D8;&#x7684;&#x3002; &#x5982;&#x679C;&#x4E00;&#x4E2A;app&#x662F;&#x901A;&#x8FC7;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x7684;&#xFF0C;&#x4ED6;&#x8C03;&#x7528;PackageManagerService::installPackage(...)&#x6765;&#x542F;&#x52A8;&#x5B89;&#x88C5;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6700;&#x7EC8;&#x4E5F;&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x7528;PackageManagerService::scanPackageLI(...)&#x6765;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x3002; &#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x56FE; &#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x56FE;]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安装过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android App安装过程学习笔记（一）]]></title>
    <url>%2F2016%2F10%2F23%2F2016%2F1015Installer1%2F</url>
    <content type="text"><![CDATA[&#x5728;Android&#x4E0B;&#x5B89;&#x88C5;&#x4E00;&#x4E2A;APP&#x65F6;&#xFF0C;PackageManagerService&#x4F1A;&#x89E3;&#x6790;&#x8BE5;APP&#x7684;AndroidManifest.xml&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x4FBF;&#x83B7;&#x53D6;&#x5B83;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#xFF0C;&#x540C;&#x65F6;&#x4E3A;&#x8BE5;APP&#x5206;&#x914D;Linux&#x7528;&#x6237;ID&#x548C;Linux&#x7528;&#x6237;&#x7EC4;ID&#x3002; PackageManagerService&#x662F;&#x5728;SystemService&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x7531;&#x8BE5;&#x8FDB;&#x7A0B;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x7684;&#xFF1A; 123456789101112131415161718192021222324// frameworks/base/services/java/com/android/server/SystemServer.java:366public final class SystemServer {... ... public static void main(String[] args) { // &#x5165;&#x53E3;&#x51FD;&#x6570; new SystemServer().run(); } private void run() { ... ... try { startBootstrapServices(); // :268 ... ... } catch (Throwable ex) { ... ... } } private void startBootstrapServices() { ... ... // Start the package manager. Slog.i(TAG, &quot;Package Manager&quot;); // :365 // &#x1F3C1;&#x8C03;&#x7528;PackageManagerService&#x7684;&#x9759;&#x6001;&#x51FD;&#x6570;main(...)&#x5B89;&#x88C5;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5E94;&#x7528; mPackageManagerService = PackageManagerService.main(mSystemContext, installer, mFactoryTestMode != FactoryTest.FACTORY_TEST_OFF, mOnlyCore); ... ...} PackageManagerService&#x5728;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x5BF9;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF0C;&#x4EE5;&#x5B83;&#x7684;main&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x8D77;&#x70B9;&#x5F00;&#x542F;&#x63A2;&#x7D22;&#x3002; # Step1: PackageManagerService.main(...) 12345678// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:1765public static PackageManagerService main(Context context, Installer installer, boolean factoryTest, boolean onlyCore) { PackageManagerService m = new PackageManagerService(context, installer, factoryTest, onlyCore); // &#x1F3C1; ServiceManager.addService(&quot;package&quot;, m); return m;} Step2: PackageManagerService&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570; Android&#x7CFB;&#x7EDF;&#x5728;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x4F1A;&#x628A;&#x5DF2;&#x5B89;&#x88C5;&#x7684;app&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x4E00;&#x904D;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x201C;&#x5B89;&#x88C5;&#x201D;&#x5C31;&#x662F;&#x904D;&#x5386;&#x5404;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;&#x89E3;&#x6790;&#x5404;app&#x7684;AndroidManifest.xml&#xFF0C;&#x8BB0;&#x5F55;&#x5B83;&#x4EEC;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E3A;&#x5404;app&#x5206;&#x914D;uid&#x548C;gid&#x3002; &#x8FD9;&#x91CC;&#x662F;&#x7CFB;&#x7EDF;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x5B89;&#x88C5;app&#x7684;&#x903B;&#x8F91;&#x8D77;&#x70B9;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576// frameworks/base/services/core/java/com/android/server/pm/PackageManagerService.java:1801 public PackageManagerService(Context context, Installer installer, boolean factoryTest, boolean onlyCore) { ... ... mSettings = new Settings(mPackages); ... ... File dataDir = Environment.getDataDirectory(); // &#x76EE;&#x5F55;/data mAppDataDir = new File(dataDir, &quot;data&quot;); // /data/data mAppInstallDir = new File(dataDir, &quot;app&quot;); // /data/app mAppLib32InstallDir = new File(dataDir, &quot;app-lib&quot;); // /data/app-lib mAsecInternalPath = new File(dataDir, &quot;app-asec&quot;).getPath(); // /data/app-asec mUserAppDataDir = new File(dataDir, &quot;user&quot;); // /data/user mDrmAppPrivateInstallDir = new File(dataDir, &quot;app-private&quot;); // /data/app-private ... ... // &#x1F3C1;&#x7CFB;&#x7EDF;&#x4E2D;&#x5B89;&#x88C5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4FE1;&#x606F;&#x4F1A;&#x8BB0;&#x5F55;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x6B64;&#x5904;&#x8BFB;&#x53D6;&#x8BE5;&#x914D;&#x7F6E;&#x6587;&#x4EF6; mRestoredSettings = mSettings.readLPw(this, sUserManager.getUsers(false), mSdkVersion, mOnlyCore); File frameworkDir = new File(Environment.getRootDirectory(), &quot;framework&quot;); ... ... // &#x1F3C1;Step9: &#x8C03;&#x7528;scanDirLI(...)&#x5206;&#x522B;&#x5B89;&#x88C5;&#x4FDD;&#x5B58;&#x5728;&#x51E0;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; // /vendor/overlay&#x4FDD;&#x5B58;&#x5382;&#x5546;&#x63D0;&#x4F9B;&#x7684;&#x8986;&#x76D6;&#x5305; File vendorOverlayDir = new File(VENDOR_OVERLAY_DIR); scanDirLI(vendorOverlayDir, PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR, scanFlags | SCAN_TRUSTED_OVERLAY, 0); // /system/framework&#x4FDD;&#x5B58;&#x4E0D;&#x542B;&#x4EE3;&#x7801;&#x7684;&#x8D44;&#x6E90;&#x5305; // Find base frameworks (resource packages without code). scanDirLI(frameworkDir, PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR | PackageParser.PARSE_IS_PRIVILEGED, scanFlags | SCAN_NO_DEX, 0); // /system/priv-app &#x6709;&#x7279;&#x6743;&#x7684;&#x7CFB;&#x7EDF;&#x5305; // Collected privileged system packages. final File privilegedAppDir = new File(Environment.getRootDirectory(), &quot;priv-app&quot;); scanDirLI(privilegedAppDir, PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR | PackageParser.PARSE_IS_PRIVILEGED, scanFlags, 0); // /system/app &#x7CFB;&#x7EDF;&#x81EA;&#x5E26;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; // Collect ordinary system packages. final File systemAppDir = new File(Environment.getRootDirectory(), &quot;app&quot;); scanDirLI(systemAppDir, PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR, scanFlags, 0); // /vendor/app &#x8BBE;&#x5907;&#x5382;&#x5546;&#x63D0;&#x4F9B;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; // Collect all vendor packages. File vendorAppDir = new File(&quot;/vendor/app&quot;); try { vendorAppDir = vendorAppDir.getCanonicalFile(); } catch (IOException e) {...} scanDirLI(vendorAppDir, PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR, scanFlags, 0); // /oem/app &#x6240;&#x6709;OEM&#x5305; // Collect all OEM packages. final File oemAppDir = new File(Environment.getOemDirectory(), &quot;app&quot;); scanDirLI(oemAppDir, PackageParser.PARSE_IS_SYSTEM | PackageParser.PARSE_IS_SYSTEM_DIR, scanFlags, 0); ... ... int updateFlags = UPDATE_PERMISSIONS_ALL; if (ver.sdkVersion != mSdkVersion) { ... ... updateFlags |= UPDATE_PERMISSIONS_REPLACE_PKG | UPDATE_PERMISSIONS_REPLACE_ALL; } // &#x1F3C1;Step23: &#x4E3A;&#x7533;&#x8BF7;&#x4E86;&#x7279;&#x5B9A;&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x7684;app&#x5206;&#x914D;&#x76F8;&#x5E94;&#x7684;Linux&#x7528;&#x6237;&#x7EC4;ID updatePermissionsLPw(null, null, StorageManager.UUID_PRIVATE_INTERNAL, updateFlags); ver.sdkVersion = mSdkVersion; ... ... // can downgrade to reader mSettings.writeLPr(); // &#x1F3C1;Step24: &#x628A;&#x524D;&#x9762;&#x83B7;&#x5F97;&#x7684;app&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x56DE;&#x914D;&#x7F6E;&#x6587;&#x4EF6; ... ... } Step3: Settings.readLPw(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374// frameworks/base/services/core/java/com/android/server/pm/Settings.java// :346 Settings(File dataDir, Object lock) { ... ... mSystemDir = new File(dataDir, &quot;system&quot;); mSystemDir.mkdirs(); ... ... mSettingsFilename = new File(mSystemDir, &quot;packages.xml&quot;); mBackupSettingsFilename = new File(mSystemDir, &quot;packages-backup.xml&quot;); ... ... }// :2500 boolean readLPw(PackageManagerService service, List&lt;UserInfo&gt; users, int sdkVersion, boolean onlyCore) { FileInputStream str = null; if (mBackupSettingsFilename.exists()) { try { // &#x4F18;&#x5148;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x7684;&#x5907;&#x4EFD;&#x6587;&#x4EF6;/data/system/packages-backup.xml str = new FileInputStream(mBackupSettingsFilename); ... ... } catch (java.io.IOException e) {...} } ... ... try { // &#x1F3C1;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x6587;&#x4EF6;/data/system/packages.xml if (str == null) { ... ... str = new FileInputStream(mSettingsFilename); } XmlPullParser parser = Xml.newPullParser(); // &#x89E3;&#x6790;&#x914D;&#x7F6E;&#x6587;&#x4EF6; parser.setInput(str, StandardCharsets.UTF_8.name()); int type; ... ... int outerDepth = parser.getDepth(); while ((type = parser.next()) != XmlPullParser.END_DOCUMENT &amp;&amp; (type != XmlPullParser.END_TAG || parser.getDepth() &gt; outerDepth)) { ... ... String tagName = parser.getName(); // &#x6B64;&#x5904;&#x53EA;&#x5173;&#x6CE8;&#x4E0E;app&#x7684;Linux&#x7528;&#x6237;ID&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F; if (tagName.equals(&quot;package&quot;)) { // &#x1F3C1;Step4: &#x8BE5;&#x6807;&#x7B7E;&#x63CF;&#x8FF0;&#x4E0A;&#x4E00;&#x6B21;&#x5B89;&#x88C5;&#x7684;app&#x4FE1;&#x606F; readPackageLPw(parser); } else if (tagName.equals(&quot;shared-user&quot;)) { // &#x1F3C1;Step5: &#x63CF;&#x8FF0;&#x4E0A;&#x4E00;&#x6B21;&#x5B89;&#x88C5;app&#x65F6;&#x5206;&#x914D;&#x7684;&#x5171;&#x4EAB;Linux&#x7528;&#x6237;ID readSharedUserLPw(parser); } ... ... } str.close(); } catch ... ... ... // &#x89E3;&#x6790;&#x5B8C;app&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4E2D;&#x7684;&#x5171;&#x4EAB;Linux&#x7528;&#x6237;&#x4FE1;&#x606F;&#x540E;&#xFF0C;&#x518D;&#x4E3A;&#x5B83;&#x4EEC;&#x4FDD;&#x7559;&#x4E0A;&#x4E00;&#x6B21;&#x6240;&#x4F7F;&#x7528;&#x7684;Linux UID final int N = mPendingPackages.size(); for (int i = 0; i &lt; N; i++) { // &#x904D;&#x5386;mPendingPackage final PendingPackage pp = mPendingPackages.get(i); Object idObj = getUserIdLPr(pp.sharedId); // &#x5982;&#x679C;sharedId&#x5B58;&#x5728;&#x76F8;&#x5E94;&#x7684;SharedUserSetting&#x8BB0;&#x5F55;&#xFF0C;&#x8BF4;&#x660E;pp&#x6240;&#x63CF;&#x8FF0;&#x7684;app&#x4E0A;&#x6B21; // &#x6240;&#x4F7F;&#x7528;&#x7684;LinuxUID&#x662F;&#x6709;&#x6548;&#x7684; if (idObj != null &amp;&amp; idObj instanceof SharedUserSetting) { // &#x1F3C1;&#x4E3A;&#x5B83;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;PackageSetting&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5728;mPackage&#x4E2D; PackageSetting p = getPackageLPw(pp.name, null, pp.realName, (SharedUserSetting) idObj, pp.codePath, pp.resourcePath, pp.legacyNativeLibraryPathString, pp.primaryCpuAbiString, pp.secondaryCpuAbiString, pp.versionCode, pp.pkgFlags, pp.pkgPrivateFlags, null, true /* add */, false /* allowInstall */); ... ... p.copyFrom(pp); } ... ... } mPendingPackages.clear(); ... ... return true; } /data/system/packages.xml&#x5185;&#x5BB9; /data/system/packages.xml&#x7684;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos; standalone=&apos;yes&apos; ?&gt;&lt;packages&gt; &lt;version sdkVersion=&quot;23&quot; databaseVersion=&quot;3&quot; fingerprint=&quot;Android/aosp_arm/generic:6.0.1/MMB29Q/palance09252259:eng/debug,test-keys&quot; /&gt; &lt;version volumeUuid=&quot;primary_physical&quot; sdkVersion=&quot;23&quot; databaseVersion=&quot;3&quot; fingerprint=&quot;Android/aosp_arm/generic:6.0.1/MMB29Q/palance09252259:eng/debug,test-keys&quot; /&gt; &lt;permission-trees /&gt; &lt;permissions&gt; &lt;item name=&quot;android.permission.REAL_GET_TASKS&quot; package=&quot;android&quot; protection=&quot;18&quot; /&gt; ... ... &lt;item name=&quot;android.permission.REMOTE_AUDIO_PLAYBACK&quot; package=&quot;android&quot; protection=&quot;2&quot; /&gt; &lt;/permissions&gt; &lt;!-- package&#x90E8;&#x5206;&#xFF0C;&#x63CF;&#x8FF0;app&#x7684;&#x4FE1;&#x606F; --&gt; &lt;!-- name: package&#x540D;&#x79F0; --&gt; &lt;!-- userId: app&#x7684;&#x72EC;&#x7ACB;UID --&gt; &lt;!-- sharedUserId: app&#x7684;&#x5171;&#x4EAB;UID --&gt; &lt;package name=&quot;com.android.providers.telephony&quot; codePath=&quot;/system/priv-app/TelephonyProvider&quot; nativeLibraryPath=&quot;/system/priv-app/TelephonyProvider/lib&quot; publicFlags=&quot;940064261&quot; privateFlags=&quot;8&quot; ft=&quot;15761def440&quot; it=&quot;15761def440&quot; ut=&quot;15761def440&quot; version=&quot;23&quot; sharedUserId=&quot;1001&quot;&gt; &lt;sigs count=&quot;1&quot;&gt; &lt;cert index=&quot;0&quot; key=&quot;308204a... ...&quot; /&gt; &lt;/sigs&gt; &lt;perms&gt; &lt;item name=&quot;android.permission.WRITE_SETTINGS&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; &lt;item name=&quot;android.permission.MODIFY_AUDIO_SETTINGS&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; ... ... &lt;/perms&gt; &lt;proper-signing-keyset identifier=&quot;1&quot; /&gt; &lt;/package&gt; ... ... &lt;package name=&quot;com.sohu.inputmethod.sogou&quot; codePath=&quot;/data/app/com.sohu.inputmethod.sogou-1&quot; nativeLibraryPath=&quot;/data/app/com.sohu.inputmethod.sogou-1/lib&quot; primaryCpuAbi=&quot;armeabi&quot; publicFlags=&quot;940064324&quot; privateFlags=&quot;0&quot; ft=&quot;157cd4e7e80&quot; it=&quot;157cd4ea0d6&quot; ut=&quot;157cd4ea0d6&quot; version=&quot;590&quot; userId=&quot;10053&quot;&gt; &lt;sigs count=&quot;1&quot;&gt; &lt;cert index=&quot;3&quot; key=&quot;308202... ...&quot; /&gt; &lt;/sigs&gt; &lt;perms&gt; &lt;item name=&quot;android.permission.EXPAND_STATUS_BAR&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; &lt;item name=&quot;com.android.launcher.permission.UNINSTALL_SHORTCUT&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; &lt;item name=&quot;android.permission.INTERNET&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; ... ... &lt;/perms&gt; &lt;proper-signing-keyset identifier=&quot;5&quot; /&gt; &lt;/package&gt; ... ... &lt;!-- shared-user&#x90E8;&#x5206;&#xFF0C;&#x63CF;&#x8FF0;&#x5B89;&#x88C5;app&#x65F6;&#x5206;&#x914D;&#x7684;&#x5171;&#x4EAB;UID --&gt; &lt;!-- name: &#x5171;&#x4EAB;&#x7684;Linux&#x7528;&#x6237;&#x540D;&#x79F0; --&gt; &lt;!-- userId: &#x5171;&#x4EAB;&#x7684;Linux UID --&gt; &lt;!-- system: &#x8BE5;UID&#x662F;&#x5206;&#x914D;&#x7ED9;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x7C7B;&#x578B;&#x7684;app&#x4F7F;&#x7528;&#xFF0C;&#x8FD8;&#x662F;&#x7528;&#x6237;&#x7C7B;&#x578B;&#x7684;app&#x4F7F;&#x7528; --&gt; &lt;shared-user name=&quot;android.media&quot; userId=&quot;10006&quot;&gt; &lt;sigs count=&quot;1&quot;&gt; &lt;cert index=&quot;2&quot; /&gt; &lt;/sigs&gt; &lt;perms&gt; &lt;item name=&quot;android.permission.ACCESS_CACHE_FILESYSTEM&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; &lt;item name=&quot;android.permission.WRITE_SETTINGS&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; ... ... &lt;/perms&gt; &lt;/shared-user&gt; &lt;shared-user name=&quot;android.uid.shared&quot; userId=&quot;10002&quot;&gt; &lt;sigs count=&quot;1&quot;&gt; &lt;cert index=&quot;4&quot; /&gt; &lt;/sigs&gt; &lt;perms&gt; &lt;item name=&quot;android.permission.WRITE_SETTINGS&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; &lt;item name=&quot;android.permission.USE_CREDENTIALS&quot; granted=&quot;true&quot; flags=&quot;0&quot; /&gt; ... ... &lt;/perms&gt; &lt;/shared-user&gt; &lt;keyset-settings version=&quot;1&quot;&gt; &lt;keys&gt; &lt;public-key identifier=&quot;1&quot; value=&quot;MIIBI... ...&quot; /&gt; &lt;public-key identifier=&quot;2&quot; value=&quot;MIIBIDANBg... ...&quot; /&gt; ... ... &lt;/keys&gt; &lt;keysets&gt; &lt;keyset identifier=&quot;1&quot;&gt; &lt;key-id identifier=&quot;1&quot; /&gt; &lt;/keyset&gt; &lt;keyset identifier=&quot;2&quot;&gt; &lt;key-id identifier=&quot;2&quot; /&gt; &lt;/keyset&gt; ... ... &lt;/keysets&gt; &lt;lastIssuedKeyId value=&quot;5&quot; /&gt; &lt;lastIssuedKeySetId value=&quot;5&quot; /&gt; &lt;/keyset-settings&gt;&lt;/packages&gt; Step4: Settings::readPackageLPw(...) &#x8FD9;&#x91CC;&#x5173;&#x6CE8;&#x6807;&#x7B7E;&quot;package&quot;&#x7684;&#x4E09;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A; * name &#x63CF;&#x8FF0;app&#x7684;Package&#x540D;&#x79F0; * userId &#x63CF;&#x8FF0;&#x8BE5;app&#x6240;&#x4F7F;&#x7528;&#x7684;uid * sharedUserId &#x63CF;&#x8FF0;&#x8BE5;app&#x6240;&#x4F7F;&#x7528;&#x7684;shared uid 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758// frameworks/base/services/core/java/com/android/server/pm/Settings.java// :336 private final ArrayList&lt;PendingPackage&gt; mPendingPackages = new ArrayList&lt;PendingPackage&gt;();// :3256 private void readPackageLPw(XmlPullParser parser) throws XmlPullParserException, IOException { String name = null; ... ... String idStr = null; String sharedIdStr = null; ... ... try { // app&#x7684;Package&#x540D;&#x79F0; name = parser.getAttributeValue(null, ATTR_NAME); ... ... // &#x8BE5;app&#x6240;&#x4F7F;&#x7528;&#x7684;uid idStr = parser.getAttributeValue(null, &quot;userId&quot;); ... ... // &#x8BE5;app&#x6240;&#x4F7F;&#x7528;&#x7684;shared uid sharedIdStr = parser.getAttributeValue(null, &quot;sharedUserId&quot;); ... ... int userId = idStr != null ? Integer.parseInt(idStr) : 0; ... ... if (name == null) { ... } // &#x8BE5;&#x5B57;&#x6BB5;&#x5FC5;&#x987B;&#x5B58;&#x5728; ... ... else if (userId &gt; 0) { packageSetting = addPackageLPw(name.intern(), realName, new File(codePathStr), new File(resourcePathStr), legacyNativeLibraryPathStr, primaryCpuAbiString, secondaryCpuAbiString, cpuAbiOverrideString, userId, versionCode, pkgFlags, pkgPrivateFlags); // &#x1F3C1;&#x5C06;&#x8BFB;&#x53D6;&#x5230;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x548C;uid&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5230;&#x5185;&#x5B58;&#x6570;&#x636E;&#x7ED3;&#x6784; ... ... packageSetting.setTimeStamp(timeStamp); packageSetting.firstInstallTime = firstInstallTime; packageSetting.lastUpdateTime = lastUpdateTime; ... ... } else if (sharedIdStr != null) { // &#x5982;&#x679C;sharedIdStr&#x975E;&#x7A7A;&#xFF0C;&#x8BF4;&#x660E;&#x4E0A;&#x6B21;&#x5E76;&#x6CA1;&#x6709;&#x7ED9;&#x4ED6;&#x5206;&#x914D;&#x72EC;&#x7ACB;Linux&#x7528;&#x6237;ID&#xFF0C; // &#x800C;&#x662F;&#x8BA9;&#x5B83;&#x4E0E;&#x5176;&#x5B83;app&#x5171;&#x4EAB;&#x540C;&#x4E00;&#x4E2A;Linux&#x7528;&#x6237;ID&#x3002;&#x6B64;&#x65F6;&#x4E0D;&#x80FD;&#x9A6C;&#x4E0A;&#x4E3A;&#x5B83;&#x4FDD;&#x7559;&#x4E0A;&#x6B21;&#x4F7F;&#x7528;&#x7684; // Linux&#x7528;&#x6237;ID&#xFF0C;&#x56E0;&#x4E3A;&#x8BE5;ID&#x5B9E;&#x9645;&#x662F;&#x522B;&#x7684;app&#x6240;&#x6709;&#xFF0C;&#x6B64;&#x65F6;&#x53EF;&#x80FD;&#x662F;&#x65E0;&#x6548;&#x7684;&#x3002; userId = sharedIdStr != null ? Integer.parseInt(sharedIdStr) : 0; if (userId &gt; 0) { // &#x4E3A;&#x4E4B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;PendingPackage&#xFF0C;&#x8868;&#x793A;&#x8BE5;Linux&#x7528;&#x6237;ID&#x8FD8;&#x672A;&#x786E;&#x5B9A; // &#x9700;&#x8981;&#x7B49;&#x5230;PackageManagerService&#x89E3;&#x6790;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x624D;&#x80FD;&#x624D;&#x80FD;&#x786E;&#x8BA4;&#x4FDD;&#x5B58;&#x5728; // mPendingPackages&#x4E2D;&#x7684;ID&#x662F;&#x5426;&#x6709;&#x6548;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x6548;&#xFF0C; // PackageManagerService&#x624D;&#x4F1A;&#x4E3A;&#x5B83;&#x4EEC;&#x4FDD;&#x7559;&#x4E0A;&#x4E00;&#x6B21;&#x6240;&#x4F7F;&#x7528;&#x7684;Linux&#x7528;&#x6237;ID packageSetting = new PendingPackage(name.intern(), realName, new File( codePathStr), new File(resourcePathStr), legacyNativeLibraryPathStr, primaryCpuAbiString, secondaryCpuAbiString, cpuAbiOverrideString, userId, versionCode, pkgFlags, pkgPrivateFlags); packageSetting.setTimeStamp(timeStamp); packageSetting.firstInstallTime = firstInstallTime; packageSetting.lastUpdateTime = lastUpdateTime; mPendingPackages.add((PendingPackage) packageSetting); ... ... } ... ... } else {...} } catch (NumberFormatException e) {...} ... ... } Step5: Settings::addPackageLPw(...) 1234567891011121314151617181920212223// frameworks/base/services/core/java/com/android/server/pm/Settings.java:474 PackageSetting addPackageLPw(String name, String realName, File codePath, File resourcePath, String legacyNativeLibraryPathString, String primaryCpuAbiString, String secondaryCpuAbiString, String cpuAbiOverrideString, int uid, int vc, int pkgFlags, int pkgPrivateFlags) { PackageSetting p = mPackages.get(name); // &#x6839;&#x636E;&#x5305;&#x540D;&#x627E;&#x5230;&#x5DF2;&#x8BB0;&#x5F55;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F; if (p != null) { if (p.appId == uid) { return p; } ... ... return null; } // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5219;&#x521B;&#x5EFA;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x7684;uid p = new PackageSetting(name, realName, codePath, resourcePath, legacyNativeLibraryPathString, primaryCpuAbiString, secondaryCpuAbiString, cpuAbiOverrideString, vc, pkgFlags, pkgPrivateFlags); p.appId = uid; if (addUserIdLPw(uid, p, name)) { // &#x1F3C1;&#x4FDD;&#x5B58;uid&#x4FE1;&#x606F; mPackages.put(name, p); // &#x5C06;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5230;mPackages return p; } return null; } Step6: Settings::addUserIdLPw(...) 123456789101112131415161718192021222324252627282930// frameworks/base/services/core/java/com/android/server/pm/Settings.java:967 private boolean addUserIdLPw(int uid, Object obj, Object name) { // &#x68C0;&#x67E5;uid&#x7684;&#x5408;&#x6CD5;&#x6027; if (uid &gt; Process.LAST_APPLICATION_UID) { return false; } if (uid &gt;= Process.FIRST_APPLICATION_UID) { // mUserIds&#x662F;&#x4EE5;UID&#x4E3A;&#x7D22;&#x5F15;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x5982;&#x679C;&#x6307;&#x5B9A;uid&#x6BD4;&#x5B83;&#x7684;&#x5BB9;&#x91CF;&#x5927;&#xFF0C;&#x5219;&#x7528;null&#x586B;&#x5145; int N = mUserIds.size(); final int index = uid - Process.FIRST_APPLICATION_UID; while (index &gt;= N) { mUserIds.add(null); N++; } if (mUserIds.get(index) != null) { // &#x6307;&#x5B9A;uid&#x5DF2;&#x5B58;&#x5728; ... ... return false; } mUserIds.set(index, obj); } else { // mOtherUserIds&#x662F;&#x5DF2;&#x5206;&#x914D;&#x7ED9;&#x7279;&#x6743;&#x7528;&#x6237;&#x7684;UID&#x7684;&#x7A00;&#x758F;&#x6570;&#x7EC4; if (mOtherUserIds.get(uid) != null) { // &#x5982;&#x679C;&#x5DF2;&#x5206;&#x914D;&#xFF0C;&#x5219;&#x8FD4;&#x56DE; ... ... return false; } mOtherUserIds.put(uid, obj); } return true; } &#x533A;&#x95F4; [FIRST_APPLICATION_UID, FIRST_APPLICATION_UID + MAX_APPLICATION_UIDS) &#x4E2D;&#x7684;UID&#x662F;&#x4FDD;&#x7559;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#xFF0C; (0, FIRST_APPLICATION_UID)&#x662F;&#x7559;&#x7ED9;&#x7279;&#x6743;&#x7528;&#x6237;&#x7684;&#x3002; FIRST_APPLICATION_UID=10000, MAX_APPLICATION_UIDS=1000&#x3002; Step5&#x628A;&#x4ECE;/data/system/packages.xml&#x4E2D;&#x8BFB;&#x53D6;&#x5230;&#x7684;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4FDD;&#x5B58;&#x5230;mPackageSetting&#x5BF9;&#x8C61;&#x4E2D;&#xFF0C;&#x5E76;&#x5C06;&#x6B64;&#x5BF9;&#x8C61;&#x4EE5;&#x5305;&#x540D;&#x4E3A;key&#x4FDD;&#x5B58;&#x5230;mPackages&#x4E2D;&#xFF1B;Step6&#x628A;&#x6B64;&#x5305;&#x4F7F;&#x7528;&#x7684;uid&#x4FDD;&#x5B58;&#x5230;mUserIds&#x4E2D;&#xFF0C;&#x5E76;&#x5173;&#x8054;&#x5230;&#x5BF9;&#x5E94;&#x7684;PackageSetting&#x5BF9;&#x8C61;&#x3002; &#x5728;Step4&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8BB0;&#x5F55;&#x5B89;&#x88C5;&#x5305;&#x88AB;&#x5206;&#x914D;&#x4E86;&#x72EC;&#x7ACB;&#x7684;uid&#xFF0C;&#x5C31;&#x8D70;&#x4EE5;&#x4E0A;&#x7684;&#x903B;&#x8F91;&#x5206;&#x652F;&#xFF1B;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x72EC;&#x7ACB;uid&#xFF0C;&#x800C;&#x662F;&#x88AB;&#x5206;&#x914D;&#x4E86;shared uid&#xFF0C;&#x5219;&#x8D70;&#x53E6;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x5206;&#x652F;&#xFF0C;&#x5C06;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x6682;&#x65F6;&#x5C01;&#x88C5;&#x4E3A;PendingPackage&#x5BF9;&#x8C61;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mPendingPackages&#xFF0C;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x7528;&#x5230;&#x3002; &#x56DE;&#x5230;Step3&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;readPackageLPw(...)&#x8BFB;&#x53D6;&#x4E86;app&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x4E4B;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8C03;&#x7528;readSharedUserLPw(...)&#x8BFB;&#x53D6;&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x7684;shared uid&#x3002; Step7: Settings::readSharedUserLPw(...) &#x8FD9;&#x91CC;&#x5173;&#x6CE8;&#x6807;&#x7B7E;&#x201C;shared-user&#x201D;&#x7684;&#x4E09;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A; * name: shared uid&#x7684;&#x540D;&#x79F0; * userId: shared uid * system: &#x6B64;uid&#x662F;&#x5426;&#x5206;&#x914D;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528; 12345678910111213141516171819202122232425// frameworks/base/services/core/java/com/android/server/pm/Settings.java:3605 private void readSharedUserLPw(XmlPullParser parser) throws XmlPullParserException,IOException { String name = null; String idStr = null; int pkgFlags = 0; int pkgPrivateFlags = 0; SharedUserSetting su = null; try { name = parser.getAttributeValue(null, ATTR_NAME); // shared uid&#x5BF9;&#x5E94;&#x7684;&#x540D;&#x79F0; idStr = parser.getAttributeValue(null, &quot;userId&quot;); // shared uid int userId = idStr != null ? Integer.parseInt(idStr) : 0;//shared uid=&gt;int // &#x6B64;uid&#x662F;&#x5426;&#x5206;&#x914D;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x7C7B;&#x578B;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528; if (&quot;true&quot;.equals(parser.getAttributeValue(null, &quot;system&quot;))) { pkgFlags |= ApplicationInfo.FLAG_SYSTEM; } if (name == null) { ... }// name&#x548C;uid&#x90FD;&#x5FC5;&#x987B;&#x5B58;&#x5728; else if (userId == 0) { ... } else { // &#x1F3C1;&#x4FDD;&#x5B58;shared uid&#x4FE1;&#x606F; if ((su = addSharedUserLPw(name.intern(), userId, pkgFlags, pkgPrivateFlags)) == null) { ... } } } catch (NumberFormatException e) { ... } ... ... } Step8: Settings::addSharedUserLPw(...) 1234567891011121314151617181920// frameworks/base/services/core/java/com/android/server/pm/Settings.java:497 SharedUserSetting addSharedUserLPw(String name, int uid, int pkgFlags, int pkgPrivateFlags) { // &#x6BCF;&#x4E2A;&#x5171;&#x4EAB;Linux&#x7528;&#x6237;&#x90FD;&#x7531;&#x4E00;&#x4E2A;SharedUserSetting&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x4EE5;name&#x4E3A;key&#x4FDD;&#x5B58;&#x5728;mSharedUsers SharedUserSetting s = mSharedUsers.get(name); if (s != null) { if (s.userId == uid) { return s; // &#x8BF4;&#x660E;&#x5DF2;&#x7ECF;&#x4E3A;&#x8BE5;name&#x7684;&#x7528;&#x6237;&#x5206;&#x914D;&#x4E86;&#x6307;&#x5B9A;&#x7684;uid } ... ... return null; } // &#x4E0D;&#x5B58;&#x5728;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;&#x5171;&#x4EAB;&#x7528;&#x6237;&#xFF0C;&#x5219;&#x521B;&#x5EFA; s = new SharedUserSetting(name, pkgFlags, pkgPrivateFlags); s.userId = uid; if (addUserIdLPw(uid, s, name)) { // &#x89C1;Step6&#xFF0C;&#x628A;uid&#x4FDD;&#x5B58;&#x5230;mUserIds&#xFF0C;&#x5E76;&#x5173;&#x8054;&#x5230;s mSharedUsers.put(name, s); // &#x5C06;s&#x4FDD;&#x5B58;&#x5230;mSharedUsers return s; } return null; } Step8&#x5C06;&#x4ECE;/data/system/packages.xml&#x4E2D;&#x8BFB;&#x53D6;&#x5230;&#x7684;shared-user&#x4FE1;&#x606F;&#x5C01;&#x88C5;&#x4E3A;SharedUserSetting&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4EE5;shared uid&#x7684;&#x540D;&#x79F0;&#x4E3A;key&#x4FDD;&#x5B58;&#x5230;mSharedUser&#x4E2D;&#xFF1B;&#x5C06;shared uid&#x4FDD;&#x5B58;&#x5230;mUserIds&#x4E2D;&#xFF0C;&#x5E76;&#x5173;&#x8054;&#x5230;&#x8BE5;SharedUserSetting&#x5BF9;&#x8C61;&#x3002; &#x81F3;&#x6B64;&#x5C31;&#x5B8C;&#x6210;&#x4E86;packages.xml&#x6587;&#x4EF6;&#x7684;&#x52A0;&#x8F7D;&#xFF1A; * &#x5BF9;&#x4E8E;&#x201C;package&#x201D;&#x6807;&#x7B7E;&#x8BB0;&#x5F55;&#x7684;app&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#xFF0C;&#x6709;&#x72EC;&#x7ACB;uid&#x7684;app&#x4FE1;&#x606F;&#xFF0C;&#x5C01;&#x88C5;&#x4E3A;PackageSetting&#x5BF9;&#x8C61;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mPackages&#x4E2D;&#xFF1B;&#x6709;shareduid&#x7684;app&#xFF0C;&#x5C01;&#x88C5;&#x4E3A;PendingPackage&#x5BF9;&#x8C61;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mPendingPackages&#x4E2D; * &#x5BF9;&#x4E8E;&#x201C;shared-user&#x201D;&#x6807;&#x7B7E;&#x8BB0;&#x5F55;&#x7684;shared uid&#x4FE1;&#x606F;&#xFF0C;&#x5C01;&#x88C5;&#x4E3A;SharedUserSetting&#x5BF9;&#x8C61;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mSharedUser&#x4E2D; * &#x5728;&#x6B64;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;uid&#x548C;shared uid&#x90FD;&#x4FDD;&#x5B58;&#x5728;mUserIds&#x4E2D;&#xFF0C;&#x5E76;&#x8BA9;&#x6BCF;&#x4E2A;uid&#x6307;&#x5411;&#x4E0E;&#x4E4B;&#x5173;&#x8054;&#x7684;PackageSetting&#x5BF9;&#x8C61;&#x6216;SharedUserSetting&#x5BF9;&#x8C61;&#x3002; &#x672C;&#x6B65;&#x5B8C;&#x6210;&#x540E;&#x56DE;&#x5230;Step3&#xFF0C;&#x5B8C;&#x6210;&#x5171;&#x4EAB;Linux&#x7528;&#x6237;&#x4FE1;&#x606F;&#x7684;&#x8BFB;&#x53D6;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x4E3A;&#x4FDD;&#x5B58;&#x5728;mPendingPackage&#x4E2D;&#x7684;app&#x4FDD;&#x7559;&#x4ED6;&#x4EEC;&#x4E0A;&#x4E00;&#x6B21;&#x6240;&#x4F7F;&#x7528;&#x7684;Linux UID&#x4E86;&#x3002;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x5230;Step2&#xFF0C;readLPw(...)&#x5B8C;&#x6210;&#x6062;&#x590D;&#x4E0A;&#x4E00;&#x6B21;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5B89;&#x88C5;&#x4FE1;&#x606F;&#x7684;&#x8BFB;&#x53D6;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8C03;&#x7528;scanDirLI&#x6765;&#x5B89;&#x88C5;&#x4FDD;&#x5B58;&#x5728;/system/framework&#x3001;/system/app&#x3001;/vendor/app&#x3001;/data/app&#x548C;/data/app-private&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>安装过程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2016年10月DayDayUp]]></title>
    <url>%2F2016%2F10%2F21%2F2016%2F10DayDayUp%2F</url>
    <content type="text"><![CDATA[25&#x65E5; &#x661F;&#x671F;&#x4E8C; Android&#x5B66;&#x4E60;&#x7B14;&#x8BB0; &#x6700;&#x8FD1;&#x5B66;&#x4E60;&#x4E86;Android&#x201C;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x201D;&#x3001;&#x201C;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x201D;&#xFF0C;&#x8FD9;&#x51E0;&#x5929;&#x6B63;&#x5728;&#x770B;&#x201C;Activity&#x201D;&#x7684;&#x542F;&#x52A8;&#x3002;&#x548C;&#x4E0A;&#x534A;&#x5E74;&#x76F8;&#x6BD4;&#xFF0C;&#x8FD1;&#x671F;&#x7684;&#x5B66;&#x4E60;&#x901F;&#x5EA6;&#x52A0;&#x5FEB;&#x4E86;&#xFF0C;&#x65B9;&#x6CD5;&#x4E0A;&#x4E5F;&#x6709;&#x4E86;&#x4E00;&#x4E9B;&#x6539;&#x8FDB;&#x3002;&#x73B0;&#x5728;&#x62FF;&#x4E0B;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x5206;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; &#x4E00;&#x3001;&#x628A;&#x300A;Android&#x7CFB;&#x7EDF;&#x6E90;&#x4EE3;&#x7801;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x76F8;&#x5173;&#x7AE0;&#x8282;&#x5FEB;&#x901F;&#x8BFB;&#x4E00;&#x904D;&#x3002;&#x8BFB;&#x8FD9;&#x4E00;&#x904D;&#x7684;&#x76EE;&#x7684;&#x5728;&#x4E8E;&#x8BA9;&#x91CD;&#x8981;&#x7684;&#x6982;&#x5FF5;&#x5728;&#x8111;&#x5B50;&#x91CC;&#x7559;&#x4E0B;&#x5370;&#x8C61;&#xFF0C;&#x4E00;&#x904D;&#x5C31;&#x60F3;&#x5B8C;&#x5168;&#x7406;&#x89E3;&#x662F;&#x4E0D;&#x592A;&#x53EF;&#x80FD;&#x7684;&#xFF0C;&#x4F46;&#x5728;&#x8111;&#x5B50;&#x91CC;&#x7559;&#x4E0B;&#x7684;&#x5370;&#x8FF9;&#x80FD;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x5730;&#x5E2E;&#x52A9;&#x540E;&#x9762;&#x9605;&#x8BFB;&#x4EE3;&#x7801;&#x3002; &#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x8981;&#x505A;&#x597D;&#x6807;&#x8BB0;&#x548C;&#x7B14;&#x8BB0;&#xFF0C;&#x8001;&#x7F57;&#x8FD9;&#x672C;&#x4E66;&#x975E;&#x5E38;&#x68D2;&#xFF0C;&#x4F46;&#x662F;&#x6587;&#x7B14;&#x4E0A;&#x6709;&#x70B9;&#x5570;&#x55E6;&#xFF0C;&#x6807;&#x8BB0;&#x662F;&#x8981;&#x628A;&#x91CD;&#x70B9;&#x7B5B;&#x51FA;&#x6765;&#xFF0C;&#x628A;&#x6587;&#x5B57;&#x76F4;&#x63A5;&#x5BF9;&#x5E94;&#x5230;&#x5B83;&#x6240;&#x8BB2;&#x89E3;&#x7684;&#x4EE3;&#x7801;&#x4E0A;&#x53BB;&#xFF0C;&#x8FD9;&#x6837;&#x8BFB;&#x4E00;&#x904D;&#x4EE3;&#x7801;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x770B;&#x7740;&#x6587;&#x5B57;&#x518D;&#x53BB;&#x627E;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x9057;&#x61BE;&#x5C31;&#x662F;Android&#x7248;&#x672C;&#x8FC7;&#x4F4E;&#xFF0C;&#x6709;&#x4E9B;&#x4EE3;&#x7801;&#x6CA7;&#x6D77;&#x6851;&#x7530;&#xFF0C;&#x8BFB;&#x8FD9;&#x672C;&#x4E66;&#x5C31;&#x50CF;&#x8DDF;&#x65F6;&#x95F4;&#x8D5B;&#x8DD1;&#x2014;&#x2014;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x6D41;&#x5931;&#x5C06;&#x8D8A;&#x6765;&#x8D8A;&#x843D;&#x540E;&#x4E8E;Android&#x7684;&#x6700;&#x65B0;&#x7248;&#x672C;&#xFF0C;&#x9605;&#x8BFB;&#x7684;&#x56F0;&#x96BE;&#x4E5F;&#x5C31;&#x8D8A;&#x5927;&#x3002; &#x4E8C;&#x3001;&#x6DF1;&#x5165;&#x5230;&#x6700;&#x65B0;&#x7684;Android&#x4EE3;&#x7801;&#x4E2D;&#x53BB;&#x3002;&#x505A;&#x8FD9;&#x4E00;&#x6B65;&#x4E5F;&#x79BB;&#x4E0D;&#x5F00;&#x300A;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#x8FD9;&#x672C;&#x4E66;&#xFF0C;&#x6211;&#x628A;&#x4E66;&#x5F53;&#x505A;&#x5411;&#x5BFC;&#xFF0C;&#x6309;&#x7167;&#x4F5C;&#x8005;&#x7684;&#x601D;&#x8DEF;&#x53BB;&#x627E;&#x4EE3;&#x7801;&#x3002;&#x64B8;&#x7801;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x5F88;&#x53EF;&#x80FD;&#x906D;&#x9047;&#x201C;&#x6B64;&#x8DEF;&#x4E0D;&#x901A;&#x201D;&#x7684;&#x60C5;&#x51B5;&#x2014;&#x2014;&#x4E66;&#x91CC;&#x7684;&#x5185;&#x5BB9;&#x5728;&#x5B9E;&#x9645;&#x4EE3;&#x7801;&#x4E2D;&#x88AB;&#x91CD;&#x6784;&#x4E86;&#x3002;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x9605;&#x8BFB;&#x6E90;&#x7801;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x627E;&#x4E3B;&#x5E72;&#x3001;&#x53BB;&#x672B;&#x68A2;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5E26;&#x7740;&#x5728;&#x7B2C;&#x4E00;&#x6B65;&#x4E2D;&#x6536;&#x83B7;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4E66;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x5728;&#x6E90;&#x7801;&#x4E2D;&#x65F6;&#x9690;&#x65F6;&#x73B0;&#xFF0C;&#x8FD9;&#x4E9B;&#x8E2A;&#x8FF9;&#x8DB3;&#x591F;&#x81EA;&#x5DF1;&#x5728;&#x6E90;&#x7801;&#x4E2D;&#x5BFB;&#x627E;&#x4E3B;&#x5E72;&#x4E86;&#x3002; &#x5728;&#x8FD9;&#x4E00;&#x6B65;&#x8981;&#x505A;&#x597D;&#x8BB0;&#x5F55;&#xFF0C;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x5C31;&#x662F;&#x5728;&#x8FD9;&#x4E2A;&#x73AF;&#x8282;&#x4E2D;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x6211;&#x628A;&#x6E90;&#x7801;&#x62F7;&#x8D1D;&#x5230;&#x7B14;&#x8BB0;&#x4E2D;&#xFF0C;&#x780D;&#x6389;&#x7EC6;&#x8282;&#x53EA;&#x7559;&#x4E3B;&#x5E72;&#x2014;&#x2014;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x5C31;&#x662F;&#x9605;&#x8BFB;&#x6E90;&#x7801;&#x7684;&#x672C;&#x8D28;&#x2014;&#x2014;&#x7EC6;&#x8282;&#x6682;&#x65F6;&#x6254;&#x6389;&#xFF0C;&#x628A;&#x4E3B;&#x5E72;&#x4E2D;&#x4E3B;&#x8981;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3001;&#x63A7;&#x5236;&#x6D41;&#x7A0B;&#x68B3;&#x7406;&#x6E05;&#x695A;&#x3002;&#x5C3D;&#x91CF;&#x628A;&#x7B14;&#x8BB0;&#x63D2;&#x5230;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x65B9;&#x4FBF;&#x4EE5;&#x540E;&#x9605;&#x8BFB;&#x3002; &#x4E09;&#x3001;&#x518D;&#x5FEB;&#x901F;&#x5730;&#x628A;&#x7B14;&#x8BB0;&#x8BFB;&#x4E00;&#x904D;&#xFF0C;&#x8FD9;&#x4E00;&#x904D;&#x5C31;&#x4E0D;&#x5FC5;&#x505C;&#x7559;&#x5728;&#x7EC6;&#x8282;&#xFF0C;&#x800C;&#x662F;&#x5F04;&#x6E05;&#x695A;&#x4E3B;&#x5E72;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x8BFB;&#x5B8C;&#x8FD9;&#x4E00;&#x904D;&#x53EF;&#x4EE5;&#x4E3A;&#x6BCF;&#x7BC7;&#x7B14;&#x8BB0;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x603B;&#x7ED3;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x770B;&#x8D77;&#x6765;&#x6D69;&#x6D69;&#x8361;&#x8361;&#x4E8C;&#x4E09;&#x5341;&#x6B65;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5176;&#x5B9E;&#x76EE;&#x7684;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x6BD4;&#x5982;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#xFF0C;&#x5C31;&#x662F;&#x628A;&#x8BB0;&#x5F55;&#x548C;&#x5B9E;&#x9645;&#x78C1;&#x76D8;&#x6570;&#x636E;&#x64B8;&#x4E00;&#x904D;&#xFF0C;&#x4FDD;&#x6301;&#x4E8C;&#x8005;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x8BA9;&#x8FD9;&#x4EFD;&#x6570;&#x636E;&#x59CB;&#x7EC8;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x3002; &#x8FD9;&#x6BB5;&#x65F6;&#x95F4;&#x8DDF;&#x4E0A;&#x534A;&#x5E74;&#x8BFB;&#x6E90;&#x7801;&#x6700;&#x5927;&#x7684;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#xFF1A;&#x4E4B;&#x524D;&#x5728;&#x7B2C;&#x4E00;&#x6B65;&#x4E2D;&#x82B1;&#x7684;&#x7CBE;&#x529B;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x6211;&#x4F1A;&#x5728;&#x8BFB;&#x4E66;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x540C;&#x65F6;&#x8BFB;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x82B1;&#x4E86;&#x5F88;&#x5927;&#x7684;&#x529F;&#x592B;&#x5728;&#x4EE3;&#x7801;&#x91CC;&#x505A;&#x8D85;&#x7EA7;&#x94FE;&#x63A5;&#xFF0C;&#x6807;&#x8BB0;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x3001;&#x8DF3;&#x8F6C;&#x4EE5;&#x53CA;&#x8FD4;&#x56DE;&#x7B49;&#x4FE1;&#x606F;&#xFF0C;&#x4EE5;&#x65B9;&#x4FBF;&#x518D;&#x6B21;&#x9605;&#x8BFB;&#x3002;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x6709;&#x5FC5;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x8981;&#x80FD;&#x628A;&#x9AA8;&#x67B6;&#x780D;&#x51FA;&#x6765;&#xFF0C;&#x518D;&#x6B21;&#x9605;&#x8BFB;&#x4E00;&#x4E24;&#x904D;&#x5C31;&#x80FD;&#x628A;&#x4EE3;&#x7801;&#x5403;&#x900F;&#x4E86;&#x3002;&#x64B8;&#x4E00;&#x6B21;&#x7801;&#x8981;&#x5FEB;&#xFF0C;&#x5426;&#x5219;&#x8BF4;&#x660E;&#x4F60;&#x53EF;&#x80FD;&#x9677;&#x5165;&#x592A;&#x591A;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x53EF;&#x80FD;&#x5E76;&#x6CA1;&#x6709;&#x6293;&#x4F4F;&#x672C;&#x8D28;&#xFF0C;&#x6CA1;&#x6709;&#x6293;&#x4F4F;&#x4E3B;&#x5E72;&#x3002;&#x9677;&#x5F97;&#x8D8A;&#x6DF1;&#xFF0C;&#x628A;&#x63E1;&#x4E3B;&#x5E72;&#x5C31;&#x8D8A;&#x56F0;&#x96BE;&#x3002;&#x7406;&#x60F3;&#x7684;&#x60C5;&#x51B5;&#x5E94;&#x8BE5;&#x662F;&#x628A;&#x63E1;&#x4F4F;&#x4E3B;&#x5E72;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x5BF9;&#x67D0;&#x4E2A;&#x5C40;&#x90E8;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x518D;&#x628A;&#x8FD9;&#x4E2A;&#x5C40;&#x90E8;&#x5F53;&#x505A;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#xFF0C;&#x8FED;&#x4EE3;&#x4F7F;&#x7528;&#x4EE5;&#x4E0A;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x518D;&#x6DF1;&#x5165;&#x7814;&#x7A76;&#x3002; 27&#x65E5; &#x661F;&#x671F;&#x56DB; &#x5728;&#x63A5;&#x624B;&#x4E00;&#x9879;&#x65B0;&#x5DE5;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x8981;&#x8C03;&#x52A8;200%&#x7684;&#x6CE8;&#x610F;&#x529B;&#x548C;&#x654F;&#x611F;&#x5EA6;&#xFF0C;&#x4E0D;&#x653E;&#x8FC7;&#x6BCF;&#x4E2A;&#x4EBA;&#x8DDF;&#x4F60;&#x8BF4;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x3002;&#x5982;&#x679C;&#x5F53;&#x65F6;&#x6CA1;&#x542C;&#x660E;&#x767D;&#xFF0C;&#x7ACB;&#x523B;&#x63D0;&#x51FA;&#x7591;&#x95EE;&#xFF0C;&#x89E3;&#x91CA;&#x6E05;&#x695A;&#x3002;&#x5C24;&#x5176;&#x662F;&#x5F53;&#x63A5;&#x624B;&#x4E00;&#x4E2A;&#x56E2;&#x961F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x4F1A;&#x542C;&#x4E0B;&#x5C5E;&#x8DDF;&#x4F60;&#x8BB2;&#x5230;&#x5F88;&#x591A;&#x7EC6;&#x8282;&#xFF0C;&#x4F60;&#x8981;&#x505A;&#x7684;&#x867D;&#x7136;&#x4E0D;&#x662F;&#x8BB0;&#x4F4F;&#x6BCF;&#x4E2A;&#x7EC6;&#x8282;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6BD4;&#x8BB0;&#x4F4F;&#x8981;&#x6C42;&#x66F4;&#x9AD8;&#x2014;&#x2014;&#x662F;&#x8981;&#x628A;&#x8FD9;&#x4E9B;&#x7EC6;&#x8282;&#x4E32;&#x8D77;&#x6765;&#xFF0C;&#x4E86;&#x89E3;&#x7EC6;&#x8282;&#x4E4B;&#x4E0A;&#x7684;&#x5B8F;&#x89C2;&#x903B;&#x8F91;&#xFF0C;&#x4EE5;&#x53CA;&#x63A5;&#x4E0B;&#x6765;&#x6BCF;&#x4E00;&#x4E2A;&#x51B3;&#x7B56;&#x53EF;&#x80FD;&#x5E26;&#x6765;&#x7684;&#x884D;&#x751F;&#x5F71;&#x54CD;&#x3002; &#x6211;&#x7684;&#x8BB0;&#x5FC6;&#x529B;&#x5F88;&#x5DEE;&#xFF0C;&#x4ECB;&#x5165;&#x4E00;&#x9879;&#x590D;&#x6742;&#x7684;&#x5DE5;&#x4F5C;&#x5E38;&#x5E38;&#x50CF;&#x8BFB;&#x4E66;&#x90A3;&#x6837;&#xFF0C;&#x7B2C;&#x4E00;&#x904D;&#x6C9F;&#x901A;&#x4E86;&#x89E3;&#x6897;&#x6982;&#xFF0C;&#x5728;&#x6DF1;&#x5165;&#x5DE5;&#x4F5C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x624D;&#x53C8;&#x53D1;&#x73B0;&#x4E8B;&#x60C5;A&#x548C;&#x4E8B;&#x60C5;B&#x4E4B;&#x95F4;&#x662F;&#x6709;&#x5173;&#x8054;&#x7684;&#xFF0C;&#x6709;&#x9700;&#x8981;&#x627E;&#x4E0B;&#x5C5E;&#x628A;&#x4E4B;&#x524D;&#x8BB2;&#x8FC7;&#x7684;&#x4E8B;&#x60C5;&#x518D;&#x8BB2;&#x4E00;&#x904D;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x539F;&#x6765;&#x5BF9;&#x8FD9;&#x4EF6;&#x4E8B;&#x513F;&#x7684;&#x7406;&#x89E3;&#x8DDF;&#x4E4B;&#x524D;&#x6709;&#x5F88;&#x5927;&#x4E0D;&#x540C;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#x751A;&#x81F3;&#x8981;&#x518D;&#x6B21;&#x53CD;&#x590D;&#x6C9F;&#x901A;&#x624D;&#x628A;&#x4E8B;&#x60C5;&#x5403;&#x900F;&#x4E86;&#x3002; &#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x79CD;&#x505A;&#x4E8B;&#x65B9;&#x6CD5;&#x4E9F;&#x5F85;&#x6539;&#x8FDB;&#x3002; 30&#x65E5; &#x661F;&#x671F;&#x65E5; &#x88AB;&#x626D;&#x66F2;&#x7684;KPI &#x8001;&#x677F;&#x5728;&#x670B;&#x53CB;&#x5708;&#x91CC;&#x53D1;&#x4E86;&#x4E00;&#x6761;&#x6D88;&#x606F;&#xFF0C;&#x5927;&#x6982;&#x610F;&#x601D;&#x662F;&#x8BF4;&#x516C;&#x53F8;&#x7684;&#x7A7A;&#x6C14;&#x8D28;&#x91CF;&#x592A;&#x5DEE;&#x4E86;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x5DE5;&#x4F5C;&#x73AF;&#x5883;&#x4F1A;&#x5F71;&#x54CD;&#x521B;&#x9020;&#x529B;&#x7684;&#x53D1;&#x6325;&#x3002;&#x5F88;&#x5FEB;&#x5C31;&#x53D1;&#x73B0;&#x884C;&#x653F;&#x90E8;&#x95E8;&#x884C;&#x52A8;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x6BCF;&#x4E00;&#x5C42;&#x9694;&#x51E0;&#x7C73;&#x5C31;&#x6709;&#x4E00;&#x53F0;&#x7A7A;&#x6C14;&#x51C0;&#x5316;&#x5668;&#x3002;&#x673A;&#x5668;&#x6709;&#x4E00;&#x7C73;&#x4E03;&#x516B;&#x90A3;&#x4E48;&#x9AD8;&#xFF0C;&#x81F3;&#x4E8E;&#x91CC;&#x9762;&#x662F;&#x51C0;&#x5316;&#x5668;&#x8FD8;&#x662F;&#x98CE;&#x6247;&#xFF0C;&#x5C31;&#x4E0D;&#x5F97;&#x800C;&#x77E5;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x5DE5;&#x4EBA;&#x62C6;&#x5F00;&#x7684;&#x65F6;&#x5019;&#x6211;&#x770B;&#x5230;&#x4E86;&#x633A;&#x5927;&#x7684;&#x6247;&#x53F6;&#xFF0C;&#x5374;&#x6CA1;&#x770B;&#x5230;&#x6EE4;&#x7F51;&#x3002;&#x800C;&#x4E14;&#x673A;&#x5668;&#x4E00;&#x65E6;&#x542F;&#x52A8;&#x8D77;&#x6765;&#xFF0C;&#x98CE;&#x529B;&#x5341;&#x8DB3;&#x3002; &#x6709;&#x4E00;&#x5929;&#x7A81;&#x7136;&#x89C9;&#x5F97;&#x51B7;&#x98CE;&#x55D6;&#x55D6;&#x7684;&#xFF0C;&#x8E05;&#x6478;&#x4E86;&#x4E00;&#x5708;&#x6CA1;&#x627E;&#x5230;&#x54EA;&#x5728;&#x5439;&#x3002;&#x4E0B;&#x73ED;&#x540E;&#x5FAA;&#x7740;&#x98CE;&#x6E90;&#x624D;&#x53D1;&#x73B0;&#x539F;&#x6765;&#x662F;&#x79BB;&#x6211;&#x56DB;&#x4E94;&#x7C73;&#x5F00;&#x5916;&#x7684;&#x4E00;&#x53F0;&#x51C0;&#x5316;&#x5668;&#x672C;&#x6765;&#x662F;&#x5BF9;&#x7740;&#x5899;&#x5439;&#x7684;&#xFF0C;&#x98CE;&#x88AB;&#x53CD;&#x5C04;&#x6539;&#x9053;&#x540E;&#x521A;&#x597D;&#x5BF9;&#x7740;&#x6211;&#xFF01;&#x5439;&#x4E86;&#x4E00;&#x5929;&#xFF0C;&#x89C9;&#x5F97;&#x8138;&#x548C;&#x989D;&#x5934;&#x90FD;&#x662F;&#x70ED;&#x7684;&#xFF0C;&#x672C;&#x6765;&#x60F3;&#x7ED9;&#x5B83;&#x8F6C;&#x4E2A;&#x5411;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x8FD8;&#x633A;&#x6C89;&#xFF0C;&#x5E72;&#x8106;&#x628A;&#x7535;&#x6E90;&#x5173;&#x4E86;&#xFF0C;&#x53EF;&#x662F;&#x6BCF;&#x5230;&#x7B2C;&#x4E8C;&#x5929;&#xFF0C;&#x673A;&#x5668;&#x53C8;&#x8DD1;&#x8D77;&#x6765;&#x4E86;&#x3002;&#x800C;&#x4E14;&#x51E0;&#x5929;&#x540E;&#xFF0C;&#x6211;&#x53D1;&#x73B0;&#x6BCF;&#x53F0;&#x673A;&#x5668;&#x4E0A;&#x90FD;&#x88C5;&#x4E86;&#x4E2A;&#x5C0F;&#x5929;&#x7EBF;&#xFF0C;&#x53EA;&#x8981;&#x4EFB;&#x4F55;&#x4E00;&#x53F0;&#x673A;&#x5668;&#x505C;&#x8FD0;&#xFF0C;&#x4E09;&#x5206;&#x949F;&#x5185;&#x4E00;&#x5B9A;&#x6709;&#x4EBA;&#x8FC7;&#x6765;&#x68C0;&#x67E5;&#xFF0C;&#x5E76;&#x4E14;&#x628A;&#x5B83;&#x518D;&#x6B21;&#x542F;&#x52A8;&#x3002; &#x6709;&#x4E00;&#x5929;&#x6211;&#x8DDF;&#x68C0;&#x4FEE;&#x7684;&#x540C;&#x5B66;&#x8BF4;&#xFF1A;&#x201C;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#x662F;&#x6211;&#x5173;&#x7684;&#xFF0C;&#x5BF9;&#x7740;&#x5439;&#x662F;&#x5728;&#x592A;&#x51B7;&#x4E86;&#x3002;&#x201D;&#x54E5;&#x4EEC;&#x4E5F;&#x6CA1;&#x8BF4;&#x5565;&#xFF0C;&#x9ED8;&#x9ED8;&#x5730;&#x8D70;&#x5F00;&#x4E86;&#xFF0C;&#x53EF;&#x662F;&#x6CA1;&#x8FC7;&#x4E00;&#x4F1A;&#xFF0C;&#x6211;&#x5934;&#x9876;&#x4E0A;&#x8F70;&#x9686;&#x9686;&#x5730;&#x542F;&#x52A8;&#x4E86;&#x53E6;&#x4E00;&#x53F0;&#x673A;&#x5668;&#xFF0C;&#x90A3;&#x58F0;&#x97F3;&#x8DDF;&#x4E00;&#x8F86;&#x5927;&#x516C;&#x5171;&#x542F;&#x52A8;&#x8D77;&#x6765;&#x4E5F;&#x5DEE;&#x4E0D;&#x591A;&#x3002;&#x5BF9;&#x7740;&#x8F70;&#x4E86;&#x4E00;&#x5929;&#xFF0C;&#x5B9E;&#x5728;&#x662F;&#x88AB;&#x5B83;&#x6253;&#x8D25;&#x4E86;&#xFF0C;&#x6211;&#x53EA;&#x597D;&#x81EA;&#x89C9;&#x5730;&#x628A;&#x51C0;&#x5316;&#x5668;&#x6253;&#x5F00;&#xFF0C;&#x4EE5;&#x540E;&#x4E0A;&#x73ED;&#x8981;&#x7A7F;&#x4E0A;&#x5C0F;&#x68C9;&#x8884;&#x624D;&#x884C;&#x3002;&#x7B2C;&#x4E8C;&#x5929;&#x201C;&#x5927;&#x516C;&#x5171;&#x201D;&#x6CA1;&#x518D;&#x5F00;&#xFF0C;&#x6211;&#x77E5;&#x9053;&#x884C;&#x653F;&#x7684;&#x540C;&#x5B66;&#x4E5F;&#x4E0D;&#x5BB9;&#x6613;&#xFF0C;&#x8001;&#x677F;&#x4E00;&#x5B9A;&#x7ED9;&#x4E86;&#x4E0D;&#x5C0F;&#x7684;&#x538B;&#x529B;&#xFF0C;&#x8D23;&#x4EE4;&#x516C;&#x53F8;&#x7A7A;&#x6C14;&#x8D28;&#x91CF;&#x5FC5;&#x987B;&#x8FBE;&#x6807;&#xFF0C;&#x53EF;&#x662F;&#x4EBA;&#x90FD;&#x5439;&#x51FA;&#x6BDB;&#x75C5;&#x4E86;&#xFF0C;&#x7A7A;&#x6C14;&#x518D;&#x597D;&#x6709;&#x6BDB;&#x7528;&#x554A;&#x3002; &#x5176;&#x5B9E;&#x6709;&#x51E0;&#x5929;&#x6211;&#x8BD5;&#x7740;&#x628A;&#x51C0;&#x5316;&#x5668;&#x7684;&#x65B9;&#x5411;&#x8F6C;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x53EF;&#x662F;&#x516C;&#x53F8;&#x5DE5;&#x4F4D;&#x5B89;&#x6392;&#x5F97;&#x5F88;&#x7D27;&#x5F20;&#xFF0C;&#x4E0D;&#x7BA1;&#x671D;&#x54EA;&#x4E2A;&#x65B9;&#x5411;&#xFF0C;&#x603B;&#x6709;&#x53D7;&#x5BB3;&#x8005;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x53D1;&#x73B0;&#x603B;&#x6709;&#x4EBA;&#x628A;&#x5B83;&#x518D;&#x63B0;&#x8FC7;&#x6765;&#x3002; &#x4ED4;&#x7EC6;&#x60F3;&#x60F3;&#xFF0C;&#x8FD9;&#x4E0D;&#x5C31;&#x662F;KPI&#x5BFC;&#x5411;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x561B;&#x3002;&#x8001;&#x677F;&#x662F;&#x4E2A;&#x5F88;&#x5F3A;&#x52BF;&#x7684;&#x4EBA;&#xFF0C;&#x4E0B;&#x8FBE;&#x6307;&#x4EE4;&#x786E;&#x5B9E;&#x80FD;&#x591F;&#x5F88;&#x5FEB;&#x843D;&#x5B9E;&#x3002;&#x4F46;&#x4EBA;&#x7EC8;&#x7A76;&#x4E0D;&#x662F;&#x673A;&#x5668;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x4E8B;&#x4E1A;&#x4E5F;&#x4E0D;&#x80FD;&#x5F53;&#x505A;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x6765;&#x6267;&#x884C;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x8981;&#x670D;&#x52A1;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x4EBA;&#xFF0C;&#x4E0D;&#x7BA1;&#x505A;&#x4EA7;&#x54C1;&#x8FD8;&#x662F;&#x7BA1;&#x7406;&#x516C;&#x53F8;&#x3002;&#x4F60;&#x7684;&#x76EE;&#x6807;&#x662F;&#x8BA9;&#x540C;&#x5B66;&#x4EEC;&#x601D;&#x8DEF;&#x6E05;&#x6670;&#xFF0C;&#x63D0;&#x5347;&#x6548;&#x7387;&#xFF0C;&#x8BA9;&#x7A7A;&#x6C14;&#x6E05;&#x65B0;&#x662F;&#x8FBE;&#x6210;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x4E0D;&#x5E94;&#x8BE5;&#x4F5C;&#x4E3A;&#x76EE;&#x6807;&#x672C;&#x8EAB;&#x3002;&#x53EF;&#x5982;&#x679C;&#x4F60;&#x8DDF;&#x4E0B;&#x5C5E;&#x8BF4;&#xFF1A;&#x201C;&#x518D;&#x8BA9;&#x6211;&#x6D4B;&#x5230;&#x516C;&#x53F8;&#x7684;PM2.5&#x9AD8;&#x4E8E;xxx&#xFF0C;&#x4F60;&#x5C31;&#x4E0D;&#x7528;&#x6765;&#x4E86;&#x201D;&#x3002;&#x90A3;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF0C;&#x4ED6;&#x4E0D;&#x5173;&#x5FC3;&#x4F1A;&#x4E0D;&#x4F1A;&#x628A;&#x4EBA;&#x5439;&#x574F;&#x4E86;&#xFF0C;&#x80FD;&#x8FBE;&#x5230;KPI&#x5C31;&#x662F;&#x80DC;&#x5229;&#xFF01; &#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4E5F;&#x6CA1;&#x6709;&#x7EDD;&#x5BF9;&#x6709;&#x6548;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x6211;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x8DDF;&#x4E0B;&#x5C5E;&#x63A8;&#x884C;&#x6211;&#x7684;&#x4EF7;&#x503C;&#x89C2;&#xFF0C;&#x5E76;&#x4E14;&#x8EAB;&#x4F53;&#x529B;&#x884C;&#x5730;&#x53BB;&#x8DF5;&#x884C;&#xFF0C;&#x53BB;&#x7ED9;&#x4E0B;&#x5C5E;&#x505A;&#x8868;&#x7387;&#x3002;&#x5E94;&#x8BE5;&#x8BA9;&#x4E0B;&#x5C5E;&#x7406;&#x89E3;&#x4F60;&#x5E0C;&#x671B;&#x7ED9;&#x5927;&#x5BB6;&#x8425;&#x9020;&#x4E00;&#x4E2A;&#x597D;&#x7684;&#x5DE5;&#x4F5C;&#x73AF;&#x5883;&#x3002;&#x505A;&#x4E86;&#x591A;&#x5E74;&#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x6211;&#x53D1;&#x73B0;&#x4EBA;&#x7684;&#x8BB0;&#x5FC6;&#x529B;&#x5176;&#x5B9E;&#x5F88;&#x5DEE;&#xFF0C;&#x6709;&#x4E9B;&#x8BDD;&#x8981;&#x4E0D;&#x65AD;&#x5730;&#x8BB2;&#xFF0C;&#x6709;&#x673A;&#x4F1A;&#x5C31;&#x8BB2;&#x3002;&#x8BA9;&#x4E0B;&#x5C5E;&#x77E5;&#x9053;&#x4F60;&#x8D5E;&#x540C;&#x4EC0;&#x4E48;&#xFF0C;&#x53CD;&#x5BF9;&#x4EC0;&#x4E48;&#x3002;&#x9047;&#x5230;&#x5177;&#x4F53;&#x95EE;&#x9898;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x8981;&#x4E0D;&#x5931;&#x65F6;&#x673A;&#x5730;&#x7ED3;&#x5408;&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#xFF0C;&#x91CD;&#x7533;&#x4F60;&#x7684;&#x4EF7;&#x503C;&#x89C2;&#x3002;&#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;&#x624D;&#x6709;&#x53EF;&#x80FD;&#x89C1;&#x6548;&#x3002;&#x6307;&#x671B;&#x5F00;&#x4E00;&#x4E2A;&#x4F1A;&#xFF0C;&#x53D1;&#x4E00;&#x5C01;&#x90AE;&#x4EF6;&#xFF0C;&#x8BF4;&#x201C;&#x6211;&#x4EEC;&#x8981;&#x4EE5;&#x4EBA;&#x4E3A;&#x672C;&#xFF0C;&#x4EE5;&#x7528;&#x6237;&#x4E3A;&#x4E2D;&#x5FC3;blabla...&#x201D;&#xFF0C;&#x90A3;&#x5FC5;&#x7136;&#x4E0D;&#x4F1A;&#x6709;&#x6548;&#x679C;&#x3002; &#x4ECA;&#x5929;&#x521A;&#x597D;&#x770B;&#x4E86;&#x5F20;&#x5C0F;&#x9F99;&#x5728;&#x817E;&#x8BAF;&#x9886;&#x5BFC;&#x529B;&#x5927;&#x4F1A;&#x4E0A;&#x7684;&#x53D1;&#x8A00;&#xFF0C;&#x9898;&#x76EE;&#x5C31;&#x662F;&#x300A;&#x8B66;&#x60D5;KPI&#x548C;&#x6D41;&#x7A0B;&#x300B;&#x3002;&#x5F20;&#x5C0F;&#x9F99;&#x4E5F;&#x662F;&#x901A;&#x8FC7;&#x4E0D;&#x65AD;&#x9610;&#x8FF0;&#x81EA;&#x5DF1;&#x7684;&#x4EF7;&#x503C;&#x89C2;&#xFF0C;&#x8BA9;&#x56E2;&#x961F;&#x7406;&#x89E3;&#x81EA;&#x5DF1;&#x7684;&#x76EE;&#x6807;&#x800C;&#x4E0D;&#x662F;&#x5982;&#x4F55;&#x6D4B;&#x91CF;&#x76EE;&#x6807;&#xFF0C;&#x6765;&#x7EA0;&#x6B63;KPI&#x5BFC;&#x5411;&#x5BFC;&#x81F4;&#x7684;&#x504F;&#x5DEE;&#x3002;&#x5728;&#x7406;&#x89E3;&#x4EF7;&#x503C;&#x89C2;&#x8FD9;&#x4EF6;&#x4E8B;&#x513F;&#x4E0A;&#xFF0C;KPI&#x6216;&#x8005;OKR&#x8FD9;&#x4E9B;&#x5DE5;&#x5177;&#x90FD;&#x662F;&#x65E0;&#x80FD;&#x4E3A;&#x529B;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x7406;&#x89E3;&#x548C;&#x8BA4;&#x540C;&#x4E86;&#x4EF7;&#x503C;&#x89C2;&#xFF0C;&#x624D;&#x80FD;&#x5728;&#x56E2;&#x961F;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x5171;&#x540C;&#x7684;&#x4E8B;&#x4E1A;&#x60F3;&#x8C61;&#x4F53;&#xFF0C;&#x624D;&#x6709;&#x53EF;&#x80FD;&#x8BA9;&#x6BCF;&#x4E2A;&#x4EBA;&#x671D;&#x7740;&#x8FD9;&#x4E2A;&#x4E8B;&#x4E1A;&#x76EE;&#x6807;&#x524D;&#x884C;&#x3002; 31&#x65E5; &#x661F;&#x671F;&#x4E00; &#x5173;&#x4E8E;&#x804C;&#x573A;&#x4E2D;&#x7684;&#x51B2;&#x7A81; &#x804C;&#x573A;&#x4E2D;&#x7ECF;&#x5E38;&#x770B;&#x5230;&#x51B2;&#x7A81;&#x3002;&#x90A3;&#x5929;&#x770B;&#x5230;&#x4E24;&#x4E2A;&#x4E0B;&#x5C5E;&#x56E0;&#x4E3A;&#x975E;&#x5E38;&#x5C0F;&#x7684;&#x5C0F;&#x4E8B;&#x513F;&#x5C31;&#x6760;&#x4E0A;&#x4E86;&#x3002;&#x4FE9;&#x4EBA;&#x662F;&#x5728;&#x6280;&#x672F;&#x63A5;&#x53E3;&#x7684;&#x4E0A;&#x4E0B;&#x6E38;&#xFF0C;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E2A;bug&#x3002; &#x4E00;&#x4E2A;&#x95EE;&#xFF1A;&#x201C;&#x4F60;&#x7684;XXX&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x201D; &#x7B54;&#xFF1A;&#x201C;&#x8FD9;&#x662F;&#x4E2A;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x7CFB;&#x7EDF;&#x7ED9;&#x6211;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x6211;&#x8FD4;&#x56DE;&#x5C31;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x201D; &#x95EE;&#xFF1A;&#x201C;&#x7CFB;&#x7EDF;&#x8FD4;&#x56DE;&#x7ED9;&#x4F60;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x8FD9;&#x4EE3;&#x7801;&#x4E0D;&#x662F;&#x4F60;&#x5199;&#x7684;&#x4E48;&#xFF1F;&#x201D; &#x7B54;&#xFF1A;&#x201C;&#x4F60;&#x4E0D;&#x662F;&#x4E5F;&#x6709;&#x4EE3;&#x7801;&#x4E48;&#xFF1F;&#x4F60;&#x4E0D;&#x4F1A;&#x81EA;&#x5DF1;&#x770B;&#x4E48;&#xFF1F;&#x201D; &#x2026;&#x2026; &#x95EE;&#x7684;&#x4EBA;&#x77E5;&#x9053;&#x6211;&#x5728;&#x65C1;&#x8FB9;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x662F;&#x5F88;&#x514B;&#x5236;&#x5730;&#x7529;&#x4E86;&#x53E5;&#x201C;&#x771F;&#x670D;&#x4E86;&#x4F60;&#x4E86;&#x201D;&#x3002;&#x5F53;&#x65F6;&#x7684;&#x6C14;&#x6C1B;&#x5982;&#x679C;&#x6211;&#x4E0D;&#x5728;&#xFF0C;&#x611F;&#x89C9;&#x771F;&#x662F;&#x4E00;&#x70B9;&#x5C31;&#x7740;&#x3002;&#x53E6;&#x4E00;&#x4E2A;&#x540C;&#x5B66;&#x540E;&#x6765;&#x4E5F;&#x770B;&#x5230;&#x6211;&#xFF0C;&#x4FE9;&#x4EBA;&#x624D;&#x53C8;&#x6B63;&#x5E38;&#x5BF9;&#x8BDD;&#x3002; &#x5728;&#x6211;&#x770B;&#x6765;&#x8FD9;&#x79CD;&#x65E0;&#x8C13;&#x7684;&#x8BED;&#x8A00;&#x51B2;&#x7A81;&#x592A;&#x4F4E;&#x7EA7;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x523A;&#x522B;&#x4EBA;&#xFF0C;&#x8FD8;&#x662F;&#x88AB;&#x4EBA;&#x523A;&#x540E;&#x7684;&#x6012;&#x53D1;&#x51B2;&#x51A0;&#x3001;&#x56DE;&#x51FB;&#xFF0C;&#x90FD;&#x662F;&#x804C;&#x573A;&#x4E0A;&#x7684;&#x4F4E;&#x7EA7;&#x884C;&#x4E3A;&#x3002;&#x770B;&#x8D77;&#x6765;&#x725B;&#x903C;&#x4E00;&#x628A;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x4EBA;&#x4EBA;&#x4E0D;&#x6562;&#x60F9;&#xFF0C;&#x53EF;&#x662F;&#x4ED4;&#x7EC6;&#x60F3;&#x60F3;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x804C;&#x573A;&#x4E0A;&#x884C;&#x8D70;&#x7684;&#x76EE;&#x6807;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E48;&#x505A;&#x662F;&#x8DDF;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#x4E00;&#x81F4;&#x7684;&#x4E48;&#xFF1F; &#x53CD;&#x6B63;&#x6211;&#x5728;&#x804C;&#x573A;&#x4E0A;&#x884C;&#x8D70;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x76EE;&#x6807;&#x5C31;&#x662F;&#x63D0;&#x5347;&#x81EA;&#x5DF1;&#x7684;&#x80FD;&#x529B;&#x3002;&#x4E00;&#x5207;&#x4E0E;&#x6B64;&#x76EE;&#x6807;&#x76F8;&#x5DE6;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x90FD;&#x5E94;&#x8BE5;&#x675C;&#x7EDD;&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x5728;&#x804C;&#x573A;&#x4E0A;&#x9700;&#x8981;&#x4FEE;&#x70BC;&#x7684;&#x5883;&#x754C;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x8868;&#x73B0;&#x51FA;&#x6124;&#x6012;&#x3001;&#x8868;&#x73B0;&#x51FA;&#x5174;&#x594B;&#xFF0C;&#x90A3;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#x800C;&#x505A;&#x51FA;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x53EA;&#x6709;&#x5341;&#x5E74;&#x5982;&#x4E00;&#x65E5;&#x5730;&#x671D;&#x7740;&#x81EA;&#x5DF1;&#x7684;&#x76EE;&#x6807;&#x524D;&#x884C;&#xFF0C;&#x4F60;&#x624D;&#x80FD;&#x548C;&#x7ADE;&#x4E89;&#x8005;&#x62C9;&#x5F00;&#x5DEE;&#x8DDD;&#xFF0C;&#x6210;&#x4E3A;&#x8FD9;&#x4E2A;&#x8D5B;&#x9053;&#x7684;&#x80DC;&#x8005;&#x3002;&#x4F60;&#x7684;&#x76EE;&#x6807;&#x662F;&#x524D;&#x65B9;&#xFF0C;&#x5374;&#x65F6;&#x800C;&#x4E0D;&#x65F6;&#x800C;&#x5730;&#x6320;&#x4E00;&#x628A;&#x65C1;&#x8FB9;&#x7684;&#x4EBA;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x662F;&#x5C0F;&#x5FC3;&#x9632;&#x5FA1;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x4EE5;&#x540E;&#x51B7;&#x4E0D;&#x4E01;&#x4F1A;&#x518D;&#x7ECA;&#x4F60;&#x4E00;&#x811A;&#x3002;&#x4F60;&#x8BF4;&#x8FD9;&#x79CD;&#x884C;&#x4E3A;&#x4E0D;&#x662F;&#x4F4E;&#x7EA7;&#x53C8;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; &#x804C;&#x573A;&#x4E0D;&#x662F;&#x6C5F;&#x6E56;&#xFF0C;&#x66F4;&#x4E0D;&#x662F;&#x5E99;&#x5802;&#x3002;&#x56E0;&#x4E3A;&#x6C5F;&#x6E56;&#x548C;&#x5E99;&#x5802;&#x7684;&#x4EF7;&#x503C;&#x7EF4;&#x5EA6;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#xFF0C;&#x6240;&#x4EE5;&#x5927;&#x5BB6;&#x8981;&#x62FC;&#x4E2A;&#x4F60;&#x6B7B;&#x6211;&#x6D3B;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x5F53;&#x76DF;&#x4E3B;&#x3001;&#x5F53;&#x4E0A;&#x537F;&#x3001;&#x5F53;&#x4E1E;&#x76F8;&#x3001;&#x5F53;&#x5185;&#x9601;&#x9996;&#x8F85;&#x3001;&#x5F53;&#x603B;&#x7406;&#x2026;&#x2026;&#x5176;&#x5B9E;&#x8D8A;&#x725B;&#x903C;&#x8D8A;&#x5BB9;&#x6613;&#x6210;&#x4E3A;&#x4F17;&#x77E2;&#x4E4B;&#x7684;&#xFF0C;&#x4E5F;&#x8D8A;&#x5BB9;&#x6613;&#x88AB;&#x5750;&#x6807;&#x7CFB;&#x7684;&#x8BBE;&#x7F6E;&#x8005;&#x62FF;&#x6389;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x53EF;&#x725B;&#x903C;&#x7684;&#x5462;&#xFF0C;&#x4E0D;&#x8FC7;&#x662F;&#x679A;&#x68CB;&#x5B50;&#x800C;&#x5DF2;&#xFF01; &#x800C;&#x804C;&#x573A;&#x7684;&#x5750;&#x6807;&#x7CFB;&#x5E94;&#x8BE5;&#x7531;&#x81EA;&#x5DF1;&#x8BBE;&#x5B9A;&#xFF0C;&#x4F60;&#x4E0D;&#x53EF;&#x80FD;&#x540A;&#x6B7B;&#x5728;&#x4E00;&#x5BB6;&#x5355;&#x4F4D;&#x5F85;&#x4E00;&#x8F88;&#x5B50;&#xFF0C;&#x5373;&#x4F7F;&#x7ED9;&#x4F60;&#x53D1;&#x5DE5;&#x8D44;&#x7684;&#x8001;&#x677F;&#x5BF9;&#x4F60;&#x505A;&#x51FA;&#x7684;&#x8BC4;&#x4EF7;&#x4E5F;&#x4E0D;&#x8FC7;&#x662F;&#x6682;&#x65F6;&#x7ED9;&#x4F60;&#x5B89;&#x4E86;&#x4E00;&#x4E2A;&#x4EF7;&#x7B7E;&#xFF0C;&#x6807;&#x5B9A;&#x4E86;&#x4F60;&#x5728;&#x6B64;&#x65F6;&#x6B64;&#x5730;&#x7684;&#x4EF7;&#x683C;&#x3002;&#x6BCF;&#x4E2A;&#x4EBA;&#x771F;&#x6B63;&#x5E94;&#x8BE5;&#x5728;&#x4E4E;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x4EF7;&#x503C;&#xFF0C;&#x652F;&#x6491;&#x8FD9;&#x4E2A;&#x4EF7;&#x503C;&#x7684;&#x662F;&#x81EA;&#x8EAB;&#x7684;&#x80FD;&#x529B;&#x3002;&#x6240;&#x8C13;&#x201C;&#x4E07;&#x822C;&#x5E26;&#x4E0D;&#x8D70;&#xFF0C;&#x552F;&#x6709;&#x4E1A;&#x968F;&#x8EAB;&#x201D;&#xFF0C;&#x4F60;&#x5728;&#x8FD9;&#x91CC;&#x662F;&#x603B;&#x76D1;&#x3001;&#x662F;CXO&#xFF0C;&#x6362;&#x4E2A;&#x5730;&#x513F;&#x662F;&#x4EC0;&#x4E48;&#x8D27;&#x8272;&#xFF0C;&#x9760;&#x7684;&#x662F;&#x80FD;&#x529B;&#x548C;&#x4FEE;&#x4E3A;&#xFF0C;&#x4E0D;&#x662F;&#x522B;&#x7684;&#x3002; &#x6240;&#x4EE5;&#x8FD9;&#x4E48;&#x60F3;&#x6765;&#xFF0C;&#x88AB;&#x4EBA;&#x8BEF;&#x89E3;&#x3001;&#x88AB;&#x4EBA;&#x6392;&#x6324;&#x3001;&#x751A;&#x81F3;&#x88AB;&#x4EBA;&#x9677;&#x5BB3;&#xFF0C;&#x5728;&#x804C;&#x573A;&#x4E0A;&#x7684;&#x542B;&#x4E49;&#x548C;&#x5728;&#x6C5F;&#x6E56;&#x3001;&#x5728;&#x5E99;&#x5802;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x4F60;&#x8981;&#x505A;&#x7684;&#x662F;&#x8FBE;&#x6210;&#x81EA;&#x5DF1;&#x5185;&#x5FC3;&#x7684;&#x76EE;&#x6807;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x88AB;&#x522B;&#x4EBA;&#x8D5E;&#x53F9;&#x6216;&#x8005;&#x8BC4;&#x4EF7;&#xFF0C;&#x90A3;&#x4E9B;&#x53EA;&#x662F;&#x526F;&#x4EA7;&#x54C1;&#x3002;&#x4F60;&#x505C;&#x4E0B;&#x6765;&#x8DDF;&#x4EBA;&#x7406;&#x8BBA;&#xFF0C;&#x6216;&#x8005;&#x81EA;&#x8BC1;&#xFF0C;&#x54EA;&#x6015;&#x5206;&#x5FC3;&#x542C;&#x522B;&#x4EBA;&#x8BF4;&#x4F60;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x90FD;&#x662F;&#x4E0D;&#x503C;&#x5F53;&#x7684;&#x3002;&#x9664;&#x975E;&#x4F60;&#x8BA4;&#x4E3A;&#x90A3;&#x4E9B;&#x4EBA;&#xFF0C;&#x90A3;&#x4E9B;&#x8BDD;&#x53EF;&#x4EE5;&#x4E0E;&#x4F60;&#x7684;&#x76EE;&#x6807;&#x76F8;&#x63D0;&#x5E76;&#x8BBA;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Day Day Up</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Unicode字符集和字形]]></title>
    <url>%2F2016%2F10%2F09%2F2016%2F1008Unicode%2F</url>
    <content type="text"><![CDATA[&#x65E9;&#x4E0A;&#x8001;&#x677F;&#x62A5;&#x4E86;&#x4E00;&#x4E2A;&#x751F;&#x50FB;&#x5B57;&#xFF0C;&#x5DE6;&#x8FB9;&#x5352;&#xFF0C;&#x53F3;&#x8FB9;&#x74E6;&#xFF1A; &#x8FD9;&#x5B57;&#x5728;unicode.org&#x7684;Unihan&#x4E2D;&#x5FF5;&#x201C;c&#xE8;i&#x201D;&#xFF0C;&#x5728;&#x6C49;&#x5178;&#x4E2D;&#x5FF5;&#x201C;su&#xEC;&#x201D;&#x3002; &#x53EF;&#x662F;&#x8FD9;&#x5B57;&#x5728;&#x8F93;&#x5165;&#x6CD5;&#x91CC;&#x6572;&#x4E0D;&#x51FA;&#x6765;&#xFF0C;&#x5728;Windows&#x3001;macOS&#x3001;iOS&#x548C;Android&#x4E0B;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#xFF0C;&#x663E;&#x793A;&#x5404;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; Windows&#x4E0B;&#xFF1A; &#x53EA;&#x6709;Windows&#x4E0B;&#x663E;&#x793A;&#x662F;&#x6B63;&#x5E38;&#x7684;&#x3002; macOS&#x4E0B;&#xFF1A; iOS&#x4E0B;&#xFF1A; Android&#x4E0B;&#xFF1A; &#x539F;&#x56E0;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;&#x8FD9;&#x4E2A;&#x5B57;&#x7684;Unicode&#x7F16;&#x7801;&#x662F;0x24B62&#xFF0C;&#x843D;&#x5728;&#x4E86;Unicode CJK&#x6269;&#x5C55;B&#x7684;&#x96C6;&#x5408;&#x4E2D;&#x3002;&#x4E0D;&#x540C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7F16;&#x7801;&#x8303;&#x56F4;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x7684;&#x5B57;&#x5F62;&#x652F;&#x6301;&#x5EA6;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5373;&#x4F7F;&#x5728;Windows&#x4E0B;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x7248;&#x672C;&#x4E5F;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x622A;&#x56FE;&#x662F;&#x5728;Win7&#x4E0B;&#x622A;&#x5230;&#x7684;&#xFF0C;Win7&#x9488;&#x5BF9;&#x6269;&#x5C55;B&#x81EA;&#x5E26;&#x4E86;&#x4E00;&#x4E2A;&#x5B57;&#x5E93;&#xFF0C;&#x800C;WinXP&#x662F;&#x6CA1;&#x6709;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x662F;&#x5728;WinXP&#x4E0B;&#x9762;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x4E5F;&#x770B;&#x4E0D;&#x5230;&#x8FD9;&#x4E2A;&#x5B57;&#x3002; &#x5173;&#x4E8E;Unicode&#x7684;&#x6982;&#x5FF5; Unicode&#x7684;&#x76EE;&#x7684;&#x5C31;&#x5199;&#x5728;Unicode&#x5B98;&#x7F51;&#x9996;&#x9875;&#xFF1A;&#x8BA9;&#x4E16;&#x754C;&#x4E0A;&#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x8BED;&#x8A00;&#x7684;&#x4EBA;&#x4EEC;&#x90FD;&#x80FD;&#x4F7F;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x3002;&#x5176;&#x5B9E;&#x662F;&#x8BA9;&#x8BA1;&#x7B97;&#x673A;&#x80FD;&#x652F;&#x6301;&#x4E16;&#x754C;&#x4E0A;&#x4EFB;&#x4F55;&#x4E00;&#x79CD;&#x8BED;&#x8A00;&#x3002; &#x8BED;&#x8A00;&#x662F;&#x7531;&#x5B57;&#x6216;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x62C9;&#x4E01;&#x8BED;&#x7CFB;&#x4E0B;&#x5927;&#x90E8;&#x5206;&#x8BED;&#x8A00;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x6709;&#x9650;&#x7684;&#x5B57;&#x6BCD;&#x62FC;&#x5408;&#x800C;&#x6210;&#xFF0C;&#x6240;&#x4EE5;&#x8BA1;&#x7B97;&#x673A;&#x53EA;&#x8981;&#x652F;&#x6301;&#x8FD9;&#x4E9B;&#x6709;&#x9650;&#x7684;&#x5B57;&#x6BCD;&#x5373;&#x53EF;&#x3002;&#x800C;&#x50CF;&#x6C49;&#x5B57;&#x8FD9;&#x79CD;&#x8C61;&#x5F62;&#x6587;&#x5B57;&#x5219;&#x5305;&#x542B;&#x4E86;&#x51E0;&#x4E07;&#x4E2A;&#x5B57;&#xFF0C;&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x673A;&#x8981;&#x652F;&#x6301;&#x4E16;&#x754C;&#x4E0A;&#x6240;&#x6709;&#x7684;&#x8BED;&#x8A00;&#x4F53;&#x7CFB;&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x7ED9;&#x6BCF;&#x4E2A;&#x8BED;&#x8A00;&#x4E0B;&#x7684;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x7F16;&#x4E2A;&#x53F7;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x8BA4;&#x8FD9;&#x4E2A;&#x7F16;&#x53F7;&#x3002;&#x8FC7;&#x53BB;&#x4E0D;&#x540C;&#x56FD;&#x5BB6;&#x4F1A;&#x5236;&#x5B9A;&#x81EA;&#x5DF1;&#x7684;&#x7F16;&#x7801;&#x6807;&#x51C6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7ED9;&#x81EA;&#x5DF1;&#x8BED;&#x8A00;&#x4F53;&#x7CFB;&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#x7F16;&#x53F7;&#xFF0C;&#x4E0D;&#x540C;&#x6807;&#x51C6;&#x4E4B;&#x95F4;&#x53EF;&#x80FD;&#x4F1A;&#x51B2;&#x7A81;&#x3002;&#x6BD4;&#x5982;&#x540C;&#x4E00;&#x4E2A;&#x53F7;&#x7801;&#x5E8F;&#x5217;&#xFF0C;&#x5728;&#x6B27;&#x6D32;&#x8868;&#x793A;&#x201C;abc&#x201D;&#xFF0C;&#x5728;&#x4E2D;&#x56FD;&#x5C31;&#x8868;&#x793A;&#x201C;&#x4F60;&#x6211;&#x4ED6;&#x201D;&#xFF0C;&#x6570;&#x636E;&#x5728;&#x76F8;&#x4E92;&#x4EA4;&#x6362;&#x4E4B;&#x524D;&#x5C31;&#x5FC5;&#x987B;&#x6307;&#x660E;&#x4E86;&#x6211;&#x7684;&#x7F16;&#x7801;&#x91C7;&#x7528;&#x7684;&#x4EC0;&#x4E48;&#x6807;&#x51C6;&#xFF0C;&#x5230;&#x4E86;&#x5BF9;&#x7AEF;&#x518D;&#x4F9D;&#x7167;&#x4E0D;&#x540C;&#x7684;&#x6807;&#x51C6;&#x505A;&#x8F6C;&#x6362;&#x3002;&#x8FD9;&#x76F8;&#x5F53;&#x4E8E;&#x7ED9;&#x8BA1;&#x7B97;&#x673A;&#x9650;&#x5B9A;&#x4E86;&#x56FD;&#x754C;&#xFF0C;&#x53EF;&#x662F;&#x4E92;&#x8054;&#x7F51;&#x662F;&#x65E0;&#x56FD;&#x754C;&#x7684;&#x3002;&#x8FD9;&#x4E0D;&#x53EA;&#x662F;&#x8DDF;&#x4E92;&#x8054;&#x7F51;&#x6587;&#x5316;&#x76F8;&#x51B2;&#x7A81;&#xFF0C;&#x4E5F;&#x7ED9;&#x8DE8;&#x533A;&#x57DF;&#x4F7F;&#x7528;&#x5E26;&#x6765;&#x4E86;&#x73B0;&#x5B9E;&#x4E0A;&#x7684;&#x4E0D;&#x4FBF;&#x3002;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;Unicode&#x7EC4;&#x7EC7;&#x8BF4;&#xFF1A;&#x201C;&#x6211;&#x6765;&#x6307;&#x5B9A;&#x4E00;&#x5957;&#x89C4;&#x8303;&#xFF0C;&#x80FD;&#x8986;&#x76D6;&#x6240;&#x6709;&#x8BED;&#x8A00;&#xFF0C;&#x7ED9;&#x6240;&#x6709;&#x8BED;&#x8A00;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x89C4;&#x5B9A;&#x4E00;&#x5957;&#x7F16;&#x7801;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x9075;&#x5B88;&#x6211;&#x7684;&#x7F16;&#x7801;&#x89C4;&#x8303;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x81EA;&#x7136;&#x5C31;&#x89E3;&#x51B3;&#x4E86;&#xFF01;&#x201D; Unicode&#x7801;&#x4F4D;&#x7684;&#x7EC4;&#x7EC7; &#x5230;2016&#x5E74;&#x7684;Unicode 9.0&#x4E3A;&#x6B62;&#xFF0C;Unicode&#x5171;&#x4F7F;&#x7528;&#x4E86;&#x4ECE;0&#x5230;0x10FFFF&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#xFF0C;&#x5B83;&#x628A;&#x8FD9;&#x4E9B;&#x7801;&#x4F4D;&#x6309;&#x7167;&#x524D;16&#x4F4D;&#x548C;&#x540E;16&#x4F4D;&#x505A;&#x4E86;&#x903B;&#x8F91;&#x5206;&#x533A;&#xFF0C;&#x524D;16&#x4F4D;&#x6BCF;&#x4E2A;&#x7F16;&#x7801;&#x53EB;&#x505A;&#x4E00;&#x4E2A;Plane&#xFF08;&#x5E73;&#x9762;&#xFF09;&#xFF0C;&#x4E8E;&#x662F;&#x6BCF;&#x4E2A;&#x5E73;&#x9762;&#x4E0B;&#x5C31;&#x5305;&#x542B;&#x4E86;0xFFFF&#x4E2A;&#x7801;&#x4F4D;&#x3002;&#x4F8B;&#x5982;&#x524D;&#x9762;&#x8BF4;&#x7684;&#x201C;&#x5352;&#x74E6;&#x201D;&#x7684;&#x7F16;&#x7801;&#x662F;0x24B62&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5728;Plane2&#x4E0B;&#x7684;0x4B62&#x5904;&#x627E;&#x5230;&#x3002; Basic Multilingual Plane&#xFF08;BMP&#xFF09; &#x628A;Plane0&#x4E0B;&#x5305;&#x542B;&#x7684;&#x7F16;&#x7801;&#x79F0;&#x4F5C;&#x591A;&#x8BED;&#x8A00;&#x57FA;&#x672C;&#x9762; Basic Multilingual Plane&#xFF0C;&#x7B80;&#x79F0;BMP&#x3002;Unicode&#x7684;&#x7F16;&#x7801;&#x65B9;&#x6848;&#x5728;&#x5236;&#x5B9A;&#x65F6;&#x8003;&#x8651;&#x5230;&#x4E86;&#x5404;&#x8BED;&#x8A00;&#x7684;&#x4E66;&#x5199;&#x3001;&#x4F7F;&#x7528;&#x65B9;&#x4FBF;&#xFF0C;&#x5C3D;&#x91CF;&#x628A;&#x5E38;&#x7528;&#x7684;&#x5F80;&#x524D;&#x6392;&#xFF0C;&#x7B26;&#x5408;&#x54C8;&#x592B;&#x66FC;&#x7F16;&#x7801;&#x539F;&#x5219;&#xFF1B;&#x5C3D;&#x91CF;&#x628A;&#x4E00;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x5B57;&#x7B26;&#x7F16;&#x5728;&#x76F8;&#x90BB;&#x7684;&#x4F4D;&#x7F6E;&#x3002;BMP&#x4E0B;&#x5305;&#x542B;&#x4E86;&#x4E16;&#x754C;&#x5404;&#x8BED;&#x8A00;&#x4E0B;&#x6BD4;&#x8F83;&#x5E38;&#x7528;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x6240;&#x4EE5;&#x624D;&#x88AB;&#x79F0;&#x4E3A;&#x57FA;&#x672C;&#x9762;~&#x5728;&#x8FD9;&#x4E2A;BMP&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#x4E86;27,973&#x4E2A;&#x6C49;&#x5B57;&#x3002; Supplementary Multilingual Plane&#xFF08;SMP&#xFF09; &#x628A;Plane1&#x4E0B;&#x5305;&#x542B;&#x7684;&#x7F16;&#x7801;&#x79F0;&#x4F5C;&#x591A;&#x8BED;&#x8A00;&#x8865;&#x5145;&#x9762; Supplementary Multilingual Plane&#xFF0C;&#x7B80;&#x79F0;SMP&#x3002;&#x4F4D;&#x4E8E;&#x8FD9;&#x4E2A;&#x9762;&#x5B57;&#x7B26;&#x6216;&#x8005;&#x4E0D;&#x592A;&#x5E38;&#x7528;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x4E3A;&#x4E86;&#x7279;&#x6B8A;&#x542B;&#x4E49;&#x4E13;&#x95E8;&#x9020;&#x7684;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x8868;&#x610F;&#x7B26;&#x53F7;&#xFF0C;&#x6216;&#x8005;&#x662F;BMP&#x5B57;&#x7B26;&#x7684;&#x4E0D;&#x5E38;&#x7528;&#x7684;&#x53D8;&#x79CD;&#x3002; Supplementary Ideographic Plane&#xFF08;SIP&#xFF09; &#x628A;Plane2&#x4E0B;&#x5305;&#x542B;&#x7684;&#x7F16;&#x7801;&#x79F0;&#x4F5C;&#x8868;&#x610F;&#x8865;&#x5145;&#x9762; Supplementary Ideographic Plane&#xFF0C;&#x7B80;&#x79F0;SIP&#x3002;&#x8FD9;&#x4E2A;&#x533A;&#x57DF;&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E2D;&#x65E5;&#x97E9;&#x8C61;&#x5F62;&#x6587;&#x5B57;&#x5F00;&#x8F9F;&#x7684;&#x4E00;&#x5757;&#x6269;&#x5C55;&#x7A7A;&#x95F4;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x4E0D;&#x9002;&#x5408;&#x653E;&#x5230;BMP&#x4E2D;&#x7684;&#x751F;&#x50FB;&#x5B57;&#x3002;&#x8FD9;&#x4E2A;&#x533A;&#x57DF;&#x9664;&#x4E86;&#x6709;&#x5C11;&#x91CF;&#x5E38;&#x7528;CJK&#x5B57;&#x7B26;&#x5916;&#xFF08;&#x5982;&#x5E7F;&#x4E1C;&#x8BDD;&#x91CC;&#x7684;&#x5E38;&#x7528;&#x5B57;&#xFF09;&#xFF0C;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x662F;&#x975E;&#x5E38;&#x7F55;&#x89C1;&#x7684;&#x751F;&#x50FB;&#x5B57;&#x3002; Supplementary Special-purpose Plane&#xFF08;SSP&#xFF09; &#x628A;Plane14&#x4E0B;&#x5305;&#x542B;&#x7684;&#x7F16;&#x7801;&#x79F0;&#x4F5C;&#x7279;&#x6B8A;&#x7528;&#x9014;&#x8865;&#x5145;&#x9762; Supplementary Special-purpose Plane&#xFF0C;&#x7B80;&#x79F0;SSP&#x3002;&#x8FD9;&#x4E2A;&#x533A;&#x57DF;&#x7684;&#x5B57;&#x7B26;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x662F;&#x66F4;&#x4E0D;&#x5E38;&#x7528;&#x7684;&#x683C;&#x5F0F;&#x63A7;&#x5236;&#x7B26;&#x3002; Private Use Planes &#x8FD8;&#x5269;&#x4E0B;Plane15&#x3001;Plane16&#x4E24;&#x4E2A;&#x9762;&#xFF0C;&#x7528;&#x4E8E;&#x79C1;&#x6709;&#x7528;&#x9014;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x533A;&#x57DF;&#x5305;&#x542B;&#x4E86;131,068&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x7528;&#x4E8E;&#x8865;&#x5145;BMP&#x4E2D;6400&#x4E2A;&#x4EE3;&#x7406;&#x53BB;&#x7801;&#x4F4D;&#xFF0C;&#x5177;&#x4F53;&#x7EC6;&#x8282;&#x5728;&#x540E;&#x9762;&#x8BB2;&#x5230;UTF-16&#x7F16;&#x7801;&#x65F6;&#x518D;&#x89E3;&#x91CA;&#x3002; &#x6C49;&#x5B57;&#x5728;Unicode&#x4E2D;&#x7684;&#x5206;&#x5E03; &#x5728;Unicode&#x4E2D;&#xFF0C;&#x4E2D;&#x65E5;&#x97E9;&#x7684;&#x6C49;&#x5B57;&#x96C6;&#x4E2D;&#x5728;&#x51E0;&#x4E2A;&#x533A;&#x57DF;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x662F;&#x6DF7;&#x5728;&#x4E00;&#x8D77;&#x7684;&#x3002;&#x8FD9;&#x51E0;&#x4E2A;&#x533A;&#x57DF;&#x5206;&#x522B;&#x662F;&#xFF1A; &#x5757;&#x540D;&#x79F0; &#x4F4D;&#x7F6E; &#x6C49;&#x5B57;&#x4E2A;&#x6570; &#x63CF;&#x8FF0; CJK Unified Ideographs 4E00&#x2013;9FFF 20,991 &#x5E38;&#x7528;&#x5B57; CJK Unified Ideographs Extension A 3400&#x2013;4DBF 6591 &#x751F;&#x50FB;&#x5B57; CJK Unified Ideographs Extension B 20000&#x2013;2A6DF 42,719 &#x53E4;&#x6C49;&#x5B57;&#x9057;&#x7559;&#x7684;&#x751F;&#x50FB;&#x5B57; CJK Unified Ideographs Extension C 2A700&#x2013;2B73F 4,159 &#x53E4;&#x6C49;&#x5B57;&#x9057;&#x7559;&#x7684;&#x751F;&#x50FB;&#x5B57; CJK Unified Ideographs Extension D 2B740&#x2013;2B81F 223 &#x73B0;&#x5728;&#x8FD8;&#x5728;&#x7528;&#xFF0C;&#x4F46;&#x4F7F;&#x7528;&#x8F83;&#x5C11; CJK Unified Ideographs Extension E 2B820&#x2013;2CEAF 5,775 &#x53E4;&#x6C49;&#x5B57;&#x9057;&#x7559;&#x7684;&#x751F;&#x50FB;&#x5B57; CJK Compatibility Ideographs F900&#x2013;FAFF 511 &#x91CD;&#x590D;&#x7684;&#x53D8;&#x4F53;&#x5B57; CJK Compatibility Ideographs Supplement 2F800&#x2013;2FA1F 543 &#x53D8;&#x4F53;&#x5B57; &#x603B;&#x8BA1; 81,432 &#x5173;&#x4E8E;&#x53D8;&#x4F53;&#x5B57;&#xFF0C;&#x6709;&#x4E9B;&#x770B;&#x8D77;&#x6765;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6BD4;&#x5982;F902 &#xF902; 8ECA &#x8ECA;&#xFF0C;F907 &#xF907; F908 &#xF908; 9F9C &#x9F9C;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5728;&#x67D0;&#x4E9B;&#x7F16;&#x7801;&#x4E2D;&#x540C;&#x65F6;&#x5B58;&#x5728;&#x4E86;&#x540C;&#x4E00;&#x4E2A;&#x5B57;&#x7684;&#x82E5;&#x5E72;&#x5199;&#x6CD5;&#xFF08;&#x5C31;&#x662F;&#x5B57;&#x5F62;&#x76F8;&#x4F3C;&#xFF0C;&#x4E14;&#x7F16;&#x7801;&#x4E0D;&#x540C;&#xFF09;&#xFF0C;&#x4E3A;&#x4E86;&#x517C;&#x5BB9;&#xFF0C;&#x624D;&#x7ED9;&#x4E86;&#x8FD9;&#x4E48;&#x4E2A;&#x533A;&#x57DF;&#xFF0C;Unicode &#x7EC4;&#x7EC7;&#x4E0D;&#x5EFA;&#x8BAE;&#x518D;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x3002; &#x5173;&#x4E8E;&#x7F16;&#x7801;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x6848; &#x8FC7;&#x53BB;&#x4E00;&#x76F4;&#x628A;Unicode&#x6807;&#x51C6;&#x4E0E;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x641E;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;Unicode&#x6807;&#x51C6;&#x7ED9;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x89C4;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x7F16;&#x53F7;&#xFF0C;&#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x6570;&#x5B57;&#x8F83;&#x957F;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x91CC;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x5B58;&#x50A8;&#x548C;&#x4F20;&#x8F93;&#xFF0C;&#x4E5F;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x89C4;&#x8303;&#x4E86;&#x3002;&#x6BD4;&#x5982;&#x540C;&#x6837;&#x90FD;&#x662F;&#x8BF4;2016&#x5E74;10&#x6708;8&#x65E5;&#xFF0C;&#x6709;&#x7684;&#x4E66;&#x5199;&#x89C4;&#x8303;&#x5199;&#x6210;2016/10/08&#xFF0C;&#x6709;&#x7684;&#x5C31;&#x5199;&#x6210;16/10/08&#xFF0C;&#x8FD8;&#x6709;16/08/10&#x7684;&#x2026;&#x2026; &#x65E2;&#x7136;&#x7F16;&#x7801;&#x65B9;&#x6848;&#x90FD;&#x7EDF;&#x4E00;&#x4E86;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x4E0D;&#x7EDF;&#x4E00;&#x6210;&#x4E00;&#x4E2A;&#x5462;&#xFF1F;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x662F;&#x6839;&#x636E;&#x7528;&#x9014;&#x4E0D;&#x540C;&#x800C;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x4E0B;&#x6709;&#x5404;&#x81EA;&#x7684;&#x4F18;&#x52BF;&#x3002;&#x6BD4;&#x5982;UTF-8&#x662F;&#x53D8;&#x957F;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#xFF0C;Unicode&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x4E2D;&#x5728;&#x524D;&#x9762;&#xFF0C;UTF-8&#x91C7;&#x7528;&#x8F83;&#x5C11;&#x7684;&#x5B57;&#x8282;&#x5C31;&#x80FD;&#x8868;&#x793A;&#xFF0C;&#x4E0D;&#x5E38;&#x7528;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x4E2D;&#x5728;&#x540E;&#x9762;&#xFF0C;UTF-8&#x9700;&#x8981;&#x4F7F;&#x7528;&#x8F83;&#x957F;&#x7684;&#x5B57;&#x8282;&#x6765;&#x8868;&#x793A;&#x3002;&#x8FD9;&#x79CD;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x8282;&#x7701;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x7F3A;&#x70B9;&#x5C31;&#x662F;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x53D8;&#x957F;&#x7684;&#x3002; &#x5B9A;&#x957F;&#x7684;&#x65B9;&#x6848;&#x4E5F;&#x6709;&#xFF1A;UTF-32&#xFF0C;&#x8DDF;Unicode&#x6807;&#x51C6;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#xFF0C;&#x76F4;&#x89C2;&#x660E;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x7F3A;&#x70B9;&#x5C31;&#x662F;&#x6D6A;&#x8D39;&#x5B57;&#x8282;&#x6570;&#x3002; &#x8FD8;&#x6709;UTF-16&#xFF0C;&#x957F;&#x671F;&#x4EE5;&#x6765;&#x6211;&#x4EE5;&#x4E3A;Windows&#x9ED8;&#x8BA4;&#x91C7;&#x7528;&#x7684;UNCIODE&#x7F16;&#x7801;&#x5C31;&#x662F;UTF-16&#xFF0C;&#x5176;&#x5B9E;&#x6B63;&#x5B97;&#x7684;UTF-16&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;UTF-8&#x7684;&#x53D8;&#x957F;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF0C;&#x4EE5;&#x540E;&#x6709;&#x7A7A;&#x518D;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x3002;&#x800C;Windows&#x91C7;&#x7528;&#x7684;&#x53EA;&#x662F;&#x5B83;&#x7684;&#x9609;&#x5272;&#x7248;&#xFF0C;&#x7528;&#x5B9A;&#x957F;&#x7684;2&#x5B57;&#x8282;&#x8868;&#x793A;BMP&#x4E2D;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x81F3;&#x4E8E;&#x5176;&#x4ED6;&#x5E73;&#x9762;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;0x10000&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x652F;&#x6301;&#x4E86;&#x3002; &#x51E0;&#x4E2A;&#x5E73;&#x53F0;&#x4E0B;&#x7684;&#x5B57;&#x4F53;&#x652F;&#x6301; &#x7F16;&#x7801;&#x89C4;&#x8303;&#x6536;&#x5F55;&#x4E86;&#xFF0C;&#x7F16;&#x7801;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x652F;&#x6301;&#x4E86;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x6709;&#x5B57;&#x4F53;&#x652F;&#x6301;&#x624D;&#x80FD;&#x663E;&#x793A;&#x51FA;&#x6765;&#x3002;&#x62FF;python+fonttools&#x5199;&#x6BB5;&#x811A;&#x672C;&#xFF0C;&#x53EF;&#x4EE5;&#x8DD1;&#x51FA;&#x6765;&#x6BCF;&#x4E2A;&#x5E73;&#x53F0;&#x4E0B;&#x7684;&#x5B57;&#x4F53;&#x6587;&#x4EF6;&#x5404;&#x81EA;&#x5305;&#x542B;&#x4EC0;&#x4E48;&#x533A;&#x57DF;&#x7684;&#x591A;&#x5C11;&#x6C49;&#x5B57;&#x3002;&#x6211;&#x628A;&#x4EE3;&#x7801;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#x4E86;&#x3002;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x7CFB;&#x7EDF; &#x5B57;&#x4F53; CJK UI ExtA ExtB ExtC ExtD ExtE CJK CI CJK CIS WinXP &#x5FAE;&#x8F6F;&#x96C5;&#x9ED1; 20,909 6,582 8 0 0 0 21 0 WinXP &#x5B8B;&#x4F53; 20,902 52 0 0 0 0 21 0 Win7 &#x5FAE;&#x8F6F;&#x96C5;&#x9ED1; 20,909 6,582 8 0 0 0 21 0 Win7 &#x5B8B;&#x4F53; 20,910 6,582 0 0 0 0 21 0 Android7.1 Droid Sans Fall back 20,902 6,582 0 0 0 0 302 0 macOS &#x82F9;&#x65B9; 20,929 6,582 1,088 0 0 0 95 11 iOS9 &#x82F9;&#x65B9; 20,929 6,582 1,088 0 0 0 95 11 &#x8C8C;&#x4F3C;&#x5404;&#x81EA;&#x5728;ExtB&#x4E0A;&#x533A;&#x522B;&#x4E0D;&#x5927;&#xFF0C;&#x53CD;&#x800C;&#x82F9;&#x65B9;&#x8FD8;&#x6709;&#x4E00;&#x5343;&#x591A;&#x4E2A;&#x5B57;&#xFF0C;Windows&#x4E0B;&#x5B8B;&#x4F53;&#x5B57;&#x5E93;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x5BF9;ExtB&#x4E0A;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;Win7&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x663E;&#x793A;&#x8FD9;&#x4E2A;&#x5B57;&#x5462;&#xFF1F; Windows&#x7684;&#x5B57;&#x4F53;&#x94FE;&#x63A5;&#x5BF9;&#x751F;&#x50FB;&#x5B57;&#x7684;&#x652F;&#x6301; &#x5B57;&#x4F53;&#x94FE;&#x63A5; &#x5728;Windows&#x4E0B;&#x6709;&#x79CD;&#x6280;&#x672F;&#x53EB;&#x505A;&#x5B57;&#x4F53;&#x94FE;&#x63A5;&#x3002;&#x53EF;&#x4EE5;&#x7ED9;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x4F53;&#x6CE8;&#x518C;&#x4E00;&#x4E32;&#x94FE;&#x63A5;&#x5B57;&#x4F53;&#xFF0C;&#x5F53;&#x8BE5;&#x5B57;&#x4F53;&#x4E0D;&#x652F;&#x6301;&#x67D0;&#x4E2A;&#x5B57;&#x5F62;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x4F9D;&#x6B21;&#x5C1D;&#x8BD5;&#x94FE;&#x63A5;&#x4E32;&#x4E0A;&#x7684;&#x5176;&#x5B83;&#x5B57;&#x4F53;&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x51FA;&#x80FD;&#x652F;&#x6301;&#x7684;&#x5B57;&#x4F53;&#x628A;&#x4ED6;&#x663E;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x6216;&#x8005;&#x628A;&#x4E00;&#x4E32;&#x94FE;&#x63A5;&#x5B57;&#x4F53;&#x90FD;&#x904D;&#x5386;&#x5B8C;&#x540E;&#x4F9D;&#x7136;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x624D;&#x4E0D;&#x663E;&#x793A;&#x3002; &#x5728;&#x6CE8;&#x518C;&#x8868;&#x4F4D;&#x7F6E;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink&#xFF0C;&#x627E;&#x5230;&#x67D0;&#x4E00;&#x5B57;&#x4F53;&#xFF0C;&#x6BD4;&#x5982;&#x5B8B;&#x4F53;SimSun&#xFF0C;&#x53D1;&#x73B0;&#x8BE5;&#x9879;&#x7684;&#x503C;&#x4E3A;&#xFF1A; 12345MICROSS.TTF,108,122MICROSS.TTFMINGLIU.TTC,PMingLiUMSMINCHO.TTC,MS PMinchoBATANG.TTC,Batang &#x53EF;&#x662F;&#x6211;&#x628A;&#x8FD9;&#x4E9B;&#x5B57;&#x4F53;&#x904D;&#x5386;&#x4E4B;&#x540E;&#x53D1;&#x73B0;&#x4ED6;&#x4EEC;&#x4E5F;&#x6CA1;&#x6709;ExtB&#x7684;&#x5B57;&#x4F53;&#x3002; ## SurrogateFallback &#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x6CE8;&#x518C;&#x8868;&#x9879;&#x4E13;&#x95E8;&#x8BB0;&#x5F55;&#x4E86;ExtB&#x7684;&#x5B57;&#x4F53;&#x4F4D;&#x7F6E;&#xFF1A;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\LanguagePack\SurrogateFallback&#xFF0C;Plane2&#x4E0B;&#x7684;&#x503C;&#x4E3A;SimSun-ExtB&#x3002;&#x7136;&#x540E;&#x53BB;&#x5230;C:\Windows\Fonts&#x4E0B;&#x627E;&#x5230;SimSun-ExtB&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x4F53;&#x6587;&#x4EF6;&#x4E3A;simsunb.ttf&#x3002;&#x8DD1;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; &#x5B57;&#x4F53; CJK UI ExtA ExtB ExtC ExtD ExtE CJK CI CJK CIS simsunb 0 0 42,711 0 0 0 0 0]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Unicode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（十一）]]></title>
    <url>%2F2016%2F10%2F04%2F2016%2F1004KeyboardLearning11%2F</url>
    <content type="text"><![CDATA[&#x627F;&#x63A5;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x5341;&#xFF09;&#x300B;&#x5F53;InputDispatcher&#x88AB;InputReader&#x5524;&#x9192;&#x540E;&#xFF0C;&#x542F;&#x52A8;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x6D41;&#x7A0B;&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x628A;&#x5206;&#x53D1;&#x6570;&#x636E;&#x5199;&#x5165;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x6CE8;&#x518C;&#x8FDB;&#x6765;&#x7684;socket&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5B8C;&#x6210;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x3002;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;Looper&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x5E76;&#x4E14;&#x8C03;&#x7528;&#x4E0E;&#x8BE5;&#x63CF;&#x8FF0;&#x7B26;&#x5173;&#x8054;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x3002; &#x5148;&#x56DE;&#x987E;&#x4E00;&#x4E0B;&#x5F53;&#x521D;&#x662F;&#x5982;&#x4F55;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E3B;&#x7EBF;&#x7A0B;Looper&#x4E2D;&#x6CE8;&#x518C;InputChannel&#x7684;&#x5427;&#xFF0C;&#x53C2;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516B;&#xFF09;&#x300B;&#x7684;Step5&#xFF1A; 123456789101112// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:145void NativeInputEventReceiver::setFdEvents(int events) { if (mFdEvents != events) { mFdEvents = events; int fd = mInputConsumer.getChannel()-&gt;getFd(); if (events) { // &#x4E3A;&#x771F; mMessageQueue-&gt;getLooper()-&gt;addFd(fd, 0, events, this, NULL); } else { mMessageQueue-&gt;getLooper()-&gt;removeFd(fd); } }} mInputConsumer.getChannel()-&gt;getFd()&#x8FD4;&#x56DE;ViewRootImpl::mInputChannel-&gt;getFd()&#xFF0C;&#x5373;Client&#x7AEF;&#x7684;InputChannel&#x7684;socket&#x63CF;&#x8FF0;&#x7B26;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;addFd(...)&#x7684;&#x7B2C;&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x56DE;&#x8C03;&#x63A5;&#x53E3;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x53C2;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x300B;&#x4E4B;Looper::pollInner(...)&#xFF0C;&#x5F53;Looper&#x88AB;&#x5524;&#x9192;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x6CE8;&#x518C;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x6709;&#x56DE;&#x8C03;&#x63A5;&#x53E3;&#xFF0C;&#x5219;&#x8C03;&#x7528;&#x5176;handleEvent(...)&#x51FD;&#x6570;&#x3002;&#x672C;&#x6587;&#x5C31;&#x4EE5;NativeInputEventReceiver::handleEvent(...)&#x51FD;&#x6570;&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;&#x6765;&#x770B;&#x8BE5;&#x4E8B;&#x4EF6;&#x5982;&#x4F55;&#x88AB;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#x5904;&#x7406;&#x3002; Step1: NativeInputEventReceiver::handleEvent(...) 12345678910111213// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:157int NativeInputEventReceiver::handleEvent(int receiveFd, int events, void* data) { ... ... if (events &amp; ALOOPER_EVENT_INPUT) { JNIEnv* env = AndroidRuntime::getJNIEnv(); status_t status = consumeEvents(env, false /*consumeBatches*/, -1, NULL); // &#x1F3C1; mMessageQueue-&gt;raiseAndClearException(env, &quot;handleReceiveCallback&quot;); return status == OK || status == NO_MEMORY ? 1 : 0; } ... ... return 1;} Step2: NativeInputEventReceiver::consumeEvents(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:217status_t NativeInputEventReceiver::consumeEvents(JNIEnv* env, bool consumeBatches, nsecs_t frameTime, bool* outConsumedBatch) { // consumeBatches false // frameTime -1 // outConsumedBatch NULL ... ... ScopedLocalRef&lt;jobject&gt; receiverObj(env, NULL); bool skipCallbacks = false; for (;;) { uint32_t seq; InputEvent* inputEvent; // &#x1F3C1;Step3: &#x5C06;InputDispatcher&#x5206;&#x53D1;&#x8FC7;&#x6765;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x8BFB;&#x53D6;&#x5230;inputEvent status_t status = mInputConsumer.consume(&amp;mInputEventFactory, consumeBatches, frameTime, &amp;seq, &amp;inputEvent); ... ... if (!skipCallbacks) { // &#x4E3A;&#x771F; // &#x524D;&#x9762;&#x8BFB;&#x53D6;&#x5230;&#x4E86;&#x5408;&#x6CD5;&#x6570;&#x636E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5728;&#x7A97;&#x53E3;&#x6D88;&#x606F;&#x7EC4;&#x7EC7;&#x5408;&#x9002;&#x7684;&#x5206;&#x53D1;&#x51FD;&#x6570;&#xFF0C;&#x5B8C;&#x6210;&#x5206;&#x53D1; if (!receiverObj.get()) { // &#x6B64;&#x5904;&#x5F97;&#x5230;&#x7684;&#x662F;java&#x5C42;InputEventReceiver&#x7684;&#x5F31;&#x5F15;&#x7528;&#x6307;&#x9488; // &#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516B;&#xFF09;&#x300B;Step1&#x3001;2&#xFF0C;&#x8FD9;&#x4E2A;&#x6307;&#x9488; // &#x5B9E;&#x9645;&#x6307;&#x5411;&#x7684;&#x662F;&#x4E00;&#x4E2A;WindowInputEventReceiver&#x5BF9;&#x8C61; receiverObj.reset(jniGetReferent(env, mReceiverWeakGlobal)); ... ... } jobject inputEventObj; switch (inputEvent-&gt;getType()) { case AINPUT_EVENT_TYPE_KEY: ... ... // &#x628A;C++&#x5C42;InputEvent&#x5BF9;&#x8C61;&#x8F6C;&#x6210;Java&#x5C42;InputEvent&#x5BF9;&#x8C61; inputEventObj = android_view_KeyEvent_fromNative(env, static_cast&lt;KeyEvent*&gt;(inputEvent)); break; ... ... } if (inputEventObj) { ... ... // &#x1F3C1;Step5:&#x8C03;&#x7528;java&#x5C42; // WindowInputEventReceiver::dispatchInputEvent(...)&#x51FD;&#x6570; env-&gt;CallVoidMethod(receiverObj.get(), gInputEventReceiverClassInfo.dispatchInputEvent, seq, inputEventObj); if (env-&gt;ExceptionCheck()) { ... ... skipCallbacks = true; } env-&gt;DeleteLocalRef(inputEventObj); } else { ... ... skipCallbacks = true; } } if (skipCallbacks) { mInputConsumer.sendFinishedSignal(seq, false); } }} Step3: InputConsumer::consume(...) 12345678910111213141516171819202122232425262728293031323334// frameworks/native/libs/input/InputTransport.cpp:399// &#x4ECE;InputChannel&#x8BFB;&#x51FA;&#x6570;&#x636E;&#xFF0C;&#x8FD4;&#x56DE;&#x5230;outEventstatus_t InputConsumer::consume(InputEventFactoryInterface* factory, bool consumeBatches, nsecs_t frameTime, uint32_t* outSeq, InputEvent** outEvent) { // consumeBatches false // frameTime -1 ... ... *outSeq = 0; *outEvent = NULL; // Fetch the next input message. // Loop until an event can be returned or no additional events are received. while (!*outEvent) { ... ... // Receive a fresh message. status_t result = mChannel-&gt;receiveMessage(&amp;mMsg); // &#x1F3C1;Step4 ... ... switch (mMsg.header.type) { case InputMessage::TYPE_KEY: { KeyEvent* keyEvent = factory-&gt;createKeyEvent(); if (!keyEvent) return NO_MEMORY; initializeKeyEvent(keyEvent, &amp;mMsg); // &#x7528;&#x8BFB;&#x51FA;&#x7684;&#x6570;&#x636E;&#x521D;&#x59CB;&#x5316;KeyEvent&#x5BF9;&#x8C61; *outSeq = mMsg.body.key.seq; *outEvent = keyEvent; ... ... break; } ... ... } return OK;} &#x5B83;&#x8BFB;&#x51FA;&#x7684;mMsg&#x8DDF;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x5341;&#xFF09;&#x300B;&#x4E4B;Step8&#x521A;&#x597D;&#x662F;&#x76F8;&#x5E94;&#x7684;&#xFF0C;&#x524D;&#x9762;&#x662F;&#x5F80;&#x91CC;&#x5199;&#xFF0C;&#x6B64;&#x5904;&#x662F;&#x8BFB;&#x51FA;&#x6765;&#x3002;&#x7136;&#x540E;&#x628A;&#x72EC;&#x5904;&#x7684;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x6210;KeyEvent&#x7C7B;&#x578B;&#xFF0C;&#x8D4B;&#x7ED9;*outEvent&#xFF0C;&#x8FD9;&#x4F1A;&#x7EC8;&#x6B62;&#x4E0B;&#x4E00;&#x8F6E;&#x7684;while&#x5FAA;&#x73AF;&#x3002; # Step4: InputChannel::receiveMessage(...) 123456789// frameworks/native/libs/input/InputTransport.cpp:188status_t InputChannel::receiveMessage(InputMessage* msg) { ssize_t nRead; do { // &#x975E;&#x963B;&#x585E;&#x5F0F;&#x63A5;&#x6536; nRead = ::recv(mFd, msg, sizeof(InputMessage), MSG_DONTWAIT); } while (nRead == -1 &amp;&amp; errno == EINTR); ... ... return OK;} &#x6CE8;&#x610F;&#x5728;::recv&#x7B2C;&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;MSG_DONTWAIT&#x6807;&#x5FD7;&#xFF0C;&#x8868;&#x660E;&#x8BE5;&#x8BFB;&#x64CD;&#x4F5C;&#x662F;&#x4E2A;&#x975E;&#x963B;&#x585E;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5F53;&#x524D;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x53EF;&#x8BFB;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;EWOULDBLOCK&#x9519;&#x8BEF;&#x3002;&#x5728;&#x672C;&#x8282;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4E4B;&#x6240;&#x4EE5;&#x88AB;&#x6267;&#x884C;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x4E3B;&#x7EBF;&#x7A0B;Looper&#x88AB;&#x8BE5;socketIO&#x4E8B;&#x4EF6;&#x901A;&#x77E5;&#x5230;&#x800C;&#x5524;&#x9192;&#xFF0C;&#x8BF4;&#x660E;&#x4E00;&#x5B9A;&#x662F;&#x6709;&#x6570;&#x636E;&#x53EF;&#x8BFB;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8FD9;&#x91CC;&#x4F1A;&#x8FD4;&#x56DE;OK&#xFF0C;&#x5373;0&#x3002; &#x8FD4;&#x56DE;&#x5230;Step3&#x4E2D;&#xFF0C;&#x628A;&#x8BFB;&#x5230;&#x7684;&#x6570;&#x636E;&#x7EC4;&#x7EC7;&#x6210;KeyEvent&#x5BF9;&#x8C61;&#xFF0C;&#x8FD4;&#x56DE;&#x7ED9;&#x8F93;&#x51FA;&#x53C2;&#x6570;&#x3002;&#x518D;&#x56DE;&#x5230;Step2&#x4E2D;&#xFF0C;&#x524D;&#x534A;&#x90E8;&#x5206;&#x662F;&#x8BFB;&#x53D6;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x540E;&#x534A;&#x90E8;&#x5206;&#x662F;&#x8C03;&#x7528;WindowInputEventReceiver::dispatcheInputEvent(...)&#x51FD;&#x6570;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7EE7;&#x627F;&#x81EA;InputEventReceiver&#xFF1A; Step5: InputEventReceiver::dispatchInputEvent(...) 12345// frameworks/base/core/java/android/view/InputEventReceiver.java:183 private void dispatchInputEvent(int seq, InputEvent event) { mSeqMap.put(event.getSequenceNumber(), seq); onInputEvent(event); // &#x1F3C1; } onInputEvent(...)&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#xFF0C;&#x8C03;&#x7528;WidnowInputEventReceiver&#x7684;&#x7248;&#x672C;&#xFF1A; # Step6: WindowInputEventReceiver::onInputEvent(...) 1234// frameworks/base/core/java/android/view/ViewRootImpl.java:6025 public void onInputEvent(InputEvent event) { enqueueInputEvent(event, this, 0, true); // &#x1F3C1; } enqueueInputEvent(...)&#x5373;&#x6CA1;&#x6709;&#x5728;WindowInputEventReceiver&#x4E2D;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x5728;&#x5176;&#x7236;&#x7C7B;InputEventReceiver&#x4E2D;&#x3002;WindowInputEventReceiver&#x662F;&#x5B9A;&#x4E49;&#x5728;ViewRootImpl&#x4E2D;&#x7684;&#x5185;&#x90E8;&#x7C7B;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x53BB;ViewRootImpl&#x4E2D;&#x627E;&#xFF1A; # Step7: ViewRootImpl::enqueueInputEvent(...) 1234567891011121314151617// frameworks/base/core/java/android/view/ViewRootImpl.java:5835 void enqueueInputEvent(InputEvent event, InputEventReceiver receiver, int flags, boolean processImmediately) { // flags 0 // processImmediately true adjustInputEventForCompatibility(event); // &#x5C06;event&#x5165;&#x961F; QueuedInputEvent q = obtainQueuedInputEvent(event, receiver, flags); ... ... mPendingInputEventCount += 1; ... ... if (processImmediately) { doProcessInputEvents(); // &#x1F3C1; } else { scheduleProcessInputEvents(); } } Step8: ViewRootImpl::doProcessInputEvents(...) // frameworks/base/core/java/android/view/ViewRootImpl.java:5873 1234567891011121314void doProcessInputEvents() { // Deliver all pending input events in the queue. while (mPendingInputEventHead != null) { ... ... deliverInputEvent(q); // &#x1F3C1; } // We are done processing all input events that we can process right now // so we can clear the pending flag immediately. if (mProcessInputEventsScheduled) { mProcessInputEventsScheduled = false; mHandler.removeMessages(MSG_PROCESS_INPUT_EVENTS); }} Step9: ViewRootImpl::deliverInputEvent(...) 123456789101112131415161718192021// frameworks/base/core/java/android/view/ViewRootImpl.java:5908 private void deliverInputEvent(QueuedInputEvent q) { Trace.asyncTraceBegin(Trace.TRACE_TAG_VIEW, &quot;deliverInputEvent&quot;, q.mEvent.getSequenceNumber()); if (mInputEventConsistencyVerifier != null) { mInputEventConsistencyVerifier.onInputEvent(q.mEvent, 0); } InputStage stage; if (q.shouldSendToSynthesizer()) { // &#x8FD9;&#x91CC;&#x5E94;&#x8BE5;&#x662F;&#x5904;&#x7406;&#x5408;&#x6210;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x7684;&#x5206;&#x652F; stage = mSyntheticInputStage; } else { // &#x663E;&#x7136;&#x4E0D;&#x5E94;&#x8BE5;&#x5FFD;&#x7565;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;stage = mFirstInputStage stage = q.shouldSkipIme() ? mFirstPostImeInputStage : mFirstInputStage; } if (stage != null) { stage.deliver(q); // &#x1F3C1; } else { finishInputEvent(q); } } &#x6765;&#x770B;ViewRootImpl::setView(...)&#x65F6;&#x5BF9;InputStage&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF1A; 1234567891011121314151617181920// frameworks/base/core/java/android/view/ViewRootImpl.java:633 // Set up the input pipeline. CharSequence counterSuffix = attrs.getTitle(); mSyntheticInputStage = new SyntheticInputStage(); InputStage viewPostImeStage = new ViewPostImeInputStage( mSyntheticInputStage); InputStage nativePostImeStage = new NativePostImeInputStage( viewPostImeStage, &quot;aq:native-post-ime:&quot; + counterSuffix); InputStage earlyPostImeStage = new EarlyPostImeInputStage( nativePostImeStage); InputStage imeStage = new ImeInputStage(earlyPostImeStage, &quot;aq:ime:&quot; + counterSuffix); InputStage viewPreImeStage = new ViewPreImeInputStage(imeStage); InputStage nativePreImeStage = new NativePreImeInputStage( viewPreImeStage, &quot;aq:native-pre-ime:&quot; + counterSuffix); mFirstInputStage = nativePreImeStage; mFirstPostImeInputStage = earlyPostImeStage; mPendingInputEventQueueLengthCounterName = &quot;aq:pending:&quot; + counterSuffix; &#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x4ED6;&#x4EEC;&#x4F9D;&#x6B21;&#x4EE5;&#x524D;&#x9762;&#x7684;&#x4E00;&#x4E2A;InputStage&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A; NativePreImeInputStage -&gt; ViewPreImeInputStage -&gt; ImeInputStage -&gt;EarlyPostImeInputStage -&gt; NativePostImeInputStage -&gt; ViewPostImeInputStage -&gt; SyntheticInputStage &#x4ED6;&#x4EEC;&#x4F9D;&#x6B21;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#x7684;&#x5904;&#x7406;&#x94FE;&#xFF0C;&#x5982;&#x679C;&#x672C;&#x9636;&#x6BB5;&#x5BF9;&#x65F6;&#x95F4;&#x6CA1;&#x6709;&#x5904;&#x7406;&#xFF0C;&#x5219;&#x4F20;&#x9012;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5904;&#x7406;&#xFF0C;&#x77E5;&#x9053;&#x4E8B;&#x4EF6;&#x88AB;&#x5904;&#x7406;&#x3002; &#x6B64;&#x5904;&#x7684;stage&#x5E94;&#x8BE5;&#x88AB;&#x8D4B;&#x503C;&#x4E3A;mFirstInputStage&#x5373;NativePreInputStage&#x3002; Step10: InputStage::deliver(...) 12345678910// frameworks/base/core/java/android/view/ViewRootImpl.java:3637 public final void deliver(QueuedInputEvent q) { if ((q.mFlags &amp; QueuedInputEvent.FLAG_FINISHED) != 0) { forward(q); } else if (shouldDropInputEvent(q)) { finish(q, false); } else { apply(q, onProcess(q)); // &#x1F3C1; } } &#x7531;&#x4E8E;&#x65F6;&#x95F4;&#x8FD8;&#x6CA1;&#x5B8C;&#x6210;&#xFF0C;&#x4E0D;&#x4F1A;&#x5E26;&#x4E0A;FLAG_FINISHED&#x6807;&#x5FD7;&#xFF0C;&#x6B63;&#x5E38;&#x6848;&#x4EF6;&#x6D88;&#x606F;&#x4E0D;&#x5E94;&#x8BE5;&#x88AB;&#x629B;&#x5F03;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x8D70;apply(...)&#x5206;&#x652F;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x53C8;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x5148;&#x6765;&#x770B;onProcess(...) # Step11: NativePreImeInputStage::onProcess(...) 12345678// frameworks/base/core/java/android/view/ViewRootImpl.java:3899 protected int onProcess(QueuedInputEvent q) { if (mInputQueue != null &amp;&amp; q.mEvent instanceof KeyEvent) { mInputQueue.sendInputEvent(q.mEvent, q, true, this); // &#x1F3C1; return DEFER; } return FORWARD; } Step12: InputQueue::sendInputEvent(...) 123456789101112// frameworks/base/core/java/android/view/InputQueue.java:91 public void sendInputEvent(InputEvent e, Object token, boolean predispatch, FinishedInputEventCallback callback) { ActiveInputEvent event = obtainActiveInputEvent(token, callback); long id; if (e instanceof KeyEvent) { // &#x6211;&#x4EEC;&#x5173;&#x6CE8;&#x7684;&#x662F;&#x952E;&#x76D8;&#x6D88;&#x606F; id = nativeSendKeyEvent(mPtr, (KeyEvent) e, predispatch);//&#x1F3C1; } else { id = nativeSendMotionEvent(mPtr, (MotionEvent) e); } mActiveEventArray.put(id, event); } Step13 : nativeSendKeyEvent(...) 12345678910111213141516171819// frameworks/base/core/jni/android_view_InputQueue.cpp:219static jlong nativeSendKeyEvent(JNIEnv* env, jobject clazz, jlong ptr, jobject eventObj, jboolean predispatch) { InputQueue* queue = reinterpret_cast&lt;InputQueue*&gt;(ptr); KeyEvent* event = queue-&gt;createKeyEvent(); status_t status = android_view_KeyEvent_toNative(env, eventObj, event); if (status) { queue-&gt;recycleInputEvent(event); jniThrowRuntimeException(env, &quot;Could not read contents of KeyEvent object.&quot;); return -1; } if (predispatch) { event-&gt;setFlags(event-&gt;getFlags() | AKEY_EVENT_FLAG_PREDISPATCH); } queue-&gt;enqueueEvent(event); // &#x628A;event&#x653E;&#x5165;mPendingEvents&#x961F;&#x5217;&#x4E2D; return reinterpret_cast&lt;jlong&gt;(event);} &#x518D;&#x56DE;&#x5230;Step10&#x4E2D;&#xFF0C;NativePreInputStage&#x6CA1;&#x6709;apply(...)&#xFF0C;&#x627E;&#x7236;&#x7C7B;AsyncInputStage::apply(...)&#x662F;&#x6709;&#x7684;&#x3002; # Step14: AsyncInputStage::apply(...) 12345678910111213141516171819202122232425262728// frameworks/base/core/java/android/view/ViewRootImpl.java:3841 protected void apply(QueuedInputEvent q, int result) { if (result == DEFER) { defer(q); // &#x1F3C1; } else { super.apply(q, result); } }// frameworks/base/core/java/android/view/ViewRootImpl.java:3775 protected void defer(QueuedInputEvent q) { q.mFlags |= QueuedInputEvent.FLAG_DEFERRED; enqueue(q); }// frameworks/base/core/java/android/view/ViewRootImpl.java:3849 private void enqueue(QueuedInputEvent q) { if (mQueueTail == null) { mQueueHead = q; mQueueTail = q; } else { mQueueTail.mNext = q; mQueueTail = q; } mQueueLength += 1; Trace.traceCounter(Trace.TRACE_TAG_INPUT, mTraceCounter, mQueueLength); } &#x672A;&#x5B8C;&#x5F85;&#x7EED;&#xFF0C;&#x6B64;&#x5904;&#x4F3C;&#x4E4E;&#x8D70;&#x8FDB;&#x4E86;&#x6B7B;&#x80E1;&#x540C;&#xFF0C;KeyEvent&#x88AB;&#x5403;&#x6389;&#x4E86;&#xFF01;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（十）InputDispatcher分发键盘事件]]></title>
    <url>%2F2016%2F10%2F04%2F2016%2F1004KeyboardLearning10%2F</url>
    <content type="text"><![CDATA[&#x627F;&#x63A5;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E4B;InputDispatcherThread&#x7684;&#x542F;&#x52A8;&#x3002; 1234567891011121314// frameworks/native/services/inputflinger/InputDispatcher.cpp:4530bool InputDispatcherThread::threadLoop() { mDispatcher-&gt;dispatchOnce(); return true;}// frameworks/native/services/inputflinger/InputDispatcher.cpp:230void InputDispatcher::dispatchOnce() { ... ... dispatchOnceInnerLocked(&amp;nextWakeupTime); // &#x1F3C1; ... ... nsecs_t currentTime = now(); int timeoutMillis = toMillisecondTimeoutDelay(currentTime, nextWakeupTime); mLooper-&gt;pollOnce(timeoutMillis); // &#x7B49;&#x5F85;&#x6D88;&#x606F;} &#x5F53;mLooper-&gt;pollOnce(timeoutMillis)&#x88AB;InputReader&#x5524;&#x9192;&#x540E;&#xFF0C;dispatchOnce(...)&#x5C06;&#x8FD4;&#x56DE;&#xFF0C;threadLoop()&#x4E5F;&#x8FD4;&#x56DE;&#xFF0C;&#x8FDB;&#x5165;thread::_threadLoop(...)&#x5927;&#x5FAA;&#x73AF;&#xFF0C;&#x518D;&#x8C03;&#x7528; InputDispatcherThread::threadLoop() -&gt; InputDispatcher::dispatchOnce() -&gt; InputDispatcher::dispatchOnceInnerLocked(...) &#x8FDB;&#x5165;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x4EE5;InputDispatcher::dispatchOnceInnerLocked(...)&#x4E3A;&#x8D77;&#x70B9;&#x8FDB;&#x5165;&#x8BA8;&#x8BBA;&#x3002; # Step1: InputDispatcher::dispatchOnceInnerLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// frameworks/native/services/inputflinger/InputDispatcher.cpp:255// nextWakeupTime&#x662F;&#x4E2A;&#x4F20;&#x51FA;&#x53C2;&#x6570;&#xFF0C;&#x63CF;&#x8FF0;InputDispatcher&#x5904;&#x7406;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x6700;&#x8FDF;&#x65F6;&#x95F4;void InputDispatcher::dispatchOnceInnerLocked(nsecs_t* nextWakeupTime) { nsecs_t currentTime = now(); ... ... // &#x901A;&#x5E38;&#x6211;&#x4EEC;&#x4F1A;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5207;&#x6362;&#xFF08;&#x901A;&#x8FC7;HOME&#x952E;&#x6216;&#x7ED3;&#x675F;&#x901A;&#x8BDD;&#x952E;&#xFF09;&#x7559;&#x4E00;&#x5C0F;&#x6BB5;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#xFF0C; // &#x5982;&#x679C;&#x65F6;&#x95F4;&#x8FC7;&#x671F;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x7ACB;&#x523B;&#x5206;&#x53D1;&#x6216;&#x8005;&#x4E22;&#x6389;&#x672A;&#x5B8C;&#x6210;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x4EE5;&#x4FBF;&#x4F7F;&#x5207;&#x6362;&#x4F18;&#x5148; bool isAppSwitchDue = mAppSwitchDueTime &lt;= currentTime; if (mAppSwitchDueTime &lt; *nextWakeupTime) { // &#x5982;&#x679C;&#x8FC7;&#x671F;&#xFF0C;&#x628A;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#x4F20;&#x51FA;&#x53BB;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E0A;&#x5C42;&#x7ACB;&#x5373;&#x5904;&#x7406; *nextWakeupTime = mAppSwitchDueTime; } // mPendingEvent&#x6307;&#x5411;&#x4E0A;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C; // &#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x8868;&#x660E;&#x4E0A;&#x6B21;&#x5DF2;&#x6210;&#x529F;&#x5206;&#x53D1;&#xFF0C;&#x53EF;&#x7EE7;&#x7EED;&#x672C;&#x6B21;&#x5206;&#x53D1; if (! mPendingEvent) { // mInboundQueue&#x7EF4;&#x62A4;&#x7740;&#x5F85;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x961F;&#x5217; if (mInboundQueue.isEmpty()) { ... ... // mKeyRepeatState&#x63CF;&#x8FF0;&#x5F53;&#x524D;&#x91CD;&#x590D;&#x952E;&#x76D8;&#x6309;&#x952E;&#x60C5;&#x51B5; if (mKeyRepeatState.lastKeyEntry) { // &#x5982;&#x679C;&#x67D0;&#x4E2A;&#x6309;&#x952E;&#x4E00;&#x76F4;&#x88AB;&#x6309;&#x7740;&#x6CA1;&#x677E;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5728;&#x8FD9;&#x91CC;&#x5408;&#x6210;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; // &#x5982;&#x679C;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x5230;&#x4E86;&#x4E0B;&#x6B21;&#x5904;&#x7406;&#x65F6;&#x95F4;&#xFF0C;&#x5219;&#x5408;&#x6210; if (currentTime &gt;= mKeyRepeatState.nextRepeatTime) { mPendingEvent = synthesizeKeyRepeatLocked(currentTime); } else { if (mKeyRepeatState.nextRepeatTime &lt; *nextWakeupTime) { *nextWakeupTime = mKeyRepeatState.nextRepeatTime; } } } if (!mPendingEvent) { // &#x5982;&#x679C;&#x5F85;&#x5904;&#x7406;&#x961F;&#x5217;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8FD4;&#x56DE; return; } } else { // &#x961F;&#x5217;&#x975E;&#x7A7A;&#xFF0C;&#x5219;&#x4ECE;&#x5934;&#x90E8;&#x53D6;&#x51FA;&#x5143;&#x7D20;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mPendingEvent mPendingEvent = mInboundQueue.dequeueAtHead(); ... ... } ... ... } ... ... switch (mPendingEvent-&gt;type) { ... ... case EventEntry::TYPE_KEY: { KeyEntry* typedEntry = static_cast&lt;KeyEntry*&gt;(mPendingEvent); if (isAppSwitchDue) { // &#x9700;&#x8981;&#x5904;&#x7406;app&#x5207;&#x6362; // &#x5F53;&#x524D;&#x8981;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x662F;&#x5426;&#x5C31;&#x662F;&#x524D;&#x9762;&#x53D1;&#x751F;&#x7684;&#x4E0E;app&#x5207;&#x6362;&#x76F8;&#x5173;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x662F; // &#x5C06;mAppSwitchDueTime&#x7F6E;&#x4E3A;LONG_LONG_MAX&#x8868;&#x793A;&#x8BE5;&#x4E8B;&#x4EF6;&#x5DF2;&#x5F97;&#x5230;&#x5904;&#x7406; if (isAppSwitchKeyEventLocked(typedEntry)) { resetPendingAppSwitchLocked(true); isAppSwitchDue = false; } ... ... } ... ... done = dispatchKeyLocked(currentTime, typedEntry, &amp;dropReason, nextWakeupTime); // &#x1F3C1;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x5206;&#x53D1;&#xFF0C;&#x5982;&#x679C;&#x6210;&#x529F;&#x5206;&#x53D1;&#x5219;&#x8FD4;&#x56DE;true break; } ... ... if (done) { // &#x5982;&#x679C;&#x6210;&#x529F;&#x5206;&#x53D1;&#xFF0C; &#x5C06;mPendingEvent&#x7F6E;&#x4E3A;&#x7A7A;&#xFF0C;&#x5E76;&#x7ACB;&#x5373;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x8F6E;&#x5206;&#x53D1; ... ... releasePendingEventLocked(); *nextWakeupTime = LONG_LONG_MIN; // force next poll to wake up immediately }} Step2: InputDispatcher::dispatchKeyLocked(...) 1234567891011121314// frameworks/native/services/inputflinger/InputDispatcher.cpp:714bool InputDispatcher::dispatchKeyLocked(nsecs_t currentTime, KeyEntry* entry, DropReason* dropReason, nsecs_t* nextWakeupTime) { ... ... // &#x1F3C1;Step3&#x5C06;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;mFocusedWindow&#x5C01;&#x88C5;&#x6210;InputTarget&#x5BF9;&#x8C61;&#xFF0C; // &#x4FDD;&#x5B58;&#x5230;inputTargets&#x4E2D; Vector&lt;InputTarget&gt; inputTargets; int32_t injectionResult = findFocusedWindowTargetsLocked(currentTime, entry, inputTargets, nextWakeupTime); ... ... // &#x1F3C1;Step4&#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7ED9;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x52A8;&#x7A97;&#x53E3; dispatchEventLocked(currentTime, entry, inputTargets); return true;} Step3: InputDispatcher::findFocusedWindowTargetsLocked(...) 12345678910111213141516171819202122232425262728293031323334353637383940// frameworks/native/services/inputflinger/InputDispatcher.cpp:1072int32_t InputDispatcher::findFocusedWindowTargetsLocked(nsecs_t currentTime, const EventEntry* entry, Vector&lt;InputTarget&gt;&amp; inputTargets, nsecs_t* nextWakeupTime) { int32_t injectionResult; String8 reason; // &#x5982;&#x679C;InputManagerService&#x8FD8;&#x6CA1;&#x6709;&#x628A;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x6CE8;&#x518C;&#x5230;InputDispatcher&#x4E2D;&#xFF0C;&#x5206;&#x53D1;&#x5931;&#x8D25; if (mFocusedWindowHandle == NULL) { if (mFocusedApplicationHandle != NULL) { ... ... goto Unresponsive; } ... ... goto Failed; } // &#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7531;&#x7A0B;&#x5E8F;&#x6CE8;&#x5165;&#xFF0C;&#x800C;&#x975E;&#x786C;&#x4EF6;&#x4EA7;&#x751F;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6743;&#x9650;&#x5411;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x6CE8;&#x5165;&#xFF0C;&#x5219;&#x5206;&#x53D1;&#x5931;&#x8D25; if (! checkInjectionPermission(mFocusedWindowHandle, entry-&gt;injectionState)) { injectionResult = INPUT_EVENT_INJECTION_PERMISSION_DENIED; goto Failed; } // &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5904;&#x7406;&#x5B8C;&#x4E0A;&#x6B21;&#x5206;&#x53D1;&#x7ED9;&#x4ED6;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x5206;&#x53D1;&#x5931;&#x8D25; reason = checkWindowReadyForMoreInputLocked(currentTime, mFocusedWindowHandle, entry, &quot;focused&quot;); if (!reason.isEmpty()) { injectionResult = handleTargetsNotReadyLocked(currentTime, entry, mFocusedApplicationHandle, mFocusedWindowHandle, nextWakeupTime, reason.string()); goto Unresponsive; } // &#x628A;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x5C01;&#x88C5;&#x6210;InputTarget&#xFF0C;&#x4FDD;&#x5B58;&#x5230;inputTargets&#x4E2D; injectionResult = INPUT_EVENT_INJECTION_SUCCEEDED; addWindowTargetLocked(mFocusedWindowHandle, InputTarget::FLAG_FOREGROUND | InputTarget::FLAG_DISPATCH_AS_IS, BitSet32(0), inputTargets); ... ... return injectionResult;} InputDispatcher::addWindowTargetLocked(...)&#x51FD;&#x6570;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5411;inputTargets&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5E76;&#x7F16;&#x8F91;&#xFF1A; 1234567891011121314151617// frameworks/native/services/inputflinger/InputDispatcher.cpp:1565void InputDispatcher::addWindowTargetLocked( const sp&lt;InputWindowHandle&gt;&amp; windowHandle, int32_t targetFlags, BitSet32 pointerIds, Vector&lt;InputTarget&gt;&amp; inputTargets) { inputTargets.push(); const InputWindowInfo* windowInfo = windowHandle-&gt;getInfo(); InputTarget&amp; target = inputTargets.editTop(); // &#x8FD9;&#x662F;&#x6700;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x6B65;&#xFF0C;windowInfo&#x662F;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#xFF0C; // &#x5B83;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;inputChannel&#x7528;&#x6765;&#x63CF;&#x8FF0;Server&#x7AEF;InputChannel target.inputChannel = windowInfo-&gt;inputChannel; target.flags = targetFlags; target.xOffset = - windowInfo-&gt;frameLeft; target.yOffset = - windowInfo-&gt;frameTop; target.scaleFactor = windowInfo-&gt;scaleFactor; target.pointerIds = pointerIds;} &#x56DE;&#x5230;Step2&#x4E2D;&#xFF0C;&#x5B8C;&#x6210;&#x4E86;inputTargets&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x7EE7;&#x7EED;&#x8C03;&#x7528;dispatchEventLocked(...)&#x628A;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7ED9;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x3002; # Step4: InputDispatcher::dispatchEventLocked(...) 12345678910111213141516171819// frameworks/native/services/inputflinger/InputDispatcher.cpp:921void InputDispatcher::dispatchEventLocked(nsecs_t currentTime, EventEntry* eventEntry, const Vector&lt;InputTarget&gt;&amp; inputTargets) {... ... // &#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x90FD;&#x4FDD;&#x5B58;&#x5728;inputTargets&#x4E2D;&#xFF0C; // &#x5BF9;&#x4E8E;&#x5411;InputManagerService&#x6CE8;&#x518C;&#x8FC7;Connection&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x4F9D;&#x6B21;&#x5411;&#x4ED6;&#x4EEC;&#x5206;&#x53D1;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; for (size_t i = 0; i &lt; inputTargets.size(); i++) { const InputTarget&amp; inputTarget = inputTargets.itemAt(i); // &#x4ECE;mConnectionsByFd&#x4E2D;&#x6839;&#x636E;&#x5173;&#x952E;&#x5B57;&#x627E;&#x5230;Connection&#x5BF9;&#x8C61; ssize_t connectionIndex = getConnectionIndexLocked(inputTarget.inputChannel); if (connectionIndex &gt;= 0) { // &#x6CE8;&#x518C;&#x8FC7;Connection&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x627E;&#x5230;&#x5176;Connection&#x5BF9;&#x8C61; sp&lt;Connection&gt; connection = mConnectionsByFd.valueAt(connectionIndex); prepareDispatchCycleLocked(currentTime, connection, eventEntry, &amp;inputTarget); // &#x1F3C1; } ... ... }} &#x56DE;&#x987E;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516D;&#xFF09;&#x300B;&#x4E4B;Step4&#xFF0C;Server&#x7AEF;&#x7684;InputChannel&#x662F;&#x4EE5;&#x63CF;&#x8FF0;&#x7B26;&#x4E3A;&#x5173;&#x952E;&#x5B57;&#x4FDD;&#x5B58;&#x5230;InputDispatcher::mConnectionsByFd&#x4E2D;&#x7684;&#xFF0C;value&#x88AB;&#x5C01;&#x88C5;&#x6210;&#x4E86;Connection&#x5BF9;&#x8C61;&#x7684;&#x5F62;&#x5F0F;&#x3002; Step5: InputDispatcher::prepareDispatchCycleLocked(...) 1234567// frameworks/native/services/inputflinger/InputDispatcher.cpp:1773void InputDispatcher::prepareDispatchCycleLocked(nsecs_t currentTime, const sp&lt;Connection&gt;&amp; connection, EventEntry* eventEntry, const InputTarget* inputTarget) {... ... enqueueDispatchEntriesLocked(currentTime, connection, eventEntry, inputTarget); // &#x1F3C1;} Step6: InputDispatcher::enqueueDispatchEntriesLocked(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859// frameworks/native/services/inputflinger/InputDispatcher.cpp:1821// &#x6BCF;&#x4E00;&#x4E2A;Connection&#x5BF9;&#x8C61;&#x5185;&#x90E8;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x5F85;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x961F;&#x5217;outboundQueue&#xFF0C;&#x7528;&#x4E8E;&#x4F9D;&#x6B21;// &#x5206;&#x53D1;&#x7ED9;&#x4E0E;&#x4E4B;&#x5173;&#x8054;&#x7684;&#x7A97;&#x53E3;&#x3002;&#x53EA;&#x6709;&#x4E0A;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x88AB;&#x76EE;&#x6807;&#x7A97;&#x53E3;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x624D;&#x80FD;&#x7EE7;&#x7EED;&#x5206;&#x53D1;&#x4E0B;&#x4E00;&#x4E2A;&#x3002;void InputDispatcher::enqueueDispatchEntriesLocked(nsecs_t currentTime, const sp&lt;Connection&gt;&amp; connection, EventEntry* eventEntry, const InputTarget* inputTarget) { bool wasEmpty = connection-&gt;outboundQueue.isEmpty(); // Enqueue dispatch entries for the requested modes. // &#x8FD9;&#x4E00;&#x5768;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8C03;&#x7528;&#x4F1A;&#x751F;&#x6548; enqueueDispatchEntryLocked(connection, eventEntry, inputTarget, InputTarget::FLAG_DISPATCH_AS_HOVER_EXIT); enqueueDispatchEntryLocked(connection, eventEntry, inputTarget, InputTarget::FLAG_DISPATCH_AS_OUTSIDE); enqueueDispatchEntryLocked(connection, eventEntry, inputTarget, InputTarget::FLAG_DISPATCH_AS_HOVER_ENTER); enqueueDispatchEntryLocked(connection, eventEntry, inputTarget, InputTarget::FLAG_DISPATCH_AS_IS); enqueueDispatchEntryLocked(connection, eventEntry, inputTarget, InputTarget::FLAG_DISPATCH_AS_SLIPPERY_EXIT); enqueueDispatchEntryLocked(connection, eventEntry, inputTarget, InputTarget::FLAG_DISPATCH_AS_SLIPPERY_ENTER); // &#x5982;&#x679C;&#x4E4B;&#x524D;&#x961F;&#x5217;&#x4E3A;&#x7A7A;&#xFF0C;&#x672C;&#x6B21;&#x8FDB;&#x961F;&#x540E;&#x975E;&#x7A7A;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x5C06;&#x5206;&#x53D1;&#x7EE7;&#x7EED;&#x5411;&#x7A97;&#x53E3;&#x63A8;&#x8FDB;&#xFF0C; // &#x5426;&#x5219;&#x8BF4;&#x660E;&#x4E0A;&#x4E00;&#x6B21;&#x5206;&#x53D1;&#x8FD8;&#x6CA1;&#x88AB;&#x5904;&#x7406;&#x5B8C;&#xFF0C;&#x672C;&#x6B21;&#x5206;&#x53D1;&#x4E0D;&#x80FD;&#x9A6C;&#x4E0A;&#x8FDB;&#x884C; if (wasEmpty &amp;&amp; !connection-&gt;outboundQueue.isEmpty()) { startDispatchCycleLocked(currentTime, connection); // &#x1F3C1; }}void InputDispatcher::enqueueDispatchEntryLocked( const sp&lt;Connection&gt;&amp; connection, EventEntry* eventEntry, const InputTarget* inputTarget, int32_t dispatchMode) { int32_t inputTargetFlags = inputTarget-&gt;flags; if (!(inputTargetFlags &amp; dispatchMode)) { return; // &#x5982;&#x679C;&#x548C;&#x8981;&#x6C42;&#x7684;&#x6A21;&#x5F0F;&#x4E0D;&#x5339;&#x914D;&#x5219;&#x76F4;&#x63A5;&#x9000;&#x51FA; } inputTargetFlags = (inputTargetFlags &amp; ~InputTarget::FLAG_DISPATCH_MASK) | dispatchMode; // &#x628A;&#x5F85;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5C01;&#x88C5;&#x6210;DispatchEntry&#x5BF9;&#x8C61; DispatchEntry* dispatchEntry = new DispatchEntry(eventEntry, inputTargetFlags, inputTarget-&gt;xOffset, inputTarget-&gt;yOffset, inputTarget-&gt;scaleFactor); // Apply target flags and update the connection&apos;s input state. switch (eventEntry-&gt;type) { case EventEntry::TYPE_KEY: { KeyEntry* keyEntry = static_cast&lt;KeyEntry*&gt;(eventEntry); dispatchEntry-&gt;resolvedAction = keyEntry-&gt;action; dispatchEntry-&gt;resolvedFlags = keyEntry-&gt;flags; ... ... break; } ... ... } ... ... // &#x5C06;&#x5F85;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5165;&#x961F; connection-&gt;outboundQueue.enqueueAtTail(dispatchEntry); ... ...} Step7: InputDispatcher::startDispatchCycleLocked(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// frameworks/native/services/inputflinger/InputDispatcher.cpp:1932void InputDispatcher::startDispatchCycleLocked(nsecs_t currentTime, const sp&lt;Connection&gt;&amp; connection) {... ... while (connection-&gt;status == Connection::STATUS_NORMAL &amp;&amp; !connection-&gt;outboundQueue.isEmpty()) { DispatchEntry* dispatchEntry = connection-&gt;outboundQueue.head; dispatchEntry-&gt;deliveryTime = currentTime; status_t status; EventEntry* eventEntry = dispatchEntry-&gt;eventEntry; switch (eventEntry-&gt;type) { case EventEntry::TYPE_KEY: { KeyEntry* keyEntry = static_cast&lt;KeyEntry*&gt;(eventEntry); // InputConnection&#x662F;&#x901A;&#x8FC7;&#x5176;&#x5185;&#x90E8;InputPublisher&#x5BF9;&#x8C61;&#x5411;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x5206;&#x53D1;&#x952E;&#x76D8;&#x6D88;&#x606F; status = connection-&gt;inputPublisher.publishKeyEvent(dispatchEntry-&gt;seq, keyEntry-&gt;deviceId, keyEntry-&gt;source, dispatchEntry-&gt;resolvedAction, dispatchEntry-&gt;resolvedFlags, keyEntry-&gt;keyCode, keyEntry-&gt;scanCode, keyEntry-&gt;metaState, keyEntry-&gt;repeatCount, keyEntry-&gt;downTime, keyEntry-&gt;eventTime); // &#x1F3C1;&#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5199;&#x5165;InputPublisher&#x5E76;&#x53D1;&#x9001; break; } ... ... // Check the result. if (status) { if (status == WOULD_BLOCK) { if (connection-&gt;waitQueue.isEmpty()) { ... ... abortBrokenDispatchCycleLocked(currentTime, connection, true /*notify*/); } else { // Pipe is full and we are waiting for the app to finish process some events // before sending more events to it. ... ... connection-&gt;inputPublisherBlocked = true; } } else { ... ... abortBrokenDispatchCycleLocked(currentTime, connection, true /*notify*/); } return; } // Re-enqueue the event on the wait queue. connection-&gt;outboundQueue.dequeue(dispatchEntry); traceOutboundQueueLengthLocked(connection); connection-&gt;waitQueue.enqueueAtTail(dispatchEntry); traceWaitQueueLengthLocked(connection); }} Step8: InputPublisher::publishKeyEvent(...) 1234567891011121314151617181920212223242526272829// frameworks/native/libs/input/InputTransport.cpp:243status_t InputPublisher::publishKeyEvent( uint32_t seq, int32_t deviceId, int32_t source, int32_t action, int32_t flags, int32_t keyCode, int32_t scanCode, int32_t metaState, int32_t repeatCount, nsecs_t downTime, nsecs_t eventTime) { ... ... InputMessage msg; msg.header.type = InputMessage::TYPE_KEY; msg.body.key.seq = seq; msg.body.key.deviceId = deviceId; msg.body.key.source = source; msg.body.key.action = action; msg.body.key.flags = flags; msg.body.key.keyCode = keyCode; msg.body.key.scanCode = scanCode; msg.body.key.metaState = metaState; msg.body.key.repeatCount = repeatCount; msg.body.key.downTime = downTime; msg.body.key.eventTime = eventTime; return mChannel-&gt;sendMessage(&amp;msg); // &#x1F3C1;} Step9: InputChannel::sendMessage(...) 12345678910//frameworks/native/libs/input/InputTransport.cpp:152status_t InputChannel::sendMessage(const InputMessage* msg) { size_t msgLength = msg-&gt;size(); ssize_t nWrite; do { nWrite = ::send(mFd, msg, msgLength, MSG_DONTWAIT | MSG_NOSIGNAL); } while (nWrite == -1 &amp;&amp; errno == EINTR); ... ... return OK;} &#x6B64;&#x5904;&#x7684;mFd&#x6765;&#x81EA;&#x9700;InputDispatcher&#x4E3A;&#x6BCF;&#x4E2A;&#x6CE8;&#x518C;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4FDD;&#x5B58;&#x7684;Server&#x7AEF;InputChannel&#xFF0C;&#x5728;&#x8BE5;InputChannel&#x7684;&#x5BF9;&#x7AEF;&#x5219;&#x662F;&#x4FDD;&#x5B58;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;Client&#x7AEF;InputChannel&#x3002;InputDispatcher&#x628A;&#x8981;&#x5206;&#x53D1;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5199;&#x5165;Server&#x7AEF;InputChannel&#xFF0C;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;Client&#x7AEF;InputChannel&#x5C31;&#x80FD;&#x63A5;&#x6536;&#x5230;&#x4E86;&#x3002; &#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516B;&#xFF09;&#x300B;&#x7684;Step5&#x4E2D;&#xFF0C;&#x8BE5;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x4E86;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E3B;&#x7EBF;&#x7A0B;Looper&#x4E2D;&#xFF0C;&#x5E76;&#x6307;&#x5B9A;&#x4E86;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF1A; 123456// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:145void NativeInputEventReceiver::setFdEvents(int events) { ... ... mMessageQueue-&gt;getLooper()-&gt;addFd(fd, 0, events, this, NULL); ... ...} NativeInputEventReceiver&#x7EE7;&#x627F;&#x81EA;LooperCallback: 1234// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:50class NativeInputEventReceiver : public LooperCallback {... ...}; &#x4E8E;&#x662F;&#xFF0C;&#x5F53;&#x7EBF;&#x7A0B;Looper&#x76D1;&#x542C;&#x5230;&#x8BE5;&#x63CF;&#x8FF0;&#x7B26;&#x6709;&#x5185;&#x5BB9;&#x5199;&#x5165;&#x540E;&#xFF0C;&#x5C06;&#x8C03;&#x7528;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4F53;NativeInputEventReceiver::handleEvent(...)&#x3002; &#x603B;&#x7ED3; &#x672C;&#x8282;&#x867D;&#x7136;&#x8FC7;&#x7A0B;&#x7565;&#x957F;&#xFF0C;&#x903B;&#x8F91;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x6E05;&#x6670;&#x7684;&#xFF1A;InputDispatcher&#x628A;InputReader&#x63A5;&#x6536;&#x5230;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7ECF;&#x8FC7;&#x7B5B;&#x9009;&#x3001;&#x8FC7;&#x6EE4;&#x3001;&#x5C01;&#x88C5;&#xFF0C;&#x901A;&#x8FC7;&#x6CE8;&#x518C;&#x7684;InputChannel&#x628A;&#x5206;&#x53D1;&#x4E8B;&#x4EF6;&#x53D1;&#x9001;&#x7ED9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x901A;&#x8FC7;InputChannel&#x4E2D;&#x7684;socket&#x628A;&#x6570;&#x636E;&#x53D1;&#x9001;&#x51FA;&#x53BB;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x4FA7;&#x7B49;&#x5F85;&#x5230;&#x8BE5;&#x4E8B;&#x4EF6;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6D88;&#x606F;&#x5FAA;&#x73AF;&#x8FD0;&#x8F6C;&#x8D77;&#x6765;&#xFF0C;&#x89E3;&#x6790;&#x4E8B;&#x4EF6;&#xFF0C;&#x8C03;&#x7528;&#x76F8;&#x5173;&#x51FD;&#x6570;&#x6765;&#x5904;&#x7406;&#x3002;&#x8FD9;&#x5E94;&#x8BE5;&#x662F;&#x4E0B;&#x4E00;&#x8282;&#x7684;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#x3002; &#x4E0D;&#x8FC7;&#x672C;&#x8282;&#x4E5F;&#x6709;&#x4E00;&#x5904;&#x5B58;&#x7591;&#xFF1A;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x96BE;&#x9053;&#x4E0D;&#x662F;&#x4EA4;&#x7ED9;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x6765;&#x5904;&#x7406;&#x4E48;&#xFF1F;&#x5728;Step4&#x4E2D;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x4E00;&#x5806;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x5462;&#xFF1F;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（九）InputReader获得键盘事件]]></title>
    <url>%2F2016%2F10%2F03%2F2016%2F1002KeyboardLearning9%2F</url>
    <content type="text"><![CDATA[&#x518D;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x770B;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E2D;InputReaderThread&#x7684;&#x542F;&#x52A8;Step2&#x4E2D;&#xFF0C;mEventHub-&gt;getEvents(...)&#x4ECE;&#x6240;&#x6709;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#x8BFB;&#x53D6;&#x4E00;&#x8F6E;IO&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6709;IO&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#xFF0C;mEventHub-&gt;getEvents(...)&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#xFF0C;&#x63A5;&#x7740;&#x7531;InputReader::processEventsLocked(...)&#x6765;&#x5904;&#x7406;&#x8FD9;&#x4E9B;IO&#x4E8B;&#x4EF6;&#x3002;&#x672C;&#x6587;&#x4EE5;&#x8BE5;&#x51FD;&#x6570;&#x4E3A;&#x8D77;&#x70B9;&#x7814;&#x7A76;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x5904;&#x7406;&#x3002; 123456789101112// frameworks/native/services/inputflinger/InputReader.cpp:272void InputReader::loopOnce() { ... ... int32_t timeoutMillis; ... ... size_t count = mEventHub-&gt;getEvents(timeoutMillis, mEventBuffer, EVENT_BUFFER_SIZE); // &#x4ECE;&#x6240;&#x6709;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#x8BFB;&#x53D6;&#x4E00;&#x8F6E;IO&#x4E8B;&#x4EF6;&#xFF0C;&#x4FDD;&#x5B58;&#x5230;mEventBuffer ... ... if (count) { processEventsLocked(mEventBuffer, count); // &#x1F3C1; } ... ...} Step1: InputReader::processEventsLocked(...) 123456789101112131415161718192021222324252627// frameworks/native/services/inputflinger/InputReader.cpp:336void InputReader::processEventsLocked(const RawEvent* rawEvents, size_t count) { for (const RawEvent* rawEvent = rawEvents; count;) { int32_t type = rawEvent-&gt;type; size_t batchSize = 1; if (type &lt; EventHubInterface::FIRST_SYNTHETIC_EVENT) { int32_t deviceId = rawEvent-&gt;deviceId; // &#x626B;&#x63CF;rawEvent&#x4E4B;&#x540E;&#xFF0C;&#x76F8;&#x540C;&#x8BBE;&#x5907;id&#x8FDE;&#x7EED;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x4E2A;&#x6570; while (batchSize &lt; count) { if (rawEvent[batchSize].type &gt;= EventHubInterface::FIRST_SYNTHETIC_EVENT || rawEvent[batchSize].deviceId != deviceId) { break; } batchSize += 1; } ... ... // &#x1F3C1;&#x6279;&#x91CF;&#x5904;&#x7406;&#x8FD9;&#x4E9B;IO&#x4E8B;&#x4EF6; processEventsForDeviceLocked(deviceId, rawEvent, batchSize); } else { // &#x5904;&#x7406;&#x975E;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x8BBE;&#x5907;&#x7684;&#x589E;&#x3001;&#x5220;&#x3001;&#x67E5;&#x4E8B;&#x4EF6; ... ... } count -= batchSize; rawEvent += batchSize; }} Step2: InputReader::processEventsForDevicedLocked(...) 123456789// frameworks/native/services/inputflinger/InputReader.cpp:503void InputReader::processEventsForDeviceLocked(int32_t deviceId, const RawEvent* rawEvents, size_t count) { ssize_t deviceIndex = mDevices.indexOfKey(deviceId); ... ... // &#x83B7;&#x53D6;&#x53D1;&#x751F;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x8F93;&#x5165;&#x8BBE;&#x5907; InputDevice* device = mDevices.valueAt(deviceIndex); ... ... device-&gt;process(rawEvents, count); // &#x1F3C1;} Step3: InputDevice::process(...) 123456789101112131415// frameworks/native/services/inputflinger/InputReader.cpp:1027void InputDevice::process(const RawEvent* rawEvents, size_t count) { // &#x8BA9;&#x672C;&#x8BBE;&#x5907;&#x7684;&#x6240;&#x6709;InputMapper&#x6709;&#x673A;&#x4F1A;&#x5904;&#x7406;&#x6BCF;&#x4E00;&#x4E2A;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; size_t numMappers = mMappers.size(); // &#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A;IO&#x4E8B;&#x4EF6; for (const RawEvent* rawEvent = rawEvents; count--; rawEvent++) {... ... // &#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A;InputMapper&#x5BF9;&#x8C61;&#xFF0C;&#x627E;&#x5230;&#x548C;&#x4E8B;&#x4EF6;&#x5339;&#x914D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5904;&#x7406; for (size_t i = 0; i &lt; numMappers; i++) { InputMapper* mapper = mMappers[i]; mapper-&gt;process(rawEvent); // &#x1F3C1; }... ... }} &#x6BCF;&#x4E00;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x7684;IO&#x4E8B;&#x4EF6;&#x90FD;&#x7531;&#x4E00;&#x4E2A;InputMapper&#x5BF9;&#x8C61;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x5C3D;&#x7BA1;&#x5728;&#x7B2C;&#x4E8C;&#x4E2A;for&#x5FAA;&#x73AF;&#x4E2D;&#x904D;&#x5386;&#x4E86;&#x6240;&#x6709;&#x7684;InputMapper&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x53EA;&#x6709;&#x4E00;&#x4E2A;InputMapper&#x5BF9;&#x8C61;&#x4F1A;&#x5BF9;&#x548C;&#x81EA;&#x5DF1;&#x5339;&#x914D;&#x7684;&#x4E8B;&#x4EF6;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x6B64;&#x5904;&#x6211;&#x4EEC;&#x5173;&#x5FC3;&#x7684;&#x662F;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5173;&#x6CE8;&#x5904;&#x7406;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;mapper&#x2014;&#x2014;KeyboardInputMapper&#x3002; Step4: KeyboardInputMapper::process(...) 1234567891011121314151617// frameworks/native/services/inputflinger/InputReader.cpp:2172void KeyboardInputMapper::process(const RawEvent* rawEvent) { switch (rawEvent-&gt;type) { case EV_KEY: { int32_t scanCode = rawEvent-&gt;code; // &#x83B7;&#x5F97;&#x626B;&#x63CF;&#x7801; int32_t usageCode = mCurrentHidUsage; mCurrentHidUsage = 0; // &#x68C0;&#x67E5;&#x8BE5;&#x626B;&#x63CF;&#x7801;&#x662F;&#x5426;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x5408;&#x6CD5;&#x6309;&#x952E; if (isKeyboardOrGamepadKey(scanCode)) { processKey(rawEvent-&gt;when, rawEvent-&gt;value != 0, scanCode, usageCode); // &#x1F3C1; } break; } ... ... }} &#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x626B;&#x63CF;&#x7801;&#x7684;&#x6982;&#x5FF5;&#xFF1A; &gt;&#x25CB; &#x5F53;&#x7528;&#x6237;&#x6309;&#x4E0B;&#x952E;&#x76D8;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x952E;&#x65F6;&#xFF0C;&#x952E;&#x76D8;&#x5185;&#x7684;&#x82AF;&#x7247;&#x4F1A;&#x68C0;&#x6D4B;&#x5230;&#x8FD9;&#x4E2A;&#x52A8;&#x4F5C;&#xFF0C;&#x5E76;&#x628A;&#x8FD9;&#x4E2A;&#x4FE1;&#x53F7;&#x4F20;&#x9001;&#x5230;&#x8BA1;&#x7B97;&#x673A;&#x3002;&#x5982;&#x4F55;&#x533A;&#x522B;&#x662F;&#x54EA;&#x4E00;&#x4E2A;&#x952E;&#x88AB;&#x6309;&#x4E0B;&#x4E86;&#x5462;&#xFF1F;&#x952E;&#x76D8;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x6309;&#x952E;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x7F16;&#x7801;&#xFF0C;&#x79F0;&#x4F5C;&#x952E;&#x76D8;&#x626B;&#x63CF;&#x7801;&#x3002;&#x5F53;&#x4F60;&#x6309;&#x4E0B;&#x4E00;&#x4E2A;&#x952E;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x952E;&#x7684;&#x626B;&#x63CF;&#x7801;&#x5C31;&#x88AB;&#x4F20;&#x7ED9;&#x7CFB;&#x7EDF;&#x3002;&#x626B;&#x63CF;&#x7801;&#x662F;&#x8DDF;&#x5177;&#x4F53;&#x7684;&#x786C;&#x4EF6;&#x76F8;&#x5173;&#x7684;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x952E;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x952E;&#x76D8;&#x4E0A;&#x7684;&#x626B;&#x63CF;&#x7801;&#x6709;&#x53EF;&#x80FD;&#x4E0D;&#x540C;&#x3002;&#x952E;&#x76D8;&#x63A7;&#x5236;&#x5668;&#x5C31;&#x662F;&#x5C06;&#x8FD9;&#x4E2A;&#x626B;&#x63CF;&#x7801;&#x4F20;&#x7ED9;&#x8BA1;&#x7B97;&#x673A;&#xFF0C;&#x7136;&#x540E;&#x4EA4;&#x7ED9;&#x952E;&#x76D8;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x3002;&#x952E;&#x76D8;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4F1A;&#x5B8C;&#x6210;&#x76F8;&#x5173;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x5E76;&#x628A;&#x8FD9;&#x4E2A;&#x626B;&#x63CF;&#x7801;&#x8F6C;&#x6362;&#x4E3A;&#x952E;&#x76D8;&#x865A;&#x62DF;&#x7801;&#x3002; &gt;&#x25CB; &#x4E0E;&#x626B;&#x63CF;&#x7801;&#x76F8;&#x5BF9;&#x7684;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x7801;&#x3002;&#x56E0;&#x4E3A;&#x626B;&#x63CF;&#x7801;&#x4E0E;&#x786C;&#x4EF6;&#x76F8;&#x5173;&#xFF0C;&#x4E0D;&#x5177;&#x6709;&#x901A;&#x7528;&#x6027;&#xFF0C;&#x4E3A;&#x4E86;&#x7EDF;&#x4E00;&#x952E;&#x76D8;&#x4E0A;&#x6240;&#x6709;&#x952E;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x63D0;&#x51FA;&#x4E86;&#x865A;&#x62DF;&#x7801;&#x6982;&#x5FF5;&#x3002;&#x65E0;&#x8BBA;&#x4EC0;&#x4E48;&#x952E;&#x76D8;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#x7684;&#x865A;&#x62DF;&#x7801;&#x603B;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x8FD9;&#x6837;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x8BC6;&#x522B;&#x4E86;&#x3002;&#x7B80;&#x5355;&#x70B9;&#x8BF4;&#xFF0C;&#x865A;&#x62DF;&#x7801;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x7ECF;&#x5E38;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7684;&#x50CF;VK_A,VK_B&#x8FD9;&#x6837;&#x7684;&#x5E38;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x952E;A&#x7684;&#x865A;&#x62DF;&#x7801;&#x662F;65&#xFF0C;&#x5199;&#x6210;16&#x8FDB;&#x5236;&#x5C31;&#x662F;0x41&#x3002; &gt;&#x25CB; &#x5F53;&#x952E;&#x76D8;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x628A;&#x626B;&#x63CF;&#x7801;&#x8F6C;&#x6362;&#x4E3A;&#x865A;&#x62DF;&#x7801;&#x540E;&#xFF0C;&#x4F1A;&#x628A;&#x8FD9;&#x4E2A;&#x952E;&#x76D8;&#x64CD;&#x4F5C;&#x7684;&#x626B;&#x63CF;&#x7801;&#x548C;&#x865A;&#x62DF;&#x7801;&#x8FD8;&#x6709;&#x5176;&#x5B83;&#x4FE1;&#x606F;&#x4E00;&#x8D77;&#x4F20;&#x9012;&#x7ED9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3002;&#x7136;&#x540E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5219;&#x4F1A;&#x628A;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x5C01;&#x88C5;&#x5728;&#x4E00;&#x4E2A;&#x6D88;&#x606F;&#x4E2D;&#xFF0C;&#x5E76;&#x628A;&#x8FD9;&#x4E2A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x63D2;&#x5165;&#x5230;&#x6D88;&#x606F;&#x5217;&#x961F;&#x3002; Step5: KeyboardInputMapper::processKey(...) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667// frameworks/native/services/inputflinger/InputReader.cpp:2205void KeyboardInputMapper::processKey(nsecs_t when, bool down, int32_t scanCode, int32_t usageCode) { int32_t keyCode; int32_t keyMetaState; uint32_t policyFlags; ... ... if (down) { // Rotate key codes according to orientation if needed. // &#x5F53;&#x5C4F;&#x5E55;&#x65CB;&#x8F6C;&#x4E86;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;DPAD&#x6309;&#x952E;&#x5BF9;&#x5E94;&#x7684;keyCode&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x6B64;&#x5904;&#x5B8C;&#x6210;&#x8F6C;&#x6362; if (mParameters.orientationAware &amp;&amp; mParameters.hasAssociatedDisplay) { keyCode = rotateKeyCode(keyCode, mOrientation); } // Add key down. // &#x5F53;&#x524D;&#x6309;&#x4E0B;&#x7684;&#x952E;&#x4E4B;&#x524D;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x88AB;&#x6309;&#x4E0B;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x662F;&#xFF0C;keyDownIndex&#x4E3A;&#x975E;&#x8D1F; ssize_t keyDownIndex = findKeyDown(scanCode); if (keyDownIndex &gt;= 0) { // key repeat, be sure to use same keycode as before in case of rotation // mKeyDowns&#x4FDD;&#x5B58;&#x7740;&#x5DF2;&#x7ECF;&#x88AB;&#x6309;&#x4E0B;&#x7684;&#x6309;&#x952E;&#x96C6;&#x5408;&#xFF0C;&#x5982;&#x679C;&#x5F53;&#x524D;&#x6309;&#x952E;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x88AB;&#x6309;&#x4E0B;&#x4E86;&#xFF0C; // &#x5219;keyCode&#x4FDD;&#x6301;&#x4E4B;&#x524D;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x4E0D;&#x8981;&#x53D7;&#x5C4F;&#x5E55;&#x65CB;&#x8F6C;&#x7684;&#x5F71;&#x54CD;&#x3002; keyCode = mKeyDowns.itemAt(keyDownIndex).keyCode; } else { ... ... // &#x628A;&#x5F53;&#x524D;&#x6309;&#x4E0B;&#x7684;&#x6309;&#x952E;&#x5B58;&#x5165;mKeyDowns mKeyDowns.push(); KeyDown&amp; keyDown = mKeyDowns.editTop(); keyDown.keyCode = keyCode; keyDown.scanCode = scanCode; } mDownTime = when; } else { // Remove key down. &#x68C0;&#x67E5;&#x5F53;&#x524D;&#x677E;&#x5F00;&#x7684;&#x6309;&#x952E;&#x4E4B;&#x524D;&#x5904;&#x4E8E;&#x88AB;&#x6309;&#x4E0B;&#x7684;&#x72B6;&#x6001; ssize_t keyDownIndex = findKeyDown(scanCode); if (keyDownIndex &gt;= 0) { // key up, be sure to use same keycode as before in case of rotation // &#x5C06;&#x8BE5;&#x6309;&#x952E;&#x4ECE;mKeyDowns&#x4E2D;&#x5220;&#x9664; keyCode = mKeyDowns.itemAt(keyDownIndex).keyCode; mKeyDowns.removeAt(size_t(keyDownIndex)); } ... ... } int32_t oldMetaState = mMetaState; // &#x53D6;&#x51FA;&#x7EC4;&#x5408;&#x952E;&#x4FE1;&#x606F;&#xFF08;&#x5982;Alt&#x3001;Shift&#xFF09;&#x4FDD;&#x5B58;&#x5728;newMetaState&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x5219;&#x66F4;&#x65B0;mMetaState int32_t newMetaState = updateMetaState(keyCode, down, oldMetaState); bool metaStateChanged = oldMetaState != newMetaState; if (metaStateChanged) { mMetaState = newMetaState; updateLedState(false); // If global meta state changed send it along with the key. // If it has not changed then we&apos;ll use what keymap gave us, // since key replacement logic might temporarily reset a few // meta bits for given key. keyMetaState = newMetaState; } nsecs_t downTime = mDownTime; ... ... NotifyKeyArgs args(when, getDeviceId(), mSource, policyFlags, down ? AKEY_EVENT_ACTION_DOWN : AKEY_EVENT_ACTION_UP, AKEY_EVENT_FLAG_FROM_SYSTEM, keyCode, scanCode, keyMetaState, downTime); getListener()-&gt;notifyKey(&amp;args); // &#x1F3C1;} &#x4EE3;&#x7801;&#x4E2D;&#x7684;keyCode&#x5C31;&#x662F;&#x524D;&#x9762;&#x8BB2;&#x7684;&#x865A;&#x62DF;&#x7801;&#x7684;&#x6982;&#x5FF5;&#xFF0C;DPAD&#x6309;&#x952E;&#x5C31;&#x662F;&#x624B;&#x673A;&#x4E0A;&#x7684;&#x65B9;&#x5411;&#x952E;&#xFF1A; &#x540C;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#xFF0C;&#x5F53;&#x624B;&#x673A;&#x65CB;&#x8F6C;&#x540E;&#xFF0C;&#x5C3D;&#x7BA1;&#x626B;&#x63CF;&#x7801;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x53EF;&#x662F;&#x6309;&#x952E;&#x7684;&#x903B;&#x8F91;&#x542B;&#x4E49;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x628A;keyCode&#x4F5C;&#x76F8;&#x5E94;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x5982;&#x539F;&#x5148;&#x7684;&#x201C;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x201D;&#x987A;&#x65F6;&#x9488;&#x65CB;&#x8F6C;90&#xB0;&#x540E;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x201C;&#x53F3;&#x4E0B;&#x5DE6;&#x4E0A;&#x201D;&#x3002; &#x8FD9;&#x4E00;&#x5927;&#x6BB5;&#x7684;&#x4EE3;&#x7801;&#x4E3B;&#x8981;&#x662F;&#x6765;&#x5FAE;&#x8C03;keyCode&#x4EE5;&#x53CA;&#x66F4;&#x65B0;&#x7EC4;&#x5408;&#x952E;&#x4FE1;&#x606F;&#xFF0C;&#x6700;&#x540E;&#x628A;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#x6253;&#x5305;&#x5230;NotifyKeyArgs&#x4E2D;&#xFF0C;&#x7531;getListener()-&gt;notifyKey(...)&#x6765;&#x5904;&#x7406;&#x3002;&#x51FD;&#x6570;KeyboardInputMapper::getListener()&#x7EE7;&#x627F;&#x81EA;&#x57FA;&#x7C7B;InputMapper&#xFF1A; 12// frameworks/native/services/inputflinger/InputReader.h:1012 inline InputListenerInterface* getListener() { return mContext-&gt;getListener(); } mContext&#x662F;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;&#x7684;&#xFF1A; 1234// frameworks/native/services/inputflinger/InputReader.cpp:1823InputMapper::InputMapper(InputDevice* device) : mDevice(device), mContext(device-&gt;getContext()) {} KeyboardInputMapper&#x5728;&#x6784;&#x9020;&#x7684;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x7684;InputDevice&#x662F;&#x8C01;&#xFF1F;&#x8BE5;&#x8BBE;&#x5907;&#x7684;context&#x53C8;&#x662F;&#x8C01;&#xFF1F;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x4ECE;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x67E5;&#x627E;&#x5F88;&#x56F0;&#x96BE;&#x3002;&#x53EF;&#x4EE5;&#x6682;&#x65F6;&#x6401;&#x7F6E;&#xFF0C;&#x65E5;&#x540E;&#x8C03;&#x8BD5;&#x8FDB;&#x6765;&#x518D;&#x770B;&#x3002; &#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x662F;&#x4ECE;notifyKey&#x5165;&#x624B;&#xFF0C;&#x5728;Android&#x6E90;&#x7801;&#x6839;&#x76EE;&#x5F55;&#x67E5;&#x627E;&quot;::notifyKey&quot;&#xFF1A; 12345$ find . -name &quot;*.cpp&quot; |xargs grep &quot;::notifyKey&quot;appledeiMac:android-6.0.1_r11 palance$ find . -name &quot;*.cpp&quot; |xargs grep &quot;::notifyKey&quot;./frameworks/native/services/inputflinger/InputDispatcher.cpp:void InputDispatcher::notifyKey(const NotifyKeyArgs* args) {./frameworks/native/services/inputflinger/InputListener.cpp:void QueuedInputListener::notifyKey(const NotifyKeyArgs* args) {./system/core/fingerprintd/FingerprintDaemonProxy.cpp:void FingerprintDaemonProxy::notifyKeystore(const uint8_t *auth_token, const size_t auth_token_length) { &#x627E;&#x5230;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x662F;InputDispatcher.cpp&#x4E86;&#xFF0C;&#x8FDB;&#x5165;InputDispatcher&#x7684;&#x5730;&#x754C;&#x8BF4;&#x660E;&#xFF1A;&#x5728;&#x8FD9;&#x91CC;&#x4ECE;InputReader&#x7684;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x9636;&#x6BB5;&#x8FDB;&#x5165;&#x5230;&#x4E86;&#x5206;&#x53D1;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x9636;&#x6BB5;&#x3002; # Step6: InputDispatcher::notifyKey(...) 123456789101112131415161718192021// frameworks/native/services/inputflinger/InputDispatcher.cpp:2359void InputDispatcher::notifyKey(const NotifyKeyArgs* args) {... ... uint32_t policyFlags = args-&gt;policyFlags; int32_t flags = args-&gt;flags; int32_t metaState = args-&gt;metaState; ... ... bool needWake; ... ... int32_t repeatCount = 0; KeyEntry* newEntry = new KeyEntry(args-&gt;eventTime, args-&gt;deviceId, args-&gt;source, policyFlags, args-&gt;action, flags, keyCode, args-&gt;scanCode, metaState, repeatCount, args-&gt;downTime); // &#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x6DFB;&#x52A0;&#x5230;&#x5F85;&#x5206;&#x53D1;&#x961F;&#x5217; needWake = enqueueInboundEventLocked(newEntry); ... ... if (needWake) { mLooper-&gt;wake(); // &#x89C1;&#x300A;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x300B;&#xFF0C;&#x5411;&#x9ED8;&#x8BA4;Fd&#x5199;&#x5165;&#x4FE1;&#x53F7; }} &#x8FD9;&#x91CC;&#x6211;&#x7701;&#x7565;&#x7684;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E9B;&#x6309;&#x952E;&#x7684;&#x5FAE;&#x8C03;&#x3001;&#x8FC7;&#x6EE4;&#x5728;&#x8FD9;&#x91CC;&#x90FD;&#x4E0D;&#x662F;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#xFF0C;&#x6B64;&#x5904;&#x7684;&#x4E3B;&#x6D41;&#x662F;&#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5C01;&#x88C5;&#x6210;KeyEntry&#xFF0C;&#x6DFB;&#x52A0;&#x5230;&#x5F85;&#x5206;&#x53D1;&#x961F;&#x5217;&#xFF0C;&#x5E76;&#x5524;&#x9192;Looper&#x3002; &#x6765;&#x770B;&#x5411;&#x5F85;&#x5206;&#x53D1;&#x961F;&#x5217;&#x63D2;&#x5165;KeyEntry&#xFF1A; 1234567891011121314151617181920212223242526272829303132// frameworks/native/services/inputflinger/InputDispatcher.cpp:408bool InputDispatcher::enqueueInboundEventLocked(EventEntry* entry) { // &#x5982;&#x679C;&#x4E4B;&#x524D;&#x961F;&#x5217;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x65B0;&#x6765;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x9700;&#x8981;&#x7ACB;&#x523B;&#x5524;&#x9192;InputDispatcher&#x6765;&#x5904;&#x7406; bool needWake = mInboundQueue.isEmpty(); mInboundQueue.enqueueAtTail(entry); // &#x5C06;entry&#x8FDB;&#x961F; traceInboundQueueLengthLocked(); switch (entry-&gt;type) { case EventEntry::TYPE_KEY: { ... ... KeyEntry* keyEntry = static_cast&lt;KeyEntry*&gt;(entry); // &#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x4E0E;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#x5207;&#x6362;&#x64CD;&#x4F5C;&#x76F8;&#x5173;&#xFF0C;&#x5982;Home&#x952E;&#xFF0C; // &#x5728;&#x62AC;&#x8D77;&#x65F6;&#x5E94;&#x7ACB;&#x523B;&#x5524;&#x9192;InputDispatcher&#x6765;&#x5904;&#x7406; if (isAppSwitchKeyEventLocked(keyEntry)) { if (keyEntry-&gt;action == AKEY_EVENT_ACTION_DOWN) { mAppSwitchSawKeyDown = true; } else if (keyEntry-&gt;action == AKEY_EVENT_ACTION_UP) { if (mAppSwitchSawKeyDown) { ... ... mAppSwitchDueTime = keyEntry-&gt;eventTime + APP_SWITCH_TIMEOUT; mAppSwitchSawKeyDown = false; needWake = true; } } } break; } ... ... } return needWake;} InputDispatcher::mInboundQueue&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x5F85;&#x5206;&#x53D1;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x961F;&#x5217;&#xFF0C;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x4E8B;&#x4EF6;&#x90FD;&#x662F;&#x9700;&#x8981;&#x5206;&#x53D1;&#x7ED9;&#x7CFB;&#x7EDF;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x6765;&#x5904;&#x7406;&#x7684;&#x3002;&#x51FD;&#x6570;enqueueInboundEventLocked(...)&#x9664;&#x4E86;&#x8BA9;&#x4E8B;&#x4EF6;&#x8FDB;&#x961F;&#xFF0C;&#x8FD8;&#x4F1A;&#x8FD4;&#x56DE;&#x662F;&#x5426;&#x7ACB;&#x523B;&#x5524;&#x9192;InputDispatcher&#xFF0C;&#x4EE5;&#x5206;&#x53D1;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x3002; &#x5982;&#x679C;&#x9700;&#x8981;&#x5524;&#x9192;InputDispatcher&#xFF0C;&#x5219;&#x5728;InputDispatcher::notifyKey(...)&#x7684;&#x5C3E;&#x90E8;&#x8C03;&#x7528;mLooper()-&gt;wake()&#x3002; &#x603B;&#x7ED3; &#x672C;&#x6587;&#x7684;&#x8D77;&#x70B9;&#x662F;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#x6709;IO&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#xFF0C;&#x8FD9;&#x5C06;&#x4F1A;&#x5524;&#x9192;InputReader&#xFF0C;&#x5B83;&#x6536;&#x5230;&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x540E;&#xFF0C;&#x628A;&#x4E8B;&#x4EF6;&#x505A;&#x4E86;&#x7B80;&#x5355;&#x5C01;&#x88C5;&#xFF0C;&#x63D2;&#x5165;&#x5F85;&#x5206;&#x53D1;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5524;&#x9192;Dispatcher&#x3002;&#x56DE;&#x987E;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E4B;InputDispatcherThread&#x7684;&#x542F;&#x52A8;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;InputDispatcher&#x542F;&#x52A8;&#x540E;&#x5C31;&#x7B49;&#x5F85;&#x5728;mLooper-&gt;pollOnce(timeoutMillis);&#xFF0C;InputReader&#x63A5;&#x6536;&#x5230;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x540E;&#xFF0C;&#x5B8C;&#x6210;&#x7B5B;&#x9009;&#x3001;&#x5C01;&#x88C5;&#xFF0C;&#x4EA4;&#x7ED9;InputDispatcher&#xFF0C;&#x5728;&#x7ECF;&#x8FC7;&#x5408;&#x6CD5;&#x6027;&#x68C0;&#x67E5;&#xFF0C;&#x5374;&#x662F;&#x9700;&#x8981;&#x5206;&#x53D1;&#xFF0C;&#x5C31;&#x4F1A;&#x8C03;&#x7528;mLooper()-&gt;wake()&#x628A;InputDispatcher&#x7684;&#x7B49;&#x5F85;&#x5524;&#x9192;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（八）注册Client端InputChannel]]></title>
    <url>%2F2016%2F10%2F03%2F2016%2F1002KeyboardLearning8%2F</url>
    <content type="text"><![CDATA[&#x627F;&#x63A5;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x300B;Step1&#xFF1A; 123// &#x1F3C1;&#x5C06;mInputChannel&#x6CE8;&#x518C;&#x5230;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;Activity&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;mInputEventReceiver = new WindowInputEventReceiver(mInputChannel, Looper.myLooper()); mInputChannel&#x662F;&#x5728;ViewRootImpl::setView(...)&#x4E2D;&#x521B;&#x5EFA;&#x7684;Client&#x7AEF;InputChannel&#xFF0C;&#x5E76;&#x4E14;&#x88AB;transferTo&#x5230;InputDispatcher&#x521B;&#x5EFA;&#x7684;Client&#x7AEF;InputChannel&#x3002; &#x901A;&#x8FC7;&#x6784;&#x9020;WindowInputEventReceiver&#xFF0C;&#x5C06;&#x8BE5;InputChannel&#x6CE8;&#x518C;&#x5230;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;Activity&#x6240;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x672C;&#x6587;&#x7EE7;&#x7EED;&#x6DF1;&#x5165;WindowInputEventReceiver&#x3002; &#x5728;&#x6DF1;&#x5165;&#x8BA8;&#x8BBA;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x629B;&#x51FA;&#x6211;&#x7684;&#x4E00;&#x4E2A;&#x7591;&#x95EE;&#xFF1A;&#x5728;ViewRootImpl::setView(...)&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x76F8;&#x4E92;&#x8FDE;&#x63A5;&#x7684;InputChannel&#x5BF9;&#x662F;&#x5728;WindowManagerService&#x8FDB;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x901A;&#x8FC7;&#x51FD;&#x6570;mWindowSession.addToDisplay(...)&#x5728;&#x8FDC;&#x7A0B;&#x5B8C;&#x6210;&#xFF0C;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x540E;mInputChannel&#x4E2D;&#x4FDD;&#x5B58;&#x7684;&#x662F;WindowManagerService&#x4E2D;&#x521B;&#x5EFA;&#x7684;socket&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5728;&#x672C;&#x5730;&#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x6CE8;&#x518C;&#x53C8;&#x7528;&#x5230;&#x4E86;mInputChannel&#xFF0C;&#x53F7;&#x79F0;&#x8981;&#x628A;&#x5B83;&#x6CE8;&#x518C;&#x5230;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;Activity&#x4E2D;&#xFF0C;&#x8FD9;&#x4E0D;&#x4F1A;&#x6709;&#x5371;&#x9669;&#x5417;&#xFF1F; Step1: WindowInputEventReceiver&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570; 1234567// frameworks/base/core/java/android/view/ViewRootImpl.java:6018 final class WindowInputEventReceiver extends InputEventReceiver { ... ... /// inputChannel ViewRootImpl::mInputChannel public WindowInputEventReceiver(InputChannel inputChannel, Looper looper) { super(inputChannel, looper); // &#x1F3C1; } Step2: InputEventReceiver&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570; 1234567891011// frameworks/base/core/java/android/view/InputEventReceiver.java:60 // inputChannel ViewRootImpl::mInputChannel public InputEventReceiver(InputChannel inputChannel, Looper looper) { ... ... mInputChannel = inputChannel; mMessageQueue = looper.getQueue(); mReceiverPtr = nativeInit(new WeakReference&lt;InputEventReceiver&gt;(this), inputChannel, mMessageQueue); // &#x1F3C1; mCloseGuard.open(&quot;dispose&quot;); } Step3: nativeInit(...) 123456789101112131415161718192021222324252627282930// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:333static jlong nativeInit(JNIEnv* env, jclass clazz, jobject receiverWeak, jobject inputChannelObj, jobject messageQueueObj) { // &#x628A;java&#x5C42;&#x5BF9;&#x8C61;&#x8F6C;&#x6210;c++&#x5C42; sp&lt;InputChannel&gt; inputChannel = android_view_InputChannel_getInputChannel( env, inputChannelObj); ... ... sp&lt;MessageQueue&gt; messageQueue = android_os_MessageQueue_getMessageQueue( env, messageQueueObj); ... ... sp&lt;NativeInputEventReceiver&gt; receiver = new NativeInputEventReceiver(env, receiverWeak, inputChannel, messageQueue); status_t status = receiver-&gt;initialize(); // &#x1F3C1; ... ... receiver-&gt;incStrong(gInputEventReceiverClassInfo.clazz); // retain a reference for the object return reinterpret_cast&lt;jlong&gt;(receiver.get());}// :89// inputChannel Client&#x7AEF;InputChannelNativeInputEventReceiver::NativeInputEventReceiver(JNIEnv* env, jobject receiverWeak, const sp&lt;InputChannel&gt;&amp; inputChannel, const sp&lt;MessageQueue&gt;&amp; messageQueue) : mReceiverWeakGlobal(env-&gt;NewGlobalRef(receiverWeak)), mInputConsumer(inputChannel), mMessageQueue(messageQueue), mBatchedInputEventPending(false), mFdEvents(0) { ... ...} &#x7531;&#x4E8E;&#x540E;&#x9762;&#x4F1A;&#x7528;&#x5230;&#xFF0C;&#x6765;&#x770B;mInputConsumer&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A; 12345// frameworks/native/libs/input/InputTransport.cpp:376InputConsumer::InputConsumer(const sp&lt;InputChannel&gt;&amp; channel) : mResampleTouch(isTouchResamplingEnabled()), mChannel(channel), mMsgDeferred(false) {} mChannel&#x7684;&#x7C7B;&#x578B;&#x4E3A;InputChannel&#xFF1A; 1234567// frameworks/native/libs/input/InputTransport.h:138class InputChannel : public RefBase {... ... InputChannel(const String8&amp; name, int fd);... ... inline int getFd() const { return mFd; } Step4: NativeInputEventReceiver::initialize() 12345// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:105status_t NativeInputEventReceiver::initialize() { setFdEvents(ALOOPER_EVENT_INPUT); // &#x1F3C1; return OK;} ALOOPER_EVENT_INPUT&#x5B9A;&#x4E49;&#x5728;frameworks/native/include/android/looper.h&#x4E2D;&#xFF1A; 1234567enum { /** * The file descriptor is available for read operations. */ ALOOPER_EVENT_INPUT = 1 &lt;&lt; 0, ... ...}&#xFF1B; Step5: NativeInputEventReceiver::setFdEvents(...) 123456789101112// frameworks/base/core/jni/android_view_InputEventReceiver.cpp:145void NativeInputEventReceiver::setFdEvents(int events) { if (mFdEvents != events) { mFdEvents = events; int fd = mInputConsumer.getChannel()-&gt;getFd(); if (events) { // &#x4E3A;&#x771F; mMessageQueue-&gt;getLooper()-&gt;addFd(fd, 0, events, this, NULL); } else { mMessageQueue-&gt;getLooper()-&gt;removeFd(fd); } }} &#x6839;&#x636E;Step3&#x7684;&#x5206;&#x6790;&#xFF0C;mInputConsumer.getChannel()-&gt;getFd()&#x8FD4;&#x56DE;ViewRootImpl::mInputChannel-&gt;getFd()&#xFF0C;&#x5373;Client&#x7AEF;&#x7684;InputChannel&#x7684;socket&#x63CF;&#x8FF0;&#x7B26;&#x3002; mMessageQueue-&gt;getLooper()&#x662F;&#x4ECE;Step2&#x4E2D;&#x4E00;&#x8DEF;&#x4F20;&#x8FDB;&#x6765;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E3B;&#x7EBF;&#x7A0B;&#x7684;Looper&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x662F;&#x4E2A;&#x7EBF;&#x7A0B;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#xFF0C;&#x72EC;&#x4E00;&#x4EFD;&#x3002; &#x603B;&#x7ED3; &#x6240;&#x8C13;&#x201C;&#x5C06;mInputChannel&#x6CE8;&#x518C;&#x5230;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;Activity&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x201D;&#x7684;&#x542B;&#x4E49;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5411;&#x4E3B;&#x7EBF;&#x7A0B;&#x6CE8;&#x518C;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x7684;InputChannel&#x7684;socket&#xFF0C;&#x8BA9;&#x4E3B;&#x7EBF;&#x7A0B;Looper&#x76D1;&#x542C;&#x8BE5;socket&#x3002;&#x901A;&#x8FC7;&#x8BE5;socket&#xFF0C;InputManagerService&#x7684;InputDispatcher&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x81F3;&#x6B64;&#xFF0C;&#x821E;&#x53F0;&#x5DF2;&#x7ECF;&#x642D;&#x5EFA;&#x5B8C;&#x6210;&#xFF0C;&#x53D1;&#x6761;&#x4E0A;&#x6EE1;&#x4E86;&#x5F26;&#xFF0C;&#x591A;&#x7C73;&#x8BFA;&#x9AA8;&#x724C;&#x4E5F;&#x90FD;&#x5DF2;&#x6446;&#x653E;&#x5C31;&#x7EEA;&#xFF0C;&#x5C31;&#x7B49;&#x7740;&#x4E00;&#x4E2A;&#x6309;&#x952E;&#x88AB;&#x6572;&#x51FB;&#xFF0C;&#x89E6;&#x53D1;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x8FDE;&#x9501;&#x53CD;&#x5E94;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x770B;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x600E;&#x4E48;&#x5728;&#x8FD9;&#x4E2A;&#x821E;&#x53F0;&#x4E0A;&#x6D41;&#x8F6C;&#x548C;&#x5904;&#x7406;&#x3002; &#x4E0D;&#x8FC7;&#x524D;&#x9762;&#x6211;&#x7684;&#x5B58;&#x7591;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x5F97;&#x5230;&#x89E3;&#x51B3;&#xFF1A;&#x8FD9;&#x4E2A;socket&#x662F;&#x5728;WindowManagerService&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x63CF;&#x8FF0;&#x7B26;&#x8DE8;&#x8FDB;&#x7A0B;&#x4F20;&#x9012;&#x662F;&#x6CA1;&#x610F;&#x4E49;&#x7684;&#x3002;&#x6211;&#x731C;&#x6D4B;&#x4E00;&#x5B9A;&#x662F;&#x5728;&#x67D0;&#x4E2A;&#x73AF;&#x8282;&#xFF0C;&#x7CFB;&#x7EDF;&#x505A;&#x4E86;&#x5408;&#x6CD5;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x5B58;&#x7591;&#x6682;&#x65F6;&#x8FD8;&#x5F97;&#x5148;&#x6401;&#x7F6E;&#xFF0C;&#x4E0D;&#x5F71;&#x54CD;&#x5927;&#x5C40;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（七）——创建新窗口在InputDispatcher更新的注册信息]]></title>
    <url>%2F2016%2F10%2F03%2F2016%2F1002KeyboardLearning7%2F</url>
    <content type="text"><![CDATA[&#x627F;&#x63A5;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x300B;Step3&#xFF1A; 12345// &#x5982;&#x679C;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x548C;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x7A97;&#x53E3;&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x7A97;&#x53E3;&#xFF0C;&#x5219;&#x5F53;&#x524D;&#x7126;&#x70B9;&#x4F1A;&#x53D1;&#x751F;&#x6539;&#x53D8;if (focusChanged) { // &#x1F3C1;&#x628A;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x7A97;&#x53E3;&#x6CE8;&#x518C;&#x5230;InputDispatcher&#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x53EF;&#x4EE5;&#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7ED9;&#x7A97;&#x53E3; mInputMonitor.setInputFocusLw(mCurrentFocus, false /*updateInputWindows*/);} &#x901A;&#x8FC7;&#x51FD;&#x6570;mInputMonitor.setInputFocusLw(...)&#xFF0C;&#x628A;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x6CE8;&#x518C;&#x5230;InputDispatcher&#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x53EF;&#x4EE5;&#x5C06;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7ED9;&#x7A97;&#x53E3;&#xFF0C;&#x672C;&#x6587;&#x7EE7;&#x7EED;&#x6DF1;&#x5165;&#x8FD9;&#x4E2A;&#x6CE8;&#x518C;&#x51FD;&#x6570;&#x3002; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;&#x8BE5;&#x51FD;&#x6570;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x521B;&#x5EFA;Activi&#x65F6;&#xFF0C;&#x901A;&#x8FC7;WindowSession&#x4EE3;&#x7406;&#x5411;WindowManagerService&#x53D1;&#x9001;&#x8DE8;&#x8FDB;&#x7A0B;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;WindowManagerService&#x54CD;&#x5E94;&#x6267;&#x884C;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6240;&#x4EE5;&#x8BE5;&#x6BB5;&#x4EE3;&#x7801;&#x6240;&#x5728;&#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x662F;WindowManagerService&#x6240;&#x5728;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#x3002; mInputMonitor&#x5728;WindowManagerService&#x7684;&#x5757;&#x4E2D;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#xFF1A; 12// frameworks/base/services/core/java/com/android/server/wm/WindowManagerService.java:7550 final InputMonitor mInputMonitor = new InputMonitor(this); Step1: InputMonitor::setInputFocusLw(...) 123456789101112131415// frameworks/base/services/core/java/com/android/server/wm/InputMontor.java:398 public void setInputFocusLw(WindowState newWindow, boolean updateInputWindows) { ... ... if (newWindow != mInputFocus) { ... ... // mInputFocus&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3; mInputFocus = newWindow; setUpdateInputWindowsNeededLw(); if (updateInputWindows) { // &#x1F3C1;&#x5C06;mInputFocus&#x6CE8;&#x518C;&#x5230;InputDispatcher updateInputWindowsLw(false /*force*/); } } } Step2: InputMonitor::updateInputWindowsLw(...) 12345678910111213141516171819202122232425262728293031323334353637// frameworks/base/services/core/java/com/android/server/wm/InputMontor.java:229 public void updateInputWindowsLw(boolean force) { ... ... mUpdateInputWindowsNeeded = false; ... ... // Add all windows on the default display. // mDisplayContents&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;&#x6240;&#x6709;&#x7684;&#x663E;&#x793A;&#x8BBE;&#x5907; final int numDisplays = mService.mDisplayContents.size(); for (int displayNdx = 0; displayNdx &lt; numDisplays; ++displayNdx) { WindowList windows = mService.mDisplayContents.valueAt(displayNdx).getWindowList(); // windows&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3; for (int winNdx = windows.size() - 1; winNdx &gt;= 0; --winNdx) { final WindowState child = windows.get(winNdx); final InputChannel inputChannel = child.mInputChannel; final InputWindowHandle inputWindowHandle = child.mInputWindowHandle; ... ... if (addInputConsumerHandle &amp;&amp; inputWindowHandle.layer &lt;= mService.mInputConsumer.mWindowHandle.layer) { addInputWindowHandleLw(mService.mInputConsumer.mWindowHandle); addInputConsumerHandle = false; } ... ... // &#x904D;&#x5386;&#x6240;&#x6709;&#x73B0;&#x5B9E;&#x8BBE;&#x5907;&#x4E0B;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x628A;&#x4ED6;&#x4EEC;&#x6DFB;&#x52A0;&#x5230; // mInputWindowHandles&#x4E2D; addInputWindowHandleLw(inputWindowHandle, child, flags, type, isVisible, hasFocus, hasWallpaper); } } // Send windows to native code. // &#x1F3C1;&#x628A;mInputWindowHandles&#x4E2D;&#x7684;&#x7A97;&#x53E3;&#x91CD;&#x65B0;&#x6CE8;&#x518C;&#x5230;InputDispatcher&#x4E2D; mService.mInputManager.setInputWindows(mInputWindowHandles); // Clear the list in preparation for the next round. clearInputWindowHandlesLw(); ... ... } InputMonitor::mService&#x7684;&#x7C7B;&#x578B;&#x4E3A;WindowManagerService&#x3002; &#x6B64;&#x5904;&#x628A;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x5E94;&#x7528;&#x7A97;&#x53E3;&#x90FD;&#x6DFB;&#x52A0;&#x5230;mInputWindowHandles&#x4E2D;&#x4E86;&#x3002;mInputWindowHandles&#x662F;&#x4E00;&#x4E2A;InputWindowHandle&#x6570;&#x7EC4;&#xFF0C;&#x51FD;&#x6570;addInputWindowHandleLw&#x628A;&#x53C2;&#x6570;&#x6240;&#x4EE3;&#x8868;&#x7684;&#x7A97;&#x53E3;&#x6DFB;&#x52A0;&#x5230;&#x8BE5;&#x6570;&#x7EC4;&#x4E2D;&#x3002;InputManagerService::setInputWindows(...)&#x8D1F;&#x8D23;&#x628A;&#x8FD9;&#x4E9B;&#x7A97;&#x53E3;&#x91CD;&#x65B0;&#x6CE8;&#x518C;&#x5230;InputDispatcher&#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF;InputDispatcher&#x77E5;&#x9053;&#x54EA;&#x4E9B;&#x7A97;&#x53E3;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x90A3;&#x4E2A;&#x7A97;&#x53E3;&#x662F;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x3002; # Step3: InputManagerService::setInputWindows(...) 1234// frameworks/base/services/core/java/com/android/server/input/InputManagerService.java:1249 public void setInputWindows(InputWindowHandle[] windowHandles) { nativeSetInputWindows(mPtr, windowHandles); // &#x1F3C1; } Step4: nativeSetInputWindows(...) 1234567// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp:1232static void nativeSetInputWindows(JNIEnv* env, jclass /* clazz */, jlong ptr, jobjectArray windowHandleObjArray) { NativeInputManager* im = reinterpret_cast&lt;NativeInputManager*&gt;(ptr); im-&gt;setInputWindows(env, windowHandleObjArray); // &#x1F3C1;} Step5: NativeInputManager::setInputWindows(...) 1234567891011121314151617181920212223242526// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp:662void NativeInputManager::setInputWindows(JNIEnv* env, jobjectArray windowHandleObjArray) { Vector&lt;sp&lt;InputWindowHandle&gt; &gt; windowHandles; // &#x5C06;java&#x5C42;&#x7684;InputWindowHandle&#x5BF9;&#x8C61;&#x8F6C;&#x6210;C++&#x5C42;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5230;windowHandles if (windowHandleObjArray) { jsize length = env-&gt;GetArrayLength(windowHandleObjArray); for (jsize i = 0; i &lt; length; i++) { jobject windowHandleObj = env-&gt;GetObjectArrayElement(windowHandleObjArray, i); if (! windowHandleObj) { break; // found null element indicating end of used portion of the array } sp&lt;InputWindowHandle&gt; windowHandle = android_server_InputWindowHandle_getHandle(env, windowHandleObj); if (windowHandle != NULL) { windowHandles.push(windowHandle); } env-&gt;DeleteLocalRef(windowHandleObj); } } // &#x1F3C1;&#x524D;&#x9762;&#x628A;JAVA&#x5BF9;&#x8C61;&#x4EEC;&#x8F6C;&#x6362;&#x6210;C++&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x5728;C++&#x5C42;&#x6267;&#x884C;&#x6CE8;&#x518C;&#x64CD;&#x4F5C; mInputManager-&gt;getDispatcher()-&gt;setInputWindows(windowHandles); ... ...} Step6: InputDispatcher::setInputWindows(...) 1234567891011121314151617181920212223242526272829303132333435363738// frameworks/native/services/inputflinger/InputDispatcher.cpp:2822void InputDispatcher::setInputWindows(const Vector&lt;sp&lt;InputWindowHandle&gt; &gt;&amp; inputWindowHandles) {... ... Vector&lt;sp&lt;InputWindowHandle&gt; &gt; oldWindowHandles = mWindowHandles; mWindowHandles = inputWindowHandles; // &#x91CD;&#x65B0;&#x4FDD;&#x5B58;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3; sp&lt;InputWindowHandle&gt; newFocusedWindowHandle; bool foundHoveredWindow = false; // &#x91CD;&#x65B0;&#x68C0;&#x67E5;&#x4E00;&#x904D;&#xFF0C;&#x628A;&#x4E0D;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x5220;&#x9664;&#xFF0C;&#x987A;&#x4FBF;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x7126;&#x70B9;&#x7A97;&#x53E3; for (size_t i = 0; i &lt; mWindowHandles.size(); i++) { const sp&lt;InputWindowHandle&gt;&amp; windowHandle = mWindowHandles.itemAt(i); if (!windowHandle-&gt;updateInfo() || windowHandle-&gt;getInputChannel() == NULL) { mWindowHandles.removeAt(i--); continue; } if (windowHandle-&gt;getInfo()-&gt;hasFocus) { newFocusedWindowHandle = windowHandle; } if (windowHandle == mLastHoverWindowHandle) { foundHoveredWindow = true; } } if (!foundHoveredWindow) { mLastHoverWindowHandle = NULL; } if (mFocusedWindowHandle != newFocusedWindowHandle) { if (mFocusedWindowHandle != NULL) { ... ... mFocusedWindowHandle = newFocusedWindowHandle; } // &#x2191;&#x4ECE;for&#x5FAA;&#x73AF;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x6536;&#x96C6;&#x5230;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x5E94;&#x7528;&#x7A97;&#x53E3;&#x5E76;&#x627E;&#x5230;&#x5F53;&#x524D;&#x65B0;&#x7684;&#x6D3B;&#x52A8;&#x7A97;&#x53E3; ... ... // Wake up poll loop since it may need to make new input dispatching choices. mLooper-&gt;wake();} &#x8D39;&#x8FD9;&#x4E48;&#x5927;&#x52B2;&#xFF0C;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x628A;&#x5F53;&#x524D;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x91CD;&#x65B0;&#x8BB0;&#x5F55;&#x4E00;&#x904D;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x91CD;&#x65B0;&#x8BB0;&#x5F55;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x800C;&#x4E14;Android6&#x7684;&#x4EE3;&#x7801;&#x591A;&#x4E86;&#x4E00;&#x5768;&#x5BF9;Hover&#x7A97;&#x53E3;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x5177;&#x4F53;&#x76EE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x5148;&#x4E0D;&#x7BA1;&#xFF0C;&#x5F80;&#x540E;&#x770B;&#x3002; # &#x603B;&#x7ED3; &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x662F;&#x5728;&#x7CFB;&#x7EDF;&#x4E2D;&#x6709;&#x65B0;&#x7684;Activity&#x521B;&#x5EFA;&#x65F6;&#x88AB;&#x8C03;&#x7528;&#x7684;&#xFF0C;&#x4EE5;&#x540E;&#x5982;&#x679C;&#x7814;&#x7A76;Activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5E94;&#x8BE5;&#x8FD8;&#x4F1A;&#x9047;&#x5230;&#x3002;&#x8FD9;&#x91CC;&#x9047;&#x5230;&#x7684;&#x7591;&#x95EE;&#x6BD4;&#x8F83;&#x591A;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x6BCF;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;Activity&#xFF0C;&#x90FD;&#x8981;&#x8BA9;InputDispatcher&#x66F4;&#x65B0;&#x4E00;&#x904D;&#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x7A97;&#x53E3;&#x4FE1;&#x606F;&#xFF1F;&#x6CA1;&#x6709;&#x66F4;&#x4FBF;&#x6377;&#x7684;&#x65B9;&#x5F0F;&#x4E48;&#xFF1F;&#x8FD9;&#x8BA9;Activity&#x7684;&#x542F;&#x52A8;&#x6210;&#x672C;&#x633A;&#x9AD8;&#x7684;&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x6BB5;&#x5728;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x4E2D;&#x8D77;&#x4E86;&#x4EC0;&#x4E48;&#x4F5C;&#x7528;&#x5462;&#xFF1F; &#x6211;&#x731C;&#x6D4B;&#x5E94;&#x8BE5;&#x5C31;&#x662F;InputDispatcher&#x4FDD;&#x7559;&#x4E86;&#x7CFB;&#x7EDF;&#x6240;&#x6709;&#x9700;&#x8981;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#x5217;&#x8868;&#xFF0C;&#x4EE5;&#x53CA;&#x77E5;&#x9053;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x662F;&#x8C01;&#x3002;InputDispatcher&#x7684;&#x4E3B;&#x8981;&#x804C;&#x8D23;&#x5C31;&#x662F;&#x5206;&#x53D1;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x672A;&#x6765;&#x5F53;&#x5B83;&#x9700;&#x8981;&#x5C65;&#x884C;&#x8BE5;&#x6307;&#x8D23;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x8FD9;&#x5F20;&#x5217;&#x8868;&#x51B3;&#x5B9A;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7684;&#x76EE;&#x7684;&#x5730;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（六）——注册Server端InputChannel]]></title>
    <url>%2F2016%2F10%2F02%2F2016%2F1002KeyboardLearning6%2F</url>
    <content type="text"><![CDATA[&#x627F;&#x63A5;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x300B;&#x4E4B;Step3&#xFF0C;&#x5728;&#x521B;&#x5EFA;&#x4E00;&#x5BF9;&#x4E92;&#x8054;&#x7684;InputChannel&#x4E4B;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x51FD;&#x6570;mInputManager.registerInputChannel(...)&#xFF0C;&#x628A;Server&#x7AEF;InputChannel&#x6CE8;&#x518C;&#x5230;InputManager&#xFF0C;&#x672C;&#x6587;&#x7EE7;&#x7EED;&#x6DF1;&#x5165;&#x8FD9;&#x4E2A;&#x6CE8;&#x518C;&#x51FD;&#x6570;&#x3002; # Step1: InputManagerService::registerInputChannel(...) 123456// frameworks/base/services/core/java/com/android/server/input/InputManagerService.java:481 public void registerInputChannel(InputChannel inputChannel, InputWindowHandle inputWindowHandle) { ... ... nativeRegisterInputChannel(mPtr, inputChannel, inputWindowHandle, false); // &#x1F3C1; } &#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x300B;Step3&#x4E2D;&#xFF0C;&#x4F20;&#x5165;regisgetInputChannel&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6B63;&#x662F;&#x521A;&#x521A;&#x521B;&#x5EFA;&#x7684;Server&#x7AEF;InputChannel&#xFF1A; 1mInputManager.registerInputChannel(win.mInputChannel, win.mInputWindowHandle); &#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x300B;&#x7684;&#x5BF9;&#x8C61;&#x5173;&#x7CFB;&#x56FE;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;InputManagerService::mPtr&#x662F;&#x6307;&#x5411;NativeInputManager&#x5BF9;&#x8C61;&#x7684;&#x6307;&#x9488;&#x3002; Step2: nativeRegisterInputChannel(...) 123456789101112131415161718192021// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp:1142// inputChannelObj Server&#x7AEF;InputChannelstatic void nativeRegisterInputChannel(JNIEnv* env, jclass /* clazz */, jlong ptr, jobject inputChannelObj, jobject inputWindowHandleObj, jboolean monitor) { NativeInputManager* im = reinterpret_cast&lt;NativeInputManager*&gt;(ptr); // &#x628A;java&#x5C42;&#x7684;InputChannel&#x8F6C;&#x6362;&#x4E3A;C++&#x5C42;InputChannel sp&lt;InputChannel&gt; inputChannel = android_view_InputChannel_getInputChannel(env, inputChannelObj); ... ... sp&lt;InputWindowHandle&gt; inputWindowHandle = android_server_InputWindowHandle_getHandle(env, inputWindowHandleObj); status_t status = im-&gt;registerInputChannel( env, inputChannel, inputWindowHandle, monitor); // &#x1F3C1; ... ... if (! monitor) { android_view_InputChannel_setDisposeCallback(env, inputChannelObj, handleInputChannelDisposed, im); }} Step3: NativeInputManager.registerInputChannel(...) 12345678// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp:377// inputChannel Server&#x7AEF;InputChannelstatus_t NativeInputManager::registerInputChannel(JNIEnv* /* env */, const sp&lt;InputChannel&gt;&amp; inputChannel, const sp&lt;InputWindowHandle&gt;&amp; inputWindowHandle, bool monitor) { return mInputManager-&gt;getDispatcher()-&gt;registerInputChannel( inputChannel, inputWindowHandle, monitor);} &#x53C2;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x300B;&#x7684;&#x5BF9;&#x8C61;&#x5173;&#x7CFB;&#x56FE;mInputManager-&gt;getDispatcher()&#x8FD4;&#x56DE;&#x5176;mDispatcher&#x6210;&#x5458;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x662F;InputDispatcher&#x3002; Step4: InputDispatcher::registerInputChannel(...) 123456789101112131415161718192021// frameworks/native/services/inputflinger/InputDispatcher.cpp:3311status_t InputDispatcher::registerInputChannel(const sp&lt;InputChannel&gt;&amp; inputChannel, const sp&lt;InputWindowHandle&gt;&amp; inputWindowHandle, bool monitor) { ... ... // &#x5982;&#x679C;inputChannel&#x5DF2;&#x7ECF;&#x6CE8;&#x518C;&#x8FC7;&#x4E86;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x9519;&#x8BEF; if (getConnectionIndexLocked(inputChannel) &gt;= 0) { ... ... return BAD_VALUE; } sp&lt;Connection&gt; connection = new Connection(inputChannel, inputWindowHandle, monitor); int fd = inputChannel-&gt;getFd(); // Server&#x7AEF;&#x7684;scoket&#x63CF;&#x8FF0;&#x7B26; // &#x4EE5;fd&#x4E3A;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x4FDD;&#x5B58;inputChannel&#x5BF9;&#x5E94;&#x7684;Connection&#x5BF9;&#x8C61; mConnectionsByFd.add(fd, connection); ... ... // &#x628A;fd&#x6CE8;&#x518C;&#x5230;mLooper&#xFF0C;&#x5F53;fd&#x6536;&#x5230;&#x6570;&#x636E;&#x65F6;&#xFF0C;mLooper&#x5C06;&#x88AB;&#x5524;&#x9192; mLooper-&gt;addFd(fd, 0, ALOOPER_EVENT_INPUT, handleReceiveCallback, this); ... ... return OK;} &#x56DE;&#x987E;&#x4E00;&#x4E0B;inputChannel&#x662F;&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x300B;Step6&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;InputChannel::openInputChannelPair(...)&#x521B;&#x5EFA;&#x7684;&#xFF1A; 1234567String8 serverChannelName = name;serverChannelName.append(&quot; (server)&quot;);outServerChannel = new InputChannel(serverChannelName, sockets[0]);String8 clientChannelName = name;clientChannelName.append(&quot; (client)&quot;);outClientChannel = new InputChannel(clientChannelName, sockets[1]);return OK; &#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x6B63;&#x662F;fd&#xFF0C;&#x5B83;&#x662F;Server&#x7AEF;&#x548C;Client&#x7AEF;&#x76F8;&#x4E92;&#x8FDE;&#x63A5;&#x7684;&#x4E00;&#x5BF9;socket&#x4E2D;Server&#x7AEF;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#xFF1A; 12345678// frameworks/native/include/input/InputTransport.h:143class InputChannel : public RefBase { InputChannel(const String8&amp; name, int fd); ... ... InputChannel(const String8&amp; name, int fd); ... ...}; &#x603B;&#x7ED3; &#x672C;&#x8282;&#x548C;&#x4E0A;&#x4E00;&#x8282;&#x662F;&#x4E2A;&#x5173;&#x952E;&#xFF0C;&#x6211;&#x521D;&#x6B21;&#x5B66;&#x4E60;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x662F;&#x5728;&#x8FD9;&#x91CC;&#x9996;&#x5148;&#x6655;&#x6389;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;Binder&#x673A;&#x5236;&#x6A21;&#x7CCA;&#x4E86;&#x8FDB;&#x7A0B;&#x7684;&#x8FB9;&#x754C;&#xFF0C;&#x8FD9;&#x7ED9;&#x64CD;&#x4F5C;&#x5E26;&#x6765;&#x4E86;&#x5F88;&#x5927;&#x4FBF;&#x5229;&#xFF0C;&#x5374;&#x4E5F;&#x7ED9;&#x7406;&#x89E3;&#x8499;&#x4E0A;&#x4E00;&#x5C42;&#x8FF7;&#x96FE;&#xFF0C;&#x4E00;&#x4E0D;&#x7559;&#x795E;&#x5C31;&#x641E;&#x4E0D;&#x6E05;&#x695A;&#x5F53;&#x524D;&#x662F;&#x5728;&#x54EA;&#x4E2A;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x3002; &#x5F53;&#x4E00;&#x4E2A;&#x7A97;&#x4F53;&#x521B;&#x5EFA;&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x5411;WindowManagerService&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#xFF0C;&#x8981;&#x6C42;WindowManagerService&#x4E3A;&#x4E4B;&#x521B;&#x5EFA;&#x4E00;&#x5BF9;&#x7528;socket&#x5B9E;&#x73B0;&#x7684;InputChannel&#x3002;&#x672C;&#x8282;&#x628A;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#xFF08;Server&#x7AEF;&#x7684;&#xFF09;InputChannel&#x7684;socket&#x63CF;&#x8FF0;&#x7B26;&#x6CE8;&#x518C;&#x5230;InputManagerService&#x7684;InputDispatcher&#x7EBF;&#x7A0B;&#x7684;mLooper&#x4E2D;&#x3002; &#x8FD8;&#x8BB0;&#x5F97;&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E2D;InputDispatcherThreader&#x7684;&#x542F;&#x52A8;&#x4E00;&#x8282;&#x6211;&#x4EEC;&#x63A2;&#x8BA8;&#x8FC7;&#x7684;&#xFF0C;&#x5F53;&#x65F6;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x901A;&#x8FC7;mLooper-&gt;pollOnce(...)&#x7B49;&#x5F85;&#x5728;&#x4E86;&#x9ED8;&#x8BA4;&#x63CF;&#x8FF0;&#x7B26;mWakeEventFd&#x5904;&#x3002;&#x7ED3;&#x5408;&#x672C;&#x8282;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7CFB;&#x7EDF;&#x6BCF;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;Activity&#xFF0C;&#x5C31;&#x4F1A;&#x5411;InputManagerService&#x7684;InputDispatcher&#x7EBF;&#x7A0B;&#x7684;mLooper&#x6CE8;&#x518C;&#x4E00;&#x4E2A;InputChannel&#xFF0C;&#x4EE5;&#x4FBF;&#x7EB3;&#x5165;InputManagerService&#x7684;&#x76D1;&#x63A7;&#x3002;&#x201C;Server&#x7AEF;Channel&#x201D;&#x7684;&#x547D;&#x540D;&#x4E5F;&#x662F;&#x56E0;&#x6B64;&#x800C;&#x6765;&#x3002;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x4E2A;&#x7528;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x540E;&#x9762;&#x518D;&#x63A2;&#x7D22;&#x3002; &#x7591;&#x95EE;&#x4E00;&#xFF1A;InputChannel&#x5982;&#x4F55;&#x80FD;&#x8DE8;&#x8FDB;&#x7A0B;&#x4F20;&#x8F93;&#xFF1F; &#x6B64;&#x5904;&#x6211;&#x8FD8;&#x6709;&#x4E2A;&#x7591;&#x95EE;&#xFF1A;Binder&#x4E3A;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x63D0;&#x4F9B;&#x4E86;&#x4FBF;&#x5229;&#xFF0C;&#x53EF;&#x662F;&#x7EC6;&#x60F3;&#x8FD9;&#x91CC;&#x9762;&#x662F;&#x6709;&#x5927;&#x5751;&#x7684;&#xFF0C;&#x6BD4;&#x5982;socket&#x5BF9;&#x662F;&#x5728;WindowManagerService&#x8FDB;&#x7A0B;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x663E;&#x7136;&#x4E0D;&#x80FD;&#x8DE8;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#xFF1B;&#x518D;&#x5982;Binder&#x53EA;&#x80FD;&#x5728;&#x8FDB;&#x7A0B;&#x95F4;&#x4F20;&#x9012;&#x4E0E;&#x8FDB;&#x7A0B;&#x65E0;&#x5173;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E0E;&#x8FDB;&#x7A0B;&#x76F8;&#x5173;&#x7684;&#x6BD4;&#x5982;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x4F20;&#x9012;&#xFF0C;&#x5FC5;&#x987B;&#x8F6C;&#x6210;&#x4E0E;&#x8FDB;&#x7A0B;&#x65E0;&#x5173;&#x624D;&#x53EF;&#x4EE5;&#x3002;&#x800C;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x300B;&#x4E2D;&#xFF0C;ViewRootImpl::setView(...)&#x5F00;&#x5934;&#x4FBF;&#x662F;&#xFF1A; 1234567891011public void setView(View view, WindowManager.LayoutParams attrs, View panelParentView) { ... ... mInputChannel = new InputChannel(); ... ... // &#x628A;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x901A;&#x8FC7;Binder&#x4EE3;&#x7406;&#x4F20;&#x7ED9;mWindowSession res = mWindowSession.addToDisplay(mWindow, mSeq, mWindowAttributes, getHostVisibility(), mDisplay.getDisplayId(), mAttachInfo.mContentInsets, mAttachInfo.mStableInsets, mAttachInfo.mOutsets, mInputChannel); ... ...} &#x5B83;&#x628A;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x4F20;&#x7ED9;&#x4E86;WindowSession&#x7684;Binder&#x4EE3;&#x7406;&#xFF0C;&#x8FD9;&#x662F;&#x4EC0;&#x4E48;&#x601D;&#x60F3;&#x611F;&#x60C5;&#x5462;&#xFF1F; &#x5728;&#x67E5;&#x770B;InputChannel&#x7684;&#x5B9A;&#x4E49;&#x65F6;&#x6211;&#x627E;&#x5230;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7B54;&#x6848;&#xFF1A; 12345678910// frameworks/base/core/java/android/view/InputChannel.java:30public final class InputChannel implements Parcelable { ... ... @Override public void writeToParcel(Parcel out, int flags) { ... ... nativeWriteToParcel(out); ... ... }} Parcelable&#x5F88;&#x773C;&#x719F;&#xFF0C;&#x662F;&#x7684;&#xFF0C;&#x5728;Binder&#x4E2D;&#x7528;&#x4E8E;&#x5C06;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x201C;&#x62CD;&#x6241;&#x201D;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x201C;&#x62CD;&#x6241;&#x201D;&#x540E;&#x7684;&#x5BF9;&#x8C61;&#x5373;&#x53EF;&#x7528;&#x4E8E;&#x8FDB;&#x7A0B;&#x95F4;&#x4F20;&#x9012;&#x3002;&#x6D3E;&#x751F;&#x81EA;Parcelable&#xFF0C;&#x8BF4;&#x660E;InputChannel&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8FDB;&#x7A0B;&#x95F4;&#x4F20;&#x9012;&#x3002;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;Java&#x5C42;&#x5B9A;&#x4E49;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#x6210;&#x5458;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6307;&#x5411;jni&#x5C42;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x8BF4;&#x660E;&#x5B83;&#x7684;&#x5B9A;&#x4E49;&#x5168;&#x5728;c++&#x5C42;&#xFF0C;&#x518D;&#x770B;&#x5B83;&#x7684;&#x201C;&#x62CD;&#x6241;&#x201D;&#x63A5;&#x53E3;writeToParcel(...)&#x4E5F;&#x5B9A;&#x4E49;&#x5728;jni&#x5C42;&#x3002; &#x5148;&#x770B;&#x770B;c++&#x5C42;InputChannel&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x4E5F;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x6210;&#x5458;&#xFF0C;&#x540D;&#x79F0;&#x548C;&#x63CF;&#x8FF0;&#x7B26;&#xFF1A; 123456// frameworks/native/include/input/InputTransport.h:138class InputChannel : public RefBase { ... ... String8 mName; int mFd;}; &#x518D;&#x6765;&#x770B;&#x5B83;&#x7684;&#x201C;&#x62CD;&#x6241;&#x201D;&#x903B;&#x8F91;&#xFF1A; 1234567891011// frameworks/base/core/jni/android_view_InputChannel.cpp:222static void android_view_InputChannel_nativeWriteToParcel(JNIEnv* env, jobject obj, jobject parcelObj) { ... ... sp&lt;InputChannel&gt; inputChannel = nativeInputChannel-&gt;getInputChannel(); parcel-&gt;writeInt32(1); parcel-&gt;writeString8(inputChannel-&gt;getName()); parcel-&gt;writeDupFileDescriptor(inputChannel-&gt;getFd()); ... ...} &#x4E0D;&#x8FC7;&#x662F;&#x628A;&#x540D;&#x5B57;&#x548C;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x4F20;&#x4E86;&#x51FA;&#x53BB;&#xFF0C;&#x5230;&#x4E86;&#x5BF9;&#x7AEF;&#x518D;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7EC4;&#x88C5;&#x6210;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x5C31;&#x89E3;&#x7B54;&#x4E86;InputChannel&#x5982;&#x4F55;&#x8DE8;&#x8FDB;&#x7A0B;&#x4F20;&#x8F93;&#x7684;&#x95EE;&#x9898;&#x3002; &#x4E0D;&#x8FC7;&#x7591;&#x4E91;&#x5E76;&#x6CA1;&#x6709;&#x5F7B;&#x5E95;&#x6563;&#x53BB;&#xFF1A;&#x8FD9;&#x4E2A;&#x53EA;&#x6709;&#x5728;&#x672C;&#x5730;&#x624D;&#x6709;&#x6548;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x4F20;&#x5230;&#x5BF9;&#x7AEF;&#x6709;&#x4EC0;&#x4E48;&#x610F;&#x4E49;&#x5462;&#xFF1F;&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x9047;&#x5230;&#x8DE8;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x60C5;&#x51B5;&#xFF08;&#x76F8;&#x4FE1;&#x4E0D;&#x53EF;&#x80FD;&#x9047;&#x5230;&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x4E24;&#x4E2A;&#x4E92;&#x8054;&#x7684;socket&#x662F;&#x5728;WindowManagerService&#x4E2D;&#x521B;&#x5EFA;&#xFF0C;&#x672C;&#x8282;&#x4E2D;&#x53C8;&#x4EA4;&#x7ED9;InputManagerService&#x4E2D;&#x7684;InputDispatcherThreader&#x7EBF;&#x7A0B;&#x7B49;&#x5F85;&#xFF0C;&#x4ED6;&#x4EEC;&#x90FD;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x5F53;&#x7136;&#x6CA1;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x3002;&#x53EF;&#x662F;&#x628A;InputChannel&#x5728;&#x8FDB;&#x7A0B;&#x95F4;&#x4F20;&#x6765;&#x4F20;&#x53BB;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x7269;&#x7406;&#x610F;&#x4E49;&#x4E0A;&#x6D88;&#x9664;&#x4E86;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x754C;&#x9650;&#xFF0C;&#x5728;&#x903B;&#x8F91;&#x4E0A;&#x5173;&#x7CFB;&#x4E0A;&#x5374;&#x59CB;&#x7EC8;&#x8981;&#x6CE8;&#x610F;&#x201C;&#x8FD9;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x662F;&#x5728;&#x54EA;&#x91CC;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x6211;&#x80FD;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x201D;&#xFF0C;&#x6211;&#x611F;&#x89C9;&#x8FD9;&#x662F;&#x6BD4;C++&#x7684;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x66F4;&#x5927;&#x7684;&#x9677;&#x9631;&#x5462;&#xFF1F; &#x597D;&#x5427;&#xFF0C;&#x7591;&#x4E91;&#x5148;&#x9A71;&#x6563;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x66F4;&#x591A;&#x7684;&#x5F97;&#x5F80;&#x540E;&#x7EE7;&#x7EED;&#x63A8;&#x8FDB;&#x624D;&#x80FD;&#x83B7;&#x5F97;&#x89E3;&#x7B54;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（五）——InputChannel的创建]]></title>
    <url>%2F2016%2F10%2F02%2F2016%2F1002KeyboardLearning5%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x6587;&#x7684;&#x8D77;&#x70B9;&#x662F;ViewRootImpl&#x7684;setView(...)&#x51FD;&#x6570;&#xFF0C;&#x5148;&#x4E0D;&#x7BA1;Android&#x7CFB;&#x7EDF;&#x4E2D;&#x5B83;&#x548C;Activity&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5B83;&#x662F;Activity&#x521B;&#x5EFA;&#x7684;&#x5FC5;&#x7ECF;&#x4E4B;&#x8DEF;&#x3002;&#x672C;&#x6587;&#x7684;&#x76EE;&#x6807;&#x662F;&#x63A2;&#x7D22;InputChannel&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#xFF0C;&#x7B49;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x634B;&#x987A;&#x4E86;&#xFF0C;&#x4EE5;&#x540E;&#x518D;&#x63A2;&#x7D22;&#x7A97;&#x4F53;&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#x3002; # Step1: ViewRootImpl::setView(...) 12345678910111213141516171819202122232425262728293031// frameworks/base/core/java/android/view/ViewRootImpl.java:447 public void setView(View view, WindowManager.LayoutParams attrs, View panelParentView) { ... ... mView = view; ... ... mAdded = true; ... ... mInputChannel = new InputChannel(); ... ... // &#x1F3C1;&#x5C06;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#x6DFB;&#x52A0;&#x5230;WindowManagerService&#x4E2D; res = mWindowSession.addToDisplay(mWindow, mSeq, mWindowAttributes, getHostVisibility(), mDisplay.getDisplayId(), mAttachInfo.mContentInsets, mAttachInfo.mStableInsets, mAttachInfo.mOutsets, mInputChannel); ... ... if (view instanceof RootViewSurfaceTaker) { mInputQueueCallback = ((RootViewSurfaceTaker)view).willYouTakeTheInputQueue(); } if (mInputChannel != null) { if (mInputQueueCallback != null) { mInputQueue = new InputQueue(); mInputQueueCallback.onInputQueueCreated(mInputQueue); } // &#x1F3C1;&#x5C06;mInputChannel&#x6CE8;&#x518C;&#x5230;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;Activity&#x6240;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D; // &#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516B;&#xFF09;&#x300B;&#x4E2D;&#x6DF1;&#x5165;&#x8BA8;&#x8BBA; mInputEventReceiver = new WindowInputEventReceiver(mInputChannel, Looper.myLooper()); } ... ... } mWindowSession&#x662F;&#x5728;ViewRootImpl&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF1A; 123456// frameworks/base/core/java/android/view/ViewRootImpl.java:358 public ViewRootImpl(Context context, Display display) { mContext = context; mWindowSession = WindowManagerGlobal.getWindowSession(); ... ... } WindowManagerGlobal.getWindowSession()&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x4F8B;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#xFF1A; 12345678910111213141516171819202122// frameworks/base/core/java/android/view/WindowManagerGlobal.java:148 public static IWindowSession getWindowSession() { synchronized (WindowManagerGlobal.class) { if (sWindowSession == null) { ... ... InputMethodManager imm = InputMethodManager.getInstance(); // &#x83B7;&#x5F97;WindowManagerService&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; IWindowManager windowManager = getWindowManagerService(); // &#x83B7;&#x5F97;session&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5230;&#x9759;&#x6001;&#x53D8;&#x91CF;sWindowsSession sWindowSession = windowManager.openSession( new IWindowSessionCallback.Stub() { @Override public void onAnimatorScaleChanged(float scale) { ValueAnimator.setDurationScale(scale); } }, imm.getClient(), imm.getInputContext()); ... ... } return sWindowSession; } } sWindowSession&#x662F;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x53D8;&#x91CF;&#xFF0C;getWindowManagerService()&#x8FD4;&#x56DE;&#x7684;&#x662F;WindowManagerService&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x7684;openSession(...)&#x5F97;&#x5230;&#x7684;&#x5F53;&#x7136;&#x4E5F;&#x662F;WindowSession&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x3002; &gt; &#x6CE8;&#x610F;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x4EEC;&#x90FD;&#x662F;Binder&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x540E;&#x5BF9;&#x4ED6;&#x4EEC;&#x7684;&#x8C03;&#x7528;&#x90FD;&#x662F;&#x8DE8;&#x8FDB;&#x7A0B;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5B9E;&#x9645;&#x6267;&#x884C;&#x662F;&#x5728;WindowManagerService&#x6240;&#x5728;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x5B8C;&#x6210;&#x3002; &gt; Binder&#x662F;Android&#x4E0B;&#x4E00;&#x4E2A;&#x795E;&#x5947;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x5B83;&#x5F31;&#x5316;&#x4E86;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x8FB9;&#x754C;&#x3002;&#x5728;&#x6211;&#x7684;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x300B;&#x548C;&#x300A;&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;Binder&#x300B;&#x7CFB;&#x5217;&#x4E2D;&#x6709;&#x6DF1;&#x5165;&#x7684;&#x8BA8;&#x8BBA;&#x3002; &#x56DE;&#x5230;ViewRootImpl::setView(...)&#x4E2D;&#xFF0C;&#x5B83;&#x8C03;&#x7528;mWindowSession.addToDisplay(...)&#x5411;&#x8FD0;&#x884C;&#x5728;WindowManagerService&#x4E2D;&#x7684;&#x4E00;&#x4E2A;Session&#x53D1;&#x9001;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;&#x5C06;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#x6DFB;&#x52A0;&#x5230;WindowManagerService&#x4E2D;&#x3002; Step2: Session::addToDisplay(...) &#x63A5;&#x4E0B;&#x6765;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x5728;WindowManagerService&#x8FDB;&#x7A0B;&#x5185;&#x5B8C;&#x6210;&#x7684;&#x4E86;&#x3002; 123456789// frameworks/base/services/core/java/com/android/server/wm/Session.java:69 // outInputChannel ViewRootImpl::mInputChannel // window ViewRootImpl::mWindow public int addToDisplay(IWindow window, int seq, WindowManager.LayoutParams attrs, int viewVisibility, int displayId, Rect outContentInsets, Rect outStableInsets, Rect outOutsets, InputChannel outInputChannel) { return mService.addWindow(this, window, seq, attrs, viewVisibility, displayId, outContentInsets, outStableInsets, outOutsets, outInputChannel); } &#x5176;&#x4E2D;mService&#x7C7B;&#x578B;&#x4E3A;WindowManagerService&#x3002; Step3: WindowManagerService::addWindow(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566// frameworks/base/services/core/java/com/android/server/wm/WindowManagerService.java:2353 // outInputChannel ViewRootImpl::mInputChannel // client ViewRootImpl::mWindow public int addWindow(Session session, IWindow client, int seq, WindowManager.LayoutParams attrs, int viewVisibility, int displayId, Rect outContentInsets, Rect outStableInsets, Rect outOutsets, InputChannel outInputChannel) { ... ... WindowState attachedWindow = null; ... ... synchronized(mWindowMap) { ... ... // &#x63CF;&#x8FF0;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3; WindowState win = new WindowState(this, session, client, token, attachedWindow, appOp[0], seq, attrs, viewVisibility, displayContent); ... ... // &#x6B64;&#x53E5;&#x4E3A;&#x771F; if (outInputChannel != null &amp;&amp; (attrs.inputFeatures &amp; WindowManager.LayoutParams.INPUT_FEATURE_NO_INPUT_CHANNEL) == 0) { String name = win.makeInputChannelName(); // &#x1F3C1;&#x521B;&#x5EFA;&#x4E00;&#x5BF9;InputChannel InputChannel[] inputChannels = InputChannel.openInputChannelPair(name); // server&#x7AEF;InputChannel win.setInputChannel(inputChannels[0]); // client&#x7AEF;InputChannel&#xFF0C;&#x7528;inputChannels[1]&#x521D;&#x59CB;&#x5316;outInputChannel // &#x5373;&#xFF1A;&#x5C06;outInputChannel&#x7684;C++&#x5C42;&#x6307;&#x9488;&#x6307;&#x5411;inputChannels[1] inputChannels[1].transferTo(outInputChannel); // &#x1F3C1;&#x628A;server&#x7AEF;InputChannel&#x6CE8;&#x518C;&#x5230;InputManager // &#x8BE6;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516D;&#xFF09;&#x300B; mInputManager.registerInputChannel(win.mInputChannel, win.mInputWindowHandle); } ... ... // client&#x5373;ViewRootImpl::mWindow&#xFF0C;&#x662F;&#x6B63;&#x5728;&#x521B;&#x5EFA;&#x7684;&#x7A97;&#x53E3;&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; // &#x4EE5;&#x8BE5;&#x4EE3;&#x7406;&#x7684;IBinder&#x63A5;&#x53E3;&#x4E3A;key&#xFF0C;&#x4FDD;&#x5B58;WindowState&#x5BF9;&#x8C61; mWindowMap.put(client.asBinder(), win); ... ... if (type == TYPE_INPUT_METHOD) { ... ... } else if (type == TYPE_INPUT_METHOD_DIALOG) { ... ... } else { // &#x5982;&#x679C;&#x6B63;&#x5728;&#x521B;&#x5EFA;&#x7684;&#x7A97;&#x53E3;&#x4E0D;&#x662F;&#x4E0E;&#x8F93;&#x5165;&#x6CD5;&#x76F8;&#x5173;&#x7684;&#x7A97;&#x53E3; // &#x5C06;&#x6B63;&#x5728;&#x521B;&#x5EFA;&#x7684;WindowState&#x4FDD;&#x5B58;&#x5728;mWindows&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x7A97;&#x53E3;&#x5217;&#x8868;&#x4E2D; addWindowToListInOrderLocked(win, true); ... ... } ... ... boolean focusChanged = false; if (win.canReceiveKeys()) { // &#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; // &#x5C06;&#x6B63;&#x5728;&#x521B;&#x5EFA;&#x7684;&#x7A97;&#x53E3;&#x4F5C;&#x4E3A;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#xFF0C;&#x5373;&#x628A;win&#x4FDD;&#x5B58;&#x5728;mCurrentFocus&#x4E2D; focusChanged = updateFocusedWindowLocked(UPDATE_FOCUS_WILL_ASSIGN_LAYERS, false /*updateInputWindows*/); ... ... } ... ... // &#x5982;&#x679C;&#x5F53;&#x524D;&#x6D3B;&#x52A8;&#x7A97;&#x53E3;&#x548C;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x7A97;&#x53E3;&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x7A97;&#x53E3;&#xFF0C;&#x5219;&#x5F53;&#x524D;&#x7126;&#x70B9;&#x4F1A;&#x53D1;&#x751F;&#x6539;&#x53D8; if (focusChanged) { // &#x1F3C1;&#x628A;&#x6B63;&#x5728;&#x542F;&#x52A8;&#x7684;&#x7A97;&#x53E3;&#x6CE8;&#x518C;&#x5230;InputDispatcher&#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x53EF;&#x4EE5;&#x5C06;&#x952E;&#x76D8; // &#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7ED9;&#x7A97;&#x53E3;&#xFF0C;&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E03;&#xFF09;&#x300B;&#x4E2D;&#x8BE6;&#x7EC6;&#x8BA8;&#x8BBA; mInputMonitor.setInputFocusLw(mCurrentFocus, false /*updateInputWindows*/); } ... ... } ... ... } &#x5173;&#x4E8E;inputChannels[1].transferTo(outInputChannel);&#x8FD9;&#x53E5;&#xFF0C;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x5173;&#x6CE8;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x628A;&#x5B83;&#x80CC;&#x540E;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x5F97;&#x51FA;&#x4E2A;&#x7ED3;&#x8BBA;&#x653E;&#x5728;&#x8FD9;&#xFF1A; 123456// frameworks/base/core/java/android/view/InputChannel.java:121// &#x8BA9;outParameter&#x7684;mPtr&#x6307;&#x5411;this&#xFF0C;&#x8BA9;this&#x7684;mPtr&#x5E9F;&#x6389; public void transferTo(InputChannel outParameter) { ... ... nativeTransferTo(outParameter); } 12345678910// frameworks/base/core/jni/android_view_InputChannel.cpp:178// &#x8BA9;otherObj&#x7684;mPtr&#x6307;&#x5411;obj&#xFF0C;&#x8BA9;obj&#x7684;mPtr&#x6307;&#x5411;&#x7A7A;static void android_view_InputChannel_nativeTransferTo(JNIEnv* env, jobject obj, jobject otherObj) { ... ... NativeInputChannel* nativeInputChannel = android_view_InputChannel_getNativeInputChannel(env, obj); android_view_InputChannel_setNativeInputChannel(env, otherObj, nativeInputChannel); android_view_InputChannel_setNativeInputChannel(env, obj, NULL);} 1234567// frameworks/base/core/jni/android_view_InputChannel.cpp:90// &#x8BA9;inputChannelObj.mPtr&#x6307;&#x5411;nativeInputChannel.mPtrstatic void android_view_InputChannel_setNativeInputChannel(JNIEnv* env, jobject inputChannelObj, NativeInputChannel* nativeInputChannel) { env-&gt;SetLongField(inputChannelObj, gInputChannelClassInfo.mPtr, reinterpret_cast&lt;jlong&gt;(nativeInputChannel));} &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C; inputChannels[1].transferTo(outInputChannel) &#x7684;&#x542B;&#x4E49;&#x5C31;&#x662F;&#x8BA9;outInputChannel&#x201C;&#x53D8;&#x6210;&#x201D;inputChannels[1]&#xFF0C;&#x6240;&#x8C13;&#x201C;&#x53D8;&#x6210;&#x201D;&#x662F;&#x6307;&#x4EE4;&#x5176;C++&#x5C42;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x6307;&#x5411;&#x540E;&#x8005;&#x3002;&#x8DDF;C++&#x7684;&#x5F15;&#x7528;&#x5F88;&#x50CF;&#xFF1A; InputChannel&amp; outInputChannel = inputChannels[1]; Step4: InputChannel::openInputChannelPair(...) 12345// frameworks/base/core/java/android/view/InputChannel.java:86 public static InputChannel[] openInputChannelPair(String name) { ... ... return nativeOpenInputChannelPair(name); } Step5: nativeOpenInputChannelPair(...) 123456789101112131415161718192021222324252627// frameworks/base/core/jni/android_view_InputChannel.cpp:123static jobjectArray android_view_InputChannel_nativeOpenInputChannelPair(JNIEnv* env, jclass clazz, jstring nameObj) { const char* nameChars = env-&gt;GetStringUTFChars(nameObj, NULL); String8 name(nameChars); env-&gt;ReleaseStringUTFChars(nameObj, nameChars); sp&lt;InputChannel&gt; serverChannel; sp&lt;InputChannel&gt; clientChannel; // &#x1F3C1;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;server&#x7AEF;InputChannel&#x548C;&#x4E00;&#x4E2A;client&#x7AEF;InputChannel status_t result = InputChannel::openInputChannelPair(name, serverChannel, clientChannel); ... ... jobjectArray channelPair = env-&gt;NewObjectArray(2, gInputChannelClassInfo.clazz, NULL); ... ... // &#x628A;C++&#x5C42;&#x7684;InputChannel&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x6210;java&#x5C42;InputChannel&#x5BF9;&#x8C61; jobject serverChannelObj = android_view_InputChannel_createInputChannel(env, new NativeInputChannel(serverChannel)); ... ... // &#x628A;C++&#x5C42;&#x7684;InputChannel&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x6210;java&#x5C42;InputChannel&#x5BF9;&#x8C61; jobject clientChannelObj = android_view_InputChannel_createInputChannel(env, new NativeInputChannel(clientChannel)); ... ... // &#x5C06;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x5230;&#x6570;&#x7EC4;channelPair&#xFF0C;&#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005; env-&gt;SetObjectArrayElement(channelPair, 0, serverChannelObj); env-&gt;SetObjectArrayElement(channelPair, 1, clientChannelObj); return channelPair;} Step6: InputChannel::openInputChannelPair(...) 123456789101112131415161718192021222324// frameworks/native/libs/input/InputTransport.cpp: 124status_t InputChannel::openInputChannelPair(const String8&amp; name, sp&lt;InputChannel&gt;&amp; outServerChannel, sp&lt;InputChannel&gt;&amp; outClientChannel) { int sockets[2]; // &#x521B;&#x5EFA;&#x4E00;&#x5BF9;&#x533F;&#x540D;&#x7684;&#x76F8;&#x4E92;&#x8FDE;&#x63A5;&#x7684;socket&#xFF0C;&#x6210;&#x529F;&#x8FD4;&#x56DE;0 if (socketpair(AF_UNIX, SOCK_SEQPACKET, 0, sockets)) { ... ... } int bufferSize = SOCKET_BUFFER_SIZE; setsockopt(sockets[0], SOL_SOCKET, SO_SNDBUF, &amp;bufferSize, sizeof(bufferSize)); setsockopt(sockets[0], SOL_SOCKET, SO_RCVBUF, &amp;bufferSize, sizeof(bufferSize)); setsockopt(sockets[1], SOL_SOCKET, SO_SNDBUF, &amp;bufferSize, sizeof(bufferSize)); setsockopt(sockets[1], SOL_SOCKET, SO_RCVBUF, &amp;bufferSize, sizeof(bufferSize)); String8 serverChannelName = name; serverChannelName.append(&quot; (server)&quot;); outServerChannel = new InputChannel(serverChannelName, sockets[0]); String8 clientChannelName = name; clientChannelName.append(&quot; (client)&quot;); outClientChannel = new InputChannel(clientChannelName, sockets[1]); return OK;} Server&#x7AEF;&#x7684;InputChannel&#x548C;Client&#x7AEF;&#x7684;InputChannel&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4E24;&#x4E2A;&#x76F8;&#x4E92;&#x8FDE;&#x63A5;&#x7684;socket&#x3002; &#x603B;&#x7ED3; &#x7A97;&#x4F53;&#x5728;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5411;WindowManagerService&#x53D1;&#x9001;&#x8DE8;&#x8FDB;&#x7A0B;&#x8BF7;&#x6C42;&#xFF0C;&#x5C06;&#x81EA;&#x5DF1;&#x6DFB;&#x52A0;&#x5230;WindowManagerService&#x4E2D;&#x3002;WindowManagerService&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x540E;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x5BF9;&#x76F8;&#x4E92;&#x8FDE;&#x63A5;&#x7684;InputChannel&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;Server&#x7AEF;&#xFF0C;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;Client&#x7AEF;&#xFF0C;&#x8FD9;&#x4E00;&#x5BF9;&#x4E92;&#x8054;&#x7684;InputChannel&#x662F;&#x901A;&#x8FC7;socket&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（四）——Looper机制]]></title>
    <url>%2F2016%2F10%2F02%2F2016%2F1002KeyboardLearning4%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E2D;&#xFF0C;InputSispatcher::dispatchOnce()&#x51FD;&#x6570;&#x91CC;&#xFF0C;&#x6D88;&#x606F;&#x7684;&#x7B49;&#x5F85;&#x843D;&#x5230;&#x4E86;Looper::pollOnce(...)&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x672C;&#x6587;&#x5C31;&#x6765;&#x4E13;&#x95E8;&#x7814;&#x7A76;&#x4E00;&#x4E0B;Looper&#x8FD9;&#x4E2A;&#x7C7B;&#x3002;&#x8BE5;&#x7C7B;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x76D1;&#x63A7;&#x4E00;&#x7EC4;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x5F53;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x5B83;&#x6240;&#x7EF4;&#x62A4;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x5C06;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x4E00;&#x76F4;&#x7B49;&#x5F85;&#x3002; Looper&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570; 123456789// system/core/libutils/Looper.cpp:71Looper::Looper(bool allowNonCallbacks) : mAllowNonCallbacks(allowNonCallbacks), mSendingMessage(false), mPolling(false), mEpollFd(-1), mEpollRebuildRequired(false), mNextRequestSeq(0), mResponseIndex(0), mNextMessageUptime(LLONG_MAX) { mWakeEventFd = eventfd(0, EFD_NONBLOCK); ... ... rebuildEpollLocked();} &#x51FD;&#x6570;eventfd()&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x4E8B;&#x4EF6;&#x7684;&#x7B49;&#x5F85;/&#x901A;&#x77E5;&#x673A;&#x5236;&#x3002;&#x5176;&#x539F;&#x578B;&#x5982;&#x4E0B;&#xFF1A; 12#include &lt;sys/eventfd.h&gt;int eventfd(unsigned int initval, int flags); &#x8BE5;&#x5BF9;&#x8C61;&#x5728;&#x5185;&#x6838;&#x7EF4;&#x62A4;&#x7740;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x4E3A;initval&#x3002;&#x5B83;&#x6709;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF1A; * ssize_t write(int fd, const void* buf, size_t count) &#x4ECE;buf&#x4E2D;&#x53D6;&#x51FA;8&#x5B57;&#x8282;&#x7684;&#x6574;&#x578B;&#x503C;&#xFF0C;&#x52A0;&#x5230;&#x8BA1;&#x6570;&#x5668;&#x4E0A;&#x3002;&#x5982;&#x679C;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#x8FBE;&#x5230;0xfffffffffffffffe&#x5C31;&#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x88AB;read&#x3002; * ssize_t read(int fd, void* buf, size_t count) &#x8BFB;&#x53D6;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x628A;&#x8BA1;&#x6570;&#x5668;&#x91CD;&#x7F6E;&#x4E3A;0&#x3002;&#x5982;&#x679C;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#x4E0D;&#x4E3A;0&#xFF0C;&#x5219;&#x8BFB;&#x53D6;&#x6210;&#x529F;&#x8FD4;&#x56DE;&#x8BE5;&#x503C;&#xFF1B;&#x5982;&#x679C;&#x4E3A;0&#xFF0C;&#x975E;&#x963B;&#x585E;&#x6A21;&#x5F0F;&#x65F6;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x5931;&#x8D25;&#xFF0C;&#x5E76;&#x628A;error&#x7F6E;&#x4E3A;EINVAL&#xFF0C;&#x963B;&#x585E;&#x6A21;&#x5F0F;&#x5219;&#x4E00;&#x76F4;&#x963B;&#x585E;&#x5230;&#x8BA1;&#x6570;&#x5668;&#x975E;0&#x3002; mWakeEventFd&#x6B63;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x79CD;&#x5BF9;&#x8C61;&#xFF0C;Looper&#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x8FD9;&#x4E48;&#x4E00;&#x4E2A;eventfd&#x5BF9;&#x8C61;&#xFF0C;Looper::pollOnce(...)&#x7B49;&#x5F85;&#x8BE5;&#x5BF9;&#x8C61;&#x88AB;&#x5199;&#x5165;&#x5185;&#x5BB9;&#xFF0C;&#x4E00;&#x65E6;&#x88AB;&#x5199;&#x5165;&#xFF0C;Looper::pollOnce(...)&#x51FD;&#x6570;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x7EC4;&#x6210;&#x6D88;&#x606F;&#x6CF5;&#x7684;&#x91CD;&#x8981;&#x90E8;&#x4EF6;&#x2014;&#x2014;&#x6D88;&#x606F;&#x7684;&#x53D1;&#x9001;&#x8005;&#x53D1;&#x51FA;&#x6D88;&#x606F;&#x540E;&#x5411;mWakeEventFd&#x5199;&#x5165;&#x5185;&#x5BB9;&#xFF0C;Looper::pollOnce(...)&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x6D88;&#x606F;&#x5904;&#x7406;&#xFF0C;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x6B21;&#x7761;&#x7720;&#x7B49;&#x5F85;&#xFF0C;&#x76F4;&#x5230;&#x4E0B;&#x6B21;&#x518D;&#x53D1;&#x6765;&#x6D88;&#x606F;&#x3002;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5C31;&#x91C7;&#x7528;&#x4E86;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x3002; Looper&#x4E5F;&#x652F;&#x6301;&#x591A;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x540C;&#x65F6;&#x76D1;&#x542C;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Looper::addFd(...)&#x6DFB;&#x52A0;&#x591A;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;Looper&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;mRequests&#x4FDD;&#x5B58;&#x8FD9;&#x4E9B;&#x63CF;&#x8FF0;&#x7B26;&#x3002;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x5199;&#x5165;&#x6570;&#x636E;&#xFF0C;Looper::pollOnce(...)&#x90FD;&#x4F1A;&#x88AB;&#x5524;&#x9192;&#xFF0C;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5C31;&#x91C7;&#x7528;&#x4E86;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x3002; Looper::rebuildEpollLocked() 1234567891011121314151617181920212223242526void Looper::rebuildEpollLocked() { ... ... // Allocate the new epoll instance and register the wake pipe. // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;epoll&#x5B9E;&#x4F8B;&#xFF0C;&#x8BE5;&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x76D1;&#x63A7;&#x4E00;&#x7EC4;&#x5DF2;&#x6CE8;&#x518C;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x53D1;&#x751F;&#x4E86; // &#x5199;&#x5165;&#xFF0C;&#x5BF9;&#x8BE5;epoll&#x5B9E;&#x4F8B;&#x7684;wait&#x90FD;&#x4F1A;&#x8FD4;&#x56DE;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x4E00;&#x76F4;&#x963B;&#x585E; mEpollFd = epoll_create(EPOLL_SIZE_HINT); ... ... struct epoll_event eventItem; memset(&amp; eventItem, 0, sizeof(epoll_event)); // zero out unused members of data field union eventItem.events = EPOLLIN; eventItem.data.fd = mWakeEventFd; // mWakeEventFd&#x6CE8;&#x518C;&#x5230;mEpollFd&#x4E2D;&#xFF0C;&#x6210;&#x4E3A;&#x9ED8;&#x8BA4;&#x88AB;&#x76D1;&#x63A7;&#x7684;&#x63CF;&#x8FF0;&#x7B26; int result = epoll_ctl(mEpollFd, EPOLL_CTL_ADD, mWakeEventFd, &amp; eventItem); ... ... for (size_t i = 0; i &lt; mRequests.size(); i++) { const Request&amp; request = mRequests.valueAt(i); struct epoll_event eventItem; request.initEventItem(&amp;eventItem); int epollResult = epoll_ctl(mEpollFd, EPOLL_CTL_ADD, request.fd, &amp; eventItem); ... ... }} &#x5176;&#x4E2D;mRequests&#x662F;&#x4E00;&#x4E2A;vector&#xFF0C;&#x521D;&#x59CB;&#x6CA1;&#x6709;&#x5143;&#x7D20;&#xFF1A; 1234567// system/core/include/utils/Looper.h:136class Looper : public RefBase {...// :464KeyedVector&lt;int, Request&gt; mRequest:s; // guarded by mLock...}; &#x56E0;&#x6B64;Looper::rebuildEpollLocked()&#x9996;&#x6B21;&#x8C03;&#x7528;&#xFF0C;for&#x5FAA;&#x73AF;&#x4E0D;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x3002; # Looper::addFd(...) 1234567891011121314151617181920int Looper::addFd(int fd, int ident, int events, const sp&lt;LooperCallback&gt;&amp; callback, void* data) { ... ... Request request; request.fd = fd; request.ident = ident; request.events = events; request.seq = mNextRequestSeq++; request.callback = callback; request.data = data; ... ... struct epoll_event eventItem; request.initEventItem(&amp;eventItem); // &#x6CE8;&#x518C;&#x63CF;&#x8FF0;&#x7B26; int epollResult = epoll_ctl(mEpollFd, EPOLL_CTL_ADD, fd, &amp; eventItem); ... ... mRequests.add(fd, request); // &#x4FDD;&#x5B58;&#x5230;mRequests&#x6570;&#x7EC4; ... ... return 1;} Looper::pollOnce(...) &#x524D;&#x9762;&#x6CE8;&#x518C;&#x4E86;&#x82E5;&#x5E72;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x51FD;&#x6570;pollOnce(timeoutMillis)&#x5219;&#x7528;&#x6765;&#x7B49;&#x5F85;&#x8FD9;&#x4E9B;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x6700;&#x957F;&#x7B49;&#x5F85;timeoutMillis&#x6BEB;&#x79D2;&#x3002;&#x7B49;&#x5F85;&#x671F;&#x95F4;&#xFF0C;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x53D1;&#x751F;&#x8BFB;&#x5199;&#x4E8B;&#x4EF6;&#xFF0C;&#x5219;&#x8BE5;&#x51FD;&#x6570;&#x7ACB;&#x523B;&#x8FD4;&#x56DE;&#x3002; 123456789101112131415161718192021222324// system/core/include/utils/Looper.hclass Looper : public RefBase {... ...// : 263 int pollOnce(int timeoutMillis, int* outFd, int* outEvents, void** outData); inline int pollOnce(int timeoutMillis) { return pollOnce(timeoutMillis, NULL, NULL, NULL); // &#x1F3C1; }... ...};// system/core/libutils/Looper.cpp:184int Looper::pollOnce(int timeoutMillis, int* outFd, int* outEvents, void** outData) { int result = 0; for (;;) {... ... if (result != 0) {... ... return result; } result = pollInner(timeoutMillis); // &#x1F3C1; }} &#x8BE5;&#x51FD;&#x6570;&#x4E0D;&#x65AD;&#x8C03;&#x7528;pollInner(...)&#x67E5;&#x8BE2;&#x662F;&#x5426;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x9700;&#x8981;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;&#x6709;&#xFF0C;pollInner(...)&#x8FD4;&#x56DE;&#x975E;0&#xFF0C;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x3002; Looper::pollInner(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657// system/core/libutils/Looper.cpp:220int Looper::pollInner(int timeoutMillis) { ... ... struct epoll_event eventItems[EPOLL_MAX_EVENTS]; // &#x963B;&#x585E;&#xFF0C;&#x7B49;&#x5F85;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x76F4;&#x5230;&#x6709;&#x5199;&#x5165;&#x4E8B;&#x4EF6; int eventCount = epoll_wait(mEpollFd, eventItems, EPOLL_MAX_EVENTS, timeoutMillis); ... ... // &#x68C0;&#x67E5;&#x662F;&#x54EA;&#x4E00;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#x53D1;&#x751F;&#x4E86;&#x8BFB;&#x5199;&#x4E8B;&#x4EF6; for (int i = 0; i &lt; eventCount; i++) { int fd = eventItems[i].data.fd; uint32_t epollEvents = eventItems[i].events; if (fd == mWakeEventFd) { if (epollEvents &amp; EPOLLIN) { awoken(); // &#x1F3C1;&#x628A;mWakeEventFd&#x4E2D;&#x7684;&#x6570;&#x636E;&#x8BFB;&#x51FA;&#xFF0C;&#x4EE5;&#x6E05;&#x7A7A;&#x7F13;&#x5B58; } ... ... } else { ssize_t requestIndex = mRequests.indexOfKey(fd); if (requestIndex &gt;= 0) { int events = 0; if (epollEvents &amp; EPOLLIN) events |= EVENT_INPUT; if (epollEvents &amp; EPOLLOUT) events |= EVENT_OUTPUT; if (epollEvents &amp; EPOLLERR) events |= EVENT_ERROR; if (epollEvents &amp; EPOLLHUP) events |= EVENT_HANGUP; pushResponse(events, mRequests.valueAt(requestIndex)); } ... ... } }Done: ;... ... // Invoke all response callbacks. // &#x5982;&#x679C;&#x901A;&#x8FC7;addFd(...)&#x6CE8;&#x518C;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x8FD8;&#x6709;&#x9644;&#x52A0;&#x7684;callback&#xFF0C;&#x5219;&#x4F9D;&#x6B21;&#x6267;&#x884C; for (size_t i = 0; i &lt; mResponses.size(); i++) { Response&amp; response = mResponses.editItemAt(i); if (response.request.ident == POLL_CALLBACK) { int fd = response.request.fd; int events = response.events; void* data = response.request.data;... ... // Invoke the callback. Note that the file descriptor may be closed by // the callback (and potentially even reused) before the function returns so // we need to be a little careful when removing the file descriptor afterwards. int callbackResult = response.request.callback-&gt;handleEvent(fd, events, data); if (callbackResult == 0) { removeFd(fd, response.request.seq); } // Clear the callback reference in the response structure promptly because we // will not clear the response vector itself until the next poll. response.request.callback.clear(); result = POLL_CALLBACK; } }... ... return result;} &#x5982;&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#xFF0C;Looper::awoken()&#x53EA;&#x4E0D;&#x8FC7;&#x628A;mWakeEventFd&#x4E2D;&#x7684;&#x6570;&#x636E;&#x8BFB;&#x51FA;&#xFF0C;&#x5177;&#x4F53;&#x662F;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x5FC3;&#xFF0C;&#x56E0;&#x4E3A;mWakeEventFd&#x7684;&#x4F5C;&#x7528;&#x53EA;&#x662F;&#x5F53;&#x4E00;&#x4E2A;&#x4FE1;&#x53F7;&#x706F;&#xFF0C;&#x6570;&#x636E;&#x5199;&#x5165;&#x4F1A;&#x8BA9;&#x4FE1;&#x53F7;&#x706F;&#x4EAE;&#xFF0C;&#x4EAE;&#x4E86;&#x4EE5;&#x540E;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x5219;&#x662F;&#x4E1A;&#x52A1;&#x5C42;&#x7684;&#x804C;&#x8D23;&#x4E86;&#x3002;mWakeEventFd&#x53EA;&#x8D1F;&#x8D23;&#x7B49;&#x5F85;&#x706F;&#x4EAE;&#x540E;&#xFF0C;&#x653E;&#x884C;&#x4E1A;&#x52A1;&#x5C42;&#x6765;&#x5904;&#x7406;&#x3002; &#x800C;mRequests&#x4E2D;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x5199;&#x5165;&#xFF0C;&#x5219;&#x4E0D;&#x5E94;&#x8BE5;&#x5728;&#x8FD9;&#x91CC;&#x8BFB;&#x51FA;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E9B;&#x63CF;&#x8FF0;&#x7B26;&#x662F;&#x4E1A;&#x52A1;&#x5C42;&#x521B;&#x5EFA;&#x3001;&#x7EF4;&#x62A4;&#xFF0C;&#x53EA;&#x662F;&#x6CE8;&#x518C;&#x5230;Looper&#x4E2D;&#xFF0C;&#x5229;&#x7528;&#x4E86;Looper&#x963B;&#x585E;&#x3001;&#x7B49;&#x5F85;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x4E00;&#x65E6;&#x4FE1;&#x53F7;&#x706F;&#x4EAE;&#xFF0C;Looper&#x4F1A;&#x628A;&#x8FD9;&#x4E9B;&#x63CF;&#x8FF0;&#x7B26;&#x4EA4;&#x7ED9;&#x4E1A;&#x52A1;&#x5C42;&#x5904;&#x7406;&#x3002; &#x8FD9;&#x5C31;&#x597D;&#x6BD4;&#x5B66;&#x6821;&#x4F20;&#x8FBE;&#x5BA4;&#x7684;&#x5927;&#x7237;&#xFF0C;&#x4ED6;&#x81EA;&#x5DF1;&#x5B9A;&#x4E2A;&#x95F9;&#x949F;&#xFF0C;&#x5230;&#x70B9;&#x4E86;&#xFF0C;&#x4ED6;&#x4F1A;&#x53BB;&#x6572;&#x5B66;&#x6821;&#x7684;&#x949F;&#xFF0C;&#x544A;&#x8BC9;&#x5927;&#x5BB6;&#x8981;&#x4E0A;&#x8BFE;&#x4E86;&#xFF0C;&#x5F53;&#x7136;&#x6572;&#x949F;&#x4E4B;&#x524D;&#x4ED6;&#x4F1A;&#x81EA;&#x5DF1;&#x628A;&#x95F9;&#x949F;&#x6309;&#x6389;&#x3002;&#x8FD9;&#x5C31;&#x662F;mWakeEventFd&#x673A;&#x5236;&#x3002; &#x6B64;&#x5916;&#xFF0C;&#x4ED6;&#x8FD8;&#x4F1A;&#x5E2E;&#x5927;&#x5BB6;&#x4EE3;&#x6536;&#x5FEB;&#x9012;&#xFF0C;&#x8FD9;&#x4E5F;&#x76F8;&#x5F53;&#x4E8E;&#x662F;&#x7B49;&#x5F85;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x4E00;&#x65E6;&#x6765;&#x4E86;&#x5FEB;&#x9012;&#xFF0C;&#x4ED6;&#x4F1A;&#x901A;&#x77E5;&#x6536;&#x4EF6;&#x4EBA;&#x8FC7;&#x6765;&#x53D6;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x81EA;&#x5DF1;&#x628A;&#x5305;&#x88F9;&#x5904;&#x7406;&#x6389;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x901A;&#x8FC7;addFd(...)&#x6DFB;&#x52A0;&#x8FDB;&#x6765;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x673A;&#x5236;&#x3002; &#x5728;Done:&#x540E;&#x9762;&#x8FD8;&#x6709;&#x4E00;&#x5927;&#x5768;&#x4EE3;&#x7801;&#x662F;&#x66F4;&#x9AD8;&#x7EA7;&#x7684;&#x673A;&#x5236;&#xFF1A;&#x6BCF;&#x4E2A;&#x901A;&#x8FC7;addFd(...)&#x6DFB;&#x52A0;&#x8FDB;&#x6765;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#x8FD8;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x6BCF;&#x6B21;&#x6709;&#x4FE1;&#x53F7;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x5148;&#x6267;&#x884C;&#x8BE5;&#x56DE;&#x8C03;&#xFF0C;&#x518D;&#x901A;&#x77E5;&#x4E1A;&#x52A1;&#x5C42;&#x3002;&#x8FD9;&#x5C31;&#x597D;&#x6BD4;&#x6211;&#x4EEC;&#x63D0;&#x524D;&#x8DDF;&#x4F20;&#x8FBE;&#x5BA4;&#x7684;&#x5927;&#x7237;&#x6253;&#x597D;&#x62DB;&#x547C;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4EBA;&#x627E;&#x6211;&#xFF0C;&#x5148;&#x628A;&#x4ED6;&#x8BF7;&#x5230;&#x4F11;&#x606F;&#x5BA4;&#xFF0C;&#x8336;&#x6C34;&#x62DB;&#x5F85;&#x4E0A;&#xFF0C;&#x518D;&#x901A;&#x77E5;&#x6211;&#x8FC7;&#x6765;&#x63A5;&#x5F85;&#x3002; Looper::awoken() 123456// system/core/libutils/Looper.cpp:418void Looper::awoken() { ... ... uint64_t counter; TEMP_FAILURE_RETRY(read(mWakeEventFd, &amp;counter, sizeof(uint64_t)));} TEMP_FAILURE_RETRY&#x7684;&#x5B9A;&#x4E49;&#x4E3A; 1234567#define TEMP_FAILURE_RETRY(expression) \ (__extension__\ ({ long int __result;\ do __result = (long int)(expression);\ while(__result == -1L&amp;&amp; errno == EINTR);\ __result;})\ #endif &#x76F4;&#x5230;&#x8BFB;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6570;&#x624D;&#x8FD4;&#x56DE;&#x3002; Looper::wake() 1234567// system/core/libutils/Looper.cpp:404void Looper::wake() { ... ... uint64_t inc = 1; ssize_t nWrite = TEMP_FAILURE_RETRY(write(mWakeEventFd, &amp;inc, sizeof(uint64_t))); ... ...} &#x663E;&#x7136;Looper&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x6D88;&#x606F;&#x6CF5;&#x903B;&#x8F91;&#xFF0C;poll&#x7CFB;&#x5217;&#x7684;&#x51FD;&#x6570;&#x4ECE;&#x8BE5;&#x6CF5;&#x4E2D;&#x83B7;&#x53D6;&#x4FE1;&#x53F7;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4FE1;&#x53F7;&#x5219;&#x4E00;&#x76F4;&#x7B49;&#x5F85;&#xFF1B;wake()&#x51FD;&#x6570;&#x8D1F;&#x8D23;&#x5411;&#x8BE5;&#x6CF5;&#x53D1;&#x9001;&#x4FE1;&#x53F7;&#x3002; &#x5173;&#x4E8E;epoll epoll&#x5728;Looper&#x4E2D;&#x4EE5;&#x53CA;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x4E2D;&#x90FD;&#x6709;&#x88AB;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x91CC;&#x7B80;&#x5355;&#x63CF;&#x8FF0;&#x4E00;&#x4E0B;&#x5B83;&#x7684;&#x539F;&#x7406;&#x548C;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x3002;epoll&#x662F;&#x7528;&#x6765;&#x66FF;&#x4EE3;select&#xFF0C;&#x4F46;&#x548C;select&#x76F8;&#x6BD4;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x968F;&#x7740;&#x76D1;&#x542C;fd&#x6570;&#x76EE;&#x7684;&#x589E;&#x957F;&#x800C;&#x964D;&#x4F4E;&#x6548;&#x7387;&#x3002;epoll&#x7684;&#x63A5;&#x53E3;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5171;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x3002; ## int epoll_create(int size) &#x521B;&#x5EFA;&#x4E00;&#x4E2A;epoll&#x53E5;&#x67C4;&#xFF0C;size&#x7528;&#x6765;&#x544A;&#x8BC9;&#x5185;&#x6838;&#x8FD9;&#x4E2A;&#x76D1;&#x542C;&#x7684;&#x6570;&#x76EE;&#x4E00;&#x5171;&#x6709;&#x591A;&#x5927;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5F53;&#x521B;&#x5EFA;&#x597D;epoll&#x53E5;&#x67C4;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x5360;&#x7528;&#x4E00;&#x4E2A;fd&#x503C;&#xFF0C;&#x5728;linux&#x4E0B;&#x5982;&#x679C;&#x67E5;&#x770B;/proc/&#x8FDB;&#x7A0B;id/fd/&#xFF0C;&#x662F;&#x80FD;&#x591F;&#x770B;&#x5230;&#x8FD9;&#x4E2A;fd&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x4F7F;&#x7528;&#x5B8C;epoll&#x540E;&#xFF0C;&#x5FC5;&#x987B;&#x8C03;&#x7528;close()&#x5173;&#x95ED;&#xFF0C;&#x5426;&#x5219;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;fd&#x88AB;&#x8017;&#x5C3D;&#x3002; int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event) epoll&#x7684;&#x4E8B;&#x4EF6;&#x6CE8;&#x518C;&#x51FD;&#x6570;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;epoll_create()&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x52A8;&#x4F5C;&#xFF0C;&#x7528;&#x4E09;&#x4E2A;&#x5B8F;&#x6765;&#x8868;&#x793A;&#xFF1A; EPOLL_CTL_ADD&#xFF1A;&#x6CE8;&#x518C;&#x65B0;&#x7684;fd&#x5230;epfd&#x4E2D;&#xFF1B; EPOLL_CTL_MOD&#xFF1A;&#x4FEE;&#x6539;&#x5DF2;&#x7ECF;&#x6CE8;&#x518C;&#x7684;fd&#x7684;&#x76D1;&#x542C;&#x4E8B;&#x4EF6;&#xFF1B; EPOLL_CTL_DEL&#xFF1A;&#x4ECE;epfd&#x4E2D;&#x5220;&#x9664;&#x4E00;&#x4E2A;fd&#xFF1B; &#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x9700;&#x8981;&#x76D1;&#x542C;&#x7684;fd&#xFF0C;&#x7B2C;&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x544A;&#x8BC9;&#x5185;&#x6838;&#x9700;&#x8981;&#x76D1;&#x542C;&#x4EC0;&#x4E48;&#x4E8B;&#xFF0C;struct epoll_event&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; 1234567891011typedef union epoll_data { void *ptr; int fd; __uint32_t u32; __uint64_t u64;} epoll_data_t;struct epoll_event { __uint32_t events; /* Epoll events */ epoll_data_t data; /* User data variable */}; events&#x53EF;&#x4EE5;&#x662F;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x5B8F;&#x7684;&#x96C6;&#x5408;&#xFF1A; EPOLLIN &#xFF1A;&#x8868;&#x793A;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x53EF;&#x4EE5;&#x8BFB;&#xFF08;&#x5305;&#x62EC;&#x5BF9;&#x7AEF;SOCKET&#x6B63;&#x5E38;&#x5173;&#x95ED;&#xFF09;&#xFF1B; EPOLLOUT&#xFF1A;&#x8868;&#x793A;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x53EF;&#x4EE5;&#x5199;&#xFF1B; EPOLLPRI&#xFF1A;&#x8868;&#x793A;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x6709;&#x7D27;&#x6025;&#x7684;&#x6570;&#x636E;&#x53EF;&#x8BFB;&#xFF08;&#x8FD9;&#x91CC;&#x5E94;&#x8BE5;&#x8868;&#x793A;&#x6709;&#x5E26;&#x5916;&#x6570;&#x636E;&#x5230;&#x6765;&#xFF09;&#xFF1B; EPOLLERR&#xFF1A;&#x8868;&#x793A;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#xFF1B; EPOLLHUP&#xFF1A;&#x8868;&#x793A;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x88AB;&#x6302;&#x65AD;&#xFF1B; EPOLLET&#xFF1A; &#x5C06;EPOLL&#x8BBE;&#x4E3A;&#x8FB9;&#x7F18;&#x89E6;&#x53D1;(Edge Triggered)&#x6A21;&#x5F0F;&#xFF0C;&#x8FD9;&#x662F;&#x76F8;&#x5BF9;&#x4E8E;&#x6C34;&#x5E73;&#x89E6;&#x53D1;(Level Triggered)&#x6765;&#x8BF4;&#x7684;&#x3002; EPOLLONESHOT&#xFF1A;&#x53EA;&#x76D1;&#x542C;&#x4E00;&#x6B21;&#x4E8B;&#x4EF6;&#xFF0C;&#x5F53;&#x76D1;&#x542C;&#x5B8C;&#x8FD9;&#x6B21;&#x4E8B;&#x4EF6;&#x4E4B;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x9700;&#x8981;&#x7EE7;&#x7EED;&#x76D1;&#x542C;&#x8FD9;&#x4E2A;socket&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x518D;&#x6B21;&#x628A;&#x8FD9;&#x4E2A;socket&#x52A0;&#x5165;&#x5230;EPOLL&#x961F;&#x5217;&#x91CC; int epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout) &#x7B49;&#x5F85;&#x4E8B;&#x4EF6;&#x7684;&#x4EA7;&#x751F;&#x3002;&#x53C2;&#x6570;events&#x7528;&#x6765;&#x4ECE;&#x5185;&#x6838;&#x5F97;&#x5230;&#x4E8B;&#x4EF6;&#x7684;&#x96C6;&#x5408;&#xFF0C;maxevents&#x8868;&#x793A;events&#x6709;&#x591A;&#x5927;&#xFF0C;&#x8FD9;&#x4E2A; maxevents&#x7684;&#x503C;&#x4E0D;&#x80FD;&#x5927;&#x4E8E;&#x521B;&#x5EFA;epoll_create()&#x65F6;&#x7684;size&#xFF0C;&#x53C2;&#x6570;timeout&#x662F;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#xFF08;&#x6BEB;&#x79D2;&#xFF0C;0&#x4F1A;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#xFF0C;-1&#x5C06;&#x6C38;&#x4E45;&#x963B;&#x585E;&#xFF09;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x9700;&#x8981;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x4EF6;&#x6570;&#x76EE;&#xFF0C;&#x5982;&#x8FD4;&#x56DE;0&#x8868;&#x793A;&#x5DF2;&#x8D85;&#x65F6;&#x3002; epoll&#x7684;&#x4F7F;&#x7528;&#x6A21;&#x5F0F; &#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;epoll&#x7A0B;&#x5E8F;&#x90FD;&#x662F;&#x7528;&#x5982;&#x4E0B;&#x6846;&#x67B6;&#xFF1A; 123456789101112131415161718192021222324252627for( ; ; ) { nfds=epoll_wait(epfd, events, maxevents, timeoutMilliSec); for(i=0;i&lt;nfds;++i){ //&#x5904;&#x7406;&#x6240;&#x53D1;&#x751F;&#x7684;&#x6240;&#x6709;&#x4E8B;&#x4EF6; if(events[i].data.fd==listenfd){ // &#x76D1;&#x542C;&#x4E8B;&#x4EF6; connfd = accept(listenfd,(sockaddr *)&amp;clientaddr, &amp;clilen); ev.data.fd = connfd; // &#x8BBE;&#x7F6E;&#x7528;&#x4E8E;&#x8BFB;&#x64CD;&#x4F5C;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26; ev.events = EPOLLIN | EPOLLET; // &#x8BBE;&#x7F6E;&#x7528;&#x4E8E;&#x6CE8;&#x6D4B;&#x7684;&#x8BFB;&#x64CD;&#x4F5C;&#x4E8B;&#x4EF6; epoll_ctl(epfd,EPOLL_CTL_ADD,connfd,&amp;ev); // &#x6CE8;&#x518C;ev&#x4E8B;&#x4EF6; }else if(events[i].events&amp;EPOLLIN){ // &#x8BFB;&#x4E8B;&#x4EF6; if ( (sockfd = events[i].data.fd) &lt; 0) continue; read(sockfd, line, MAXLINE); ev.data.fd = sockfd; // &#x8BBE;&#x7F6E;&#x7528;&#x4E8E;&#x5199;&#x64CD;&#x4F5C;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26; ev.events = EPOLLOUT | EPOLLET; // &#x8BBE;&#x7F6E;&#x7528;&#x4E8E;&#x6CE8;&#x6D4B;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x4E8B;&#x4EF6; epoll_ctl(epfd, EPOLL_CTL_MOD, sockfd, &amp;ev); //&#x4FEE;&#x6539;sockfd&#x4E0A;&#x8981;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x4EF6;&#x4E3A;EPOLLOUT }else if(events[i].events&amp;EPOLLOUT){ // &#x5199;&#x4E8B;&#x4EF6; sockfd = events[i].data.fd; write(sockfd, line, n); ev.data.fd=sockfd; //&#x8BBE;&#x7F6E;&#x7528;&#x4E8E;&#x8BFB;&#x64CD;&#x4F5C;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26; ev.events=EPOLLIN | EPOLLET; //&#x8BBE;&#x7F6E;&#x7528;&#x4E8E;&#x6CE8;&#x518C;&#x7684;&#x8BFB;&#x64CD;&#x4F5C;&#x4E8B;&#x4EF6; epoll_ctl(epfd,EPOLL_CTL_MOD,sockfd,&amp;ev); //&#x4FEE;&#x6539;sockfd&#x4E0A;&#x8981;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x4EF6;&#x4E3A;EPOLIN } } }]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（三）——InputDispatcherThread和InputReaderThread两个线程函数]]></title>
    <url>%2F2016%2F10%2F02%2F2016%2F1002KeyboardLearning3%2F</url>
    <content type="text"><![CDATA[InputDispatcherThread&#x548C;InputReaderThread&#x90FD;&#x7EE7;&#x627F;&#x81EA;Thread&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x8BE5;&#x7C7B;&#x7684;&#x57FA;&#x672C;&#x6846;&#x67B6;&#xFF1A; 1234567891011121314151617181920212223// system/core/libutils/Threads.cpp:675status_t Thread::run(const char* name, int32_t priority, size_t stack){ ... ... res = createThreadEtc(_threadLoop, this, name, priority, stack, &amp;mThread); // &#x8C03;&#x7528;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;_threadLoop ... ...}int Thread::_threadLoop(void* user){ ... ... sp&lt;Thread&gt; strong(self-&gt;mHoldSelf); ... ... do { bool result; ... ... result = self-&gt;threadLoop(); // &#x5FAA;&#x73AF;&#x8C03;&#x7528;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;threadLoop() ... ... } while(strong != 0); return 0;} &#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x4E2D;&#xFF0C;InputManagerService&#x7684;&#x542F;&#x52A8;&#x6700;&#x7EC8;&#x843D;&#x5B9E;&#x5230;&#x4E86;InputDispatcherThread&#x548C;InputReaderThread&#x7684;&#x542F;&#x52A8;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;&#x542F;&#x52A8;&#x540E;&#x5C31;&#x662F;&#x4E0D;&#x65AD;&#x8C03;&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;threadLoop()&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x6DF1;&#x5165;&#x5230;&#x8FD9;&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;&#x4E2D;&#x3002; # InputDispatcherThread&#x7684;&#x542F;&#x52A8; ## Step1: InputDispatcherThread::threadLoop() 12345// frameworks/native/services/inputflinger/InputDispatcher.cpp:4530bool InputDispatcherThread::threadLoop() { mDispatcher-&gt;dispatchOnce(); // &#x1F3C1; return true;} &#x5728;InputManagerService&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;Step6&#x521B;&#x5EFA;InputReaderThread&#x548C;InputDispatcherThread&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5206;&#x522B;&#x4F20;&#x5165;InputReader&#x548C;InputDispatcher&#x3002;&#x6B64;&#x5904;&#x7684;mDispatcher&#x6B63;&#x662F;&#x5728;&#x90A3;&#x91CC;&#x4F20;&#x5165;&#x7684;InputDispatcher&#x53C2;&#x6570;&#x3002; Step2: InputDispatcher::dispatchOnce() 1234567891011121314151617181920212223// frameworks/native/services/inputflinger/InputDispatcher.cpp:230void InputDispatcher::dispatchOnce() { nsecs_t nextWakeupTime = LONG_LONG_MAX; { // &#x6267;&#x884C;&#x4E00;&#x6B21;&#x6D88;&#x606F;&#x5206;&#x53D1; ... ... // &#x5982;&#x679C;&#x6709;&#x7F13;&#x5B58;&#x7684;&#x547D;&#x4EE4;&#x8981;&#x6267;&#x884C;&#xFF0C;&#x5219;&#x6267;&#x884C;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;true&#xFF1B;&#x5426;&#x5219;&#xFF0C;&#x8FD4;&#x56DE;false if (!haveCommandsLocked()) { // &#x1F3C1;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x5206;&#x53D1;&#xFF0C;&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x5341;&#xFF09;&#x4E2D;&#x6DF1;&#x5165;&#x8BA8;&#x8BBA; dispatchOnceInnerLocked(&amp;nextWakeupTime); } // &#x5982;&#x679C;&#x524D;&#x9762;&#x6267;&#x884C;&#x4E86;&#x7F13;&#x5B58;&#x547D;&#x4EE4;&#xFF0C;&#x5219;&#x8BA9;nextWakeupTime&#x7F6E;&#x4E3A;&#x6700;&#x77ED;&#xFF0C;&#x4EE5;&#x4FBF;pollOnce(...) // &#x4E0D;&#x518D;&#x4F11;&#x7720;&#x3002;&#x56E0;&#x4E3A;&#x5728;&#x6267;&#x884C;&#x7F13;&#x5B58;&#x547D;&#x4EE4;&#x671F;&#x95F4;&#xFF0C;&#x7CFB;&#x7EDF;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x751F;&#x4E86;&#x65B0;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; if (runCommandsLockedInterruptible()) { nextWakeupTime = LONG_LONG_MIN; } } // &#x8FDB;&#x5165;&#x4F11;&#x7720;&#xFF0C;&#x7B49;&#x5F85;&#x6D88;&#x606F;&#xFF0C;&#x6700;&#x957F;&#x7B49;&#x5F85;timeoutMillis&#x6BEB;&#x79D2; nsecs_t currentTime = now(); int timeoutMillis = toMillisecondTimeoutDelay(currentTime, nextWakeupTime); mLooper-&gt;pollOnce(timeoutMillis); // } &#x51FD;&#x6570;mLooper-&gt;pollOnce(...)&#x8BE6;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x300B;&#xFF0C;&#x5B83;&#x7B49;&#x5F85;&#x4ECE;Looper&#x6D88;&#x606F;&#x6CF5;&#x4E2D;&#x83B7;&#x53D6;&#x901A;&#x77E5;&#xFF0C;&#x6700;&#x591A;&#x7B49;&#x5F85;timeoutMillis&#x6BEB;&#x79D2;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x65F6;&#x5219;&#x8FD4;&#x56DE;&#x3002; mLooper&#x662F;&#x5728;InputDispatcher&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#xFF1A; 1234InputDispatcher::InputDispatcher(const sp&lt;InputDispatcherPolicyInterface&gt;&amp; policy) : ... { mLooper = new Looper(false); ... ...} InputReaderThread&#x7684;&#x542F;&#x52A8; Step1: InputReaderThread::threadLoop() 12345// frameworks/native/services/inputflinger/InputReader.cpp:912bool InputReaderThread::threadLoop() { mReader-&gt;loopOnce(); // &#x1F3C1; return true;} Step2: InputReader::loopOnce() 1234567891011121314// frameworks/native/services/inputflinger/InputReader.cpp:272void InputReader::loopOnce() { ... ... int32_t timeoutMillis; ... ... size_t count = mEventHub-&gt;getEvents(timeoutMillis, mEventBuffer, EVENT_BUFFER_SIZE); // &#x1F3C1;&#x83B7;&#x53D6;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; ... ... if (count) { // &#x1F3C1; &#x5904;&#x7406;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#xFF0C;&#x5C06;&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E5D;&#xFF09;&#x300B;&#x4E2D;&#x8BA8;&#x8BBA; processEventsLocked(mEventBuffer, count); } ... ...} mEventHub&#x662F;&#x5728;NativeInputManager&#x6784;&#x9020;&#x51FD;&#x6570;&#x91CC;&#x521B;&#x5EFA;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;mInputManager&#x4E00;&#x8DEF;&#x4F20;&#x9012;&#x7ED9;InputReader&#x3002;&#x53C2;&#x89C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x300B;&#x7684;&#x603B;&#x7ED3;&#x53EF;&#x4EE5;&#x590D;&#x4E60;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x3002;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;&#x5904;&#x7406;&#x540E;&#x9762;&#x8BA8;&#x8BBA;&#xFF0C;&#x5728;&#x6DF1;&#x5165;&#x8BA8;&#x8BBA;EventHub::getEvents(...)&#x51FD;&#x6570;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;EventHub&#x7684;&#x521B;&#x5EFA;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940// frameworks/native/services/inputflinger/EventHub.cpp:184EventHub::EventHub(void) : mBuiltInKeyboardId(NO_BUILT_IN_KEYBOARD), mNextDeviceId(1), mControllerNumbers(), mOpeningDevices(0), mClosingDevices(0), mNeedToSendFinishedDeviceScan(false), mNeedToReopenDevices(false), mNeedToScanDevices(true), mPendingEventCount(0), mPendingEventIndex(0), mPendingINotify(false) { acquire_wake_lock(PARTIAL_WAKE_LOCK, WAKE_LOCK_ID); mEpollFd = epoll_create(EPOLL_SIZE_HINT); ... ... mINotifyFd = inotify_init(); // &#x521B;&#x5EFA;inotify&#x5B9E;&#x4F8B; // &#x76D1;&#x63A7;DEVICE_PATH&#x5373;/dev/input&#x76EE;&#x5F55;&#xFF0C;&#x5F53;&#x7CFB;&#x7EDF;&#x65B0;&#x589E;&#x6216;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#x65F6;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x5C31;&#x4F1A;&#x53D8;&#x5316; int result = inotify_add_watch(mINotifyFd, DEVICE_PATH, IN_DELETE | IN_CREATE); ... ... struct epoll_event eventItem; memset(&amp;eventItem, 0, sizeof(eventItem)); eventItem.events = EPOLLIN; eventItem.data.u32 = EPOLL_ID_INOTIFY; // DEVICE_PATH&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;mINotifyFd&#x5C31;&#x4F1A;&#x6536;&#x5230;&#x901A;&#x77E5; result = epoll_ctl(mEpollFd, EPOLL_CTL_ADD, mINotifyFd, &amp;eventItem); ... ... int wakeFds[2]; result = pipe(wakeFds); ... ... mWakeReadPipeFd = wakeFds[0]; mWakeWritePipeFd = wakeFds[1]; result = fcntl(mWakeReadPipeFd, F_SETFL, O_NONBLOCK); ... ... result = fcntl(mWakeWritePipeFd, F_SETFL, O_NONBLOCK); ... ... eventItem.data.u32 = EPOLL_ID_WAKE; result = epoll_ctl(mEpollFd, EPOLL_CTL_ADD, mWakeReadPipeFd, &amp;eventItem); ... ...} &#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x9664;&#x4E86;&#x521B;&#x5EFA;inotify&#x76D1;&#x542C;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#x7684;&#x589E;&#x5220;&#x5916;&#xFF0C;&#x8FD8;&#x6784;&#x9020;&#x4E86;epoll&#x673A;&#x5236;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x6DF1;&#x5165;&#x8BA8;&#x8BBA;&#x83B7;&#x53D6;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x7684;EventHub::getEvents(...)&#x51FD;&#x6570;&#x3002; ## Step3: EventHub::getEvents(...) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125// frameworks/native/services/inputflinger/EventHub.cpp:721// buffer&#x548C;bufferSize&#x8FD4;&#x56DE;&#x83B7;&#x53D6;&#x5230;&#x7684;&#x952E;&#x76D8;&#x4E8B;&#x4EF6;&#x53CA;&#x4E2A;&#x6570;size_t EventHub::getEvents(int timeoutMillis, RawEvent* buffer, size_t bufferSize) { ... ... struct input_event readBuffer[bufferSize]; RawEvent* event = buffer; size_t capacity = bufferSize; bool awoken = false; for (;;) { nsecs_t now = systemTime(SYSTEM_TIME_MONOTONIC); ... ... // Report any devices that had last been added/removed. // &#x628A;&#x201C;&#x8981;&#x5220;&#x9664;&#x952E;&#x76D8;&#x8BBE;&#x5907;&#x201D;&#x7684;&#x4FE1;&#x606F;&#x5C01;&#x88C5;&#x6210;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; while (mClosingDevices) { Device* device = mClosingDevices; ... ... mClosingDevices = device-&gt;next; event-&gt;when = now; event-&gt;deviceId = device-&gt;id == mBuiltInKeyboardId ? BUILT_IN_KEYBOARD_ID : device-&gt;id; event-&gt;type = DEVICE_REMOVED; event += 1; delete device; mNeedToSendFinishedDeviceScan = true; if (--capacity == 0) { break; } } ... ... // &#x628A;&#x201C;&#x8981;&#x6253;&#x5F00;&#x952E;&#x76D8;&#x8BBE;&#x5907;&#x201D;&#x7684;&#x4FE1;&#x606F;&#x5C01;&#x88C5;&#x6210;&#x952E;&#x76D8;&#x4E8B;&#x4EF6; while (mOpeningDevices != NULL) { Device* device = mOpeningDevices; ... ... mOpeningDevices = device-&gt;next; event-&gt;when = now; event-&gt;deviceId = device-&gt;id == mBuiltInKeyboardId ? 0 : device-&gt;id; event-&gt;type = DEVICE_ADDED; event += 1; mNeedToSendFinishedDeviceScan = true; if (--capacity == 0) { break; } } ... ... // Grab the next input event. // mPendingEventItems&#x662F;&#x4E00;&#x4E2A;epoll_event&#x6570;&#x7EC4;&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x8BBE;&#x5907; bool deviceChanged = false; while (mPendingEventIndex &lt; mPendingEventCount) { const struct epoll_event&amp; eventItem = mPendingEventItems[mPendingEventIndex++]; ... ... if (eventItem.data.u32 == EPOLL_ID_WAKE) {// &#x9ED8;&#x8BA4;&#x76D1;&#x63A7;Fd&#x53D1;&#x751F;&#x4FE1;&#x53F7; if (eventItem.events &amp; EPOLLIN) { ... ... awoken = true; // &#x8FD9;&#x4F1A;&#x8DF3;&#x51FA;&#x5927;&#x5FAA;&#x73AF;&#xFF0C;&#x8BA9;&#x51FD;&#x6570;&#x8FD4;&#x56DE; char buffer[16]; ssize_t nRead; do { // &#x6E05;&#x7A7A;&#x6570;&#x636E; nRead = read(mWakeReadPipeFd, buffer, sizeof(buffer)); } while ((nRead == -1 &amp;&amp; errno == EINTR) || nRead == sizeof(buffer)); } else ... ... continue; } // &#x952E;&#x76D8;&#x8BBE;&#x5907;&#x53D1;&#x751F;&#x4E86;IO&#x4E8B;&#x4EF6; ssize_t deviceIndex = mDevices.indexOfKey(eventItem.data.u32); ... ... Device* device = mDevices.valueAt(deviceIndex); if (eventItem.events &amp; EPOLLIN) { // &#x6B63;&#x5E38;&#x5E94;&#x8BE5;&#x8BFB;&#x51FA;&#x82E5;&#x5E72;&#x4E2A;input_event&#x7ED3;&#x6784;&#x4F53; int32_t readSize = read(device-&gt;fd, readBuffer, sizeof(struct input_event) * capacity); if (readSize == 0 || (readSize &lt; 0 &amp;&amp; errno == ENODEV)) { // Device was removed before INotify noticed. ... ... } else if (readSize &lt; 0) { ... ... } else if ((readSize % sizeof(struct input_event)) != 0) { ... ... } else { int32_t deviceId = device-&gt;id == mBuiltInKeyboardId ? 0 : device-&gt;id; size_t count = size_t(readSize) / sizeof(struct input_event); for (size_t i = 0; i &lt; count; i++) { struct input_event&amp; iev = readBuffer[i]; ... ... if (device-&gt;timestampOverrideSec || device-&gt;timestampOverrideUsec) { iev.time.tv_sec = device-&gt;timestampOverrideSec; iev.time.tv_usec = device-&gt;timestampOverrideUsec; if (iev.type == EV_SYN &amp;&amp; iev.code == SYN_REPORT) { device-&gt;timestampOverrideSec = 0; device-&gt;timestampOverrideUsec = 0; } ... ... } // &#x628A;&#x4ECE;&#x8BBE;&#x5907;&#x72EC;&#x5230;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165;buffer&#xFF0C;&#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005; ... ... event-&gt;deviceId = deviceId; event-&gt;type = iev.type; event-&gt;code = iev.code; event-&gt;value = iev.value; event += 1; capacity -= 1; } if (capacity == 0) { // The result buffer is full. Reset the pending event index // so we will try to read the device again on the next iteration. mPendingEventIndex -= 1; break; } } } ... ... } ... ... // Return now if we have collected any events or if we were explicitly awoken. // &#x5982;&#x679C;mWakeReadPipeFd&#x88AB;&#x901A;&#x77E5;&#x6216;&#x8005;(&#x6CE8;&#x518C;Fd&#x88AB;&#x901A;&#x77E5;&#x4E14;&#x8BFB;&#x51FA;&#x4E86;&#x6570;&#x636E;)&#xFF0C;&#x5219;&#x7EC8;&#x6B62;&#x5FAA;&#x73AF; if (event != buffer || awoken) { break; } ... ... int pollResult = epoll_wait(mEpollFd, mPendingEventItems, EPOLL_MAX_EVENTS, timeoutMillis); ... ... } // All done, return the number of events we read. return event - buffer;} &#x5728;&#x8FDB;&#x5165;getEvents(...)&#x51FD;&#x6570;&#x4E4B;&#x524D;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x770B;[&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x300B;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x867D;&#x7136;&#x5F88;&#x957F;&#xFF0C;&#x786E;&#x662F;&#x4E00;&#x6BB5;&#x5F88;&#x6A21;&#x5F0F;&#x5316;&#x7684;&#x5199;&#x6CD5;&#xFF0C;InputDispatcher&#x7684;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;&#x4E5F;&#x662F;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#xFF0C;&#x53EA;&#x662F;&#x6BD4;InputReader&#x65AD;&#x70B9;&#x3002;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x4EFB;&#x52A1;&#x5C31;&#x662F;&#x76D1;&#x63A7;mWakeReadPipeFd&#x4EE5;&#x53CA;&#x6CE8;&#x518C;&#x7684;Fd&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x751F;&#x952E;&#x76D8;IO&#x4E8B;&#x4EF6;&#xFF0C;&#x5C31;&#x628A;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x8BFB;&#x51FA;&#x6765;&#xFF0C;&#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005;&#x3002;&#x5426;&#x5219;&#x5C31;&#x4E00;&#x76F4;&#x6267;&#x884C;&#x963B;&#x585E;&#x5F0F;&#x76D1;&#x542C;&#x3002; # &#x603B;&#x7ED3; &#x5230;&#x6B64;&#x53EF;&#x4EE5;&#x5148;&#x5C0F;&#x5C0F;&#x5730;&#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#x4E86;&#x3002;InputManagerService&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF1A;InputReaderThread&#x548C;InputDispatcherThread&#xFF0C;&#x524D;&#x8005;&#x7528;&#x4E8E;&#x76D1;&#x542C;&#x8F93;&#x5165;&#x8BBE;&#x5907;&#x7684;IO&#x4E8B;&#x4EF6;&#xFF0C;&#x540E;&#x8005;&#x7B49;&#x5F85;IO&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#xFF0C;&#x8D1F;&#x8D23;&#x5206;&#x53D1;&#x3002;&#x5F53;&#x952E;&#x76D8;IO&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x540E;&#xFF0C;InputReaderThread&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x5B83;&#x5BF9;&#x8FD9;&#x4E9B;&#x4E8B;&#x4EF6;&#x5B8C;&#x6210;&#x5C01;&#x88C5;&#xFF0C;&#x7136;&#x540E;&#x5524;&#x9192;InputDispatcherThread&#x7EBF;&#x7A0B;&#xFF0C;&#x628A;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7ED9;&#x76EE;&#x6807;&#x7A97;&#x53E3;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（二）——InputManagerService的启动]]></title>
    <url>%2F2016%2F10%2F01%2F2016%2F1001KeyboardLearning2%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x300B;&#x4E2D;&#x8BA8;&#x8BBA;&#x4E86;InputManagerService&#x7684;&#x521B;&#x5EFA;&#x3002;&#x5728;Step1&#x4E2D;&#xFF0C;&#x5B8C;&#x6210;InputManagerService&#x521B;&#x5EFA;&#x4E4B;&#x540E;&#xFF0C;&#x8C03;&#x7528;&#x5176;start()&#x51FD;&#x6570;&#xFF0C;&#x5B8C;&#x6210;&#x542F;&#x52A8;&#x3002;&#x672C;&#x6587;&#x5C31;&#x4EE5;&#x8BE5;start()&#x51FD;&#x6570;&#x4E3A;&#x8D77;&#x70B9;&#x8FDB;&#x5165;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x7684;&#x63A2;&#x7D22;&#x3002; # Step1: InputManagerService::start() 123456789101112// frameworks/base/services/core/java/com/android/server/input/InputService.javapublic class InputManagerService extends IInputManager.Stub implements Watchdog.Monitor { ... ... // :299 public void start() { ... ... nativeStart(mPtr); // &#x1F3C1; ... ... } ... ...} &#x53C2;&#x89C1;InputManagerService&#x76F8;&#x5173;&#x5BF9;&#x8C61;&#x5173;&#x7CFB;&#x56FE;&#x53EF;&#x77E5;&#xFF0C;mPtr&#x662F;NativeInputManager&#x5BF9;&#x8C61;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x662F;&#x5728;InputManagerService&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#x7684;Step4&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#x3002; Step2: nativeStart(...) 1234567// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp:1049static void nativeStart(JNIEnv* env, jclass /* clazz */, jlong ptr) { NativeInputManager* im = reinterpret_cast&lt;NativeInputManager*&gt;(ptr); status_t result = im-&gt;getInputManager()-&gt;start(); // &#x1F3C1; ... ...} NativeInputManager::getInputManager()&#x8FD4;&#x56DE;&#x6210;&#x5458;&#x53D8;&#x91CF;mInputManager&#xFF0C;&#x7C7B;&#x578B;&#x4E3A;InputManager&#x3002;&#x8BE5;&#x5BF9;&#x8C61;&#x662F;&#x5728;InputManagerService&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;Step4&#x4E2D;&#x88AB;&#x521B;&#x5EFA;&#x51FA;&#x6765;&#x7684;&#x3002; 12345678// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp: 184class NativeInputManager : public virtual RefBase, public virtual InputReaderPolicyInterface, public virtual InputDispatcherPolicyInterface, public virtual PointerControllerPolicyInterface { ... ... inline sp&lt;InputManager&gt; getInputManager() const { return mInputManager; }}; Step3: InputManager::start() 12345678910// frameworks/native/servies/inputflinger/InputManager.cpp:53status_t InputManager::start() { status_t result = mDispatcherThread-&gt;run(&quot;InputDispatcher&quot;, PRIORITY_URGENT_DISPLAY); // &#x1F3C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E2D;&#x8BA8;&#x8BBA; ... ... result = mReaderThread-&gt;run(&quot;InputReader&quot;, PRIORITY_URGENT_DISPLAY); // &#x1F3C1;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x7B14;&#x8BB0;&#xFF08;&#x4E09;&#xFF09;&#x300B;&#x4E2D;&#x8BA8;&#x8BBA; ... ...} mDispatcherThread&#x548C;mReaderThread&#x662F;InputManager&#x5728;&#x6784;&#x9020;&#x65F6;&#x521B;&#x5EFA;&#x7684;&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;&#x5BF9;&#x8C61;&#x3002;&#x4ED6;&#x4EEC;&#x5747;&#x7EE7;&#x627F;&#x81EA;Thread&#xFF0C;&#x5F53;run(...)&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x5B9E;&#x9645;&#x8FDB;&#x5165;&#x4E86;&#x5404;&#x81EA;&#x7684;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;threadLoop(...)&#x3002; &#x603B;&#x7ED3; InputManagerService&#x901A;&#x8FC7;&#x542F;&#x52A8;&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;mDispatcherThread&#x548C;mReaderThreader&#x5B8C;&#x6210;&#x81EA;&#x8EAB;&#x7684;&#x542F;&#x52A8;&#x3002; &#x6240;&#x4EE5;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x9700;&#x8981;&#x6DF1;&#x5165;&#x5230;InputDispatcherThread&#x548C;InputReaderThread&#x4E24;&#x4E2A;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;&#x91CC;&#x53BB;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[键盘消息处理学习笔记（一）——InputManagerService的创建]]></title>
    <url>%2F2016%2F10%2F01%2F2016%2F0904KeyboardLearning1%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x4E00;&#x4E2A;&#x793C;&#x62DC;&#x628A;&#x7F57;&#x5347;&#x9633;&#x7684;&#x300A;Android&#x6E90;&#x7801;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#x4E4B;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x7684;&#x5185;&#x5BB9;&#x5B66;&#x4E60;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x611F;&#x89C9;&#x76F8;&#x6BD4;Binder&#x8981;&#x7B80;&#x5355;&#x597D;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x6709;&#x4E86;&#x667A;&#x80FD;&#x6307;&#x9488;&#x548C;Binder&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x5B66;&#x4E60;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x969C;&#x788D;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;Android2.x&#x548C;Android6&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#x5DE8;&#x5927;&#xFF0C;&#x5B8C;&#x5168;&#x638C;&#x63E1;&#x6700;&#x65B0;&#x7684;Android&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x8FD8;&#x6709;&#x5F88;&#x957F;&#x7684;&#x8DEF;&#x8981;&#x8D70;&#x3002;&#x5982;&#x5B66;&#x4E60;Binder&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x6253;&#x7B97;&#x5206;&#x4E24;&#x4E2A;&#x677F;&#x5757;&#x6765;&#x8BB0;&#x5F55;Android&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x7684;&#x63A2;&#x7D22;&#xFF1A;1&#x3001;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF1B;2&#x3001;&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;&#x3002;&#x201C;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x201D;&#x4E3B;&#x8981;&#x8BB0;&#x5F55;&#x521D;&#x6B21;&#x5B66;&#x4E60;&#x7684;&#x8F68;&#x8FF9;&#xFF0C;&#x4EE5;&#x53CA;&#x5176;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x6240;&#x6709;&#x7EC6;&#x8282;&#x95EE;&#x9898;&#xFF0C;&#x76EE;&#x524D;&#x6211;&#x5BF9;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x4E5F;&#x4EC5;&#x5904;&#x4E8E;&#x201C;&#x8EAB;&#x5728;&#x6B64;&#x5C71;&#x4E2D;&#x201D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6BCF;&#x4E2A;&#x77E5;&#x8BC6;&#x70B9;&#x90FD;&#x6709;&#x4E9B;&#x5370;&#x8C61;&#xFF0C;&#x4F46;&#x4E0D;&#x6210;&#x4F53;&#x7CFB;&#x3002;&#x5B8C;&#x6210;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4F1A;&#x518D;&#x6765;&#x56DE;&#x987E;&#x4E00;&#x904D;&#xFF0C;&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x7406;&#x89E3;&#x628A;&#x5B83;&#x4EEC;&#x8BB2;&#x51FA;&#x6765;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x201C;&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;&#x201D;&#x7CFB;&#x5217;&#x7684;&#x4EFB;&#x52A1;&#x4E86;&#x3002; Step1: InputManagerService&#x7684;&#x521B;&#x5EFA; &#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x7684;&#x6E90;&#x5934;&#x5728;InputManagerService&#xFF0C;&#x56E0;&#x6B64;&#x4ECE;&#x5B83;&#x7684;&#x542F;&#x52A8;&#x641E;&#x8D77;&#x3002;&#x5728;Android6&#x4E2D;&#xFF0C;InputManagerService&#x662F;&#x5728;SystemServer&#x4E2D;&#x88AB;&#x76F4;&#x63A5;&#x521B;&#x5EFA;&#x548C;&#x8C03;&#x8D77;&#x7684;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334// frameworks/base/services/java/com/android/server/SystemServer.java:167public final class SystemServer {... ... public static void main(String[] args) { // &#x5165;&#x53E3;&#x51FD;&#x6570; new SystemServer().run(); } private void run() { ... ... try { // :270 ... ... startOtherServices(); // &#x542F;&#x52A8;&#x4E00;&#x6279;Services } catch (Throwable ex) { ... ... } } private void startOtherServices() { try{ ... ... // :497 inputManager = new InputManagerService(context); // &#x1F3C1;&#x521B;&#x5EFA; ... ... wm = WindowManagerService.main(context, inputManager, mFactoryTestMode != FactoryTest.FACTORY_TEST_LOW_LEVEL, !mFirstBoot, mOnlyCore); ServiceManager.addService(Context.WINDOW_SERVICE, wm); ServiceManager.addService(Context.INPUT_SERVICE, inputManager); mActivityManagerService.setWindowManager(wm); inputManager.setWindowManagerCallbacks(wm.getInputMonitor()); inputManager.start(); // &#x1F3C1;&#x542F;&#x52A8;&#xFF0C;&#x5C06;&#x5728;&#x300A;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x300B;&#x4E2D;&#x8BA8;&#x8BBA; } catch (RuntimeException e) { ... ... } &#x8FD9;&#x8DDF;Android2.3&#x6709;&#x4E9B;&#x5DEE;&#x5F02;&#xFF0C;&#x5728;Android2.3&#x4E2D;&#xFF0C;inputManager&#x7684;&#x7C7B;&#x540D;&#x5C31;&#x53EB;InputManager&#xFF0C;&#x662F;&#x5728;WindowManagerService&#x4E2D;&#x88AB;&#x521B;&#x5EFA;&#x548C;&#x542F;&#x52A8;&#x3002; # Step2: InputManagerService::InputManagerService() &#x63A5;&#x4E0B;&#x6765;&#x770B;InputManagerService&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A; 1234567891011121314// frameworks/base/services/core/java/com/android/server/input/InputManagerService.javapublic class InputManagerService extends IInputManager.Stub implements Watchdog.Monitor { ... ... // :278 public InputManagerService(Context context) { ... ... // &#x1F3C1; mPtr = nativeInit(this, mContext, mHandler.getLooper().getQueue()); ... ... } ... ...} Step3: nativeInit(...) nativeInit(...)&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4E00;&#x4E2A;NativeInputManager&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x6307;&#x9488;&#x88AB;&#x5F3A;&#x8F6C;&#x6210;jlong&#xFF0C;&#x8FD4;&#x56DE;&#x7ED9;mPtr&#x3002; 123456789// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp :1035static jlong nativeInit(JNIEnv* env, jclass /* clazz */, jobject serviceObj, jobject contextObj, jobject messageQueueObj) { ... ... NativeInputManager* im = new NativeInputManager(contextObj, serviceObj, messageQueue-&gt;getLooper()); // &#x1F3C1; im-&gt;incStrong(0); return reinterpret_cast&lt;jlong&gt;(im);} Step4: NativeInputManager::NativeInputManager(...) 12345678// frameworks/base/services/core/jni/com_android_server_input_InputManagerService.cpp :288NativeInputManager::NativeInputManager(jobject contextObj, jobject serviceObj, const sp&lt;Looper&gt;&amp; looper) : mLooper(looper), mInteractive(true) { ... ... sp&lt;EventHub&gt; eventHub = new EventHub(); mInputManager = new InputManager(eventHub, this, this); // &#x1F3C1;} Step5: InputManager::InputManager(...) 123456789// frameworks/native/services/inputflinger/InputManager.cpp :27InputManager::InputManager( const sp&lt;EventHubInterface&gt;&amp; eventHub, const sp&lt;InputReaderPolicyInterface&gt;&amp; readerPolicy, const sp&lt;InputDispatcherPolicyInterface&gt;&amp; dispatcherPolicy) { mDispatcher = new InputDispatcher(dispatcherPolicy); mReader = new InputReader(eventHub, readerPolicy, mDispatcher); initialize(); // &#x1F3C1;} Step6: InputManager::initialize() 12345// frameworks/native/services/inputflinger/InputManager.cpp: 48void InputManager::initialize() { mReaderThread = new InputReaderThread(mReader); mDispatcherThread = new InputDispatcherThread(mDispatcher);} &#x603B;&#x7ED3; &#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#xFF1A;InputManagerService&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x672C;&#x6587;&#x5C1A;&#x672A;&#x6D89;&#x53CA;&#x7684;&#xFF0C;&#x6682;&#x6807;&#x4E3A;&#x7070;&#x8272;&#x3002; &#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A; &#x4EE5;&#x4E0A;&#x7684;&#x521B;&#x5EFA;&#x8FC7;&#x7A0B;&#x662F;&#x5728;SystemServer&#x7684;&#x542F;&#x52A8;&#x9636;&#x6BB5;&#xFF0C;&#x4EA7;&#x751F;&#x7684;&#x5BF9;&#x8C61;&#x90FD;&#x5728;SystemServer&#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x5185;&#x3002; &#x5728;&#x8FD9;&#x6B21;&#x5B66;&#x4E60;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x628A;&#x539F;&#x5148;&#x5C42;&#x5C42;&#x5806;&#x6808;&#x5F0F;&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6539;&#x6210;&#x4E86;&#x540C;&#x7EA7;&#x4E32;&#x884C;&#x7684;&#x8868;&#x8FF0;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;Step1&#x548C;Step2&#x4E4B;&#x95F4;&#x662F;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x6211;&#x5728;&#x5F62;&#x5F0F;&#x4E0A;&#x628A;&#x5B83;&#x4EEC;&#x653E;&#x5728;&#x540C;&#x4E00;&#x7EA7;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x4ECE;&#x300A;Android&#x7CFB;&#x7EDF;&#x6E90;&#x4EE3;&#x7801;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#x4E2D;&#x501F;&#x9274;&#x6765;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x5C42;&#x5C42;&#x8C03;&#x7528;&#x7684;&#x5173;&#x7CFB;&#x8FDC;&#x6BD4;&#x5E73;&#x7EA7;&#x987A;&#x5E8F;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x8981;&#x591A;&#x5F97;&#x591A;&#xFF0C;&#x5982;&#x679C;&#x7528;&#x201C;&#x5927;&#x6807;&#x9898;-&gt;&#x4E2D;&#x6807;&#x9898;-&gt;&#x5C0F;&#x6807;&#x9898;&#x201C;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8868;&#x8FF0;&#xFF0C;&#x5C3D;&#x7BA1;&#x7B26;&#x5408;&#x903B;&#x8F91;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x8868;&#x73B0;&#x51FA;&#x6765;&#x53CD;&#x800C;&#x66F4;&#x590D;&#x6742;&#x3002;&#x6539;&#x6210;&#x4E32;&#x884C;&#x540E;&#xFF0C;&#x8981;&#x6E05;&#x6670;&#x5F88;&#x591A;&#x3002;&#x800C;&#x4E14;&#x6BCF;&#x4E00;&#x5904;&#x90FD;&#x7528;&#x4E00;&#x4E2A;StepN&#x6807;&#x793A;&#x51FA;&#x6765;&#xFF0C;&#x9700;&#x8981;&#x5F15;&#x7528;&#x6216;&#x8005;&#x6307;&#x4EE3;&#x7684;&#x65F6;&#x5019;&#x80FD;&#x5F88;&#x51C6;&#x786E;&#x5730;&#x8BF4;&#x6E05;&#x695A;&#x3002; &#x6211;&#x4F1A;&#x628A;&#x6BCF;&#x4E00;&#x6B65;&#x9AA4;&#x4E2D;&#x9700;&#x8981;&#x8BE6;&#x7EC6;&#x5C55;&#x5F00;&#x8BA8;&#x8BBA;&#x7684;&#x63D2;&#x4E2A;&#x1F3C1;&#xFF0C;&#x6709;&#x7684;&#x4F1A;&#x5728;&#x540E;&#x9762;&#x67D0;&#x7BC7;&#x535A;&#x6587;&#x4E2D;&#x8BA8;&#x8BBA;&#xFF0C;&#x4F1A;&#x5728;&#x1F3C1;&#x540E;&#x9762;&#x6CE8;&#x660E;&#x3002; &#x8BFB;&#x4EE3;&#x7801;&#x4E5F;&#x662F;&#x4E0D;&#x65AD;&#x6253;&#x78E8;&#x65B9;&#x6CD5;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x597D;&#x7684;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x4E8B;&#x534A;&#x529F;&#x500D;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>键盘消息处理学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python中把数据转成字节流]]></title>
    <url>%2F2016%2F09%2F26%2F2016%2F0927PythonStructPack%2F</url>
    <content type="text"><![CDATA[Python&#x771F;&#x662F;&#x4E2A;&#x597D;&#x4E1C;&#x897F;&#xFF01;&#x7528;&#x6765;&#x505A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x6216;&#x8005;&#x5F00;&#x53D1;&#x653E;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#x5C0F;&#x5DE5;&#x5177;&#xFF0C;&#x7528;Python&#x6709;&#x5982;&#x795E;&#x52A9;&#x3002;&#x56E0;&#x4E3A;&#x5B83;&#x6709;&#x4E30;&#x5BCC;&#x7684;&#x5E93;&#x6587;&#x4EF6;&#xFF0C;Linux/Unix&#x7CFB;&#x9ED8;&#x8BA4;&#x90FD;&#x5E26;&#xFF0C;&#x6709;&#x4E2A;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x5C31;&#x80FD;&#x73A9;&#x8D77;&#x6765;&#x3002; &#x6628;&#x5929;&#x9047;&#x5230;&#x6570;&#x636E;&#x5411;&#x5B57;&#x8282;&#x6D41;&#x8F6C;&#x6362;&#x7684;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#xFF0C;&#x53C8;&#x6298;&#x817E;&#x4E86;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#xFF0C;&#x7C7B;&#x4F3C;&#x7684;&#x4E8B;&#x60C5;&#x8FC7;&#x53BB;&#x5E94;&#x8BE5;&#x6298;&#x817E;&#x8FC7;&#x4E0D;&#x6B62;&#x4E00;&#x6B21;&#xFF0C;&#x6BCF;&#x6B21;&#x89E3;&#x51B3;&#x5B8C;&#x8FC7;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5C31;&#x5FD8;&#x4E86;&#xFF0C;&#x4E0B;&#x6B21;&#x9047;&#x4E0A;&#x4E86;&#x518D;&#x53BB;Google&#x2026;&#x2026;&#x4E4B;&#x6240;&#x4EE5;&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5E76;&#x6CA1;&#x6709;&#x7406;&#x89E3;&#x95EE;&#x9898;&#x7684;&#x539F;&#x56E0;&#x548C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x6BCF;&#x6B21;&#x53EA;&#x6C42;&#x628A;&#x773C;&#x4E0B;&#x7684;&#x969C;&#x788D;&#x6E05;&#x9664;&#x6389;&#xFF0C;&#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x4EA7;&#x751F;&#x8FD9;&#x79CD;&#x969C;&#x788D;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x4E0D;&#x6E05;&#x695A;&#x7684;&#xFF0C;&#x6216;&#x8005;&#x7406;&#x89E3;&#x7684;&#x4E0D;&#x6DF1;&#x523B;&#x3002;&#x5982;&#x679C;&#x80FD;&#x628A;Python&#x5BF9;&#x8C61;&#x6A21;&#x578B;&#x5728;&#x5185;&#x5B58;&#x91CC;&#x7684;&#x7ED3;&#x6784;&#x5F04;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x4E00;&#x5B9A;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x8FD9;&#x6837;&#x7684;&#x4E8B;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x6B21;&#x5E76;&#x4E0D;&#x662F;&#x8981;&#x7814;&#x7A76;ython&#x5BF9;&#x8C61;&#x6A21;&#x578B;&#xFF0C;&#x8FD9;&#x4E2A;&#x8BFE;&#x9898;&#x592A;&#x5927;&#x4E86;&#x3002;&#x81F3;&#x5C11;&#x628A;&#x773C;&#x4E0B;&#x95EE;&#x9898;&#x7684;&#x672C;&#x8D28;&#x662F;&#x4EC0;&#x4E48;&#x5F04;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x4E0B;&#x6B21;&#x518D;&#x9047;&#x5230;&#x540C;&#x6837;&#x7684;&#x95EE;&#x9898;&#x4E0D;&#x81F3;&#x4E8E;&#x518D;&#x53BB;&#x6298;&#x817E;&#x3002; &#x4F7F;&#x7528;urllib2&#x53D1;&#x9001;POST&#x8BF7;&#x6C42; &#x9700;&#x6C42;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x521A;&#x521A;&#x4E0A;&#x7EBF;&#x4E00;&#x7EC4;&#x670D;&#x52A1;&#xFF0C;&#x53EF;&#x662F;&#x5F88;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x7ECF;&#x5E38;&#x51FA;&#x73B0;&#x8D85;&#x65F6;&#x3002;&#x5176;&#x4ED6;&#x7EC4;&#x5F00;&#x53D1;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4E2D;&#x95F4;&#x4ECB;&#x5165;&#x8C03;&#x67E5;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x9996;&#x5148;&#x5E94;&#x8BE5;&#x628A;&#x73B0;&#x72B6;&#x641E;&#x6E05;&#x695A;&#xFF1A;&#x8D85;&#x65F6;&#x6BD4;&#x662F;&#x591A;&#x5C11;&#xFF1F;&#x4E8E;&#x662F;&#x5199;&#x4E2A;&#x811A;&#x672C;&#x6A21;&#x62DF;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8BF7;&#x6C42;&#xFF0C;&#x628A;&#x6BCF;&#x6B21;&#x4ECE;&#x8BF7;&#x6C42;&#x6210;&#x529F;&#x6536;&#x5230;&#x54CD;&#x5E94;&#x7684;&#x65F6;&#x95F4;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002;&#x8BF7;&#x6C42;&#x4F7F;&#x7528;urllib2&#xFF0C;&#x5957;&#x8DEF;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF1A; 12345678910111213141516import urllib2import datetime... ...req = urllib2.Request(url = myUrl, data = myData)req.add_header(&apos;Content-Type&apos;, &apos;application/octet-stream&apos;)req.add_header(&apos;Connection&apos;, &apos;keep-alive&apos;)... ... # &#x6DFB;&#x52A0;Host&#x3001;Accept&#x7B49;headerreq.add_header(&apos;Accept-Encoding&apos;, &apos;gzip, deflate&apos;)startTime = datetime.datetime.now()res = urllib2.urlopen(req)response = res.read()endTime = datetime.datetime.now()return (startTime, endTime, response) &#x4F7F;&#x7528;struct.pack&#x6253;&#x5305;&#x6570;&#x636E; &#x5176;&#x4E2D;myData&#x662F;&#x8981;POST&#x7684;&#x6570;&#x636E;&#xFF0C;&#x662F;&#x5C06;&#x4E00;&#x4E9B;int&#x3001;short&#x4EE5;&#x53CA;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x636E;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;byte&#x6D41;&#x3002;&#x5982;&#x679C;&#x662F;&#x4E00;&#x822C;&#x7684;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#xFF0C;&#x6BD4;&#x8F83;&#x597D;&#x5904;&#x7406;&#xFF0C;&#x4F7F;&#x7528;struct.pack&#x5373;&#x53EF;&#x3002;&#x5982;&#x4E0B;&#xFF1A; 1234import struct... ...myData = struct.pack(&apos;iH%ds&apos; % len(myStr), iValue, hValue, myStr) &#x4F46;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#x90FD;&#x8981;&#x6C42;&#x662F;utf-16le&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x4E3A;&#x4E4B;&#x5948;&#x4F55;&#xFF1F; &#x6253;&#x5305;unicode&#x5B57;&#x7B26;&#x4E32; &#x6211;&#x4E00;&#x76F4;&#x4EE5;&#x4E3A;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x628A;utf-16le&#x7684;&#x5B57;&#x4E32;&#x7528;struct.pack&#x6253;&#x5305;&#x6210;&#x5B57;&#x8282;&#x6D41;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 1234# -*- coding:utf-8 -*-myStr = &apos;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&apos;utf16Str = myStr.decode(&apos;utf8&apos;)myData = struct.pack(&apos;%dH&apos; % len(utf16Str), utf16Str) &#x7ED3;&#x679C;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;pack expected 4 items for packing (got 1) &#x6700;&#x7EC8;&#x7684;&#x89E3;&#x51B3;&#x7279;&#x522B;&#x5176;&#x5B9E;&#x7279;&#x522B;&#x7B80;&#x5355;&#xFF1A; 12345# -*- coding:utf-8 -*-myStr = &apos;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&apos;utf16Str = myStr.decode(&apos;utf8&apos;).encode(&apos;utf-16le&apos;)myData = struct.pack(&apos;iH&apos;, iValue, hValue) + utf16Strprint [&apos;0x%02X&apos; % ord(c) for c in myData] &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A; &gt; [&apos;0x01&apos;, &apos;0x00&apos;, &apos;0x00&apos;, &apos;0x00&apos;, &apos;0x02&apos;, &apos;0x00&apos;, &apos;0x4B&apos;, &apos;0x6D&apos;, &apos;0xD5&apos;, &apos;0x8B&apos;, &apos;0x70&apos;, &apos;0x65&apos;, &apos;0x6E&apos;, &apos;0x63&apos;] &#x6211;&#x4EE5;&#x4E3A;unicode&#x4E5F;&#x5E94;&#x8BE5;&#x662F;2&#x5B57;&#x8282;&#x6216;&#x8005;4&#x5B57;&#x8282;&#x7684;&#x5B57;&#x8282;&#x6D41;&#xFF0C;&#x5E94;&#x8BE5;&#x603B;&#x6709;&#x529E;&#x6CD5;&#x628A;&#x5B83;pack&#x5230;struct&#x91CC;&#x53BB;&#x7684;&#xFF0C;&#x6211;&#x7A0D;&#x5FAE;&#x6539;&#x4E00;&#x4E0B;&#xFF1A; 12345# -*- coding:utf-8 -*-myStr = &apos;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&apos;utf16Str = myStr.decode(&apos;utf8&apos;)myData = struct.pack(&apos;iH&apos;, iValue, hValue) + utf16Strprint [&apos;0x%02X&apos; % ord(c) for c in myData] &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#xFF1A; &gt; [&apos;0x01&apos;, &apos;0x00&apos;, &apos;0x00&apos;, &apos;0x00&apos;, &apos;0x02&apos;, &apos;0x00&apos;, &apos;0x6D4B&apos;, &apos;0x8BD5&apos;, &apos;0x6570&apos;, &apos;0x636E&apos;] &#x65E2;&#x7136;&#x90FD;&#x662F;&#x5B57;&#x8282;&#x6D41;&#xFF0C;&#x6211;&#x6CA1;&#x770B;&#x51FA;&#x6765;&#x4E8C;&#x8005;&#x6709;&#x4EC0;&#x4E48;&#x672C;&#x8D28;&#x533A;&#x522B;&#x3002;&#x6709;&#x6CA1;&#x6709;&#x533A;&#x522B;&#xFF0C;&#x628A;myData&#x5199;&#x5230;&#x6587;&#x4EF6;&#x91CC;&#x5C31;&#x6E05;&#x6670;&#x4E86;&#xFF0C;&#x6211;&#x731C;&#x6D4B;&#x5199;&#x51FA;&#x6765;&#x7684;&#x6587;&#x4EF6;&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;&#x53EF;&#x7ED3;&#x679C;&#x51FA;&#x4E4E;&#x6211;&#x610F;&#x6599;&#xFF0C;&#x540E;&#x8005;&#x5199;&#x6587;&#x4EF6;&#x65F6;&#x4F1A;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; &gt; UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode characters in position 4-7: ordinal not in range(128) &#x4E3A;&#x4EC0;&#x4E48;unicode&#x4E0D;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;pack&#x5230;struct&#x4E2D; &#x4ED4;&#x7EC6;&#x7FFB;&#x9605;&#x6587;&#x6863;&#xFF0C;&#x53D1;&#x73B0;unicode&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; &gt; The items of a Unicode object are Unicode code units. A Unicode code unit is represented by a Unicode object of one item and can hold either a 16-bit or 32-bit value representing a Unicode ordinal. &#x8FD9;&#x6BB5;&#x5B9A;&#x4E49;&#x8C8C;&#x4F3C;&#x4E5F;&#x6CA1;&#x8BF4;&#x6E05;&#x695A;Unicode code units&#x662F;&#x4E2A;&#x5565;&#x73A9;&#x610F;&#x513F;&#xFF0C;&#x53EF;&#x4EE5;&#x5199;&#x6BB5;&#x4EE3;&#x7801;&#x6765;&#x6C42;&#x8BC1;&#xFF1A; 1print type(&apos;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&apos;.decode(&apos;utf8&apos;)[0]) &#x7ED3;&#x679C;&#x4E3A;&#xFF1A;&lt;type &apos;unicode&apos;&gt;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;unicode&#x5B50;&#x4E32;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x662F;&#x4E00;&#x4E2A;unicode&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x5F3A;&#x8F6C;&#x6210;&#x5B57;&#x8282;&#xFF0C;&#x56E0;&#x4E3A;&#x7F3A;&#x5C11;&#x8F6C;&#x6362;&#x8BED;&#x4E49;&#xFF0C;&#x8FD9;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x3002;&#x5982;&#x679C;&#x4E00;&#x5B9A;&#x8981;&#x8F6C;&#xFF0C;&#x5C31;&#x5E94;&#x8BE5;&#x81EA;&#x5DF1;&#x5199;&#x8F6C;&#x6362;&#x903B;&#x8F91;&#x4E86;&#x3002;utf16Str&#x662F;&#x4E00;&#x4E2A;unicode&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x7528;&#x6765;pack&#x5230;struct&#x3002;&#x5982;&#x679C;&#x4E00;&#x5B9A;&#x8981;&#x8F6C;&#x6210;&#x5B57;&#x8282;&#x6D41;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x8F6C;&#x6210;struct.pack&#x80FD;&#x8BA4;&#x8BC6;&#x7684;format&#xFF0C;&#x90A3;&#x53EA;&#x80FD;&#x662F;str&#x3002;&#x90FD;&#x5DF2;&#x7ECF;&#x662F;str&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x4EC0;&#x4E48;&#x8F6C;&#x6362;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x901A;&#x8FC7;&#x8FD0;&#x7B97;&#x7B26;&#x201C;+&#x201D;&#x8FFD;&#x52A0;&#x5373;&#x53EF;&#x3002; struct.pack(...)&#x53EF;&#x4EE5;&#x8FFD;&#x52A0;&#x6574;&#x5F62;&#x6570;&#x7EC4;&#x4E48;&#xFF1F; &#x65E2;&#x7136;u&apos;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&apos;.encode(&apos;utf-16le&apos;)&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8FFD;&#x52A0;&#x5230;struct.pack(...)&#x3002;&#x90A3;&#x4E48;&#x4E00;&#x4E2A;&#x6574;&#x5F62;&#x6570;&#x7EC4;&#x672C;&#x8D28;&#x4E0A;&#x8DDF;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x4E5F;&#x6CA1;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#xFF0C;&#x662F;&#x5426;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8FFD;&#x52A0;&#x5462;&#xFF1F;&#x7B54;&#x6848;&#x662F;&#xFF1A;&#x4E0D;&#x80FD;&#xFF01;&#x4E0D;&#x80FD;&#x4EE5;C&#x4E2D;memcpy&#x7684;&#x601D;&#x8003;&#x65B9;&#x5F0F;&#x6765;&#x7C7B;&#x6BD4;&#xFF0C;struct.pack(...)&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4E2A;str&#xFF0C;&#x201C;&#x5B57;&#x7B26;&#x4E32;+&#x6570;&#x7EC4;&#x201D;&#x663E;&#x7136;&#x662F;&#x4E0D;&#x5408;&#x6CD5;&#x7684;&#x3002;&#x968F;&#x610F;&#x8FFD;&#x52A0;&#x6570;&#x7EC4;&#x7684;&#x5408;&#x6CD5;&#x65B9;&#x5F0F;&#x5E94;&#x8BE5;&#x662F;&#x628A;&#x6570;&#x7EC4;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8F6C;&#x6210;struct.pack(...)&#x80FD;&#x8BC6;&#x522B;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x4E00;&#x4E00;&#x8FFD;&#x52A0;&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x4FBF;&#x6377;&#x7684;&#x65B9;&#x5F0F;&#xFF1A; 123arr = (1, 2, 3, 4)data = struct.pack(&apos;%dH&apos; % len(arr), *arr)print [&apos;0x%02X&apos; % ord(c) for c in data] &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x662F;&#xFF1A; &gt; [&apos;&apos;0x01&apos;, &apos;0x00&apos;, &apos;0x02&apos;, &apos;0x00&apos;, &apos;0x03&apos;, &apos;0x00&apos;, &apos;0x04&apos;, &apos;0x00&apos;] &#x539F;&#x6765;Python&#x7684;&#x6570;&#x7EC4;&#x53EF;&#x4EE5;&#x53D6;&#x201C;*&#x201D;&#x8FD0;&#x7B97;&#x7684;&#xFF0C;&#x8FD0;&#x7B97;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x628A;&#x6210;&#x5458;&#x90FD;&#x53D6;&#x51FA;&#x6765;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决macOSX10.12.SDK下编译Android Open Source Project出错的问题]]></title>
    <url>%2F2016%2F09%2F25%2F2016%2F0925AOSPOnMac%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;macOS&#x7684;XCode&#x5347;&#x7EA7;&#x4E4B;&#x540E;&#xFF0C;Android&#x6E90;&#x7801;&#x5C31;&#x7F16;&#x8BD1;&#x901A;&#x4E0D;&#x8FC7;&#x4E86;&#xFF0C;&#x62A5;&#x544A;syscall&#x5DF2;&#x7ECF;&#x88AB;&#x5E9F;&#x5F03;&#xFF1A; 123456system/core/libcutils/threads.c:38:10: error: &apos;syscall&apos; is deprecated: first deprecated in OS X 10.12 - syscall(2) is unsupported; please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost(). [-Werror,-Wdeprecated-declarations] return syscall(SYS_thread_selfid); ^host C: libcutils &lt;= system/core/libcutils/iosched_policy.c/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/usr/include/unistd.h:733:6: note: &apos;syscall&apos; has been explicitly marked deprecated hereint syscall(int, ...); &#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x62A5;&#x9519;&#x90FD;&#x5FEB;&#x54ED;&#x4E86;&#xFF0C;&#x6211;&#x641C;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;AOSP&#x91CC;&#x6709;&#x5927;&#x91CF;&#x7684;syscall&#x8C03;&#x7528;&#xFF0C;&#x4ECE;&#x6E90;&#x7801;&#x5904;&#x89E3;&#x51B3;&#x662F;&#x4E0D;&#x73B0;&#x5B9E;&#x7684;&#x3002;&#x90FD;&#x602A;&#x6211;&#x624B;&#x6B20;&#xFF0C;&#x770B;&#x5230;&#x5347;&#x7EA7;&#x63D0;&#x793A;&#xFF0C;&#x5C31;&#x540C;&#x610F;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x51E0;&#x53F0;mac&#x90FD;&#x5347;&#x7EA7;&#x4E86;&#x1F62D;&#x3002;&#x53BB;Android&#x5B98;&#x7F51;&#x4EE5;&#x53CA;Google&#x641C;&#x7D22;&#xFF0C;&#x90FD;&#x6CA1;&#x6709;&#x641C;&#x5230;&#x76F8;&#x5173;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF0C;&#x4F30;&#x8BA1;&#x662F;&#x521A;&#x51FA;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x9047;&#x5230;&#x7684;&#x4EBA;&#x6BD4;&#x8F83;&#x5C11;&#x3002;&#x6211;&#x4E0D;&#x786E;&#x8BA4;AndroidN&#x662F;&#x5426;&#x652F;&#x6301;macOS10.12.SDK&#xFF0C;&#x91CD;&#x65B0;&#x4E0B;&#x8F7D;&#x65B0;&#x7684;&#x6E90;&#x7801;&#x53C8;&#x9700;&#x8981;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#xFF0C;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x4E8B;&#x60C5;&#x8981;&#x505A;&#xFF0C;&#x4E0D;&#x60F3;&#x5728;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x4E0A;&#x518D;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;&#x4E86;&#x3002;&#x6700;&#x540E;&#x6211;&#x51B3;&#x5B9A;&#x8BD5;&#x4E00;&#x628A;&#x7528;&#x8001;&#x7684;SDK&#x7F16;&#x8BD1;&#xFF0C;&#x8C8C;&#x4F3C;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002; &#x53BB;&#x5230;/Applications/XCode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs&#xFF0C;&#x53D1;&#x73B0;MacOSX10.11.sdk&#x5DF2;&#x7ECF;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x53EA;&#x5269;&#x4E0B;MacOSX10.12.sdk&#xFF0C;&#x6240;&#x4EE5;&#x9996;&#x5148;&#x8981;&#x53BB;&#x4E0B;&#x8F7D;10.11&#x7684;SDK&#x3002;&#x53EF;&#x4EE5;&#x53BB;MacOSX-SDKs&#x4E0B;&#x8F7D;MacOSX10.11.sdk&#xFF0C;&#x89E3;&#x538B;&#x62F7;&#x8D1D;&#x5230;/Applications/XCode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs&#x3002;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x4E0B;&#x6B21;&#x5347;&#x7EA7;&#x7684;&#x65F6;&#x5019;&#x518D;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x53EF;&#x4EE5;&#x653E;&#x5230;~/Document/MacOSX10.11.sdk&#xFF0C;&#x518D;&#x7ED9;&#x5B83;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8F6F;&#x94FE;&#x63A5;&#xFF1A; 1$ ln -s ~/Document/MacOSX10.11.sdk /Applications/XCode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk &#x7136;&#x540E;&#x786E;&#x4FDD;AOSP&#x6E90;&#x7801;&#x4E0B;build/core/combo/mac_version.mk&#x6587;&#x4EF6;&#x4E2D; mac_sdk_versions_supported := 10.9 10.10 10.11 &#x540E;&#x9762;&#x4E0D;&#x8981;&#x5199;10.12&#x3002; &#x518D;&#x7F16;&#x8BD1;&#x5C31;&#x6B63;&#x5E38;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>环境、配置</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Logger]]></title>
    <url>%2F2016%2F09%2F22%2F2016%2F0922Log%2F</url>
    <content type="text"><![CDATA[Looger&#x662F;&#x548C;&#x8C03;&#x8BD5;&#x65B9;&#x6CD5;&#x540C;&#x7B49;&#x91CD;&#x8981;&#x7684;&#x7F16;&#x7A0B;&#x8F85;&#x52A9;&#x5229;&#x5668;&#xFF0C;&#x51FA;&#x9053;&#x4EE5;&#x6765;&#xFF0C;&#x7EF4;&#x62A4;&#x6700;&#x4E45;&#x7684;&#x6A21;&#x5757;&#x5C31;&#x662F;&#x81EA;&#x5DF1;&#x7684;Logger&#x3002;&#x6700;&#x521D;&#x662F;&#x628A;&#x5B83;&#x505A;&#x5F97;&#x65E0;&#x6BD4;&#x5F3A;&#x5927;&#xFF0C;&#x652F;&#x6301;&#x591A;&#x7EBF;&#x7A0B;&#x3001;&#x652F;&#x6301;&#x591A;&#x7EA7;&#x522B;&#xFF0C;&#x5F15;&#x5165;Singleton&#x8BA9;&#x8C03;&#x7528;&#x7B80;&#x5355;&#x3002;&#x540E;&#x6765;&#x53D1;&#x73B0;&#x51E0;&#x4E4E;&#x90FD;&#x7528;&#x4E0D;&#x7740;&#xFF0C;&#x6700;&#x5927;&#x7684;&#x8BC9;&#x6C42;&#x662F;&#x63A5;&#x53E3;&#x7B80;&#x5355;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6BCF;&#x6B21;&#x7528;&#x4E4B;&#x524D;&#x590D;&#x4E60;&#x3002;&#x4EE3;&#x7801;&#x6700;&#x597D;&#x80FD;&#x7B80;&#x6D01;&#xFF0C;&#x6700;&#x597D;&#x5C31;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x3002; &#x524D;&#x5929;&#x627E;&#x5230;&#x4E00;&#x79CD;&#x4E00;&#x53E5;&#x8BDD;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;C&#x7248;&#x7684;Logger&#xFF0C;&#x5FC5;&#x987B;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x4EE5;&#x540E;&#x5C31;&#x5B83;&#x4E86;&#xFF1A; # Logger C&#x7248; 12345#if 1#define LOG(format, ...) printf(&quot;[%-12s:%-4d ] &quot;format&quot;\n&quot;, __FILE__, __LINE__, ##__VA_ARGS__)#else#define LOG(format, ...) #endif &#x7B80;&#x6D01;&#x5427;~ &#x5728;Linux&#x4E0B;&#x4F7F;&#x7528;&#x5F88;&#x65B9;&#x4FBF;&#xFF0C;Windows&#x9700;&#x8981;&#x505A;&#x4E00;&#x4E2A;Unicode&#x5B57;&#x4E32;&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x4EE5;&#x540E;&#x7528;&#x5F97;&#x7740;&#x65F6;&#x518D;&#x66F4;&#x65B0;&#x5427;&#x3002; Logger Python&#x7248; &#x987A;&#x9053;&#x628A;&#x5176;&#x4ED6;&#x7248;&#x672C;&#x7684;&#x4E5F;&#x5907;&#x5FD8;&#x4E00;&#x4E0B;&#xFF0C;python&#x7684;logger&#x673A;&#x5236;&#x505A;&#x5F97;&#x5F88;&#x987A;&#x624B;&#x4E86;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x914D;&#x7F6E;&#x4E00;&#x4E0B;log&#x683C;&#x5F0F;&#xFF1A; 1234567import logging......loggingFormat = &apos;%(asctime)s %(lineno)4d %(levelname)-8s %(message)s&apos;logging.basicConfig(level=logging.DEBUG, format=loggingFormat, datefmt=&apos;%H:%M&apos;)logging.debug(&apos;hello word!&apos;) Logger objective-c&#x7248; 12345#if DEBUG#define NSLog(FORMAT, ...) fprintf(stderr,&quot;[%s:%d]\t%s\n&quot;,[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String])#else#define NSLog(FORMAT, ...) nil#endif]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于面试]]></title>
    <url>%2F2016%2F09%2F22%2F2016%2F0922%E5%85%B3%E4%BA%8E%E9%9D%A2%E8%AF%95%2F</url>
    <content type="text"><![CDATA[&#x5728;&#x4E0A;&#x4E2A;&#x6708;&#x7684;&#x300A;&#x53C8;&#x662F;&#x4E00;&#x5E74;&#x6821;&#x62DB;&#x5B63;&#x300B;&#x4E2D;&#x6211;&#x68B3;&#x7406;&#x4E86;&#x81EA;&#x5DF1;&#x5728;&#x6821;&#x62DB;&#x65F6;&#x7684;&#x6CE8;&#x610F;&#x4E8B;&#x9879;&#xFF0C;&#x8FD9;&#x4E9B;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x8E29;&#x8FC7;&#x4E00;&#x4E9B;&#x5751;&#xFF0C;&#x7ECF;&#x8FC7;&#x4E00;&#x4E9B;&#x601D;&#x8003;&#x540E;&#x6C89;&#x6DC0;&#x4E0B;&#x6765;&#x7684;&#x505A;&#x6CD5;&#x3002; &#x6211;&#x8BA4;&#x4E3A;&#x62DB;&#x8058;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x95E8;&#x624B;&#x827A;&#xFF0C;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x592A;&#x7384;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x81F3;&#x5C11;&#x6211;&#x6CA1;&#x4F53;&#x4F1A;&#x5230;&#x6709;&#x3002;&#x5FC3;&#x6CD5;&#x4E00;&#xFF1A;&#x8981;&#x60F3;&#x719F;&#xFF0C;&#x552F;&#x6709;&#x591A;&#x7EC3;&#xFF0C;&#x4E09;&#x5929;&#x4E0D;&#x7EC3;&#x624B;&#x751F;&#x3002;&#x90A3;&#x79CD;&#x62DB;&#x8058;&#x5B63;&#x6765;&#x4E86;&#xFF0C;&#x731B;&#x89C1;&#x51E0;&#x5341;&#x4E2A;&#x4EBA;&#xFF0C;&#x4EBA;&#x62DB;&#x6EE1;&#x4E86;&#xFF0C;&#x5C31;&#x95ED;&#x95E8;&#x8C22;&#x5BA2;&#x7684;&#x4E3B;&#x7BA1;&#x662F;&#x4E0D;&#x4F1A;&#x7EC3;&#x51FA;&#x591A;&#x9AD8;&#x660E;&#x7684;&#x62DB;&#x8058;&#x6280;&#x5DE7;&#x7684;&#x3002;&#x8FD9;&#x57FA;&#x672C;&#x4E0A;&#x8DDF;&#x524D;&#x5929;&#x8BB2;&#x7684;&#x5B66;&#x4E60;emacs&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x5B66;&#x4E60;&#x66F2;&#x7EBF;&#x975E;&#x5E38;&#x9661;&#x5CED;&#xFF0C;&#x53EA;&#x8981;&#x80FD;&#x6301;&#x7EED;&#x4E0D;&#x65AD;&#x5730;&#x6709;&#x6548;&#x79EF;&#x7D2F;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x5929;&#x80FD;&#x628A;&#x8FD9;&#x95E8;&#x624B;&#x827A;&#x901A;&#x900F;&#x4E0B;&#x6765;&#x3002;&#x6700;&#x6015;&#x7684;&#x5C31;&#x662F;&#x4E0D;&#x5F97;&#x4E0D;&#x505A;&#x7684;&#x65F6;&#x5019;&#x4E34;&#x65F6;&#x62B1;&#x4F5B;&#x811A;&#xFF0C;&#x5E94;&#x4ED8;&#x5B8C;&#x4E86;&#xFF0C;&#x518D;&#x6254;&#x4E00;&#x8FB9;&#xFF0C;&#x4E0B;&#x6B21;&#x53C8;&#x8981;&#x91CD;&#x5934;&#x5F00;&#x59CB;&#xFF0C;&#x8FD9;&#x662F;&#x6700;&#x6D6A;&#x8D39;&#x751F;&#x547D;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x4E0D;&#x5982;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x4E0D;&#x8981;&#x505A;&#x3002; &#x6211;&#x524D;&#x5929;&#x8DDF;&#x4E00;&#x7FA4;&#x670B;&#x53CB;&#x73A9;&#x6740;&#x4EBA;&#x6E38;&#x620F;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x4E00;&#x4F4D;&#x662F;&#x67D0;&#x516C;&#x53F8;&#x7684;&#x4EBA;&#x529B;&#x8D44;&#x6E90;&#x603B;&#x76D1;&#x3002;&#x5979;&#x8BFB;&#x5FC3;&#x3001;&#x8BFB;&#x9762;&#x7684;&#x80FD;&#x529B;&#x8BA9;&#x6211;&#x60CA;&#x4E3A;&#x5929;&#x4EBA;&#xFF0C;&#x5341;&#x4E2A;&#x4EBA;&#x56F4;&#x6210;&#x4E00;&#x5708;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x4EBA;&#x6781;&#x5176;&#x7EC6;&#x5FAE;&#x7684;&#x8868;&#x60C5;&#x90FD;&#x80FD;&#x88AB;&#x5979;&#x654F;&#x9510;&#x5730;&#x5BDF;&#x89C9;&#x3001;&#x5E76;&#x89E3;&#x8BFB;&#x51FA;&#x6765;&#x3002;&#x540E;&#x6765;&#x6211;&#x95EE;&#x5979;&#x5230;&#x5E95;&#x600E;&#x6837;&#x7EC3;&#x5C31;&#x8FD9;&#x79CD;&#x672C;&#x4E8B;&#xFF0C;&#x5979;&#x7684;&#x56DE;&#x7B54;&#x4E5F;&#x5F88;&#x6734;&#x5B9E;&#xFF0C;&#x89C1;&#x5F97;&#x4EBA;&#x591A;&#x4E86;&#xFF0C;&#x552F;&#x624B;&#x719F;&#x5C14;&#x3002;&#x505A;&#x4EBA;&#x529B;&#x8D44;&#x6E90;&#x5DE5;&#x4F5C;&#xFF0C;&#x5927;&#x91CF;&#x5730;&#x9605;&#x4EBA;&#xFF0C;&#x5BF9;&#x4EBA;&#x505A;&#x5224;&#x65AD;&#xFF0C;&#x7136;&#x540E;&#x8DDF;&#x8E2A;&#x3001;&#x68C0;&#x9A8C;&#x81EA;&#x5DF1;&#x7684;&#x5224;&#x65AD;&#x3002;&#x79EF;&#x7D2F;&#x4E0B;&#x6765;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x81EA;&#x7136;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x6709;&#x6548;&#x7684;&#x79EF;&#x7D2F;&#x662F;&#x8981;&#x8D70;&#x5FC3;&#x7684;&#xFF0C;&#x8981;&#x505A;&#x4E2A;&#x6709;&#x5FC3;&#x4EBA;&#x3002; &#x6211;&#x66FE;&#x7ECF;&#x5728;&#x56E2;&#x961F;&#x95F9;&#x4EBA;&#x8352;&#x7684;&#x4E00;&#x5E74;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x7CBE;&#x529B;&#x90FD;&#x5728;&#x62DB;&#x4EBA;&#xFF0C;&#x534A;&#x5E74;&#x91CC;&#x89C1;&#x4E86;&#x4E24;&#x767E;&#x591A;&#x53F7;&#x4EBA;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x6211;&#x90FD;&#x6709;&#x8BB0;&#x5F55;&#x548C;&#x603B;&#x7ED3;&#x3002;&#x6211;&#x4E0D;&#x65AD;&#x5730;&#x53D8;&#x6362;&#x9762;&#x8BD5;&#x7684;&#x98CE;&#x683C;&#xFF0C;&#x95EE;&#x9898;&#x3002;&#x6211;&#x4ECE;&#x6700;&#x5F00;&#x59CB;&#x9762;&#x8BD5;&#x524D;&#x8981;&#x5BF9;&#x7740;&#x6BCF;&#x4EFD;&#x7B80;&#x5386;&#x51C6;&#x5907;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#xFF0C;&#x5230;&#x540E;&#x6765;&#x62FF;&#x4E0A;&#x7B80;&#x5386;&#x5C31;&#x80FD;&#x89C1;&#x3002;&#x540E;&#x6765;&#x6211;&#x5C31;&#x628A;&#x4E00;&#x9762;&#x6254;&#x7ED9;&#x4E86;&#x4E0B;&#x9762;&#x7684;&#x4E3B;&#x7BA1;&#xFF0C;&#x6216;&#x81EA;&#x5DF1;&#x65C1;&#x542C;&#xFF0C;&#x8F85;&#x5BFC;&#x4ED6;&#x4EEC;&#x9762;&#x8BD5;&#xFF0C;&#x6216;&#x53EA;&#x505A;&#x4E8C;&#x9762;&#xFF1B;&#x518D;&#x540E;&#x6765;&#x56E0;&#x4E3A;&#x63A5;&#x7BA1;&#x4E86;&#x4EA7;&#x54C1;&#x56E2;&#x961F;&#xFF0C;&#x6211;&#x8981;&#x81EA;&#x5DF1;&#x9762;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x5934;&#x4E00;&#x5E74;&#x79EF;&#x7D2F;&#x4E86;&#x5F88;&#x591A;&#x9762;&#x8BD5;&#x7ECF;&#x9A8C;&#xFF0C;&#x65AD;&#x4E0D;&#x6562;&#x81EA;&#x4FE1;&#x5730;&#x5750;&#x5728;&#x7ECF;&#x9A8C;&#x6BD4;&#x6211;&#x957F;&#x5F97;&#x591A;&#x7684;&#x4EA7;&#x54C1;&#x8001;&#x9E1F;&#x9762;&#x524D;&#x505A;&#x9762;&#x8BD5;&#x3002; &#x638C;&#x63E1;&#x62DB;&#x8058;&#x624B;&#x827A;&#x7684;&#x7B2C;&#x4E8C;&#x5FC3;&#x6CD5;&#x662F;&#x8981;&#x7528;&#x5F00;&#x653E;&#x7684;&#x5FC3;&#x6001;&#x5904;&#x5904;&#x5B66;&#x4E60;&#xFF0C;&#x95F7;&#x5934;&#x81EA;&#x5DF1;&#x7EC3;&#x5F88;&#x5BB9;&#x6613;&#x9677;&#x5165;&#x5750;&#x4E95;&#x89C2;&#x5929;&#x7684;&#x5883;&#x5730;&#x3002;&#x770B;&#x770B;&#x4E16;&#x754C;&#x4E00;&#x6D41;&#x7684;&#x4F01;&#x4E1A;&#x90FD;&#x600E;&#x4E48;&#x9762;&#x8BD5;&#xFF0C;Google&#x3001;&#x5FAE;&#x8F6F;&#x7684;&#x9762;&#x8BD5;&#x9898;&#x662F;&#x600E;&#x4E48;&#x51FA;&#x7684;&#xFF0C;&#x4ED6;&#x4EEC;&#x600E;&#x4E48;&#x907F;&#x514D;&#x88AB;&#x5237;&#x9898;&#xFF0C;&#x6211;&#x4E60;&#x60EF;&#x4ECE;&#x65E5;&#x5E38;&#x5DE5;&#x4F5C;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x62BD;&#x53D6;&#x4E00;&#x5757;&#x4F5C;&#x4E3A;&#x7B97;&#x6CD5;&#x7684;&#x9605;&#x8BFB;&#x7406;&#x89E3;&#x5C31;&#x662F;&#x4ECE;Google&#x5B66;&#x5230;&#x7684;&#x3002;&#x7ED9;&#x534A;&#x4E2A;&#x5C0F;&#x65F6;&#x505A;&#x4E00;&#x9053;&#x7B97;&#x6CD5;&#x9898;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x88AB;&#x6709;&#x5907;&#x800C;&#x6765;&#x7684;&#x4EBA;&#x5237;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x9047;&#x5230;&#x6CA1;&#x6709;&#x601D;&#x8DEF;&#x7684;&#x53EF;&#x80FD;&#x4E00;&#x70B9;&#x90FD;&#x505A;&#x4E0D;&#x51FA;&#x6765;&#x3002;&#x7ED9;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x8BA9;&#x4ED6;&#x8BFB;&#xFF0C;&#x534A;&#x5C0F;&#x65F6;&#x5185;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x4EBA;&#x90FD;&#x4F1A;&#x6709;&#x8FDB;&#x5C55;&#xFF0C;&#x53EA;&#x662F;&#x4ED6;&#x4EEC;&#x7684;&#x8FDB;&#x5C55;&#x7A0B;&#x5EA6;&#x4EE5;&#x53CA;&#x7406;&#x89E3;&#x7684;&#x6DF1;&#x5EA6;&#x6709;&#x5F88;&#x5927;&#x4E0D;&#x540C;&#xFF0C;&#x8FD9;&#x4E0D;&#x6B63;&#x662F;&#x9898;&#x76EE;&#x5E0C;&#x671B;&#x5177;&#x5907;&#x7684;&#x533A;&#x5206;&#x5EA6;&#x4E48;&#x3002;&#x6700;&#x521D;&#x62DB;&#x8058;&#x7BA1;&#x7406;&#x4EBA;&#x5458;&#x65F6;&#xFF0C;&#x5B8C;&#x5168;&#x6CA1;&#x601D;&#x8DEF;&#xFF0C;&#x90A3;&#x5C31;&#x641C;&#x4E00;&#x4E0B;&#x4FDD;&#x6D01;&#x516C;&#x53F8;&#x7684;&#x9762;&#x8BD5;&#x7ECF;&#xFF0C;&#x7F51;&#x4E0A;&#x6709;&#x5927;&#x91CF;&#x5BF9;&#x4FDD;&#x6D01;&#x516C;&#x53F8;&#x9762;&#x8BD5;&#x9898;&#x7684;&#x89E3;&#x8BFB;&#x3002;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x89E3;&#x8BFB;&#x5B66;&#x4F1A;&#x95EE;&#x9898;&#x5E94;&#x8BE5;&#x600E;&#x4E48;&#x8BBE;&#x7F6E;&#xFF0C;&#x8003;&#x8651;&#x6211;&#x66F4;&#x770B;&#x91CD;&#x4EC0;&#x4E48;&#xFF0C;&#x518D;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x76EE;&#x6807;&#x8BBE;&#x7F6E;&#x95EE;&#x9898;&#x3002;&#x8FED;&#x4EE3;&#x4E2A;&#x51E0;&#x8F6E;&#xFF0C;&#x6700;&#x521D;&#x7684;&#x95EE;&#x9898;&#x6846;&#x67B6;&#x5B8C;&#x5168;&#x88AB;&#x81EA;&#x5DF1;&#x7684;&#x601D;&#x8DEF;&#x66FF;&#x6362;&#x6389;&#xFF0C;&#x8FD9;&#x5C31;&#x50CF;&#x62C4;&#x7740;&#x62D0;&#x6756;&#x9010;&#x6B65;&#x5B66;&#x4F1A;&#x81EA;&#x5DF1;&#x8D70;&#x8DEF;&#x3002; &#x6700;&#x540E;&#x518D;&#x8BF4;&#x51E0;&#x6761;&#x66F4;&#x5177;&#x4F53;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6700;&#x8FD1;&#x6821;&#x62DB;&#x5B63;&#xFF0C;&#x4E3B;&#x7BA1;&#x4EEC;&#x7ED9;&#x6211;&#x7684;&#x4E8C;&#x9762;&#x5019;&#x9009;&#x4EBA;&#x6709;&#x65F6;&#x4F1A;&#x8DDF;&#x6211;&#x7684;&#x5224;&#x65AD;&#x5DEE;&#x522B;&#x5F88;&#x5927;&#x3002;&#x6211;&#x7684;&#x6280;&#x672F;&#x9762;&#x8BD5;&#x6709;&#x4E00;&#x6761;&#x94C1;&#x5F8B;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x4E00;&#x5B9A;&#x8981;&#x505A;&#x9898;&#x3002;&#x51FA;&#x4E8E;&#x804C;&#x4E1A;&#x4E60;&#x60EF;&#xFF0C;&#x6211;&#x4F1A;&#x5728;&#x65E5;&#x5E38;&#x5DE5;&#x4F5C;&#x4E2D;&#x7559;&#x610F;&#x54EA;&#x4E9B;&#x5DE5;&#x4F5C;&#x9002;&#x5408;&#x62BD;&#x8C61;&#x6210;&#x4E00;&#x9053;&#x9762;&#x8BD5;&#x9898;&#xFF0C;&#x6BCF;&#x9053;&#x9898;&#x6211;&#x90FD;&#x4F1A;&#x7422;&#x78E8;&#x3001;&#x6253;&#x78E8;&#x633A;&#x957F;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x4E14;&#x4E00;&#x5B9A;&#x81EA;&#x5DF1;&#x52A8;&#x624B;&#x505A;&#x51FA;&#x6765;&#x3002;&#x8FD9;&#x662F;&#x81EA;&#x5DF1;&#x79EF;&#x7D2F;&#x4E0B;&#x6765;&#x7684;&#x6709;&#x6548;&#x7684;&#x9762;&#x8BD5;&#x5DE5;&#x5177;&#xFF0C;&#x4E00;&#x5B9A;&#x6BD4;&#x4FE9;&#x4EBA;&#x53EA;&#x804A;&#x4E00;&#x4E9B;&#x7247;&#x6C64;&#x8BDD;&#x9760;&#x8C31;&#x5F97;&#x591A;&#x3002;&#x6211;&#x7ED9;&#x81EA;&#x5DF1;&#x5B9A;&#x8FD9;&#x6761;&#x94C1;&#x5F8B;&#xFF0C;&#x5176;&#x5B9E;&#x6E90;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x88AB;&#x6211;&#x5F00;&#x6389;&#x7684;&#x5458;&#x5DE5;&#x3002;&#x4ED6;&#x662F;&#x6211;&#x62DB;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x4EBA;&#xFF0C;&#x9762;&#x8C08;&#x7684;&#x611F;&#x89C9;&#x5F88;&#x597D;&#xFF0C;&#x53EF;&#x662F;&#x6CA1;&#x6765;&#x591A;&#x4E45;&#x6211;&#x5C31;&#x53D1;&#x73B0;&#x54E5;&#x4EEC;&#x6D3B;&#x4E0D;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x5F53;&#x521D;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x52A8;&#x52A8;&#x624B;&#x5199;&#x51E0;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x7ACB;&#x523B;&#x5C31;&#x80FD;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x62DB;&#x8FDB;&#x6765;&#x4E0D;&#x6EE1;&#x610F;&#xFF0C;&#x65E2;&#x6D6A;&#x8D39;&#x6211;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x4E5F;&#x6D6A;&#x8D39;&#x4ED6;&#x7684;&#x65F6;&#x95F4;&#x3002;&#x8FD9;&#x4E00;&#x70B9;&#x6211;&#x975E;&#x5E38;&#x8BA4;&#x540C;&#x6770;&#x514B;&#x97E6;&#x5C14;&#x5947;&#x7684;&#x89C2;&#x5FF5;&#xFF0C;&#x5BB9;&#x5FCD;&#x4E0D;&#x9002;&#x5408;&#x7684;&#x4EBA;&#x5728;&#x56E2;&#x961F;&#xFF0C;&#x771F;&#x5FC3;&#x5BB3;&#x4E86;&#x4ED6;&#x3002; &#x7B2C;&#x4E8C;&#x70B9;&#x6211;&#x975E;&#x5E38;&#x770B;&#x91CD;&#x903B;&#x8F91;&#x601D;&#x7EF4;&#x80FD;&#x529B;&#xFF0C;&#x601D;&#x7EF4;&#x4E0D;&#x6E05;&#x6670;&#x7684;&#x4EBA;&#xFF0C;&#x4F60;&#x8DDF;Ta&#x8BB2;&#x4E0D;&#x901A;&#x9053;&#x7406;&#xFF0C;&#x8BB2;&#x4E0D;&#x901A;&#x903B;&#x8F91;&#xFF0C;&#x8FD9;&#x5C06;&#x662F;&#x6280;&#x672F;&#x6C9F;&#x901A;&#x4E2D;&#x7684;&#x7EDD;&#x75C7;&#x3002;&#x5E94;&#x5C4A;&#x751F;&#x8003;&#x5BDF;&#x903B;&#x8F91;&#x601D;&#x7EF4;&#x80FD;&#x529B;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x8BA9;&#x4ED6;&#x628A;&#x505A;&#x8FC7;&#x7684;&#x6700;&#x719F;&#x6089;&#x7684;&#x5DE5;&#x7A0B;&#x8BB2;&#x4E00;&#x904D;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5728;&#x7EB8;&#x4E0A;&#x628A;&#x6A21;&#x5757;&#x3001;&#x5C42;&#x6B21;&#x3001;&#x6570;&#x636E;&#x6D41;&#x3001;&#x63A7;&#x5236;&#x6D41;&#x753B;&#x51FA;&#x6765;&#x3002;&#x5982;&#x679C;&#x505A;&#x4E0D;&#x51FA;&#x6765;&#xFF0C;&#x8BF4;&#x660E;&#x4E0D;&#x5177;&#x5907;&#x57FA;&#x672C;&#x7684;&#x903B;&#x8F91;&#x601D;&#x7EF4;&#x80FD;&#x529B;&#xFF0C;&#x76F4;&#x63A5;over&#x3002;&#x6709;&#x4E9B;&#x5DE5;&#x4F5C;&#x6709;&#x5E74;&#x5934;&#x7684;&#x5019;&#x9009;&#x4EBA;&#xFF0C;&#x53EA;&#x4F1A;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x4E0D;&#x4F1A;&#x753B;&#x56FE;&#x3002;&#x4F60;&#x95EE;&#x4ED6;&#x6709;&#x51E0;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x5404;&#x81EA;&#x5173;&#x7CFB;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x4ED6;&#x4E0A;&#x6765;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x7C7B;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x90A3;&#x4E2A;&#x7C7B;&#x5982;&#x4F55;&#x5982;&#x4F55;&#xFF0C;&#x8FD9;&#x79CD;&#x4EBA;&#x6CA1;&#x6709;&#x6280;&#x672F;&#x5927;&#x5C40;&#x89C2;&#xFF0C;&#x4E00;&#x5B9A;&#x4E5F;&#x5199;&#x4E0D;&#x597D;&#x4EE3;&#x7801;&#xFF1B;&#x6709;&#x7684;&#x4EBA;&#x8BF4;&#x5F97;&#x4E91;&#x91CC;&#x96FE;&#x91CC;&#xFF0C;&#x7528;&#x7B14;&#x5E3D;&#x5728;&#x7EB8;&#x4E0A;&#x7B14;&#x753B;&#x5F97;&#x6709;&#x6A21;&#x6709;&#x6837;&#xFF0C;&#x6211;&#x8FEB;&#x5207;&#x7684;&#x5E0C;&#x671B;&#x4ED6;&#x80FD;&#x753B;&#x51E0;&#x7B14;&#xFF0C;&#x8BA9;&#x63CF;&#x8FF0;&#x6E05;&#x6670;&#x8D77;&#x6765;&#xFF0C;&#x53EF;&#x5C31;&#x662F;&#x4E0D;&#x843D;&#x7B14;&#x3002;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x90FD;&#x662F;&#x5728;&#x5FC3;&#x91CC;&#x6CA1;&#x6709;&#x4E2A;&#x6E05;&#x6670;&#x7684;&#x7ED3;&#x6784;&#x56FE;&#x5BFC;&#x81F4;&#x7684;&#xFF0C;&#x8BF4;&#x5230;&#x5E95;&#x8FD8;&#x662F;&#x903B;&#x8F91;&#x4E0D;&#x6E05;&#x6670;&#x3002; &#x55EF;&#xFF0C;&#x4ECA;&#x5929;&#x5C31;&#x60F3;&#x5230;&#x8FD9;&#x4E48;&#x591A;&#xFF0C;&#x4EE5;&#x540E;&#x5982;&#x679C;&#x6709;&#x65B0;&#x7684;&#x518D;&#x6765;&#x8865;&#x5145;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>招聘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Emacs]]></title>
    <url>%2F2016%2F09%2F19%2F2016%2F0919Emacs%2F</url>
    <content type="text"><![CDATA[&#x6700;&#x8FD1;&#x7ECF;&#x5E38;&#x5728;&#x4E0D;&#x540C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E0B;&#x5199;C&#x3001;Python&#x548C;JAVA&#x4EE3;&#x7801;&#xFF0C;&#x9700;&#x8981;&#x6301;&#x7EED;&#x4E0D;&#x65AD;&#x5730;&#x5B66;&#x4E60;&#x65B0;&#x7684;&#x7F16;&#x8F91;&#x5668;&#x3001;IDE&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x5B66;&#x4E60;&#x6210;&#x672C;&#x5C3D;&#x5FEB;&#x6536;&#x655B;&#x4F4F;&#xFF0C;&#x8FD8;&#x662F;&#x51B3;&#x5B9A;&#x6361;&#x8D77;&#x591A;&#x5E74;&#x6CA1;&#x7528;&#x8FC7;&#x7684;Emacs&#xFF0C;&#x628A;&#x7F16;&#x8F91;&#x3001;&#x8C03;&#x8BD5;&#x5404;&#x79CD;&#x64CD;&#x4F5C;&#x901A;&#x900F;&#x4E86;&#xFF0C;&#x4EE5;&#x540E;&#x5C31;&#x518D;&#x4E5F;&#x4E0D;&#x7528;&#x5B66;&#x4E60;&#x65B0;&#x7684;&#x7F16;&#x8F91;&#x5668;&#x4E86;&#x3002; &#x5982;&#x679C;&#x4EC5;&#x5728;Windows&#x4E0B;&#x505A;C++&#xFF0C;&#x7CBE;&#x901A;VisualStudio&#x5C31;&#x8DB3;&#x591F;&#x4E86;&#x3002;&#x5982;&#x679C;&#x8981;&#x8DE8;&#x5E73;&#x53F0;&#x6216;&#x8005;&#x8DE8;&#x8BED;&#x8A00;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x6700;&#x597D;&#x8FD8;&#x662F;&#x80FD;&#x7CBE;&#x901A;Vim&#x6216;&#x8005;Emacs&#x3002;&#x8FD9;&#x4FE9;&#x8D27;&#x7684;&#x5B66;&#x4E60;&#x66F2;&#x7EBF;&#x867D;&#x7136;&#x9661;&#x5CED;&#xFF0C;&#x5374;&#x662F;&#x552F;&#x4E00;&#x5728;&#x6240;&#x6709;&#x5E73;&#x53F0;&#x4E0B;&#x901A;&#x7528;&#x7684;&#x7F16;&#x7A0B;&#x5DE5;&#x5177;&#x3002;&#x4E00;&#x65E6;&#x4F7F;&#x987A;&#x624B;&#x4E86;&#xFF0C;&#x5C31;&#x4E0D;&#x7528;&#x5728;&#x4E0D;&#x540C;&#x5E73;&#x53F0;&#x4E0B;&#x9002;&#x5E94;&#x4E0D;&#x540C;&#x7684;&#x4E60;&#x60EF;&#xFF1B;&#x4E0D;&#x7528;&#x9694;&#x6BB5;&#x65F6;&#x95F4;&#x5C31;&#x8981;&#x5B66;&#x4E60;&#x65B0;&#x7684;&#x7F16;&#x8F91;&#x5668;&#xFF1B;&#x4E5F;&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x9694;&#x6BB5;&#x65F6;&#x95F4;&#x4E0D;&#x7528;&#xFF0C;&#x8BA9;&#x539F;&#x5148;&#x5DF2;&#x7ECF;&#x5B66;&#x4F1A;&#x7684;&#x5DE5;&#x5177;&#x7531;&#x4E8E;&#x7248;&#x672C;&#x66F4;&#x65B0;&#x53C8;&#x53D8;&#x5F97;&#x964C;&#x751F;&#x4E86;&#x3002; &#x6211;&#x4E5F;&#x8BA4;&#x4E3A;&#x5B66;&#x4E60;&#x8FD9;&#x4E24;&#x6837;&#x5DE5;&#x5177;&#x4E4B;&#x524D;&#x9700;&#x8981;&#x614E;&#x91CD;&#x8003;&#x8651;&#xFF0C;&#x6709;&#x4E86;&#x5341;&#x8DB3;&#x7684;&#x5FC5;&#x8981;&#x6027;&#x518D;&#x5F00;&#x52A8;&#x3002;&#x56E0;&#x4E3A;&#x5B66;&#x4E60;&#x6210;&#x672C;&#x771F;&#x7684;&#x4E0D;&#x4F4E;&#xFF0C;&#x9694;&#x6BB5;&#x65F6;&#x95F4;&#x4E0D;&#x7528;&#x53C8;&#x4F1A;&#x5FD8;&#x6389;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x5FCC;&#x8BB3;&#x5B66;&#x4E2A;&#x4E09;&#x4E94;&#x6210;&#x6254;&#x6389;&#x4E86;&#xFF0C;&#x8FC7;&#x4E00;&#x5E74;&#x534A;&#x8F7D;&#x7684;&#x53C8;&#x89C9;&#x5F97;&#x9700;&#x8981;&#xFF0C;&#x518D;&#x4ECE;&#x5934;&#x5B66;&#x3002;&#x8FD9;&#x79CD;&#x5B66;&#x6CD5;&#x662F;&#x6700;&#x6D6A;&#x8D39;&#x7CBE;&#x529B;&#xFF0C;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;&#x7684;&#x3002;&#x4E5F;&#x662F;&#x6211;&#x8FC7;&#x53BB;&#x7684;&#x5B66;&#x6CD5;:( &#x5B66;&#x4E60;&#x5468;&#x671F;&#x957F;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x6BCF;&#x6B21;&#x5B66;&#x4E00;&#x70B9;&#x4E5F;&#x65E0;&#x6240;&#x8C13;&#x3002;&#x6709;&#x6548;&#x5730;&#x6C89;&#x6DC0;&#x548C;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x65E5;&#x5E38;&#x7528;&#x8D77;&#x6765;&#xFF0C;&#x603B;&#x80FD;&#x5728;&#x53EF;&#x9884;&#x671F;&#x7684;&#x65F6;&#x95F4;&#x91CC;&#x628A;&#x5B83;&#x5543;&#x4E0B;&#x6765;&#x3002;&#x672C;&#x6587;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x5168;&#x9762;&#x7684;&#x603B;&#x7ED3;&#xFF0C;&#x53EA;&#x662F;&#x628A;&#x6211;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x7684;&#x914D;&#x7F6E;&#x3001;&#x64CD;&#x4F5C;&#x3001;&#x6CE8;&#x610F;&#x70B9;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x786E;&#x4FDD;&#x6709;&#x6548;&#x79EF;&#x7D2F;&#x3002;&#x524D;&#x9762;&#x5C0F;&#x8282;&#x4E2D;&#x8BB0;&#x5F55;&#x4E0B;&#x7684;&#x70B9;&#x6EF4;&#x5982;&#x679C;&#x6D89;&#x53CA;&#x5230;&#x914D;&#x7F6E;&#x7684;&#xFF0C;&#x90FD;&#x4F1A;&#x5728;&#x6700;&#x540E;&#x4E00;&#x8282;&#x7684;.emacs&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x4E2D;&#x4F53;&#x73B0;&#x51FA;&#x6765;&#x3002; &#x5B89;&#x88C5;Emacs &#x5728;mac OS&#x4E0B;&#x5B89;&#x88C5;Emacs&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53BB;emacs for mac osx&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x6700;&#x65B0;&#x7248;&#x672C;&#x5373;&#x53EF;&#x3002;&#x8FD9;&#x4E2A;&#x7248;&#x672C;&#x9ED8;&#x8BA4;&#x5C31;&#x5E26;&#x4E86;cedet&#x3001;semantic&#x3001;speedbar&#x7B49;&#x5DE5;&#x5177;&#xFF0C;&#x4E0D;&#x7528;&#x989D;&#x5916;&#x4E0B;&#x8F7D;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5B8C;&#x6210;&#x914D;&#x7F6E;&#x5373;&#x53EF;&#x3002; &#x8BBE;&#x7F6E;&#x4E3B;&#x9898; &#x7B80;&#x5355;&#x70B9;&#xFF0C;&#x5C31;&#x7528;&#x81EA;&#x5E26;&#x4E3B;&#x9898;&#x5427;&#xFF1A; Options - Customize Emacs - Custom Theme - tsdh-dark &#x70B9;&#x51FB;Save Theme Settings&#x4FDD;&#x5B58;&#x4E3B;&#x9898;&#x3002; &#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x5B57;&#x4F53; Options - Set Default Font &#x9009;&#x62E9;&#x5B57;&#x4F53;Curier New&#xFF0C;&#x5B57;&#x53F7;16&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8BE5;&#x64CD;&#x4F5C;&#x53EA;&#x80FD;&#x5728;&#x672C;&#x6B21;&#x4F1A;&#x8BDD;&#x4E2D;&#x751F;&#x6548;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;Emacs&#x7684;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#xFF0C;&#x9700;&#x8981;&#x4FEE;&#x6539;~/.emacs&#x6587;&#x4EF6;&#x3002; &#x6572;&#x5165;&#x547D;&#x4EE4;&#xFF1A; M-x describe-font &#x56DE;&#x8F66; &#x56DE;&#x8F66;&#xFF0C; Emacs&#x4F1A;&#x5217;&#x51FA;&#x5F53;&#x524D;&#x4F7F;&#x7528;&#x7684;&#x5B57;&#x4F53;&#x5B57;&#x53F7;&#x7684;&#x6587;&#x672C;&#x63CF;&#x8FF0;&#xFF1A; name (opened by): -*-Courier New-normal-normal-normal-*-16-*-*-*-m-0-iso10646-1 &#x5728;~/.emacs&#x4E2D;&#x52A0;&#x5165;&#xFF1A; (set-default-font&quot;-*-Courier New-normal-normal-normal-*-16-*-*-*-m-0-iso10646-1&quot;) &#x6807;&#x9898;&#x680F;&#x663E;&#x793A;&#x6587;&#x4EF6;&#x5B8C;&#x6574;&#x8DEF;&#x5F84; 1234567891011121314;;Emacs title bar to reflect file name(defun frame-title-string ()&quot;Return the file name of current buffer, using ~ if under home directory&quot;(let ((fname (or (buffer-file-name (current-buffer))(buffer-name))));;let body(when (string-match (getenv &quot;HOME&quot;) fname)(setq fname (replace-match &quot;~&quot; t t fname)) )fname));;; Title = &apos;system-name File: foo.bar&apos;(setq frame-title-format &apos;(:eval (frame-title-string))) &#x5907;&#x4EFD;&#x6587;&#x4EF6; 12345;; &#x7981;&#x6B62;&#x751F;&#x6210;&#x914D;&#x7F6E;&#x6587;&#x4EF6;(setq make-backup-files nil);; &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x90FD;&#x751F;&#x6210;&#x5230;~/.backups&#x4E0B;(setq backup-directory-alist (quote ((&quot;.&quot; . &quot;~/.backups&quot;)))) &#x82E5;&#x8981;&#x6062;&#x590D;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x6267;&#x884C;&#xFF1A; 123M-x recover-file &lt;RET&gt; &#x6587;&#x4EF6;&#x540D; &lt;RET&gt;yes &lt;RET&gt;C-x C-s elpy elpy&#x2014;&#x2014;Emacs Lisp Python Environment&#xFF0C;&#x8FD9;&#x4E2A;&#x5FC5;&#x987B;&#x5F97;&#x88C5;&#xFF0C;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF1A; 1. &#x5728;.emacs&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#x540E;&#x91CD;&#x542F;emacs 123(require &apos;package)(add-to-list &apos;package-archives &apos;(&quot;elpy&quot; . &quot;http://jorgenschaefer.github.io/packages/&quot;)) &#x8FD0;&#x884C;M-x package-install RET elpy RET &#x5728;.emacs&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF0C;&#x4EE5;&#x4F7F;emacs&#x9ED8;&#x8BA4;&#x652F;&#x6301;elpy&#xFF1A; 12(package-initialize)(elpy-enable) cscope cscope&#x662F;&#x7528;&#x6765;&#x5E2E;&#x52A9;&#x9605;&#x8BFB;&#x6E90;&#x7801;&#x7684;&#xFF0C;Emacs for mac osx&#x9ED8;&#x8BA4;&#x81EA;&#x5E26;cscope&#x7684;&#x652F;&#x6301;&#x3002;&#x5728;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#xFF0C;cscope&#x4E5F;&#x9700;&#x8981;&#x5BF9;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x7D22;&#x5F15;&#x3002;&#x5728;emacs&#x4E2D;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x505A;&#xFF1A; C-c s a &#x8BBE;&#x5B9A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x4F60;&#x4EE3;&#x7801;&#x7684;&#x6839;&#x76EE;&#x5F55; C-s s I &#x5BF9;&#x76EE;&#x5F55;&#x4E2D;&#x7684;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x5EFA;&#x7ACB;&#x5217;&#x8868;&#x5E76;&#x8FDB;&#x884C;&#x7D22;&#x5F15; C-c s s &#x5BFB;&#x627E;&#x7B26;&#x53F7; C-c s g &#x5BFB;&#x627E;&#x5168;&#x5C40;&#x7684;&#x5B9A;&#x4E49; C-c s c &#x770B;&#x770B;&#x6307;&#x5B9A;&#x51FD;&#x6570;&#x88AB;&#x54EA;&#x4E9B;&#x51FD;&#x6570;&#x6240;&#x8C03;&#x7528; C-c s C &#x770B;&#x770B;&#x6307;&#x5B9A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E86;&#x54EA;&#x4E9B;&#x51FD;&#x6570; C-c s e &#x5BFB;&#x627E;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F; C-c s f &#x5BFB;&#x627E;&#x6587;&#x4EF6; C-c s i &#x770B;&#x770B;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x88AB;&#x54EA;&#x4E9B;&#x6587;&#x4EF6;include gdb &#x5B89;&#x88C5; macOS&#x4E0B;&#x9ED8;&#x8BA4;&#x6CA1;&#x6709;gdb&#xFF0C;&#x9700;&#x8981;&#x53E6;&#x884C;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#xFF1A; 12$ brew tap homebrew/dupes$ brew install gdb &#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x5728;~/.emacs&#x4E2D;&#x6DFB;&#x52A0;&#xFF1A; 12(setenv &quot;PATH&quot; &quot;/usr/local/bin:$PATH&quot; t) (add-to-list &apos;exec-path &quot;/usr/local/bin&quot;) &#x5982;&#x679C;&#x6CA1;&#x6709;&#x8FD9;&#x4E24;&#x884C;&#xFF0C;emacs&#x662F;&#x627E;&#x4E0D;&#x5230;gdb&#x7684;&#x3002; ## &#x7B7E;&#x540D; macOS&#x4E0B;&#x4F7F;&#x7528;gdb&#x5FC5;&#x987B;&#x7B7E;&#x540D;&#xFF0C;&#x5426;&#x5219;&#x4E0D;&#x80FD;&#x8C03;&#x8BD5;&#x3002;&#x5177;&#x4F53;&#x6B65;&#x9AA4;&#x662F;&#xFF1A; * &#x6253;&#x5F00;&#x94A5;&#x5319;&#x4E32;&#x8BBF;&#x95EE;&#xFF0C;&#x70B9;&#x51FB;&#x83DC;&#x5355;&#x94A5;&#x5319;&#x4E32;&#x8BBF;&#x95EE; - &#x8BC1;&#x4E66;&#x52A9;&#x7406; - &#x521B;&#x5EFA;&#x8BC1;&#x4E66; * &#x540D;&#x79F0;&#xFF1A;gdb-cert&#xFF1B;&#x8EAB;&#x4EFD;&#x7C7B;&#x578B;&#xFF1A;&#x81EA;&#x7B7E;&#x540D;&#x6839;&#x8BC1;&#x4E66;&#xFF1B;&#x8BC1;&#x4E66;&#x7C7B;&#x578B;&#xFF1A;&#x4EE3;&#x7801;&#x7B7E;&#x540D;&#xFF1B;&#x52FE;&#x9009;&#x201C;&#x8BA9;&#x6211;&#x8986;&#x76D6;&#x8FD9;&#x4E9B;&#x9ED8;&#x8BA4;&#x503C;&#x201D; * &#x6307;&#x5B9A;&#x5C3D;&#x91CF;&#x957F;&#x7684;&#x6709;&#x6548;&#x671F; * &#x4E00;&#x8DEF;&#x56DE;&#x8F66;&#x76F4;&#x5230;&#x201C;&#x6307;&#x5B9A;&#x7528;&#x4E8E;&#x8BE5;&#x8BC1;&#x4E66;&#x7684;&#x4F4D;&#x7F6E;&#x201D;&#xFF0C;&#x94A5;&#x5319;&#x4E32;&#xFF1A;&#x7CFB;&#x7EDF; * &#x4E00;&#x8DEF;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5728;&#x8BE5;&#x8BC1;&#x4E66;&#x4E0A;&#x53F3;&#x952E; - &#x663E;&#x793A;&#x7B80;&#x4ECB;&#xFF0C;&#x4EE3;&#x7801;&#x7B7E;&#x540D;&#xFF1A;&#x59CB;&#x7EC8;&#x4FE1;&#x4EFB; &#x63A5;&#x4E0B;&#x6765;&#x6253;&#x5F00;&#x7EC8;&#x7AEF;&#xFF0C;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF1A; 1codesign -s gdb-cert /usr/local/bin/gdb &#x6253;&#x5F00;&#x4EFB;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x6740;&#x6389;&#x8FDB;&#x7A0B;taskgated&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x4F7F;&#x7528;gdb&#x8C03;&#x8BD5;&#x7A0B;&#x5E8F;&#x4E86;&#x3002; &#x4F7F;&#x7528; &#x7F16;&#x8BD1;&#x5355;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x7528;&#x5199;makefile&#x811A;&#x672C;&#xFF0C;&#x76F4;&#x63A5;&#x6267;&#x884C;g++&#x5C31;&#x597D;&#x4E86;&#xFF1A; M-x compile RET&#x628A;&#x7D27;&#x63A5;&#x7740;&#x51FA;&#x73B0;&#x7684;&#x547D;&#x4EE4;&#x6539;&#x6210;&#xFF1A;g++ main.cpp -g -o main.out &#x9009;&#x62E9;&#x83DC;&#x5355;Tools - Debugger&#xFF0C;&#x542F;&#x52A8;&#x8C03;&#x8BD5;&#x3002; &#x547D;&#x4EE4;&#xFF1A; M-x gdb-many-windows RET &#x6253;&#x5F00;&#x591A;&#x4E2A;&#x7A97;&#x53E3;&#x3002; markdown&#x652F;&#x6301; &#x4E0B;&#x8F7D;markdown-mode.el&#xFF0C;&#x653E;&#x5230;/.emacs.d/modes/markdown-mode.el&#xFF0C;&#x5728;/.emacs&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#xFF1A; 12345(add-to-list &apos;load-path &quot;~/.emacs.d/modes&quot;) (autoload &apos;markdown-mode &quot;markdown-mode.el&quot; &quot;Major mode for editing Markdown files&quot; t) (setq auto-mode-alist (cons &apos;(&quot;.md&quot; . markdown-mode) auto-mode-alist)) &#x8FD9;&#x6837;&#x6253;&#x5F00;.md&#x6587;&#x4EF6;&#xFF0C;emacs&#x8BB2;&#x81EA;&#x52A8;&#x4F7F;&#x7528;markdown-model.el&#x3002; &#x5E38;&#x7528;&#x57FA;&#x672C;&#x547D;&#x4EE4; &#x547D;&#x4EE4; &#x8BF4;&#x660E; C-x C-f &#x6253;&#x5F00;&#x6587;&#x4EF6; C-x k &#x5173;&#x95ED;&#x7F13;&#x51B2;&#x533A; M-x scroll-down-line &#x5411;&#x4E0B;&#x6EDA;&#x52A8;&#x4E00;&#x884C; M-x scroll-up-line &#x5411;&#x4E0A;&#x6EDA;&#x52A8;&#x4E00;&#x884C; M-] &#x5411;&#x540E;&#x5FAA;&#x73AF;&#x6EDA;&#x52A8;buffer&#xFF08;&#x81EA;&#x5B9A;&#x4E49;&#xFF09; M-[ &#x5411;&#x524D;&#x5FAA;&#x73AF;&#x6EDA;&#x52A8;buffer&#xFF08;&#x81EA;&#x5B9A;&#x4E49;&#xFF09; M-x shell &#x5728;buffer&#x4E2D;&#x5F00;&#x542F;&#x547D;&#x4EE4;&#x884C; C-x r m (M-x bookmark-set) &#x8BBE;&#x7F6E;&#x4E66;&#x7B7E; C-x r l (M-x bookmark-bmenu-list) &#x5217;&#x51FA;&#x4E66;&#x7B7E; (M-x book-delete) &#x5220;&#x9664;&#x4E66;&#x7B7E; C-x r b (M-x bookmark-jump) &#x8DF3;&#x8F6C;&#x4E66;&#x7B7E; (M-x bookmark-save) &#x5C06;&#x6240;&#x6709;&#x4E66;&#x7B7E;&#x4FDD;&#x5B58;&#x81F3;~/.emacs.bmk M-x load-file ~/.emacs &#x65E0;&#x9700;&#x91CD;&#x542F;&#xFF0C;&#x76F4;&#x63A5;&#x52A0;&#x8F7D;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5E76;&#x66F4;&#x65B0; M-x hs-minor-mode &#x5F00;&#x542F;&#x6298;&#x53E0;&#x6A21;&#x5F0F; s- s- &#x5411;&#x4E0A;&#x3001;&#x5411;&#x4E0B;&#x6EDA;&#x52A8;&#x4E00;&#x884C; .emacs&#x6587;&#x4EF6;&#x914D;&#x7F6E; &#x6B63;&#x6587;&#x5C31;&#x4E0D;&#x8D34;&#x5230;&#x8FD9;&#x91CC;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x7ECF;&#x5E38;&#x53D8;&#x5316;&#xFF0C;&#x6211;&#x653E;&#x5230;&#x4E86;&#x8FD9;&#x91CC;&#x3002;]]></content>
      <categories>
        <category>环境、配置</category>
      </categories>
      <tags>
        <tag>Emacs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在模拟器上运行app]]></title>
    <url>%2F2016%2F09%2F08%2F2016%2F0908Emulator%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x653E;&#x5F03;&#x8C03;&#x7814;&#x600E;&#x4E48;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x548C;&#x8C03;&#x8BD5;&#x4EE3;&#x7801;&#x3002;&#x76F4;&#x63A5;&#x8C03;&#x8BD5;&#x4E00;&#x4E2A;&#x5C0F;&#x7A0B;&#x5E8F;&#x5F53;&#x7136;&#x6CA1;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x662F;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x5E9E;&#x5927;&#x7684;&#x5DE5;&#x7A0B;&#xFF0C;&#x5305;&#x542B;JNI&#x548C;&#x57FA;&#x4E8E;arm&#x7F16;&#x8BD1;&#x597D;&#x7684;so&#xFF0C;&#x4E4B;&#x524D;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x532E;&#x4E4F;&#xFF0C;&#x64CD;&#x4F5C;&#x8FD9;&#x4E8B;&#x603B;&#x662F;&#x9047;&#x5230;&#x5404;&#x79CD;&#x963B;&#x788D;&#xFF0C;&#x53C8;&#x4E0D;&#x77E5;&#x9053;&#x8BE5;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x3002;&#x8FD9;&#x4E24;&#x5929;&#x518D;&#x6B21;&#x5C1D;&#x8BD5;&#x7EC8;&#x4E8E;&#x6709;&#x7A81;&#x7834;&#x4E86;&#xFF0C;&#x628A;&#x8FC7;&#x7A0B;&#x5907;&#x5FD8;&#x4E0B;&#x6765;&#x3002; &#x5C3D;&#x7BA1;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x8C03;&#x8BD5;&#x548C;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x6BD4;&#x5728;&#x771F;&#x673A;&#x4E0A;&#x8FDF;&#x7F13;&#xFF0C;&#x53EF;&#x6A21;&#x62DF;&#x5668;&#x6709;&#x81EA;&#x5DF1;&#x72EC;&#x7279;&#x7684;&#x4F18;&#x52BF;&#xFF1A; * &#x6A21;&#x62DF;&#x5668;&#x5929;&#x7136;&#x6709;root&#x6743;&#x9650;&#xFF0C;&#x6211;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x641E;&#x5B9A;root&#x81EA;&#x5DF1;&#x7684;&#x534E;&#x4E3A;&#x624B;&#x673A;&#x3002;&#x6A21;&#x62DF;&#x5668;&#x4E0D;&#x7528;&#x518D;&#x64CD;root&#x7684;&#x5FC3;&#xFF0C;&#x968F;&#x610F;&#x600E;&#x4E48;&#x641E;&#xFF0C;&#x5F88;&#x723D;&#x3002; * &#x4E0D;&#x7528;&#x603B;&#x662F;&#x5E26;&#x7740;&#x8C03;&#x8BD5;&#x673A;&#x5728;&#x8EAB;&#x8FB9;&#xFF0C;&#x4E5F;&#x4E0D;&#x7528;&#x53EE;&#x53EE;&#x5F53;&#x5F53;&#x7684;&#x8FDE;&#x7EBF;&#x3002;&#x5E73;&#x65F6;&#x81EA;&#x5DF1;&#x7528;&#x7684;&#x624B;&#x673A;&#x6709;&#x5404;&#x79CD;&#x7F51;&#x94F6;&#x3001;&#x7535;&#x5546;&#xFF0C;&#x8FD8;&#x662F;&#x4E0D;&#x592A;&#x653E;&#x5FC3;&#x76F4;&#x63A5;&#x7528;&#x6765;&#x505A;&#x5F00;&#x53D1;&#x673A;&#xFF0C;&#x518D;&#x5E26;&#x4E00;&#x53F0;&#x8C03;&#x8BD5;&#x673A;&#x5F88;&#x7D2F;&#x8D58;&#x3002; * &#x6700;&#x8FD1;&#x5DE5;&#x4F5C;&#x7684;&#x91CD;&#x70B9;&#x90FD;&#x662F;&#x4F7F;&#x7528;adb&#xFF0C;&#x6BD4;&#x5982;&#x8C03;&#x67E5;&#x5E94;&#x7528;&#x7684;&#x5B58;&#x50A8;&#x5C3A;&#x5BF8;&#x3001;&#x5185;&#x5B58;&#x5360;&#x7528;&#xFF0C;&#x8FD9;&#x4E9B;&#x8DDF;&#x6A21;&#x62DF;&#x5668;&#x8FD0;&#x884C;&#x7684;&#x5FEB;&#x6162;&#x6CA1;&#x5173;&#x7CFB;&#x3002; * Genymotion&#x3001;AndroidStudio2.x&#x81EA;&#x5E26;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x8FD0;&#x884C;&#x901F;&#x5EA6;&#x5DF2;&#x7ECF;&#x5F88;&#x5FEB;&#x4E86;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;Google&#x8FD8;&#x4F1A;&#x4E0D;&#x65AD;&#x4F18;&#x5316;&#x6A21;&#x62DF;&#x5668;&#x7684;&#x6027;&#x80FD;&#x3002; * &#x5982;&#x679C;&#x8981;&#x8C03;&#x8BD5;&#x7684;&#x662F;Android&#x6E90;&#x7801;&#xFF0C;&#x90A3;&#x53EA;&#x6709;&#x4F7F;&#x7528;Android&#x81EA;&#x5E26;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x6700;&#x4FBF;&#x6377;&#x3002; &#x4F7F;&#x7528;Gemymotion&#x8FD0;&#x884C;&#x57FA;&#x4E8E;ARM&#x6307;&#x4EE4;&#x7684;APP &#x4EE5;&#x524D;&#x4E4B;&#x6240;&#x4EE5;&#x9047;&#x5230;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x4E3B;&#x8981;&#x8FD8;&#x662F;&#x5E73;&#x53F0;&#x6307;&#x4EE4;&#x96C6;&#x4E0D;&#x5339;&#x914D;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x89E3;&#x51B3;&#x8D77;&#x6765;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x3002;Genymotion&#x548C;AndroidStudio2.x&#x81EA;&#x5E26;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x90FD;&#x662F;x86&#x7684;&#xFF0C;&#x800C;&#x7EDD;&#x5927;&#x90E8;&#x5206;app&#x5982;&#x679C;&#x6709;&#x5E26;so&#x7684;&#x8BDD;&#xFF0C;&#x90FD;&#x662F;&#x57FA;&#x4E8E;arm&#x6307;&#x4EE4;&#x96C6;&#x7F16;&#x8BD1;&#x7684;&#xFF0C;&#x76F4;&#x63A5;&#x8DD1;&#x5728;x86&#x7684;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x5FC5;&#x7136;&#x6709;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x6A21;&#x62DF;&#x5668;&#x73B0;&#x5728;&#x7684;&#x8FD0;&#x884C;&#x901F;&#x5EA6;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x6211;&#x9009;&#x7528;Genymotion&#x3002;&#x6A21;&#x62DF;&#x5668;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x5148;&#x5B89;&#x88C5;ARM_Translation_Marshmallow.zip&#xFF0C;&#x628A;&#x8BE5;zip&#x6587;&#x4EF6;&#x76F4;&#x63A5;&#x62D6;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x91CC;&#xFF0C;&#x4E00;&#x8DEF;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002;&#x91CD;&#x542F;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x57FA;&#x4E8E;arm&#x7F16;&#x8BD1;&#x7684;app&#x4E86;&#xFF0C;&#x4F7F;&#x7528;AndroidStudio&#x8C03;&#x8BD5;&#x90FD;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x3002;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8C03;&#x8BD5;&#x5E94;&#x7528;&#x5C42;&#x4EE3;&#x7801;&#xFF0C;&#x4F53;&#x9A8C;&#x4E0A;&#x5DF2;&#x7ECF;&#x4E0D;&#x6BD4;&#x5728;&#x771F;&#x673A;&#x4E0A;&#x5DEE;&#x4E86;&#x3002; &#x4F7F;&#x7528;emulator&#x5B89;&#x88C5;app &#x6709;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x57FA;&#x4E8E;ARM&#x6307;&#x4EE4;&#x7684;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x8FD0;&#x884C;&#x3001;&#x8C03;&#x8BD5;&#x4EE3;&#x7801;&#xFF0C;&#x90A3;&#x5C31;&#x53EA;&#x6709;&#x7528;Android&#x6E90;&#x7801;&#x81EA;&#x5E26;&#x7684;emulator&#x3002;&#x5173;&#x4E8E;emulator&#x7684;&#x7F16;&#x8BD1;&#xFF0C;&#x53EF;&#x53C2;&#x89C1;&#x300A;Android&#x6E90;&#x7801;&#x6811;&#x4E2D;C&#x4EE3;&#x7801;&#x7684;&#x7F16;&#x8BD1;&#x300B;&#x3002;&#x6211;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;AndroidStudio&#x76F4;&#x63A5;&#x7F16;&#x8BD1;&#x5927;&#x9879;&#x76EE;&#xFF0C;&#x5E76;&#x5B89;&#x88C5;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x76F4;&#x63A5;&#x8C03;&#x8BD5;&#xFF0C;&#x603B;&#x662F;&#x5728;&quot;Installing apk...&quot;&#x7684;&#x5730;&#x65B9;&#x6A21;&#x62DF;&#x5668;&#x5C31;&#x65E0;&#x54CD;&#x5E94;&#x4E86;&#xFF0C;&#x76EE;&#x524D;&#x8FD8;&#x4E0D;&#x77E5;&#x9053;&#x8BE5;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x3002;&#x4E0D;&#x8FC7;&#x4ECA;&#x5929;&#x6211;&#x53D1;&#x73B0;&#x76F4;&#x63A5;adb install&#x6765;&#x5B89;&#x88C5;&#x662F;&#x6CA1;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x4ECE;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x641C;&#x72D7;&#x8F93;&#x5165;&#x6CD5;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#xFF1A; 1234// &#x8BBE;&#x5B9A;&#x5185;&#x5B58;&#x548C;&#x5B58;&#x50A8;&#x5C3A;&#x5BF8;&#xFF0C;&#x8BBE;&#x5B9A;dns&#x4EE5;&#x4F7F;&#x7F51;&#x7EDC;&#x7545;&#x901A;$ emulator -memory 512 -partition-size 1024 -dns-server 10.129.181.211 &amp;// &#x5B89;&#x88C5;&#x8F93;&#x5165;&#x6CD5;$ adb install /Users/palance/Downloads/SogouInput_android_v8.4_sweb.apk &#x5C31;&#x987A;&#x5229;&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x4E86;&#x3002; &#x4F7F;&#x7528;AndroidStudio&#x5728;emulator&#x4E0A;&#x8C03;&#x8BD5;Android&#x6E90;&#x7801; &#x4E0A;&#x5468;&#x53EA;&#x662F;&#x873B;&#x8713;&#x70B9;&#x6C34;&#x5730;&#x8BD5;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x8C8C;&#x4F3C;&#x4E5F;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x8BE6;&#x7EC6;&#x7684;&#x6B65;&#x9AA4;&#x6211;&#x8FD8;&#x8981;&#x518D;&#x68B3;&#x7406;&#xFF0C;&#x7A0D;&#x540E;&#x8865;&#x4E0A;&#x3002;&#x8FD9;&#x4E00;&#x5757;&#x8865;&#x8DB3;&#x540E;&#xFF0C;&#x5F00;&#x53D1;&#x3001;&#x8C03;&#x8BD5;&#x73AF;&#x5883;&#x8FD9;&#x6761;&#x9053;&#x4E0A;&#x7684;&#x969C;&#x788D;&#x5C31;&#x57FA;&#x672C;&#x626B;&#x6E05;&#x4E86;&#xFF0C;&#x4EE5;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x4E0A;&#x9762;&#x66F4;&#x5FEB;&#x5730;&#x8DD1;&#x9A6C;&#x54AF;~ &#x8BB0;&#x5F55;&#x6211;&#x5728;macOS&#x4E0B;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#xFF1A; ## &#x4FEE;&#x6539;AndroidStudio&#x7684;&#x5185;&#x5B58;&#x914D;&#x7F6E; &#x5E94;&#x7528;&#x7A0B;&#x5E8F; - Android Studio.app&#x53F3;&#x952E; - &#x663E;&#x793A;&#x5305;&#x5185;&#x5BB9; - Contents/bin/studio.vmoptions&#xFF0C;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#x4E24;&#x9879;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12-Xms512m-Xmx2048m Xms&#x662F;JVM&#x542F;&#x52A8;&#x7684;&#x8D77;&#x59CB;&#x5806;&#x5185;&#x5B58;&#xFF0C;Xmx&#x662F;AndroidStudio&#x80FD;&#x4F7F;&#x7528;&#x7684;&#x6700;&#x5927;heap&#x5185;&#x5B58;&#x3002; &#x4F7F;&#x7528;&#x6E90;&#x7801;&#x751F;&#x6210;ipr&#x6587;&#x4EF6; &#x5728;&#x6E90;&#x7801;&#x4E0B;&#x6267;&#x884C; 12$ source build/ensetup.sh$ make idegen &amp;&amp; development/tools/idegen/idegen.sh &#x8BE5;&#x547D;&#x4EE4;&#x4F1A;&#x5728;&#x6E90;&#x7801;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;AndroidStudio&#x6240;&#x9700;&#x8981;&#x7684;ipr&#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5F00;AndroidStudio - Open an existing Android Studio project - &#x9009;&#x62E9;&#x521A;&#x521A;&#x751F;&#x6210;&#x7684;android.ipr &#x63A5;&#x4E0B;&#x6765;&#x9700;&#x8981;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x6765;&#x8BFB;&#x53D6;&#x6E90;&#x7801;&#xFF0C;&#x6211;&#x7B49;&#x4E86;25&#x5206;&#x949F;&#x3002;&#x4E3A;&#x4E86;&#x8BA9;&#x4EE5;&#x540E;&#x6BCF;&#x6B21;&#x6253;&#x5F00;&#x9879;&#x76EE;&#x7684;&#x65F6;&#x5019;&#x8282;&#x7701;&#x70B9;&#x65F6;&#x95F4;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#x5939;&#x8BBE;&#x7F6E;&#x4E3A;Excluded&#xFF0C;&#x8FD9;&#x6837;&#x4EE5;&#x540E;&#x518D;&#x6253;&#x5F00;&#x9879;&#x76EE;&#x7684;&#x65F6;&#x5019;&#xFF0C;AndroidStudio&#x5C31;&#x4E0D;&#x518D;&#x8BFB;&#x53D6;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x5939;&#x4E86;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4E3A;&#xFF1A;&#x5728;&#x9879;&#x76EE;&#x4E0A;&#x53F3;&#x952E; - Open Module Settings - Project Settings - Modules&#xFF0C;&#x70B9;&#x51FB;&#x8981;&#x6392;&#x9664;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x70B9;&#x51FB;Excluded&#x3002;&#x6211;&#x9009;&#x62E9;&#x6392;&#x9664;&#x4E86;docs&#x3001;out&#x3001;prebuilts&#x3002; &#x914D;&#x7F6E;JDK&#x3001;SDK &#x56DE;&#x5230;Module Settings - Platform Settings - SDKs&#x3002;&#x4F9D;&#x7167;&#x5DF2;&#x6709;&#x7684;JDK&#x518D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#xFF0C;&#x53D6;&#x540D;&#x4E3A;1.8(No Libraries)&#xFF0C;&#x5220;&#x9664;classpath&#x4E0B;&#x6240;&#x6709;jar&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x4F7F;&#x7528;Android&#x6E90;&#x7801;&#x91CC;&#x7684;&#x5E93;&#x6587;&#x4EF6;&#x3002;&#x5E76;&#x5C06;1.8(No Libraries)&#x4F5C;&#x4E3A;Android SDK&#x4F7F;&#x7528;&#x7684;JDK&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x5728;Project SDK&#x4E2D;&#x9009;&#x62E9;&#x5BF9;&#x5E94;&#x7684;Android API&#x7248;&#x672C;&#xFF1A; &#x56DE;&#x5230;Project Settings - Modules - Dependencies&#xFF0C;&#x5220;&#x9664;&#x9664; &lt;Module source&gt; Android API 23 Platform(java version &quot;1.8.0_60&quot; &#x4EE5;&#x5916;&#x7684;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#xFF0C;&#x8FD9;&#x6837;&#x4EE3;&#x7801;&#x8DF3;&#x8F6C;&#x65F6;&#x5C31;&#x4F1A;&#x4F18;&#x5148;&#x4ECE;&#x8FD9;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x67E5;&#x627E;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x53BB;Android.jar&#x3002; &#x4E3A;Debug&#x914D;&#x7F6E; Project Settings - Modules - &#x9009;&#x4E2D;&#x4E2D;&#x95F4;&#x8BD5;&#x56FE;&#x4E2D;&#x7684;android - &#x70B9;&#x51FB;&#x52A0;&#x53F7; - &#x9009;&#x62E9;Framework/Android]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[又是一年校招季]]></title>
    <url>%2F2016%2F08%2F28%2F2016%2F0828%E5%8F%88%E6%98%AF%E4%B8%80%E5%B9%B4%E6%A0%A1%E6%8B%9B%E5%AD%A3%2F</url>
    <content type="text"><![CDATA[2017&#x5E74;&#x5E94;&#x5C4A;&#x6BD5;&#x4E1A;&#x751F;&#x6821;&#x62DB;&#x53C8;&#x8981;&#x62C9;&#x5F00;&#x5E8F;&#x5E55;&#x3002;2010&#x5E74;&#x7B2C;&#x4E00;&#x6B21;&#x53C2;&#x52A0;&#x6821;&#x62DB;&#xFF0C;&#x81F3;&#x4ECA;&#x6709;&#x516D;&#x5E74;&#x591A;&#x7684;&#x62DB;&#x8058;&#x7ECF;&#x5386;&#xFF0C;&#x6BCF;&#x5E74;&#x90FD;&#x80FD;&#x89C1;&#x4E0A;&#x5927;&#x51E0;&#x5341;&#x53F7;&#x4EBA;&#xFF0C;&#x66FE;&#x7ECF;&#x7FFB;&#x8FC7;&#x8239;&#xFF0C;&#x4E5F;&#x79EF;&#x7D2F;&#x4E86;&#x4E00;&#x4E9B;&#x7ECF;&#x9A8C;&#x3002;&#x6309;&#x7167;&#x6211;&#x73B0;&#x5728;&#x7684;&#x5B66;&#x4E60;&#x89C2;&#x5FF5;&#xFF0C;&#x6709;&#x4EF7;&#x503C;&#x7684;&#x7ECF;&#x9A8C;&#x90FD;&#x5E94;&#x8BE5;&#x6C89;&#x6DC0;&#xFF0C;&#x8FDB;&#x5316;&#x548C;&#x6253;&#x78E8;&#x3002;&#x6211;&#x8BD5;&#x7740;&#x628A;&#x8FD9;&#x4E9B;&#x5E74;&#x7684;&#x7ECF;&#x9A8C;&#x5F52;&#x7EB3;&#x603B;&#x7ED3;&#x4E0B;&#x6765;&#x3002; &#x5176;&#x5B9E;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x9636;&#x6BB5;&#xFF0C;&#x9002;&#x7528;&#x7684;&#x7ECF;&#x9A8C;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x62FF;&#x6210;&#x624B;&#x7684;&#x65B9;&#x6CD5;&#x5728;&#x65B0;&#x664B;&#x9762;&#x8BD5;&#x5B98;&#x8EAB;&#x4E0A;&#x4E0D;&#x4E00;&#x5B9A;&#x5408;&#x9002;&#x3002;&#x5728;&#x8FD9;&#x4E9B;&#x7ECF;&#x9A8C;&#x4E4B;&#x4E0A;&#x7684;&#x4E00;&#x6761;&#x901A;&#x7528;&#x7ECF;&#x9A8C;&#x5C31;&#x662F;&#x4E0D;&#x65AD;&#x5730;&#x5B66;&#x4E60;&#x3001;&#x603B;&#x7ED3;&#xFF0C;&#x63D0;&#x70BC;&#x51FA;&#x9002;&#x7528;&#x4E0E;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x98CE;&#x683C;&#x3002; &#x8FD8;&#x8BB0;&#x5F97;&#x7B2C;&#x4E00;&#x6B21;&#x53C2;&#x52A0;&#x6821;&#x62DB;&#x5F53;&#x9762;&#x8BD5;&#x5B98;&#xFF0C;&#x6211;&#x6BD4;&#x5019;&#x9009;&#x4EBA;&#x8FD8;&#x7D27;&#x5F20;&#x3002;&#x6211;&#x7684;&#x8BB0;&#x6027;&#x6BD4;&#x8F83;&#x5DEE;&#xFF0C;&#x53E3;&#x624D;&#x4E5F;&#x4E0D;&#x7B97;&#x597D;&#xFF0C;&#x751F;&#x6015;&#x73B0;&#x573A;&#x4F1A;&#x51B7;&#x573A;&#xFF0C;&#x66F4;&#x6015;&#x7684;&#x662F;&#x9732;&#x602F;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x505A;&#x4E86;&#x51E0;&#x4E2A;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#xFF1A; 1. &#x4E8B;&#x5148;&#x51C6;&#x5907;&#x597D;&#x8981;&#x95EE;&#x7684;&#x9898;&#x76EE;&#x3002;&#x5C3D;&#x7BA1;&#x516C;&#x53F8;&#x6709;&#x7EDF;&#x4E00;&#x7684;&#x7B14;&#x8BD5;&#x9898;&#xFF0C;&#x90A3;&#x53EA;&#x662F;&#x6211;&#x7684;&#x4E00;&#x4E2A;&#x53C2;&#x8003;&#x6E90;&#xFF0C;&#x800C;&#x4E14;&#x6743;&#x91CD;&#x4E0D;&#x9AD8;&#xFF0C;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x4F9D;&#x8D56;&#x8FC7;&#x5B83;&#x3002;&#x56E0;&#x4E3A;&#x4E00;&#x6765;&#x51FA;&#x9898;&#x4EBA;&#x6C34;&#x5E73;&#x53C2;&#x5DEE;&#x4E0D;&#x9F50;&#xFF0C;&#x6211;&#x4E5F;&#x4E0D;&#x786E;&#x5B9A;&#x90A3;&#x4E9B;&#x9898;&#x76EE;&#x662F;&#x4E0D;&#x662F;&#x4ECE;&#x54EA;&#x91CC;&#x76F4;&#x63A5;&#x7C98;&#x8D34;&#x8FC7;&#x6765;&#x7684;&#xFF1B;&#x4E8C;&#x6765;&#x5404;&#x79CD;&#x9488;&#x5BF9;&#x516C;&#x53F8;&#x7684;&#x9762;&#x8BD5;&#x5B9D;&#x5178;&#x4E0D;&#x8981;&#x592A;&#x5168;&#xFF0C;&#x5F88;&#x591A;&#x540C;&#x5B66;&#x90FD;&#x662F;&#x6709;&#x5907;&#x800C;&#x6765;&#x7684;&#x3002;&#x6700;&#x521D;&#x6211;&#x7684;&#x9898;&#x76EE;&#x6211;&#x4E5F;&#x662F;&#x4ECE;&#x7F51;&#x4E0A;&#x641C;&#x6765;&#xFF0C;&#x505A;&#x4E00;&#x4E9B;&#x6539;&#x52A8;&#x5C31;&#x76F4;&#x63A5;&#x7528;&#x4E86;&#x3002;&#x5F88;&#x5FEB;&#x6211;&#x5C31;&#x6539;&#x53D8;&#x4E86;&#x9898;&#x76EE;&#x6765;&#x6E90;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x6765;&#x81EA;&#x4E66;&#xFF0C;&#x6211;&#x81EA;&#x8BE9;&#x8BFB;&#x8FC7;&#x4E0D;&#x5C11;&#x7ECF;&#x5178;&#x8457;&#x4F5C;&#xFF0C;&#x4E5F;&#x5728;&#x4ED6;&#x4EEC;&#x8FB9;&#x8FB9;&#x89D2;&#x89D2;&#x8BB0;&#x4E86;&#x4E0D;&#x5C11;&#x7B14;&#x8BB0;&#xFF0C;&#x7B2C;&#x4E8C;&#x7248;&#x7684;&#x9762;&#x8BD5;&#x9898;&#x5927;&#x591A;&#x6765;&#x81EA;&#x8BFB;&#x4E66;&#x7B14;&#x8BB0;&#x4E2D;&#x8BB0;&#x5F55;&#x7684;&#x95EE;&#x9898;&#x3002;&#x9762;&#x8BD5;&#x7684;&#x7ECF;&#x5386;&#x8BA9;&#x6211;&#x591A;&#x4E86;&#x4E00;&#x79CD;&#x601D;&#x8003;&#x89D2;&#x5EA6;&#xFF0C;&#x4E0D;&#x7BA1;&#x5728;&#x8BFB;&#x4E66;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x662F;&#x5728;&#x5199;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x4F1A;&#x60F3;&#x7740;&#x5F53;&#x4E0B;&#x5B66;&#x4E60;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x6216;&#x8005;&#x5F53;&#x4E0B;&#x5199;&#x7684;&#x7B97;&#x6CD5;&#x662F;&#x5426;&#x9002;&#x5408;&#x8003;&#x5BDF;&#x5019;&#x9009;&#x4EBA;&#x3002;&#x7B2C;&#x4E09;&#x7248;&#x7684;&#x9762;&#x8BD5;&#x9898;&#x591A;&#x6765;&#x81EA;&#x6211;&#x5728;&#x5DE5;&#x4F5C;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x5177;&#x4F53;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x4E2A;&#x7EA0;&#x7F20;&#x6211;&#x591A;&#x65F6;&#x7684;bug&#xFF0C;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x8D39;&#x70B9;&#x5FC3;&#x601D;&#x7684;&#x7B97;&#x6CD5;&#x3002;&#x8FD9;&#x662F;&#x6211;&#x6700;&#x559C;&#x6B22;&#x7684;&#x9762;&#x8BD5;&#x65B9;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x9898;&#x76EE;&#x72EC;&#x4E00;&#x65E0;&#x4E8C;&#xFF0C;&#x800C;&#x4E14;&#x80FD;&#x76F4;&#x63A5;&#x53CD;&#x5E94;&#x5019;&#x9009;&#x4EBA;&#x7684;&#x52A8;&#x624B;&#x80FD;&#x529B;&#x3002; 2. &#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x603B;&#x4E0D;&#x80FD;&#x62FF;&#x7740;&#x9898;&#x5E93;&#x95EE;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x7ED9;&#x9898;&#x76EE;&#x505A;&#x4E86;&#x7F16;&#x53F7;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#xFF0C;&#x4E0D;&#x8981;&#x592A;&#x660E;&#x663E;&#xFF0C;&#x786E;&#x4FDD;&#x6211;&#x81EA;&#x5DF1;&#x80FD;&#x770B;&#x61C2;&#xFF0C;&#x6807;&#x5728;&#x5019;&#x9009;&#x4EBA;&#x7684;&#x7B80;&#x5386;&#x4E0A;&#xFF0C;&#x6216;&#x8005;&#x7B14;&#x8BD5;&#x5377;&#x4E0A;&#x3002;&#x9762;&#x8BD5;&#x671F;&#x95F4;&#xFF0C;&#x770B;&#x5230;&#x8FD9;&#x4E9B;&#x7B26;&#x53F7;&#xFF0C;&#x6211;&#x7ACB;&#x523B;&#x5C31;&#x660E;&#x767D;&#x8981;&#x95EE;&#x54EA;&#x4E9B;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x6837;&#x8BA9;&#x6211;&#x5728;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#x8868;&#x73B0;&#x66F4;&#x4ECE;&#x5BB9;&#x3002;&#x5176;&#x5B9E;&#x5728;&#x9762;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C24;&#x5176;&#x5728;&#x6821;&#x62DB;&#x9762;&#x8BD5;&#x65F6;&#xFF0C;&#x5019;&#x9009;&#x4EBA;&#x901A;&#x5E38;&#x90FD;&#x6BD4;&#x8F83;&#x7D27;&#x5F20;&#xFF0C;&#x4ED6;&#x4EEC;&#x58F0;&#x97F3;&#x53D1;&#x98A4;&#x3001;&#x624B;&#x53D1;&#x6296;&#xFF0C;&#x8FD9;&#x662F;&#x80FD;&#x770B;&#x5230;&#x7684;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;&#x770B;&#x4E0D;&#x5230;&#x7684;&#x662F;&#x5F88;&#x591A;&#x4EBA;&#x8111;&#x5B50;&#x4E00;&#x7247;&#x7A7A;&#x767D;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x6211;&#x5FC5;&#x987B;&#x8D1F;&#x8D23;&#x4E3B;&#x5BFC;&#x573A;&#x4E0A;&#x7684;&#x5C40;&#x9762;&#xFF0C;&#x5305;&#x62EC;&#x6C14;&#x6C1B;&#x3001;&#x8282;&#x594F;&#x3002;&#x5982;&#x679C;&#x4FE9;&#x4EBA;&#x90FD;&#x5F88;&#x7D27;&#x5F20;&#xFF0C;&#x7ED3;&#x679C;&#x5FC5;&#x7136;&#x662F;&#x5931;&#x8D25;&#x7684;&#x3002;&#x81EA;&#x5DF1;&#x80FD;&#x4ECE;&#x5BB9;&#x9762;&#x5BF9;&#xFF0C;&#x624D;&#x6709;&#x53EF;&#x80FD;&#x73B0;&#x573A;&#x505A;&#x51FA;&#x4E00;&#x4E9B;&#x8C03;&#x6574;&#x3002; 3. &#x628A;&#x6BCF;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x7B80;&#x5386;&#x90FD;&#x4ED4;&#x7EC6;&#x5730;&#x7814;&#x7A76;&#x4E00;&#x904D;&#xFF0C;&#x9488;&#x5BF9;&#x6027;&#x5730;&#x8BBE;&#x8BA1;&#x95EE;&#x9898;&#x3002;&#x7531;&#x4E8E;&#x662F;&#x6821;&#x62DB;&#xFF0C;&#x5019;&#x9009;&#x4EBA;&#x901A;&#x5E38;&#x5E76;&#x6CA1;&#x6709;&#x5F88;&#x5BBD;&#x7684;&#x77E5;&#x8BC6;&#x9762;&#xFF0C;&#x5F88;&#x591A;&#x5B66;&#x6821;&#x5B9E;&#x9A8C;&#x5BA4;&#x8001;&#x677F;&#x7BA1;&#x5F97;&#x5F88;&#x4E25;&#xFF0C;&#x5FC5;&#x987B;&#x8DDF;&#x7740;&#x8001;&#x677F;&#x505A;&#x9879;&#x76EE;&#x3002;&#x4ED6;&#x4EEC;&#x80FD;&#x628A;&#x9879;&#x76EE;&#x6D89;&#x53CA;&#x7684;&#x6280;&#x672F;&#x8BB2;&#x6E05;&#x695A;&#x5C31;&#x5DF2;&#x7ECF;&#x4E0D;&#x9519;&#x4E86;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x77E5;&#x8BC6;&#x70B9;&#x5C3D;&#x7BA1;&#x662F;&#x67D0;&#x4E2A;&#x9886;&#x57DF;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x4F46;&#x6307;&#x671B;&#x4ED6;&#x4EEC;&#x90FD;&#x4E86;&#x89E3;&#x4E8B;&#x5B9E;&#x8BC1;&#x660E;&#x662F;&#x5962;&#x671B;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5F53;&#x65F6;&#x6211;&#x8D1F;&#x8D23;Windows&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x5F00;&#x53D1;&#xFF0C;&#x4F46;&#x6BCF;&#x5E74;&#x5019;&#x9009;&#x4EBA;&#x91CC;&#x4E86;&#x89E3;windows&#x7F16;&#x7A0B;&#x57FA;&#x7840;&#x7684;&#x4EBA;&#x90FD;&#x662F;&#x6700;&#x5C11;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x5343;&#x4E07;&#x4E0D;&#x8981;&#x7528;&#x4E00;&#x5957;&#x56FA;&#x5B9A;&#x7684;&#x95EE;&#x9898;&#x6765;&#x8003;&#x5BDF;&#x6240;&#x6709;&#x5019;&#x9009;&#x4EBA;&#xFF0C;&#x4ED6;&#x4EEC;&#x6765;&#x81EA;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x9A8C;&#x5BA4;&#xFF0C;&#x6709;&#x7740;&#x4E0D;&#x540C;&#x7684;&#x9879;&#x76EE;&#x7ECF;&#x5386;&#xFF0C;&#x6709;&#x4E9B;&#x6211;&#x770B;&#x6765;&#x662F;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x7684;&#x95EE;&#x9898;&#x56DE;&#x7B54;&#x4E0D;&#x4E0A;&#x6765;&#x5F88;&#x6B63;&#x5E38;&#x3002;&#x8981;&#x628A;&#x95EE;&#x9898;&#x7684;&#x7126;&#x70B9;&#x653E;&#x5728;&#x4ED6;&#x4EEC;&#x505A;&#x8FC7;&#x7684;&#x4E8B;&#x513F;&#x4E0A;&#xFF0C;&#x8003;&#x5BDF;&#x5728;&#x90A3;&#x6761;&#x8DEF;&#x5F84;&#x4E0A;&#x662F;&#x5426;&#x505A;&#x5F97;&#x591F;&#x6DF1;&#xFF0C;&#x662F;&#x5426;&#x884D;&#x751F;&#x51FA;&#x65B0;&#x7684;&#x89C6;&#x91CE;&#xFF0C;&#x624D;&#x662F;&#x8BC4;&#x5224;&#x8FD9;&#x4F4D;&#x5019;&#x9009;&#x662F;&#x5426;&#x9760;&#x8C31;&#x7684;&#x6807;&#x51C6;&#x3002;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x6807;&#x51C6;&#x7684;&#x4E2A;&#x4F53;&#x5DEE;&#x5F02;&#x5F88;&#x5927;&#xFF0C;&#x5FC5;&#x987B;&#x4ED4;&#x7EC6;&#x7814;&#x7A76;&#x6BCF;&#x4F4D;&#x5019;&#x9009;&#x7684;&#x7B80;&#x5386;&#x3002;&#x76F4;&#x5230;&#x591A;&#x5E74;&#x4EE5;&#x540E;&#x6211;&#x9762;&#x8BD5;&#x6709;&#x7ECF;&#x9A8C;&#x7684;&#x793E;&#x62DB;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x4E5F;&#x662F;&#x4E00;&#x76F4;&#x79C9;&#x6301;&#x7684;&#x3002; 4. &#x51C6;&#x5907;&#x597D;&#x7EDF;&#x4E00;&#x7684;&#x8BC4;&#x4EF7;&#x7EF4;&#x5EA6;&#x4EE5;&#x53CA;&#x6BCF;&#x4EBA;&#x4E00;&#x5F20;&#x8BC4;&#x4EF7;&#x8868;&#x683C;&#xFF0C;&#x6BCF;&#x4E2A;&#x9762;&#x8BD5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x7ACB;&#x523B;&#x5199;&#x4E0B;&#x8BC4;&#x4EF7;&#x548C;&#x8BC4;&#x5206;&#x3002;&#x8FD9;&#x662F;&#x6211;&#x7B2C;&#x4E8C;&#x6B21;&#x53BB;&#x5916;&#x5730;&#x6821;&#x62DB;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;&#x5F88;&#x5FC5;&#x8981;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x7B2C;&#x4E00;&#x6B21;&#x6821;&#x62DB;&#x6211;&#x4EEC;&#x6BCF;&#x4E2A;&#x4EBA;&#x5206;&#x56DB;&#x4E94;&#x4E2A;&#x5019;&#x9009;&#xFF0C;&#x4E00;&#x5929;&#x89C1;&#x5B8C;&#x3002;&#x5B8C;&#x6210;&#x540E;&#x5BF9;&#x6BCF;&#x4E2A;&#x4EBA;&#x7684;&#x5370;&#x8C61;&#x90FD;&#x80FD;&#x56DE;&#x5FC6;&#x8D77;&#x6765;&#x3002;&#x7B2C;&#x4E8C;&#x6B21;&#x53BB;&#x5916;&#x5730;&#x6821;&#x62DB;&#xFF0C;&#x65F6;&#x95F4;&#x975E;&#x5E38;&#x7D27;&#x5F20;&#xFF0C;&#x8FDE;&#x7EED;&#x4E24;&#x4E09;&#x5929;&#xFF0C;&#x6BCF;&#x5929;&#x8981;&#x89C1;&#x5341;&#x51E0;&#x4E2A;&#xFF0C;&#x4E00;&#x5929;&#x9762;&#x8BD5;&#x4E0B;&#x6765;&#xFF0C;&#x4E0D;&#x60F3;&#x8BF4;&#x8BDD;&#xFF0C;&#x8111;&#x5B50;&#x4E5F;&#x8F6C;&#x4E0D;&#x52A8;&#x4E86;&#x3002;&#x665A;&#x4E0A;&#x770B;&#x7ED9;&#x6BCF;&#x4E2A;&#x4EBA;&#x7559;&#x4E0B;&#x7684;&#x53EA;&#x8A00;&#x7247;&#x8BED;&#xFF0C;&#x89C9;&#x5F97;&#x6709;&#x51E0;&#x4E2A;&#x90FD;&#x4E0D;&#x9519;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x6709;&#x4E00;&#x4E9B;&#x957F;&#x5904;&#xFF0C;&#x5FC5;&#x987B;&#x5728;&#x4ED6;&#x4EEC;&#x4E2D;&#x95F4;&#x518D;&#x7B5B;&#x9009;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x5F88;&#x4E3A;&#x96BE;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x56E0;&#x4E3A;&#x7ED9;&#x6BCF;&#x4E2A;&#x4EBA;&#x7684;&#x8BC4;&#x4EF7;&#x4E0D;&#x591F;&#x5168;&#x9762;&#xFF0C;&#x5370;&#x8C61;&#x4E5F;&#x6A21;&#x7CCA;&#x4E86;&#x3002;&#x90A3;&#x6B21;&#x6821;&#x62DB;&#x7684;&#x7EA6;&#x9762;&#x4E5F;&#x662F;&#x9762;&#x8BD5;&#x5B98;&#x81EA;&#x5DF1;&#x7EA6;&#xFF0C;&#x5BF9;&#x7740;&#x5341;&#x51E0;&#x4EBA;&#x7684;&#x540D;&#x5355;&#xFF0C;&#x6709;&#x7684;&#x7535;&#x8BDD;&#x6CA1;&#x4EBA;&#x63A5;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x5408;&#x9002;&#x9700;&#x8981;&#x8C03;&#x6574;&#xFF0C;&#x6709;&#x7684;&#x6572;&#x5B9A;&#x4E86;&#x65F6;&#x95F4;&#xFF0C;&#x540E;&#x6765;&#x53C8;&#x6253;&#x6765;&#x7535;&#x8BDD;&#x95EE;&#x80FD;&#x5426;&#x8C03;&#x6574;&#x7684;&#x3002;&#x5982;&#x679C;&#x4E8B;&#x5148;&#x6CA1;&#x6709;&#x505A;&#x597D;&#x4E00;&#x4E2A;&#x6E05;&#x6670;&#x7684;&#x8868;&#x683C;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x6655;&#x6389;&#x3002;&#x6240;&#x4EE5;&#x4ECE;&#x90A3;&#x6B21;&#x4EE5;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x4E00;&#x5929;&#x5B89;&#x6392;&#x591A;&#x4E2A;&#x9762;&#x8BD5;&#xFF0C;&#x6211;&#x4F1A;&#x51C6;&#x5907;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x8868;&#x683C;&#xFF1A; &#x59D3;&#x540D; &#x8BA1;&#x5212;&#x65F6;&#x95F4; &#x786E;&#x5B9A;&#x65F6;&#x95F4; &#x5F20;&#x4E09; 10:00~10:45 &#x674E;&#x56DB; 10:55~11:40 ... ... &#x5728;&#x4E24;&#x4E2A;&#x9762;&#x8BD5;&#x4E4B;&#x95F4;&#x7559;&#x51FA;10&#x5206;&#x949F;&#x7ED9;&#x6BCF;&#x4E2A;&#x4EBA;&#x5199;&#x4E0B;&#x8BE6;&#x7EC6;&#x7684;&#x8BC4;&#x8BED;&#x548C;&#x6253;&#x5206;&#x3002;&#x6240;&#x8C13;&#x8BE6;&#x7EC6;&#x7684;&#x8BC4;&#x8BED;&#xFF0C;&#x662F;&#x6307;&#x5728;&#x7EDF;&#x4E00;&#x7684;&#x8BC4;&#x4EF7;&#x4F53;&#x7CFB;&#x4E2D;&#xFF0C;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x5B50;&#x9879;&#x7684;&#x5206;&#x6570;&#x3002;&#x5728;3&#x4E2D;&#x8BF4;&#x8FC7;&#xFF0C;&#x5BF9;&#x4E8E;&#x5E94;&#x5C4A;&#x751F;&#xFF0C;&#x4E2A;&#x4F53;&#x5DEE;&#x5F02;&#x53EF;&#x80FD;&#x975E;&#x5E38;&#x5927;&#xFF0C;&#x6211;&#x7ED9;&#x6BCF;&#x4E2A;&#x4EBA;&#x95EE;&#x7684;&#x95EE;&#x9898;&#x90FD;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x8BC4;&#x4EF7;&#x7684;&#x7EF4;&#x5EA6;&#x5E94;&#x8BE5;&#x662F;&#x7EDF;&#x4E00;&#x7684;&#x3002;&#x6BD4;&#x5982;&#xFF1A;&#x6280;&#x672F;&#x80FD;&#x529B;&#x2014;&#x2014;&#x5BF9;&#x4E8E;&#x505A;&#x8FC7;&#x7684;&#x9879;&#x76EE;&#x80FD;&#x5426;&#x5F88;&#x6E05;&#x6670;&#x5730;&#x8BB2;&#x51FA;&#x6765;&#xFF0C;&#x5BF9;&#x6280;&#x672F;&#x96BE;&#x70B9;&#x7684;&#x56DE;&#x7B54;&#x662F;&#x5426;&#x6EE1;&#x610F;&#xFF1B;&#x534F;&#x4F5C;&#x80FD;&#x529B;&#x2014;&#x2014;&#x5BF9;&#x4E8E;&#x548C;&#x81EA;&#x5DF1;&#x63A5;&#x53E3;&#x7684;&#x90E8;&#x5206;&#x662F;&#x5426;&#x80FD;&#x6E05;&#x6670;&#x5730;&#x8BB2;&#x51FA;&#x6765;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E0A;&#x6E38;&#x7684;&#x76EE;&#x6807;&#x662F;&#x5426;&#x6E05;&#x6670;&#xFF0C;&#x5BF9;&#x4E8E;&#x5411;&#x4E0B;&#x6E38;&#x7684;&#x8F93;&#x51FA;&#x662F;&#x5426;&#x987A;&#x7545;&#xFF1B;&#x6C9F;&#x901A;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#xFF0C;&#x7B49;&#x7B49;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x8BC4;&#x5206;&#x4F53;&#x7CFB;&#x4E0B;&#xFF0C;&#x6BCF;&#x4E2A;&#x9762;&#x8BD5;&#x5B8C;&#x7ACB;&#x523B;&#x7ED9;&#x6BCF;&#x4E2A;&#x4EBA;&#x6253;&#x5206;&#x3002;&#x8FD9;&#x6837;&#x4E00;&#x5929;&#x7684;&#x9762;&#x8BD5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x7ED3;&#x8BBA;&#x5C31;&#x51FA;&#x6765;&#x4E86;&#x3002; &#x5173;&#x4E8E;&#x9762;&#x8BD5;&#x98CE;&#x683C; &#x6211;&#x559C;&#x6B22;&#x8F7B;&#x677E;&#x3001;&#x4EB2;&#x5207;&#x7684;&#x9762;&#x8BD5;&#x98CE;&#x683C;&#x3002;&#x8FD9;&#x662F;&#x7ECF;&#x8FC7;&#x591A;&#x6B21;&#x5404;&#x79CD;&#x5C1D;&#x8BD5;&#x4EE5;&#x540E;&#xFF0C;&#x6700;&#x8BA9;&#x6211;&#x8212;&#x670D;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x524D;&#x6587;&#x8BF4;&#x8FC7;&#xFF0C;&#x5F88;&#x591A;&#x9762;&#x8BD5;&#x8005;&#xFF0C;&#x6709;&#x7684;&#x5C3D;&#x7BA1;&#x5DF2;&#x7ECF;&#x662F;&#x591A;&#x5E74;&#x804C;&#x573A;&#x8001;&#x5175;&#xFF0C;&#x53EF;&#x9762;&#x5BF9;&#x5E94;&#x8058;&#x8FD8;&#x662F;&#x5F88;&#x7D27;&#x5F20;&#xFF0C;&#x9762;&#x5BF9;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x518D;&#x589E;&#x52A0;&#x538B;&#x529B;&#x5C31;&#x591A;&#x4F59;&#x4E86;&#x3002;&#x6709;&#x4E9B;&#x4F18;&#x79C0;&#x7684;&#x5019;&#x9009;&#xFF0C;&#x6211;&#x559C;&#x6B22;&#x591A;&#x804A;&#x51E0;&#x53E5;&#xFF0C;&#x6700;&#x597D;&#x80FD;&#x8BA9;&#x5F7C;&#x6B64;&#x653E;&#x4E0B;&#x8003;&#x8BD5;&#x95EE;&#x7B54;&#x5F0F;&#x7684;&#x6212;&#x5FC3;&#xFF0C;&#x7528;&#x6700;&#x672C;&#x8272;&#x7684;&#x6C9F;&#x901A;&#x65B9;&#x5F0F;&#xFF0C;&#x591A;&#x95EE;&#x4E00;&#x4E9B;&#x6269;&#x5C55;&#x7684;&#x8BDD;&#x9898;&#xFF0C;&#x5BF9;&#x81EA;&#x5DF1;&#x4E5F;&#x662F;&#x6536;&#x83B7;&#x3002;&#x5982;&#x679C;&#x4F60;&#x603B;&#x662F;&#x7AEF;&#x7740;&#xFF0C;&#x628A;&#x81EA;&#x5DF1;&#x5F53;&#x505A;&#x8003;&#x5B98;&#x9AD8;&#x9AD8;&#x5728;&#x4E0A;&#xFF0C;&#x4F60;&#x7684;&#x5DEE;&#x9519;&#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x8BA9;&#x4F60;&#x9677;&#x5165;&#x5C34;&#x5C2C;&#xFF0C;&#x5BFC;&#x81F4;&#x6700;&#x5B89;&#x5168;&#x7684;&#x9762;&#x8BD5;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x603B;&#x95EE;&#x81EA;&#x5DF1;&#x719F;&#x6089;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5BF9;&#x65B9;&#x719F;&#x6089;&#x7684;&#x9886;&#x57DF;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x4E8B;&#x513F;&#x5C31;&#x6CA1;&#x610F;&#x601D;&#x4E86;&#xFF0C;&#x4E5F;&#x4E0D;&#x7B26;&#x5408;&#x6211;&#x7684;&#x9762;&#x4EBA;&#x76EE;&#x7684;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x9762;&#x8BD5;&#x6709;&#x70B9;&#x50CF;&#x91C7;&#x8BBF;&#xFF0C;&#x7528;&#x4E00;&#x79CD;&#x597D;&#x5947;&#x7684;&#x6001;&#x5EA6;&#x4E0D;&#x65AD;&#x5F15;&#x5BFC;&#x5BF9;&#x65B9;&#x8BF4;&#x51FA;&#x8FC7;&#x5F80;&#x7684;&#x7ECF;&#x5386;&#x3002; &#x548C;&#x91C7;&#x8BBF;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x4F60;&#x8981;&#x4E0D;&#x65AD;&#x5730;&#x63E3;&#x6469;&#x9762;&#x8BD5;&#x8005;&#x63CF;&#x8FF0;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x5426;&#x5BA2;&#x89C2;&#xFF0C;&#x4ED6;&#x53EF;&#x80FD;&#x628A;&#x522B;&#x4EBA;&#x505A;&#x7684;&#x4E8B;&#x513F;&#x90FD;&#x63FD;&#x5230;&#x81EA;&#x5DF1;&#x8EAB;&#x4E0A;&#x4E86;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x4E0D;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#xFF0C;&#x80FD;&#x628A;&#x522B;&#x4EBA;&#x7684;&#x7ECF;&#x5386;&#x5438;&#x7EB3;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x6210;&#x957F;&#xFF0C;&#x8BF4;&#x660E;&#x5B66;&#x4E60;&#x80FD;&#x529B;&#x5F3A;&#xFF0C;&#x5173;&#x952E;&#x662F;&#x4F60;&#x53EA;&#x662F;&#x5634;&#x4E0A;&#x8BF4;&#x8BF4;&#x8FD8;&#x662F;&#x7528;&#x5FC3;&#x53BB;&#x6210;&#x957F;&#x4E86;&#x3002;&#x8FD9;&#x662F;&#x9762;&#x8BD5;&#x5B98;&#x5FC5;&#x987B;&#x5206;&#x8FA8;&#x7684;&#x771F;&#x76F8;&#x3002;&#x8FD9;&#x4E2A;&#x771F;&#x76F8;&#x6700;&#x597D;&#x4E0D;&#x8981;&#x62C6;&#x7A7F;&#xFF0C;&#x9762;&#x8BD5;&#x5B98;&#x7684;&#x76EE;&#x7684;&#x4E0D;&#x662F;&#x5BF9;&#x5CD9;&#xFF0C;&#x800C;&#x662F;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x5730;&#x8BA9;&#x5019;&#x9009;&#x8BF4;&#x51FA;&#x4F60;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x7ECF;&#x5386;&#x3002;&#x62C6;&#x7A7F;&#x4E86;&#x7EDD;&#x5BF9;&#x5F71;&#x54CD;&#x540E;&#x9762;&#x7684;&#x6C9F;&#x901A;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x60F3;&#x5C31;&#x6B64;&#x6253;&#x4F4F;&#xFF0C;&#x90A3;&#x4E5F;&#x662F;&#x6253;&#x4F4F;&#x5C31;&#x662F;&#x4E86;&#x3002;&#x6211;&#x89C9;&#x5F97;&#x9762;&#x8BD5;&#x53C8;&#x6709;&#x70B9;&#x50CF;&#x5ED6;&#x51E1;&#x6F14;&#x7684;&#x300A;&#x5E08;&#x7236;&#x300B;&#x91CC;&#x7684;&#x6B66;&#x827A;&#x5207;&#x78CB;&#xFF0C;&#x53CC;&#x65B9;&#x8FD1;&#x8EAB;&#x5229;&#x5203;&#x8FC7;&#x62DB;&#xFF0C;&#x6BEB;&#x53D1;&#x65E0;&#x4F24;&#x70B9;&#x5230;&#x4E3A;&#x6B62;&#xFF0C;&#x51E0;&#x4E2A;&#x56DE;&#x5408;&#x65C1;&#x4EBA;&#x770B;&#x6765;&#x7535;&#x5149;&#x706B;&#x77F3;&#xFF0C;&#x5BF9;&#x624B;&#x7684;&#x6BB5;&#x4F4D;&#x5404;&#x81EA;&#x5DF2;&#x662F;&#x5FC3;&#x77E5;&#x809A;&#x660E;&#x3002; &#x4E5F;&#x6709;&#x9047;&#x5230;&#x4E0D;&#x4E56;&#x7684;&#xFF0C;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x662F;&#x6CB9;&#xFF0C;&#x95EE;&#x4E0D;&#x51FA;&#x6240;&#x4EE5;&#x7136;&#x6765;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x5019;&#x9009;&#x5176;&#x5B9E;&#x7279;&#x522B;&#x5730;&#x4E0D;&#x806A;&#x660E;&#xFF0C;&#x4F60;&#x6765;&#x5E72;&#x561B;&#x6765;&#x4E86;&#xFF0C;&#x4F60;&#x4EE5;&#x4E3A;&#x8BA9;&#x9762;&#x8BD5;&#x5B98;&#x95EE;&#x4E0D;&#x51FA;&#x4F60;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x4F60;&#x5C31;&#x8D62;&#x4E86;&#x4E48;&#xFF1F;&#x9762;&#x8BD5;&#x5B98;&#x780D;&#x4EBA;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x7406;&#x7531;&#x7684;&#x3002;&#x8FC7;&#x53BB;&#x9047;&#x5230;&#x8FD9;&#x79CD;&#x98CE;&#x683C;&#x7684;&#xFF0C;&#x6211;&#x4F1A;&#x6709;&#x610F;&#x5201;&#x96BE;&#x4E00;&#x4E0B;&#xFF0C;&#x7ED9;&#x70B9;&#x989C;&#x8272;&#x770B;&#x770B;~~ &#x540E;&#x6765;&#x5C31;&#x4E0D;&#x8FD9;&#x4E48;&#x5E72;&#x4E86;&#xFF0C;&#x7D27;&#x6263;&#x6211;&#x7684;&#x76EE;&#x6807;&#x2014;&#x2014;&#x6211;&#x662F;&#x6765;&#x9009;&#x4EBA;&#xFF0C;&#x4E0D;&#x662F;&#x6597;&#x6C14;&#x7684;&#x3002;&#x5982;&#x679C;&#x603B;&#x4F53;&#x90FD;&#x662F;&#x8FD9;&#x4E48;&#x4E2A;&#x98CE;&#x683C;&#xFF0C;&#x6211;&#x4F1A;&#x5C3D;&#x5FEB;&#x5BA2;&#x5BA2;&#x6C14;&#x6C14;&#x5730;&#x7ED3;&#x675F;&#x9762;&#x8BD5;&#xFF0C;&#x9001;&#x5BA2;&#x3002;&#x5982;&#x679C;&#x53EA;&#x662F;&#x90E8;&#x5206;&#x8BDD;&#x9898;&#x662F;&#x8FD9;&#x6837;&#xFF0C;&#x5F88;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x95EE;&#x5230;&#x4E86;&#x4E0D;&#x662F;&#x81EA;&#x5DF1;&#x505A;&#x7684;&#xFF0C;&#x5374;&#x6CA1;&#x6709;&#x5403;&#x900F;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5728;&#x6CA1;&#x6709;&#x51B3;&#x5B9A;&#x7ED3;&#x675F;&#x9762;&#x8BD5;&#x4E4B;&#x524D;&#xFF0C;&#x8FD9;&#x7C7B;&#x8BDD;&#x9898;&#x4E00;&#x5B9A;&#x8981;&#x95EE;&#x900F;&#x4E86;&#x3002;&#x56E0;&#x4E3A;&#x65E2;&#x7136;&#x4E0D;&#x60F3;&#x7ED3;&#x675F;&#x9762;&#x8BD5;&#xFF0C;&#x8BF4;&#x660E;&#x8FD9;&#x4EBA;&#x6709;&#x8BA9;&#x4F60;&#x6EE1;&#x610F;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x90A3;&#x4ED6;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x5728;&#x522B;&#x7684;&#x5730;&#x513F;&#x5F53;&#x5927;&#x5C3E;&#x5DF4;&#x72FC;&#x5462;&#xFF1F;&#x53EF;&#x80FD;&#x662F; &#x8BA9;&#x4F60;&#x6EE1;&#x610F;&#x7684;&#x533A;&#x57DF;&#x8FD8;&#x4E0D;&#x591F;&#x5927;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x4ED6;&#x5BF9;&#x90A3;&#x7247;&#x533A;&#x57DF;&#x8FD8;&#x4E0D;&#x591F;&#x81EA;&#x4FE1;&#xFF0C;&#x90A3;&#x771F;&#x7684;&#x80FD;&#x8BA9;&#x4EBA;&#x6EE1;&#x610F;&#x5417;&#xFF1F;&#x4E5F;&#x53EF;&#x80FD;&#x4ED6;&#x4E60;&#x60EF;&#x4E0D;&#x61C2;&#x88C5;&#x61C2;&#x2026;&#x2026;&#x603B;&#x4E4B;&#xFF0C;&#x8FD9;&#x4E9B;&#x53EF;&#x80FD;&#x6027;&#x90FD;&#x8981;&#x5C0F;&#x5FC3;&#x3002; &#x6700;&#x540E;&#x4E00;&#x70B9;&#xFF1A;&#x9762;&#x8BD5;&#x5B98;&#x5FC5;&#x987B;&#x4E3B;&#x5BFC;&#x9762;&#x8BD5;&#x7684;&#x6BCF;&#x4E2A;&#x70B9;&#x548C;&#x9762;&#x3002;&#x4E3B;&#x5BFC;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x4F60;&#x8981;&#x8868;&#x73B0;&#x5F97;&#x5F3A;&#x52BF;&#xFF0C;&#x8FD9;&#x8DDF;&#x524D;&#x9762;&#x8BB2;&#x7684;&#x6211;&#x559C;&#x6B22;&#x4EB2;&#x548C;&#x3001;&#x5BBD;&#x677E;&#x7684;&#x6C1B;&#x56F4;&#x662F;&#x4E0D;&#x77DB;&#x76FE;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x79CD;&#x6C1B;&#x56F4;&#x662F;&#x6211;&#x8425;&#x9020;&#x7684;&#x3002;&#x8FD9;&#x5C31;&#x597D;&#x6BD4;&#x5728;&#x91C7;&#x8BBF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x4E0D;&#x80FD;&#x8BA9;&#x88AB;&#x91C7;&#x8BBF;&#x8005;&#x5929;&#x9A6C;&#x884C;&#x7A7A;&#x4E71;&#x8BF4;&#x4E00;&#x901A;&#xFF0C;&#x4F60;&#x4E0D;&#x80FD;&#x8BA9;&#x4ED6;&#x6253;&#x5F00;&#x8BDD;&#x5323;&#x5B50;&#x6536;&#x4E0D;&#x4F4F;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x5F15;&#x5BFC;&#x4ED6;&#x7D27;&#x6263;&#x4F60;&#x60F3;&#x542C;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8BF4;&#x7740;&#x8BF4;&#x7740;&#x8DD1;&#x5230;&#x4ED6;&#x60F3;&#x8BF4;&#x7684;&#x8BDD;&#x9898;&#x4E0A;&#x53BB;&#x4E86;&#x3002;&#x6211;&#x9047;&#x5230;&#x6BD4;&#x8F83;&#x5178;&#x578B;&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF1A;&#x628A;&#x4EA7;&#x54C1;&#x7B56;&#x7565;&#x5F53;&#x505A;&#x6280;&#x672F;&#x65B9;&#x6848;&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x201C;&#x8BF7;&#x4F60;&#x4ECE;&#x6280;&#x672F;&#x89D2;&#x5EA6;&#x6765;&#x63CF;&#x8FF0;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x201D;&#xFF0C;&#x6211;&#x5FC5;&#x987B;&#x8FD9;&#x4E48;&#x6253;&#x65AD;Ta&#xFF1B;&#x6211;&#x7684;&#x95EE;&#x9898;&#x8FD8;&#x6CA1;&#x95EE;&#x5B8C;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x62A2;&#x7B54;&#xFF0C;&#x800C;&#x4E14;&#x7B54;&#x5F97;&#x5E76;&#x6CA1;&#x6263;&#x9898;&#xFF0C;&#x201C;&#x6211;&#x7684;&#x95EE;&#x9898;&#x662F;&#xFF1A;blabla&#x2026;&#x2026;&#x201D;&#x6211;&#x4F1A;&#x6253;&#x65AD;Ta&#xFF0C;&#x5E76;&#x4E14;&#x539F;&#x5C01;&#x4E0D;&#x52A8;&#x5730;&#x628A;&#x95EE;&#x9898;&#x91CD;&#x590D;&#x4E00;&#x904D;&#xFF0C;&#x8FD9;&#x5DF2;&#x7ECF;&#x662F;&#x8B66;&#x544A;&#x4E86;&#x3002; &#x6211;&#x66FE;&#x7ECF;&#x9047;&#x5230;&#x8FC7;&#x4E0D;&#x6B62;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x72C2;&#x7684;&#x5019;&#x9009;&#xFF0C;&#x90FD;&#x4E0D;&#x662F;&#x6211;&#x4E3B;&#x9762;&#xFF0C;&#x800C;&#x662F;&#x5E26;&#x7740;&#x6211;&#x4E0B;&#x9762;&#x56E2;&#x961F;&#x7684;&#x4E3B;&#x7BA1;&#xFF0C;&#x542C;&#x4ED6;&#x4EEC;&#x9762;&#x8BD5;&#xFF0C;&#x9762;&#x5B8C;&#x4E86;&#x6211;&#x4F1A;&#x7ED9;&#x51FA;&#x6211;&#x7684;&#x610F;&#x89C1;&#x3002;&#x6709;&#x4E00;&#x6B21;&#x6211;&#x5E26;&#x7684;&#x4E3B;&#x7BA1;&#x6280;&#x672F;&#x80FD;&#x529B;&#x5176;&#x5B9E;&#x5F88;&#x725B;&#xFF0C;&#x54E5;&#x4EEC;&#x662F;&#x6E05;&#x534E;&#x7684;&#x8084;&#x4E1A;&#x535A;&#x58EB;&#xFF0C;&#x6E05;&#x534E;&#x535A;&#x58EB;&#x6BD5;&#x4E1A;&#x5F88;&#x96BE;&#xFF0C;&#x71AC;&#x4E86;&#x597D;&#x591A;&#x5E74;&#x5B9E;&#x5728;&#x4E0D;&#x60F3;&#x71AC;&#x4E0B;&#x53BB;&#x4E86;&#xFF0C;&#x5C31;&#x8084;&#x4E1A;&#x4E86;&#x3002;&#x8FD9;&#x54E5;&#x4EEC;&#x6027;&#x683C;&#x7279;&#x522B;&#x6E29;&#x548C;&#xFF0C;&#x4E3A;&#x4EBA;&#x4E5F;&#x5F88;&#x4F4E;&#x8C03;&#xFF0C;&#x8BF4;&#x8BDD;&#x7684;&#x58F0;&#x97F3;&#x5F88;&#x4F4E;&#xFF0C;&#x8BBA;&#x6C14;&#x573A;&#x7684;&#x8BDD;&#xFF0C;&#x5F88;&#x5F31;&#xFF0C;&#x4F46;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x6C42;&#x52A9;&#x6765;&#x8005;&#x4E0D;&#x62D2;&#xFF0C;&#x800C;&#x4E14;&#x90FD;&#x80FD;&#x641E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x56E2;&#x961F;&#x5185;&#x90E8;&#x5F88;&#x53D7;&#x5C0A;&#x656C;&#x3002;&#x88AB;&#x9762;&#x8BD5;&#x90A3;&#x54E5;&#x4EEC;&#x80FD;&#x529B;&#x4E00;&#x822C;&#x822C;&#xFF0C;&#x4F46;&#x5F00;&#x573A;&#x4E0D;&#x5230;&#x4E94;&#x5206;&#x949F;&#x6211;&#x5C31;&#x60F3;&#x5C3D;&#x5FEB;&#x7ED3;&#x675F;&#x4E86;&#x3002;&#x90A3;&#x54E5;&#x4EEC;&#x58F0;&#x97F3;&#x5F88;&#x6D2A;&#x4EAE;&#x3001;&#x6C14;&#x573A;&#x5F88;&#x8DB3;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x88AB;&#x95EE;&#x4F4F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53CD;&#x5F39;&#x5C31;&#x5F88;&#x5927;&#xFF0C;&#x80FD;&#x629B;&#x51FA;&#x51E0;&#x4E2A;&#x53CD;&#x95EE;&#x53E5;&#x7ED9;&#x9762;&#x8BD5;&#x5B98;&#x3002;&#x800C;&#x4E14;&#x8D8A;&#x5F80;&#x540E;&#x8D8A;&#x72C2;&#xFF0C;&#x6574;&#x4E2A;&#x9762;&#x8BD5;&#x8FDB;&#x7A0B;&#x88AB;&#x4ED6;&#x4E3B;&#x5BFC;&#x4E86;&#x3002;&#x867D;&#x7136;&#x4E8B;&#x5148;&#x7EA6;&#x5B9A;&#x597D;&#x6211;&#x4E0D;&#x5E72;&#x9884;&#x9762;&#x8BD5;&#x8FC7;&#x7A0B;&#xFF0C;&#x4F46;&#x9047;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x4E3B;&#xFF0C;&#x6211;&#x5FC5;&#x987B;&#x51FA;&#x624B;&#xFF0C;&#x8FD9;&#x79CD;&#x662F;&#x6211;&#x552F;&#x4E00;&#x4F1A;&#x51FA;&#x624B;&#x6253;&#x538B;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x592A;&#x5F71;&#x54CD;&#x516C;&#x53F8;&#x7684;&#x4F53;&#x9762;&#x4E86;&#x3002;&#x4ECE;&#x90A3;&#x4EE5;&#x540E;&#xFF0C;&#x6211;&#x8981;&#x6C42;&#x6211;&#x7684;&#x4E3B;&#x7BA1;&#x4EEC;&#x5728;&#x9762;&#x8BD5;&#x8FC7;&#x7A0B;&#x4E2D;&#x58F0;&#x97F3;&#x5FC5;&#x987B;&#x6D2A;&#x4EAE;&#xFF0C;&#x4E0D;&#x80FD;&#x6BD4;&#x5BF9;&#x65B9;&#x4F4E;&#xFF1B;&#x4E0D;&#x7BA1;&#x81EA;&#x5DF1;&#x8BF4;&#x8BDD;&#x8FD8;&#x662F;&#x5BF9;&#x65B9;&#x8BF4;&#x8BDD;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53CC;&#x76EE;&#x90FD;&#x8981;&#x76F4;&#x89C6;&#x5BF9;&#x65B9;&#xFF1B;&#x624B;&#x4E0A;&#x4E0D;&#x8981;&#x6709;&#x5C0F;&#x52A8;&#x4F5C;&#xFF0C;&#x5C24;&#x5176;&#x4E0D;&#x8981;&#x6263;&#x7B14;&#xFF1B;&#x5BF9;&#x65B9;&#x56DE;&#x7B54;&#x5B8C;&#x95EE;&#x9898;&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x8981;&#x957F;&#x65F6;&#x95F4;&#x5730;&#x6CA1;&#x6709;&#x54CD;&#x5E94;&#x51FA;&#x73B0;&#x51B7;&#x573A;&#x2026;&#x2026;&#x8FD9;&#x4E9B;&#x770B;&#x8D77;&#x6765;&#x66F4;&#x591A;&#x7684;&#x662F;&#x6C9F;&#x901A;&#x793C;&#x4EEA;&#xFF0C;&#x5374;&#x4E0D;&#x662F;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x80FD;&#x505A;&#x5230;&#x3002;&#x51E0;&#x4E2A;&#x7F3A;&#x70B9;&#x7EC4;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x5C31;&#x4F1A;&#x8BA9;&#x9762;&#x8BD5;&#x5B98;&#x770B;&#x8D77;&#x6765;&#x4E0D;&#x50CF;&#x9762;&#x8BD5;&#x5B98;&#xFF0C;&#x8FDB;&#x800C;&#x8BA9;&#x4F60;&#x5931;&#x53BB;&#x5BF9;&#x9762;&#x8BD5;&#x573A;&#x9762;&#x7684;&#x4E3B;&#x5BFC;&#x529B;&#x3002;&#x786E;&#x5B9E;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x4EBA;&#xFF0C;&#x4E1A;&#x52A1;&#x51FA;&#x8272;&#x4E86;&#x90FD;&#x9002;&#x5408;&#x62C9;&#x6765;&#x5E72;&#x9762;&#x8BD5;&#x8FD9;&#x6D3B;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>招聘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello Android —— 自下而上的探索]]></title>
    <url>%2F2016%2F08%2F21%2F2016%2F0814HelloAndroid%2F</url>
    <content type="text"><![CDATA[&#x8DDF;&#x7740;&#x300A;Android&#x7CFB;&#x7EDF;&#x6E90;&#x4EE3;&#x7801;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#x7B2C;2&#x7AE0;&#xFF0C;&#x6211;&#x60F3;&#x628A;&#x4ECE;&#x9A71;&#x52A8;&#x5C42;&#x5230;&#x786C;&#x4EF6;&#x62BD;&#x8C61;&#x5C42;&#x5230;frameworks&#x5C42;&#x518D;&#x5230;&#x5E94;&#x7528;&#x5C42;&#x5404;&#x5C42;&#x7684;&#x5DE5;&#x4F5C;&#x5B8C;&#x6574;&#x5730;&#x505A;&#x4E00;&#x904D;&#x3001;&#x8C03;&#x4E00;&#x904D;&#x3002;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x4E00;&#x4E9B;&#x79EF;&#x7D2F;&#xFF0C;&#x6211;&#x5E0C;&#x671B;&#x5728;Android&#x6700;&#x65B0;&#x7684;&#x6E90;&#x7801;&#x4E0A;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;AndroidStudio&#x80FD;&#x7F16;&#x8BD1;&#x3001;&#x8C03;&#x8BD5;&#x5F97;&#x5230;&#x6BCF;&#x4E00;&#x5C42;&#x3002;&#x6309;&#x7167;&#x6211;&#x4E0B;&#x4E00;&#x6B65;&#x8BA1;&#x5212;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x6DF1;&#x5165;&#x7814;&#x7A76;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#xFF0C;&#x5E0C;&#x671B;&#x5728;&#x5F00;&#x5C55;&#x8FD9;&#x4E00;&#x6B65;&#x5DE5;&#x4F5C;&#x4E4B;&#x524D;&#xFF0C;&#x80FD;&#x591F;&#x5BF9;Android&#x7684;&#x683C;&#x5C40;&#x6709;&#x66F4;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x7406;&#x89E3;&#xFF0C;&#x5BF9;AndroidStudio&#x7684;&#x4F7F;&#x7528;&#x80FD;&#x591F;&#x66F4;&#x5A34;&#x719F;&#x3002; &#x9996;&#x5148;&#x6211;&#x4F1A;&#x6309;&#x7167;&#x300A;Android&#x7CFB;&#x7EDF;&#x6E90;&#x4EE3;&#x7801;&#x60C5;&#x666F;&#x5206;&#x6790;&#x300B;&#xFF0C;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E0B;&#xFF0C;&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x628A;&#x5404;&#x5C42;&#x5DE5;&#x4F5C;&#x8DD1;&#x4E00;&#x904D;&#x3002;&#x987A;&#x9053;&#x628A;&#x7F16;&#x8BD1;&#x4E0D;&#x8FC7;&#x3001;&#x9519;&#x8BEF;&#x7684;&#x5730;&#x65B9;&#x90FD;&#x4FEE;&#x6B63;&#x4E86;&#x3002;&#x5C14;&#x540E;&#x518D;&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#xFF0C;&#x9010;&#x6B65;&#x628A;&#x5404;&#x5C42;&#x5DE5;&#x4F5C;&#x5207;&#x6362;&#x5230;AndroidStudio&#x4E0A;&#x6765;&#x3002;&#x8BA1;&#x5212;&#x7528;&#x4E24;&#x5468;&#x65F6;&#x95F4;&#x641E;&#x5B9A;&#x3002;&#x4EE3;&#x7801;&#x5C31;&#x653E;&#x5728;androidex/hello-android&#x4E0B;&#x3002; androidex&#x7684;&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819&#x251C;&#x2500;&#x2500;android-6.0.1_r11 // Android&#x6E90;&#x7801;&#x251C;&#x2500;&#x2500;androidex &#x251C;&#x2500;&#x2500;... ... &#x251C;&#x2500;&#x2500;setup.sh // &#x8C03;&#x7528;&#x6BCF;&#x4E2A;&#x5B50;&#x9879;&#x76EE;&#x7684;setup.sh&#xFF0C;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C; &#x2514;&#x2500;&#x2500;hello-android &#x251C;&#x2500;&#x2500;hello-android-driver // &#x9A71;&#x52A8;&#x5C42; &#x2502; &#x2514;&#x2500;&#x2500;... ... &#x2502; &#x251C;&#x2500;&#x2500;ha-driver-checker // &#x9A8C;&#x8BC1;&#x9A71;&#x52A8;&#x5C42;dev&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x63A5;&#x53E3;&#x7684;&#x5E94;&#x7528;&#x5C42;&#x4EE3;&#x7801; &#x2502; &#x2514;&#x2500;&#x2500;... ... &#x2502; &#x251C;&#x2500;&#x2500;hello-android-hal // &#x786C;&#x4EF6;&#x62BD;&#x8C61;&#x5C42; &#x2502; &#x2514;&#x2500;&#x2500;... ... &#x2502; &#x251C;&#x2500;&#x2500;hello-android-service // &#x786C;&#x4EF6;&#x8BBF;&#x95EE;&#x670D;&#x52A1; &#x2502; &#x2514;&#x2500;&#x2500;... ... &#x2502; &#x2514;&#x2500;&#x2500;hello-android-app // &#x5E94;&#x7528;&#x5C42; &#x2514;&#x2500;&#x2500;... ... &#x5728;&#x7F16;&#x8BD1;&#x4E4B;&#x524D;&#x8981;&#x505A;&#x7684;&#x56FA;&#x5B9A;&#x64CD;&#x4F5C;&#xFF1A; 12345678$ cd android-6.0.1_r11$ source build/envsetup.sh$ lunch aosp_arm-eng$ cd kernel/goldfish$ export ARCH=arm$ export SUBARCH=arm$ export CROSS_COMPILE=arm-eabi-$ export PATH=/Volumes/android-6.0.1_r11g/android-6.0.1_r11/prebuilts/gcc/darwin-x86/arm/arm-eabi-4.8/bin:$PATH &#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#xFF0C;&#x8FD0;&#x884C;emulator&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E0A;&#x53C2;&#x6570;-show-kernel -debug all&#x4EE5;&#x5F00;&#x542F;log&#x8F93;&#x51FA;&#xFF0C;&#x52A0;&#x4E0A;-kernel&#x53C2;&#x6570;&#x4EE5;&#x6307;&#x5B9A;&#x5185;&#x6838;&#x955C;&#x50CF;&#xFF1A; 1$ emulator -kernel kernel/goldfish/arch/arm/boot/zImage -show-kernel -debug all &amp; &#x9A71;&#x52A8;&#x5C42; &#x9A71;&#x52A8;&#x5C42;&#x7684;&#x4EE3;&#x7801;&#x5728;androidex/hello-android/hello-android-driver/&#x3002; &#x7ED3;&#x6784;&#x4E3A;&#xFF1A; 123456hello-android-driver &#x251C;&#x2500;&#x2500;setup.sh // &#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#x5230;android-6.0.1_r11&#xFF0C;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#x251C;&#x2500;&#x2500;hello-android.c // &#x251C;&#x2500;&#x2500;hello-android.h // &#x251C;&#x2500;&#x2500;Kconfig // &#x5185;&#x6838;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4F9B;make menuconfig&#x4F7F;&#x7528;&#xFF0C;&#x751F;&#x6210;.config&#x2514;&#x2500;&#x2500;Makefile &#x6267;&#x884C;setup.sh&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316; 12$ cd androidex$ sh setup.sh hello-android-driver/setup.sh&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#xFF1A; kernel/goldfish/drivers/hello-android -&gt; androidex/hello-android/hello-android-driver/&#x3002; &#x8FD9;&#x4E48;&#x505A;&#x7684;&#x76EE;&#x7684;&#x662F;&#x8BA9;Android&#x6E90;&#x7801;&#x548C;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x5206;&#x79BB;&#x5F00;&#xFF0C;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x5168;&#x90FD;&#x96C6;&#x4E2D;&#x5728;androidex&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x5B8C;&#x6574;&#x5730;&#x63D0;&#x4EA4;&#x5230;GitHub&#x4E0A;&#x53BB;&#x3002;&#x968F;Android&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x7684;&#x9700;&#x8981;&#xFF0C;androidex&#x6563;&#x843D;&#x5230;&#x6E90;&#x7801;&#x6811;&#x4E2D;&#xFF0C;&#x5EFA;&#x4E2A;&#x8F6F;&#x94FE;&#x5C31;&#x786E;&#x4FDD;Android&#x6E90;&#x7801;&#x6811;&#x4E0B;&#x603B;&#x80FD;&#x8BBF;&#x95EE;&#x5230;&#x6700;&#x65B0;androidex&#x4E86;&#x3002; &#x4FEE;&#x6539;&#x5185;&#x6838;Kconfig&#x6587;&#x4EF6; &#x5728;&#x6587;&#x4EF6; kernel/goldfish/drivers/Kconfig &#x5C3E;&#x90E8;&#x8FFD;&#x52A0;&#xFF1A; 1source drivers/hello-android/Kconfig &#x5B83;&#x7684;&#x539F;&#x7406;&#x548C;&#x6211;&#x524D;&#x9762;&#x505A;androidex/setup.sh&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5185;&#x6838;&#x901A;&#x8FC7;&#x8BE5;Kconfig&#x603B;&#x6587;&#x4EF6;&#x77E5;&#x9053;&#x90FD;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x54EA;&#x4E9B;&#x5B50;&#x6A21;&#x5757;&#xFF0C;&#x5177;&#x4F53;&#x5B50;&#x6A21;&#x5757;&#x7684;&#x7F16;&#x8BD1;&#x89C4;&#x5219;&#xFF0C;&#x5219;&#x5B58;&#x653E;&#x5728;hello-android/Kconfig&#x4E2D;&#x3002; Android&#x6E90;&#x7801;&#x662F;&#x4E0D;&#x5305;&#x542B;&#x5185;&#x6838;&#x6E90;&#x7801;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x72EC;&#x7ACB;&#x4E0B;&#x8F7D;&#x3002;&#x6211;&#x4ECE;&#x8FD9;&#x91CC;&#x4E0B;&#x5230;&#x7684;Android&#x5185;&#x6838;&#x6E90;&#x7801;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x4E86;3.4&#x5206;&#x652F;&#x3002; &#x4FEE;&#x6539;&#x5185;&#x6838;Makefile&#x6587;&#x4EF6; &#x5728;&#x6587;&#x4EF6; kernel/goldfish/drivers/Makefile &#x5C3E;&#x90E8;&#x6DFB;&#x52A0;&#xFF1A; 1obj-$(CONFIG_HA) += hello-android/ &#x5176;&#x4E2D;obj-$()&#x62EC;&#x53F7;&#x5185;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x524D;&#x534A;&#x90E8;&#x5206;CONFIG_&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x540E;&#x534A;&#x90E8;&#x5206;&#x662F;drivers/hello-android/Kconfig&#x7B2C;&#x4E00;&#x884C;&#x4E2D;config&#x7684;&#x540D;&#x5B57;&#x3002; &#x7F16;&#x8BD1;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x6A21;&#x5757; &#x5148;&#x8FD0;&#x884C;make menuconfig&#xFF08;&#x6CE8;&#x610F;&#xFF1A;android6.0+goldfish3.4&#xFF0C;&#x9ED8;&#x8BA4;&#x8FD0;&#x884C;make menuconfig&#x6709;&#x5751;&#xFF0C;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x8BE6;&#x89C1;&#x8FD9;&#x91CC;&#xFF09;&#xFF1A; 12$ cd kernel/goldfish$ make menuconfig &#x5B8C;&#x6210;&#x5982;&#x4E0B;&#x8BBE;&#x7F6E;&#xFF1A; 12345678[*] Enable load module support ---&gt; &#x5141;&#x8BB8;&#x5185;&#x6838;&#x652F;&#x6301;&#x52A8;&#x6001;&#x52A0;&#x8F7D;&#x6A21;&#x5757; [] Forced module loading [*] Module unloading [] Forced module unloading [*] Module versioning support [*] Source checksum for all modulesDevice Drivers ---&gt; &lt;M&gt; Hello Android Driver &#x6307;&#x5B9A;&#x4EE5;&#x6A21;&#x5757;&#x7684;&#x65B9;&#x5F0F;&#x7F16;&#x8BD1; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x4E86;&#xFF1A; 12$ cd kernel/goldfish$ make -j4 &#x65B0;&#x7F16;&#x8BD1;&#x7684;&#x5185;&#x6838;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#x88AB;&#x4FDD;&#x5B58;&#x5728;kernel/goldfish/arch/arm/boot/zImage&#x3002; &#x52A0;&#x8F7D;&#x5E76;&#x8FD0;&#x884C;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x6A21;&#x5757; &#x542F;&#x52A8;&#x6A21;&#x62DF;&#x5668;&#x5E76;&#x4F7F;&#x7528;&#x521A;&#x521A;&#x7F16;&#x8BD1;&#x7684;&#x65B0;&#x5185;&#x6838;&#xFF1A; 1$ emulator -kernel kernel/goldfish/arch/arm/boot/zImage &amp; &#x628A;&#x521A;&#x521A;&#x7F16;&#x8BD1;&#x7684;ko&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x91CC;&#xFF1A; 1$ adb push drivers/hello-android/hello-android.ko /data &#x52A0;&#x8F7D;ko&#x6A21;&#x5757;&#xFF1A; 1adb shell insmod /data/hello-android.ko &#x5217;&#x51FA;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x597D;&#x7684;&#x6A21;&#x5757;&#xFF1A; 123$ adb shell lsmodModule Size Used byhello_android 2466 0 &#x8868;&#x660E;hello_android&#x5DF2;&#x7ECF;&#x88AB;&#x6210;&#x529F;&#x52A0;&#x8F7D;&#x4E86;&#x3002; &#x9A8C;&#x8BC1;&#x9A71;&#x52A8;&#x6A21;&#x5757;&#x5404;&#x7C7B;&#x63A5;&#x53E3; &#x9A8C;&#x8BC1;proc&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x63A5;&#x53E3; &#x9A8C;&#x8BC1;&#x865A;&#x62DF;&#x8BBE;&#x5907;ha&#x7684;proc&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x63A5;&#x53E3;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x8868;&#x660E;&#x63A5;&#x53E3;&#x6B63;&#x5E38;&#xFF1A; 12345$ adb shell cat proc/ha0$ adb shell &quot;echo &apos;1&apos; &gt; /proc/ha&quot;$ adb shell cat proc/ha1 &#x9A8C;&#x8BC1;devfs&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x63A5;&#x53E3; &#x9A8C;&#x8BC1;&#x865A;&#x62DF;&#x8BBE;&#x5907;ha&#x7684;devfs&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x63A5;&#x53E3;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x8868;&#x660E;&#x63A5;&#x53E3;&#x6B63;&#x5E38;&#xFF1A; 12345$ adb shell &quot;cd /sys/class/ha/ha &amp;&amp; cat value&quot;1$ adb shell &quot;cd /sys/class/ha/ha &amp;&amp; echo &apos;3&apos; &gt; value&quot;$ adb shell &quot;cd /sys/class/ha/ha &amp;&amp; cat value&quot;3 &#x9A8C;&#x8BC1;dev&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x63A5;&#x53E3; &#x9A8C;&#x8BC1;&#x865A;&#x62DF;&#x8BBE;&#x5907;ha&#x7684;dev&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x8BBF;&#x95EE;&#x63A5;&#x53E3;&#x7565;&#x9EBB;&#x70E6;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x8BFB;/&#x5199;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x7F16;&#x4E00;&#x4E2A;&#x5C0F;&#x7A0B;&#x5E8F;&#x6765;&#x9A8C;&#x8BC1;&#xFF0C;&#x6E90;&#x7801;&#x5728;androidex/hello-android/ha-driver-checker&#x3002; &#x6267;&#x884C;androidex/setup.sh&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#xFF1A; external/ha-driver-checker -&gt; androidex/hello-android/ha-driver-checker &#x7136;&#x540E;&#x5355;&#x72EC;&#x7F16;&#x8BD1;ha-driver-checker&#xFF1A; 12345678$ mmm external/ha-driver-checker... ...target Executable: ha (out/debug/target/product/generic/obj/EXECUTABLES/ha_intermediates/LINKED/ha)target Unpacked: ha (out/debug/target/product/generic/obj/EXECUTABLES/ha_intermediates/PACKED/ha)target Symbolic: ha (out/debug/target/product/generic/symbols/system/bin/ha)Export includes file: external/ha-driver-checker/Android.mk -- out/debug/target/product/generic/obj/EXECUTABLES/ha_intermediates/export_includestarget Strip: ha (out/debug/target/product/generic/obj/EXECUTABLES/ha_intermediates/ha)Install: out/debug/target/product/generic/system/bin/ha &#x8F93;&#x51FA;&#x4FE1;&#x606F;&#x5DF2;&#x7ECF;&#x6E05;&#x695A;&#x5730;&#x5199;&#x660E;&#x4E86;&#x751F;&#x6210;&#x6587;&#x4EF6;&#x5B58;&#x653E;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x628A;&#x5B83;&#x62F7;&#x8D1D;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x7136;&#x540E;&#x6267;&#x884C;&#xFF1A; 123456789$ emulator -kernel kernel/goldfish/arch/arm/boot/zImage &amp;$ adb push drivers/hello-android/hello-android.ko /data$ adb push out/debug/target/product/generic/obj/EXECUTABLES/ha_intermediates/LINKED/ha /data1843 KB/s (82652 bytes in 0.043s)$ adb shell insmod /data/hello-android.ko$ adb shell /data/haRead original value: 3.Write value 13 to /dev/ha.Read the value again:13. &#x8BF4;&#x660E;dev&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x8BBF;&#x95EE;&#x63A5;&#x53E3;&#x6B63;&#x5E38;&#xFF01; &#x786C;&#x4EF6;&#x62BD;&#x8C61;&#x5C42; &#x786C;&#x4EF6;&#x62BD;&#x8C61;&#x5C42;&#x8FD0;&#x884C;&#x5728;&#x7528;&#x6237;&#x63A7;&#x4EF6;&#xFF0C;&#x662F;Android&#x7CFB;&#x7EDF;&#x7684;&#x72EC;&#x6709;&#x8BBE;&#x8BA1;&#x3002;Linux&#x5BF9;&#x786C;&#x4EF6;&#x7684;&#x652F;&#x6301;&#x662F;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x5B8C;&#x5168;&#x8FD0;&#x884C;&#x5728;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x3002;Android&#x7684;&#x8FD9;&#x79CD;&#x8BBE;&#x8BA1;&#x662F;&#x4E3A;&#x4E86;&#x4FDD;&#x62A4;&#x5382;&#x5546;&#x7684;&#x5546;&#x4E1A;&#x5229;&#x76CA;&#xFF0C;&#x5B83;&#x901A;&#x8FC7;&#x5F15;&#x5165;&#x786C;&#x4EF6;&#x62BD;&#x8C61;&#x5C42;&#x5141;&#x8BB8;&#x5382;&#x5546;&#x5728;&#x8BE5;&#x5C42;&#x5C01;&#x88C5;&#x5BF9;&#x786C;&#x4EF6;&#x7684;&#x64CD;&#x4F5C;&#x7EC6;&#x8282;&#xFF0C;&#x8BE5;&#x5C42;&#x9075;&#x5FAA;Apache License&#x534F;&#x8BAE;&#xFF0C;&#x56E0;&#x6B64;&#x5382;&#x5546;&#x53EF;&#x4EE5;&#x5C06;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5B9E;&#x73B0;&#x95ED;&#x6E90;&#x3002; HAL&#x5C42;&#x7684;&#x6846;&#x67B6;&#x4E0D;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x4E0D;&#x8FC7;&#x80FD;&#x8BB2;&#x5F97;&#x7B80;&#x6D01;&#x3001;&#x6E05;&#x6670;&#x7684;&#x4E5F;&#x4E0D;&#x591A;&#xFF0C;mr_raptor&#x7684;HAL Stub&#x6846;&#x67B6;&#x5206;&#x6790;&#x5C31;&#x662F;&#x4E00;&#x7BC7;&#xFF0C;&#x5E94;&#x8BE5;&#x5148;&#x597D;&#x597D;&#x8BFB;&#x900F;&#x4E86;&#x518D;&#x5F80;&#x4E0B;&#x8FDB;&#x884C;&#x3002; &#x6211;&#x7B80;&#x5355;&#x8BF4;&#x4E00;&#x4E0B;&#x6211;&#x7684;&#x7406;&#x89E3;&#xFF1A;HAL&#x5C42;&#x7684;so&#x6587;&#x4EF6;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x5165;&#x53E3;&#x7B26;&#x53F7;&#x5373;HAL_MODULE_INFO_SYM&#xFF0C;&#x8BE5;&#x7B26;&#x53F7;&#x6307;&#x5411;&#x7684;&#x7ED3;&#x6784;&#x4F53;hw_moduel_t&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x786C;&#x4EF6;&#x5BF9;&#x8C61;&#x3002;&#x901A;&#x8FC7;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x7684;methods&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x6253;&#x5F00;&#x8BE5;&#x786C;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;open&#x65B9;&#x6CD5;&#xFF0C;&#x8C03;&#x7528;open&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x9488;&#x5BF9;&#x8BE5;&#x786C;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;&#x64CD;&#x4F5C;&#x63A5;&#x53E3;hw_device_t&#xFF0C;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x7ED3;&#x6784;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x8FD9;&#x51E0;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x4EE5;&#x53CA;&#x51FD;&#x6570;&#x6B63;&#x662F;&#x6211;&#x4EEC;&#x5728;HAL&#x5C42;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x8BE5;&#x5C42;&#x7684;&#x4EE3;&#x7801;&#x8BE6;&#x89C1;androidex/hello-android/hello-android-hal&#x3002; &#x7B2C;&#x4E00;&#x6B65;&#x8FD8;&#x662F;&#x5148;&#x6267;&#x884C;setup.sh&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#xFF1A; hardware/libhardware/include/hardware/hello-android.h -&gt; androidex/hello-android/hello-android-hal/hello-android.h hardware/libhardware/modules/hello-android -&gt; androidex/hello-android/hello-android-hal &#x7136;&#x540E;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#xFF1A; 12345$ cd android-6.0.1_r11$ source build/envsetup.sh$ lunch aosp_arm-eng$ mmm hardware/libhardware/modules/hello-android$ make snod &#x5176;&#x4E2D;make snod&#x662F;&#x6253;&#x5305;Android&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x6587;&#x4EF6;system.img&#x3002; &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x4FEE;&#x6539;&#x8BBE;&#x5907;&#x6587;&#x4EF6;/dev/ha&#x7684;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x7F16;&#x8F91;system/core/rootdir/ueventd.rc&#xFF0C;&#x52A0;&#x5165;&#xFF1A; 1/dev/ha 0666 root root &#x4F7F;&#x5F97;&#x6240;&#x6709;&#x7528;&#x6237;&#x5747;&#x53EF;&#x8BBF;&#x95EE;/dev/ha&#x3002;&#x7136;&#x540E;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;Android&#x6E90;&#x7801;&#xFF1A; 1$ make -j8 &#x7531;&#x4E8E;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x6E90;&#x4EE3;&#x7801;&#x5E76;&#x6CA1;&#x6709;&#x4FEE;&#x6539;&#x8FC7;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x6B21;&#x7F16;&#x8BD1;&#x5F88;&#x5FEB;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x3002; &#x786C;&#x4EF6;&#x8BBF;&#x95EE;&#x670D;&#x52A1; &#x5E94;&#x7528;&#x5C42;&#x901A;&#x8FC7;&#x8BE5;&#x670D;&#x52A1;&#x8BBF;&#x95EE;&#x786C;&#x4EF6;&#x62BD;&#x8C61;&#x5C42;&#xFF0C;&#x8BE5;&#x5C42;&#x4EE3;&#x7801;&#x653E;&#x5728;androidex/hello-android/hello-android-service/&#x3002; setup.sh&#x6267;&#x884C;&#x51E0;&#x4E2A;&#x64CD;&#x4F5C;&#xFF1A; 1. &#x521B;&#x5EFA;&#x8F6F;&#x94FE; frameworks/base/core/java/android/os/IHAService.aidl -&gt; hello-android-service/IHAService.aidl &#x8FD9;&#x4F7F;&#x5F97;&#x7F16;&#x8BD1;&#x51FA;&#x7684;frameworks.jar&#x5305;&#x542B;IHAService&#x63A5;&#x53E3;&#x3002; 2. &#x521B;&#x5EFA;&#x8F6F;&#x94FE; frameworks/base/services/java/com/android/server/HAService.java -&gt; hello-android-service/HAService.java &#x8FD9;&#x4F7F;&#x5F97;&#x7F16;&#x8BD1;&#x51FA;&#x7684;services.jar&#x4E2D;&#x5305;&#x542B;HAService&#x7C7B;&#xFF0C;&#x8BE5;&#x670D;&#x52A1;&#x8C03;&#x7528;native&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#x5177;&#x4F53;&#x529F;&#x80FD;&#x3002; 3. &#x521B;&#x5EFA;&#x8F6F;&#x94FE; frameworks/base/services/core/jni/com_android_server_HAService.cpp -&gt; hello-android-service/com_android_server_HAService.cpp &#x8FD9;&#x4F7F;&#x5F97;&#x7F16;&#x8BD1;&#x51FA;&#x7684;libandroid_servers.so&#x6587;&#x4EF6;&#x5305;&#x542B;init_native&#x3001;setValue_native&#x548C;getValue_native&#x65B9;&#x6CD5;&#x3002; &#x4FEE;&#x6539;frameworks/base/Android.mk&#xFF1A; 123LOCAL_SRC_FILES += \ ... ... core/java/android/os/IHAService.aidl \ &#x4EE5;&#x4FBF;&#x7F16;&#x8BD1;&#x7CFB;&#x7EDF;&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x4E3A;Java&#x6587;&#x4EF6;&#xFF0C;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#xFF0C;&#x751F;&#x6210;frameworks.jar&#xFF1A; 1$ mmm frameworks/base/ &#x4FEE;&#x6539;frameworks/base/services/core/jni/onload.cpp&#xFF0C;&#x6DFB;&#x52A0;&#x51FD;&#x6570;register_android_server_HAService&#x7684;&#x58F0;&#x660E;&#x548C;&#x548C;&#x8C03;&#x7528;&#xFF1A; 12345678910111213141516... ...namespace android {... ...int register_android_server_HAService(JNIEnv* env);};using namespace android;extern &quot;C&quot; jint JNI_OnLoad(JavaVM* vm, void* /* reserved */){ ... ... register_android_server_HAService(env); return JNI_VERSION_1_4;} &#x4FEE;&#x6539;/frameworks/base/services/core/jni/Android.mk&#xFF1A; 1234LOCAL_SRC_FILES += \ ... ... $(LOCAL_REL_DIR)/com_android_server_HAService.cpp \ $(LOCAL_REL_DIR)/onload.cpp &#x6267;&#x884C;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#xFF0C;&#x751F;&#x6210;libandroid_server.so&#xFF1A; 1$ mmm frameworks/base/services &#x4FDD;&#x9669;&#x8D77;&#x89C1;&#xFF0C;&#x8FD8;&#x662F;&#x6574;&#x4F53;&#x7F16;&#x8BD1;&#x4E00;&#x904D;&#x5427;&#xFF1A; 12$ cd android-6.0.1_r11$ make update-api -j4 &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x6DFB;&#x52A0;&#x4E86;&#x53C2;&#x6570;update-api&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5F53;&#x5728;Android&#x6E90;&#x7801;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x5305;&#x3001;&#x7C7B;&#x3001;&#x65B9;&#x6CD5;&#x6216;&#x8005;&#x4FEE;&#x6539;&#x4E86;Android&#x6E90;&#x7801;&#x4E2D;&#x6807;&#x8BC6;&#x4E3A;@hide&#x7684;&#x65B9;&#x6CD5;&#x3001;&#x7C7B;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x8FD9;&#x4E9B;&#x5185;&#x5BB9;&#x5BF9;Application&#x53EF;&#x89C1;&#xFF0C;&#x5E76;&#x4E14;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x8FDB;SDK&#x7684;Document&#x7684;&#x8BDD;&#xFF0C;&#x5FC5;&#x987B;&#x6DFB;&#x52A0;&#x8BE5;&#x53C2;&#x6570;&#x66F4;&#x65B0;&#x6587;&#x6863;&#x3002; &#x5E94;&#x7528;&#x5C42; &#x4EE3;&#x7801;&#x8BE6;&#x89C1;androidex/hello-android/hello-android-app/&#x3002; setup.sh&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#xFF1A; packages/experimental/HelloAndroid -&gt; androidex/hello-android/hello-android-app &#x5B83;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; 123456789101112HelloAndroid&#x251C;&#x2500;&#x2500;AndroidManifest.xml&#x251C;&#x2500;&#x2500;Android.mk&#x251C;&#x2500;&#x2500;src/palance/li/ha&#x2502; &#x2514;&#x2500;&#x2500;HelloAndroid.java&#x2514;&#x2500;&#x2500;res &#x251C;&#x2500;&#x2500;layout &#x2502; &#x2514;&#x2500;&#x2500;main.xml &#x251C;&#x2500;&#x2500;values &#x2502; &#x2514;&#x2500;&#x2500;strings.xml &#x2514;&#x2500;&#x2500;drawable &#x2514;&#x2500;&#x2500;icon.png &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x7F16;&#x8BD1;&#x5F15;&#x7528;&#x5C42;app&#xFF0C;&#x5E76;&#x6253;&#x51FA;&#x7CFB;&#x7EDF;&#x955C;&#x50CF;&#x6587;&#x4EF6;system.img&#xFF1A; 12$ mmm packages/experimental/HelloAndroid/$ make snod &#x5C0F;&#x7ED3; &#x6587;&#x4EF6;&#x7ED3;&#x6784; setup.sh&#x5728;android-6.0.1_r11&#x4E0B;&#x63D2;&#x5165;&#x7684;&#x6587;&#x4EF6;&#x8F6F;&#x94FE;&#x5206;&#x522B;&#x4E3A;&#xFF1A; 123456789101112131415161718android-6.0.1_r11&#x251C;&#x2500;&#x2500;kernel/goldfish/drivers&#x2502; &#x2514;&#x2500;&#x2500;hello-android/ -&gt; hello-android/hello-android-driver/&#x251C;&#x2500;&#x2500;external&#x2502; &#x2514;&#x2500;&#x2500;ha-driver-checker/ -&gt; hello-android/ha-driver-checker/&#x251C;&#x2500;&#x2500;hardware/libhardware&#x2502; &#x251C;&#x2500;&#x2500;include/hardware&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;libhardware/include/hardware/hello-android.h -&gt; hello-android/hello-android-hal/hello-android.h&#x2502; &#x251C;&#x2500;&#x2500;modules/hello-android/ -&gt; hello-android/hello-android-hal/&#x2502; &#x2514;&#x2500;&#x2500;...&#x251C;&#x2500;&#x2500;frameworks/base&#x2502; &#x251C;&#x2500;&#x2500;core/java/android/os&#x2502; &#x2502; &#x2514;&#x2500;&#x2500;IHAService.aidl -&gt; hello-android/hello-android-service/IHAService.aidl&#x2502; &#x251C;&#x2500;&#x2500;services&#x2502; &#x251C;&#x2500;&#x2500;java/com/android/server/HAService.java -&gt; hello-android/hello-android-service/HAService.java&#x2502; &#x2514;&#x2500;&#x2500;core/jni&#x2502; &#x2514;&#x2500;&#x2500;com_android_server_HAService.cpp -&gt; hello-android/hello-android-service/com_android_server_HAService.cpp&#x2514;&#x2500;&#x2500;... &#x8C03;&#x8BD5;&#x671F;&#x95F4;&#x6211;&#x628A;&#x5B50;&#x76EE;&#x5F55;&#x7684;setup.sh&#x811A;&#x672C;&#x90FD;&#x6539;&#x6210;&#x4E86;setup.py&#xFF0C;&#x5B9E;&#x5728;&#x4E0D;&#x559C;&#x6B22;shell&#x811A;&#x672C;&#x3002;androidex/setup.sh&#x6CA1;&#x6709;&#x53D8;&#xFF0C;&#x6267;&#x884C;&#x65B9;&#x5F0F;&#x548C;&#x4EE5;&#x524D;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x3002; &#x6267;&#x884C;&#x6B65;&#x9AA4; &#x9664;&#x4E86;&#x6267;&#x884C;sh setup.sh&#x5B8C;&#x6210;&#x8F6F;&#x94FE;&#x63A5;&#x7684;&#x521B;&#x5EFA;&#x4EE5;&#x5916;&#xFF0C;&#x9700;&#x8981;&#x624B;&#x52A8;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x4F9D;&#x6B21;&#x4E3A;&#xFF1A; 1&#x3001;&#x5728;&#x6587;&#x4EF6;kernel/goldfish/drivers/Kconfig&#x5C3E;&#x90E8;&#x8FFD;&#x52A0; 1source drivers/hello-android/Kconfig 2&#x3001;&#x5728;&#x6587;&#x4EF6;kernel/goldfish/drivers/Makefile&#x5C3E;&#x90E8;&#x8FFD;&#x52A0; 1obj-$(CONFIG_HA) += hello-android/ 3&#x3001;&#x4FEE;&#x6539;&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x9009;&#x9879;&#xFF1A; 12$ cd kernel/goldfish$ make menuconfig &#x5B8C;&#x6210;&#x914D;&#x7F6E;&#x5982;&#x4E0B;&#xFF1A; 12345678[*] Enable load module support ---&gt; &#x5141;&#x8BB8;&#x5185;&#x6838;&#x652F;&#x6301;&#x52A8;&#x6001;&#x52A0;&#x8F7D;&#x6A21;&#x5757; [] Forced module loading [*] Module unloading [] Forced module unloading [*] Module versioning support [*] Source checksum for all modulesDevice Drivers ---&gt; &lt;M&gt; Hello Android Driver &#x6307;&#x5B9A;&#x4EE5;&#x6A21;&#x5757;&#x7684;&#x65B9;&#x5F0F;&#x7F16;&#x8BD1; 4&#x3001;&#x7F16;&#x8BD1;&#x5185;&#x6838;&#xFF1A; 12$ cd kernel/goldfish$ make -j4 5&#x3001;&#x4FEE;&#x6539;&#x6587;&#x4EF6;system/core/rootdir/ueventd.rc&#xFF0C;&#x5C3E;&#x90E8;&#x8FFD;&#x52A0; 1/dev/ha 0666 root root 6&#x3001;&#x4FEE;&#x6539;&#x6587;&#x4EF6;/frameworks/base/services/core/jni/Android.mk&#x8FFD;&#x52A0; 1234LOCAL_SRC_FILES += \ ... ... $(LOCAL_REL_DIR)/com_android_server_HAService.cpp \ $(LOCAL_REL_DIR)/onload.cpp &#x4E0D;&#x8FC7;&#x505A;&#x5230;&#x8FD9;&#x91CC;&#x5361;&#x58F3;&#x4E86;&#xFF0C;&#x8FD0;&#x884C;emulator&#x603B;&#x662F;&#x505C;&#x5728;&#x542F;&#x52A8;&#x754C;&#x9762;&#x518D;&#x4E5F;&#x8FDB;&#x4E0D;&#x53BB;&#x4E86;&#x3002;&#x641E;&#x4E86;&#x597D;&#x51E0;&#x5929;&#xFF0C;&#x6211;&#x627E;&#x5230;&#x6839;&#x672C;&#x539F;&#x56E0;&#x662F;&#x5728;&#x6CE8;&#x518C;JNI&#x63A5;&#x53E3;&#xFF1A; 12345678910111213// JAVA&#x672C;&#x5730;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x8868;static const JNINativeMethod method_table[] = { {&quot;init_native&quot;, &quot;()I&quot;, (void*)ha_init}, {&quot;setValue_native&quot;, &quot;(II)V&quot;, (void*)ha_setValue}, {&quot;getValue_native&quot;, &quot;(I)I&quot;, (void*)ha_getValue},};// &#x6CE8;&#x518C;Java&#x672C;&#x5730;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;int register_android_server_HAService(JNIEnv *env){ return jniRegisterNativeMethods(env, &quot;com/android/server/HAService&quot;, method_table, NELEM(method_table));} &#x6211;&#x628A;&#x7B2C;11&#x884C;&#x6CE8;&#x6389;&#x5C31;&#x80FD;&#x8DD1;&#x8FC7;&#xFF0C;&#x53EF;&#x662F;&#x6211;&#x628A;&#x7B2C;3~5&#x884C;&#x6CE8;&#x6389;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6539;&#x6210;&#x63A5;&#x53E3;&#x5217;&#x8868;&#x4E3A;&#x7A7A;&#xFF0C;emulator&#x8FD8;&#x662F;&#x4F1A;&#x505C;&#x5728;&#x542F;&#x52A8;&#x754C;&#x9762;&#x3002;&#x8FD9;&#x8BA9;&#x6211;&#x5F88;&#x8BE7;&#x5F02;&#xFF1A;&#x56E0;&#x4E3A;&#x63A5;&#x53E3;&#x5217;&#x8868;&#x4E3A;&#x7A7A;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x6CA1;&#x6709;&#x8DD1;&#x6211;&#x7684;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x53EA;&#x662F;&#x591A;&#x6CE8;&#x518C;&#x4E00;&#x5957;&#x7CFB;&#x7EDF;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x5C31;&#x51FA;&#x4E8B;&#x5462;&#xFF1F; &#x82B1;&#x4E86;&#x597D;&#x51E0;&#x4E2A;&#x665A;&#x4E0A;&#x4E5F;&#x6CA1;&#x641E;&#x5B9A;&#xFF0C;&#x53EA;&#x597D;&#x6682;&#x65F6;&#x5148;&#x505C;&#x4E00;&#x505C;&#x4E86;&#x3002;&#x539F;&#x8BA1;&#x5212;&#x4E24;&#x5468;&#x7ED3;&#x675F;&#x6218;&#x6597;&#xFF0C;&#x73B0;&#x5728;&#x53EA;&#x80FD;delay&#x800C;&#x4E14;&#x5148;&#x8DF3;&#x8FC7;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6821;&#x56ED;&#x62DB;&#x8058;&#x7684;&#x5E8F;&#x5E55;&#x62C9;&#x5F00;&#x4E86;&#xFF0C;&#x5F97;&#x82B1;&#x4E00;&#x4E9B;&#x529F;&#x592B;&#x653E;&#x5728;&#x7B14;&#x8BD5;&#x3001;&#x9762;&#x8BD5;&#x9898;&#x4E0A;&#x3002;&#x539F;&#x8BA1;&#x5212;&#x672C;&#x6587;&#x8FD8;&#x6709;&#x534A;&#x7BC7;&#x662F;&#x81EA;&#x4E0A;&#x800C;&#x4E0B;&#x5730;&#x7814;&#x7A76;&#xFF0C;&#x56E0;&#x4E3A;&#x672C;&#x6587;&#x5361;&#x58F3;&#xFF0C;&#x5148;&#x6682;&#x505C;&#x3002;&#x5F04;&#x5B8C;&#x6821;&#x62DB;&#xFF0C;&#x5F00;&#x59CB;&#x7814;&#x7A76;&#x952E;&#x76D8;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#x3002;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac下的定时自动运行]]></title>
    <url>%2F2016%2F08%2F19%2F2016%2F0819AutoRunOnMac%2F</url>
    <content type="text"><![CDATA[&#x7EC8;&#x4E8E;&#x88AB;Mac&#x7684;launchctl&#x6253;&#x8D25;&#x4E86;&#xFF0C;&#x6BCF;&#x6B21;&#x914D;&#x7F6E;&#x90FD;&#x8981;&#x82B1;&#x597D;&#x957F;&#x65F6;&#x95F4;&#x6446;&#x5F04;&#x8FD9;&#x4E2A;&#x73A9;&#x610F;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x5F97;&#x51FA;&#x70B9;&#x4EC0;&#x4E48;&#x72B6;&#x51B5;&#xFF0C;&#x8FD8;&#x6709;&#x90A3;&#x4E2A;&#x8C1C;&#x4E00;&#x6837;&#x7684;&#x8FD4;&#x56DE;&#x7801;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x8981;&#x67E5;&#x534A;&#x5929;&#x3002;&#x5E72;&#x8106;&#x4E0B;&#x8F7D;&#x4E00;&#x4E2A;GUI&#x7A0B;&#x5E8F;LaunchControl&#xFF0C;&#x76F4;&#x63A5;&#x4E0A;&#x914D;&#x7F6E;&#x5982;&#x4E0B;&#xFF1A; &#x516C;&#x53F8;&#x7684;&#x673A;&#x5668;&#x7ECF;&#x5E38;&#x91CD;&#x8D77;&#x540E;ip&#x5C31;&#x53D8;&#x4E86;&#xFF0C;&#x8FD9;&#x4F1A;&#x8BA9;&#x6211;&#x5728;&#x5BB6;&#x91CC;vpn&#x4E0D;&#x5230;&#x8FD9;&#x53F0;&#x673A;&#x5668;&#x3002;&#x6211;&#x8BA9;&#x8FD9;&#x53F0;&#x673A;&#x5668;&#x6BCF;&#x9694;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5411;server&#x53D1;http&#x8BF7;&#x6C42;&#xFF0C;server&#x7684;ip&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4ECE;server&#x7684;http log&#x4E0A;&#x5C31;&#x80FD;&#x627E;&#x5230;&#x8FD9;&#x53F0;&#x673A;&#x5668;&#x7684;ip&#x4E86;&#x3002; LaunchControl&#x80CC;&#x540E;&#x8FD8;&#x662F;&#x8C03;&#x7528;&#x4E86;launchctl&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x80FD;&#x628A;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x66F4;&#x76F4;&#x89C2;&#x5730;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#x3002;&#x518D;&#x6765;&#x770B;&#x770B;&#x5B83;&#x751F;&#x6210;&#x7684;plist&#x6587;&#x4EF6;&#xFF1A; 1234567891011121314151617181920212223&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&lt;plist version=&quot;1.0&quot;&gt;&lt;dict&gt; &lt;key&gt;KeepAlive&lt;/key&gt; &lt;false/&gt; &lt;key&gt;Label&lt;/key&gt; &lt;string&gt;com.palanceli.ipmonitor.plist&lt;/string&gt; &lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt; &lt;string&gt;curl&lt;/string&gt; &lt;string&gt;http://10.134.29.201/rmbp&lt;/string&gt; &lt;/array&gt; &lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; &lt;key&gt;StandardErrorPath&lt;/key&gt; &lt;string&gt;/tmp/com.palanceli.ipmonitor.plist.err&lt;/string&gt; &lt;key&gt;StandardOutPath&lt;/key&gt; &lt;string&gt;/tmp/com.palanceli.ipmonitor.plist.out&lt;/string&gt; &lt;key&gt;StartInterval&lt;/key&gt; &lt;integer&gt;60&lt;/integer&gt;&lt;/dict&gt;&lt;/plist&gt;]]></content>
      <categories>
        <category>随笔笔记</category>
      </categories>
      <tags>
        <tag>Mac操作配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用AndroidStudio编译和调试CTS源码]]></title>
    <url>%2F2016%2F08%2F12%2F2016%2F0813%E4%BD%BF%E7%94%A8AndroidStudio%E7%BC%96%E8%AF%91%E5%92%8C%E8%B0%83%E8%AF%95CTS%E6%BA%90%E7%A0%81%2F</url>
    <content type="text"><![CDATA[&#x67D0;&#x5382;&#x5546;&#x7A81;&#x7136;&#x50AC;&#x547D;&#x5730;&#x62A5;&#x8FC7;&#x6765;&#x51E0;&#x4E2A;CTS Fail&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8981;&#x6C42;&#x706B;&#x901F;&#x4FEE;&#x6539;&#x3002;&#x63A5;&#x624B;&#x56E2;&#x961F;&#x4EE5;&#x6765;&#xFF0C;&#x6211;&#x5BF9;CTS&#x7684;&#x4FE1;&#x606F;&#x4E86;&#x89E3;&#x4E0D;&#x591A;&#xFF0C;&#x5F53;&#x5382;&#x5546;&#x8BF4;&#x201C;CTS&#x8DD1;&#x4E0D;&#x8FC7;&#x4E0D;&#x80FD;&#x4E0A;&#x7EBF;&#x201D;&#x65F6;&#x624D;&#x6709;&#x70B9;&#x614C;&#x4E86;&#xFF0C;&#x8D76;&#x7D27;&#x6076;&#x8865;&#x3002; CTS&#x662F;Google&#x63A8;&#x51FA;&#x7684;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#x96C6;&#xFF08;Compatibility Test Suite&#xFF09;&#xFF0C;&#x662F;&#x4E00;&#x5957;&#x514D;&#x8D39;&#x4E14;&#x5F00;&#x6E90;&#x7684;&#x5DE5;&#x4E1A;&#x7EA7;&#x6D4B;&#x8BD5;&#x96C6;&#x5408;&#x3002;&#x65E2;&#x7136;&#x662F;&#x5F00;&#x6E90;&#x7684;&#xFF0C;&#x638C;&#x63E1;&#x5B83;&#x7684;&#x738B;&#x9053;&#x5F53;&#x7136;&#x662F;&#x8BFB;&#x4EE3;&#x7801;&#x3001;&#x642D;&#x73AF;&#x5883;&#x3001;&#x8DD1;&#x8D77;&#x6765;&#x3001;&#x5206;&#x6790;Fail&#x7684;case&#x3001;&#x5B9A;&#x4F4D;&#x539F;&#x56E0;&#x54AF;&#x3002;CTS&#x4ECE;&#x4F7F;&#x7528;&#x8005;&#x7684;&#x89D2;&#x5EA6;&#x5B9A;&#x4E49;&#x4E86;Android&#x7CFB;&#x7EDF;&#x7684;&#x6280;&#x672F;&#x89C4;&#x8303;&#xFF0C;&#x6DF1;&#x5165;&#x4E86;&#x89E3;CTS&#x5BF9;&#x4E8E;&#x7406;&#x89E3;Android&#x7CFB;&#x7EDF;&#x662F;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#x3002;&#x7F16;&#x8BD1;&#x548C;&#x8C03;&#x8BD5;CTS&#x7684;&#x8FC7;&#x7A0B;&#x8FD8;&#x7B97;&#x987A;&#x5229;&#xFF0C;&#x672C;&#x6587;&#x8BB0;&#x5F55;&#x4E0B;&#x5B8C;&#x6574;&#x7684;&#x6B65;&#x9AA4;&#x3002; # &#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#xFF0C;&#x7F29;&#x5C0F;&#x7F16;&#x8BD1;&#x8303;&#x56F4; CTS&#x7684;&#x6E90;&#x7801;&#x53EF;&#x4EE5;&#x4ECE;https://android.googlesource.com/platform/cts/&#x4E0B;&#x5230;&#x3002;&#x5176;&#x5B9E;Android&#x6E90;&#x7801;&#x4E5F;&#x662F;&#x5E26;CTS&#x7684;&#xFF0C;&#x5C31;&#x5728;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x3002; 400M&#x7684;&#x4EE3;&#x7801;&#x91CF;&#xFF0C;&#x5E9E;&#x5927;&#x7684;&#x76EE;&#x5F55;&#x6811;&#x7ED3;&#x6784;&#x2026;&#x2026; &#x5148;&#x4E0D;&#x7BA1;&#x4ED6;&#x4EEC;&#x90FD;&#x662F;&#x5E72;&#x561B;&#x7684;&#xFF0C;&#x6709;&#x7A7A;&#x518D;&#x4ED4;&#x7EC6;&#x7814;&#x7A76;&#x3002;Fail&#x7684;case&#x4E3B;&#x8981;&#x96C6;&#x4E2D;&#x5728;&#x76EE;&#x5F55;tests/tests/text/src/android/text/method/cts&#x4E0B;&#x9762;&#xFF0C;&#x4E3A;&#x4E86;&#x8282;&#x7701;&#x65F6;&#x95F4;&#xFF0C;&#x6211;&#x53EA;&#x628A;&#x76F8;&#x5173;&#x7684;test suites&#x62C6;&#x51FA;&#x6765;&#xFF0C;&#x72EC;&#x7ACB;&#x7F16;&#x8BD1;&#x548C;&#x8C03;&#x8BD5;&#x3002; &#x6211;&#x628A;&#x6587;&#x4EF6;&#x5939;tests/tests/text/src/android/text&#x5355;&#x72EC;&#x62F7;&#x8D1D;&#x4E00;&#x4EFD;&#xFF0C;&#x547D;&#x540D;&#x4E3A;cts-text&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x5B83;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B50;&#x6587;&#x4EF6;&#x5939;&#xFF1F;&#x56E0;&#x4E3A;&#x6211;&#x770B;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x9762;&#x6709; Android.mk&#x548C;AndroidManifest.xml&#xFF0C;&#x6211;&#x731C;&#x5B83;&#x5E94;&#x8BE5;&#x8868;&#x793A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;Test Suite&#x3002; &#x5728;cts-text/src/android/text&#x4E0B;&#x53C8;&#x6709;&#x4E94;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF1A;cts&#x3001;format&#x3001;method&#x3001;style&#x3001; util&#x3002;&#x5382;&#x5546;&#x62A5;&#x8FC7;&#x6765;Fail&#x7684;case&#x90FD;&#x5728;method/cts/BaseKeyListenerTest.java&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x91CC;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x53EF;&#x4EE5;&#x628A;method&#x4EE5;&#x5916;&#x7684;&#x51E0;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4EE5;&#x53CA;method&#x91CC;&#x9664;BaseKeyListenerTest.java&#x4EE5;&#x5916;&#x7684;*Test.java&#x90FD;&#x5220;&#x6389;&#xFF0C;&#x5E72;&#x6389;&#x8FD9;&#x4E9B;Test Case&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;Test Suite&#x7684;&#x7ED3;&#x6784;&#x3002;&#x6700;&#x7EC8;&#x7684;cts-text&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516cts-text&#x251C;&#x2500;&#x2500;Android.mk&#x251C;&#x2500;&#x2500;AndroidManifest.xml&#x251C;&#x2500;&#x2500;res&#x2502; &#x251C;&#x2500;&#x2500;...&#x2502; &#x2514;&#x2500;&#x2500;...&#x2514;&#x2500;&#x2500;src &#x2514;&#x2500;&#x2500;android &#x2514;&#x2500;&#x2500;text &#x2514;&#x2500;&#x2500;method &#x2514;&#x2500;&#x2500;cts &#x251C;&#x2500;&#x2500;BaseKeyListenerTest.java &#x251C;&#x2500;&#x2500;CtsActivity.java &#x251C;&#x2500;&#x2500;KeyListenerCtsActivity.java &#x251C;&#x2500;&#x2500;KeyListenerTestCase.java &#x2514;&#x2500;&#x2500;TextMethodUtils.java &#x521B;&#x5EFA;Test Project &#x6253;&#x5F00;Android Studio&#xFF0C;&#x9009;&#x62E9;Import project(Eclipse ADT, Gradle, etc.)&#xFF0C;&#x9009;&#x62E9;cts-text&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x4E00;&#x8DEF;Next&#xFF0C;&#x5B8C;&#x6210;&#x3002; &#x83DC;&#x5355; - Run - Edit Configurations&#xFF0C;&#x70B9;&#x51FB;&quot;+&quot;&#xFF0C;&#x9009;&#x62E9;Android Tests&#xFF1A; &#x586B;&#x5199;Name&#xFF0C;&#x6307;&#x5B9A;runner&#xFF1A; &#x9009;&#x62E9;cts-text&#x5E76;&#x8FD0;&#x884C;&#xFF1A; &#x53EF;&#x4EE5;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FDE;&#x63A5;&#x771F;&#x673A;&#xFF0C;TestCase&#x5C31;&#x98DE;&#x5FEB;&#x5730;&#x8DD1;&#x8D77;&#x6765;&#x4E86;&#x3002;&#x8FD9;&#x662F;&#x8FC4;&#x4ECA;&#x4E3A;&#x6B62;&#xFF0C;&#x6211;&#x6478;&#x7D22;&#x6700;&#x987A;&#x5229;&#x7684;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x3002;&#x5176;&#x4E2D;&#x7684;TestCase&#x5199;&#x5F97;&#x975E;&#x5E38;&#x6E05;&#x6670;&#xFF0C;&#x4E24;&#x4E09;&#x5206;&#x949F;&#x5C31;&#x80FD;&#x770B;&#x61C2;&#x6BCF;&#x4E2A;Case&#x90FD;&#x6A21;&#x62DF;&#x4E86;&#x4EC0;&#x4E48;&#x64CD;&#x4F5C;&#xFF0C;&#x9884;&#x671F;&#x7ED3;&#x679C;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x627E;&#x5230;Fail&#x7684;Case&#x540E;&#xFF0C;&#x91CD;&#x5934;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#x4E0A;&#x2014;&#x2014;&#x9700;&#x8981;&#x786E;&#x8BA4;&#x5728;Case&#x6307;&#x5B9A;&#x7684;&#x64CD;&#x4F5C;&#x4E0B;&#xFF0C;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#x884C;&#x4E3A;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x7B26;&#x5408;&#x9884;&#x671F;&#x3002;]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macOS 下NDK的安装]]></title>
    <url>%2F2016%2F08%2F12%2F2016%2F0812macOS%E4%B8%8BNDK%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[&#x672C;&#x6765;&#x662F;&#x4E2A;&#x5F88;&#x521D;&#x7EA7;&#x7684;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#xFF0C;&#x53EF;&#x662F;&#x5728;macOS 10.11.6&#x4E0B;&#x5B89;&#x88C5;NDK&#x7684;&#x65F6;&#x5019;&#x9047;&#x5230;&#x4E86; bad interpreter: Operation not permitted &#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x5FC5;&#x8981;&#x8BB0;&#x5F55;&#x4E0B;&#x89E3;&#x51B3;&#x8FC7;&#x7A0B;&#xFF0C;&#x4EE5;&#x514D;&#x518D;&#x8E29;&#x5751;&#x3002; # &#x4E0B;&#x8F7D; &#x4ECE;NDK Downloads&#x4E0B;&#x8F7D;Package&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x53BB;&#x56FD;&#x5185;&#x7684;&#x7F51;&#x7AD9;AndroidDevTools&#x4E0B;&#x8F7D;&#x3002; &#x89E3;&#x538B; &#x7A0D;&#x8001;&#x4E00;&#x70B9;&#x7684;&#x7248;&#x672C;&#x89E3;&#x5F00;zip&#x540E;&#x662F;&#x4E2A;.bin&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x7ED9;.bin&#x6587;&#x4EF6;&#x6DFB;&#x52A0;x&#x5C5E;&#x6027;&#x518D;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; ndk$ chmod a+x android-ndk-r10c-darwin-x86_64.bin ndk$ ./android-ndk-r10c-darwin-x86_64.bin &#x6267;&#x884C;.bin&#x6587;&#x4EF6;&#x4F1A;&#x628A;&#x6700;&#x7EC8;&#x7684;&#x6587;&#x4EF6;&#x89E3;&#x538B;&#x51FA;&#x6765;&#x3002;&#x6700;&#x65B0;&#x7248;NDK&#x89E3;&#x5F00;zip&#x540E;&#x5C31;&#x662F;&#x6700;&#x7EC8;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x653E;&#x5728;&#x4E86; ~/Desktop/android-ndk-r12b&#x3002; &#x4FEE;&#x6539;&#x5C5E;&#x6027; &#x6309;&#x7167;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x8BF4;&#x660E;&#xFF0C;&#x89E3;&#x5F00;&#x6700;&#x7EC8;&#x6587;&#x4EF6;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x3002; &#x53EF;&#x662F;&#x5728;macOS&#x4E0B;&#x6267;&#x884C;ndk-build&#x65F6;&#x4F1A;&#x63D0;&#x793A;&#xFF1A; ... /bin/sh: bad interpreter: Operation not permitted &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x4E0B;&#x8F7D;&#x7684;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;macOS&#x9644;&#x4E0A;&#x5C5E;&#x6027;com.apple.quarantine&#xFF0C;&#x8BE5;&#x5C5E;&#x6027;&#x7528;&#x4E8E;&#x7528;&#x6237;&#x9996;&#x6B21;&#x6267;&#x884C;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5F39;&#x51FA;&#x63D0;&#x793A;&#xFF0C;&#x95EE;&#x7528;&#x6237;&#x662F;&#x5426;&#x786E;&#x8BA4;&#xFF0C;&#x4EE5;&#x514D;&#x67D3;&#x6BD2;&#x3002;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E0B;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x5F39;&#x4E0D;&#x51FA;&#x63D0;&#x793A;&#xFF0C;&#x76F4;&#x63A5;&#x5C31;&#x7981;&#x6B62;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x51FA;&#x73B0;&#x4E0A;&#x9762;&#x7684;&#x95EE;&#x9898;&#x3002; &#x77E5;&#x9053;&#x539F;&#x56E0;&#xFF0C;&#x89E3;&#x51B3;&#x8D77;&#x6765;&#x5C31;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x4E86;&#xFF0C;&#x5220;&#x9664;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x7684;com.apple.quarantine&#x5C5E;&#x6027;&#x5373;&#x53EF;&#xFF1A; sudo xattr -r -d com.apple.quarantine ~/Desktop/android-ndk-r12b &#x9A8C;&#x8BC1; &#x4E0B;&#x8F7D;NDK Sample&#x6587;&#x4EF6;&#xFF0C;&#x9A8C;&#x8BC1;NDK&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x4F7F;&#x7528;&#x3002;&#x5728;NDK Samples Overview&#x53EF;&#x4EE5;&#x627E;&#x5230;NDK Samples&#x548C;Vulkan Samples&#xFF0C;&#x968F;&#x4FBF;&#x4E0B;&#x8F7D;&#x4E00;&#x4E2A;project&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324$ cd samples/hello-jni$ ~/Desktop/android-ndk-r12b/ndk-buildAndroid NDK: WARNING: APP_PLATFORM android-24 is larger than android:minSdkVersion 3 in ./AndroidManifest.xml[arm64-v8a] Gdbserver : [aarch64-linux-android-4.9] libs/arm64-v8a/gdbserver[arm64-v8a] Gdbsetup : libs/arm64-v8a/gdb.setup[x86_64] Gdbserver : [x86_64-4.9] libs/x86_64/gdbserver[x86_64] Gdbsetup : libs/x86_64/gdb.setup[mips64] Gdbserver : [mips64el-linux-android-4.9] libs/mips64/gdbserver[mips64] Gdbsetup : libs/mips64/gdb.setup[armeabi-v7a] Gdbserver : [arm-linux-androideabi-4.9] libs/armeabi-v7a/gdbserver[armeabi-v7a] Gdbsetup : libs/armeabi-v7a/gdb.setup[armeabi] Gdbserver : [arm-linux-androideabi-4.9] libs/armeabi/gdbserver[armeabi] Gdbsetup : libs/armeabi/gdb.setup[x86] Gdbserver : [x86-4.9] libs/x86/gdbserver[x86] Gdbsetup : libs/x86/gdb.setup[mips] Gdbserver : [mipsel-linux-android-4.9] libs/mips/gdbserver[mips] Gdbsetup : libs/mips/gdb.setup[arm64-v8a] Install : libhello-jni.so =&gt; libs/arm64-v8a/libhello-jni.so[x86_64] Install : libhello-jni.so =&gt; libs/x86_64/libhello-jni.so[mips64] Install : libhello-jni.so =&gt; libs/mips64/libhello-jni.so[armeabi-v7a] Install : libhello-jni.so =&gt; libs/armeabi-v7a/libhello-jni.so[armeabi] Install : libhello-jni.so =&gt; libs/armeabi/libhello-jni.so[x86] Install : libhello-jni.so =&gt; libs/x86/libhello-jni.so[mips] Install : libhello-jni.so =&gt; libs/mips/libhello-jni.so &#x8BF4;&#x660E;OK&#x4E86;&#xFF01; &#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF; &#x6211;&#x628A;ndk&#x6587;&#x4EF6;&#x653E;&#x5728;~/Document/android/android-ndk-r12b&#x4E0B;&#xFF0C;&#x5E76;&#x5728;&#x6587;&#x4EF6;~/.bash_profile&#x4E2D;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x4E24;&#x884C;&#xFF1A; export NDK_ROOT=/Users/palance/Documents/android/android-ndk-r12b export PATH=$PATH:$NDK_ROOT &#x8BA9;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x7ACB;&#x523B;&#x751F;&#x6548;&#xFF1A; $ source ~/.bash_profile &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;ndk-build&#x4E86;&#x3002;]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深度探索Binder（四）调用服务接口]]></title>
    <url>%2F2016%2F08%2F07%2F2016%2F0807DissectingBinder4%2F</url>
    <content type="text"><![CDATA[&#x8C03;&#x7528;&#x670D;&#x52A1;&#x63A5;&#x53E3; &#x524D;&#x4E00;&#x7BC7;&#x535A;&#x6587;&#x8BB2;&#x7684;&#x300A;&#x67E5;&#x627E;&#x670D;&#x52A1;&#x300B;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x201C;&#x8C03;&#x7528;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#x670D;&#x52A1;&#x7684;&#x6CE8;&#x518C;&#x4E0E;&#x67E5;&#x627E;&#x6B63;&#x662F;ServiceManager&#x63D0;&#x4F9B;&#x7684;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x67E5;&#x627E;&#x670D;&#x52A1;&#xFF0C;&#x65E2;&#x6709;&#x8BF7;&#x6C42;&#x53C8;&#x6709;&#x54CD;&#x5E94;&#x3002;&#x5728;native&#x5C42;&#x548C;&#x9A71;&#x52A8;&#x5C42;&#x5DF2;&#x7ECF;&#x8D70;&#x4E86;&#x975E;&#x5E38;&#x5B8C;&#x5907;&#x7684;&#x201C;&#x8C03;&#x7528;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x201D;&#x7684;&#x6D41;&#x7A0B;&#x3002;&#x5728;&#x8FD9;&#x4E00;&#x7BC7;&#x4E2D;&#x6211;&#x4EEC;&#x67E5;&#x6F0F;&#x8865;&#x7F3A;&#xFF0C;&#x4EC5;&#x63A2;&#x7D22;&#x524D;&#x9762;&#x6CA1;&#x6709;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x70B9;&#x3002; ## &#x83B7;&#x53D6;ServiceManager VS &#x83B7;&#x53D6;&#x666E;&#x901A;Binder&#x7684;&#x4EE3;&#x7406; Client&#x7AEF;&#x83B7;&#x53D6;ServiceManager&#x548C;&#x83B7;&#x53D6;&#x666E;&#x901A;Binder&#x4EE3;&#x7406;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;Client&#x7AEF;&#x662F;&#x76F8;&#x5BF9;&#x800C;&#x8A00;&#xFF0C;&#x901A;&#x5E38;&#x6240;&#x8BF4;&#x7684;Client/Server&#x662F;&#x6307;Service&#x7684;&#x8BF7;&#x6C42;&#x65B9;&#x548C;&#x63D0;&#x4F9B;&#x65B9;&#xFF0C;&#x4E8C;&#x8005;&#x5728;&#x8BF7;&#x6C42;ServiceManager&#x670D;&#x52A1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53C8;&#x90FD;&#x662F;&#x8BE5;&#x670D;&#x52A1;&#x7684;Client&#x3002; &#x5728;&#x8BB2;&#x6CE8;&#x518C;&#x670D;&#x52A1;&#x521D;&#x59CB;&#x5316;sm&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; 12345678910// frameworks/native/libs/binder/IServiceManager.cpp// #33sp&lt;IServiceManager&gt; defaultServiceManager(){ ... ... gDefaultServiceManager = interface_cast&lt;IServiceManager&gt;( ProcessState::self()-&gt;getContextObject(NULL)); ... ... return gDefaultServiceManager;} &#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x83B7;&#x53D6;ServiceManager&#xFF0C;&#x5728;&#x90A3;&#x4E00;&#x8282;&#x4E2D;&#x6211;&#x4EEC;&#x5206;&#x6790;&#x8FC7;ProcessState::self()-&gt;getContextObject(NULL)&#x751F;&#x6210;&#x4E00;&#x4E2A;BpBinder(0)&#xFF0C;interface_cast&lt;IServiceManager&gt;()&#x628A;&#x8BE5;&#x5BF9;&#x8C61;&#x4EA4;&#x7ED9;BpServiceManager&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;BpServiceManager&#xFF0C;&#x518D;&#x8F6C;&#x578B;&#x4E3A;IServiceManager&#x3002; &#x518D;&#x770B;&#x666E;&#x901A;Binder&#x4EE3;&#x7406;&#x7684;&#x83B7;&#x53D6;&#x65B9;&#x5F0F;&#xFF1A; 123// TestClient.cpp:16sp &lt; IBinder &gt; binder = sm-&gt;getService(String16(&quot;service.testservice&quot;));sp&lt;ITestService&gt; cs = interface_cast &lt; ITestService &gt; (binder); sm-&gt;getService(...)&#x5C31;&#x662F;&#x8BA9;&#x9A71;&#x52A8;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5728;&#x672C;&#x5730;&#x552F;&#x4E00;&#x7684;&#x6574;&#x5F62;&#x6570;&#x5373;handle&#xFF0C;&#x8FD4;&#x56DE;&#x5BF9;&#x8C61;BpBinder(handle)&#xFF0C;&#x7B2C;&#x4E8C;&#x884C;&#x628A;&#x8BE5;&#x5BF9;&#x8C61;&#x4EA4;&#x7ED9;BpTestService&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;BpTestService&#xFF0C;&#x518D;&#x8F6C;&#x578B;&#x4E3A;ITestService&#x3002; &#x4E8C;&#x8005;&#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x4EC5;&#x5728;&#x4E8E;ServiceManager&#x7684;handle&#x662F;&#x7EA6;&#x5B9A;&#x597D;&#x7684;0&#xFF0C;&#x800C;&#x666E;&#x901A;Binder&#x7684;handle&#x662F;&#x7531;&#x9A71;&#x52A8;&#x5C42;&#x5206;&#x914D;&#x7684;&#x3002; Client&#x7AEF;&#x5982;&#x4F55;&#x628A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6253;&#x5305;&#x6210;&#x6570;&#x636E; ServiceManager&#x662F;&#x600E;&#x4E48;&#x628A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6253;&#x5305;&#x6210;&#x6570;&#x636E;&#x7684;&#xFF1F;&#x5B83;&#x7684;&#x51FD;&#x6570;&#x63A5;&#x53E3;&#x4E0D;&#x591A;&#xFF0C;&#x5B9A;&#x4E49;&#x5728; 1234567891011121314151617181920// frameworks/native/include/binder/IServiceManager.h30class IServiceManager : public IInterface{public: DECLARE_META_INTERFACE(ServiceManager); ... ... virtual sp&lt;IBinder&gt; getService( const String16&amp; name) const = 0; virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const = 0; virtual status_t addService( const String16&amp; name, const sp&lt;IBinder&gt;&amp; service, bool allowIsolated = false) = 0; virtual Vector&lt;String16&gt; listServices() = 0; enum { GET_SERVICE_TRANSACTION = IBinder::FIRST_CALL_TRANSACTION, CHECK_SERVICE_TRANSACTION, ADD_SERVICE_TRANSACTION, LIST_SERVICES_TRANSACTION, };}; &#x56DB;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#x5C31;&#x662F;ServiceManager&#x63D0;&#x4F9B;&#x7684;&#x5168;&#x90E8;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#xFF0C;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x7ED9;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x7F16;&#x4E86;&#x53F7;&#x3002;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x5728; frameworks/natvie/libs/binder/IServiceManager.cpp:126&#x3002; &#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x628A;&#x81EA;&#x5DF1;&#x5BF9;&#x5E94;&#x7684;&#x7F16;&#x53F7;&#x4EE5;&#x53CA;&#x53C2;&#x6570;&#x585E;&#x5230;Parcel&#x5BF9;&#x8C61;&#x91CC;&#xFF0C;&#x5199;&#x5165;binder&#x6587;&#x4EF6;&#xFF0C;&#x6570;&#x636E;&#x5230;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#x518D;&#x6309;&#x7167;&#x540C;&#x6837;&#x7684;&#x7F16;&#x53F7;&#x89E3;&#x6790;&#xFF0C;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x51FD;&#x6570;&#x5E76;&#x6267;&#x884C;&#x3002; &#x518D;&#x6765;&#x770B;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x666E;&#x901A;&#x7684;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#xFF1A; 12345678// TestClient.cppvoid BpTestService::test() { ... ... Parcel data, reply; data.writeInterfaceToken(ITestService::getInterfaceDescriptor()); remote()-&gt;transact(TEST, data, &amp;reply); ... ...} &#x4F55;&#x5176;&#x76F8;&#x4F3C;&#xFF0C;TEST&#x4E5F;&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x679A;&#x4E3E;&#x53D8;&#x91CF;&#xFF0C;&#x7528;&#x6765;&#x7ED9;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x7F16;&#x53F7;&#x3002;&#x800C;&#x4E14;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x53EA;&#x63D0;&#x4F9B;&#x4E00;&#x4EFD;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x8BA9;Client&#x7AEF;&#x548C;Server&#x7AEF;&#x516C;&#x7528;&#xFF0C;&#x8FD9;&#x6837;&#x624D;&#x4E0D;&#x5BB9;&#x6613;&#x4EA7;&#x751F;&#x6B67;&#x4E49;&#x3002; Server&#x7AEF;&#x5982;&#x4F55;&#x628A;&#x6570;&#x636E;&#x5305;&#x62C6;&#x89E3;&#x6210;&#x51FD;&#x6570;&#x8C03;&#x7528; &#x5176;&#x5B9E;&#x5728;&#x300A;&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;Binder&#xFF08;&#x4E8C;&#xFF09;&#x6CE8;&#x518C;&#x670D;&#x52A1;&#x300B;&#x7684;&#x5FAA;&#x73AF;&#x5185;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x5DF2;&#x7ECF;&#x8BB2;&#x4E86;&#x4E00;&#x534A;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x5BF9;Service&#x7684;&#x8BF7;&#x6C42;&#x88AB;&#x5C01;&#x88C5;&#x6210;&#x6570;&#x636E;&#x5305;&#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x6570;&#x636E;&#x5C31;&#x662F;Binder&#x7684;handle&#x3001;&#x8BF7;&#x6C42;&#x63A5;&#x53E3;&#x7684;&#x7F16;&#x53F7;&#x4EE5;&#x53CA;&#x53C2;&#x6570;&#x3002;&#x8BE5;&#x6570;&#x636E;&#x5305;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x6839;&#x636E;handle&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;binder_node&#xFF0C;&#x5E76;&#x628A;handle&#x5B57;&#x6BB5;&#x66FF;&#x6362;&#x6210;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x2014;&#x2014;binder&#x4EE5;&#x53CA;binder&#x5BF9;&#x8C61;&#x2014;&#x2014;cookie&#x3002;&#x5230;&#x4E86;Server&#x7AEF;&#x5219;&#x76F4;&#x63A5;&#x62FF;cookie&#x63D0;&#x9886;&#x51FA;Binder&#x5BF9;&#x8C61;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243// frameworks/native/libs/binder/IPCThreadState.cpp:947status_t IPCThreadState::executeCommand(int32_t cmd){ ... ... case BR_TRANSACTION: { binder_transaction_data tr; result = mIn.read(&amp;tr, sizeof(tr)); ... ... Parcel reply; ... ... if (tr.target.ptr) { sp&lt;BBinder&gt; b((BBinder*)tr.cookie); error = b-&gt;transact(tr.code, buffer, &amp;reply, tr.flags); } else ... ... } ... ... } ... ...}// frameworks/native/libs/binder/Binder.cpp:97status_t BBinder::transact( uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code TEST data.setDataPosition(0); status_t err = NO_ERROR; switch (code) { case PING_TRANSACTION: reply-&gt;writeInt32(pingBinder()); break; default: err = onTransact(code, data, reply, flags); break; } if (reply != NULL) { reply-&gt;setDataPosition(0); } return err;} onTransact(...)&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#xFF1A; 123456789class BBinder : public IBinder{ ... ... virtual status_t onTransact( uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags = 0); ... ...}; tr.cookie&#x7684;&#x503C;&#x662F;&#x5728;addService&#x662F;&#x6DFB;&#x52A0;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x5728;Server&#x7AEF;main()&#x51FD;&#x6570;&#x4E2D;new BnTestService()&#x7684;&#x5BF9;&#x8C61;&#x5730;&#x5740;&#x3002;&#x6240;&#x4EE5;&#x5728;IPCThreadState::executeCommand(...)&#x51FD;&#x6570;&#x4E2D;&#x5C3D;&#x7BA1;&#x4F7F;&#x7528;BBinder&#x7C7B;&#x578B;&#x6765;&#x63D0;&#x9886;&#xFF0C;&#x5B9E;&#x9645;&#x7684;&#x5185;&#x5BB9;&#x4ECD;&#x7136;&#x662F;&#x4E2A;BnTestService&#x5BF9;&#x8C61;&#x3002;&#x4ED6;&#x7EE7;&#x627F;&#x81EA;BnInterface&#xFF0C;&#x540E;&#x8005;&#x7EE7;&#x627F;&#x81EA;BBinder&#xFF0C;&#x56E0;&#x6B64;&#x8C03;&#x7528;&#x5176;&#x865A;&#x51FD;&#x6570;onTransact(...)&#x6700;&#x7EC8;&#x843D;&#x5730;&#x5230;BnTestService::onTransact(...)&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5BF9;&#x5B9A;&#x4E49;&#x5728;TestServer.cpp&#x4E2D;&#xFF0C;&#x6839;&#x636E;code&#x7684;&#x503C;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#x3002; &#x4F5C;&#x4E3A;Binder&#x673A;&#x5236;&#x7684;&#x4F7F;&#x7528;&#x8005;&#x6765;&#x8BF4;&#xFF0C;&#x8981;&#x5199;&#x7684;&#x4EE3;&#x7801;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF1A; * &#x5B9A;&#x4E49;&#x597D;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x4EE5;&#x53CA;&#x7F16;&#x53F7;&#x3002; * Server&#x7AEF;&#x5B9A;&#x4E49;&#x670D;&#x52A1;&#x7684;&#x5B50;&#x7C7B;BnTestService&#xFF0C;&#x5E76;&#x8986;&#x76D6;&#x865A;&#x51FD;&#x6570;onTransact(...)&#xFF0C;&#x5B9E;&#x73B0;&#x6BCF;&#x4E2A;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x3002; * Client&#x7AEF;&#x5B9A;&#x4E49;&#x670D;&#x52A1;&#x7684;&#x5B50;&#x7C7B;BpTestService&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;&#x6BCF;&#x4E2A;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x7684;&#x8F6C;&#x53D1;&#x2014;&#x2014;&#x5C06;&#x53C2;&#x6570;&#x585E;&#x5165;Parcel&#xFF0C;&#x8C03;&#x7528;remote()-&gt;transact(...)&#x628A;&#x670D;&#x52A1;&#x7F16;&#x53F7;&#x548C;&#x53C2;&#x6570;&#x53D1;&#x5F80;Server&#x7AEF;&#x3002; &#x5E94;&#x7528;&#x5C42;&#x7684;&#x4EE3;&#x7801;&#x7ED3;&#x6784; &#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;&#x5171;&#x56DB;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A; * Test.h &#x63D0;&#x4F9B;Client&#x548C;Server&#x516C;&#x7528;&#x7684;ITestService&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x4EE5;&#x53CA;&#x51FD;&#x6570;&#x7F16;&#x53F7;&#x679A;&#x4E3E;&#x5B9A;&#x4E49; * TestClient.cpp Client&#x7AEF;&#x4EE3;&#x7801;&#xFF0C;&#x5B9A;&#x4E49;BpTestService * TestServer.cpp Server&#x7AEF;&#x4EE3;&#x7801;&#xFF0C;&#x5B9A;&#x4E49;BnTestService * ITestService.cpp &#x5B9A;&#x4E49;Server&#x7AEF;&#x57FA;&#x7C7B;ITestService&#x4E2D;&#x4E0E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x65E0;&#x5173;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x6761;&#x5B8F;IMPLEMENT_META_INTERFACE&#x66FF;&#x4EE3;&#x6240;&#x6709;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x8C03;&#x8BD5;&#xFF0C;&#x6211;&#x628A;&#x5B8F;&#x5C55;&#x5F00;&#x4E86;&#x3002; testservice&#x7684;&#x8C03;&#x8BD5; &#x6700;&#x540E;&#x518D;&#x8865;&#x5145;&#x4E00;&#x70B9;&#x5173;&#x4E8E;&#x8C03;&#x8BD5;&#x7684;&#x788E;&#x788E;&#x5FF5;&#xFF0C;&#x76EE;&#x524D;&#x6211;&#x8FD8;&#x53EA;&#x4F1A;&#x7528;gdb/gdbserver&#x6765;&#x8C03;&#x8BD5;&#xFF0C;&#x6BCF;&#x6B21;&#x8C03;&#x8BD5;&#x90FD;&#x6709;&#x4E00;&#x4E9B;&#x56FA;&#x5B9A;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x6211;&#x628A;&#x5B83;&#x4EEC;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x6BCF;&#x6B21;&#x62F7;&#x8D1D;/&#x7C98;&#x8D34;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x524D;&#x671F;&#x7684;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#xFF1A; &#x7F16;&#x8BD1;testservice&#xFF1A; $ mmm external/testservice &#x542F;&#x52A8;&#x6A21;&#x62DF;&#x5668;&#xFF1A; $ emulator&amp; &#x628A;&#x6587;&#x4EF6;&#x62F7;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x7684;/data/local/tmp/testservice&#x4E0B;&#xFF1A; 12$ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestServer_intermediates/LINKED/TestServer /data/local/tmp/testservice $ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient /data/local/tmp/testservice &#x8D4B;&#x4E88;&#x53EF;&#x6267;&#x884C;&#x6743;&#x9650;&#xFF1A; $ adb shell chmod 755 /data/local/tmp/testservice/* &#x8C03;&#x8BD5;Client&#x7AEF; &#x8C03;&#x8BD5;Client&#x7AEF;&#x4EE3;&#x7801;&#x6700;&#x597D;&#x540C;&#x65F6;&#x5F00;&#x542F;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#xFF1A; * &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x8FD0;&#x884C;Server $ adb shell /data/local/tmp/testservice/TestServer * &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x901A;&#x8FC7;gdbserver&#x8FD0;&#x884C;&#x5BA2;&#x6237;&#x7AEF; $ adb shell gdbserver :1234 /data/local/tmp/testservice/TestClient * &#x5728;&#x8C03;&#x8BD5;&#x673A;&#x4E0A;&#x8FD0;&#x884C;gdb - forward&#x7AEF;&#x53E3; $ adb forward tcp:1234 tcp:1234 - &#x542F;&#x52A8;gdb $./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient - target&#x7AEF;&#x53E3;(gdb) target remote :1234` - &#x8C03;&#x8BD5;&#x5427; 123456789101112(gdb) b mainBreakpoint 1 at 0xb6f321fc: file external/testservice/TestClient.cpp, line 14.(gdb) cContinuing.... ...Breakpoint 1, main () at external/testservice/TestClient.cpp:1414 int main() {(gdb) set solib-absolute-prefix out/debug/target/product/generic/symbols/Reading symbols from out/debug/target/product/generic/symbols/system/bin/linker...done.... ...(gdb) b IPCThreadState.cpp:730... ... &#x8C03;&#x8BD5;Server&#x7AEF;&#x548C;Client&#x7AEF;&#x6CA1;&#x4EC0;&#x4E48;&#x5DEE;&#x522B;&#xFF0C;&#x53EA;&#x662F;&#x9700;&#x8981;&#x7528;gdbserver&#x8DD1;Server&#x7A0B;&#x5E8F;&#x3002; &#x8C03;&#x8BD5;ServiceManager &#x5076;&#x5C14;&#x4E5F;&#x9700;&#x8981;&#x8C03;&#x8BD5;ServiceManager&#xFF0C;&#x8DDF;&#x8C03;Client/Server&#x90FD;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;&#x901A;&#x5E38;&#x81F3;&#x5C11;&#x8981;&#x540C;&#x65F6;&#x5F00;&#x56DB;&#x4E2A;&#x7EC8;&#x7AEF; * &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x8FD0;&#x884C;Server $ adb shell /data/local/tmp/testservice/TestServer * &#x627E;&#x5230;ServiceManager&#x7684;pid&#xFF0C;&#x5E76;&#x7528;gdbserver&#x542F;&#x52A8; $ adb shell ps |grep servicemanager $ adb shell /data/local/tmp/gdbserver :1234 --attach &lt;servicemanager pid&gt; * &#x5728;&#x8C03;&#x8BD5;&#x673A;&#x4E0A;&#x8FD0;&#x884C;gdb&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x7AEF;&#x53E3;&#x53F7; $ gdbclient &lt;servicemanager pid&gt; 1234 * &#x5728;&#x7B2C;&#x56DB;&#x4E2A;&#x7EC8;&#x7AEF;&#x4E0A;&#x8FD0;&#x884C;Client&#xFF0C;&#x89E6;&#x53D1;ServiceManager&#x4E2D;&#x8981;&#x8C03;&#x8BD5;&#x7684;&#x903B;&#x8F91; $ adb shell /data/local/tmp/testservice/TestClient &#x4E5F;&#x53EF;&#x4EE5;&#x628A;&#x4E00;&#x4E9B;&#x53CD;&#x590D;&#x3001;&#x8FDE;&#x7EED;&#x7528;&#x5230;&#x7684;&#x547D;&#x4EE4;&#x5199;&#x5230;gdb&#x811A;&#x672C;&#x4E2D;&#xFF0C;&#x5728;&#x6211;&#x7684;debug.gdb&#x4E2D;&#x5C31;&#x662F;&#x8FD9;&#x7C7B;&#x547D;&#x4EE4;&#xFF0C;&#x628A;&#x4ED6;&#x4EEC;&#x5C01;&#x88C5;&#x6210;&#x51FD;&#x6570;&#x3002;&#x542F;&#x52A8;gdb&#x540E;&#x53EA;&#x9700;&#x8C03;&#x7528; (gdb) source ../androidex/external-testservice/debug.gdb &#x5373;&#x53EF;&#x8F7D;&#x5165;gdb&#x811A;&#x672C;&#xFF0C;&#x7136;&#x540E;&#x76F4;&#x63A5;&#x6572;&#x5165;&#x51FD;&#x6570;&#x540D;&#x5982;&#xFF1A; (gdb) common &#x5373;&#x53EF;&#x76F4;&#x63A5;&#x6267;&#x884C;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>深度探索Binder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深度探索Binder（三）查找服务]]></title>
    <url>%2F2016%2F08%2F07%2F2016%2F0807DissectingBinder3%2F</url>
    <content type="text"><![CDATA[&#x67E5;&#x627E;&#x670D;&#x52A1; &#x67E5;&#x627E;&#x670D;&#x52A1;&#x7684;&#x8D77;&#x70B9;&#x5728;Client&#x7AEF; TestClient.cpp&#x3002;&#x5BA2;&#x6237;&#x628A;&#x94F6;&#x884C;&#x5361;&#x63D2;&#x5230;&#x53D6;&#x6B3E;&#x673A;&#xFF0C;&#x53D6;&#x6B3E;&#x673A;&#x8D1F;&#x8D23;&#x6839;&#x636E;&#x524D;&#x9762;&#x7684;&#x6CE8;&#x518C;&#x627E;&#x5230;&#x5339;&#x914D;&#x7684;&#x670D;&#x52A1;&#x3002; ## &#x5E94;&#x7528;&#x5C42;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;checkService&#x6570;&#x636E; &#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x8C03;&#x7528;&#x5F88;&#x7B80;&#x5355;&#xFF1A;&#x6839;&#x636E;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x83B7;&#x5F97;&#x670D;&#x52A1;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x6267;&#x884C;&#x670D;&#x52A1;&#x4E86;&#xFF1A; sp &lt; IBinder &gt; binder = sm-&gt;getService(String16(&quot;service.testservice&quot;)); &#x4E0A;&#x4E00;&#x8282;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x8FC7;sm&#x5C31;&#x662F;&#x7ED9;BpBinder(0)&#x52A0;&#x4E86;&#x8584;&#x8584;&#x4E00;&#x5C42;&#x5C01;&#x88C5;&#x6210;&#x4E3A;BpServiceManager&#xFF0C;&#x6765;&#x770B;BpServiceManager::getService(...) 1234567891011121314151617// frameworks/native/libs/binder/IServiceManager.cpp:134virtual sp&lt;IBinder&gt; getService(const String16&amp; name) const { ... ... sp&lt;IBinder&gt; svc = checkService(name); if (svc != NULL) return svc; ... ... }// frameworks/native/libs/binder/IServiceManager.cpp:146 virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const { Parcel data, reply; data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor()); data.writeString16(name); remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply); return reply.readStrongBinder(); } &#x524D;&#x6587;&#x8BF4;&#x8FC7;remote()&#x5C31;&#x662F;BpBinder(0)&#xFF0C;&#x5176;transact(...)&#x7684;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x5728;addService&#x6DFB;&#x52A0;&#x670D;&#x52A1;&#x4E2D;&#x4E5F;&#x5206;&#x6790;&#x8FC7;&#x4E86;&#xFF0C;&#x6B64;&#x5904;&#x53EA;&#x7ED9;&#x51FA;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x56FE;&#xFF1A; &#x5176;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x4E3A;&#xFF1A; &#x6570;&#x636E;&#x90E8;&#x5206;&#x53EA;&#x6709;&#x670D;&#x52A1;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x6BD4;addService&#x7B80;&#x5355;&#x5F88;&#x591A;&#x3002; &#x9A71;&#x52A8;&#x5C42;&#x5982;&#x4F55;&#x53D1;&#x9001;checkService&#x8BF7;&#x6C42; &#x6570;&#x636E;&#x901A;&#x8FC7;ioctl(...)&#x5230;&#x8FBE;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x6765;&#x5230;binder_ioctl(...)&#x3002;&#x6B64;&#x5904;&#x4EE3;&#x7801;&#x7684;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x4E5F;&#x548C;&#x9A71;&#x52A8;&#x5C42;&#x5904;&#x7406;Server&#x7AEF;&#x7684;addService&#x8BF7;&#x6C42;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x53EA;&#x7ED9;&#x51FA;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x56FE;&#xFF1A; &#x5173;&#x952E;&#x7684;&#x5904;&#x7406;&#x5728;&#x51FD;&#x6570;binder_transaction(...)&#x4E2D;&#xFF0C;&#x5B83;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x7ED3;&#x6784;&#x4F53;binder_transaction&#xFF0C;&#x5E76;&#x628A;&#x8BE5;&#x4E8B;&#x52A1;&#x63D2;&#x5165;&#x5230;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#xFF08;&#x5373;ServiceManager&#xFF09;&#x7684;todo&#x961F;&#x5217;&#x4E2D;&#x3002;&#x4E0B;&#x56FE;&#x662F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A; &#x548C;addService&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF1A;checkService&#x643A;&#x5E26;&#x7684;data&#x6570;&#x636E;&#x4E2D;&#x6CA1;&#x6709;Binder Object&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x6B64;&#x5728;binder_transaction(...)&#x51FD;&#x6570;&#x4E2D;&#x4E0D;&#x4F1A;&#x8D70;&#x5230;&#x5904;&#x7406;Binder Object&#x7684;for&#x5FAA;&#x73AF;&#x5185;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x5C31;&#x4E0D;&#x4F1A;&#x4E3A;&#x6E90;&#x548C;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;binder&#x5B9E;&#x4F53;&#x548C;&#x5F15;&#x7528;&#x3002; ServiceManager&#x5982;&#x4F55;&#x63A5;&#x6536;checkService&#x8BF7;&#x6C42; ServiceManager&#x5E94;&#x7528;&#x5C42;&#x7B49;&#x5F85;&#x8BF7;&#x6C42;&#x7684;&#x903B;&#x8F91;&#x548C;addService&#x5728;ServiceManager&#x5E94;&#x7528;&#x5C42;&#x5982;&#x4F55;&#x7B49;&#x5F85;&#x8BF7;&#x6C42;&#x662F;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#xFF0C;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002; &#x9A71;&#x52A8;&#x5C42;&#x63A5;&#x6536;checkService&#x8BF7;&#x6C42;&#x7684;&#x903B;&#x8F91;&#x548C;&#x9A71;&#x52A8;&#x5C42;&#x63A5;&#x6536;addService&#x8BF7;&#x6C42;&#x4E5F;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x56FE;&#xFF1A; &#x7136;&#x540E;&#x53C8;&#x5230;ServiceManager&#x5E94;&#x7528;&#x5C42;&#x63A5;&#x6536;&#x548C;&#x5904;&#x7406;checkService&#x8BF7;&#x6C42;&#x4E86;&#xFF0C;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x8DDF;&#x63A5;&#x6536;&#x548C;&#x5904;&#x7406;addService&#x4E5F;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; &#x6765;&#x770B;do_find_service(...)&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x5B9E;&#x4E0D;&#x7528;&#x770B;&#x4E0A;&#x4E00;&#x8282;&#x90FD;&#x5DF2;&#x7ECF;&#x731C;&#x5230;&#x4E86;&#xFF0C;&#x780D;&#x6389;&#x7EC6;&#x679D;&#x672B;&#x8282;&#x540E;&#x903B;&#x8F91;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x67E5;&#x8868;&#xFF0C;&#x627E;&#x5230;&#x540D;&#x5B57;&#x5339;&#x914D;&#x7684;&#x8282;&#x70B9;&#x540E;&#x5C06;handle&#x8FD4;&#x56DE;&#xFF1A; 1234567// frameworks/native/cmds/servicemanager/service_manager.c:170uint32_t do_find_service(struct binder_state *bs, const uint16_t *s, size_t len, uid_t uid, pid_t spid){ struct svcinfo *si = find_svc(s, len); ... ... return si-&gt;handle;} &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E2A;handle&#x662F;&#x5728;ServiceManager&#x7A7A;&#x95F4;&#x5185;&#x7684;handle&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x503C;&#x4E0D;&#x80FD;&#x8DE8;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x3002;&#x6B64;&#x5904;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;handle&#x6211;&#x731C;&#x80AF;&#x5B9A;&#x8981;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;binder&#x5B9E;&#x4F53;&#xFF0C;&#x518D;&#x627E;&#x5230;&#x8BE5;&#x5B9E;&#x4F53;&#x5728;Client&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x5185;&#x7684;handle&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x5C31;&#x7ED9;&#x5B83;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x3002; ServiceManager&#x5982;&#x4F55;&#x7EC4;&#x7EC7;checkService&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E; &#x518D;&#x6765;&#x770B;svcmgr_handle(...)&#x51FD;&#x6570;&#x7684;case SVC_MGR_CHECK_SERVICE:&#x90E8;&#x5206;&#xFF1A; 12345678// frameworks/native/cmds/servicemanager.service_manager.c:291 case SVC_MGR_CHECK_SERVICE: s = bio_get_string16(msg, &amp;len); ... ... handle = do_find_service(bs, s, len, txn-&gt;sender_euid, txn-&gt;sender_pid); ... ... bio_put_ref(reply, handle); // handle&#x88AB;&#x585E;&#x5165;&#x4E86;reply return 0; &#x627E;&#x5230;handle&#x540E;&#x4F1A;&#x628A;&#x5B83;&#x585E;&#x7ED9;reply&#xFF0C;&#x5176;&#x5B9E;&#x5728;&#x5904;&#x7406;&#x5B8C;SVC_MGR_ADD_SERVICE&#x540E;&#xFF0C;&#x5728;&#x51FD;&#x6570;&#x6700;&#x672B;&#xFF0C;&#x4E5F;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x884C;&#xFF1A; bio_put_uint32(reply, 0);&#xFF0C;&#x53EA;&#x662F;Server&#x4E0D;&#x9700;&#x8981;&#x5904;&#x7406;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x524D;&#x4E00;&#x8282;&#x4E2D;&#x6211;&#x4EEC;&#x6CA1;&#x5173;&#x6CE8;&#x3002; svcmgr_handle(...)&#x5B8C;&#x6210;&#x5BF9;SVC_MGR_CHECK_SERVICE&#x7684;&#x5904;&#x7406;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; &#x5728;binder_parse(...)&#x8C03;&#x7528;&#x5B8C;svcmgr_handler(...)&#x540E;&#xFF0C;&#x518D;&#x8C03;&#x7528;binder_send_reply(...)&#x628A;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x53D1;&#x9001;&#x51FA;&#x53BB;&#xFF1A; 123456789101112131415161718192021222324252627282930// frameworks/native/cmds/servicemanger/binder.c:170void binder_send_reply(struct binder_state *bs, struct binder_io *reply, binder_uintptr_t buffer_to_free, int status){ struct { uint32_t cmd_free; binder_uintptr_t buffer; uint32_t cmd_reply; struct binder_transaction_data txn; } __attribute__((packed)) data; data.cmd_free = BC_FREE_BUFFER; data.buffer = buffer_to_free; data.cmd_reply = BC_REPLY; data.txn.target.ptr = 0; data.txn.cookie = 0; data.txn.code = 0; if (status) { // status&#x662F;svcmgr_handler&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x6B63;&#x5E38;&#x5E94;&#x4E3A;0 ... ... } else { data.txn.flags = 0; data.txn.data_size = reply-&gt;data - reply-&gt;data0; data.txn.offsets_size = ((char*) reply-&gt;offs) - ((char*) reply-&gt;offs0); data.txn.data.ptr.buffer = (uintptr_t)reply-&gt;data0; data.txn.data.ptr.offsets = (uintptr_t)reply-&gt;offs0; } binder_write(bs, &amp;data, sizeof(data));} ServiceManager&#x4E3A;checkService&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x5982;&#x4E0B;&#xFF0C;&#x8BE5;&#x6570;&#x636E;&#x88AB;&#x5199;&#x5165;binder&#x4F5C;&#x4E3A;&#x5E94;&#x7B54;&#x53D1;&#x9001;&#x7ED9;Client&#x7AEF; &#x9A71;&#x52A8;&#x5C42;&#x5982;&#x4F55;&#x5904;&#x7406;checkService&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E; &#x63A5;&#x4E0B;&#x6765;&#x7684;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x8DDF;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x901A;&#x8FC7;ioctl(...)&#x8C03;&#x7528;&#x5230;&#x8FBE;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x518D;&#x901A;&#x8FC7;&#x9A71;&#x52A8;&#x5C42;binder_ioctl(...)&#x8C03;&#x7528;binder_thread_write(...)&#x518D;&#x8C03;&#x7528;binder_transaction(...)&#x3002;&#x53EA;&#x662F;&#x6B64;&#x5904;&#x7684;&#x6570;&#x636E;&#x5305;&#x542B;&#x4E86;&#x4E24;&#x6BB5;&#xFF0C;&#x7B2C;&#x4E00;&#x6BB5;&#x662F;BC_FREE_BUFFER&#xFF0C;&#x8981;&#x6C42;&#x91CA;&#x653E;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x5206;&#x914D;&#x7684;data&#x6570;&#x636E;&#x7F13;&#x5B58;&#xFF0C;&#x7B2C;&#x4E8C;&#x6BB5;&#x662F;BC_REPLY&#x3002;&#x7B2C;&#x4E00;&#x6BB5;&#x4E0D;&#x518D;&#x6DF1;&#x5165;&#x63A2;&#x7D22;&#xFF0C;&#x6765;&#x770B;&#x7B2C;&#x4E8C;&#x6BB5;&#x3002; BC_REPLY&#x548C;BC_TRANSACTION&#x8D70;&#x4E00;&#x6837;&#x7684;&#x903B;&#x8F91;&#x5206;&#x652F;&#xFF0C;&#x6B64;&#x5904;&#x6709;&#x5FC5;&#x8981;&#x628A;binder_transaction(...)&#x518D;&#x5C55;&#x5F00;&#x5206;&#x6790;&#x3002; &#x4E0A;&#x4E00;&#x8282;&#x4E2D;&#x8BB2;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x63A5;&#x6536;&#x5230;addService&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5728;binder_thread_read(...)&#x51FD;&#x6570;&#x7684;&#x5C3E;&#x90E8;&#x6709;&#x4E00;&#x6BB5;&#x8FD9;&#x6837;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1234567// kernel/godlfish/drivers/staging/android/binder.c:2528 if (cmd == BR_TRANSACTION &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) { t-&gt;to_parent = thread-&gt;transaction_stack; t-&gt;to_thread = thread; thread-&gt;transaction_stack = t; } else ... ... &#x5B83;&#x628A;ServiceManager&#x7684;thread-&gt;transaction_stack&#x6307;&#x5411;&#x4E86;&#x6536;&#x5230;&#x7684;&#x4E8B;&#x52A1;&#x7ED3;&#x6784;&#x4F53;binder_transaction&#x3002;&#x9A71;&#x52A8;&#x5C42;&#x5728;&#x5904;&#x7406;checkService&#x8BF7;&#x6C42;&#x65F6;&#x6B64;&#x5904;&#x7684;&#x903B;&#x8F91;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5728;&#x7EC4;&#x7EC7;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x7528;&#x5230;&#x8BE5;&#x5B57;&#x6BB5;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112// kernel/goldfish/drivers/staging/android/binder.c:1402static void binder_transaction(struct binder_proc *proc, struct binder_thread *thread, struct binder_transaction_data *tr, int reply){ // proc ServiceManager&#x7684;binder_proc // thread ServiceManager&#x7684;binder_thread // tr data&#x4E2D;&#x7684;txn // reply cmd==BC_REPLY&#x5373;true struct binder_transaction *t; struct binder_work *tcomplete; size_t *offp, *off_end; struct binder_proc *target_proc; struct binder_thread *target_thread = NULL; struct binder_node *target_node = NULL; struct list_head *target_list; wait_queue_head_t *target_wait; struct binder_transaction *in_reply_to = NULL; struct binder_transaction_log_entry *e; uint32_t return_error; ... ... if (reply) { // &#x9A71;&#x52A8;&#x5C42;&#x7EC4;&#x7EC7;checkService&#x8BF7;&#x6C42;&#x65F6;&#x751F;&#x6210;&#x7684;binder_transaction&#x7ED3;&#x6784;&#x4F53; in_reply_to = thread-&gt;transaction_stack; ... ... thread-&gt;transaction_stack = in_reply_to-&gt;to_parent; target_thread = in_reply_to-&gt;from; // Client&#x7684;binder_thread ... ... target_proc = target_thread-&gt;proc; // Client&#x7684;binder_proc } else ... ... if (target_thread) { ... ... target_list = &amp;target_thread-&gt;todo; // Client&#x7684;todo&#x961F;&#x5217; target_wait = &amp;target_thread-&gt;wait; } else ... ... t = kzalloc(sizeof(*t), GFP_KERNEL); ... ... tcomplete = kzalloc(sizeof(*tcomplete), GFP_KERNEL); ... ... t-&gt;from = NULL; t-&gt;sender_euid = proc-&gt;tsk-&gt;cred-&gt;euid; t-&gt;to_proc = target_proc; // Client&#x7684;binder_proc t-&gt;to_thread = target_thread; // Client&#x7684;binder_thread t-&gt;code = tr-&gt;code; // 0 t-&gt;flags = tr-&gt;flags; // 0 t-&gt;priority = task_nice(current); ... ... t-&gt;buffer = binder_alloc_buf(target_proc, tr-&gt;data_size, tr-&gt;offsets_size, !reply &amp;&amp; (t-&gt;flags &amp; TF_ONE_WAY)); ... ... t-&gt;buffer-&gt;allow_user_free = 0; t-&gt;buffer-&gt;debug_id = t-&gt;debug_id; t-&gt;buffer-&gt;transaction = t; t-&gt;buffer-&gt;target_node = target_node; ... ... if (target_node) binder_inc_node(target_node, 1, 0, NULL); offp = (size_t *)(t-&gt;buffer-&gt;data + ALIGN(tr-&gt;data_size, sizeof(void *))); if (copy_from_user(t-&gt;buffer-&gt;data, tr-&gt;data.ptr.buffer, tr-&gt;data_size)) { ... ... } if (copy_from_user(offp, tr-&gt;data.ptr.offsets, tr-&gt;offsets_size)) { ... ... } ... ... off_end = (void *)offp + tr-&gt;offsets_size; for (; offp &lt; off_end; offp++) { struct flat_binder_object *fp; ... ... fp = (struct flat_binder_object *)(t-&gt;buffer-&gt;data + *offp); switch (fp-&gt;type) { ... ... case BINDER_TYPE_HANDLE: case BINDER_TYPE_WEAK_HANDLE: { struct binder_ref *ref = binder_get_ref(proc, fp-&gt;handle); ... ... // &#x5DE6;&#x503C;&#x662F;&#x62E5;&#x6709;binder&#x5B9E;&#x4F53;&#x7684;proc&#x5373;Server&#xFF0C;&#x53F3;&#x503C;&#x662F;Client if (ref-&gt;node-&gt;proc == target_proc) { // &#x4E3A;&#x5047; ... ... } else { // &#x4E3A;&#x771F; struct binder_ref *new_ref; // &#x5728;Client&#x4E2D;&#x4E3A;Server&#x7684;binder&#x5B9E;&#x4F53;&#x521B;&#x5EFA;&#x5F15;&#x7528; new_ref = binder_get_ref_for_node(target_proc, ref-&gt;node); ... ... fp-&gt;handle = new_ref-&gt;desc; binder_inc_ref(new_ref, fp-&gt;type == BINDER_TYPE_HANDLE, NULL); ... ... } } break; ... ... } if (reply) { BUG_ON(t-&gt;buffer-&gt;async_transaction != 0); binder_pop_transaction(target_thread, in_reply_to); } else ... ... t-&gt;work.type = BINDER_WORK_TRANSACTION; list_add_tail(&amp;t-&gt;work.entry, target_list); tcomplete-&gt;type = BINDER_WORK_TRANSACTION_COMPLETE; list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo); if (target_wait) wake_up_interruptible(target_wait); return;... ...} &#x628A;&#x9A71;&#x52A8;&#x5C42;&#x5904;&#x7406;checkService&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x753B;&#x51FA;&#x6765;&#x5982;&#x4E0B;&#xFF08;&#x597D;&#x5927;&#xFF01;&#xFF09;&#xFF1A; &#x770B;&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x4E3B;&#x8981;&#x804C;&#x8D23;&#x662F;&#x751F;&#x6210;binder_transaction&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5B83;&#x7684;buffer&#x6240;&#x6307;&#x5411;&#x7684;&#x6570;&#x636E;&#x5219;&#x6765;&#x81EA;ServiceManager&#x7684;tr-&gt;data.ptr.buffer&#x3002;&#x5C14;&#x540E;&#x904D;&#x5386;fp&#x4E2D;&#x7684;flat_binder_object&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5F15;&#x7528;&#x7684;&#x5B9E;&#x4F53;&#x548C;target_proc&#xFF08;&#x5373;Client&#xFF09;&#x4E0D;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x5219;&#x5728;target_proc&#x4E2D;&#x521B;&#x5EFA;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x518D;&#x628A;handle&#x6539;&#x4E3A;&#x5728;target_proc&#x4E2D;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5305;&#x542B;&#x8BE5;handle&#x8FD9;&#x5768;&#x6570;&#x636E;&#x662F;&#x8981;&#x53D1;&#x9001;&#x7ED9;target_proc&#x7684;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x4E2D;&#x7684;binder_transaction&#x88AB;&#x63D2;&#x5165;&#x5230;target_proc&#x7684;todo&#x961F;&#x5217;&#x4E2D;&#x3002; &#x9A71;&#x52A8;&#x5C42;&#x63A5;&#x6536;checkService&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E; &#x56DE;&#x987E;&#x4E0A;&#x6587;Client&#x7AEF;&#x8C03;&#x7528;ioctl(...)&#x51FD;&#x6570;&#x628A;checkService&#x8BF7;&#x6C42;&#x53D1;&#x51FA;&#x53BB;&#xFF1A; &#x9A71;&#x52A8;&#x5C42;&#x53D1;&#x9001;&#x5B8C;&#x6570;&#x636E;&#x4E4B;&#x540E;&#x7D27;&#x63A5;&#x7740;&#x8C03;&#x7528;binder_thread_read(...)&#x7B49;&#x5F85;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x8FC7;&#x7A0B;&#x548C;ServiceManager&#x89E6;&#x53D1;&#x7684;&#x9A71;&#x52A8;&#x5C42;&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#x8FC7;&#x7A0B;&#x662F;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x7684;&#x3002; &#x9A71;&#x52A8;&#x5728;&#x5185;&#x6838;&#x5C42;&#x751F;&#x6210;&#x4E00;&#x4E2A;binger_transaction_data&#x7ED3;&#x6784;&#x4F53;&#x7528;&#x6765;&#x8BB0;&#x5F55;&#x6536;&#x5230;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002; Client&#x7AEF;&#x5982;&#x4F55;&#x5904;&#x7406;&#x54CD;&#x5E94;&#x6570;&#x636E; Client&#x7AEF;&#x6536;&#x5230;&#x7684;&#x6570;&#x636E;&#x5176;&#x5B9E;&#x5C31;&#x4E00;&#x4E2A;handle&#x662F;&#x5B83;&#x6240;&#x8BF7;&#x6C42;&#x7684;&quot;service.testservice&quot;binder&#x5728;Client&#x7A7A;&#x95F4;&#x7684;&#x5F15;&#x7528;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5728;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x53EF;&#x4EE5;&#x627E;&#x5230;binder&#x5B9E;&#x4F53;&#xFF0C;&#x4E8E;&#x662F;&#x901A;&#x8FC7;&#x8BE5;&#x63CF;&#x8FF0;&#x7B26;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x5230;binder&#x7684;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x3002; &#x56DE;&#x5230;&#x672C;&#x6587;&#x6700;&#x5934;&#x90E8;checkService(...)&#x51FD;&#x6570;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6700;&#x540E;&#x4E00;&#x884C;return reply.readStrongBinder(); 12345678910111213141516171819202122232425// frameworks/native/libs/binder/Parcel.cpp:1334sp&lt;IBinder&gt; Parcel::readStrongBinder() const{ sp&lt;IBinder&gt; val; unflatten_binder(ProcessState::self(), *this, &amp;val); return val;}// frameworks/native/libs/binder/Parcel.cpp:293status_t unflatten_binder(const sp&lt;ProcessState&gt;&amp; proc, const Parcel&amp; in, sp&lt;IBinder&gt;* out){ const flat_binder_object* flat = in.readObject(false); if (flat) { switch (flat-&gt;type) { // &#x8FD9;&#x6B21;&#x8BFB;&#x5230;&#x7684;&#x662F;&#x4E2A;handle ... ... case BINDER_TYPE_HANDLE: *out = proc-&gt;getStrongProxyForHandle(flat-&gt;handle); return finish_unflatten_binder( static_cast&lt;BpBinder*&gt;(out-&gt;get()), *flat, in); } } return BAD_TYPE;} &#x53C8;&#x843D;&#x5230;&#x4E86; ProcessState::getStrongProxyForHandle(...) &#x51FD;&#x6570;&#x91CC;&#xFF0C;&#x5728;&#x4E0A;&#x4E00;&#x7BC7;&#x5206;&#x6790;&#x8FC7;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;new BpBinder(handle)&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x7684; sp&lt;ITestService&gt; cs = interface_cast &lt; ITestService &gt; (binder); &#x5728;&#x4E0A;&#x4E00;&#x7BC7;&#x628A;&#x201C;&#x666E;&#x901A;&#x706B;&#x8F66;&#x201D;&#x7B80;&#x5355;&#x5305;&#x88C5;&#x6210;&#x201C;XX&#x53F7;&#x201D;&#x4E2D;&#x4E5F;&#x4ECB;&#x7ECD;&#x8FC7;&#x4E86;&#x3002; &#x4EE5;&#x4E0A;&#x5C31;&#x662F;&#x201C;&#x67E5;&#x627E;&#x670D;&#x52A1;&#x201D;&#x7684;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x3002; &#x6211;&#x4ECE;&#x65E9;&#x4E0A;&#x9192;&#x6765;&#x4E00;&#x76F4;&#x5199;&#x5230;&#x665A;&#x4E0A;&#x5FEB;&#x5341;&#x4E8C;&#x70B9;&#xFF0C;&#x7EC8;&#x4E8E;&#x628A;&#x201C;&#x6CE8;&#x518C;&#x670D;&#x52A1;&#x201D;&#x3001;&#x201C;&#x67E5;&#x627E;&#x670D;&#x52A1;&#x201D;&#x5199;&#x5B8C;&#xFF0C;&#x5E0C;&#x671B;&#x4E0B;&#x5468;&#x80FD;&#x628A;&#x201C;&#x8C03;&#x7528;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x201D;&#x4E5F;&#x6574;&#x7406;&#x5B8C;&#xFF0C;&#x8FD9;&#x6837;&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;Binder&#x4E5F;&#x5C31;&#x544A;&#x4E00;&#x6BB5;&#x843D;&#x4E86;&#x3002;&#x5176;&#x4ED6;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#xFF0C;&#x6BD4;&#x5982;&#x6B7B;&#x4EA1;&#x901A;&#x77E5;&#x3001;&#x7EBF;&#x7A0B;&#x6C60;&#x7B49;&#x5728;&#x8FD9;&#x6B21;&#x63A2;&#x7D22;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5E94;&#x8BE5;&#x4E0D;&#x96BE;&#x653B;&#x514B;&#x3002;&#x4F46;&#x6682;&#x65F6;&#x6211;&#x4E0D;&#x60F3;&#x7EE7;&#x7EED;&#x4E0B;&#x53BB;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x66F4;&#x8FEB;&#x4E0D;&#x53CA;&#x5F85;&#x5730;&#x662F;&#x63A2;&#x7D22;Android&#x952E;&#x76D8;&#x54CD;&#x5E94;&#x5904;&#x7406;&#x673A;&#x5236;&#x3002;&#x7814;&#x7A76;Android&#x6E90;&#x7801;&#x5C31;&#x50CF;&#x5E74;&#x8F7B;&#x7684;&#x65F6;&#x5019;&#x8FFD;&#x5267;&#xFF0C;&#x6C34;&#x843D;&#x77F3;&#x51FA;&#x4E4B;&#x524D;&#xFF0C;&#x8336;&#x996D;&#x4E0D;&#x601D;&#x3001;&#x7761;&#x4E0D;&#x597D;&#x89C9;&#x3001;&#x9B42;&#x4E0D;&#x5B88;&#x820D;&#x7684;&#xFF0C;&#x6700;&#x8FD1;&#x8EAB;&#x4F53;&#x8017;&#x5F97;&#x6BD4;&#x8F83;&#x5389;&#x5BB3;&#xFF0C;&#x73B0;&#x5728;&#x8116;&#x5B50;&#x5E94;&#x6709;&#x70B9;&#x9178;&#x4E86;&#xFF0C;&#x5E0C;&#x671B;&#x660E;&#x5929;&#x9888;&#x690E;&#x75C5;&#x4E0D;&#x8981;&#x72AF;&#x3002;&#x518D;&#x5F80;&#x540E;&#x7684;&#x51E0;&#x5468;&#xFF0C;&#x6211;&#x60F3;&#x7814;&#x7A76;&#x51E0;&#x4E2A;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x4ECE;JAVA&#x5C42;&#x5230;JNI&#x7684;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x3001;&#x7528;AndroidStudio&#x8C03;&#x8BD5;framework&#x5C42;&#x4EE3;&#x7801;&#xFF0C;&#x4EE5;&#x53CA;checkout Android N&#xFF0C;&#x4F11;&#x6574;&#x597D;&#x4E86;&#x5C31;&#x4F1A;&#x5C1D;&#x8BD5;&#x5411;&#x952E;&#x76D8;&#x54CD;&#x5E94;&#x5904;&#x7406;&#x673A;&#x5236;&#x51FA;&#x53D1;&#x4E86;&#xFF0C;&#x5E0C;&#x671B;&#x4ECA;&#x5E74;&#x5185;&#x80FD;&#x518D;&#x62FF;&#x4E0B;&#x4E09;&#x4E2A;&#x7A0D;&#x5927;&#x70B9;&#x7684;&#x4E13;&#x9898;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>深度探索Binder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深度探索Binder（二）注册服务]]></title>
    <url>%2F2016%2F08%2F06%2F2016%2F0806DissectingBinder2%2F</url>
    <content type="text"><![CDATA[&#x6CE8;&#x518C;&#x670D;&#x52A1; &#x6CE8;&#x518C;&#x670D;&#x52A1;&#x662F;Server&#x7AEF;&#x9996;&#x5148;&#x8981;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;Server&#x6BB5;&#x4EE3;&#x7801;&#x5728;TestServer.cpp&#x3002; &#x65E0;&#x8BBA;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x8FD8;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x5728;&#x4F7F;&#x7528;Binder&#x673A;&#x5236;&#x4E4B;&#x524D;&#x90FD;&#x5FC5;&#x987B;&#x627E;&#x5230;&#x53D6;&#x6B3E;&#x673A;&#xFF0C;&#x5373;ServiceManager&#xFF1A; 12sp &lt; ProcessState &gt; proc(ProcessState::self());sp &lt; IServiceManager &gt; sm = defaultServiceManager(); &#x667A;&#x80FD;&#x6307;&#x9488;&#x5728;&#x672C;&#x7CFB;&#x5217;&#x4E2D;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#xFF0C;&#x53C2;&#x89C1;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x5341;&#x4E00;&#xFF09;&#x2014;&#x2014; &#x667A;&#x80FD;&#x6307;&#x9488;&#x300B;&#xFF0C;&#x5728;framework&#x5C42;&#x6240;&#x6709;Binder&#x76F8;&#x5173;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;sp &lt;XXX&gt; pObj&#x90FD;&#x53EF;&#x4EE5;&#x5F53;XXX *pObj&#x6765;&#x770B;&#x3002; sm&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x4E3A;&#x4EC0;&#x4E48;defaultServiceManager()&#x5C31;&#x80FD;&#x8FD4;&#x56DE;ServiceManager&#xFF1F;&#x672C;&#x8D28;&#x4E0A;ServiceManager&#x4E5F;&#x662F;Binder&#x670D;&#x52A1;&#xFF0C;&#x4F4D;&#x4E8E;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x4E00;&#x884C;&#x8C03;&#x7528;&#x5C31;&#x80FD;&#x83B7;&#x53D6;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x7684;&#x670D;&#x52A1;&#xFF1F;&#x8FD9;&#x4E2A;&#x201C;&#x670D;&#x52A1;&#x201D;&#x5177;&#x4F53;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5B9E;&#x4F53;&#xFF1F;handle&#xFF1F; &#x6211;&#x4EEC;&#x5148;&#x7ED9;&#x51FA;&#x7B54;&#x6848;&#xFF0C;&#x518D;&#x9010;&#x6B65;&#x6C42;&#x8BC1;&#x3002; Binder Service&#x5BF9;&#x8C61;&#x53EA;&#x5B58;&#x5728;&#x4E8E;Server&#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x91CC;&#xFF0C;&#x5F53;Client&#x7AEF;&#x8BF7;&#x6C42;Service&#x65F6;&#xFF0C;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4F1A;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x5728;&#x8BE5;Client&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x5185;&#x552F;&#x4E00;&#x7684;&#x6574;&#x5F62;&#x6570;&#x53C8;&#x53EB;handle&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;handle&#x548C;Service&#x5BF9;&#x8C61;&#x5730;&#x5740;&#x7684;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x3002;Client&#x7AEF;&#x7684;BPBinder&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x5BF9;&#x8BE5;handle&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x6240;&#x6709;&#x5BF9;&#x8FDC;&#x7A0B;Binder&#x7684;&#x8C03;&#x7528;&#x90FD;&#x4F1A;&#x901A;&#x8FC7;BPBinder&#x88AB;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x5768;&#x6570;&#x636E;&#x901A;&#x8FC7;&#x9A71;&#x52A8;&#x5C42;&#x5230;&#x8FBE;Server&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x5728;&#x8FD9;&#x5768;&#x6570;&#x636E;&#x5230;&#x8FBE;Server&#x524D;&#x628A;handle&#x6539;&#x6210;Service&#x5730;&#x5740;&#xFF0C;Server&#x901A;&#x8FC7;&#x6539;&#x5730;&#x5740;&#x63D0;&#x9886;&#x5230;Service&#x5BF9;&#x8C61;&#xFF0C;&#x6267;&#x884C;&#x8BF7;&#x6C42;&#x3002; ServiceManager&#x662F;handle=0&#x7684;Binder&#xFF0C;&#x5B83;&#x4FDD;&#x5B58;&#x7740;&#x7CFB;&#x7EDF;&#x5185;&#x6240;&#x6709;&#x6CE8;&#x518C;&#x7684;Binder&#xFF0C;&#x53EA;&#x6709;&#x901A;&#x8FC7;&#x5B83;&#x624D;&#x80FD;&#x627E;&#x5230;&#x5176;&#x4ED6;Binder&#x3002;&#x5B83;&#x662F;&#x4E00;&#x5207;Binder&#x7684;&#x8D77;&#x70B9;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x987B;hard code&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x503C;&#xFF0C;&#x4EE5;&#x4FBF;&#x6240;&#x6709;&#x8FDB;&#x7A0B;&#x90FD;&#x80FD;&#x76F4;&#x63A5;&#x5F97;&#x5230;&#x5B83;&#xFF0C;&#x5F88;&#x81EA;&#x7136;&#x8FD9;&#x4E2A;&#x56FA;&#x5B9A;&#x503C;&#x662F;0&#x3002; sm&#x662F;handle=0&#x7684;BPBinder&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5BF9;&#x5B83;&#x7684;&#x8C03;&#x7528;&#x53EF;&#x4EE5;&#x88AB;&#x8F6C;&#x5230;&#x8FDB;&#x7A0B;ServiceManager&#x5462;&#xFF1F;&#x56E0;&#x4E3A;BPBinder&#x4F1A;&#x628A;&#x8C03;&#x7528;&#x6253;&#x5305;&#x6210;&#x6570;&#x636E;&#x5199;&#x5165;&#x6587;&#x4EF6;/dev/binder&#x3002;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;BPBinder&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x9A71;&#x52A8;&#x5C42;&#x786E;&#x4FDD;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x6253;&#x5F00;&#x7684;&#x8BE5;&#x6587;&#x4EF6;&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x662F;&#x5404;&#x8FDB;&#x7A0B;&#x4E00;&#x4EFD;&#x7684;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x6253;&#x5F00;&#x4E24;&#x6B21;&#x5462;&#xFF1F;&#x9996;&#x5148;&#x9A71;&#x52A8;&#x5C42;&#x786E;&#x4FDD;&#x5B9E;&#x9645;&#x6253;&#x5F00;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4EFD;&#x6570;&#x636E;&#xFF0C;&#x5176;&#x6B21;&#x5E94;&#x7528;&#x5C42;&#x7684;ProcessState&#x4EE5;&#x8FDB;&#x7A0B;&#x5355;&#x4F53;&#x7684;&#x65B9;&#x5F0F;&#x786E;&#x4FDD;&#x8FDB;&#x7A0B;&#x5185;&#x53EA;&#x6253;&#x5F00;&#x4E00;&#x6B21;&#x3002;&#x6570;&#x636E;&#x5305;&#x8FDB;&#x5165;&#x9A71;&#x52A8;&#x5C42;&#x540E;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x4F1A;&#x6839;&#x636E;&#x76EE;&#x6807;handle&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;Server&#x8FDB;&#x7A0B;&#xFF0C;&#x628A;&#x6570;&#x636E;&#x5305;&#x4EA4;&#x7531;Server&#x5904;&#x7406;&#x3002; &#x521D;&#x59CB;&#x5316;proc proc&#x6307;&#x5411;ProcessState::self()&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5355;&#x4F53;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;ProcessState&#x5B9E;&#x4F8B;&#x3002;&#x5728;ProcessState&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#xFF1A;1&#x3001;&#x6253;&#x5F00;/dev/binder&#x6587;&#x4EF6;&#xFF1B;2&#x3001;&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x6620;&#x5C04;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002; 1234567891011121314151617181920212223242526272829// frameworks/native/libs/binder/ProcessState.cpp &#x4E95;&#x53F7;+&#x6570;&#x5B57;&#x8868;&#x793A;&#x884C;&#x53F7;// #70sp&lt;ProcessState&gt; ProcessState::self() // &#x8FDB;&#x7A0B;&#x5355;&#x4F53;{ ... ... if (gProcess != NULL) { return gProcess; } gProcess = new ProcessState; // &#x9996;&#x6B21;&#x521B;&#x5EFA;&#x5728;&#x8FD9;&#x91CC; return gProcess;}// #339ProcessState::ProcessState() : mDriverFD(open_driver()) // &#x8FD9;&#x91CC;&#x6253;&#x5F00;&#x4E86;/dev/binder&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26; ... ...{ ... ... mVMStart = mmap(0, BINDER_VM_SIZE, PROT_READ, MAP_PRIVATE | MAP_NORESERVE, mDriverFD, 0); ... ...}// #311static int open_driver(){ int fd = open(&quot;/dev/binder&quot;, O_RDWR); ... ... return fd;} &#x901A;&#x5E38;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x78C1;&#x76D8;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x7531;&#x8C01;&#x6253;&#x5F00;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x8DEF;&#x5F84;&#x76F8;&#x540C;&#xFF0C;&#x6240;&#x6307;&#x7684;&#x5C31;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x8BFB;&#x5199;&#x7684;&#x4E5F;&#x662F;&#x540C;&#x4E00;&#x5768;&#x6570;&#x636E;&#x3002;&#x53EF;&#x662F;Binder&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x89C4;&#x5B9A;&#x7EDF;&#x4E00;&#x7684;&#x8DEF;&#x5F84;dev/binder&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x6240;&#x6709;&#x7AEF;&#x83B7;&#x53D6;Binder&#x7684;&#x65B9;&#x5F0F;&#x4E00;&#x81F4;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x83B7;&#x53D6;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x5C31;&#x597D;&#x50CF;&#x5927;&#x5BB6;&#x90FD;&#x901A;&#x8FC7;&#x540C;&#x4E00;&#x4E2A;&#x7535;&#x8BDD;&#x53F7;&#x7801;95555&#x83B7;&#x5F97;&#x62DB;&#x5546;&#x94F6;&#x884C;&#x7684;&#x5BA2;&#x670D;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x6BCF;&#x4E2A;&#x4EBA;&#x5206;&#x914D;&#x5230;&#x7684;&#x5BA2;&#x670D;&#x5C0F;&#x59B9;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x53EA;&#x662F;&#x5728;Binder&#x7684;&#x4E16;&#x754C;&#x66F4;&#x6781;&#x7AEF;&#xFF0C;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x6253;&#x5F00;&#x6587;&#x4EF6;dev/binder&#x90FD;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x53EF;&#x4EE5;&#x8FDB;&#x5165;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x6765;&#x8BC1;&#x5B9E;&#x8FD9;&#x4E00;&#x70B9;&#x3002; &#x6253;&#x5F00;/dev/binder &#x5E94;&#x7528;&#x5C42;&#x8C03;&#x7528;open(&quot;/dev/binder&quot;)&#x6700;&#x7EC8;&#x5BF9;&#x843D;&#x5730;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x7684;binder_open(...)&#x8C03;&#x7528;&#x4E0A;&#x6765;&#xFF0C;&#x4E2D;&#x95F4;&#x7684;&#x6D41;&#x8F6C;&#x8FC7;&#x7A0B;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;&#x300A;Linux&#x8BBE;&#x5907;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x300B;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x8FDB;&#x5165;binder_open(...)&#x51FD;&#x6570;&#xFF1A; 123456789101112// kernel/drivers/staging/android/binder.c// #2979static int binder_open(struct inode *nodp, struct file *filp){ struct binder_proc *proc; ...... proc = kzalloc(sizeof(*proc), GFP_KERNEL); // &#x521B;&#x5EFA;binder_proc&#x7ED3;&#x6784;&#x4F53; ...... filp-&gt;private_data = proc; ...... return 0;} &#x7ED3;&#x6784;&#x4F53;struct file&#x8868;&#x793A;&#x8FDB;&#x7A0B;&#x5DF2;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x542B;&#x8BBF;&#x95EE;&#x6A21;&#x5F0F;&#x3001;&#x5F53;&#x524D;&#x504F;&#x79FB;&#x7B49;&#x4FE1;&#x606F;&#xFF08;&#x53C2;&#x89C1;&#x300A;Linux&#x5185;&#x6838;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;&#xFF08;&#x7B2C;&#x4E09;&#x7248;&#xFF09;&#x300B;&#x7B2C;13&#x7AE0;11&#x8282;&#xFF09;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;&#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;struct file&#x662F;&#x6BCF;&#x8FDB;&#x7A0B;&#x4E00;&#x4EFD;&#x7684;&#x3002; binder_open(...)&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x4E86;&#x7ED3;&#x6784;&#x4F53;struct binder_proc&#x5E76;&#x5C06;&#x4E4B;&#x4FDD;&#x5B58;&#x5728;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;private_data&#x6210;&#x5458;&#x4E2D;&#x3002;struct binder_proc&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x6B63;&#x5728;&#x4F7F;&#x7528;Binder&#x7684;&#x8FDB;&#x7A0B;&#x3002; &#x6620;&#x5C04;/dev/binder ProcessState&#x5728;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x4E2D;&#x6253;&#x5F00;/dev/binder&#x540E;&#xFF0C;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F53;&#x5185;&#x7ACB;&#x523B;&#x8C03;&#x7528;mmap&#x5B8C;&#x6210;&#x6620;&#x5C04;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6700;&#x7EC8;&#x843D;&#x5730;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x7684;binder_mmap(...)&#x51FD;&#x6570;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041// kernel/goldfish/drivers/staging/android/binder.c// #2883static int binder_mmap(struct file *filp, struct vm_area_struct *vma){ int ret; struct vm_struct *area; struct binder_proc *proc = filp-&gt;private_data; const char *failure_string; struct binder_buffer *buffer; ... ... // &#x5206;&#x914D;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4; area = get_vm_area(vma-&gt;vm_end - vma-&gt;vm_start, VM_IOREMAP); ... ... proc-&gt;buffer = area-&gt;addr; proc-&gt;user_buffer_offset = vma-&gt;vm_start - (uintptr_t)proc-&gt;buffer; ... ... // &#x5206;&#x914D;&#x7269;&#x7406;&#x9875;&#x9762;&#x7ED3;&#x6784;&#x4F53;&#x6307;&#x9488;&#x6570;&#x7EC4; proc-&gt;pages = kzalloc(sizeof(proc-&gt;pages[0]) * ((vma-&gt;vm_end - vma-&gt;vm_start) / PAGE_SIZE), GFP_KERNEL); ... ... proc-&gt;buffer_size = vma-&gt;vm_end - vma-&gt;vm_start; vma-&gt;vm_ops = &amp;binder_vm_ops; vma-&gt;vm_private_data = proc; // &#x4E3A;proc-&gt;pages&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x7269;&#x7406;&#x9875;&#x9762;&#xFF0C;&#x5E76;&#x5C06;&#x4E4B;&#x540C;&#x65F6;&#x6620;&#x5C04;&#x5230;&#x7528;&#x6237;&#x548C;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4; if (binder_update_page_range(proc, 1, proc-&gt;buffer, proc-&gt;buffer + PAGE_SIZE, vma)) { ... ... } buffer = proc-&gt;buffer; INIT_LIST_HEAD(&amp;proc-&gt;buffers); list_add(&amp;buffer-&gt;entry, &amp;proc-&gt;buffers); buffer-&gt;free = 1; binder_insert_free_buffer(proc, buffer); proc-&gt;free_async_space = proc-&gt;buffer_size / 2; barrier(); proc-&gt;files = get_files_struct(proc-&gt;tsk); proc-&gt;vma = vma; proc-&gt;vma_vm_mm = vma-&gt;vm_mm; ... ... return 0;... ...} &#x8BE5;&#x6620;&#x5C04;&#x64CD;&#x4F5C;&#x4E3A;Binder&#x5206;&#x914D;&#x7269;&#x7406;&#x9875;&#x9762;&#xFF0C;&#x5E76;&#x5C06;&#x9875;&#x9762;&#x540C;&#x65F6;&#x6620;&#x5C04;&#x5230;&#x5185;&#x6838;&#x548C;&#x7528;&#x6237;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002; &#x8FD9;&#x5757;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x5C31;&#x4E3A;&#x672A;&#x6765;&#x6570;&#x636E;&#x5305;&#x4F20;&#x8F93;&#x94FA;&#x8BBE;&#x7684;&#x8F68;&#x9053;&#xFF0C;&#x53EA;&#x662F;&#x8FD9;&#x6761;&#x8F68;&#x9053;&#x5BF9;&#x4E8E;Client&#x6216;Server&#x7AEF;&#x6765;&#x8BF4;&#x90FD;&#x901A;&#x5F80;&#x4E00;&#x4E2A;&#x65F6;&#x5149;&#x96A7;&#x9053;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5149;&#x96A7;&#x9053;&#x5C31;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x3002;&#x6570;&#x636E;&#x5305;&#x91CC;&#x6CE8;&#x660E;&#x4E86;&#x6570;&#x636E;&#x8981;&#x53D1;&#x5F80;&#x4F55;&#x5904;&#xFF0C;&#x6570;&#x636E;&#x8FDB;&#x5165;&#x96A7;&#x9053;&#x540E;&#x5C31;&#x4E0D;&#x89C1;&#x4E86;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x4F1A;&#x6839;&#x636E;&#x6570;&#x636E;&#x5305;&#x91CC;&#x7684;&#x76EE;&#x7684;&#x5730;&#x5740;&#x628A;&#x6570;&#x636E;&#x5305;&#x5217;&#x8F66;&#x653E;&#x5230;&#x76EE;&#x7684;&#x7AEF;&#x7684;&#x65F6;&#x5149;&#x96A7;&#x9053;&#x51FA;&#x53E3;&#xFF0C;&#x8FD9;&#x6837;&#x76EE;&#x7684;&#x7AEF;&#x5C31;&#x80FD;&#x6E90;&#x6E90;&#x4E0D;&#x65AD;&#x5730;&#x770B;&#x5230;&#x6570;&#x636E;&#x5217;&#x8F66;&#x4ECE;&#x96A7;&#x9053;&#x53E3;&#x9A76;&#x6765;&#x3002; &#x5C06;&#x9875;&#x9762;&#x540C;&#x65F6;&#x6620;&#x5C04;&#x5230;&#x5185;&#x6838;&#x548C;&#x7528;&#x6237;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x5347;&#x6548;&#x7387;&#x3002;&#x51FA;&#x4E8E;&#x5B89;&#x5168;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x4ECE;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x53D1;&#x5F80;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x7684;&#x6570;&#x636E;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;copy_from_user(...)&#x51FD;&#x6570;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#xFF0C;&#x5728;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x5C42;&#x5904;&#x7406;&#x5B8C;&#x6570;&#x636E;&#x540E;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x518D;&#x7528;copy_to_user(...)&#x62F7;&#x8D1D;&#x5230;&#x5BF9;&#x7AEF;&#xFF0C;&#x56E0;&#x6B64;&#x53CC;&#x91CD;&#x6620;&#x5C04;&#x4F7F;&#x5F97;&#x6570;&#x636E;&#x53EF;&#x88AB;&#x5BF9;&#x7AEF;&#x8BBF;&#x95EE;&#xFF0C;&#x4E14;&#x51CF;&#x5C11;&#x4E00;&#x6B21;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x7684;&#x5F00;&#x9500;&#x3002; &#x521D;&#x59CB;&#x5316;sm &#x5B8C;&#x6210;&#x8F68;&#x9053;&#x94FA;&#x8BBE;&#x540E;&#xFF0C;&#x5C31;&#x8981;&#x5EFA;&#x8BBE;&#x8DD1;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x706B;&#x8F66;&#x4E86;&#xFF0C;&#x5176;&#x5B9E;&#x706B;&#x8F66;&#x539F;&#x672C;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x6839;&#x636E;&#x53D1;&#x5F80;&#x7684;&#x76EE;&#x7684;&#x5730;&#x4E0D;&#x540C;&#x7ED9;&#x4ED6;&#x4EEC;&#x505A;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x4F8B;&#x5982;&#x53D1;&#x5F80;ServiceManager&#x53F7;&#x7684;&#x4F1A;&#x88AB;&#x5C01;&#x88C5;&#x6210;sp&#xFF0C;&#x53D1;&#x5F80;TestService&#x53F7;&#x7684;&#x4F1A;&#x88AB;&#x5C01;&#x88C5;&#x6210;sp&#x7B49;&#x7B49;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x770B;sp&lt;IServiceManager&gt; sm&#xFF0C;&#x5B83;&#x662F;&#x51FD;&#x6570;defaultServiceManager()&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF1A; 123456789101112// frameworks/native/libs/binder/IServiceManager.cpp// #33sp&lt;IServiceManager&gt; defaultServiceManager(){ // &#x53C8;&#x662F;&#x4E2A;&#x8FDB;&#x7A0B;&#x5355;&#x4F53; if (gDefaultServiceManager != NULL) return gDefaultServiceManager; ... ... gDefaultServiceManager = interface_cast&lt;IServiceManager&gt;( ProcessState::self()-&gt;getContextObject(NULL)); ... ... return gDefaultServiceManager;} ProcessState::getContextObject(NULL)&#x88C5;&#x914D;&#x6210;&#x706B;&#x8F66; &#x51FD;&#x6570;ProcessState::self()&#x5DF2;&#x7ECF;&#x8BB2;&#x8FC7;&#x4E86;&#xFF0C;&#x6765;&#x770B;&#x5B83;&#x7684;getContextObject(NULL)&#x51FD;&#x6570;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738// frameworks/native/libs/binder/ProcessState.cpp// #85sp&lt;IBinder&gt; ProcessState::getContextObject(const sp&lt;IBinder&gt;&amp; /*caller*/){ return getStrongProxyForHandle(0);}// #179sp&lt;IBinder&gt; ProcessState::getStrongProxyForHandle(int32_t handle){ sp&lt;IBinder&gt; result; ... ... handle_entry* e = lookupHandleLocked(handle); //&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x603B;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x975E;&#x7A7A;&#x5B9E;&#x4F8B; ... ... IBinder* b = e-&gt;binder; if (b == NULL || !e-&gt;refs-&gt;attemptIncWeak(this)) {// &#x5982;&#x679C;&#x9996;&#x6B21;&#x521B;&#x5EFA;&#xFF0C;b==NULL ... ... b = new BpBinder(handle); // &#x5373;BpBinder(0) e-&gt;binder = b; if (b) e-&gt;refs = b-&gt;getWeakRefs(); result = b; } ... ... return result;}// #166ProcessState::handle_entry* ProcessState::lookupHandleLocked(int32_t handle){ const size_t N=mHandleToObject.size(); // &#x8FD9;&#x662F;&#x4E2A;&#x4EE5;handle&#x4E3A;&#x4E0B;&#x6807;&#x7684;&#x6570;&#x7EC4; if (N &lt;= (size_t)handle) { // &#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x63D2;&#x5165; handle_entry e; e.binder = NULL; e.refs = NULL; status_t err = mHandleToObject.insertAt(e, N, handle+1-N); if (err &lt; NO_ERROR) return NULL; } return &amp;mHandleToObject.edissetItemAt(handle);} &#x51FD;&#x6570;getContextObject(NULL)&#x53EA;&#x662F;&#x8FD4;&#x56DE;&#x4E86;BpBinder(0)&#x7684;&#x5B9E;&#x4F8B;&#x800C;&#x5DF2;&#x3002; interface_cast(...)&#x628A;&#x666E;&#x901A;&#x706B;&#x8F66;&#x5C01;&#x88C5;&#x6210;XX&#x53F7; &#x5176;&#x5B9E;&#x524D;&#x9762;BpBinder(0)&#x5DF2;&#x7ECF;&#x662F;&#x5728;&#x666E;&#x901A;&#x706B;&#x8F66;&#x4E0A;&#x88C5;&#x914D;&#x4E86;&#x76EE;&#x7684;&#x5730;&#x6570;&#x636E;&#xFF0C;&#x53C2;&#x6570;0&#x5C31;&#x662F;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x8F6C;&#x578B;&#x64CD;&#x4F5C;&#x662F;&#x8FDB;&#x4E00;&#x6B65;&#x628A;&#x5B83;&#x5237;&#x6210;XX&#x53F7;&#x3002; 123456789101112// frameworks/native/include/binder/IInterface.h// #41template&lt;typename INTERFACE&gt;inline sp&lt;INTERFACE&gt; interface_cast(const sp&lt;IBinder&gt;&amp; obj){ // INTERFACE=IServiceManager // obj=ProcessState::self()-&gt;getContextObject(NULL)&#xFF0C;&#x5373; // new BpBinder(0) return INTERFACE::asInterface(obj); // &#x4EE3;&#x5165;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x5373;&#xFF1A; // return IServiceManager::asInterface(new BpBinder(0));} IServiceManager::asInterface(...)&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x9690;&#x85CF;&#x5728;&#x4E00;&#x4E2A;&#x5B8F;&#x91CC;&#xFF1A; 123// frameworks/native/libs/binder/IServiceManager.cpp// #185IMPLEMENT_META_INTERFACE(ServiceManager, &quot;android.os.IServiceManager&quot;); &#x8BE5;&#x5B8F;&#x5B9A;&#x4E49;&#x5728;frameworks/native/include/binder/IInterface.h:83&#x5C55;&#x5F00;&#x540E;&#x4E3A;&#xFF1A; 1234567891011121314151617const android::String16 IServiceManager::descriptor(&quot;android.os.IServiceManager&quot;);const android::String16&amp; IServiceManager::getInterfaceDescriptor() const { return IServiceManager::descriptor;}android::sp&lt; IServiceManager &gt; IServiceManager::asInterface( const android::sp&lt;android::IBinder&gt;&amp; obj) { // obj=new BpBinder(0) android::sp&lt; IServiceManager &gt; intr; if (obj != NULL) { intr = static_cast&lt; IServiceManager *&gt;( obj-&gt;queryLocalInterface(IServiceManager::descriptor).get()); if (intr == NULL) { // &#x5BF9;&#x4E8E;BpBinder&#x7C7B;&#x578B;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x6765;&#x8BF4;&#x603B;&#x4E3A;NULL intr = new BpServiceManager(obj); } } return intr; } BpBinder&#x7EE7;&#x627F;&#x81EA;IBinder&#xFF0C; 123456// frameworks/native/libs/binder/Binder.cpp// #42sp&lt;IInterface&gt; IBinder::queryLocalInterface(const String16&amp; /*descriptor*/){ return NULL;} &#x4E5F;&#x5C31;&#x662F;&#x8BF4;obj-&gt;queryLocalInterface(IServiceManager::descriptor)&#x8FD4;&#x56DE;NULL&#xFF0C;&#x53C8;&#x600E;&#x4E48;&#x80FD;&#x8C03;&#x7528;&#x5176;get()&#x6210;&#x5458;&#x51FD;&#x6570;&#x5462;&#xFF1F;&#x6CE8;&#x610F;&#xFF0C;&#x6B64;&#x5904;&#x9700;&#x8981;&#x8003;&#x8651;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;obj&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6307;&#x5411;&#x7A7A;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x53C2;&#x89C1;system/core/include/utils/StrongPointer.h:89&#xFF0C;&#x5176;get()&#x51FD;&#x6570;&#x5C31;&#x8FD4;&#x56DE;&#x5B9E;&#x9645;&#x6307;&#x5411;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5373;&#x4E3A;NULL&#x3002; &#x6240;&#x4EE5;asInterface(...)&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5373;new BpServiceManager(new BpBinder(0))&#x8FD9;&#x4E0D;&#x5C31;&#x662F;&#x62FF;SM&#x53F7;&#x5C01;&#x88C5;&#x7684;&#x666E;&#x901A;&#x706B;&#x8F66;&#x561B;&#x3002;class BpServiceManager&#x5B9A;&#x4E49;&#x5728;frameworks/native/libs/IServiceManager.cpp:126&#xFF0C;&#x6CBF;&#x7740;&#x6D3E;&#x751F;&#x65CF;&#x8C31;&#x5C42;&#x5C42;&#x5411;&#x4E0A;&#x8FFD;&#x6EAF;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A; 1234567891011121314151617// frameworks/natvie/libs/binder/IServiceManager.cpp:129BpServiceManager(const sp&lt;IBinder&gt;&amp; impl) // impl=new BpBinder(0) : BpInterface&lt;IServiceManager&gt;(impl){}// frameworks/native/include/binder/IInterface.h:134template&lt;typename INTERFACE&gt;inline BpInterface&lt;INTERFACE&gt;::BpInterface(const sp&lt;IBinder&gt;&amp; remote) : BpRefBase(remote) // remote = new BpBinder(0){}// frameworks/native/libs/binder/Binder.cpp:241BpRefBase::BpRefBase(const sp&lt;IBinder&gt;&amp; o) : mRemote(o.get()), mRefs(NULL), mState(0) // mRemote = new BpBinder(0){ ... ...} &#x6765;&#x770B;&#x770B;class BpServiceManager&#x7684;&#x5B9A;&#x4E49;&#xFF1A; 1234567891011121314151617181920// frameworks/native/libs/binder/IServiceManager.cpp:126class BpServiceManager : public BpInterface&lt;IServiceManager&gt;{public: BpServiceManager(const sp&lt;IBinder&gt;&amp; impl) : BpInterface&lt;IServiceManager&gt;(impl) {} virtual sp&lt;IBinder&gt; getService(const String16&amp; name) const {... ...} virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const {... ...} virtual status_t addService(const String16&amp; name, const sp&lt;IBinder&gt;&amp; service, bool allowIsolated) {... ...} virtual Vector&lt;String16&gt; listServices() {... ...}}; &#x8BE5;&#x7C7B;&#x5C01;&#x88C5;&#x4E86;ServiceManager&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x5C11;&#xFF0C;&#x4E3B;&#x8981;&#x5C31;&#x662F;addService(...)&#x548C;addService(...)&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x5C01;&#x88C5;&#x4E86;ServiceManager&#x6CE8;&#x518C;&#x670D;&#x52A1;&#x548C;&#x67E5;&#x627E;&#x670D;&#x52A1;&#x7684;&#x6570;&#x636E;&#x5305;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x201C;&#x666E;&#x901A;&#x706B;&#x8F66;&#x201D;remote()&#x628A;&#x6570;&#x636E;&#x5305;&#x53D1;&#x51FA;&#x53BB;&#x3002; &gt; sm&#x5C31;&#x662F;&#x7ED9;BpBinder(0)&#x52A0;&#x4E86;&#x8584;&#x8584;&#x4E00;&#x5C42;&#x5C01;&#x88C5;&#x6210;&#x4E3A;BpServiceManager&#x3002; addService(...)&#x6DFB;&#x52A0;&#x670D;&#x52A1; Server&#x7AEF;&#x628A;addService(...)&#x7684;&#x8C03;&#x7528;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5305; &#x5BF9;&#x4E8E;Server&#x7AEF;&#xFF0C;&#x6DFB;&#x52A0;&#x670D;&#x52A1;&#x7684;&#x8C03;&#x7528;&#x7B80;&#x5355;&#x660E;&#x4E86;&#xFF0C;&#x4F20;&#x5165;&#x670D;&#x52A1;&#x7684;&#x540D;&#x5B57;&#x4EE5;&#x53CA;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x7684;&#x5BF9;&#x8C61;&#xFF1B;&#x5BA2;&#x6237;&#x7AEF;&#x67E5;&#x627E;&#x670D;&#x52A1;&#x65F6;&#x53EA;&#x9700;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x540D;&#x5B57;&#xFF0C;&#x5373;&#x53EF;&#x83B7;&#x5F97;&#x670D;&#x52A1;&#x7684;&#xFF08;&#x4EE3;&#x7406;&#xFF09;&#x5BF9;&#x8C61;&#x3002;&#x6DFB;&#x52A0;&#x670D;&#x52A1;&#x7684;&#x4EE3;&#x7801;&#x5728;TestService.cpp:30 sm-&gt;addService(String16(&quot;service.testservice&quot;), new BnTestService()); &#x4E0A;&#x4E00;&#x8282;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x8FC7;sm&#x662F;BpServiceManager&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x5176;mRemote&#x6210;&#x5458;&#x5373;BpBinder(0)&#x3002; BpServiceManager::addService(...)&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314// frameworks/native/libs/binder/IServiceManager.cpp// #155virtual status_t addService(const String16&amp; name, const sp&lt;IBinder&gt;&amp; service, bool allowIsolated){ // name=&quot;service.testservice&quot;, service=new BnTestService() // allowIsolated &#x9ED8;&#x8BA4;&#x503C;&#x4E3A; false&#xFF0C;&#x5B9A;&#x4E49;&#x5728;IserviceManager.h:49 Parcel data, reply; data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor()); data.writeString16(name); data.writeStrongBinder(service); data.writeInt32(allowIsolated ? 1 : 0); status_t err = remote()-&gt;transact(ADD_SERVICE_TRANSACTION, data, &amp;reply); return err == NO_ERROR ? reply.readExceptionCode() : err;} Parcel&#x7684;&#x5C01;&#x88C5;&#x7EC6;&#x8282;&#x53EF;&#x53C2;&#x89C1;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E94;&#xFF09;&#x2014;&#x2014; Parcel&#x662F;&#x600E;&#x4E48;&#x6253;&#x5305;&#x7684;&#xFF1F;&#x300B;&#x3002;data&#x4E2D;&#x643A;&#x5E26;&#x7684;&#x91CD;&#x8981;&#x6570;&#x636E;&#x8FD8;&#x662F;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x4EE5;&#x53CA;&#x670D;&#x52A1;&#x5BF9;&#x8C61;&#x3002;remote()&#x8FD4;&#x56DE;&#x7684;&#x662F;BpBinder(0)&#xFF0C;&#x56E0;&#x6B64;&#x6765;&#x770B;BpBinder::transact(...) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768// frameworks/native/libs/binder/BpBinder.cpp:159status_t BpBinder::transact( uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code = ADD_SERVICE_TRANSACTION // data &#x643A;&#x5E26;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x548C;&#x670D;&#x52A1;&#x5BF9;&#x8C61; // reply &#x4E00;&#x4E2A;&#x6E05;&#x767D;&#x7684;Parcel // flags &#x9ED8;&#x8BA4;&#x4E3A;0&#xFF0C;&#x5B9A;&#x4E49;&#x5728;Binder.h:37 ... ... status_t status = IPCThreadState::self()-&gt;transact( mHandle, code, data, reply, flags); // mHandle=0 ... ...}// frameworks/native/libs/binder/IPCThreadState.cpp:548status_t IPCThreadState::transact(int32_t handle, uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // handle 0 // code ADD_SERVICE_TRANSACTION // data &#x643A;&#x5E26;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x548C;&#x670D;&#x52A1;&#x5BF9;&#x8C61; // reply &#x6307;&#x5411;&#x4E00;&#x4E2A;&#x6E05;&#x767D;&#x7684;Parcel // flags 0 ... ... flags |= TF_ACCEPT_FDS; // flags = TF_ACCEPT_FDS ... ... err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, NULL); ... ... if ((flags &amp; TF_ONE_WAY) == 0) { // &#x4E3A;&#x771F; ... ... if (reply) { // &#x975E;&#x7A7A; err = waitForResponse(reply); } ... ... } ... ... return err;}// frameworks/native/libs/binder/IPCThreadState.cpp:904status_t IPCThreadState::writeTransactionData(int32_t cmd, uint32_t binderFlags, int32_t handle, uint32_t code, const Parcel&amp; data, status_t* statusBuffer){ // cmd BC_TRANSACTION // binderFlags TF_ACCEPT_FDS // handle 0 // code ADD_SERVICE_TRANSACTION // data &#x643A;&#x5E26;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x548C;&#x670D;&#x52A1;&#x5BF9;&#x8C61; // statusBuffer NULL binder_transaction_data tr; tr.target.ptr = 0; tr.target.handle = handle; // 0 tr.code = code; // ADD_SERVICE_TRANSACTION tr.flags = binderFlags; // TF_ACCEPT_FDS tr.cookie = 0; tr.sender_pid = 0; tr.sender_euid = 0; ... ... tr.data_size = data.ipcDataSize(); tr.data.ptr.buffer = data.ipcData(); tr.offsets_size = data.ipcObjectsCount()*sizeof(binder_size_t); tr.data.ptr.offsets = data.ipcObjects(); ... ... mOut.writeInt32(cmd); mOut.write(&amp;tr, sizeof(tr)); return NO_ERROR;} &#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x5B83;&#x8868;&#x8FBE;&#x4E86;Server&#x7AEF;&#x672C;&#x6B21;&#x8BF7;&#x6C42;&#x7684;&#x5177;&#x4F53;&#x5185;&#x5BB9;&#xFF0C;&#x5373;&#x628A;addService(...)&#x5C01;&#x88C5;&#x6210;&#x7684;&#x6570;&#x636E;&#x5305;&#x3002;&#x5176;&#x4E2D;tr&#x8BB0;&#x5F55;&#x5B9A;&#x957F;&#x7684;&#x63A7;&#x5236;&#x4FE1;&#x606F;&#xFF0C;data&#x8BB0;&#x5F55;&#x53D8;&#x957F;&#x7684;&#x6570;&#x636E;&#x4FE1;&#x606F;&#x3002;&#x672C;&#x6B21;&#x7684;&#x63A7;&#x5236;&#x4FE1;&#x606F;&#x7684;&#x6838;&#x5FC3;&#x5185;&#x5BB9;&#x5C31;&#x662F;ADD_SERVICE_TRANSACTION&#xFF0C;&#x6570;&#x636E;&#x4FE1;&#x606F;&#x7684;&#x6838;&#x5FC3;&#x5185;&#x5BB9;&#x662F;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x548C;&#x670D;&#x52A1;&#x5B9E;&#x4F53;&#x3002; &#x7EC4;&#x7EC7;&#x5B8C;&#x6570;&#x636E;&#x63A5;&#x4E0B;&#x6765;&#x663E;&#x7136;&#x8981;&#x53D1;&#x51FA;&#x53BB;&#xFF0C; &#x6CBF;&#x7740;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x5177;&#x4F53;&#x53D1;&#x9001;&#x6570;&#x636E;&#x7684;IPCThreadState::waitForResponse(...) 1234567891011121314151617181920212223242526272829303132333435363738394041// frameworks/native/libs/binder/IPCThreadState.cpp:712status_t IPCThreadState::waitForResponse(Parcel *reply, status_t *acquireResult){ // reply &#x6307;&#x5411;&#x4E00;&#x4E2A;&#x6E05;&#x767D;&#x7684;Parcel // acquireResult NULL uint32_t cmd; int32_t err; while (1) { if ((err=talkWithDriver()) &lt; NO_ERROR) break; ... ... cmd = (uint32_t)mIn.readInt32(); // &#x63A5;&#x4E0B;&#x6765;&#x6839;&#x636E;ServiceManager&#x5E94;&#x7B54;&#x6570;&#x636E;&#x4E2D;&#x7684;cmd&#x5206;&#x522B;&#x5904;&#x7406;&#xFF0C;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x5904;&#x7406;&#x6682;&#x4E14;&#x4E0D;&#x8868; ... ... }... ...}// frameworks/natvie/libs/binder/IPCThreadState.cpp:803status_t IPCThreadState::talkWithDriver(bool doReceive){ // doReceive &#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x4E3A;true&#xFF0C;&#x5B9A;&#x4E49;&#x5728;IPCThreadState.h:98 ... ... binder_write_read bwr; ... ... bwr.write_size = outAvail; bwr.write_buffer = (uintptr_t)mOut.data(); ... ... bwr.read_size = mIn.dataCapacity(); bwr.read_buffer = (uintptr_t)mIn.data(); ... ... status_t err; do { ... ... // &#x5BF9;/dev/binder&#x5B8C;&#x6210;&#x4E00;&#x6B21;&#x8BFB;&#x5199;&#x64CD;&#x4F5C; if (ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr) &gt;= 0) err = NO_ERROR; ... ... } while (err == -EINTR); ... ... return err;} &#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x780D;&#x6389;&#x7EC6;&#x679D;&#x672B;&#x8282;&#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x4E24;&#x4E2A;&#x4E8B;&#xFF1A;1&#x3001;&#x4ECE;/dev/binder&#x5B8C;&#x6210;&#x4E00;&#x6B21;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#xFF0C;&#x628A;&#x524D;&#x9762;&#x7EC4;&#x597D;&#x7684;&#x6570;&#x636E;&#x5305;mOut&#x53D1;&#x51FA;&#x53BB;&#xFF0C;&#x628A;&#x8BFB;&#x5165;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x653E;&#x5230;mIn&#x4E2D;&#xFF1B;2&#x3001;&#x6839;&#x636E;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x4E2D;&#x7684;cmd&#x505A;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#x3002;&#x6211;&#x4EEC;&#x5148;&#x770B;1&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x5206;&#x6790;&#x8FC7;ServiceManager&#x5982;&#x4F55;&#x7EC4;&#x7EC7;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x624D;&#x80FD;&#x5206;&#x6790;2&#x4E2D;&#x600E;&#x4E48;&#x5904;&#x7406;&#x3002; 1&#x4E2D;&#x6570;&#x636E;&#x901A;&#x8FC7;ioctl(...)&#x51FD;&#x6570;&#x53D1;&#x5411;/dev/binder&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5E94;&#x8BE5;&#x53BB;&#x770B;&#x9A71;&#x52A8;&#x5C42;&#x600E;&#x4E48;&#x5904;&#x7406;&#x4E86;&#x3002; &#x9A71;&#x52A8;&#x5C42;&#x600E;&#x4E48;&#x5904;&#x7406;Server&#x7AEF;&#x7684;addService&#x6570;&#x636E;&#x5305; &#x627F;&#x63A5;ioctl(m_Process-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr)&#x7684;&#x9A71;&#x52A8;&#x5C42;&#x51FD;&#x6570;&#x662F;binder_ioctl(...)&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x5927;&#x6846;&#x67B6;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF1A; * &#x5C06;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4; * &#x6839;&#x636E;cmd&#x7684;&#x503C;&#xFF0C;&#x5BF9;&#x6570;&#x636E;&#x505A;&#x4E0D;&#x540C;&#x5904;&#x7406;&#x3002;&#x8FD9;&#x91CC;&#x53EA;&#x6D89;&#x53CA;&#x4E86;BINDER_WRITE_READ&#x547D;&#x4EE4;&#xFF0C;&#x5B83;&#x7684;&#x5904;&#x7406;&#x53C8;&#x5206;&#x4E24;&#x90E8;&#x5206; - &#x8C03;&#x7528;binder_thread_write(...)&#x6765;&#x5904;&#x7406;bwr&#x4E2D;&#x5199;&#x7F13;&#x51B2;&#x533A;&#x91CC;&#x7528;&#x6237;&#x5199;&#x5165;&#x7684;&#x6570;&#x636E; - &#x8C03;&#x7528;binder_thread_read(...)&#x5C06;&#x7528;&#x6237;&#x8981;&#x8BFB;&#x51FA;&#x7684;&#x6570;&#x636E;&#x653E;&#x5230;bwr&#x4E2D;&#x8BFB;&#x7F13;&#x51B2;&#x533A;&#x91CC; * &#x5C06;&#x5904;&#x7406;&#x5B8C;&#x7684;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x56DE;&#x7528;&#x6237;&#x7A7A;&#x95F4; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546// kernel/goldfish/drivers/staging/android/binder.c:2716static long binder_ioctl(struct file *filp, unsigned int cmd, unsigned long arg){ // cmd BINDER_WRITE_READ // arg &#x6307;&#x5411;bwr&#x7684;&#x5730;&#x5740; int ret; struct binder_proc *proc = filp-&gt;private_data; struct binder_thread *thread; unsigned int size = _IOC_SIZE(cmd); void __user *ubuf = (void __user *)arg; ... ... thread = binder_get_thread(proc); ... ... switch (cmd) { case BINDER_WRITE_READ: { struct binder_write_read bwr; ... ... // &#x5C06;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;bwr&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4; if (copy_from_user(&amp;bwr, ubuf, sizeof(bwr))) { ... ... } ... ... if (bwr.write_size &gt; 0) { // &#x8868;&#x660E;bwr&#x7684;&#x5199;&#x7F13;&#x51B2;&#x533A;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x5C06;&#x6570;&#x636E;&#x53D1;&#x9001;&#x5230;&#x76EE;&#x6807; ret = binder_thread_write(proc, thread, (void __user *)bwr.write_buffer, bwr.write_size, &amp;bwr.write_consumed); ... ... } if (bwr.read_size &gt; 0) { // &#x8868;&#x660E;bwr&#x7684;&#x8BFB;&#x7F13;&#x51B2;&#x533A;&#x6709;&#x7A7A;&#x95F4;&#xFF0C;&#x8BFB;&#x53D6;&#x6570;&#x636E; ret = binder_thread_read(proc, thread, (void __user *)bwr.read_buffer, bwr.read_size, &amp;bwr.read_consumed, filp-&gt;f_flags &amp; O_NONBLOCK); ... ... if (!list_empty(&amp;proc-&gt;todo)) wake_up_interruptible(&amp;proc-&gt;wait); ... ... } ... ... // &#x5C06;&#x5904;&#x7406;&#x540E;&#x7684;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x56DE;&#x7528;&#x6237;&#x7A7A;&#x95F4; if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr))) { ... ... } break; } ... ... }... ... return ret;} &#x5148;&#x6765;&#x770B;&#x5199;&#x5165;&#x7684;&#x90E8;&#x5206;&#xFF0C;bwr&#x7684;write_buffer&#x662F;&#x4E00;&#x4E2A;cmd&#x8DDF;&#x7740;&#x4E00;&#x4E2A;binder_transaction_data&#x7ED3;&#x6784;&#x4F53;&#x3002;&#x51FD;&#x6570;&#x7684;&#x5927;&#x6846;&#x67B6;&#x662F;&#x6839;&#x636E;cmd&#x505A;&#x4E0D;&#x540C;&#x7684;&#x5904;&#x7406;&#xFF0C;addService&#x8BF7;&#x6C42;&#x5BF9;&#x5E94;&#x7684;cmd&#x662F;BC_TRANSACTION&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x53EA;&#x770B;&#x8FD9;&#x90E8;&#x5206;&#x3002;&#x5B83;&#x628A;binder_trsansction_data&#x7ED3;&#x6784;&#x4F53;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;binder_transaction(...)&#x6765;&#x5904;&#x7406;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#xFF1A; 1234567891011121314151617181920212223242526272829303132// kernel/goldfish/drivers/staging/android/binder.c:1837int binder_thread_write(struct binder_proc *proc, struct binder_thread *thread, void __user *buffer, int size, signed long *consumed){ // buffer bwr.write_buffer // size brw.write_size // consumed brw.write_confumed uint32_t cmd; void __user *ptr = buffer + *consumed; void __user *end = buffer + size; while (ptr &lt; end &amp;&amp; thread-&gt;return_error == BR_OK) { if (get_user(cmd, (uint32_t __user *)ptr)) // &#x4ECE;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x62FF;&#x5230;cmd return -EFAULT; ptr += sizeof(uint32_t); ... ... switch (cmd) { ... ... case BC_TRANSACTION: case BC_REPLY: { struct binder_transaction_data tr; if (copy_from_user(&amp;tr, ptr, sizeof(tr)))// &#x5C06;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;tr&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4; return -EFAULT; ptr += sizeof(tr); binder_transaction(proc, thread, &amp;tr, cmd == BC_REPLY); // &#x5904;&#x7406;tr break; } ... ... } *consumed = ptr - buffer; } return 0;} binder_transaction(...)&#x51FD;&#x6570;&#x662F;&#x5904;&#x7406;&#x5199;&#x5165;&#x6570;&#x636E;&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x6DF1;&#x5165;&#x5206;&#x6790;&#x4EE3;&#x7801;&#x4E4B;&#x524D;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x518D;&#x6E29;&#x4E60;&#x4E00;&#x4E0B;&#x5DF2;&#x7ECF;&#x4ECE;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x7684;Server&#x7AEF;&#x4E3A;addService&#x7EC4;&#x7EC7;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF1A; binder_transaction(...)&#x51FD;&#x6570;&#x7684;&#x6838;&#x5FC3;&#x529F;&#x80FD;&#x5C31;&#x662F;&#x628A;&#x8FD9;&#x4EFD;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;binder&#x4E8B;&#x52A1;struct binder_transaction&#xFF0C;&#x5E76;&#x628A;&#x8BE5;&#x4E8B;&#x52A1;&#x7ED3;&#x6784;&#x4F53;&#x6302;&#x5230;&#x76EE;&#x6807; binder_proc&#x6216;&#x8005;binder_thread&#x7684;todo&#x961F;&#x5217;&#x4E2D;&#x53BB;&#x3002;&#x76EE;&#x6807;&#x4FA7;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x7684;todo&#x961F;&#x5217;&#x4E2D;&#x6709;&#x5185;&#x5BB9;&#xFF0C;&#x4FBF;&#x53D6;&#x4E0B;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x4ECE;&#x53D1;&#x8D77;&#x7AEF;&#x5230;&#x63A5;&#x6536;&#x7AEF;&#x7684;&#x53D1;&#x9001;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138kernel/goldfish/drivers/staging/android/binder.c:1402static void binder_transaction(struct binder_proc *proc, struct binder_thread *thread, struct binder_transaction_data *tr, int reply){ // reply (cmd==BC_REPLY)&#x5373;false struct binder_transaction *t; struct binder_work *tcomplete; size_t *offp, *off_end; struct binder_proc *target_proc; struct binder_thread *target_thread = NULL; struct binder_node *target_node = NULL; struct list_head *target_list; wait_queue_head_t *target_wait; struct binder_transaction *in_reply_to = NULL; ... ... if (tr-&gt;target.handle) { // &#x4ECE;&#x4E0A;&#x56FE;&#x4E0A;&#x67E5;&#x5230;handle&#x4E3A;0 ... ... } else { target_node = binder_context_mgr_node; // &#x53D1;&#x5F80;ServiceManager ... ... } ... ... // &#x8FD9;&#x662F;ServiceManager&#x5728;&#x6253;&#x5F00;/dev/binder&#x65F6;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x4E3A;&#x8BE5;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x7684;&#x5185;&#x6838;&#x6570;&#x636E;&#x7ED3;&#x6784; target_proc = target_node-&gt;proc; ... ... if (!(tr-&gt;flags &amp; TF_ONE_WAY) &amp;&amp; thread-&gt;transaction_stack) { struct binder_transaction *tmp; tmp = thread-&gt;transaction_stack; ... ... while (tmp) { if (tmp-&gt;from &amp;&amp; tmp-&gt;from-&gt;proc == target_proc) target_thread = tmp-&gt;from; tmp = tmp-&gt;from_parent; } } if (target_thread) { e-&gt;to_thread = target_thread-&gt;pid; target_list = &amp;target_thread-&gt;todo; target_wait = &amp;target_thread-&gt;wait; } else { target_list = &amp;target_proc-&gt;todo; target_wait = &amp;target_proc-&gt;wait; } ... ... t = kzalloc(sizeof(*t), GFP_KERNEL); // &#x521B;&#x5EFA;binder_transaction&#x8282;&#x70B9; ... ... tcomplete = kzalloc(sizeof(*tcomplete), GFP_KERNEL); //&#x521B;&#x5EFA;binder_work&#x8282;&#x70B9; ... ... if (!reply &amp;&amp; !(tr-&gt;flags &amp; TF_ONE_WAY)) // &#x4E3A;&#x771F; t-&gt;from = thread; ... ... t-&gt;sender_euid = proc-&gt;tsk-&gt;cred-&gt;euid; t-&gt;to_proc = target_proc; // ServiceManager t-&gt;to_thread = target_thread; t-&gt;code = tr-&gt;code; // ADD_SERVICE_TRANSACTION t-&gt;flags = tr-&gt;flags; // TF_ACCEPT_FDS t-&gt;priority = task_nice(current); ... ... t-&gt;buffer = binder_alloc_buf(target_proc, tr-&gt;data_size, tr-&gt;offsets_size, !reply &amp;&amp; (t-&gt;flags &amp; TF_ONE_WAY)); ... ... t-&gt;buffer-&gt;allow_user_free = 0; t-&gt;buffer-&gt;debug_id = t-&gt;debug_id; t-&gt;buffer-&gt;transaction = t; t-&gt;buffer-&gt;target_node = target_node; ... ... if (target_node) binder_inc_node(target_node, 1, 0, NULL); offp = (size_t *)(t-&gt;buffer-&gt;data + ALIGN(tr-&gt;data_size, sizeof(void *))); // &#x5C06;tr&#x7684;&#x6570;&#x636E;&#x533A;&#x62F7;&#x8D1D;&#x5230;buffer if (copy_from_user(t-&gt;buffer-&gt;data, tr-&gt;data.ptr.buffer, tr-&gt;data_size)) { ... ... } // &#x5C06;tr&#x7684;binder&#x5BF9;&#x8C61;&#x504F;&#x79FB;&#x6570;&#x7EC4;&#x62F7;&#x8D1D;&#x5230;buffer if (copy_from_user(offp, tr-&gt;data.ptr.offsets, tr-&gt;offsets_size)) { ... ... } ... ... off_end = (void *)offp + tr-&gt;offsets_size; for (; offp &lt; off_end; offp++) { struct flat_binder_object *fp; ... ... fp = (struct flat_binder_object *)(t-&gt;buffer-&gt;data + *offp); switch (fp-&gt;type) { case BINDER_TYPE_BINDER: case BINDER_TYPE_WEAK_BINDER: { // type&#x4E3A;BINDER_TYPE_BINDER struct binder_ref *ref; // fp-&gt;binder&#x662F;BnTestService&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#xFF0C;binder_get_node&#x51FD;&#x6570;&#x5728; // proc-&gt;node&#x4E2D;&#x67E5;&#x627E;fp-&gt;binder&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x5728;&#x8BE5;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x521B;&#x5EFA; struct binder_node *node = binder_get_node(proc, fp-&gt;binder); if (node == NULL) { node = binder_new_node(proc, fp-&gt;binder, fp-&gt;cookie); ... ... node-&gt;min_priority = fp-&gt;flags &amp; FLAT_BINDER_FLAG_PRIORITY_MASK; node-&gt;accept_fds = !!(fp-&gt;flags &amp; FLAT_BINDER_FLAG_ACCEPTS_FDS); } ... ... // &#x5728;&#x76EE;&#x6807;&#xFF08;&#x5373;ServiceManager&#xFF09;binder_proc&#x4E2D;&#x67E5;&#x627E;node&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#x5219;&#x521B;&#x5EFA; ref = binder_get_ref_for_node(target_proc, node); ... ... if (fp-&gt;type == BINDER_TYPE_BINDER) fp-&gt;type = BINDER_TYPE_HANDLE; else fp-&gt;type = BINDER_TYPE_WEAK_HANDLE; fp-&gt;handle = ref-&gt;desc; binder_inc_ref(ref, fp-&gt;type == BINDER_TYPE_HANDLE, &amp;thread-&gt;todo); ... ... } break; ... ... } if (reply) { // &#x4E3A;&#x5047; ... ... } else if (!(t-&gt;flags &amp; TF_ONE_WAY)) { // &#x4E3A;&#x771F; ... ... t-&gt;need_reply = 1; t-&gt;from_parent = thread-&gt;transaction_stack; thread-&gt;transaction_stack = t; } ... ... t-&gt;work.type = BINDER_WORK_TRANSACTION; list_add_tail(&amp;t-&gt;work.entry, target_list); // &#x5C06;t&#x63D2;&#x5165;&#x76EE;&#x6807;todo&#x961F;&#x5217; tcomplete-&gt;type = BINDER_WORK_TRANSACTION_COMPLETE; list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo); if (target_wait) wake_up_interruptible(target_wait); return;... ...} &#x7ECF;&#x8FC7;binder_transaction(...)&#x7684;&#x5904;&#x7406;&#xFF0C;&#x4EA7;&#x751F;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x8BE5;&#x51FD;&#x6570;&#x7684;&#x4E3B;&#x8981;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; * &#x751F;&#x6210;&#x4E86;&#x4E8B;&#x52A1;struct binder_transaction t&#xFF0C;&#x5E76;&#x4E3A;&#x4E4B;&#x5206;&#x914D;&#x4E86;&#x6570;&#x636E;&#x7F13;&#x51B2;&#x533A;struct binder_buffer * &#x5C06;tr&#x7684;data&#x90E8;&#x5206;&#x62F7;&#x8D1D;&#x5230;t&#x7684;&#x6570;&#x636E;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x5E76;&#x9010;&#x4E2A;&#x5206;&#x6790;&#x5176;&#x4E2D;&#x7684;binder&#x5BF9;&#x8C61;&#xFF1A; - &#x5982;&#x679C;&#x5176;&#x7C7B;&#x578B;&#x4E3A;BINDER_TYPE_BINDER&#xFF0C;&#x5219;&#x4FEE;&#x6539;&#x4E3A;BINDER_TYPE_HANDLE&#xFF0C;&#x5E76;&#x5C06;&#x539F;&#x5148;&#x6307;&#x5411;binder&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;binder&#x5B57;&#x6BB5;&#x4FEE;&#x6539;&#x4E3A;&#x6307;&#x5411;&#x8BE5;binder&#x5F15;&#x7528;handle&#x5B57;&#x6BB5; - &#x5728;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x7684;nodes&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x63D2;&#x5165;binder&#x7684;&#x5B9E;&#x4F53;binder_node - &#x5728;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x7684;refs_by_node&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x63D2;&#x5165;binder&#x7684;&#x5F15;&#x7528;binder_ref * &#x5C06;t&#x63D2;&#x5165;&#x5230;&#x76EE;&#x6807;todo&#x961F;&#x5217;&#x4E2D; &#x94F6;&#x884C;&#x4E3A;&#x4E86;&#x8BA9;&#x81EA;&#x5DF1;&#x7684;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x6CE8;&#x518C;&#x5230;&#x53D6;&#x6B3E;&#x673A;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x5411;&#x53D6;&#x6B3E;&#x673A;&#x63D0;&#x4EA4;&#x7533;&#x8BF7;&#xFF0C;&#x628A;&#x81EA;&#x5DF1;&#x7684;&#x94F6;&#x884C;&#x540D;&#x79F0;&#x4EE5;&#x53CA;&#x5BF9;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x201C;&#x5FEB;&#x9012;&#x201D;&#x7ED9;&#x53D6;&#x6B3E;&#x673A;&#x751F;&#x4EA7;&#x5546;&#x3002;&#x4EE5;&#x4E0A;&#x5C31;&#x586B;&#x5B8C;&#x4E86;&#x7533;&#x8BF7;&#x5355;&#xFF0C;&#x628A;&#x914D;&#x5957;&#x7684;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x523B;&#x5165;&#x5149;&#x76D8;&#xFF0C;&#x628A;&#x4E8C;&#x8005;&#x88C5;&#x5165;&#x4FE1;&#x5C01;&#xFF0C;&#x518D;&#x628A;&#x4FE1;&#x5C01;&#x6295;&#x9012;&#x5230;&#x4E86;&#x90AE;&#x7BB1;&#x91CC;&#x3002; ServiceManager&#x7AEF;&#x5982;&#x4F55;&#x7B49;&#x5F85;&#x8BF7;&#x6C42; &#x63A5;&#x4E0B;&#x6765;&#x5728;&#x53D6;&#x6B3E;&#x673A;&#x751F;&#x4EA7;&#x5546;&#x7684;&#x53E6;&#x4E00;&#x6BB5;&#xFF0C;&#x5E94;&#x8BE5;&#x5728;&#x4E0D;&#x65AD;&#x5730;&#x67E5;&#x627E;&#x4FE1;&#x7BB1;&#xFF0C;&#x770B;&#x6709;&#x6CA1;&#x6709;&#x65B0;&#x7684;&#x7533;&#x8BF7;&#x53D1;&#x8FC7;&#x6765;&#xFF0C;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x5219;&#x8D76;&#x7D27;&#x6536;&#x4EF6;&#xFF0C;&#x5E76;&#x628A;&#x65B0;&#x7684;&#x94F6;&#x884C;&#x670D;&#x52A1;&#x505A;&#x8FDB;&#x53D6;&#x6B3E;&#x673A;&#x91CC;&#xFF0C;&#x4EE5;&#x6EE1;&#x8DB3;&#x65B0;&#x7684;&#x5BA2;&#x6237;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x5E94;&#x8BE5;&#x4EE5;&#x4E0D;&#x65AD;&#x7B49;&#x5F85;&#x7684;ServiceManager&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;&#x770B;&#x5B83;&#x5982;&#x4F55;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#xFF0C;&#x53C8;&#x5982;&#x4F55;&#x5904;&#x7406;&#x8BF7;&#x6C42;&#x7684;&#x3002; ServiceManager&#x5E94;&#x7528;&#x5C42;&#x5982;&#x4F55;&#x7B49;&#x5F85;&#x8BF7;&#x6C42; &#x627E;&#x5230;ServiceManager&#x7AEF;&#x4E3B;&#x51FD;&#x6570;&#x4EE3;&#x7801;&#xFF1A; 123456789101112131415// frameworks/native/cmds/servicemanager/service_manager.c:347int main(int argc, char **argv){ struct binder_state *bs; bs = binder_open(128*1024); // &#x521B;&#x5EFA;binder_proc&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5206;&#x914D;&#x5185;&#x6838;&#x7A7A;&#x95F4; ... ... if (binder_become_context_manager(bs)) { //&#x5728;&#x5185;&#x6838;&#x8BBE;&#x7F6E;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#x6307;&#x5411;ServiceManager ... ... } ... ... binder_loop(bs, svcmgr_handler); return 0;} &#x51FD;&#x6570;binder_open(...)&#x5B9A;&#x4E49;&#x5728;frameworks/native/cmds/servicemanager/binder.c:96&#xFF0C;&#x5B83;&#x4E3B;&#x8981;&#x8D1F;&#x8D23;&#x6253;&#x5F00;&#x6587;&#x4EF6;/dev/binder&#xFF0C;&#x5E76;&#x628A;&#x5B83;&#x6620;&#x5C04;&#x5230;&#x8FDB;&#x7A0B;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002;&#x672C;&#x8282;&#x524D;&#x9762;&#x8BB2;&#x201C;&#x521D;&#x59CB;&#x5316;proc&#x201D;&#x65F6;&#x5DF2;&#x7ECF;&#x4ECB;&#x7ECD;&#x4E86;&#x6253;&#x5F00;&#x548C;&#x6620;&#x5C04;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x4E3A;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x4E86;struct binder_proc&#xFF0C;&#x5E76;&#x521B;&#x5EFA;&#x4E86;&#x7269;&#x7406;&#x9875;&#x9762;&#x5206;&#x914D;&#x4E86;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x7684;binder_become_context_manager(...)&#x51FD;&#x6570;&#x4EC5;&#x6709;&#x4E00;&#x884C;&#xFF1A; 12345// frameworks/natvie/cmds/servicemanager/binder.c:146int binder_become_context_manager(struct binder_state *bs){ return ioctl(bs-&gt;fd, BINDER_SET_CONTEXT_MGR, 0);} &#x627E;&#x5230;&#x9A71;&#x52A8;&#x5C42;binder_ioctl(...)&#x51FD;&#x6570;&#x7684;case BINDER_SET_CONTEXT_MGR&#x5206;&#x652F;&#xFF08;kernel/goldfish/drivers/staging/android/binder.c:2792&#xFF09;&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x6838;&#x5FC3;&#x5185;&#x5BB9;&#x5C31;&#x662F;&#x7ED9;ServiceManager&#x521B;&#x5EFA;struct binder_node&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5E76;&#x5C06;&#x5168;&#x5C40;&#x53D8;&#x91CF;binder_context_mgr_node&#x6307;&#x5411;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x7684;binder_loop(...)&#x51FD;&#x6570;&#x4F53;&#x73B0;&#x4E86;&#x4E0A;&#x4E00;&#x8282;&#x672B;&#x8BB2;&#x5230;&#x7684;&#x201C;&#x4E0D;&#x65AD;&#x5730;&#x67E5;&#x627E;&#x4FE1;&#x7BB1;&#xFF0C;&#x770B;&#x6709;&#x6CA1;&#x6709;&#x65B0;&#x7684;&#x7533;&#x8BF7;&#x8FC7;&#x6765;&#x201D;&#x7684;&#x903B;&#x8F91;&#x3002; 123456789101112131415161718192021222324252627// frameworks/native/cmds/servicemanager/binder.c:372void binder_loop(struct binder_state *bs, binder_handler func){ int res; struct binder_write_read bwr; uint32_t readbuf[32]; bwr.write_size = 0; bwr.write_consumed = 0; bwr.write_buffer = 0; readbuf[0] = BC_ENTER_LOOPER; binder_write(bs, readbuf, sizeof(uint32_t)); for (;;) { bwr.read_size = sizeof(readbuf); bwr.read_consumed = 0; bwr.read_buffer = (uintptr_t) readbuf; res = ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr); ... ... res = binder_parse(bs, 0, (uintptr_t) readbuf, bwr.read_consumed, func); ... ... }} &#x51FD;&#x6570;binder_write(...)&#x53EA;&#x662F;&#x5411;binder&#x5199;&#x5165;&#x4E86;&#x4E00;&#x4E2A;BC_ENTER_LOOPER&#x547D;&#x4EE4;&#xFF0C;&#x672A;&#x643A;&#x5E26;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#x3002;&#x6765;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x7684;binder_thread_write(...)&#x6709;&#x8BE5;&#x547D;&#x4EE4;&#x5BF9;&#x5E94;&#x7684;case&#x5206;&#x652F;&#xFF0C;&#x5B83;&#x628A;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x52A0;&#x5165;&#x4E86;ServiceManager&#x7684;binder_proc-&gt;threads&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#xFF0C;&#x5E76;&#x5C06;binder_thread&#x7684;looper&#x6807;&#x5FD7;&#x7F6E;&#x4E3A;BINDER_LOOPER_STATE_REGISTERED&#xFF0C;&#x8FD9;&#x79CD;&#x672B;&#x679D;&#x7EC6;&#x8282;&#x5148;&#x4E0D;&#x5FC5;&#x6DF1;&#x7A76;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x7ED9;bwr&#x914D;&#x5907;&#x4E86;&#x8BFB;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;ioctl(...)&#x51FD;&#x6570;&#xFF0C;&#x5750;&#x7B49;&#x6536;&#x4EF6;&#x3002; &#x9A71;&#x52A8;&#x5C42;&#x600E;&#x4E48;&#x63A5;&#x6536;&#x8BF7;&#x6C42; &#x518D;&#x6B21;&#x8FDB;&#x5165;binder_ioctl(...)&#x51FD;&#x6570;&#xFF0C;&#x524D;&#x9762;&#x8C03;&#x7528;binder_write(...)&#x65F6;&#x5DF2;&#x7ECF;&#x628A;&#x8981;&#x5199;&#x7684;&#x6570;&#x636E;&#x90FD;&#x5199;&#x5B8C;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x6B21;&#x518D;&#x8C03;&#x7528;binder_ioctl(...)&#x65F6;bwr.write_size&#x4E3A;0&#xFF0C;&#x76F4;&#x63A5;&#x8FDB;&#x5165;&#x8BFB;&#x73AF;&#x8282;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940static long binder_ioctl(struct file *filp, unsigned int cmd, unsigned long arg){ int ret; struct binder_proc *proc = filp-&gt;private_data; struct binder_thread *thread; unsigned int size = _IOC_SIZE(cmd); void __user *ubuf = (void __user *)arg; ... ... thread = binder_get_thread(proc); ... ... switch (cmd) { case BINDER_WRITE_READ: { struct binder_write_read bwr; ... ... if (copy_from_user(&amp;bwr, ubuf, sizeof(bwr))) { ... ... } if (bwr.write_size &gt; 0) { // &#x6CA1;&#x6709;&#x8981;&#x5199;&#x7684;&#x4E1C;&#x897F; ret = binder_thread_write(proc, thread, (void __user *)bwr.write_buffer, bwr.write_size, &amp;bwr.write_consumed); ... ... } if (bwr.read_size &gt; 0) { ret = binder_thread_read(proc, thread, (void __user *)bwr.read_buffer, bwr.read_size, &amp;bwr.read_consumed, filp-&gt;f_flags &amp; O_NONBLOCK); ... ... if (!list_empty(&amp;proc-&gt;todo)) wake_up_interruptible(&amp;proc-&gt;wait); ... ... } ... ... if (copy_to_user(ubuf, &amp;bwr, sizeof(bwr))) { ... ... } break; } ... ... } ret = 0;... ... return ret;} &#x6765;&#x770B;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x63A5;&#x6536;&#x6570;&#x636E;&#x7684;binder_thread_read(...)&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5148;&#x68C0;&#x67E5;todo&#x961F;&#x5217;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#x5219;&#x65E0;&#x4E8B;&#x53EF;&#x505A;&#xFF0C;&#x5982;&#x679C;&#x6253;&#x5F00;&#x8BBE;&#x5907;&#x65F6;&#x6307;&#x5B9A;&#x4E86;&#x975E;&#x963B;&#x585E;&#x6A21;&#x5F0F;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x4E86;&#x963B;&#x585E;&#x6A21;&#x5F0F;&#xFF0C;&#x5219;&#x7B49;&#x5F85;todo&#x961F;&#x5217;&#x76F4;&#x5230;&#x6709;&#x8BF7;&#x6C42;&#x53D1;&#x8FC7;&#x6765;&#x3002; todo&#x961F;&#x5217;&#x975E;&#x7A7A;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x67E5;&#x770B;&#x8282;&#x70B9;&#x7C7B;&#x578B;&#x3002;Server&#x7AEF;&#x53D1;&#x6765;&#x7684;addService&#x8BF7;&#x6C42;&#x7C7B;&#x578B;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x7FFB;&#x4E00;&#x7FFB;&#x4E0A;&#x9762;&#x201C;binder_transaction(...)&#x51FD;&#x6570;&#x4EA7;&#x751F;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x201D;&#x90A3;&#x5F20;&#x56FE;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7C7B;&#x578B;&#x4E3A;BINDER_WORK_TRANSACTION&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;&#x8BE5;&#x8282;&#x70B9;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7C7B;&#x578B;&#x4E3A;binder_transaction&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x662F;&#x6839;&#x636E;binder_transaction&#x518D;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;binder_transaction_data&#xFF0C;&#x628A;&#x8BE5;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x62F7;&#x8D1D;&#x5230;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117static int binder_thread_read(struct binder_proc *proc, struct binder_thread *thread, void __user *buffer, int size, signed long *consumed, int non_block){ void __user *ptr = buffer + *consumed; void __user *end = buffer + size; int ret = 0; int wait_for_proc_work; ... ...retry: wait_for_proc_work = thread-&gt;transaction_stack == NULL &amp;&amp; list_empty(&amp;thread-&gt;todo); ... ... thread-&gt;looper |= BINDER_LOOPER_STATE_WAITING; ... ... if (wait_for_proc_work) { // &#x6CA1;&#x6709;&#x4E8B;&#x52A1;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x975E;&#x963B;&#x585E;&#x8FD4;&#x56DE;-EAGAIN&#xFF1B;&#x5982;&#x679C;&#x963B;&#x585E;&#x5219;&#x7B49;&#x5F85; } ... ... thread-&gt;looper &amp;= ~BINDER_LOOPER_STATE_WAITING; ... ... while (1) { uint32_t cmd; struct binder_transaction_data tr; struct binder_work *w; struct binder_transaction *t = NULL; // &#x5982;&#x679C;todo&#x961F;&#x5217;&#x975E;&#x7A7A;&#xFF0C;&#x53D6;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF1B;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x56DE;&#x5230;retry if (!list_empty(&amp;thread-&gt;todo)) w = list_first_entry(&amp;thread-&gt;todo, struct binder_work, entry); else if (!list_empty(&amp;proc-&gt;todo) &amp;&amp; wait_for_proc_work) w = list_first_entry(&amp;proc-&gt;todo, struct binder_work, entry); else { if (ptr - buffer == 4 &amp;&amp; !(thread-&gt;looper &amp; BINDER_LOOPER_STATE_NEED_RETURN)) /* no data added */ goto retry; break; } ... ... switch (w-&gt;type) { case BINDER_WORK_TRANSACTION: { t = container_of(w, struct binder_transaction, work); } break; ... ... } ... ... if (t-&gt;buffer-&gt;target_node) { struct binder_node *target_node = t-&gt;buffer-&gt;target_node; tr.target.ptr = target_node-&gt;ptr; // SM Service&#x7684;&#x5F71;&#x5B50;&#x5730;&#x5740; tr.cookie = target_node-&gt;cookie; // SM Service&#x7684;&#x5730;&#x5740; t-&gt;saved_priority = task_nice(current); if (t-&gt;priority &lt; target_node-&gt;min_priority &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) binder_set_nice(t-&gt;priority); else if (!(t-&gt;flags &amp; TF_ONE_WAY) || t-&gt;saved_priority &gt; target_node-&gt;min_priority) binder_set_nice(target_node-&gt;min_priority); cmd = BR_TRANSACTION; } ... ... tr.code = t-&gt;code; // ADD_SERVICE_TRANSACTION tr.flags = t-&gt;flags; // TF_ACCEPT_FDS tr.sender_euid = t-&gt;sender_euid; if (t-&gt;from) { struct task_struct *sender = t-&gt;from-&gt;proc-&gt;tsk; tr.sender_pid = task_tgid_nr_ns(sender, current-&gt;nsproxy-&gt;pid_ns); } else { tr.sender_pid = 0; } tr.data_size = t-&gt;buffer-&gt;data_size; tr.offsets_size = t-&gt;buffer-&gt;offsets_size; tr.data.ptr.buffer = (void *)t-&gt;buffer-&gt;data + proc-&gt;user_buffer_offset; tr.data.ptr.offsets = tr.data.ptr.buffer + ALIGN(t-&gt;buffer-&gt;data_size, sizeof(void *)); if (put_user(cmd, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); if (copy_to_user(ptr, &amp;tr, sizeof(tr))) return -EFAULT; ptr += sizeof(tr); ... ... binder_stat_br(proc, thread, cmd); ... ... list_del(&amp;t-&gt;work.entry); t-&gt;buffer-&gt;allow_user_free = 1; if (cmd == BR_TRANSACTION &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) { t-&gt;to_parent = thread-&gt;transaction_stack; t-&gt;to_thread = thread; thread-&gt;transaction_stack = t; } ... ... break; }done: *consumed = ptr - buffer; if (proc-&gt;requested_threads + proc-&gt;ready_threads == 0 &amp;&amp; proc-&gt;requested_threads_started &lt; proc-&gt;max_threads &amp;&amp; (thread-&gt;looper &amp; (BINDER_LOOPER_STATE_REGISTERED | BINDER_LOOPER_STATE_ENTERED)) /* the user-space code fails to */ /*spawn a new thread if we leave this out */) { proc-&gt;requested_threads++; ... ... if (put_user(BR_SPAWN_LOOPER, (uint32_t __user *)buffer)) return -EFAULT; binder_stat_br(proc, thread, BR_SPAWN_LOOPER); } return 0;} &#x7ECF;&#x8FC7;binder_thread_read(...)&#x5904;&#x7406;&#x540E;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x5B83;&#x7EC4;&#x88C5;&#x4E86;&#x9A71;&#x52A8;&#x5C42;&#x7684;tr&#xFF0C;&#x5E76;&#x628A;&#x8BE5;&#x7ED3;&#x6784;&#x62F7;&#x8D1D;&#x5230;&#x7528;&#x6237;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5B83;&#x7684;&#x6210;&#x5458;buffer&#x6240;&#x6307;&#x5411;&#x7684;binder_buffer&#x7684;data&#x90E8;&#x5206;&#x4E0D;&#x9700;&#x8981;&#x62F7;&#x8D1D;&#x5230;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x8FD9;&#x90E8;&#x5206;&#x7A7A;&#x95F4;&#x5728;&#x5BF9;&#x5E94;&#x7684;&#x7269;&#x7406;&#x9875;&#x9762;&#x5DF2;&#x7ECF;&#x88AB;&#x540C;&#x65F6;&#x6620;&#x5C04;&#x5230;&#x4E86;&#x5185;&#x6838;&#x548C;&#x7528;&#x6237;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x5DF2;&#x7ECF;&#x5177;&#x5907;&#x8DE8;&#x8D8A;&#x9634;&#x9633;&#x4E24;&#x754C;&#x7684;&#x80FD;&#x529B;&#x4E86;&#x3002;&#x8FD9;&#x4E2A;tr&#x5C31;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x8FD4;&#x56DE;&#x7ED9;&#x5E94;&#x7528;&#x5C42;&#x7684;&#x6570;&#x636E;&#x4E86;&#xFF0C;&#x4E5F;&#x5373;&#x662F;ServiceManager&#x8C03;&#x7528;ioctl(...)&#x51FD;&#x6570;&#x7684;&#x7ED3;&#x679C;&#x3002; ServiceManager&#x5E94;&#x7528;&#x5C42;&#x600E;&#x4E48;&#x5904;&#x7406;&#x8BF7;&#x6C42; &#x56DE;&#x5230;&#x5E94;&#x7528;&#x5C42;&#x4EE3;&#x7801;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x5C06;&#x8BFB;&#x5230;&#x7684;&#x6570;&#x636E;&#x8FD4;&#x56DE;&#x7ED9;ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr)&#x7684;bwr&#x53C2;&#x6570;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;binder_parse(...)&#x5C06;&#x89E3;&#x6790;&#x8BE5;&#x6570;&#x636E;&#x3002; &#x6765;&#x770B;binder_parse(...)&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x6536;&#x5230;&#x7684;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x662F;&#x201C;&#x547D;&#x4EE4;+&#x6570;&#x636E;&#x201D;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#x662F;&#x6839;&#x636E;&#x547D;&#x4EE4;&#x505A;&#x4E0D;&#x540C;&#x5904;&#x7406;&#xFF0C;&#x5BF9;&#x4E8E;addService&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x6536;&#x5230;&#x7684;&#x547D;&#x4EE4;&#x4E3A;BR_TRANSACTION&#x3002; &#x518D;&#x770B;&#x9488;&#x5BF9;&#x8BE5;&#x547D;&#x4EE4;&#x7684;&#x903B;&#x8F91;&#x5206;&#x652F;&#xFF0C;&#x5B83;&#x53D6;&#x51FA;binder_transaction_data&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x6210;binder_io&#x683C;&#x5F0F;&#x4EA4;&#x7ED9;msg&#xFF0C;&#x8054;&#x901A;&#x4E00;&#x4E2A;&#x65B0;&#x6784;&#x9020;&#x7684;reply&#x4E00;&#x5E76;&#x4F20;&#x7ED9;func(...)&#x51FD;&#x6570;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637//frameworks/native/cmds/servicemanager/binder.c:204int binder_parse(struct binder_state *bs, struct binder_io *bio, uintptr_t ptr, size_t size, binder_handler func){ int r = 1; uintptr_t end = ptr + (uintptr_t) size; while (ptr &lt; end) { uint32_t cmd = *(uint32_t *) ptr; ptr += sizeof(uint32_t); ... ... switch(cmd) { ... ... case BR_TRANSACTION: { struct binder_transaction_data *txn = (struct binder_transaction_data *) ptr; ... ... if (func) { unsigned rdata[256/4]; struct binder_io msg; struct binder_io reply; int res; // &#x628A;rdata&#x4F5C;&#x4E3A;reply&#x7684;&#x6570;&#x636E;&#x7F13;&#x5B58;&#xFF0C;offs&#x6307;&#x5411;&#x524D;4&#x4E2A;size_t&#xFF0C;data&#x6307;&#x5411;&#x4E4B;&#x540E;&#x7684;&#x90E8;&#x5206; bio_init(&amp;reply, rdata, sizeof(rdata), 4); bio_init_from_txn(&amp;msg, txn); res = func(bs, txn, &amp;msg, &amp;reply); binder_send_reply(bs, &amp;reply, txn-&gt;data.ptr.buffer, res); } ptr += sizeof(*txn); break; } ... ... } } return r;} &#x51FD;&#x6570;&#x6307;&#x9488;func&#x6307;&#x5411;svcmgr_handler(...)&#xFF0C;&#x5728;&#x8FDB;&#x5165;&#x8BE5;&#x51FD;&#x6570;&#x4E4B;&#x524D;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x5E94;&#x7528;&#x5C42;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A; &#x8FD9;&#x4EFD;&#x6570;&#x636E;&#x6700;&#x521D;&#x662F;&#x7531;Server&#x7EC4;&#x7EC7;&#x5E76;&#x53D1;&#x8D77;&#x7684;&#xFF0C;&#x7ECF;&#x8FC7;&#x9A71;&#x52A8;&#x5C42;&#x5904;&#x7406;&#xFF0C;&#x6700;&#x540E;&#x6765;&#x5230;&#x4E86;ServiceManager&#x5E94;&#x7528;&#x5C42;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4FDD;&#x7559;&#x4E86;&#x5728;&#x8FD9;&#x4E2A;&#x8F68;&#x8FF9;&#x4E0A;&#x6240;&#x6709;&#x5173;&#x952E;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x9700;&#x8981;&#x8BF4;&#x660E;&#x7684;&#x662F;&#xFF1A;&#x6709;&#x4E9B;&#x6570;&#x636E;&#x662F;&#x8DE8;&#x8D8A;&#x4E86;&#x9A71;&#x52A8;&#x5C42;&#x548C;&#x5E94;&#x7528;&#x5C42;&#x7684;&#xFF0C;&#x5982;binder_buffer&#xFF0C;&#x6709;&#x4E9B;&#x6570;&#x636E;&#x662F;&#x540C;&#x6837;&#x5185;&#x5BB9;&#x88AB;&#x62F7;&#x8D1D;&#x5230;&#x4E24;&#x5C42;&#xFF0C;&#x5982;txn&#x6240;&#x6307;&#x7684;binder_transaction_data&#xFF0C;&#x4E3A;&#x4E86;&#x538B;&#x7F29;&#x7BC7;&#x5E45;&#xFF0C;&#x6570;&#x636E;&#x4EA7;&#x751F;&#x5728;&#x54EA;&#x4E00;&#x5C42;&#x6211;&#x5C31;&#x628A;&#x5B83;&#x5212;&#x5230;&#x4E86;&#x90A3;&#x5C42;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5B83;&#x7684;&#x526F;&#x672C;&#x53EF;&#x80FD;&#x5DF2;&#x7ECF;&#x4E0D;&#x5728;&#x90A3;&#x5C42;&#x4E86;&#x3002; &#x6700;&#x4E0B;&#x9762;&#x7684;ServiceManager&#x5E94;&#x7528;&#x5C42;&#x90E8;&#x5206;&#x662F;svcmgr_handle(...)&#x5373;&#x5C06;&#x8981;&#x5904;&#x7406;&#x7684;&#x90E8;&#x5206;&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839// frameworks/natvie/cmds/servicemanager/service_manager.c:244int svcmgr_handler(struct binder_state *bs, struct binder_transaction_data *txn, struct binder_io *msg, struct binder_io *reply){ struct svcinfo *si; uint16_t *s; size_t len; uint32_t handle; uint32_t strict_policy; int allow_isolated; ... ... strict_policy = bio_get_uint32(msg); s = bio_get_string16(msg, &amp;len); ... ... switch(txn-&gt;code) { case SVC_MGR_GET_SERVICE: case SVC_MGR_CHECK_SERVICE: ... ... case SVC_MGR_ADD_SERVICE: s = bio_get_string16(msg, &amp;len); // name ... ... handle = bio_get_ref(msg); // service.handle allow_isolated = bio_get_uint32(msg) ? 1 : 0; // 0 if (do_add_service(bs, s, len, handle, txn-&gt;sender_euid, allow_isolated, txn-&gt;sender_pid)) return -1; break; case SVC_MGR_LIST_SERVICES: { ... ... } bio_put_uint32(reply, 0); return 0;} bio_get_xxx(...)&#x7CFB;&#x5217;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;frameworks/native/cmds/servicemanager/binder.c&#x4E2D;&#xFF0C;&#x4ECE;&#x51FD;&#x6570;&#x540D;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x5B83;&#x662F;&#x4ECE;binder_io&#x4E2D;&#x4F9D;&#x6B21;&#x89E3;&#x6790;&#x51FA;xxx&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x3002;bio_get_ref(...)&#x5219;&#x662F;&#x5148;&#x89E3;&#x6790;&#x51FA;flat_binder_object&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x518D;&#x8FD4;&#x56DE;&#x5B83;&#x7684;handle&#x5B57;&#x6BB5;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x518D;&#x8FFD;&#x5B83;&#x7684;&#x4EE3;&#x7801;&#x4E86;&#x3002; &#x6B64;&#x5904;&#x6709;&#x4E00;&#x70B9;&#x975E;&#x5E38;&#x8BE1;&#x5F02;&#xFF1A;txn&#x4F20;&#x8FC7;&#x6765;&#x7684;code&#x662F;ADD_SERVICE_TRANSACTION&#xFF08;&#x5B9A;&#x4E49;&#x5728;frameworks/native/include/binder/IServiceManager.h:61&#xFF09;&#xFF0C;&#x5230;&#x4E86;&#x8FD9;&#x91CC;&#x4E3A;&#x4EC0;&#x4E48;&#x6362;&#x4E86;&#x4E00;&#x5957;&#x540D;&#x79F0;&#xFF1F;SVC_MGR_ADD_SERVICE&#x5B9A;&#x4E49;&#x5728;frameworks/native/cmds/servicemanager/binder.h:40&#xFF0C;&#x4E24;&#x4E2A;&#x503C;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002; &#x6765;&#x770B;&#x63A5;&#x4E0B;&#x6765;&#x7684;do_add_service(...)&#xFF0C;&#x5B83;&#x662F;&#x201C;&#x6DFB;&#x52A0;&#x670D;&#x52A1;&#x201D;&#x7684;&#x7EC8;&#x70B9;&#xFF0C;ServiceManager&#x5982;&#x4F55;&#x5904;&#x7406;&#x201C;&#x6DFB;&#x52A0;&#x670D;&#x52A1;&#x201D;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x903B;&#x8F91;&#x5168;&#x5728;&#x8FD9;&#x4E86;&#x3002; 123456789101112131415161718192021222324252627282930313233int do_add_service(struct binder_state *bs, const uint16_t *s, size_t len, uint32_t handle, uid_t uid, int allow_isolated, pid_t spid){ struct svcinfo *si; ... ... si = find_svc(s, len); if (si) { if (si-&gt;handle) { ... ... svcinfo_death(bs, si); } si-&gt;handle = handle; } else { si = malloc(sizeof(*si) + (len + 1) * sizeof(uint16_t)); ... ... si-&gt;handle = handle; si-&gt;len = len; memcpy(si-&gt;name, s, (len + 1) * sizeof(uint16_t)); si-&gt;name[len] = &apos;\0&apos;; si-&gt;death.func = (void*) svcinfo_death; si-&gt;death.ptr = si; si-&gt;allow_isolated = allow_isolated; si-&gt;next = svclist; svclist = si; } binder_acquire(bs, handle); binder_link_to_death(bs, handle, &amp;si-&gt;death); return 0;} &#x5168;&#x5C40;&#x94FE;&#x8868;svclist&#x7EF4;&#x62A4;&#x6240;&#x6709;&#x6DFB;&#x52A0;&#x8FC7;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x94FE;&#x8868;&#x7684;key&#x662F;name&#xFF0C;&#x5373;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x3002;find_svc(...)&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;&#x5982;&#x679C;&#x4ECE;&#x6765;&#x6CA1;&#x6DFB;&#x52A0;&#x8FC7;&#x670D;&#x52A1;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x8282;&#x70B9;&#xFF0C;&#x628A;&#x5B83;&#x4E32;&#x5230;&#x94FE;&#x8868;&#x4E0A;&#x53BB;&#xFF0C;Client&#x7AEF;&#x6765;&#x67E5;&#x627E;&#x670D;&#x52A1;&#x7684;&#x65F6;&#x5019;&#x80AF;&#x5B9A;&#x4E5F;&#x662F;&#x904D;&#x5386;&#x8BE5;&#x94FE;&#x8868;&#xFF0C;&#x8FD4;&#x56DE;handle&#x54AF;&#x3002;&#x5982;&#x679C;&#x94FE;&#x8868;&#x4E0A;&#x5DF2;&#x7ECF;&#x6709;&#x5339;&#x914D;&#x7684;&#x8282;&#x70B9;&#xFF0C;svcinfo_death(...)&#x5148;&#x91CA;&#x653E;&#x5BF9;si-&gt;handle&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x518D;&#x5C06;si-&gt;handle&#x6307;&#x5411;&#x65B0;&#x7684;handle&#x3002; ProcessState::startThreadPool()&#x65F6;&#x523B;&#x7B49;&#x5F85;&#x7740;&#x63A5;&#x5BA2; &#x94F6;&#x884C;&#x4E1A;&#x662F;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x7684;&#xFF0C;&#x5B8C;&#x6210;&#x6DFB;&#x52A0;&#x4EE5;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x8DDF;&#x53D6;&#x6B3E;&#x673A;&#x751F;&#x4EA7;&#x5546;&#x662F;&#x4E00;&#x6A21;&#x4E00;&#x6837;&#x7684;&#x2014;&#x2014;&#x4E0D;&#x65AD;&#x67E5;&#x627E;&#x4FE1;&#x7BB1;&#xFF0C;&#x770B;&#x6709;&#x6CA1;&#x6709;&#x65B0;&#x7684;&#x7533;&#x8BF7;&#x8FC7;&#x6765;&#xFF0C;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x8D76;&#x7D27;&#x6536;&#x4EF6;&#x5904;&#x7406;&#x3002;&#x53EA;&#x4E0D;&#x8FC7;ServiceManager&#x63D0;&#x4F9B;&#x7684;&#x670D;&#x52A1;&#x662F;&#x6536;&#x5F55;&#x6240;&#x6709;&#x670D;&#x52A1;&#x4FE1;&#x606F;&#xFF0C;&#x800C;Server&#x63D0;&#x4F9B;&#x7684;&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x670D;&#x52A1;&#x3002;&#x6240;&#x4EE5;&#x63A5;&#x4E0B;&#x6765;Server&#x7AEF;&#x5E94;&#x8BE5;&#x4E5F;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5927;&#x5FAA;&#x73AF;&#xFF0C;&#x8BFB;&#x6570;&#x636E;&#xFF0C;&#x5904;&#x7406;&#x6570;&#x636E;&#xFF0C;&#x628A;&#x54CD;&#x5E94;&#x7ED3;&#x679C;&#x5199;&#x5165;binder&#x3002; &#x5F00;&#x542F;&#x4E24;&#x4E2A;&#x5FAA;&#x73AF; TestServer.cpp&#x4EE3;&#x7801;&#x6700;&#x540E;&#x6709;&#x4E24;&#x884C;&#x90FD;&#x8DDF;&#x8FD9;&#x4E2A;&#x5927;&#x5FAA;&#x73AF;&#x76F8;&#x5173;&#xFF1A; 12ProcessState::self()-&gt;startThreadPool();IPCThreadState::self()-&gt;joinThreadPool(); &#x53EA;&#x4E0D;&#x8FC7;&#x7B2C;&#x4E00;&#x884C;&#x542F;&#x52A8;&#x4E86;&#x4E00;&#x4E2A;&#x5B50;&#x7EBF;&#x7A0B;&#xFF0C;&#x5728;&#x5B50;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;&#x4E2D;&#x542F;&#x52A8;&#x5927;&#x5FAA;&#x73AF;&#xFF1B;&#x7B2C;&#x4E8C;&#x884C;&#x5219;&#x5728;&#x5269;&#x4E0B;&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x4E5F;&#x542F;&#x52A8;&#x5927;&#x5FAA;&#x73AF;&#x3002;&#x5148;&#x6765;&#x8FDB;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#xFF1A; 123456789101112131415161718192021222324252627282930313233// frameworks/native/libs/binder/ProcessState.cpp:132void ProcessState::startThreadPool(){ AutoMutex _l(mLock); if (!mThreadPoolStarted) { mThreadPoolStarted = true; spawnPooledThread(true); }}// frameworks/native/libs/binder/ProcessState.cpp:286void ProcessState::spawnPooledThread(bool isMain){ // isMain true if (mThreadPoolStarted) { // true String8 name = makeBinderThreadName(); ... ... sp&lt;Thread&gt; t = new PoolThread(isMain); t-&gt;run(name.string()); }}// frameworks/native/libs/binder/ProcessState.cpp:52class PoolThread : public Thread{... ...protected: virtual bool threadLoop() { IPCThreadState::self()-&gt;joinThreadPool(mIsMain); // mIsMain true return false; } ... ...}; ProcessState::startThreadPool&#x542F;&#x52A8;&#x5B50;&#x7EBF;&#x7A0B;PoolThread&#xFF0C;&#x8BE5;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;&#x91CC;&#x8C03;&#x7528;&#x4E86;IPCThreadState::joinThreadPool(...)&#xFF0C;&#x4F20;&#x5165;&#x53C2;&#x6570;isMain&#x4E3A;true&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x4E5F;&#x4E3A;true&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x5E72;&#x4E86;&#x8DDF;Server&#x4E3B;&#x7EBF;&#x7A0B;&#x63A5;&#x4E0B;&#x6765;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x7684;&#x4E8B;&#x513F;&#x3002;&#x5F04;&#x660E;&#x767D;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x3001;&#x5B50;&#x7EBF;&#x7A0B;&#x5E72;&#x7684;&#x4E8B;&#x513F;&#x5168;&#x660E;&#x767D;&#x4E86;&#x3002; &#x5FAA;&#x73AF;&#x5185;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465// frameworks/native/libs/binder/IPCThreadState.cpp:477void IPCThreadState::joinThreadPool(bool isMain){ ... ... mOut.writeInt32(isMain ? BC_ENTER_LOOPER : BC_REGISTER_LOOPER); ... ... status_t result; do { // &#x51FD;&#x6570;&#x547D;&#x540D;&#x5DF2;&#x7ECF;&#x5F88;&#x6E05;&#x6670;&#x4E86;&#xFF1A;&#x53CD;&#x590D;&#x83B7;&#x53D6;&#x548C;&#x6267;&#x884C;&#x547D;&#x4EE4; ... ... result = getAndExecuteCommand(); ... ... } while (result != -ECONNREFUSED &amp;&amp; result != -EBADF); ... ... mOut.writeInt32(BC_EXIT_LOOPER); talkWithDriver(false);}// frameworks/native/libs/binder/IPCThreadState.cpp:414status_t IPCThreadState::getAndExecuteCommand(){ status_t result; int32_t cmd; result = talkWithDriver(); // &#x8BFB;&#x53D6;&#x6570;&#x636E;&#x5230;mIn if (result &gt;= NO_ERROR) { ... ... cmd = mIn.readInt32(); // &#x89E3;&#x6790;&#x547D;&#x4EE4; ... ... result = executeCommand(cmd); // &#x6267;&#x884C;&#x547D;&#x4EE4; ... ... } return result;}// frameworks/native/libs/binder/IPCThreadState.cpp:947status_t IPCThreadState::executeCommand(int32_t cmd){ BBinder* obj; RefBase::weakref_type* refs; status_t result = NO_ERROR; switch ((uint32_t)cmd) { ... ... case BR_TRANSACTION: { binder_transaction_data tr; result = mIn.read(&amp;tr, sizeof(tr)); ... ... Parcel reply; ... ... if (tr.target.ptr) { sp&lt;BBinder&gt; b((BBinder*)tr.cookie); error = b-&gt;transact(tr.code, buffer, &amp;reply, tr.flags); } else { error = the_context_object-&gt;transact(tr.code, buffer, &amp;reply, tr.flags); } ... ... } break; ... ... } ... ... return result;} &#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5728;IPCThreadState::executeCommand(...)&#xFF0C;&#x8FD9;&#x5957;&#x5904;&#x7406;&#x6A21;&#x5F0F;&#x5927;&#x91CF;&#x5730;&#x906D;&#x9047;&#xFF0C;&#x5DF2;&#x7ECF;&#x975E;&#x5E38;&#x719F;&#x6089;&#x4E86;&#xFF0C;&#x6839;&#x636E;&#x547D;&#x4EE4;&#x505A;&#x4E0D;&#x540C;&#x5904;&#x7406;&#x3002;&#x6211;&#x4EEC;&#x6311;&#x6700;&#x5E38;&#x7528;&#x7684;BR_TRANSACTION&#x6765;&#x5206;&#x6790;&#xFF0C;mIn&#x91CC;&#x9762;&#x7684;&#x6570;&#x636E;&#x5E94;&#x8BE5;&#x7C7B;&#x4F3C;ServiceManager&#x5728;svcmgr_handle(...)&#x5904;&#x7406;&#x4E4B;&#x524D;&#x9762;&#x5BF9;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6B64;&#x5904;&#x7684;tr&#x76F8;&#x5F53;&#x4E8E;&#x56FE;&#x4E2D;&#x7684;txn&#xFF0C;&#x6240;&#x4E0D;&#x540C;&#x7684;&#x662F;tr.cookie&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x518D;&#x662F;ServiceManager&#x7684;Service&#x5730;&#x5740;&#xFF0C;&#x800C;&#x662F;Server&#x7AEF;Service&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5373;Binder&#x5B9E;&#x4F53;&#x5730;&#x5740;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x7528;&#x5B83;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8F6C;&#x6210;BBinder&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x771F;&#x5B9E;&#x8EAB;&#x4EFD;&#x5C31;&#x662F;BnTestService&#x3002; &#x5230;&#x6B64;&#xFF0C;&#x300A;&#x6CE8;&#x518C;&#x670D;&#x52A1;&#x300B;&#x7684;&#x5185;&#x5BB9;&#x7EC8;&#x4E8E;&#x8BB2;&#x5B8C;&#x4E86;&#x3002;&#x5B8C;&#x6210;&#x4E86;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x300B;&#x7CFB;&#x5217;&#x4EE5;&#x540E;&#xFF0C;&#x8FEB;&#x4E0D;&#x53CA;&#x5F85;&#x5730;&#x60F3;&#x628A;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x4E32;&#x8D77;&#x6765;&#x7CFB;&#x7EDF;&#x5730;&#x6574;&#x7406;&#x4E00;&#x904D;&#xFF0C;&#x56E0;&#x4E3A;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x300B;&#x662F;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;&#xFF0C;&#x4E00;&#x8FB9;&#x770B;&#x5404;&#x79CD;&#x8D44;&#x6599;&#x4E00;&#x8FB9;&#x8BFB;&#x6E90;&#x7801;&#x4E00;&#x8FB9;&#x8BB0;&#x7B14;&#x8BB0;&#xFF0C;&#x73B0;&#x5728;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x770B;&#x6709;&#x4E9B;&#x5185;&#x5BB9;&#x662F;&#x9519;&#x7684;&#xFF0C;&#x6709;&#x4E9B;&#x7EC6;&#x679D;&#x672B;&#x8282;&#x662F;&#x6CA1;&#x5FC5;&#x8981;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x6DF1;&#x7A76;&#x7684;&#x3002;&#x4F46;&#x6211;&#x4E5F;&#x4E0D;&#x60F3;&#x628A;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x300B;&#x505A;&#x5927;&#x89C4;&#x6A21;&#x4FEE;&#x6539;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x8BB0;&#x5F55;&#x4E86;&#x6211;&#x521D;&#x6B21;&#x63A2;&#x7D22;Binder&#x7684;&#x8DB3;&#x8FF9;&#x3002;&#x91CD;&#x65B0;&#x4FEE;&#x6539;&#x4F1A;&#x8BA9;&#x5B83;&#x66F4;&#x6B63;&#x786E;&#xFF0C;&#x4F46;&#x4E5F;&#x4F1A;&#x5220;&#x6389;&#x4E00;&#x4E9B;&#x4FE1;&#x606F;&#xFF0C;&#x8BA9;&#x65B0;&#x6765;&#x8005;&#x53EA;&#x80FD;&#x770B;&#x5230;&#x4E00;&#x6761;&#x6700;&#x8FD1;&#x7684;&#x8DEF;&#xFF0C;&#x5374;&#x4E0D;&#x77E5;&#x9053;&#x8FD9;&#x6761;&#x8DEF;&#x662F;&#x600E;&#x4E48;&#x5F00;&#x51FA;&#x6765;&#x7684;&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x6765;&#x8005;&#x53EF;&#x80FD;&#x6B63;&#x662F;&#x51E0;&#x5E74;&#x540E;&#x7684;&#x6211;&#x5462;:)&#xFF0C;&#x5F00;&#x8DEF;&#x7684;&#x8FC7;&#x7A0B;&#x662F;&#x6700;&#x91CD;&#x8981;&#x7684;&#x3002; &#x300A;&#x6CE8;&#x518C;&#x670D;&#x52A1;&#x300B;&#x7684;&#x7BC7;&#x5E45;&#x8FDC;&#x6BD4;&#x6211;&#x9884;&#x60F3;&#x7684;&#x8981;&#x957F;&#xFF0C;&#x6211;&#x539F;&#x672C;&#x8BA1;&#x5212;&#x7528;&#x4E00;&#x7BC7;&#x5C3D;&#x91CF;&#x77ED;&#x7684;&#x5C0F;&#x6587;&#x5C31;&#x80FD;&#x9886;&#x7565;&#x4ECE;&#x8BF7;&#x6C42;&#x7684;&#x53D1;&#x8D77;&#x7AEF;&#xFF0C;&#x5230;&#x9A71;&#x52A8;&#xFF0C;&#x5230;&#x63A5;&#x6536;&#x7AEF;&#x6BCF;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#x7684;&#x63A7;&#x5236;&#x6D41;&#x4E0E;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;&#x8D8A;&#x77ED;&#x8D8A;&#x5BB9;&#x6613;&#x638C;&#x63E1;&#x6982;&#x5FF5;&#xFF0C;&#x4F46;&#x628A;&#x6211;&#x8BA4;&#x4E3A;&#x7684;&#x5173;&#x952E;&#x70B9;&#x90FD;&#x8BF4;&#x660E;&#x767D;&#x4E86;&#xFF0C;&#x5DF2;&#x7ECF;&#x4E0D;&#x7B97;&#x5C0F;&#x6587;&#x4E86;&#x3002;&#x7ED3;&#x5408;&#x76EE;&#x5F55;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x601D;&#x8DEF;&#x8FD8;&#x7B97;&#x6E05;&#x6670;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>深度探索Binder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Excel使用]]></title>
    <url>%2F2016%2F08%2F01%2F2016%2F0801Excel%2F</url>
    <content type="text"><![CDATA[Excel&#x662F;&#x4E2A;&#x597D;&#x4E1C;&#x897F;&#xFF0C;&#x4E0D;&#x7BA1;&#x505A;&#x4EC0;&#x4E48;&#x5DE5;&#x4F5C;&#xFF0C;&#x7CBE;&#x901A;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#x90FD;&#x7EDD;&#x903C;&#x6709;&#x5FC5;&#x8981;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x4F5C;&#x66F4;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#x7EDF;&#x8BA1;&#xFF0C;&#x4E0D;&#x5FC5;&#x52A8;&#x7528;awk&#x6216;python&#xFF0C;&#x9F20;&#x6807;&#x5212;&#x62C9;&#x51E0;&#x4E0B;&#x5C31;OK&#x4E86;&#x3002;&#x800C;&#x4E14;&#x5B83;&#x7247;&#x523B;&#x5C31;&#x80FD;&#x641E;&#x51FA;&#x4E00;&#x4EFD;&#x6570;&#x636E;&#x56FE;&#x8868;&#x51FA;&#x6765;&#xFF0C;&#x5F88;&#x591A;&#x65F6;&#x5019;&#x5B8F;&#x89C2;&#x6570;&#x636E;&#x5206;&#x6790;&#x5FC5;&#x987B;&#x501F;&#x52A9;&#x56FE;&#x8868;&#x800C;&#x4E0D;&#x662F;&#x76EF;&#x6570;&#x5B57;&#x3002;&#x8FD9;&#x7BC7;&#x535A;&#x6587;&#x8BB0;&#x5F55;&#x6211;&#x9047;&#x5230;&#x7684;&#x7A0D;&#x9EBB;&#x70E6;&#x70B9;&#x7684;case&#xFF0C;&#x5F88;&#x591A;&#x95EE;&#x9898;&#x4F1A;&#x4E00;&#x518D;&#x9047;&#x5230;&#x3002;&#x4E0B;&#x6B21;&#x518D;&#x78B0;&#x89C1;&#xFF0C;&#x7FFB;&#x4E00;&#x7FFB;&#x5C31;&#x76F4;&#x63A5;&#x62FF;&#x53BB;&#x7528;&#x4E86;&#x3002; # &#x600E;&#x4E48;&#x8BA9;SheetA&#x7684;A B C&#x5217;&#x5F15;&#x7528;SheetB&#x7684;A C E&#xFF08;&#x5947;&#x6570;&#xFF09;&#x5217;&#x7684;&#x4E03;&#x65E5;&#x5468;&#x5747;&#xFF1F; SheetB&#x662F;&#x539F;&#x59CB;&#x6570;&#x636E;&#xFF0C;&#x5217;&#x4EE3;&#x8868;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x5B57;&#x6BB5;&#xFF0C;&#x884C;&#x4EE3;&#x8868;&#x6BCF;&#x5929;&#x7684;&#x6570;&#x503C;&#xFF0C;SheetA&#x4E2D;&#x9700;&#x8981;&#x63D0;&#x53D6;SheetB&#x4E2D;&#x7684;&#x5947;&#x6570;&#x5217;&#xFF0C;&#x5E76;&#x6C42;&#x4E03;&#x65E5;&#x5468;&#x5747;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x5206;&#x89E3;&#x4E3A;&#xFF1A;1&#x3001;&#x5148;&#x628A;SheetB&#x4E2D;&#x7684;&#x5947;&#x6570;&#x5217;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF1B;2&#x3001;&#x518D;&#x4EE5;&#x4E03;&#x884C;&#x4E3A;&#x5355;&#x4F4D;&#x53D6;&#x6BCF;&#x5929;&#x5BF9;&#x5E94;&#x7684;&#x4E03;&#x65E5;&#x5468;&#x5747;&#x3002;&#x7B2C;1&#x6B65;&#x7F51;&#x4E0A;&#x7ED9;&#x51FA;&#x7684;&#x65B9;&#x6CD5;&#x4E00;&#x822C;&#x4F7F;&#x7528;vlookup&#x51FD;&#x6570;&#xFF0C;&#x5728;SheetA&#x4E2D;&#x627E;&#x5230;&#x548C;&#x5F53;&#x524D;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x5217;&#x76F8;&#x7B49;&#x7684;SheetB&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x53D6;&#x7B2C;&#x5947;&#x6570;&#x5217;&#x3002;&#x6211;&#x6CA1;&#x6709;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x56E0;&#x4E3A;&#x5F53;&#x6570;&#x636E;&#x91CF;&#x592A;&#x5927;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6B64;&#x65B9;&#x6848;&#x7684;&#x8FD0;&#x7B97;&#x91CF;&#x7565;&#x5927;&#x3002; &#x6211;&#x7684;&#x601D;&#x8DEF;&#x662F;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;excel&#x5B8C;&#x6210;&#x53EF;&#x9884;&#x5904;&#x7406;&#x7684;&#x8FD0;&#x7B97;&#xFF0C;&#x628A;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x901A;&#x8FC7;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x8F6C;&#x6362;&#x6210;&#x516C;&#x5F0F;&#xFF0C;hardcode&#x56DE;excel&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x4E0A;&#x7A0D;&#x5FAE;&#x7E41;&#x7410;&#x4E00;&#x4E9B;&#xFF0C;&#x4F46;&#x6548;&#x7387;&#x66F4;&#x9AD8;&#x3002;&#x5728;macOS&#x4E0A;&#xFF0C;&#x7A0D;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#x7684;&#x6570;&#x636E;&#x8868;&#x5C31;&#x80FD;&#x628A;excel&#x62D6;&#x6210;&#x9A74;&#x8F66;&#xFF0C;&#x5BF9;&#x4E8E;&#x975E;&#x5E38;&#x9891;&#x7E41;&#x7EF4;&#x62A4;&#x7684;&#x6570;&#x636E;&#x8868;&#x6765;&#x8BF4;&#xFF0C;&#x8F7B;&#x4FBF;&#x5F88;&#x91CD;&#x8981;&#x3002; SheetB&#x7684;&#x5185;&#x5BB9; SheetA&#x4E2D;B2&#x3001;C2&#x3001;D2&#x7684;&#x516C;&#x5F0F;&#x5206;&#x522B;&#x5E94;&#x8BE5;&#x4E3A;&#xFF1A; 123=IF(AND(SheetB!B3&lt;&gt;&quot;#N/A&quot;, SheetB!B9&lt;&gt;&quot;#N/A&quot;), AVERAGE(SheetB!B3:SheetB!B9), #N/A)=IF(AND(SheetB!D3&lt;&gt;&quot;#N/A&quot;, SheetB!D9&lt;&gt;&quot;#N/A&quot;), AVERAGE(SheetB!B3:SheetB!D9), #N/A)=IF(AND(SheetB!F3&lt;&gt;&quot;#N/A&quot;, SheetB!F9&lt;&gt;&quot;#N/A&quot;), AVERAGE(SheetB!F3:SheetB!F9), #N/A) SheetA&#x4E2D;B2&#x7684;&#x516C;&#x5F0F; &#x5728;&#x53E6;&#x4E00;&#x5F20;&#x7A7A;&#x95F2;&#x8868;&#x4E2D;&#x5206;&#x5272;&#x516C;&#x5F0F; &#x5982;&#x679C;&#x5217;&#x6570;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x624B;&#x5DE5;&#x7F16;&#x8F91;&#x4E5F;&#x662F;&#x4E0D;&#x5C0F;&#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x516C;&#x5F0F;&#x4E2D;&#x56FA;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x884C;&#x3001;&#x5217;&#x53D8;&#x91CF;&#x5206;&#x5272;&#x5F00;&#xFF0C;&#x5199;&#x5230;&#x4E00;&#x5F20;Excel&#x8868;&#x683C;&#x4E2D;&#xFF1A; &#x5F53;&#x5217;&#x6570;&#x5F88;&#x591A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;ADDRESS(row_num, column_num, abs_num)&#x516C;&#x5F0F;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x7B2C;row_num&#x884C;&#xFF0C;&#x7B2C;column_num&#x5217;&#x7684;&#x540D;&#x79F0;&#xFF0C;abs_num&#x542B;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; abs&#x53D6;&#x503C; &#x542B;&#x4E49; 1&#x6216;&#x7701;&#x7565; &#x7EDD;&#x5BF9;&#x5F15;&#x7528; 2 &#x7EDD;&#x5BF9;&#x884C;&#x53F7;&#xFF0C;&#x76F8;&#x5BF9;&#x5217;&#x6807; 3 &#x76F8;&#x5BF9;&#x884C;&#x53F7;&#xFF0C;&#x7EDD;&#x5BF9;&#x5217;&#x6807; 4 &#x76F8;&#x5BF9;&#x5F15;&#x7528; &#x5148;&#x5728;&#x7B2C;K&#x5217;&#x5199;&#x597D;&#x5217;&#x7684;&#x6B65;&#x8FDB;&#x6570;&#x5B57;&#xFF0C;&#x7136;&#x540E;&#x5229;&#x7528;&#x516C;&#x5F0F;ADDRESS&#x548C;&#x8BE5;&#x6570;&#x5B57;&#x8BA1;&#x7B97;&#x51FA;&#x884C;&#x3001;&#x5217;&#x53D8;&#x91CF;&#xFF0C;&#x5B8C;&#x6210;&#x4E00;&#x884C;&#x7684;&#x516C;&#x5F0F;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0B;&#x62C9;&#x81EA;&#x52A8;&#x586B;&#x5145;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x5728;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x4FEE;&#x6539;&#x516C;&#x5F0F; &#x628A;&#x516C;&#x5F0F;&#x62F7;&#x8D1D;&#x5230;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#xFF0C;&#x67E5;&#x627E;&#x5E76;&#x66FF;&#x6362;&#x6389;&#x6240;&#x6709;&#x7684;Tab&#x7B26;&#xFF0C;&#x5E76;&#x5728;&#x6BCF;&#x4E00;&#x884C;&#x524D;&#x9762;&#x6DFB;&#x52A0;&#x7B49;&#x53F7;&#xFF0C;&#x5373;&#xFF1A; 123=IF(AND(SheetB!B3&lt;&gt;&quot;#N/A&quot;, SheetB!B9&lt;&gt;&quot;#N/A&quot;), AVERAGE(SheetB!B3:SheetB!B9), #N/A)=IF(AND(SheetB!D3&lt;&gt;&quot;#N/A&quot;, SheetB!D9&lt;&gt;&quot;#N/A&quot;), AVERAGE(SheetB!D3:SheetB!D9), #N/A)=IF(AND(SheetB!F3&lt;&gt;&quot;#N/A&quot;, SheetB!F9&lt;&gt;&quot;#N/A&quot;), AVERAGE(SheetB!F3:SheetB!F9), #N/A) &#x7136;&#x540E;&#x518D;&#x67E5;&#x627E;&#x56DE;&#x8F66;&#x7B26;&#xFF0C;&#x5E76;&#x66FF;&#x6362;&#x4E3A;Tab&#x7B26; &#x5C06;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x4E2D;&#x7684;&#x516C;&#x5F0F;&#x62F7;&#x56DE;Excel &#x5C06;&#x516C;&#x5F0F;&#x62F7;&#x8D1D;&#x5230;Excel SheetA&#x4E2D;&#x7684;&#x9996;&#x884C;&#xFF1A; &#x7136;&#x540E;&#x4E0B;&#x6765;&#x9996;&#x884C;&#x81EA;&#x52A8;&#x586B;&#x5145;&#xFF0C;&#x5373;&#x53EF;&#x3002; &#x518D;&#x5982;&#x6CD5;&#x70AE;&#x5236;&#x51FA;&#x5076;&#x6570;&#x5217;&#x3002;]]></content>
      <categories>
        <category>Excel使用</category>
      </categories>
      <tags>
        <tag>Excel使用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深度探索Binder（一）取款机模型]]></title>
    <url>%2F2016%2F07%2F28%2F2016%2F0728DissectingBinder1%2F</url>
    <content type="text"><![CDATA[&#x53D6;&#x6B3E;&#x673A;&#x6A21;&#x578B; Binder&#x673A;&#x5236;&#x5C31;&#x50CF;&#x4E00;&#x4E2A;&#x53D6;&#x6B3E;&#x673A;&#xFF0C;Client&#x3001;Server&#x3001;ServiceManager&#x548C;&#x9A71;&#x52A8;&#x5C42;&#x5206;&#x522B;&#x5C31;&#x662F;&#x5BA2;&#x6237;&#x3001;&#x94F6;&#x884C;&#x3001;&#x53D6;&#x6B3E;&#x673A;&#x548C;&#x6BCF;&#x4E2A;&#x94F6;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x3002; * &#x8981;&#x60F3;&#x8BA9;&#x53D6;&#x6B3E;&#x673A;&#x53EF;&#x4EE5;&#x53D7;&#x7406;&#x67D0;&#x4E2A;&#x94F6;&#x884C;&#x7684;&#x5361;&#xFF0C;&#x94F6;&#x884C;&#x5FC5;&#x987B;&#x5148;&#x5411;&#x53D6;&#x6B3E;&#x673A;&#x6CE8;&#x518C;&#xFF0C;&#x628A;&#x81EA;&#x5DF1;&#x7684;&#x7A0B;&#x5E8F;&#x6CE8;&#x518C;&#x8FDB;&#x53BB;&#x3002;&#x8FD9;&#x5C31;&#x662F;Server&#x7AEF;&#x8981;&#x5148;&#x8C03;&#x7528;addService&#x5B8C;&#x6210;&#x6CE8;&#x518C;&#xFF0C;ServiceManager&#x4F1A;&#x4FDD;&#x5B58;&#x670D;&#x52A1;&#x540D;&#x79F0;&#x4EE5;&#x53CA;&#x5BF9;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x201C;&#x5B9E;&#x4F53;&#x201D;&#x3002; * &#x4E4B;&#x540E;&#x5BA2;&#x6237;&#x5C31;&#x53EF;&#x4EE5;&#x628A;&#x94F6;&#x884C;&#x5361;&#x585E;&#x5165;&#x53D6;&#x6B3E;&#x673A;&#x83B7;&#x53D6;&#x670D;&#x52A1;&#xFF0C;&#x53D6;&#x6B3E;&#x673A;&#x4F1A;&#x6839;&#x636E;&#x94F6;&#x884C;&#x5361;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x94F6;&#x884C;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x3002;Client&#x8C03;&#x7528;checkService&#xFF0C;ServiceManager&#x67E5;&#x627E;&#x4E4B;&#x524D;&#x4FDD;&#x5B58;&#x7684;&#x6CE8;&#x518C;&#x4FE1;&#x606F;&#xFF0C;&#x627E;&#x5230;&#x548C;&#x540D;&#x79F0;&#x5339;&#x914D;&#x7684;&#x670D;&#x52A1;&#x201C;&#x5B9E;&#x4F53;&#x201D;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002; * &#x5728;&#x5BA2;&#x6237;&#x770B;&#x4F3C;&#x662F;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x94F6;&#x884C;&#x5361;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x64CD;&#x4F5C;&#x7684;&#x662F;&#x94F6;&#x884C;&#x7684;&#x6570;&#x636E;&#x5E93;&#x3002;&#x8FD9;&#x5F20;&#x5361;&#x5C31;&#x662F;BPBinder&#xFF0C;&#x662F;&#x4EE3;&#x7406;&#xFF1B;&#x94F6;&#x884C;&#x8D26;&#x6237;&#x662F;BBinder&#xFF0C;&#x662F;&#x670D;&#x52A1;&#x672C;&#x5C0A;&#x3002;&#x5728;Client&#x7AEF;&#x548C;ServiceManager&#x7AEF;&#x62FF;&#x5230;&#x7684;&#x670D;&#x52A1;&#x201C;&#x5B9E;&#x4F53;&#x201D;&#x5B9E;&#x9645;&#x4E0A;&#x53EA;&#x662F;&#x5728;&#x81EA;&#x5DF1;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x5185;&#x7684;UID&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;UID&#x53EF;&#x4EE5;&#x63D0;&#x9886;&#x5230;&#x4F4D;&#x4E8E;Server&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x7684;Service&#x5BF9;&#x8C61;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x524D;&#x9762;&#x7ED9;&#x201C;&#x5B9E;&#x4F53;&#x201D;&#x52A0;&#x5F15;&#x53F7;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x4E4B;&#x4E3A;&#x4EE3;&#x7406;&#x3002;&#x901A;&#x8FC7;BPBinder&#x8C03;&#x7528;Binder&#x63A5;&#x53E3;&#x770B;&#x4F3C;&#x662F;&#x4E2A;&#x672C;&#x5730;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5728;Server&#x7AEF;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#x3002; * &#x5BF9;&#x94F6;&#x884C;&#x5361;&#x7684;&#x5B58;&#x3001;&#x53D6;&#x3001;&#x67E5;&#x8BE2;&#x90FD;&#x4F1A;&#x88AB;&#x7A0B;&#x5E8F;&#x5C01;&#x88C5;&#x6210;&#x94F6;&#x884C;&#x53EF;&#x8BC6;&#x522B;&#x7684;&#x8D26;&#x53F7;+&#x5B58;&#x3001;&#x53D6;&#x3001;&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;&#xFF0C;&#x94F6;&#x884C;&#x5B8C;&#x6210;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x7684;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7684;&#x662F;&#x5BA2;&#x6237;&#x540D;&#x79F0;+&#x64CD;&#x4F5C;&#x7ED3;&#x679C;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x5728;&#x5BA2;&#x6237;&#x53EF;&#x8BC6;&#x522B;&#x7684;&#x5BA2;&#x6237;&#x540D;&#x79F0;&#x548C;&#x94F6;&#x884C;&#x53EF;&#x8BC6;&#x522B;&#x7684;&#x8D26;&#x6237;&#x4E4B;&#x95F4;&#x505A;&#x8F6C;&#x6362;&#x3002;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4E5F;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;Client&#x7AEF;&#x672C;&#x8D28;&#x4E0A;&#x64CD;&#x4F5C;&#x7684;&#x662F;handle&#xFF0C;&#x5373;&#x524D;&#x9762;&#x7684;&#x8BB2;&#x7684;UID&#xFF0C;&#x4EC5;&#x5728;Client&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x5185;&#x552F;&#x4E00;&#xFF0C;&#x8BE5;&#x64CD;&#x4F5C;&#x5230;&#x4E86;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x4F1A;&#x628A;handle&#x4FEE;&#x6539;&#x6210;&#x5728;Server&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x5185;&#x552F;&#x4E00;&#x7684;Service&#x7684;&#x5BF9;&#x8C61;&#x5730;&#x5740;&#x6216;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x7531;Server&#x7AEF;&#x6839;&#x636E;&#x5730;&#x5740;&#x63D0;&#x9886;&#x5230;Service&#x5BF9;&#x8C61;&#xFF0C;&#x6267;&#x884C;&#x5BF9;&#x5E94;&#x7684;&#x64CD;&#x4F5C;&#x3002; * &#x4F20;&#x7EDF;&#x7684;&#x94F6;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x9700;&#x8981;&#x5BA2;&#x6237;&#x586B;&#x5355;&#x5B50;&#x4EA4;&#x7ED9;&#x67DC;&#x53F0;&#xFF0C;&#x67DC;&#x53F0;&#x518D;&#x628A;&#x4FE1;&#x606F;&#x8A8A;&#x5199;&#x5230;&#x94F6;&#x884C;&#x8D26;&#x672C;&#x4E0A;&#x53BB;&#xFF08;&#x8FD9;&#x4E2A;&#x6D41;&#x7A0B;&#x662F;&#x6211;YY&#x7684;~&#xFF09;&#xFF0C;&#x800C;&#x73B0;&#x5728;&#x53EA;&#x9700;&#x8981;&#x5BA2;&#x6237;&#x5F55;&#x5165;&#x4E00;&#x6B21;&#x4FE1;&#x606F;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x6570;&#x636E;&#x6D41;&#x8F6C;&#x90FD;&#x662F;&#x5728;&#x8FD9;&#x4EFD;&#x4FE1;&#x606F;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x6CA1;&#x6709;&#x518D;&#x505A;&#x6570;&#x636E;&#x7684;&#x590D;&#x5236;&#x3002;&#x4F20;&#x7EDF;&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x5C06;&#x7531;&#x53D1;&#x8D77;&#x7AEF;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#xFF0C;&#x518D;&#x7531;&#x5185;&#x6838;&#x62F7;&#x8D1D;&#x5230;&#x63A5;&#x6536;&#x7AEF;&#xFF1B;&#x800C;Binder&#x673A;&#x5236;&#x4EC5;&#x6709;&#x4E00;&#x6B21;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#xFF0C;&#x5C31;&#x662F;&#x4ECE;Client&#x7AEF;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x9A71;&#x52A8;&#x5C42;&#x76F4;&#x63A5;&#x628A;&#x6570;&#x636E;&#x6620;&#x5C04;&#x5230;Server&#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x62F7;&#x8D1D;&#x8FC7;&#x53BB;&#xFF0C;&#x56E0;&#x6B64;&#x6027;&#x80FD;&#x66F4;&#x597D;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x4EE5;&#x4F7F;&#x7528;Binder&#x7684;&#x5173;&#x952E;&#x6B65;&#x9AA4;&#x4E3A;&#x4E3B;&#x7EBF;&#xFF0C;&#x9610;&#x8FF0;framework&#x5C42;&#x548C;&#x9A71;&#x52A8;&#x5C42;&#x662F;&#x600E;&#x6837;&#x5171;&#x540C;&#x5B8C;&#x6210;Binder&#x673A;&#x5236;&#x7684;&#x3002;&#x672C;&#x6587;&#x91C7;&#x7528;&#x7684;Android&#x6E90;&#x7801;&#x662F;&#x57FA;&#x4E8E;6.0.1_r11&#xFF0C;&#x6240;&#x6709;&#x8C03;&#x8BD5;&#x4EE3;&#x7801;&#x90FD;&#x53EF;&#x5728;palanceli/androidex/external-testservice&#x83B7;&#x53D6;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>深度探索Binder</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[binder学习笔记（十四）—— binder_thread_read(...)都干了什么？]]></title>
    <url>%2F2016%2F07%2F24%2F2016%2F0724BinderLearning14%2F</url>
    <content type="text"><![CDATA[&#x5728;binder&#x8BF7;&#x6C42;&#x7684;&#x53D1;&#x8D77;&#x7AEF;&#xFF0C;binder_transaction(...)&#x51FD;&#x6570;&#x7684;&#x7ED3;&#x5C3E;&#xFF0C;&#x7B2C;#198&#x884C;&#xFF0C;&#x5B83;&#x5C06;struct binder_transaction&#x7684;work&#x5B57;&#x6BB5;&#x63D2;&#x5165;target_list&#x7684;&#x5C3E;&#x90E8;&#xFF0C;&#x7136;&#x540E;&#x5B8C;&#x6210;&#x53D1;&#x8D77;&#x7AEF;&#x7684;&#x5DE5;&#x4F5C;&#x3002; &#x5728;&#x63A5;&#x6536;&#x7AEF;binder_loop(...)&#x51FD;&#x6570;&#x7684;&#x7B2C;#19&#x884C;&#xFF0C;&#x4E5F;&#x5728;&#x901A;&#x8FC7;&#x8C03;&#x7528;ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr)&#x7B49;&#x5F85;&#x7740;&#x6765;&#x81EA;&#x53D1;&#x8D77;&#x7AEF;&#x7684;&#x8BF7;&#x6C42;&#x3002;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x6CBF;&#x7740;&#x5982;&#x4E0B;&#x7684;&#x8C03;&#x7528;&#x8DEF;&#x5F84;&#xFF0C;&#x901A;&#x8FC7;binder_thread_read(...)&#x51FD;&#x6570;&#x63A5;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x3002; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;checkService&#x8BF7;&#x6C42;&#xFF0C;&#x5728;&#x53D1;&#x8D77;&#x7AEF;&#xFF08;&#x5373;Client&#x7AEF;&#xFF09;&#x7684;binder_thread_write(...)&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x5176;proc&#x3001;thread&#x5747;&#x8868;&#x793A;Client&#x7AEF;&#xFF0C;target_proc&#x3001;target_thread&#x4EE5;&#x53CA;target_xxx&#x5747;&#x8868;&#x793A;&#x76EE;&#x6807;&#x7AEF;&#xFF08;&#x5373;ServiceManager&#xFF09;&#xFF1B;&#x800C;&#x5728;&#x63A5;&#x6536;&#x7AEF;&#x7684;binder_thread_read(...)&#x51FD;&#x6570;&#x4E2D;&#x5219;&#x521A;&#x597D;&#x76F8;&#x53CD;&#xFF0C;proc&#x3001;thread&#x8868;&#x793A;ServiceManager&#x3002; kernel/goldfish/drivers/staging/android/binder.c:2248 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230static int binder_thread_read(struct binder_proc *proc, struct binder_thread *thread, void __user *buffer, int size, signed long *consumed, int non_block){ void __user *ptr = buffer + *consumed; void __user *end = buffer + size; int ret = 0; int wait_for_proc_work; if (*consumed == 0) { if (put_user(BR_NOOP, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); }retry: wait_for_proc_work = thread-&gt;transaction_stack == NULL &amp;&amp; list_empty(&amp;thread-&gt;todo); ... ... thread-&gt;looper |= BINDER_LOOPER_STATE_WAITING; if (wait_for_proc_work) proc-&gt;ready_threads++; ... ... if (wait_for_proc_work) { ... ... ret = wait_event_freezable_exclusive(proc-&gt;wait, binder_has_proc_work(proc, thread)); } else { ... ... ret = wait_event_freezable(thread-&gt;wait, binder_has_thread_work(thread)); } ... ... if (wait_for_proc_work) proc-&gt;ready_threads--; thread-&gt;looper &amp;= ~BINDER_LOOPER_STATE_WAITING; if (ret) return ret; while (1) { uint32_t cmd; struct binder_transaction_data tr; struct binder_work *w; struct binder_transaction *t = NULL; // &#x8BFB;&#x53D6;todo&#x5217;&#x8868;&#x9996;&#x8282;&#x70B9;&#xFF0C;&#x8FD9;&#x6B63;&#x662F;&#x5728;Client&#x7AEF;&#x89E6;&#x53D1;&#x7684;binder_transaction(...) // &#x51FD;&#x6570;&#x5728;&#x7ED3;&#x5C3E;&#x5904;&#x63D2;&#x8FDB;&#x6765;&#x7684;t-&gt;work.entry if (!list_empty(&amp;thread-&gt;todo)) w = list_first_entry(&amp;thread-&gt;todo, struct binder_work, entry); else if (!list_empty(&amp;proc-&gt;todo) &amp;&amp; wait_for_proc_work) w = list_first_entry(&amp;proc-&gt;todo, struct binder_work, entry); ... ... switch (w-&gt;type) { case BINDER_WORK_TRANSACTION: { // &#x6839;&#x636E;binder_work&#x627E;&#x5230;&#x4ED6;&#x6240;&#x5728;&#x7684;binder_transaction t = container_of(w, struct binder_transaction, work); } break; case BINDER_WORK_TRANSACTION_COMPLETE: { cmd = BR_TRANSACTION_COMPLETE; if (put_user(cmd, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); binder_stat_br(proc, thread, cmd); ... ... list_del(&amp;w-&gt;entry); kfree(w); binder_stats_deleted(BINDER_STAT_TRANSACTION_COMPLETE); } break; case BINDER_WORK_NODE: { struct binder_node *node = container_of(w, struct binder_node, work); uint32_t cmd = BR_NOOP; const char *cmd_name; int strong = node-&gt;internal_strong_refs || node-&gt;local_strong_refs; int weak = !hlist_empty(&amp;node-&gt;refs) || node-&gt;local_weak_refs || strong; if (weak &amp;&amp; !node-&gt;has_weak_ref) { cmd = BR_INCREFS; cmd_name = &quot;BR_INCREFS&quot;; node-&gt;has_weak_ref = 1; node-&gt;pending_weak_ref = 1; node-&gt;local_weak_refs++; } else if (strong &amp;&amp; !node-&gt;has_strong_ref) { cmd = BR_ACQUIRE; cmd_name = &quot;BR_ACQUIRE&quot;; node-&gt;has_strong_ref = 1; node-&gt;pending_strong_ref = 1; node-&gt;local_strong_refs++; } else if (!strong &amp;&amp; node-&gt;has_strong_ref) { cmd = BR_RELEASE; cmd_name = &quot;BR_RELEASE&quot;; node-&gt;has_strong_ref = 0; } else if (!weak &amp;&amp; node-&gt;has_weak_ref) { cmd = BR_DECREFS; cmd_name = &quot;BR_DECREFS&quot;; node-&gt;has_weak_ref = 0; } if (cmd != BR_NOOP) { if (put_user(cmd, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); if (put_user(node-&gt;ptr, (void * __user *)ptr)) return -EFAULT; ptr += sizeof(void *); if (put_user(node-&gt;cookie, (void * __user *)ptr)) return -EFAULT; ptr += sizeof(void *); binder_stat_br(proc, thread, cmd); ... ... } else { list_del_init(&amp;w-&gt;entry); if (!weak &amp;&amp; !strong) { binder_debug(BINDER_DEBUG_INTERNAL_REFS, &quot;binder: %d:%d node %d u%p c%p deleted\n&quot;, proc-&gt;pid, thread-&gt;pid, node-&gt;debug_id, node-&gt;ptr, node-&gt;cookie); rb_erase(&amp;node-&gt;rb_node, &amp;proc-&gt;nodes); kfree(node); binder_stats_deleted(BINDER_STAT_NODE); } ... ... } } break; case BINDER_WORK_DEAD_BINDER: case BINDER_WORK_DEAD_BINDER_AND_CLEAR: case BINDER_WORK_CLEAR_DEATH_NOTIFICATION: { struct binder_ref_death *death; uint32_t cmd; death = container_of(w, struct binder_ref_death, work); if (w-&gt;type == BINDER_WORK_CLEAR_DEATH_NOTIFICATION) cmd = BR_CLEAR_DEATH_NOTIFICATION_DONE; else cmd = BR_DEAD_BINDER; if (put_user(cmd, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); if (put_user(death-&gt;cookie, (void * __user *)ptr)) return -EFAULT; ptr += sizeof(void *); binder_stat_br(proc, thread, cmd); ... ... if (w-&gt;type == BINDER_WORK_CLEAR_DEATH_NOTIFICATION) { list_del(&amp;w-&gt;entry); kfree(death); binder_stats_deleted(BINDER_STAT_DEATH); } else list_move(&amp;w-&gt;entry, &amp;proc-&gt;delivered_death); if (cmd == BR_DEAD_BINDER) goto done; /* DEAD_BINDER notifications can cause transactions */ } break; } ... ... // &#x91CD;&#x70B9;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x5B83;&#x6709;&#x7EC4;&#x7EC7;&#x4E86;&#x4E00;&#x4E2A;binder_transaction_data&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x4ECE;&#x53D1;&#x8D77;&#x7AEF;&#x7684;binder_transaction&#x4EE5;&#x53CA;binder_buffer&#x4E2D;&#x63D0;&#x53D6;&#x6570;&#x636E; if (t-&gt;buffer-&gt;target_node) { struct binder_node *target_node = t-&gt;buffer-&gt;target_node; // SM tr.target.ptr = target_node-&gt;ptr; tr.cookie = target_node-&gt;cookie; t-&gt;saved_priority = task_nice(current); if (t-&gt;priority &lt; target_node-&gt;min_priority &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) binder_set_nice(t-&gt;priority); else if (!(t-&gt;flags &amp; TF_ONE_WAY) || t-&gt;saved_priority &gt; target_node-&gt;min_priority) binder_set_nice(target_node-&gt;min_priority); cmd = BR_TRANSACTION; } ... ... tr.code = t-&gt;code; tr.flags = t-&gt;flags; tr.sender_euid = t-&gt;sender_euid; if (t-&gt;from) { struct task_struct *sender = t-&gt;from-&gt;proc-&gt;tsk; tr.sender_pid = task_tgid_nr_ns(sender, current-&gt;nsproxy-&gt;pid_ns); } else { tr.sender_pid = 0; } tr.data_size = t-&gt;buffer-&gt;data_size; tr.offsets_size = t-&gt;buffer-&gt;offsets_size; tr.data.ptr.buffer = (void *)t-&gt;buffer-&gt;data + proc-&gt;user_buffer_offset; tr.data.ptr.offsets = tr.data.ptr.buffer + ALIGN(t-&gt;buffer-&gt;data_size, sizeof(void *)); if (put_user(cmd, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); // &#x5C06;binder_transaction_data&#x7ED3;&#x6784;&#x4F53;&#x62F7;&#x8D1D;&#x5230;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#xFF0C;&#x7531;&#x63A5;&#x6536;&#x7AEF;ServiceManager&#x6536;&#x5230; if (copy_to_user(ptr, &amp;tr, sizeof(tr))) return -EFAULT; ptr += sizeof(tr); trace_binder_transaction_received(t); binder_stat_br(proc, thread, cmd); ... ... list_del(&amp;t-&gt;work.entry); t-&gt;buffer-&gt;allow_user_free = 1; if (cmd == BR_TRANSACTION &amp;&amp; !(t-&gt;flags &amp; TF_ONE_WAY)) { t-&gt;to_parent = thread-&gt;transaction_stack; t-&gt;to_thread = thread; thread-&gt;transaction_stack = t; } else { t-&gt;buffer-&gt;transaction = NULL; kfree(t); binder_stats_deleted(BINDER_STAT_TRANSACTION); } break; }done: *consumed = ptr - buffer; if (proc-&gt;requested_threads + proc-&gt;ready_threads == 0 &amp;&amp; proc-&gt;requested_threads_started &lt; proc-&gt;max_threads &amp;&amp; (thread-&gt;looper &amp; (BINDER_LOOPER_STATE_REGISTERED | BINDER_LOOPER_STATE_ENTERED)) /* the user-space code fails to */ /*spawn a new thread if we leave this out */) { proc-&gt;requested_threads++; ... ... if (put_user(BR_SPAWN_LOOPER, (uint32_t __user *)buffer)) return -EFAULT; binder_stat_br(proc, thread, BR_SPAWN_LOOPER); } return 0;} &#x8D70;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x4E0A;&#x4E00;&#x8282;&#x672B;&#x5C3E;&#x5904;&#x7684;&#x60AC;&#x7591;&#x4F3C;&#x4E4E;&#x53EF;&#x4EE5;&#x6C34;&#x843D;&#x77F3;&#x51FA;&#x4E86;&#x3002; &#x5C0F;&#x7ED3; &#x65E0;&#x8BBA;addService&#x8FD8;&#x662F;checkService&#x8BF7;&#x6C42;&#xFF0C;&#x53D1;&#x8D77;&#x7AEF;&#x7684;&#x8BF7;&#x6C42;&#x7ECF;&#x7531;&#x9A71;&#x52A8;&#x5C42;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x4E3B;&#x8981;&#x5DE5;&#x4F5C;&#x6709;&#x4E24;&#x90E8;&#x5206;&#xFF1A; 1. &#x4FEE;&#x6539;&#x5B57;&#x6BB5;&#x3002;&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x4E2D;&#x5305;&#x542B;binder&#x5B9E;&#x4F53;&#xFF0C;&#x9A71;&#x52A8;&#x4F1A;&#x4FEE;&#x6539;&#x5B9E;&#x4F53;&#x7684;&#x63D0;&#x9886;&#x5B57;&#x6BB5;&#xFF0C;&#x6BD4;&#x5982;addService&#x662F;Server&#x7AEF;&#x5411;SM&#x6CE8;&#x518C;Service&#x5B9E;&#x4F53;&#xFF0C;&#x4F20;&#x5165;&#x7684;&#x662F;&#x5B9E;&#x4F53;&#x5728;&#x672C;&#x5730;&#x7684;&#x5F71;&#x5B50;&#x5730;&#x5740;&#x4EE5;&#x53CA;&#x5B9E;&#x4F53;&#x5730;&#x5740;&#xFF0C;&#x5230;&#x4E86;&#x9A71;&#x52A8;&#x5C42;&#x8F6C;&#x624B;&#x7ED9;ServiceManager&#x4E4B;&#x524D;&#x4F1A;&#x6539;&#x5199;&#x6210;&#x5728;ServiceManager&#x5185;&#x552F;&#x4E00;&#x7684;handler&#xFF1B;&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x4E2D;&#x4E0D;&#x5305;&#x542B;binder&#x5B9E;&#x4F53;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x4E0D;&#x4F5C;&#x7C7B;&#x4F3C;&#x5730;&#x7BE1;&#x6539;&#x3002; 2. &#x5C06;&#x8BF7;&#x6C42;&#x6302;&#x5230;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x7684;todo&#x94FE;&#x8868;&#x4E2D;&#x3002; &#x5728;&#x63A5;&#x6536;&#x7AEF;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;SM&#x8FD8;&#x662F;&#x4E00;&#x822C;&#x7684;Server&#x7AEF;&#xFF0C;&#x4E0D;&#x65AD;&#x5730;&#x4ECE;todo&#x94FE;&#x8868;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x8282;&#x70B9;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#x5C31;&#x4F1A;&#x6458;&#x53D6;&#x4E0B;&#x6765;&#x5E76;&#x89E3;&#x6790;&#x3001;&#x6267;&#x884C;&#x3002;&#x9A71;&#x52A8;&#x5C42;&#x5728;&#x4EA4;&#x7ED9;&#x63A5;&#x6536;&#x7AEF;&#x89E3;&#x6790;&#x3001;&#x6267;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x4F1A;&#x628A;&#x8282;&#x70B9;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5305;&#x88C5;&#x6210;&#x4E00;&#x4E2A;struct binder_transaction_data&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x6570;&#x636E;&#x7684;&#x5185;&#x5BB9;&#x57FA;&#x672C;&#x4E0A;&#x4FDD;&#x6301;&#x4E86;&#x53D1;&#x8D77;&#x7AEF;&#x7EC4;&#x7EC7;&#x65F6;&#x7684;&#x6837;&#x5B50;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x5728;&#x53D1;&#x8D77;&#x7AEF;&#x53D1;&#x9001;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x65F6;&#xFF0C;&#x63D0;&#x9886;&#x4FE1;&#x606F;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x6307;&#x5411;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x3002; &#x5F53;SM&#x6536;&#x5230;addService&#x8BF7;&#x6C42;&#x540E;&#x4F1A;&#x628A;(name, handle)&#x7F13;&#x5B58;&#x8D77;&#x6765;&#xFF1B;&#x6536;&#x5230;checkService&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x4F1A;&#x627E;&#x5230;&#x8BE5;&#x7F13;&#x5B58;&#x5E76;&#x5C06;&#x7ED3;&#x679C;&#x53D1;&#x9001;&#x7ED9;Client&#xFF0C;&#x53EA;&#x662F;&#x6B64;&#x65F6;Client&#x7AEF;&#x6CA1;&#x6709;Service&#x4EFB;&#x4F55;&#x7684;&#x63D0;&#x9886;&#x4FE1;&#x606F;&#xFF0C;SM&#x4F1A;&#x7ED9;&#x5B83;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x80AF;&#x5B9A;&#x662F;handle&#xFF0C;&#x53EA;&#x662F;&#x8FD9;&#x4E2A;handle&#x662F;&#x600E;&#x4E48;&#x6CE8;&#x518C;&#x5230;Client&#x7AEF;&#x7684;&#xFF1F;&#x63A5;&#x4E0B;&#x6765;&#x8FD8;&#x8981;&#x518D;&#x8DDF;&#x3002; Client&#x7AEF;&#x518D;&#x7EC4;&#x7EC7;Test&#x8BF7;&#x6C42;&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x518D;&#x6B21;&#x5C06;handle&#x6539;&#x6210;&#x6307;&#x9488;&#xFF0C;&#x53D1;&#x9001;&#x5230;Server&#x7AEF;&#x6267;&#x884C;&#xFF0C;&#x5E76;&#x5C06;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x53D1;&#x9001;&#x7ED9;Client&#x3002; &#x8FD9;&#x6B21;&#x662F;&#x771F;&#x5730;&#x5C71;&#x9AD8;&#x6708;&#x5C0F;&#xFF0C;&#x6C34;&#x843D;&#x77F3;&#x51FA;&#x4E86;&#xFF01;&#x63A5;&#x4E0B;&#x6765;&#x9700;&#x8981;&#x628A;&#x524D;&#x9762;&#x7684;&#x6D41;&#x6C34;&#x8D26;&#x7CFB;&#x7EDF;&#x5730;&#x68B3;&#x7406;&#x4E00;&#x904D;&#x3002;&#x53EF;&#x4EE5;&#x5148;&#x4ECE;&#x539F;&#x7406;&#x4E0A;&#x5B8F;&#x89C2;&#x5730;&#x63CF;&#x8FF0;&#x4E09;&#x65B9;&#x7684;&#x804C;&#x8D23;&#x4EE5;&#x53CA;&#x5173;&#x952E;&#x64CD;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4ECE;&#x5177;&#x4F53;&#x9700;&#x6C42;&#x5165;&#x624B;&#xFF0C;&#x4ECE;addService&#x3001;checkService&#x3001;Test&#x4E09;&#x6761;&#x7EBF;&#x68B3;&#x7406;&#x6E05;&#x695A;&#x63A7;&#x5236;&#x6D41;&#x3001;&#x6570;&#x636E;&#x6D41;&#xFF0C;Binder&#x7684;&#x4E3B;&#x6D41;&#x64CD;&#x4F5C;&#xFF0C;&#x65E0;&#x975E;&#x4E5F;&#x5C31;&#x8FD9;&#x4E9B;&#x3002;&#x5F53;&#x7136;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x6269;&#x5C55;&#x8BDD;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x201C;&#x6B7B;&#x4EA1;&#x901A;&#x77E5;&#x201D;&#x53EF;&#x4EE5;&#x5728;&#x4E3B;&#x6D41;&#x64CD;&#x4F5C;&#x68B3;&#x7406;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x7814;&#x7A76;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今天抓到一只小乌龟]]></title>
    <url>%2F2016%2F07%2F17%2F2016%2F0717%E6%8A%93%E5%88%B0%E4%B8%80%E5%8F%AA%E5%B0%8F%E4%B9%8C%E9%BE%9F%2F</url>
    <content type="text"><![CDATA[&#x590F;&#x5929;&#x6BCF;&#x4E2A;&#x5468;&#x672B;&#x7684;&#x508D;&#x665A;&#xFF0C;&#x6211;&#x548C;&#x5C0F;&#x96E8;&#x70B9;&#x505A;&#x5B8C;&#x5404;&#x81EA;&#x7684;&#x529F;&#x8BFE;&#x90FD;&#x4F1A;&#x53BB;&#x8F6F;&#x4EF6;&#x56ED;&#x7684;&#x6E56;&#x8FB9;&#x635E;&#x9C7C;&#xFF0C;&#x5C3D;&#x7BA1;&#x6E14;&#x7F51;&#x53EA;&#x6709;&#x5DF4;&#x638C;&#x90A3;&#x4E48;&#x5927;&#xFF0C;&#x53EF;&#x662F;&#x6E56;&#x8FB9;&#x6D3B;&#x8DC3;&#x7740;&#x8D85;&#x591A;&#x5C0F;&#x9C7C;&#x3002;&#x521D;&#x590F;&#x7684;&#x65F6;&#x5019;&#x95ED;&#x7740;&#x773C;&#x775B;&#xFF0C;&#x4E00;&#x7F51;&#x4E0B;&#x53BB;&#x6BCF;&#x6B21;&#x90FD;&#x80FD;&#x6536;&#x83B7;&#x597D;&#x51E0;&#x6761;&#xFF0C;&#x90A3;&#x4E2A;&#x65F6;&#x5019;&#x662F;&#x5C0F;&#x96E8;&#x70B9;&#x5927;&#x663E;&#x8EAB;&#x624B;&#x7684;&#x65F6;&#x5019;&#x3002;&#x6BCF;&#x6B21;&#x5929;&#x64E6;&#x9ED1;&#x5C0F;&#x6C34;&#x6876;&#x91CC;&#x5C31;&#x80FD;&#x8F7B;&#x8F7B;&#x677E;&#x677E;&#x6536;&#x83B7;&#x51E0;&#x5341;&#x6761;&#x3002; &#x5230;&#x4E86;&#x76DB;&#x590F;&#xFF0C;&#x9C7C;&#x7FA4;&#x957F;&#x5927;&#x4E86;&#xFF0C;&#x6E38;&#x5F97;&#x98DE;&#x5FEB;&#xFF0C;&#x800C;&#x4E14;&#x770B;&#x5230;&#x4EBA;&#x77E5;&#x9053;&#x9003;&#x8DD1;&#xFF0C;&#x635E;&#x9C7C;&#x5C31;&#x53D8;&#x6210;&#x4E00;&#x9879;&#x6280;&#x672F;&#x6D3B;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x5F97;&#x6211;&#x4E0A;&#x4E86;&#x3002;&#x5E38;&#x5E38;&#x8E72;&#x5728;&#x90A3;&#x8010;&#x5FC3;&#x7B49;&#x4E0A;&#x51E0;&#x5206;&#x949F;&#x624D;&#x80FD;&#x7B49;&#x5230;&#x4E00;&#x4E24;&#x6761;&#xFF0C;&#x4E0D;&#x8981;&#x72B9;&#x8C6B;&#x7ACB;&#x523B;&#x4E0B;&#x7F51;&#xFF0C;&#x6709;&#x7684;&#x65F6;&#x5019;&#x4E5F;&#x4F1A;&#x6251;&#x7A7A;&#x3002;&#x957F;&#x5230;&#x4E24;&#x516C;&#x5206;&#x957F;&#x7684;&#x9C7C;&#xFF0C;&#x9003;&#x8DD1;&#x7684;&#x901F;&#x5EA6;&#x5DF2;&#x7ECF;&#x8D85;&#x4E4E;&#x60F3;&#x8C61;&#xFF0C;&#x9664;&#x975E;&#x4E0B;&#x7F51;&#x7684;&#x65F6;&#x5019;&#x8FD9;&#x6761;&#x5012;&#x9709;&#x86CB;&#x521A;&#x597D;&#x51B2;&#x4F60;&#x6E38;&#x6765;&#xFF0C;&#x5426;&#x5219;&#x7F51;&#x901F;&#x5F88;&#x53EF;&#x80FD;&#x8FFD;&#x4E0D;&#x4E0A;&#x5B83;&#x3002; &#x4ECA;&#x5929;&#x8F6F;&#x4EF6;&#x56ED;&#x6E56;&#x6C34;&#x4E0A;&#x6DA8;&#xFF0C;&#x660E;&#x663E;&#x9C7C;&#x7FA4;&#x6BD4;&#x524D;&#x4E24;&#x5468;&#x591A;&#x4E86;&#x4E0D;&#x5C11;&#x3002;&#x800C;&#x4E14;&#x8FD9;&#x6B21;&#x6574;&#x70B9;&#x9AD8;&#x79D1;&#x6280;&#xFF0C;&#x635E;&#x9C7C;&#x524D;&#x6492;&#x4E0A;&#x4E00;&#x628A;&#x9992;&#x5934;&#x6E23;&#xFF0C;&#x4E0D;&#x4E00;&#x4F1A;&#x5C31;&#x5438;&#x5F15;&#x5230;&#x9C7C;&#x7FA4;&#x8FC7;&#x6765;&#xFF0C;&#x4ECA;&#x5929;&#x6536;&#x83B7;&#x771F;&#x662F;&#x4E0D;&#x5C0F;&#xFF1A;&#x56DB;&#x53EA;&#x867E;&#xFF0C;&#x5341;&#x51E0;&#x6761;&#x5C0F;&#x9C7C;&#xFF0C;&#x4E34;&#x8D70;&#x65F6;&#x6211;&#x8001;&#x5A46;&#x8FD8;&#x6293;&#x5230;&#x4E00;&#x53EA;&#x5C0F;&#x4E4C;&#x9F9F;&#xFF01;&#x773C;&#x770B;&#x7740;&#x4E00;&#x76F4;&#x5C0F;&#x4E4C;&#x9F9F;&#x51B2;&#x81EA;&#x5DF1;&#x6E38;&#x8FC7;&#x6765;&#xFF0C;&#x4F38;&#x624B;&#x5C31;&#x635E;&#x4E0A;&#x6765;&#x4E86;&#x3002;&#x770B;&#x770B;&#x4ECA;&#x5929;&#x7684;&#x6210;&#x679C;&#x5427;~ &#x9C7C;&#x7F38;&#x4E0D;&#x5927;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x9887;&#x6709;&#x4E00;&#x4E9B;&#x54C1;&#x79CD;&#x7684;&#xFF0C;&#x5176;&#x4E2D;&#x6700;&#x51F6;&#x731B;&#x7684;&#x662F;&#x4E00;&#x79CD;&#x8D34;&#x5730;&#x7684;&#xFF0C;&#x5E73;&#x65F6;&#x4E0D;&#x7231;&#x6E38;&#x8D77;&#x6765;&#xFF0C;&#x800C;&#x662F;&#x7D27;&#x8D34;&#x7740;&#x5730;&#x9762;&#x6216;&#x5899;&#x58C1;&#x3002;&#x4E0A;&#x4E00;&#x5F20;&#x7167;&#x7247;&#x91CC;&#x8611;&#x83C7;&#x7684;&#x5DE6;&#x4E0B;&#x89D2;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x54C1;&#x79CD;&#x3002;&#x518D;&#x6765;&#x4E00;&#x5F20;&#xFF1A; &#x522B;&#x770B;&#x4E2A;&#x5934;&#x4E0D;&#x5927;&#xFF0C;&#x5F02;&#x5E38;&#x51F6;&#x731B;&#xFF0C;&#x5B83;&#x4F1A;&#x51B7;&#x4E0D;&#x4E01;&#x5730;&#x8E7F;&#x8D77;&#x6765;&#x5411;&#x730E;&#x7269;&#x53D1;&#x8D77;&#x653B;&#x51FB;&#xFF0C;&#x8FD9;&#x53EA;&#x867E;&#x8DDF;&#x5B83;&#x4E2A;&#x5934;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x4F46;&#x6218;&#x6597;&#x529B;&#x6781;&#x5F31;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x9C7C;&#x7F38;&#x91CC;&#x4E5F;&#x5C31;&#x4E24;&#x4E09;&#x5929;&#x5C31;&#x4F1A;&#x8FDE;&#x6E23;&#x6E23;&#x90FD;&#x4E0D;&#x5269;&#x3002;&#x8FD9;&#x79CD;&#x9C7C;&#x7279;&#x522B;&#x7231;&#x54AC;&#x522B;&#x7684;&#x9C7C;&#x7684;&#x5C3E;&#x5DF4;&#xFF0C;&#x6709;&#x4E00;&#x6B21;&#x6254;&#x8FDB;&#x53BB;&#x5341;&#x51E0;&#x6761;&#x9C7C;&#xFF0C;&#x5230;&#x4E86;&#x665A;&#x4E0A;&#x518D;&#x53BB;&#x770B;&#xFF0C;&#x53D1;&#x73B0;&#x6D6E;&#x5728;&#x4E0A;&#x9762;&#x597D;&#x51E0;&#x6761;&#x90FD;&#x53EA;&#x4F1A;&#x8BA9;&#x5C3E;&#x5DF4;&#x4E00;&#x98A4;&#x4E00;&#x98A4;&#x7684;&#xFF0C;&#x6839;&#x672C;&#x6E38;&#x4E0D;&#x52A8;&#x4E86;&#x3002;&#x4E27;&#x5931;&#x9003;&#x8DD1;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x5C31;&#x53EA;&#x597D;&#x7B49;&#x7740;&#x5F53;&#x522B;&#x4EBA;&#x7684;&#x6BCF;&#x9910;&#xFF0C;&#x679C;&#x7136;&#x5230;&#x4E86;&#x7B2C;&#x4E8C;&#x5929;&#x5168;&#x6D88;&#x5931;&#x4E86;&#x3002; &#x6355;&#x9C7C;&#x3001;&#x770B;&#x9C7C;&#x662F;&#x8FD9;&#x4E2A;&#x590F;&#x5929;&#x6211;&#x4EEC;&#x4E09;&#x53E3;&#x627E;&#x5230;&#x7684;&#x65B0;&#x4E50;&#x8DA3;&#xFF0C;&#x5E73;&#x65F6;&#x665A;&#x51FA;&#x665A;&#x5F52;&#xFF0C;&#x51E0;&#x4E4E;&#x770B;&#x4E0D;&#x5230;&#x5C0F;&#x96E8;&#x70B9;&#x3002;&#x5230;&#x4E86;&#x5468;&#x672B;&#xFF0C;&#x508D;&#x665A;&#x5403;&#x5B8C;&#x996D;&#x6211;&#x559C;&#x6B22;&#x8DDF;&#x8001;&#x5A46;&#x4E00;&#x8D77;&#x7ED5;&#x7740;&#x6E56;&#x8FB9;&#x8D70;&#x4E00;&#x5708;&#xFF0C;&#x6D88;&#x6D88;&#x98DF;&#x3001;&#x804A;&#x804A;&#x5929;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x5468;&#x5F53;&#x4E2D;&#x552F;&#x4E00;&#x80FD;&#x591F;&#x6162;&#x4E0B;&#x6765;&#x7684;&#x65F6;&#x95F4;&#x3002;&#x53EF;&#x662F;&#x5C0F;&#x96E8;&#x70B9;&#x5F88;&#x5FEB;&#x5C31;&#x817B;&#x4E86;&#xFF0C;&#x63D0;&#x8D77;&#x6E56;&#x8FB9;&#x6563;&#x6B65;&#x5C31;&#x5899;&#x88C2;&#x53CD;&#x5BF9;&#xFF0C;&#x6BCF;&#x6B21;&#x90FD;&#x8981;&#x7F16;&#x51FA;&#x4E00;&#x4E2A;&#x65B0;&#x82B1;&#x6837;&#x52FE;&#x8D77;&#x5979;&#x7684;&#x5174;&#x8DA3;&#x3002;&#x8FD9;&#x4E2A;&#x590F;&#x5929;&#x5B8C;&#x5168;&#x4E0D;&#x7528;&#xFF0C;&#x665A;&#x996D;&#x4E00;&#x62B9;&#x5634;&#x5C31;&#x5435;&#x7740;&#x53BB;&#x6293;&#x9C7C;&#x3002;&#x771F;&#x5E0C;&#x671B;&#x6BCF;&#x5929;&#x90FD;&#x80FD;&#x8FD9;&#x6837;&#xFF0C;&#x8FD8;&#x8BB0;&#x5F97;&#x5C0F;&#x65F6;&#x5019;&#x5230;&#x4E86;&#x590F;&#x5929;&#xFF0C;&#x6BCF;&#x5929;&#x665A;&#x4E0A;&#x5403;&#x5B8C;&#x996D;&#x90FD;&#x4F1A;&#x8DDF;&#x7236;&#x6BCD;&#x51FA;&#x53BB;&#x4E58;&#x51C9;&#x3002;&#x73B0;&#x5728;&#x90A3;&#x79CD;&#x751F;&#x6D3B;&#x8282;&#x594F;&#x7EDD;&#x5BF9;&#x662F;&#x5962;&#x671B;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（十三）—— 小结]]></title>
    <url>%2F2016%2F07%2F09%2F2016%2F0709BinderLearning13%2F</url>
    <content type="text"><![CDATA[&#x9A71;&#x52A8;&#x5C42;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7BE1;&#x6539;binder_buffer&#x5185;&#x7684;&#x6570;&#x636E;&#xFF1F; &#x5148;&#x7ED9;&#x51FA;&#x8FD9;&#x5F20;&#x56FE;&#xFF1A; &#x4E0A;&#x56FE;&#x4E2D;&#x6807;&#x7EA2;&#x7684;&#x90E8;&#x5206;&#x9700;&#x8981;&#x91CD;&#x70B9;&#x8003;&#x8651;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x9A71;&#x52A8;&#x5C42;&#x8981;&#x7BE1;&#x6539;&#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x6BB5;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x7ED3;&#x5408;&#x524D;&#x9762;&#x7684;&#x6587;&#x7AE0;&#x6216;&#x8BB8;&#x53EF;&#x4EE5;&#x627E;&#x51FA;&#x7AEF;&#x502A;&#x3002;&#x5728;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E03;&#xFF09;&#x2014;&#x2014; ServiceManager&#x5982;&#x4F55;&#x54CD;&#x5E94;addService&#x8BF7;&#x6C42; &#xFF1F;&#x4E00;&#x6587;&#x4E2D;&#x5176;&#x5B9E;&#x7559;&#x4E0B;&#x4E86;&#x633A;&#x591A;&#x7591;&#x95EE;&#x3002; server&#x7AEF;&#x8C03;&#x7528;addService(...)&#x5411;ServiceManager&#x6CE8;&#x518C;&#x8BE5;Service&#xFF0C;ServiceManager&#x4FDD;&#x5B58;Service&#x7684;(name, binder)&#x4E8C;&#x5143;&#x5BF9;&#x4EE5;&#x5907;&#x540E;&#x7528;&#xFF0C;&#x4F46;&#x5176;&#x4E2D;&#x6700;&#x4E0D;&#x53EF;&#x7406;&#x89E3;&#x7684;&#x662F;&#x5728;&#x51FD;&#x6570;bio_get_ref(struct binder_io *bio)&#x4E2D;&#x5224;&#x65AD;&#x5982;&#x679C;Service&#x7684;type==BINDER_TYPE_HANDLE&#xFF0C;binder&#x4E3A;0&#x3002;&#x8FD9;&#x4E2A;&#x7591;&#x56E2;&#x73B0;&#x5728;&#x5C31;&#x53EF;&#x4EE5;&#x6253;&#x5F00;&#x4E86;&#xFF1A;&#x56E0;&#x4E3A;ServiceManager&#x6536;&#x5230;&#x7684;service&#x7684;type&#x4E0D;&#x53EF;&#x80FD;&#x4E3A;BINDER_TYPE_BINDER&#xFF01; &#x5C3D;&#x7BA1;&#x5728;Server&#x7AEF;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;type=BINDER_TYPE_BINDER&#xFF0C;&#x4F46;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x88AB;&#x4E0A;&#x56FE;&#x7684;&#x7EA2;&#x8272;&#x90E8;&#x5206;&#x8FC7;&#x4E86;&#x4E00;&#x624B;&#xFF0C;&#x628A;&#x5B83;&#x6539;&#x6210;&#x4E86;BINDER_TYPE_HANDLE&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x7531;Server&#x7AEF;&#x53D1;&#x7ED9;ServiceManager&#x65F6;&#xFF0C;binder&#x5728;Server&#x4E00;&#x7AEF;&#x662F;&#x5B9E;&#x4F53;&#xFF0C;&#x5230;&#x4E86;ServiceManager&#x4E00;&#x7AEF;&#x5C31;&#x8981;&#x53D8;&#x6210;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B9E;&#x4F53;&#x5E76;&#x4E0D;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x3002;&#x540C;&#x7406;&#xFF0C;&#x6211;&#x63A8;&#x65AD;&#x5F53;Client&#x7AEF;&#x8C03;&#x7528;Server&#x7AEF;&#x7684;Binder&#x670D;&#x52A1;&#x65F6;&#xFF0C;Client&#x7AEF;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x5F15;&#x7528;&#xFF0C;&#x5230;&#x4E86;Server&#x7AEF;&#x4F1A;&#x53D8;&#x6210;&#x5B9E;&#x4F53;&#x3002;&#x6211;&#x4EEC;&#x770B;binder_transaction(...)&#x51FD;&#x6570;&#x4E2D;case BINDER_TYPE_HANDLE&#x548C;case BINDER_TYPE_WEAK_HANDLE&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x786E;&#x5B9E;&#x662F;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x4FEE;&#x6539;&#x3002; flat_binder_object&#x7684;binder&#x5B57;&#x6BB5;&#x548C;handle&#x5B57;&#x6BB5;&#x516C;&#x7528;&#x4E00;&#x4E2A;&#x8054;&#x5408;&#xFF0C;&#x5728;&#x5B9E;&#x4F53;&#x7AEF;&#x4F7F;&#x7528;binder&#xFF0C;&#x5728;&#x5F15;&#x7528;&#x7AEF;&#x4F7F;&#x7528;handle&#xFF0C;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x5B8C;&#x6210;binder&lt;--&gt;handle&#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x4F7F;&#x4E4B;&#x5BF9;&#x5B9E;&#x4F53;/&#x5F15;&#x7528;&#x7AEF;&#x900F;&#x660E;&#xFF0C;&#x8FD9;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x804C;&#x8D23;&#x3002;&#x90A3;&#x4E48;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x6709;&#x8FD9;&#x79CD;&#x8F6C;&#x6362;&#x5462;&#xFF1F;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x9886;&#x5230;binder&#xFF0C;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x4E0D;&#x5C31;&#x884C;&#x4E86;&#x4E48;&#xFF1F;&#x95EE;&#x9898;&#x5C31;&#x5728;&#x4E8E;&#x8FD9;&#x4E2A;&#x201C;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x201D;&#x4E0D;&#x597D;&#x641E;&#xFF0C;binder&#x662F;&#x8DE8;&#x8FDB;&#x7A0B;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x201C;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x201D;&#x5FC5;&#x987B;&#x8981;&#x7CFB;&#x7EDF;&#x5168;&#x5C40;&#x552F;&#x4E00;&#x3002;binder&#x5728;Server&#x7AEF;&#x5C31;&#x662F;BnService&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x8FD9;&#x4E2A;&#x5730;&#x5740;&#x5728;Server&#x8FDB;&#x7A0B;&#x4E2D;&#x662F;&#x5168;&#x5C40;&#x552F;&#x4E00;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5230;&#x4E86;ServiceManager&#x4E00;&#x7AEF;&#x5374;&#x4E0D;&#x552F;&#x4E00;&#xFF0C;&#x4E3A;&#x4E86;&#x786E;&#x4FDD;&#x5B83;&#x5728;&#x8FD9;&#x4E00;&#x7AEF;&#x7684;&#x552F;&#x4E00;&#x6027;&#xFF0C;&#x9A71;&#x52A8;&#x4E3A;&#x5B83;&#x751F;&#x6210;&#x4E86;&#x5728;ServiceManager&#x4E2D;&#x7684;&#x552F;&#x4E00;id&#xFF0C;&#x5373;handle&#xFF0C;&#x4E5F;&#x5373;ref-&gt;desc&#xFF0C;&#x53EF;&#x662F;&#x5B83;&#x4EC5;&#x5728;ServiceManager&#x5185;&#x552F;&#x4E00;&#x3002; &#x4E8E;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x9700;&#x8981;&#x505A;&#x8F6C;&#x5316;&#xFF0C;&#x786E;&#x4FDD;&#x5728;&#x201C;&#x9634;&#x9633;&#x4E24;&#x754C;&#x5404;&#x81EA;&#x552F;&#x4E00;&#xFF0C;&#x5230;&#x4E86;&#x5BF9;&#x7AEF;&#x5C31;&#x4E0D;&#x552F;&#x4E00;&#x201D;&#x7684;&#x4E24;&#x4E2A;id&#x4E4B;&#x95F4;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#xFF0C;&#x4F7F;&#x5F97;&#x4E00;&#x7AEF;&#x5411;&#x53E6;&#x4E00;&#x7AEF;&#x7684;binder&#x558A;&#x8BDD;&#x65F6;&#xFF0C;&#x5BF9;&#x7AEF;&#x5BF9;&#x5E94;&#x7684;binder&#x80FD;&#x6536;&#x5230;&#x3002; &#x518D;&#x770B;Server&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;addService&#x6570;&#x636E;&#x7684; &#x5728;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516D;&#xFF09;&#x2014;&#x2014; binder&#x670D;&#x52A1;&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;addService&#x6570;&#x636E;&#x7684;&#xFF1F;&#x4E2D;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x8BA8;&#x8BBA;&#x4E86;&#x5E94;&#x7528;&#x5C42;&#x884C;&#x4E3A;&#x548C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5728;&#x672C;&#x8282;&#x4E2D;&#x6211;&#x4EEC;&#x91CD;&#x70B9;&#x770B;&#x9A71;&#x52A8;&#x5C42;&#x3002; &#x56DE;&#x987E;&#x4E00;&#x4E0B;Server&#x7AEF;&#x4EE3;&#x7801;&#xFF1A; 12345678int main() { sp &lt; ProcessState &gt; proc(ProcessState::self()); sp &lt; IServiceManager &gt; sm = defaultServiceManager(); sm-&gt;addService(String16(&quot;service.testservice&quot;), new BnTestService()); ProcessState::self()-&gt;startThreadPool(); IPCThreadState::self()-&gt;joinThreadPool(); return 0;} &#x7B2C;3&#x884C;&#x7684;defaultServiceManager()&#x6211;&#x4EEC;&#x5728;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E8C;&#xFF09;&#x2014;&#x2014; defaultServiceManager()&#x8FD4;&#x56DE;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;&#x4E2D;&#x8BA8;&#x8BBA;&#x8FC7;&#x3002;&#x5728;ProcessState&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x6253;&#x5F00;&#x4E86;&#x6587;&#x4EF6;/dev/binder&#xFF0C;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4F53;&#x4E2D;&#x5B8C;&#x6210;&#x4E86;&#x6620;&#x5C04;&#x3002; &#x6253;&#x5F00;&#x6587;&#x4EF6;/dev/binder&#xFF0C;&#x4F1A;&#x6267;&#x884C;binder_open&#xFF0C;&#x4E3A;Server&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;struct file&#xFF08;&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/include/linux/fs.h:978&#xFF09;&#xFF0C;&#x5728;binder_open(...)&#x4E2D;&#x4F1A;&#x4E3A;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;binder_proc&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x628A;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;private_data&#x6210;&#x5458;&#x6307;&#x5411;&#x8BE5;binder_proc&#x5BF9;&#x8C61;&#x3002; &#x6620;&#x5C04;&#x6587;&#x4EF6;/dev/binder&#xFF0C;&#x4F1A;&#x4F1A;&#x6267;&#x884C;binder_mmap&#xFF0C;&#x4E3A;proc&#x7533;&#x8BF7;binder_buffer&#x3002; addService&#x4F1A;&#x6267;&#x884C;binder_transaction&#xFF0C;&#x4E3A;addService&#x4E8B;&#x52A1;&#x521B;&#x5EFA;struct binder_transaction&#x5BF9;&#x8C61;t&#xFF0C;&#x5E76;&#x5C06;t&#x6302;&#x5230;ServiceManager&#x7684;binder_buffer::t&#x4E0B;&#xFF0C;&#x5C06;&#x6765;&#x81EA;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x5230;ServiceManager&#x7684;binder_buffer&#x4E2D;&#xFF1B;&#x518D;&#x4E3A;Server&#x521B;&#x5EFA;binder_node&#xFF0C;&#x6302;&#x5230;Server&#x7684;proc-&gt;nodes.rb_node&#x4E2D;&#xFF0C;&#x4E3A;ServiceManager&#x521B;&#x5EFA;binder_ref&#xFF0C;&#x6302;&#x5230;ServiceManager&#x7684;proc-&gt;refs_by_desc.rb_node&#x4E2D;&#x3002;&#x7531;&#x4E8E;binder_node&#x548C;binder_ref&#x8868;&#x793A;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;binder&#xFF0C;&#x56E0;&#x6B64;binder_ref::node&#x4E0E;binder_node::first&#x5B8C;&#x6210;&#x4E92;&#x6307;&#x3002; &#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x6839;&#x636E;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E03;&#xFF09;&#x2014;&#x2014; ServiceManager&#x5982;&#x4F55;&#x54CD;&#x5E94;addService&#x8BF7;&#x6C42; &#xFF1F;&#x53EF;&#x77E5;&#xFF1A;ServiceManager&#x4F1A;&#x628A;Service&#x7684;name&#x548C;handle&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x4E32;&#x5230;&#x94FE;&#x8868;svclist&#x4E2D;&#x3002; &#x518D;&#x770B;ServiceManager&#x662F;&#x5982;&#x4F55;&#x54CD;&#x5E94;checkService&#x8BF7;&#x6C42;&#x7684; &#x5F53;Client&#x8BF7;&#x6C42;Service&#x7684;&#x65F6;&#x5019;&#xFF0C;ServiceManager&#x662F;&#x600E;&#x4E48;&#x6839;&#x636E;&#x524D;&#x9762;&#x4FDD;&#x5B58;&#x7684;handle&#x5173;&#x8054;&#x5230;Service&#x7684;&#xFF0C;Client&#x53C8;&#x662F;&#x600E;&#x4E48;&#x636E;&#x6B64;&#x8C03;&#x7528;&#x5230;Service&#x7684;&#x51FD;&#x6570;&#xFF1F;&#x56DE;&#x7B54;&#x4E86;&#x8FD9;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;binder&#x7684;&#x901A;&#x9053;&#x5C31;&#x7B97;&#x6253;&#x901A;&#x5566;:) &#x56DE;&#x987E;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x2014;&#x2014; ServiceManager&#x5982;&#x4F55;&#x54CD;&#x5E94;checkService&#x8BF7;&#x6C42;&#xFF0C;&#x6765;&#x770B;&#x8FD9;&#x5E45;&#x56FE;&#xFF1A; &#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;Service&#x65F6;&#x5E26;&#x7684;&#x662F;Service&#x7684;name&#xFF0C;&#x5728;ServiceManager&#x6839;&#x636E;name&#x5728;svclist&#x4E2D;&#x67E5;&#x627E;&#x5230;handle&#xFF0C;&#x7136;&#x540E;&#x7EC4;&#x7EC7;&#x6210;rdata&#x6570;&#x636E;&#x8FD4;&#x56DE;&#x3002;&#x770B;&#xFF01;&#x5B83;&#x7684;type&#x662F;BINDER_TYPE_HANDLE&#xFF0C;&#x9A71;&#x52A8;&#x5C42;&#x662F;&#x4E0D;&#x662F;&#x8981;&#x505A;&#x70B9;&#x4EC0;&#x4E48;&#xFF1F;&#x6765;&#x770B;&#x770B;binder_transaction(...)&#x7684;case BINDER_TYPE_HANDLE&#x548C;case BINDER_TYPE_WEAK_HANDLE&#x90E8;&#x5206;&#xFF1A; 12345678910111213141516171819202122case BINDER_TYPE_HANDLE:case BINDER_TYPE_WEAK_HANDLE: { struct binder_ref *ref = binder_get_ref(proc, fp-&gt;handle); ... ... if (ref-&gt;node-&gt;proc == target_proc) { if (fp-&gt;type == BINDER_TYPE_HANDLE) fp-&gt;type = BINDER_TYPE_BINDER; else fp-&gt;type = BINDER_TYPE_WEAK_BINDER; fp-&gt;binder = ref-&gt;node-&gt;ptr; fp-&gt;cookie = ref-&gt;node-&gt;cookie; binder_inc_node(ref-&gt;node, fp-&gt;type == BINDER_TYPE_BINDER, 0, NULL); ... ... } else { struct binder_ref *new_ref; new_ref = binder_get_ref_for_node(target_proc, ref-&gt;node); ... ... fp-&gt;handle = new_ref-&gt;desc; binder_inc_ref(new_ref, fp-&gt;type == BINDER_TYPE_HANDLE, NULL); ... ... }} break; &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7531;ServiceManager&#x6267;&#x884C;&#xFF0C;&#x53D1;&#x9001;&#x7ED9;Client&#xFF0C;&#x56E0;&#x6B64;&#x5176;&#x4E2D;&#x7684;proc&#x5C5E;&#x4E8E;ServiceManager&#xFF0C;target_proc&#x5C5E;&#x4E8E;Client&#x3002; &#x4E0A;&#x4E00;&#x8282;&#x5206;&#x6790;&#x8FC7;&#xFF0C;&#x5F53;Server&#x7AEF;&#x8C03;&#x7528;addService&#x540E;&#xFF0C;&#x9A71;&#x52A8;&#x4F1A;&#x5728;ServiceManager&#x7684;refs_by_desc&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x6302;&#x4E0A;Service&#x7684;binder_ref&#x8282;&#x70B9;&#xFF1B;&#x5728;Server&#x7684;nodes&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x6302;&#x4E0A;Service&#x7684;binder_node&#x8282;&#x70B9;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x4E0A;&#x9762;&#x4EE3;&#x7801;#3&#x8FD9;&#x4E00;&#x884C;&#xFF0C;&#x5728;ServiceManager&#x7684;refs_by_desc&#x7EA2;&#x9ED1;&#x6811;&#x4E0A;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x5230;handle&#x5BF9;&#x5E94;&#x7684;binder_ref&#x8282;&#x70B9;&#x3002;#5&#x884C;&#x4E2D;&#xFF0C;ref-&gt;node&#x662F;binder&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x8BE5;&#x5B9E;&#x4F53;&#x662F;&#x7531;Server&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x56E0;&#x6B64;ref-&gt;node-&gt;proc&#x5C5E;&#x4E8E;Server&#xFF0C;&#x800C;target_proc&#x5C5E;&#x4E8E;Client&#xFF0C;&#x56E0;&#x6B64;#5&#x975E;&#x771F;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x5728;Client&#x7684;proc&#x4E2D;&#x4E3A;Service&#x7684;binder_node&#x521B;&#x5EFA;binder_ref&#xFF0C;&#x5176;desc&#x5728;Client&#x5185;&#x552F;&#x4E00;&#xFF0C;&#x628A;handle&#x6539;&#x4E3A;&#x6B64;desc&#x3002;&#x4FEE;&#x6539;&#x4E4B;&#x540E;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x56FE;&#x5982;&#x4E0B;&#xFF0C;&#x6211;&#x628A;&#x88AB;&#x9A71;&#x52A8;&#x5C42;&#x4FEE;&#x6539;&#x7684;&#x5185;&#x5BB9;&#x6807;&#x7EFF;&#x4E86;&#xFF1A; &#x4E0B;&#x56FE;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x4E3A;Client&#x521B;&#x5EFA;&#x7684;binder_ref&#x4EE5;&#x53CA;&#x5B83;&#x4E0E;binder_node&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x6211;&#x7528;&#x7EFF;&#x8272;&#x8868;&#x793A;&#x65B0;&#x589E;&#x52A0;&#x7684;&#x8FD9;&#x90E8;&#x5206;&#x5173;&#x7CFB;&#xFF0C;&#x865A;&#x7EBF;&#x8868;&#x793A;&#x5E76;&#x975E;&#x76F4;&#x63A5;&#x6307;&#x9488;&#x6307;&#x8FC7;&#x6765;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x7EA2;&#x9ED1;&#x6811;&#x4E32;&#x5165;&#x7684;&#x8282;&#x70B9;&#xFF1A; &#x5475;&#x5475;&#xFF0C;&#x597D;&#x590D;&#x6742;&#x7684;&#x4E09;&#x89D2;&#x5173;&#x7CFB;&#xFF01;&#x4E71;&#x4E48;&#xFF1F;&#x6B63;&#x5F53;&#x6211;&#x4EE5;&#x4E3A;&#x5728;&#x6211;&#x5185;&#x5FC3;&#x91CC;&#x5DF2;&#x7ECF;&#x65E0;&#x6BD4;&#x6E05;&#x6670;&#xFF0C;&#x6B63;&#x8981;&#x52BF;&#x5982;&#x7834;&#x7AF9;&#x4E58;&#x80DC;&#x8FFD;&#x51FB;&#xFF0C;&#x751A;&#x81F3;&#x8981;&#x63D0;&#x524D;&#x795D;&#x8D3A;&#x653B;&#x4E0B;binder&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x88AB;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x95EE;&#x9898;&#x6574;&#x61F5;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x4E3B;&#x9898;&#x5E94;&#x8BE5;&#x662F;&#x201C;&#x518D;&#x770B;&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;Test()&#x8BF7;&#x6C42;&#x7684;&#x201D;&#xFF0C;&#x53EF;&#x662F;&#x5F53;&#x6211;&#x5206;&#x6790;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x516B;&#xFF09;&#x2014;&#x2014; &#x5BA2;&#x6237;&#x7AEF;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;Test()&#x8BF7;&#x6C42; &#xFF1F;&#x8FD9;&#x4E00;&#x7BC7;&#x4E2D;&#x7684;&#x6700;&#x540E;&#x90A3;&#x5F20;&#x56FE;&#xFF1A; &#x624D;&#x53D1;&#x73B0;data&#x7684;&#x90E8;&#x5206;&#x6839;&#x672C;&#x6CA1;&#x6709;flat_binder_object&#xFF0C;&#x6839;&#x636E;binder_transaction(...)&#xFF0C;&#x4E5F;&#x5C31;&#x4E0D;&#x8D70;&#x4EC0;&#x4E48;case&#x8BED;&#x53E5;&#x4E86;&#xFF0C;&#x751F;&#x6210;&#x4E86;binder_transaction&#x5C31;&#x5B8C;&#x4E86;&#xFF1F;&#x8C01;&#x6765;&#x8D1F;&#x8D23;&#x628A;&#x8FD9;&#x4E2A;&#x4E8B;&#x52A1;&#x4EA4;&#x5230;Server&#x7AEF;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x5462;&#xFF1F;&#x539F;&#x6765;&#x6211;&#x8FD8;&#x6709;&#x4E00;&#x534A;&#x7684;&#x8DEF;&#x7A0B;&#x8981;&#x8D70;&#xFF0C;&#x5F53;&#x521D;&#x7A7F;&#x8D8A;&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x65F6;&#x5019;&#x53EA;&#x5206;&#x6790;&#x5230;binder_ioctl(...)&#x8C03;&#x7528;binder_thread_write(...)&#xFF0C;&#x540E;&#x9762;&#x8FD8;&#x6709;&#x4E00;&#x534A;&#x662F;binder_thread_read(...)&#x3002;&#x770B;&#x6765;&#x5C0F;&#x7ED3;&#x505A;&#x5F97;&#x8FD8;&#x4E3A;&#x65F6;&#x8FC7;&#x65E9;&#xFF0C;&#x540E;&#x9762;&#x8FD8;&#x6709;&#x5CF0;&#x56DE;&#x8DEF;&#x8F6C;&#xFF0C;&#x540E;&#x534A;&#x90E8;&#x5206;&#x7559;&#x5F85;&#x4EE5;&#x540E;&#x7684;&#x7AE0;&#x8282;&#x518D;&#x641E;&#x5427;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（十二）—— binder_transaction(...)都干了什么？]]></title>
    <url>%2F2016%2F06%2F14%2F2016%2F0614BinderLearning12%2F</url>
    <content type="text"><![CDATA[binder_open(...)&#x90FD;&#x5E72;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; &#x5728;&#x56DE;&#x7B54;binder_transaction(...)&#x4E4B;&#x524D;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x8981;&#x53BB;&#x63A2;&#x7A76;&#xFF0C;&#x6BD4;&#x5982;binder_open(...)&#xFF0C;binder_mmap(...)&#xFF0C;&#x8FD9;&#x4E9B;&#x8C03;&#x7528;&#x662F;&#x5728;&#x6253;&#x5F00;&#x8BBE;&#x5907;&#x6587;&#x4EF6;/dev/binder&#x4E4B;&#x540E;&#x5FC5;&#x987B;&#x5B8C;&#x6210;&#x7684;&#x7A0B;&#x5F0F;&#x5316;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x5728;&#x5B83;&#x4EEC;&#x5185;&#x90E8;&#x9700;&#x8981;&#x505A;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x51C6;&#x5907;&#x3002;&#x9996;&#x5148;&#x6765;&#x770B;binder_open(...) kernel/drivers/staging/android/binder.c:2979 12345678910111213141516171819202122static int binder_open(struct inode *nodp, struct file *filp){ struct binder_proc *proc; ...... proc = kzalloc(sizeof(*proc), GFP_KERNEL); // &#x521B;&#x5EFA;binder_proc&#x7ED3;&#x6784;&#x4F53; ...... get_task_struct(current); proc-&gt;tsk = current; INIT_LIST_HEAD(&amp;proc-&gt;todo); // &#x521D;&#x59CB;&#x5316;&#x94FE;&#x8868;&#x5934; init_waitqueue_head(&amp;proc-&gt;wait); proc-&gt;default_priority = task_nice(current); ...... // &#x5C06;proc_node&#x4E32;&#x5165;&#x5168;&#x5C40;&#x94FE;&#x8868;binder_procs&#x4E2D; hlist_add_head(&amp;proc-&gt;proc_node, &amp;binder_procs); proc-&gt;pid = current-&gt;group_leader-&gt;pid; INIT_LIST_HEAD(&amp;proc-&gt;delivered_death); filp-&gt;private_data = proc; ...... return 0;} binder_open(...)&#x751F;&#x6210;&#x5E76;&#x521D;&#x59CB;&#x5316;binder_proc&#x7ED3;&#x6784;&#x4F53;&#x5982;&#x4E0B;&#xFF1A; struct binder_proc struct binder_proc&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x201C;&#x6B63;&#x5728;&#x4F7F;&#x7528;Binder&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x673A;&#x5236;&#x201D;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x5B83;&#x7684;&#x5B9A;&#x4E49;&#x53C2;&#x89C1;kernel/goldfish/drivers/staging/android/binder.c:286 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172struct binder_proc { // &#x8FDB;&#x7A0B;&#x6253;&#x5F00;&#x8BBE;&#x5907;&#x6587;&#x4EF6;/dev/binder&#x65F6;&#xFF0C;Binder&#x9A71;&#x52A8;&#x4F1A;&#x4E3A;&#x5B83;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;binder_proc&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5E76;&#x5C06;&#x5B83; // &#x4FDD;&#x5B58;&#x5728;&#x5168;&#x5C40;hash&#x5217;&#x8868;&#x4E2D;&#xFF0C;proc_node&#x662F;&#x8BE5;hash&#x5217;&#x8868;&#x7684;&#x8282;&#x70B9;&#x3002; struct hlist_node proc_node; // &#x6BCF;&#x4E2A;&#x4F7F;&#x7528;&#x4E86;Binder&#x673A;&#x5236;&#x7684;&#x8FDB;&#x7A0B;&#x90FD;&#x6709;&#x4E00;&#x4E2A;Binder&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x7528;&#x6765;&#x5904;&#x7406;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x3002;threads&#x4EE5; // &#x7EBF;&#x7A0B;ID&#x4F5C;&#x4E3A;key&#x6765;&#x7EC4;&#x7EC7;&#x8FDB;&#x7A0B;&#x7684;Binder&#x7EBF;&#x7A0B;&#x6C60;&#x3002;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x8C03;&#x7528;ioctl&#x5C06;&#x7EBF;&#x7A0B;&#x6CE8;&#x518C;&#x5230;Binder&#x9A71;&#x52A8;&#x4E2D; // &#x5F53;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x9A71;&#x52A8;&#x53EF;&#x4EE5;&#x8981;&#x6C42;&#x8FDB;&#x7A0B;&#x6CE8;&#x518C;&#x66F4;&#x591A;&#x7684;&#x7EBF;&#x7A0B;&#x5230;Binder&#x7EBF;&#x7A0B; // &#x6C60;&#x4E2D; struct rb_root threads; struct rb_root nodes; // &#x7EC4;&#x7EC7;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4EE5;&#x6210;&#x5458;ptr&#x4F5C;&#x4E3A;key struct rb_root refs_by_desc; // &#x7EC4;&#x7EC7;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4EE5;&#x6210;&#x5458;desc&#x4F5C;&#x4E3A;key struct rb_root refs_by_node; // &#x7EC4;&#x7EC7;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4EE5;&#x6210;&#x5458;node&#x4F5C;&#x4E3A;key int pid; // &#x6307;&#x5411;&#x8FDB;&#x7A0B;&#x7EC4;ID struct vm_area_struct *vma; // &#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x5730;&#x5740;&#xFF0C;&#x4F9B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528; struct mm_struct *vma_vm_mm; struct task_struct *tsk; // &#x6307;&#x5411;&#x8FDB;&#x7A0B;&#x4EFB;&#x52A1;&#x63A7;&#x5236;&#x5757; struct files_struct *files; // &#x6307;&#x5411;&#x8FDB;&#x7A0B;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x4F53;&#x6570;&#x7EC4; // &#x4E00;&#x4E2A;hash&#x8868;&#xFF0C;&#x4FDD;&#x5B58;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x5EF6;&#x8FDF;&#x6267;&#x884C;&#x7684;&#x5DE5;&#x4F5C;&#x9879;&#xFF0C;&#x8FD9;&#x4E9B;&#x5EF6;&#x8FDF;&#x5DE5;&#x4F5C;&#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B; // BINDER_DEFERRED_PUT_FILES&#x3001;BINDER_DEFERRED_FLUSH&#x3001;BINDER_DEFERRED_RELEASE // &#x9A71;&#x52A8;&#x4E3A;&#x8FDB;&#x7A0B;&#x5206;&#x914D;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x65F6;&#xFF0C;&#x4F1A;&#x4E3A;&#x8BE5;&#x7F13;&#x51B2;&#x533A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BE5;&#x63CF;&#x8FF0;&#x7B26;&#x5C06;&#x8BE5;&#x5185; // &#x6838;&#x7F13;&#x51B2;&#x533A;&#x6620;&#x5C04;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002;&#x5F53;&#x8FDB;&#x7A0B;&#x4E0D;&#x518D;&#x9700;&#x8981;&#x4F7F;&#x7528;Binder&#x673A;&#x5236;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x901A;&#x77E5;&#x9A71;&#x52A8;&#x5173;&#x95ED;&#x8BE5;&#x6587;&#x4EF6; // &#x63CF;&#x8FF0;&#x7B26;&#x5E76;&#x91CA;&#x653E;&#x4E4B;&#x524D;&#x6240;&#x5206;&#x914D;&#x7684;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x9A6C;&#x4E0A;&#x5C31;&#x8981;&#x5B8C;&#x6210;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x6B64;&#x9A71;&#x52A8;&#x4F1A;&#x521B;&#x5EFA;&#x4E00; // &#x4E2A;BINDER_DEFERRED_PUT_FILES&#x7C7B;&#x578B;&#x7684;&#x5DE5;&#x4F5C;&#x6765;&#x5EF6;&#x8FDF;&#x6267;&#x884C;&#xFF1B; // Binder&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x7A7A;&#x95F2;Binder&#x7EBF;&#x7A0B;&#x662F;&#x7761;&#x7720;&#x5728;&#x4E00;&#x4E2A;&#x7B49;&#x5F85;&#x961F;&#x5217;&#x4E2D;&#x7684;&#xFF0C;&#x8FDB;&#x7A0B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x51FD;&#x6570;flush // &#x6765;&#x5524;&#x9192;&#x8FD9;&#x4E9B;&#x7EBF;&#x7A0B;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x68C0;&#x67E5;&#x8FDB;&#x7A0B;&#x662F;&#x5426;&#x6709;&#x65B0;&#x7684;&#x5DE5;&#x4F5C;&#x9879;&#x9700;&#x8981;&#x5904;&#x7406;&#x3002;&#x6B64;&#x65F6;&#x9A71;&#x52A8;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; // BINDER_DEFERRED_FLUSH&#x7C7B;&#x578B;&#x7684;&#x5DE5;&#x4F5C;&#x9879;&#xFF0C;&#x4EE5;&#x4FBF;&#x5EF6;&#x8FDF;&#x6267;&#x884C;&#x5524;&#x9192;&#x7A7A;&#x95F2;Binder&#x7EBF;&#x7A0B;&#x7684;&#x64CD;&#x4F5C;&#xFF1B; // &#x5F53;&#x8FDB;&#x7A0B;&#x4E0D;&#x518D;&#x4F7F;&#x7528;Binder&#x673A;&#x5236;&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x51FD;&#x6570;close&#x5173;&#x95ED;&#x6587;&#x4EF6;/dev/binder&#xFF0C;&#x6B64;&#x65F6;&#x9A71;&#x52A8;&#x4F1A;&#x91CA;&#x653E;&#x4E4B; // &#x524D;&#x4E3A;&#x5B83;&#x5206;&#x914D;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x7531;&#x4E8E;&#x8D44;&#x6E90;&#x91CA;&#x653E;&#x662F;&#x4E2A;&#x6BD4;&#x8F83;&#x8017;&#x65F6;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x9A71;&#x52A8;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; // BINDER_DEFERRED_RELEASE&#x7C7B;&#x578B;&#x7684;&#x4E8B;&#x52A1;&#x6765;&#x5EF6;&#x8FDF;&#x6267;&#x884C; struct hlist_node deferred_work_node; int deferred_work; // &#x63CF;&#x8FF0;&#x8BE5;&#x5EF6;&#x8FDF;&#x5DE5;&#x4F5C;&#x9879;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B; void *buffer; // &#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x5730;&#x5740;&#xFF0C;&#x4F9B;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528; ptrdiff_t user_buffer_offset; // vma&#x548C;buffer&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x503C; // buffer&#x6307;&#x5411;&#x4E00;&#x5757;&#x5927;&#x7684;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4E3A;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#xFF0C;&#x5C06;&#x5B83;&#x5212;&#x5206;&#x6210;&#x82E5;&#x5E72;&#x5C0F;&#x5757;&#xFF0C;&#x8FD9;&#x4E9B;&#x5C0F;&#x5757;&#x7684;&#x5185;&#x6838;&#x7F13; // &#x51B2;&#x533A;&#x7528;binder_buffer&#x63CF;&#x8FF0;&#x4FDD;&#x5B58;&#x5728;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x6309;&#x5730;&#x5740;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x6392;&#x5217;&#x3002;buffers&#x6307;&#x5411;&#x8BE5;&#x5217;&#x8868;&#x7684;&#x5934;&#x90E8;&#x3002; struct list_head buffers; struct rb_root free_buffers; // buffers&#x4E2D;&#x7684;&#x5C0F;&#x5757;&#x6709;&#x7684;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#xFF0C;&#x88AB;&#x4FDD;&#x5B58;&#x5728;&#x6B64;&#x7EA2;&#x9ED1;&#x6811; struct rb_root allocated_buffers; // buffers&#x4E2D;&#x7684;&#x7A7A;&#x95F2;&#x5C0F;&#x5757;&#x88AB;&#x4FDD;&#x5B58;&#x5728;&#x6B64;&#x7EA2;&#x9ED1;&#x6811; size_t free_async_space; // &#x5F53;&#x524D;&#x53EF;&#x7528;&#x7684;&#x4FDD;&#x5B58;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x6570;&#x636E;&#x7684;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5927;&#x5C0F; struct page **pages; // buffer&#x548C;vma&#x90FD;&#x662F;&#x865A;&#x62DF;&#x5730;&#x5740;&#xFF0C;&#x5B83;&#x4EEC;&#x5BF9;&#x5E94;&#x7684;&#x7269;&#x7406;&#x9875;&#x9762;&#x4FDD;&#x5B58;&#x5728;pages // &#x4E2D;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x7269;&#x7406;&#x9875;&#x9762; size_t buffer_size; // &#x8FDB;&#x7A0B;&#x8C03;&#x7528;mmap&#x5C06;&#x5B83;&#x6620;&#x5C04;&#x5230;&#x8FDB;&#x7A0B;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x8BF7;&#x6C42;&#x9A71;&#x52A8;&#x4E3A;&#x5B83; // &#x5206;&#x914D;&#x4E00;&#x5757;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x7F13;&#x51B2;&#x533A;&#x5927;&#x5C0F;&#x4FDD;&#x5B58;&#x5728;&#x8BE5;&#x6210;&#x5458;&#x4E2D; uint32_t buffer_free; // &#x7A7A;&#x95F2;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5927;&#x5C0F; struct list_head todo; // &#x5F53;&#x8FDB;&#x7A0B;&#x63A5;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;Binder&#x9A71;&#x52A8;&#x5C31;&#x5C06;&#x8BE5;&#x8BF7;&#x6C42;&#x5C01; // &#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x9879;&#xFF0C;&#x5E76;&#x4E14;&#x52A0;&#x5165;&#x5230;&#x8FDB;&#x7A0B;&#x7684;&#x5F85;&#x5904;&#x7406;&#x5DE5;&#x4F5C;&#x5411;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x8BE5;&#x961F;&#x5217; // &#x4F7F;&#x7528;&#x6210;&#x5458;&#x53D8;&#x91CF;todo&#x6765;&#x63CF;&#x8FF0;&#x3002; wait_queue_head_t wait; // &#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7A7A;&#x95F2;Binder&#x7EBF;&#x7A0B;&#x4F1A;&#x7761;&#x7720;&#x5728;&#x7531;&#x8BE5;&#x6210;&#x5458;&#x6240;&#x63CF;&#x8FF0;&#x7684;&#x7B49;&#x5F85;&#x961F;&#x5217;&#x4E2D; // &#x5F53;&#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#x7684;&#x5F85;&#x5904;&#x7406;&#x5DE5;&#x4F5C;&#x9879;&#x961F;&#x5217;&#x589E;&#x52A0;&#x65B0;&#x5DE5;&#x4F5C;&#x9879;&#x540E;&#xFF0C;&#x9A71;&#x52A8;&#x4F1A;&#x5524;&#x9192;&#x8FD9; // &#x4E9B;&#x7EBF;&#x7A0B;&#xFF0C;&#x4EE5;&#x4FBF;&#x5904;&#x7406;&#x65B0;&#x7684;&#x5DE5;&#x4F5C;&#x9879; struct binder_stats stats; // &#x7528;&#x6765;&#x7EDF;&#x8BA1;&#x8FDB;&#x7A0B;&#x6570;&#x636E; // &#x5F53;&#x8FDB;&#x7A0B;&#x6240;&#x5F15;&#x7528;&#x7684;Service&#x7EC4;&#x4EF6;&#x6B7B;&#x4EA1;&#x65F6;&#xFF0C;&#x9A71;&#x52A8;&#x4F1A;&#x5411;&#x8BE5;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6B7B;&#x4EA1;&#x901A;&#x77E5;&#x3002;&#x8FD9;&#x4E2A;&#x6B63;&#x5728;&#x53D1;&#x51FA;&#x7684;&#x901A;&#x77E5;&#x88AB; // &#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;BINDER_WORK_DEAD_BINDER&#x6216;BINDER_WORK_DEAD_BINDER_AND_CLEAR // &#x7684;&#x5DE5;&#x4F5C;&#x9879;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5728;&#x7531;&#x8BE5;&#x6210;&#x5458;&#x63CF;&#x8FF0;&#x7684;&#x961F;&#x5217;&#x4E2D;&#x5220;&#x9664; struct list_head delivered_death; int max_threads; // &#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x6700;&#x591A;&#x53EF;&#x4EE5;&#x4E3B;&#x52A8;&#x8BF7;&#x6C42;&#x8FDB;&#x7A0B;&#x6CE8;&#x518C;&#x7684;&#x7EBF;&#x7A0B;&#x6570; int requested_threads; int requested_threads_started; int ready_threads; // &#x8FDB;&#x7A0B;&#x5F53;&#x524D;&#x7684;&#x7A7A;&#x95F2;Binder&#x7EBF;&#x7A0B;&#x6570; long default_priority; // &#x8FDB;&#x7A0B;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x5F53;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x9879;&#x65F6;&#xFF0C;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#x53EF;&#x80FD;&#x88AB; // &#x8BBE;&#x7F6E;&#x4E3A;&#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#x7684;&#x4F18;&#x5148;&#x7EA7; struct dentry *debugfs_entry;}; binder_proc&#x4E2D;&#x7684;&#x94FE;&#x8868; &#x5728;binder_proc&#x5185;&#x90E8;&#x6709;&#x82E5;&#x5E72;&#x4E2A;list_head&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x6765;&#x628A;binder_proc&#x4E32;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x94FE;&#x8868;&#x4E2D;&#x53BB;&#x3002;&#x4E00;&#x822C;&#x5199;&#x94FE;&#x8868;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x94FE;&#x8868;&#x8282;&#x70B9;&#x7ED3;&#x6784;&#x4F53;&#x4E2D;&#x8FFD;&#x52A0;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5B57;&#x6BB5;&#xFF0C;&#x987A;&#x7740;&#x94FE;&#x8868;&#x7684;prev&#x3001;next&#x6307;&#x9488;&#x5230;&#x8FBE;&#x6307;&#x5B9A;&#x8282;&#x70B9;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8BBF;&#x95EE;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5B57;&#x6BB5;&#xFF1A; &#x5728;Linux&#x4EE3;&#x7801;&#x4E2D;&#x5219;&#x5E38;&#x5E38;&#x53CD;&#x8FC7;&#x6765;&#xFF0C;&#x5148;&#x5B9A;&#x4E49;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5728;&#x5176;&#x5185;&#x90E8;&#x5D4C;&#x5165;&#x94FE;&#x8868;&#x5B57;&#x6BB5;list_head&#xFF0C;&#x987A;&#x7740;&#x8BE5;&#x5B57;&#x6BB5;&#x904D;&#x5386;&#x94FE;&#x8868;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#x6839;&#x636E;&#x8BE5;&#x5B57;&#x6BB5;&#x4E0E;&#x6240;&#x5728;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x627E;&#x5230;&#x6240;&#x5728;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x8BBF;&#x95EE;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5B57;&#x6BB5;&#xFF1A; &#x8FD9;&#x6837;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;&#x8BA9;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;&#x94FE;&#x8868;&#x903B;&#x8F91;&#x5206;&#x79BB;&#xFF0C;Linux&#x8FD8;&#x5B9A;&#x4E49;&#x4E86;&#x5B8F;&#x7528;&#x4E8E;&#x64CD;&#x4F5C;&#x94FE;&#x8868;&#xFF0C;&#x4EE5;&#x53CA;&#x6839;&#x636E;&#x94FE;&#x8868;&#x5B57;&#x6BB5;&#x627E;&#x5230;&#x6240;&#x5728;&#x7ED3;&#x6784;&#x4F53;&#x3002;&#x5982;binder_proc&#x7ED3;&#x6784;&#x4F53;&#x5185;&#x90E8;&#x76DB;&#x653E;&#x591A;&#x4E2A;list_head&#xFF0C;&#x8868;&#x793A;&#x628A;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x4E32;&#x5165;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x94FE;&#x8868;&#x3002; &#x5177;&#x4F53;&#x6280;&#x5DE7;&#x53EF;&#x53C2;&#x89C1;&#x300A;Linux&#x5185;&#x6838;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;&#x300B;&#x7B2C;6&#x7AE0;&#x3002; INIT_LIST_HEAD(&amp;proc-&gt;todo) &#x56DE;&#x5230;binder_open(...)&#xFF0C;&#x9664;&#x4E86;&#x76F4;&#x63A5;&#x5B57;&#x6BB5;&#x8D4B;&#x503C;&#xFF0C;&#x9700;&#x8981;&#x89E3;&#x91CA;&#x7684;&#x662F;&#x51E0;&#x4E2A;&#x94FE;&#x8868;&#x5B57;&#x6BB5;&#x7684;&#x5904;&#x7406;&#x3002; INIT_LIST_HEAD(&amp;proc-&gt;todo)&#x7528;&#x4E8E;&#x5C06;todo&#x7684;next&#x3001;prev&#x6307;&#x9488;&#x6307;&#x5411;&#x81EA;&#x5DF1;&#xFF0C;&#x8BE5;&#x5B8F;&#x7684;&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/include/linux/lish.t:24 12345static inline void INIT_LIST_HEAD(struct list_head *list){ list-&gt;next = list; list-&gt;prev = list;} init_waitqueue_head(&amp;proc-&gt;wait) init_waitqueue_head(&amp;proc-&gt;wait)&#x8FD9;&#x4E2A;&#x5B8F;&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/include/linux/wait.h:81 123456#define init_waitqueue_head(q) \ do { \ static struct lock_class_key __key; \ \ __init_waitqueue_head((q), #q, &amp;__key); \ } while (0) __init_waitqueue_head(...)&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/kernel/wait.c:13&#xFF0C;&#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x4E86;&#x5BF9;task_list&#x5B57;&#x6BB5;&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF1A; 1234567void __init_waitqueue_head(wait_queue_head_t *q, const char *name, struct lock_class_key *key)// q=(&amp;proc-&gt;todo){ spin_lock_init(&amp;q-&gt;lock); lockdep_set_class_and_name(&amp;q-&gt;lock, key, name); INIT_LIST_HEAD(&amp;q-&gt;task_list); // &#x4E3A;&#x4EC0;&#x4E48;&#x4F7F;&#x7528;&#x7B26;&#x53F7;-&gt;&#x6765;&#x63D0;&#x9886;task_list&#x5462;&#xFF1F;} &#x8BF4;&#x5230;&#x5E95;&#x8FD8;&#x662F;&#x521D;&#x59CB;&#x5316;proc-&gt;wait-&gt;task_list&#x5B57;&#x6BB5;&#x3002;&#x4E0D;&#x8FC7;&#x6709;&#x70B9;&#x5947;&#x602A;task_list&#x662F;wait&#x5185;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7ED3;&#x6784;&#x4F53;&#x6307;&#x9488;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5BF9;task_list&#x7684;&#x63D0;&#x9886;&#x4F7F;&#x7528;&#x7B26;&#x53F7;-&gt;&#x5462;&#xFF1F; 12345struct binder_proc { ...... wait_queue_head_t wait; ......}; kernel/goldfish/include/linux/wait.h:53 12345struct __wait_queue_head { spinlock_t lock; struct list_head task_list;};typedef struct __wait_queue_head wait_queue_head_t; hlist_add_head(&amp;proc-&gt;proc_node, &amp;binder_procs) hlist_add_head(&amp;proc-&gt;proc_node, &amp;binder_procs)&#x5C06;proc-&gt;proc_node&#x8282;&#x70B9;&#x4E32;&#x5230;&#x5168;&#x5C40;&#x94FE;&#x8868;binder_procs&#x7684;&#x5934;&#x90E8;&#xFF0C;&#x5176;&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/include/linux/list.h:610 123456789static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h){ struct hlist_node *first = h-&gt;first; n-&gt;next = first; if (first) first-&gt;pprev = &amp;n-&gt;next; h-&gt;first = n; n-&gt;pprev = &amp;h-&gt;first;} kernel/goldfish/include/linux/types.h:233 1234567struct hlist_head { struct hlist_node *first;};struct hlist_node { struct hlist_node *next, **pprev;}; &#x5C06;n&#x63D2;&#x5165;&#x5230;h &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;binder_open(...)&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;proc&#x4E3A;&#xFF1A; binder_mmap(...)&#x90FD;&#x5E72;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;binder_mmap(...)&#xFF0C;&#x5F53;&#x8FDB;&#x7A0B;&#x6253;&#x5F00;/dev/binder&#x4E4B;&#x540E;&#xFF0C;&#x5FC5;&#x987B;&#x8C03;&#x7528;mmap(...)&#x51FD;&#x6570;&#x628A;&#x8BE5;&#x6587;&#x4EF6;&#x6620;&#x5C04;&#x5230;&#x8FDB;&#x7A0B;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x3002; kernel/goldfish/drivers/staging/android/binder.c:2883 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263static int binder_mmap(struct file *filp, struct vm_area_struct *vma){ int ret; struct vm_struct *area; // area&#x63CF;&#x8FF0;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF1B;vma&#x63CF;&#x8FF0;&#x7528;&#x6237;&#x5730;&#x5740;&#x7A7A;&#x95F4; struct binder_proc *proc = filp-&gt;private_data; const char *failure_string; struct binder_buffer *buffer; ...... vma-&gt;vm_flags = (vma-&gt;vm_flags | VM_DONTCOPY) &amp; ~VM_MAYWRITE; ...... // &#x5728;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x5206;&#x914D; area = get_vm_area(vma-&gt;vm_end - vma-&gt;vm_start, VM_IOREMAP); ...... proc-&gt;buffer = area-&gt;addr; proc-&gt;user_buffer_offset = vma-&gt;vm_start - (uintptr_t)proc-&gt;buffer; mutex_unlock(&amp;binder_mmap_lock);...... // &#x521B;&#x5EFA;&#x7269;&#x7406;&#x9875;&#x9762;&#x7ED3;&#x6784;&#x4F53;&#x6307;&#x9488;&#x6570;&#x7EC4; proc-&gt;pages = kzalloc(sizeof(proc-&gt;pages[0]) * ((vma-&gt;vm_end - vma-&gt;vm_start) / PAGE_SIZE), GFP_KERNEL); ...... proc-&gt;buffer_size = vma-&gt;vm_end - vma-&gt;vm_start; vma-&gt;vm_ops = &amp;binder_vm_ops; vma-&gt;vm_private_data = proc; // &#x5206;&#x914D;&#x7269;&#x7406;&#x9875;&#x9762;&#xFF0C;&#x5E76;&#x5C06;&#x4E4B;&#x540C;&#x65F6;&#x6620;&#x5C04;&#x5230;&#x7528;&#x6237;&#x548C;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4; if (binder_update_page_range(proc, 1, proc-&gt;buffer, proc-&gt;buffer + PAGE_SIZE, vma)) { ret = -ENOMEM; failure_string = &quot;alloc small buf&quot;; goto err_alloc_small_buf_failed; } buffer = proc-&gt;buffer; INIT_LIST_HEAD(&amp;proc-&gt;buffers); list_add(&amp;buffer-&gt;entry, &amp;proc-&gt;buffers); // &#x628A;entry&#x4E32;&#x5230;buffers&#x94FE;&#x8868;&#x4E2D; buffer-&gt;free = 1; binder_insert_free_buffer(proc, buffer); proc-&gt;free_async_space = proc-&gt;buffer_size / 2; barrier(); proc-&gt;files = get_files_struct(proc-&gt;tsk); proc-&gt;vma = vma; proc-&gt;vma_vm_mm = vma-&gt;vm_mm; /*printk(KERN_INFO &quot;binder_mmap: %d %lx-%lx maps %p\n&quot;, proc-&gt;pid, vma-&gt;vm_start, vma-&gt;vm_end, proc-&gt;buffer);*/ return 0;err_alloc_small_buf_failed: kfree(proc-&gt;pages); proc-&gt;pages = NULL;err_alloc_pages_failed: mutex_lock(&amp;binder_mmap_lock); vfree(proc-&gt;buffer); proc-&gt;buffer = NULL;err_get_vm_area_failed:err_already_mapped: mutex_unlock(&amp;binder_mmap_lock);err_bad_arg: printk(KERN_ERR &quot;binder_mmap: %d %lx-%lx %s failed %d\n&quot;, proc-&gt;pid, vma-&gt;vm_start, vma-&gt;vm_end, failure_string, ret); return ret;} &#x5230;&#x7B2C;28&#x884C;&#x8C03;&#x7528;binder_update_page_range(...)&#x4E4B;&#x524D;&#xFF0C;binder_mmap(...)&#x5728;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7533;&#x8BF7;&#x4E86;struct vm_struct area&#xFF0C;&#x5E76;&#x5B8C;&#x6210;&#x90E8;&#x5206;&#x6210;&#x5458;&#x7684;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; binder_update_page_range(...)&#x505A;&#x4E86;&#x4EC0;&#x4E48; kernel/goldfish/drivers/staging/android/binder.c:627 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879static int binder_update_page_range(struct binder_proc *proc, int allocate, void *start, void *end, struct vm_area_struct *vma){ void *page_addr; unsigned long user_page_addr; struct vm_struct tmp_area; struct page **page; struct mm_struct *mm; ... ... if (vma) mm = NULL; else mm = get_task_mm(proc-&gt;tsk); if (mm) { down_write(&amp;mm-&gt;mmap_sem); vma = proc-&gt;vma; ... ... } if (allocate == 0) goto free_range; // &#x6267;&#x884C;&#x91CA;&#x653E;&#x903B;&#x8F91; ... ... // &#x904D;&#x5386;&#x6240;&#x6709;&#x9875;&#x9762; for (page_addr = start; page_addr &lt; end; page_addr += PAGE_SIZE) { int ret; struct page **page_array_ptr; page = &amp;proc-&gt;pages[(page_addr - proc-&gt;buffer) / PAGE_SIZE]; BUG_ON(*page); *page = alloc_page(GFP_KERNEL | __GFP_HIGHMEM | __GFP_ZERO); ... ... // &#x6620;&#x5C04;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4; tmp_area.addr = page_addr; tmp_area.size = PAGE_SIZE + PAGE_SIZE /* guard page? */; page_array_ptr = page; ret = map_vm_area(&amp;tmp_area, PAGE_KERNEL, &amp;page_array_ptr); ... ... // &#x6620;&#x5C04;&#x7528;&#x6237;&#x5730;&#x5740;&#x7A7A;&#x95F4; user_page_addr = (uintptr_t)page_addr + proc-&gt;user_buffer_offset; ret = vm_insert_page(vma, user_page_addr, page[0]); ... ... } if (mm) { up_write(&amp;mm-&gt;mmap_sem); mmput(mm); } return 0;free_range: for (page_addr = end - PAGE_SIZE; page_addr &gt;= start; page_addr -= PAGE_SIZE) { page = &amp;proc-&gt;pages[(page_addr - proc-&gt;buffer) / PAGE_SIZE]; // &#x89E3;&#x9664;&#x7269;&#x7406;&#x9875;&#x9762;&#x5728;&#x7528;&#x6237;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x548C;&#x5185;&#x6838;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x6620;&#x5C04; if (vma) zap_page_range(vma, (uintptr_t)page_addr + proc-&gt;user_buffer_offset, PAGE_SIZE, NULL);err_vm_insert_page_failed: unmap_kernel_range((unsigned long)page_addr, PAGE_SIZE);err_map_kernel_failed: __free_page(*page); // &#x91CA;&#x653E;&#x7269;&#x7406;&#x9875;&#x9762; *page = NULL;err_alloc_page_failed: ; }err_no_vma: if (mm) { up_write(&amp;mm-&gt;mmap_sem); mmput(mm); } return -ENOMEM;} struct binder_buffer &#x4E4B;&#x540E;&#x5728;binder_mmap(...)&#x7B2C;34&#x884C;&#xFF0C;buffer&#x7684;&#x7C7B;&#x578B;&#x662F;struct binder_buffer*&#xFF0C;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x8BE5;&#x7F13;&#x51B2;&#x533A;&#x7528;&#x4E8E;&#x5728;&#x8FDB;&#x7A0B;&#x95F4;&#x4F20;&#x8F93;&#x6570;&#x636E;&#x3002; kernel/goldfish/drivers/staging/android/binder.c:263 12345678910111213141516171819202122232425struct binder_buffer { // &#x6BCF;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;Binder&#x673A;&#x5236;&#x7684;&#x8FDB;&#x7A0B;&#x5728;Binder&#x9A71;&#x52A8;&#x4E2D;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x5217;&#x8868;&#xFF0C;&#x7528;&#x6765;&#x4FDD;&#x5B58;Binder&#x9A71;&#x52A8; // &#x7A0B;&#x5E8F;&#x4E3A;&#x5B83;&#x5206;&#x914D;&#x7684;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#xFF0C;entry&#x662F;&#x8BE5;&#x5217;&#x8868;&#x7684;&#x4E00;&#x4E2A;&#x8282;&#x70B9; struct list_head entry; /* free and allocated entries by address */ // &#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x7EA2;&#x9ED1;&#x6811;&#x5206;&#x522B;&#x4FDD;&#x5B58;&#x4F7F;&#x7528;&#x4E2D;&#x4EE5;&#x53CA;&#x7A7A;&#x95F2;&#x7684;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x5982;&#x679C;&#x7A7A;&#x95F2;&#xFF0C;free=1&#xFF0C; //rb_node&#x5C31;&#x662F;&#x7A7A;&#x95F2;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5426;&#x5219;&#x662F;&#x4F7F;&#x7528;&#x4E2D;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x7684;&#x8282;&#x70B9; struct rb_node rb_node; /* free entry by size or allocated entry */ /* by address */ unsigned free:1; // Service&#x5904;&#x7406;&#x5B8C;&#x6210;&#x8BE5;&#x4E8B;&#x52A1;&#x540E;&#xFF0C;&#x82E5;&#x53D1;&#x73B0;allow_user_free&#x4E3A;1&#xFF0C;&#x4F1A;&#x8BF7;&#x6C42;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x91CA;&#x653E;&#x8BE5;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A; unsigned allow_user_free:1; unsigned async_transaction:1; // &#x4E0E;&#x8BE5;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x5173;&#x8054;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x4E8B;&#x52A1; unsigned debug_id:29; struct binder_transaction *transaction; // &#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x6B63;&#x4EA4;&#x7ED9;&#x54EA;&#x4E2A;&#x4E8B;&#x52A1;&#x4F7F;&#x7528; struct binder_node *target_node; // &#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x6B63;&#x4EA4;&#x7ED9;&#x54EA;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4F7F;&#x7528; size_t data_size; size_t offsets_size; // &#x4FDD;&#x5B58;&#x901A;&#x4FE1;&#x6570;&#x636E;&#xFF0C;&#x5206;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF1A;&#x666E;&#x901A;&#x6570;&#x636E;&#x3001;Binder&#x5BF9;&#x8C61;&#x3002;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4E0D;&#x5173;&#x5FC3;&#x666E;&#x901A;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x5FC5;&#x987B;&#x77E5;&#x9053;&#x91CC;&#x9762; // &#x7684;Binder&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x4E3A;&#x8981;&#x6839;&#x636E;&#x5B83;&#x4EEC;&#x6765;&#x7EF4;&#x62A4;&#x5185;&#x6838;&#x4E2D;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x548C;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002; uint8_t data[0]; }; list_add(&amp;buffer-&gt;entry, &amp;proc-&gt;buffers) &#x521D;&#x59CB;&#x5316;&#x5B8C;proc-&gt;buffers&#x4E4B;&#x540E;&#xFF0C;&#x7B2C;36&#x884C;&#x6267;&#x884C;&#x4E00;&#x4E2A;list_add(...)&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x89C1;kernel/goldfish/include/linux/list.h:37~60 1234567891011121314static inline void __list_add(struct list_head *new, struct list_head *prev, struct list_head *next){ next-&gt;prev = new; new-&gt;next = next; new-&gt;prev = prev; prev-&gt;next = new;}... ...static inline void list_add(struct list_head *new, struct list_head *head){ __list_add(new, head, head-&gt;next);} &#x8FD0;&#x7B97;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x4E8E;&#x662F;&#x5230;binder_mmap(...)&#x7B2C;37&#x884C;&#x4E3A;&#x6B62;&#xFF0C;binder_mmap(...)&#x6784;&#x9020;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; &#x51FD;&#x6570;binder_insert_free_buffer(...) kernel/goldfish/drivers/statging/android/binder.c:545 1234567891011121314151617181920212223242526272829static void binder_insert_free_buffer(struct binder_proc *proc, struct binder_buffer *new_buffer){ // new_buffer&#x5C31;&#x662F;&#x4E4B;&#x524D;&#x5206;&#x914D;&#x7684;buffer&#xFF0C;&#x88AB;&#x8F6C;&#x578B;&#x6210;&#x4E86;binder_buffer struct rb_node **p = &amp;proc-&gt;free_buffers.rb_node; struct rb_node *parent = NULL; struct binder_buffer *buffer; size_t buffer_size; size_t new_buffer_size; ... ... // &#x8BA1;&#x7B97;binder_buffer&#x4E2D;data&#x90E8;&#x5206;&#x7684;&#x5927;&#x5C0F; new_buffer_size = binder_buffer_size(proc, new_buffer); ... ... // &#x6839;&#x636E;new_buffer&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x627E;&#x5230;&#x5728;proc-&gt;free_buffers&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x63D2;&#x5165; while (*p) { parent = *p; buffer = rb_entry(parent, struct binder_buffer, rb_node); BUG_ON(!buffer-&gt;free); buffer_size = binder_buffer_size(proc, buffer); if (new_buffer_size &lt; buffer_size) p = &amp;parent-&gt;rb_left; else p = &amp;parent-&gt;rb_right; } rb_link_node(&amp;new_buffer-&gt;rb_node, parent, p); rb_insert_color(&amp;new_buffer-&gt;rb_node, &amp;proc-&gt;free_buffers);} &#x4E8E;&#x662F;&#x5230;binder_mmap(...)&#x7ED3;&#x675F;&#xFF0C;&#x8FD9;&#x4E2A;binder_proc&#x7ED3;&#x6784;&#x4F53;&#x5C31;&#x88AB;&#x505A;&#x6210;&#x4E86;&#x8FD9;&#x6837;&#xFF1A; &#x4ECE;&#x670D;&#x52A1;&#x7AEF;addService&#x89E6;&#x53D1;&#x7684;binder_transaction(...) &#x4ECE;native&#x5C42;&#x7684;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x53C2;&#x89C1;binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x5341;&#xFF09;&#x2014;&#x2014; &#x7A7F;&#x8D8A;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x3002;&#x6211;&#x4EEC;&#x4EE5;addService&#x4E3A;&#x4F8B;&#x6DF1;&#x5165;&#x5230;binder_transaction(...)&#x5185;&#x90E8;&#xFF0C; &#x4F20;&#x5165;&#x7684;binder_transaction_data&#x8F93;&#x5165;&#x53C2;&#x6570;&#x4E3A;&#xFF1A; kernel/goldfish/drivers/staging/android/binder.c:1402 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250static void binder_transaction(struct binder_proc *proc, struct binder_thread *thread, struct binder_transaction_data *tr, int reply){ // reply=(cmd==BC_REPLY)&#x5373;false&#xFF0C;flags=TF_ACCEPT_FDS // proc&#x548C;thread&#x8868;&#x793A;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784; struct binder_transaction *t; struct binder_work *tcomplete; size_t *offp, *off_end; struct binder_proc *target_proc; struct binder_thread *target_thread = NULL; struct binder_node *target_node = NULL; struct list_head *target_list; wait_queue_head_t *target_wait; struct binder_transaction *in_reply_to = NULL; struct binder_transaction_log_entry *e; uint32_t return_error; ...... if (reply) { ...... } else { if (tr-&gt;target.handle) { // tr-&gt;target.handle!=0 ...... } else { // target_node&#x8868;&#x793A;binder&#x8BF7;&#x6C42;&#x8981;&#x53D1;&#x9001;&#x5230;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x6B64;&#x5904;&#x5373; // service manager&#x5BF9;&#x5E94;&#x7684;&#x8282;&#x70B9; target_node = binder_context_mgr_node; ...... } ...... target_proc = target_node-&gt;proc; // &#x5F97;&#x5230;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x7684;binder_proc ...... // &#x5F97;&#x5230;&#x76EE;&#x6807;&#x7EBF;&#x7A0B;tr-&gt;flags=TF_ACCEPT_FDS // thread&#x672A;&#x88AB;&#x64CD;&#x4F5C;&#x8FC7;&#xFF0C;&#x6545;transaction_stack&#x4E3A;0 if (!(tr-&gt;flags &amp; TF_ONE_WAY) &amp;&amp; thread-&gt;transaction_stack) { struct binder_transaction *tmp; tmp = thread-&gt;transaction_stack; ... ... while (tmp) { if (tmp-&gt;from &amp;&amp; tmp-&gt;from-&gt;proc == target_proc) target_thread = tmp-&gt;from; tmp = tmp-&gt;from_parent; } } } if (target_thread) { e-&gt;to_thread = target_thread-&gt;pid; target_list = &amp;target_thread-&gt;todo; target_wait = &amp;target_thread-&gt;wait; } else { // &#x8D70;&#x8FD9;&#x91CC; target_list = &amp;target_proc-&gt;todo; target_wait = &amp;target_proc-&gt;wait; } ...... t = kzalloc(sizeof(*t), GFP_KERNEL); // &#x521B;&#x5EFA;binder_transaction&#x8282;&#x70B9; ...... tcomplete = kzalloc(sizeof(*tcomplete), GFP_KERNEL);//&#x521B;&#x5EFA;&#x4E00;&#x4E2A;binder_work&#x8282;&#x70B9; ...... // &#x8FD9;&#x91CC;&#x5C82;&#x4E0D;&#x662F;&#x4E3A;&#x771F;&#xFF1F;thread&#x6765;&#x81EA;binder_ioctl(...)&#x4E2D;&#x7684;binder_get_thread(proc) // &#x8FD4;&#x56DE;proc&#x7684;&#x5F53;&#x524D;&#x7EBF;&#x7A0B; if (!reply &amp;&amp; !(tr-&gt;flags &amp; TF_ONE_WAY)) t-&gt;from = thread; else t-&gt;from = NULL; t-&gt;sender_euid = proc-&gt;tsk-&gt;cred-&gt;euid; // &#x6E90;&#x7EBF;&#x7A0B;&#x7528;&#x6237;id t-&gt;to_proc = target_proc; // &#x8D1F;&#x8D23;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x52A1;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;sm t-&gt;to_thread = target_thread; // &#x8D1F;&#x8D23;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x52A1;&#x7684;&#x7EBF;&#x7A0B; t-&gt;code = tr-&gt;code; // ADD_SERVICE_TRANSACTION t-&gt;flags = tr-&gt;flags; // TF_ACCEPT_FDS t-&gt;priority = task_nice(current); // &#x6E90;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7; ... ... t-&gt;buffer = binder_alloc_buf(target_proc, tr-&gt;data_size, tr-&gt;offsets_size, !reply &amp;&amp; (t-&gt;flags &amp; TF_ONE_WAY)); ...... t-&gt;buffer-&gt;allow_user_free = 0;// Service&#x5904;&#x7406;&#x5B8C;&#x8BE5;&#x4E8B;&#x52A1;&#x540E;&#xFF0C;&#x9A71;&#x52A8;&#x4E0D;&#x4F1A;&#x91CA;&#x653E;&#x8BE5;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A; t-&gt;buffer-&gt;debug_id = t-&gt;debug_id; t-&gt;buffer-&gt;transaction = t; // &#x7F13;&#x51B2;&#x533A;&#x6B63;&#x4EA4;&#x7ED9;&#x54EA;&#x4E2A;&#x4E8B;&#x52A1;&#x4F7F;&#x7528; t-&gt;buffer-&gt;target_node = target_node; // &#x7F13;&#x51B2;&#x533A;&#x6B63;&#x4EA4;&#x7ED9;&#x54EA;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4F7F;&#x7528; ...... if (target_node) binder_inc_node(target_node, 1, 0, NULL); // &#x5206;&#x6790;&#x6240;&#x4F20;&#x6570;&#x636E;&#x4E2D;&#x7684;&#x6240;&#x6709;binder&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C;&#x662F;binder&#x5B9E;&#x4F53;&#xFF0C;&#x5728;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x6DFB;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x8282;&#x70B9;&#x3002; // &#x9996;&#x5148;&#xFF0C;&#x4ECE;&#x7528;&#x6237;&#x6001;&#x83B7;&#x53D6;&#x6240;&#x4F20;&#x8F93;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4EE5;&#x53CA;&#x6570;&#x636E;&#x91CC;&#x7684;binder&#x5BF9;&#x8C61;&#x504F;&#x79FB;&#x4FE1;&#x606F;&#x3002; offp = (size_t *)(t-&gt;buffer-&gt;data + ALIGN(tr-&gt;data_size, sizeof(void *))); // &#x5C06;&#x670D;&#x52A1;&#x7AEF;&#x4F20;&#x6765;&#x7684;Parcel&#x7684;&#x6570;&#x636E;&#x90E8;&#x5206;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4; if (copy_from_user(t-&gt;buffer-&gt;data, tr-&gt;data.ptr.buffer, tr-&gt;data_size)) { ...... } // &#x5C06;&#x670D;&#x52A1;&#x7AEF;&#x4F20;&#x6765;&#x7684;Parcel&#x7684;&#x504F;&#x79FB;&#x6570;&#x7EC4;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4; if (copy_from_user(offp, tr-&gt;data.ptr.offsets, tr-&gt;offsets_size)) { ...... } ...... off_end = (void *)offp + tr-&gt;offsets_size; // &#x904D;&#x5386;&#x6BCF;&#x4E2A;flat_binder_object&#x4FE1;&#x606F;&#xFF0C;&#x521B;&#x5EFA;&#x5FC5;&#x8981;&#x7684;&#x7EA2;&#x9ED1;&#x6811;&#x8282;&#x70B9; for (; offp &lt; off_end; offp++) { struct flat_binder_object *fp; ...... fp = (struct flat_binder_object *)(t-&gt;buffer-&gt;data + *offp); switch (fp-&gt;type) { case BINDER_TYPE_BINDER: case BINDER_TYPE_WEAK_BINDER: { // &#x5982;&#x679C;&#x662F;binder&#x5B9E;&#x4F53; struct binder_ref *ref; // fp-&gt;binder&#x662F;BnTestService::getWeakRefs()&#xFF0C;BnTestService&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61; // binder_get_node(...)&#x5728;proc-&gt;nodes.rb_node&#x4E2D;&#x627E;fp-&gt;binder&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709; // &#x627E;&#x5230;&#xFF0C;&#x5219;&#x5728;&#x8BE5;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x4E3A;fp-&gt;binder&#x521B;&#x5EFA;&#x8282;&#x70B9; struct binder_node *node = binder_get_node(proc, fp-&gt;binder); if (node == NULL) { node = binder_new_node(proc, fp-&gt;binder, fp-&gt;cookie); ...... node-&gt;min_priority = fp-&gt;flags &amp; FLAT_BINDER_FLAG_PRIORITY_MASK; node-&gt;accept_fds = !!(fp-&gt;flags &amp; FLAT_BINDER_FLAG_ACCEPTS_FDS); } ...... // &#x5FC5;&#x8981;&#x65F6;&#xFF0C;&#x4F1A;&#x5728;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x7684;binder_proc&#x4E2D;&#x521B;&#x5EFA;&#x5BF9;&#x5E94;&#x7684;binder_ref&#x7EA2;&#x9ED1;&#x6811;&#x8282;&#x70B9; ref = binder_get_ref_for_node(target_proc, node); ...... if (fp-&gt;type == BINDER_TYPE_BINDER) fp-&gt;type = BINDER_TYPE_HANDLE; else fp-&gt;type = BINDER_TYPE_WEAK_HANDLE; // &#x4FEE;&#x6539;&#x6240;&#x4F20;&#x6570;&#x636E;&#x4E2D;&#x7684;flat_binder_object&#x4FE1;&#x606F;&#xFF0C;&#x56E0;&#x4E3A;&#x8FDC;&#x7AEF;&#x7684;binder&#x5B9E;&#x4F53;&#x5230; // &#x4E86;&#x76EE;&#x6807;&#x7AEF;&#x5C31;&#x53D8;&#x4E3A;binder&#x4EE3;&#x7406;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x8BB0;&#x5F55;&#x4E0B;binder&#x53E5;&#x67C4;&#x4E86;&#x3002; fp-&gt;handle = ref-&gt;desc; binder_inc_ref(ref, fp-&gt;type == BINDER_TYPE_HANDLE, &amp;thread-&gt;todo); ...... } break; case BINDER_TYPE_HANDLE: case BINDER_TYPE_WEAK_HANDLE: { // &#x5BF9;flat_binder_object&#x505A;&#x5FC5;&#x8981;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x6BD4;&#x5982;&#x5C06;BINDER_TYPE_HANDLE&#x6539;&#x4E3A; // BINDER_TYPE_BINDER struct binder_ref *ref = binder_get_ref(proc, fp-&gt;handle); ...... if (ref-&gt;node-&gt;proc == target_proc) { if (fp-&gt;type == BINDER_TYPE_HANDLE) fp-&gt;type = BINDER_TYPE_BINDER; else fp-&gt;type = BINDER_TYPE_WEAK_BINDER; fp-&gt;binder = ref-&gt;node-&gt;ptr; fp-&gt;cookie = ref-&gt;node-&gt;cookie; binder_inc_node(ref-&gt;node, fp-&gt;type == BINDER_TYPE_BINDER, 0, NULL); trace_binder_transaction_ref_to_node(t, ref); ... ... } else { struct binder_ref *new_ref; new_ref = binder_get_ref_for_node(target_proc, ref-&gt;node); if (new_ref == NULL) { return_error = BR_FAILED_REPLY; goto err_binder_get_ref_for_node_failed; } fp-&gt;handle = new_ref-&gt;desc; binder_inc_ref(new_ref, fp-&gt;type == BINDER_TYPE_HANDLE, NULL); trace_binder_transaction_ref_to_ref(t, ref, new_ref); ... ... } } break; case BINDER_TYPE_FD: { int target_fd; struct file *file; ... ... file = fget(fp-&gt;handle); ... ... target_fd = task_get_unused_fd_flags(target_proc, O_CLOEXEC); ... ... task_fd_install(target_proc, target_fd, file); trace_binder_transaction_fd(t, fp-&gt;handle, target_fd); binder_debug(BINDER_DEBUG_TRANSACTION, &quot; fd %ld -&gt; %d\n&quot;, fp-&gt;handle, target_fd); /* TODO: fput? */ fp-&gt;handle = target_fd; } break; default: ... ... return_error = BR_FAILED_REPLY; goto err_bad_object_type; } } if (reply) { ...... } else if (!(t-&gt;flags &amp; TF_ONE_WAY)) { ... ... t-&gt;need_reply = 1; t-&gt;from_parent = thread-&gt;transaction_stack; thread-&gt;transaction_stack = t; } else { ...... if (target_node-&gt;has_async_transaction) { target_list = &amp;target_node-&gt;async_todo; target_wait = NULL; } else target_node-&gt;has_async_transaction = 1; } t-&gt;work.type = BINDER_WORK_TRANSACTION; // &#x628A;binder_transaction&#x8282;&#x70B9;&#x63D2;&#x5165;target_list&#xFF08;&#x5373;&#x76EE;&#x6807;todo&#x961F;&#x5217;&#xFF09; list_add_tail(&amp;t-&gt;work.entry, target_list); tcomplete-&gt;type = BINDER_WORK_TRANSACTION_COMPLETE; list_add_tail(&amp;tcomplete-&gt;entry, &amp;thread-&gt;todo); if (target_wait) // &#x4F20;&#x8F93;&#x52A8;&#x4F5C;&#x5B8C;&#x6BD5;&#xFF0C;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x5524;&#x9192;&#x7CFB;&#x7EDF;&#x4E2D;&#x5176;&#x5B83;&#x76F8;&#x5173;&#x7EBF;&#x7A0B;&#xFF0C;wake up! wake_up_interruptible(target_wait); return;err_get_unused_fd_failed:err_fget_failed:err_fd_not_allowed:err_binder_get_ref_for_node_failed:err_binder_get_ref_failed:err_binder_new_node_failed:err_bad_object_type:err_bad_offset:err_copy_data_failed: trace_binder_transaction_failed_buffer_release(t-&gt;buffer); binder_transaction_buffer_release(target_proc, t-&gt;buffer, offp); t-&gt;buffer-&gt;transaction = NULL; binder_free_buf(target_proc, t-&gt;buffer);err_binder_alloc_buf_failed: kfree(tcomplete); binder_stats_deleted(BINDER_STAT_TRANSACTION_COMPLETE);err_alloc_tcomplete_failed: kfree(t); binder_stats_deleted(BINDER_STAT_TRANSACTION);err_alloc_t_failed:err_bad_call_stack:err_empty_call_stack:err_dead_binder:err_invalid_target_handle:err_no_context_mgr_node: binder_debug(BINDER_DEBUG_FAILED_TRANSACTION, &quot;binder: %d:%d transaction failed %d, size %zd-%zd\n&quot;, proc-&gt;pid, thread-&gt;pid, return_error, tr-&gt;data_size, tr-&gt;offsets_size); { struct binder_transaction_log_entry *fe; fe = binder_transaction_log_add(&amp;binder_transaction_log_failed); *fe = *e; } BUG_ON(thread-&gt;return_error != BR_OK); if (in_reply_to) { thread-&gt;return_error = BR_TRANSACTION_COMPLETE; binder_send_failed_reply(in_reply_to, return_error); } else thread-&gt;return_error = return_error;} struct binder_transaction &#x5728;&#x51FD;&#x6570;binder_transaction(...)&#x7B2C;53&#x884C;&#x521B;&#x5EFA;&#x4E86;&#x7ED3;&#x6784;&#x4F53;binder_transaction&#xFF0C;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8FC7;&#x7A0B;&#xFF0C;&#x5373;&#x4E8B;&#x52A1;&#x3002;&#x5176;&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/drivers/staging/android/binder.c:346 123456789101112131415161718192021222324252627282930struct binder_transaction { int debug_id; // &#x5F53;&#x9A71;&#x52A8;&#x4E3A;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x8BE5;&#x6210;&#x5458;&#x7684;type&#x7F6E;&#x4E3A; // BINDER_WORK_TRANSACTION&#xFF0C;&#x5E76;&#x5C06;&#x5B83;&#x6DFB;&#x52A0;&#x5230;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x7684;todo&#x961F;&#x5217;&#xFF0C;&#x7B49;&#x5F85;&#x5904;&#x7406; struct binder_work work; struct binder_thread *from; // &#x53D1;&#x8D77;&#x4E8B;&#x52A1;&#x7684;&#x7EBF;&#x7A0B; // &#x4E8B;&#x52A1;&#x6240;&#x4F9D;&#x8D56;&#x7684;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x4EE5;&#x53CA;&#x76EE;&#x6807;&#x7EBF;&#x7A0B;&#x4E0B;&#x4E00;&#x4E2A;&#x8981;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x52A1; struct binder_transaction *from_parent; struct binder_proc *to_proc; // &#x8D1F;&#x8D23;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x52A1;&#x7684;&#x8FDB;&#x7A0B; struct binder_thread *to_thread; // &#x8D1F;&#x8D23;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x52A1;&#x7684;&#x7EBF;&#x7A0B; struct binder_transaction *to_parent; unsigned need_reply:1; // &#x540C;&#x6B65;&#x4E8B;&#x52A1;&#x4E3A;1&#x9700;&#x8981;&#x7B49;&#x5F85;&#x5BF9;&#x65B9;&#x56DE;&#x590D;&#xFF1B;&#x5F02;&#x6B65;&#x4E3A;0 /* unsigned is_dead:1; */ /* not used at the moment */ // &#x6307;&#x5411;&#x9A71;&#x52A8;&#x4E3A;&#x8BE5;&#x4E8B;&#x52A1;&#x5206;&#x914D;&#x7684;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x4FDD;&#x5B58;&#x4E86;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6570;&#x636E; struct binder_buffer *buffer; unsigned int code; // &#x76F4;&#x63A5;&#x4ECE;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6570;&#x636E;&#x4E2D;&#x62F7;&#x8D1D;&#x8FC7;&#x6765; unsigned int flags; // &#x76F4;&#x63A5;&#x4ECE;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6570;&#x636E;&#x4E2D;&#x62F7;&#x8D1D;&#x8FC7;&#x6765; long priority; // &#x6E90;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7; // &#x7EBF;&#x7A0B;&#x5728;&#x5904;&#x7406;&#x4E8B;&#x52A1;&#x65F6;&#xFF0C;&#x9A71;&#x52A8;&#x4F1A;&#x4FEE;&#x6539;&#x5B83;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x4EE5;&#x6EE1;&#x8DB3;&#x6E90;&#x7EBF;&#x7A0B;&#x548C;&#x76EE;&#x6807;Service&#x7EC4;&#x5EFA;&#x7684;&#x8981;&#x6C42;&#x3002;&#x5728;&#x4FEE;&#x6539;&#x4E4B; // &#x524D;&#xFF0C;&#x4F1A;&#x5C06;&#x5B83;&#x539F;&#x6765;&#x7684;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#x4FDD;&#x5B58;&#x5728;&#x8BE5;&#x6210;&#x5458;&#x4E2D;&#xFF0C;&#x4EE5;&#x4FBF;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#x5B8C;&#x8BE5;&#x4E8B;&#x52A1;&#x540E;&#x53EF;&#x4EE5;&#x6062;&#x590D;&#x539F;&#x6765;&#x7684;&#x4F18;&#x5148;&#x7EA7; long saved_priority; uid_t sender_euid; // &#x6E90;&#x7EBF;&#x7A0B;&#x7528;&#x6237;ID}; struct binder_work &#x5728;binder_transaction(...)&#x7B2C;55&#x884C;&#x521B;&#x5EFA;&#x4E86;struct binder_work&#xFF0C;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x7528;&#x4E8E;&#x63CF;&#x8FF0;&#x5F85;&#x5904;&#x7406;&#x7684;&#x5DE5;&#x4F5C;&#x9879;&#xFF0C;&#x5176;&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/drivers/staging/android/binder.c:205 12345678910111213struct binder_work { struct list_head entry; // &#x7528;&#x6765;&#x5C06;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x5D4C;&#x5165;&#x5230;&#x4E00;&#x4E2A;&#x5BBF;&#x4E3B;&#x7ED3;&#x6784;&#x4E2D; // &#x63CF;&#x8FF0;&#x5DE5;&#x4F5C;&#x9879;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x6839;&#x636E;&#x53D6;&#x503C;&#xFF0C;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x5C31;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x51FA;&#x4E00;&#x4E2A;binder_work&#x7ED3;&#x6784;&#x4F53;&#x5D4C;&#x5165;&#x5230; // &#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#x7684;&#x5BBF;&#x4E3B;&#x7ED3;&#x6784;&#x4E2D; enum { BINDER_WORK_TRANSACTION = 1, BINDER_WORK_TRANSACTION_COMPLETE, BINDER_WORK_NODE, BINDER_WORK_DEAD_BINDER, BINDER_WORK_DEAD_BINDER_AND_CLEAR, BINDER_WORK_CLEAR_DEATH_NOTIFICATION, } type; }; &#x5230;binder_transaction(...)&#x7B2C;92&#x884C;&#x4E3A;&#x6B62;&#xFF0C;&#x5B83;&#x6784;&#x9020;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#x3002;&#x6B64;&#x65F6;&#x7528;&#x6237;&#x63A7;&#x4EF6;&#x7684;&#x90E8;&#x5206;&#x6570;&#x636E;&#x88AB;&#x62F7;&#x8D1D;&#x5230;&#x4E86;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#xFF0C;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x4E2D;binder_transaction&#x7684;buffer&#x662F;&#x4ECE;proc-&gt;free_buffers&#x4E2D;&#x6458;&#x53D6;&#x4E0B;&#x6765;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x56FE;&#x7247;&#x8FC7;&#x5927;&#xFF0C;&#x6B64;&#x5904;&#x7684;&#x7EC6;&#x8282;&#x6682;&#x4E0D;&#x5C55;&#x73B0;&#x4E86;&#x3002;&#x6458;&#x53D6;&#x4E0B;&#x7684;buffer&#x7684;&#x6570;&#x636E;&#x90E8;&#x5206;&#x7528;&#x4E8E;&#x6682;&#x5B58;&#x4ECE;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x62F7;&#x8D1D;&#x6765;&#x7684;&#x6570;&#x636E;&#x3002; struct binder_node &#x4ECE;94&#x884C;&#x5F00;&#x59CB;&#xFF0C;&#x9010;&#x4E2A;&#x904D;&#x5386;t-&gt;buffer.data&#x4E2D;&#x7684;binder objects&#xFF0C;&#x5728;for&#x5FAA;&#x73AF;&#x4E2D;&#xFF0C;fp&#x6307;&#x5411;&#x5F53;&#x524D;&#x7684;binder object&#x3002;&#x5982;&#x679C;fp-&gt;type&#x662F;BINDER_TYPE_BINDER&#x6216;BINDER_TYPE_WEAK_BINDER&#xFF0C;#104&#x5148;&#x4ECE;proc-&gt;nodes.rb_node&#x4E2D;&#x67E5;&#x627E;&#x6709;&#x6CA1;&#x6709;fp-&gt;binder&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5219;&#x8C03;&#x7528;binder_new_node(...)&#x5728;proc-&gt;nodes.rb_node&#x4E2D;&#x521B;&#x5EFA;&#x6B64;&#x8282;&#x70B9;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5148;&#x770B;&#x770B;struct binder_node&#xFF0C;kernel/goldfish/drivers/staging/android/binder.c:217&#xFF0C;&#x5B83;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;Service&#x7EC4;&#x4EF6;&#x5728;&#x9A71;&#x52A8;&#x5C42;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;binder_node&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5728;&#x5185;&#x6838;&#x4E2D;&#x7684;&#x72B6;&#x6001;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465struct binder_node { int debug_id; // &#x5E2E;&#x52A9;&#x8C03;&#x8BD5;&#x7528;&#x7684; // &#x5F53;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7531;0&#x53D8;&#x4E3A;1&#x6216;&#x7531;1&#x53D8;&#x4E3A;0&#x65F6;&#xFF0C;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x5C31;&#x4F1A;&#x8BF7;&#x6C42;&#x76F8;&#x5E94;&#x7684; // Service&#x7EC4;&#x4EF6;&#x589E;&#x52A0;&#x6216;&#x51CF;&#x5C11;&#x5176;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x3002;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x5C31;&#x4F1A;&#x5C06;&#x201C;&#x8BE5;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4FEE;&#x6539;&#x201D;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x7C7B; // &#x578B;&#x4E3A;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;binder_node&#x7684;&#x5DE5;&#x4F5C;&#x9879;&#xFF0C;&#x5373;&#x5C06;&#x6210;&#x5458;work&#x7684;&#x503C;&#x7F6E;&#x4E3A;BINDER_WORK_NODE&#xFF0C;&#x5E76;&#x5C06; // &#x5B83;&#x6DFB;&#x52A0;&#x5230;&#x76F8;&#x5E94;&#x8FDB;&#x7A0B;&#x7684;todo&#x961F;&#x5217;&#x4E2D;&#x7B49;&#x5F85;&#x5904;&#x7406; struct binder_work work; union { struct rb_node rb_node; struct hlist_node dead_node; }; // &#x6307;&#x5411;&#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#xFF0C;&#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x7EA2;&#x9ED1;&#x6811;&#x6765;&#x7EF4;&#x62A4;&#x5B83;&#x5185;&#x90E8;&#x6240;&#x6709;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x6BCF;&#x4E00;&#x4E2A; // Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;rb_node&#x5C31;&#x6B63;&#x597D;&#x662F;&#x8FD9;&#x4E2A;&#x7EA2;&#x9ED1;&#x6811;&#x7684;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;&#x5982;&#x679C;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; // &#x7684;&#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#x5DF2;&#x7ECF;&#x6B7B;&#x4EA1;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5C31;&#x4F1A;&#x901A;&#x8FC7;&#x5B83;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;dead_node&#x4FDD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5168; // &#x5C40;&#x7684;hash&#x5217;&#x8868;&#x4E2D;&#x3002; struct binder_proc *proc; // &#x4E00;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x53EF;&#x80FD;&#x4F1A;&#x540C;&#x65F6;&#x88AB;&#x591A;&#x4E2A;Client&#x7EC4;&#x4EF6;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x6B64;Binder&#x9A71;&#x52A8;&#x4F7F;&#x7528;&#x7ED3;&#x6784;&#x4F53; // binder_ref&#x6765;&#x63CF;&#x8FF0;&#x8FD9;&#x4E9B;&#x5F15;&#x7528;&#x5173;&#x7CFB;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x5F15;&#x7528;&#x4E86;&#x540C;&#x4E00;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;&#x5F15;&#x7528;&#x90FD;&#x4FDD;&#x5B58;&#x5728; // &#x4E00;&#x4E2A;hash&#x5217;&#x8868;&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;hash&#x5217;&#x8868;&#x901A;&#x8FC7;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;refs&#x6210;&#x5458;&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x800C;Binder&#x9A71;&#x52A8;&#x901A; // &#x8FC7;refs&#x5C31;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x6709;&#x54EA;&#x4E9B;Client&#x7EC4;&#x4EF6;&#x5F15;&#x7528;&#x4E86;&#x540C;&#x4E00;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; struct hlist_head refs; int internal_strong_refs; // &#x63CF;&#x8FF0;Bidner&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570; int local_weak_refs; // &#x63CF;&#x8FF0;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570; int local_strong_refs; // &#x63CF;&#x8FF0;Bidner&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570; void __user *ptr; // &#x63CF;&#x8FF0;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;Service&#x7EC4;&#x4EF6;&#xFF0C;&#x6307;&#x5411;Service&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61; void __user *cookie; // &#x63CF;&#x8FF0;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x4E2D;&#x7684;Service&#x7EC4;&#x4EF6;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x6307;&#x5411;Service&#x7684;&#x5730;&#x5740; // &#x5F53;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x8BF7;&#x6C42;Service&#x6267;&#x884C;&#x67D0;&#x4E2A;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x4F1A;&#x589E;&#x52A0;&#x8BE5;Service&#x7684;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C; // has_strong_ref&#x548C;has_weak_ref&#x88AB;&#x7F6E;1&#xFF1B; // &#x5F53;Service&#x5B8C;&#x6210;Binder&#x6240;&#x8BF7;&#x6C42;&#x7684;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x4F1A;&#x9012;&#x51CF;&#x8BE5;Service&#x7684;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;has_strong_ref&#x548C;has_weak_ref&#x88AB;&#x7F6E;0&#xFF1B; // Binder&#x5B9E;&#x4F53;&#x5728;&#x8BF7;&#x6C42;Service&#x589E;/&#x51CF;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x5C06; // pending_strong_ref&#x6216;pending_weak_ref&#x7F6E;1&#xFF1B; // &#x5F53;Service&#x5B8C;&#x6210;&#x589E;/&#x51CF;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x5C06;&#x8FD9;&#x4E24;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x7F6E;&#x4E3A;0&#x3002; unsigned has_strong_ref:1; unsigned pending_strong_ref:1; unsigned has_weak_ref:1; unsigned pending_weak_ref:1; // &#x63CF;&#x8FF0;Binder&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x6B63;&#x5728;&#x5904;&#x7406;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x3002;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x5C06;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x4FDD;&#x5B58;&#x5728;todo&#x961F;&#x5217;&#x4E2D; // &#x8868;&#x793A;&#x5C06;&#x7531;&#x8BE5;&#x7EBF;&#x7A0B;&#x6765;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x52A1;&#x3002;&#x6BCF;&#x4E2A;&#x4E8B;&#x52A1;&#x90FD;&#x5173;&#x8054;&#x7740;&#x4E00;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x8981;&#x6C42;&#x4E0E;&#x8BE5;Binder&#x5B9E; // &#x4F53;&#x5BF9;&#x8C61;&#x5BF9;&#x5E94;&#x7684;Service&#x7EC4;&#x4EF6;&#x5728;&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#x4E2D;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x52A1;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x5F53;Binder&#x9A71;&#x52A8;&#x53D1;&#x73B0;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x662F;&#x5F02; // &#x6B65;&#x4E8B;&#x52A1;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x5B83;&#x4FDD;&#x5B58;&#x5728;&#x76EE;&#x6807;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x961F;&#x5217;&#x5C31; // &#x662F;&#x7531;&#x6210;&#x5458;&#x53D8;&#x91CF;async_todo&#x6765;&#x63CF;&#x8FF0;&#x7684;&#x3002;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x7684;&#x5B9A;&#x4E49;&#x662F;&#x90A3;&#x4E9B;&#x5355;&#x5411;&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;&#x5373;&#x4E0D;&#x9700; // &#x8981;&#x7B49;&#x5F85;&#x5E94;&#x7B54;&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x8BF7;&#x6C42;&#xFF0C;&#x4E0E;&#x6B64;&#x76F8;&#x5BF9;&#x7684;&#x662F;&#x540C;&#x6B65;&#x4E8B;&#x52A1;&#x3002;&#x56E0;&#x4E3A;&#x4E0D;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x5E94;&#x7B54;&#xFF0C;Binder&#x9A71;&#x52A8;&#x5C31; // &#x8BA4;&#x4E3A;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x4F18;&#x5148;&#x7EA7;&#x4F4E;&#x4E8E;&#x540C;&#x6B65;&#x4E8B;&#x52A1;&#xFF0C;&#x5177;&#x4F53;&#x8868;&#x73B0;&#x4E3A;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x523B;&#xFF0C;&#x4E00;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;&#x5F02;&#x6B65; // &#x4E8B;&#x52A1;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4F1A;&#x5F97;&#x5230;&#x5904;&#x7406;&#xFF0C;&#x5176;&#x4F59;&#x7684;&#x90FD;&#x7B49;&#x5F85;&#x5728;&#x5F02;&#x6B65;&#x4E8B;&#x52A1;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x800C;&#x540C;&#x6B65;&#x4E8B;&#x52A1;&#x65E0;&#x6B64;&#x9650;&#x5236;&#x3002; unsigned has_async_transaction:1; // &#x63CF;&#x8FF0;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x5305;&#x542B;&#x6709;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6570;&#x636E;&#x3002;1&#x8868;&#x793A;&#x53EF;&#x4EE5;&#x63A5;&#x6536;&#xFF0C;0&#x8868; // &#x793A;&#x7981;&#x6B62;&#x63A5;&#x6536;&#x3002;&#x5F53;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5411;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E;&#x4E2D;&#x5305;&#x542B;&#x6709;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x65F6;&#xFF0C;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x5C31; // &#x4F1A;&#x81EA;&#x52A8;&#x5728;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x4E2D;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x57FA;&#x4E8E;&#x5B89;&#x5168;&#x6027;&#x8003;&#x8651;&#xFF0C;Binder&#x7A0B;&#x5E8F;&#x5C31;&#x8981;&#x901A;&#x8FC7;&#x8BE5;&#x53D8;&#x91CF;&#x9632;&#x6B62; // &#x6E90;&#x8FDB;&#x7A0B;&#x5728;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#x4E2D;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#x3002; unsigned accept_fds:1; // &#x8868;&#x793A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5728;&#x5904;&#x7406;&#x6765;&#x81EA;Client&#x8FDB;&#x7A0B;&#x7684;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x4ED6;&#x6240;&#x8981;&#x6C42;&#x7684;&#x5904;&#x7406;&#x7EBF;&#x7A0B;&#xFF08;&#x5373;Server&#x8FDB;&#x7A0B; // &#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF09;&#x5E94;&#x5177;&#x5907;&#x7684;&#x6700;&#x5C0F;&#x7EBF;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#x3002; unsigned min_priority:8; struct list_head async_todo;}; &#x63A5;&#x4E0B;&#x6765;&#x7684;binder_new_node(proc, fp-&gt;binder, fp-&gt;cookie)&#x5C06;&#x7533;&#x8BF7;&#x4E00;&#x4E2A;struct binder_node&#xFF0C;&#x5728;&#x521D;&#x59CB;&#x5316;&#x4E2D;&#xFF0C;&#x5C06;&#x8BE5;&#x8282;&#x70B9;&#x6302;&#x5230;proc-&gt;nodes.rb_node&#x4E2D;&#xFF0C;&#x5E76;&#x521D;&#x59CB;&#x5316;&#x90E8;&#x5206;&#x6210;&#x5458;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; ## struct binder_ref struct binder_ref&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;Binder&#x5B9E;&#x4F53;&#x65F6;&#xFF0C;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x4FDD;&#x5B58;&#x7684;&#x5C31;&#x662F;&#x5BF9;&#x8BE5;&#x5B9E;&#x4F53;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x8BE5;&#x7ED3;&#x6784;&#x4F53;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x5728;&#x5185;&#x6838;&#x4E2D;&#x7684;&#x72B6;&#x6001;&#x3002;kernel/goldfish/drivers/staging/android/binder.c:246 1234567891011121314151617181920212223242526272829303132struct binder_ref { /* Lookups needed: */ /* node + proc =&gt; ref (transaction) */ /* desc + proc =&gt; ref (transaction, inc/dec ref) */ /* node =&gt; refs + procs (proc exit) */ int debug_id; // &#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x7EA2;&#x9ED1;&#x6811;&#x6765;&#x4FDD;&#x5B58;&#x5B83;&#x5185;&#x90E8;&#x6240;&#x6709;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x5206;&#x522B;&#x4EE5;&#x53E5;&#x67C4;&#x503C;&#x548C;&#x5BF9;&#x5E94;&#x7684;Binder // &#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5730;&#x5740;&#x6765;&#x4F5C;&#x4E3A;&#x5173;&#x952E;&#x5B57;&#x4FDD;&#x5B58;&#x8FD9;&#x4E9B;&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;rb_node_xxxx&#x6B63;&#x662F;&#x7EA2;&#x9ED1;&#x6811;&#x4E2D;&#x7684;&#x8282;&#x70B9; struct rb_node rb_node_desc; struct rb_node rb_node_node; // &#x6BCF;&#x4E2A;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x90FD;&#x6709;&#x4E00;&#x4E2A;hash&#x8868;&#x4FDD;&#x5B58;&#x5F15;&#x7528;&#x4E86;&#x5B83;&#x7684;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E9B;&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458; // node_entry&#x5C31;&#x662F;&#x8BE5;hash&#x8868;&#x7684;&#x8282;&#x70B9; struct hlist_node node_entry; struct binder_proc *proc; // &#x5BBF;&#x4E3B;&#x8FDB;&#x7A0B; struct binder_node *node; // &#x63CF;&#x8FF0;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x6240;&#x5F15;&#x7528;&#x7684;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; // &#x63CF;&#x8FF0;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x53E5;&#x67C4;&#x503C;&#xFF0C;&#x9A71;&#x52A8;&#x901A;&#x8FC7;&#x8BE5;&#x53E5;&#x67C4;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6839;&#x636E;&#x8BE5; // Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x5458;node&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;Binder&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BE5;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x627E;&#x5230;&#x8981; // &#x8BBF;&#x95EE;&#x7684;Service&#x7EC4;&#x4EF6;&#x4E86;&#x3002;&#x4E00;&#x4E2A;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x53E5;&#x67C4;&#x503C;&#x4EC5;&#x5728;&#x8FDB;&#x7A0B;&#x8303;&#x56F4;&#x5185;&#x552F;&#x4E00;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x4E24;&#x4E2A;&#x4E0D;&#x540C; // &#x8FDB;&#x7A0B;&#x4E2D;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x53E5;&#x67C4;&#x53EF;&#x80FD;&#x4EE3;&#x8868;&#x4E0D;&#x540C;&#x7684;Service&#x7EC4;&#x4EF6; uint32_t desc; int strong; // &#x63CF;&#x8FF0;Binder&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570; int weak; // &#x6307;&#x5411;&#x4E00;&#x4E2A;Service&#x7EC4;&#x4EF6;&#x7684;&#x6B7B;&#x4EA1;&#x63A5;&#x6536;&#x901A;&#x77E5;&#x3002;&#x5F53;Client&#x8FDB;&#x7A0B;&#x5411;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x5B83;&#x6240;&#x5F15;&#x7528; // &#x7684;Service&#x7EC4;&#x4EF6;&#x6B7B;&#x4EA1;&#x63A5;&#x6536;&#x901A;&#x77E5;&#x65F6;&#xFF0C;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;binder_ref_death&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x7136; // &#x540E;&#x4FDD;&#x5B58;&#x5728;&#x8BE5;&#x6210;&#x5458;&#x53D8;&#x91CF;death&#x4E2D; struct binder_ref_death *death; }; &#x63A5;&#x4E0B;&#x6765;&#x770B;binder_get_ref_for_node(target_proc, node)&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x524D;&#x9762;&#x521B;&#x5EFA;binder_node&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x4E3A;proc&#x521B;&#x5EFA;&#x7684;&#xFF0C;proc&#x662F;&#x5728;&#x8C03;&#x7528;binder_open(...)&#x65F6;&#x521B;&#x5EFA;&#xFF0C;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x201C;&#x4F7F;&#x7528;&#xFF08;&#x6253;&#x5F00;&#xFF09;&#x8BE5;binder&#x7684;&#x8FDB;&#x7A0B;&#x201D;&#xFF0C;proc&#x5C31;&#x85CF;&#x5728;binder&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x79C1;&#x6709;&#x6570;&#x636E;&#x4E2D;&#xFF1B;&#x800C;&#x6B64;&#x5904;&#xFF08;&#x7B2C;150&#x884C;&#xFF09;&#x53C2;&#x6570;&#x4F7F;&#x7528;&#x7684;&#x662F;target_proc&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x5F53;&#x524D;&#x7684;binder&#x8BF7;&#x6C42;&#x53D1;&#x5411;&#x7684;&#x76EE;&#x6807;&#x8FDB;&#x7A0B;&#xFF0C;&#x5728;&#x672C;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x5C31;&#x662F;handle&#x4E3A;0&#x7684;service manager&#xFF0C;&#x5373;binder_context_mgr_node&#x3002; kernel/goldfish/drivers/staging/android/binder.c:1107 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859static struct binder_ref *binder_get_ref_for_node(struct binder_proc *proc, struct binder_node *node){ struct rb_node *n; struct rb_node **p = &amp;proc-&gt;refs_by_node.rb_node; struct rb_node *parent = NULL; struct binder_ref *ref, *new_ref; // &#x5728;target_proc&#x4E2D;&#x67E5;&#x627E;node&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#x5C31;&#x521B;&#x5EFA; while (*p) { parent = *p; ref = rb_entry(parent, struct binder_ref, rb_node_node); if (node &lt; ref-&gt;node) p = &amp;(*p)-&gt;rb_left; else if (node &gt; ref-&gt;node) p = &amp;(*p)-&gt;rb_right; else return ref; } new_ref = kzalloc(sizeof(*ref), GFP_KERNEL); ... ... binder_stats_created(BINDER_STAT_REF); new_ref-&gt;debug_id = ++binder_last_id; new_ref-&gt;proc = proc; new_ref-&gt;node = node; rb_link_node(&amp;new_ref-&gt;rb_node_node, parent, p); rb_insert_color(&amp;new_ref-&gt;rb_node_node, &amp;proc-&gt;refs_by_node); // &#x904D;&#x5386;target_proc&#x7684;binder_ref&#xFF0C;&#x627E;&#x5230;&#x6700;&#x5927;&#x7684;desc&#xFF0C;&#x52A0;1&#x540E;&#x8D4B;&#x7ED9;new_ref-&gt;desc new_ref-&gt;desc = (node == binder_context_mgr_node) ? 0 : 1; for (n = rb_first(&amp;proc-&gt;refs_by_desc); n != NULL; n = rb_next(n)) { ref = rb_entry(n, struct binder_ref, rb_node_desc); if (ref-&gt;desc &gt; new_ref-&gt;desc) break; new_ref-&gt;desc = ref-&gt;desc + 1; } // &#x5C06;new_ref&#x63D2;&#x5165;&#x5230;target_proc-&gt;refs_by_desc.rb_node&#x4E2D; p = &amp;proc-&gt;refs_by_desc.rb_node; while (*p) { parent = *p; ref = rb_entry(parent, struct binder_ref, rb_node_desc); if (new_ref-&gt;desc &lt; ref-&gt;desc) p = &amp;(*p)-&gt;rb_left; else if (new_ref-&gt;desc &gt; ref-&gt;desc) p = &amp;(*p)-&gt;rb_right; else BUG(); } rb_link_node(&amp;new_ref-&gt;rb_node_desc, parent, p); rb_insert_color(&amp;new_ref-&gt;rb_node_desc, &amp;proc-&gt;refs_by_desc); if (node) { hlist_add_head(&amp;new_ref-&gt;node_entry, &amp;node-&gt;refs); ... ... } ... ... return new_ref;} &#x4E8E;&#x662F;&#xFF0C;&#x5728;binder_transaction(...)&#x51FD;&#x6570;&#x7B2C;114&#x884C;&#x5B8C;&#x6210;&#x8C03;&#x7528;binder_get_ref_for_node(target_proc, node)&#x4E4B;&#x540E;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x56FE;&#x4E3A;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x5728;&#x51FD;&#x6570;binder_transaction(...)&#x4E2D;&#x8FD8;&#x6709;&#x51E0;&#x4E2A;&#x5173;&#x952E;&#x64CD;&#x4F5C;&#xFF0C;&#x89C1;&#x7B2C;116&#x884C;&#xFF0C;&#x5982;&#x679C;fp-&gt;type&#x4E3A;BINDER_TYPE_BINDER&#xFF0C;&#x5C31;&#x6539;&#x4E3A;BINDER_TYPE_HANDLE&#xFF0C;&#x7136;&#x540E;&#x628A;fp-&gt;handle&#x6539;&#x4E3A;ref-&gt;desc&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;binder_ref_ref(ref, fp-&gt;type==BINDER_TYPE_HANDLE, &amp;thread-&gt;todo)&#x5B9A;&#x4E49;&#x5728;kernel/goldfish/drivers/staging/android/binder.c:1200 1234567891011121314151617181920212223static int binder_inc_ref(struct binder_ref *ref, int strong, struct list_head *target_list){ // strong = (fp-&gt;type==BINDER_TYPE_HANDLE)&#x5373;&#x4E3A;1 // target_list = &amp;thread-&gt;todo int ret; if (strong) { if (ref-&gt;strong == 0) { // ref-&gt;node-&gt;internal_strong_ref++&#xFF0C;&#x6210;&#x529F;&#x8FD4;&#x56DE;0 ret = binder_inc_node(ref-&gt;node, 1, 1, target_list); if (ret) return ret; } ref-&gt;strong++; } else { if (ref-&gt;weak == 0) { ret = binder_inc_node(ref-&gt;node, 0, 1, target_list); if (ret) return ret; } ref-&gt;weak++; } return 0;} &#x63A5;&#x4E0B;&#x6765;&#x8DF3;&#x51FA;case&#x540E;&#x8FD8;&#x6709;&#x5BF9;t&#x7684;&#x6210;&#x5458;need_reply&#x3001;from_parent&#x3001;t-&gt;work.type&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5E76;&#x5C06;t&#x63D2;&#x5165;&#x5230;target_list&#x5373;target_proc&#x6216;target_thread&#x7684;todo&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5C14;&#x540E;&#x8FD4;&#x56DE;&#x3002;&#x6B64;&#x65F6;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x56FE;&#x4E3A;&#xFF1A; &#x5230;&#x6B64;&#x4E3A;&#x6B62;&#xFF0C;&#x7EC8;&#x4E8E;&#x5B8C;&#x6210;&#x4E86;binder_transaction(...)&#x7684;&#x5206;&#x6790;&#xFF0C;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x56DE;&#x4E8B;&#xFF0C;&#x4F46;&#x5FC3;&#x91CC;&#x6709;&#x5F88;&#x591A;&#x4E2A;&#x201C;&#x4E3A;&#x4EC0;&#x4E48;&#x201D;&#x3002;&#x800C;&#x4E14;&#x628A;&#x524D;&#x9762;&#x7684;&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x4E32;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x9690;&#x7EA6;&#x89C9;&#x5F97;&#x80FD;&#x611F;&#x5E94;&#x5230;&#x4E00;&#x4E9B;&#x66D9;&#x5149;&#x4E86;&#xFF0C;&#x672C;&#x8282;&#x7684;&#x7BC7;&#x5E45;&#x592A;&#x957F;&#x4E86;&#xFF0C;&#x8FD9;&#x4E9B;&#x66D9;&#x5149;&#x7559;&#x5F85;&#x4E0B;&#x4E00;&#x8282;&#x4E00;&#x8D77;&#x9886;&#x7565;&#x5427;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（十一）—— 智能指针]]></title>
    <url>%2F2016%2F06%2F10%2F2016%2F0610BinderLearning11%2F</url>
    <content type="text"><![CDATA[&#x8F7B;&#x91CF;&#x7EA7;&#x6307;&#x9488; Binder&#x7684;&#x5B66;&#x4E60;&#x5386;&#x7A0B;&#x722C;&#x5230;&#x9A71;&#x52A8;&#x7684;&#x534A;&#x5C71;&#x8170;&#x660E;&#x663E;&#x611F;&#x89C9;&#x8D8A;&#x6765;&#x8D8A;&#x9661;&#x5CED;&#xFF0C;&#x505C;&#x4E0B;&#x4E1A;&#x52A1;&#x5C42;&#x7684;&#x5B66;&#x4E60;&#xFF0C;&#x8865;&#x8865;&#x57FA;&#x7840;&#x5C42;&#x77E5;&#x8BC6;&#x5427;&#xFF0C;&#x8FD9;&#x9996;&#x5F53;&#x5176;&#x51B2;&#x7684;&#x5C31;&#x662F;&#x667A;&#x80FD;&#x6307;&#x9488;&#x4E86;&#xFF0C;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x5F71;&#x5B50;&#x5728;Android&#x6E90;&#x7801;&#x4E2D;&#x968F;&#x5904;&#x53EF;&#x89C1;&#x3002;&#x6253;&#x5F00;frameworkds/rs/cpp/util&#xFF0C;RefBase.h&#x548C;StrongPointer.h&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4EE3;&#x7801;&#x591A;&#x8BFB;&#x51E0;&#x904D;&#x90FD;&#x80FD;&#x8BFB;&#x61C2;&#xFF0C;&#x53EF;&#x662F;&#x4E32;&#x8D77;&#x6765;&#x603B;&#x611F;&#x89C9;&#x6478;&#x4E0D;&#x5230;&#x9AA8;&#x67B6;&#xFF0C;&#x628A;&#x4E0D;&#x4F4F;&#x4E3B;&#x7EBF;&#x3002;&#x95ED;&#x4E0A;&#x773C;&#x96F6;&#x96F6;&#x661F;&#x661F;&#x7684;&#x70B9;&#x4E32;&#x4E0D;&#x6210;&#x4E00;&#x6761;&#x7EBF;&#x3002;&#x7A76;&#x5176;&#x539F;&#x56E0;&#x5E94;&#x8BE5;&#x662F;&#x6B64;&#x5904;&#x4F7F;&#x7528;&#x4E86;&#x6A21;&#x5F0F;&#xFF0C;&#x6700;&#x597D;&#x5148;&#x5254;&#x9664;&#x6389;&#x4E1A;&#x52A1;&#x5C42;&#x7684;&#x76AE;&#x8089;&#xFF0C;&#x628A;&#x6A21;&#x5F0F;&#x7684;&#x9AA8;&#x67B6;&#x6478;&#x4E2A;&#x95E8;&#x6E05;&#xFF0C;&#x518D;&#x56DE;&#x6765;&#x770B;&#x4EE3;&#x7801;&#x5C31;&#x4F1A;&#x52BF;&#x5982;&#x7834;&#x7AF9;&#x4E86;&#x3002; &#x4E0D;&#x662F;&#x591A;&#x4E48;&#x9AD8;&#x6DF1;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x667A;&#x80FD;&#x6307;&#x9488;&#x548C;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x6DF7;&#x5408;&#x800C;&#x5DF2;&#x3002;&#x4F46;&#xFF0C;&#x4E0D;&#x8981;&#x8F7B;&#x654C;&#x3002;&#x7FFB;&#x5F00;&#x4E66;&#xFF0C;&#x5BF9;&#x8FD9;&#x4E24;&#x4E2A;&#x6A21;&#x5F0F;&#x7684;&#x63CF;&#x8FF0;&#x7ADF;&#x6709;50&#x9875;&#x4E4B;&#x591A;&#x3002;&#x6211;&#x8BFB;&#x7684;&#x662F;Scott Meyers&#x7684;&#x300A;More Effective C++&#x300B;&#xFF0C;&#x4FAF;sir&#x7FFB;&#x8BD1;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5341;&#x5E74;&#x524D;&#x8BFB;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x65F6;&#x5019;&#x56EB;&#x56F5;&#x541E;&#x67A3;&#x5F88;&#x591A;&#x8BFB;&#x4E0D;&#x61C2;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x6982;&#x5FF5;&#x4F9D;&#x7A00;&#x7559;&#x4E0B;&#x70B9;&#x5370;&#x8C61;&#x3002;&#x8FD9;&#x4E9B;&#x5370;&#x8C61;&#x5C31;&#x6784;&#x6210;&#x4E86;&#x65E5;&#x540E;&#x9047;&#x5230;&#x95EE;&#x9898;&#x65F6;&#x7684;&#x8DEF;&#x6807;&#xFF0C;&#x544A;&#x8BC9;&#x6211;&#x7B54;&#x6848;&#x5728;&#x54EA;&#x91CC;&#x3002;&#x8FD9;&#x672C;&#x4E66;&#x6761;&#x6B3E;28&#x3001;29&#x8BB2;&#x7684;&#x6B63;&#x662F;&#x667A;&#x80FD;&#x6307;&#x9488;&#x548C;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x4E24;&#x7AE0;&#x7ED3;&#x5C3E;&#x5904;&#x7684;&#x4EE3;&#x7801;&#x51E0;&#x4E4E;&#x5C31;&#x662F;Android&#x6E90;&#x7801;&#x4E2D;LightRefBase&#x548C;sp&#x7684;&#x539F;&#x578B;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;&#x6761;&#x6B3E;&#x90FD;&#x4ECE;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x76EE;&#x6807;&#x5165;&#x624B;&#xFF0C;&#x4E0D;&#x65AD;&#x5730;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x518D;&#x5347;&#x7EA7;&#x63D0;&#x51FA;&#x5B83;&#x7684;&#x4E0D;&#x8DB3;&#xFF0C;&#x518D;&#x627E;&#x7B54;&#x6848;&#xFF0C;&#x76F4;&#x5230;&#x628A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6253;&#x7A7F;&#x6253;&#x900F;&#x4E3A;&#x6B62;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x6761;&#x6B3E;&#x7684;&#x5185;&#x5BB9;&#x5C31;&#x4E0D;&#x8D58;&#x8FF0;&#x4E86;&#xFF0C;&#x4E66;&#x91CC;&#x5199;&#x7684;&#x66F4;&#x7CBE;&#x5F69;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x628A;&#x6A21;&#x5F0F;&#x548C;Android&#x6E90;&#x7801;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x5BF9;&#x63A5;&#x8D77;&#x6765;&#x3002; &#x300A;More Effective C++&#x300B;&#x7B2C;203&#x9875;&#xFF0C;&#x6761;&#x6B3E;29&#x63CF;&#x7ED8;&#x4E86;&#x5177;&#x6709;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x529F;&#x80FD;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x6A21;&#x5F0F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x8FD9;&#x5F20;&#x56FE;&#x8FD8;&#x662F;&#x628A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;&#x6A21;&#x5F0F;&#x6846;&#x67B6;&#x6DF7;&#x5728;&#x4E00;&#x8D77;&#x4E86;&#xFF1A; * String&#x4EE3;&#x8868;&#x4E1A;&#x52A1;&#x903B;&#x8F91; * RCPtr&#x662F;&#x5177;&#x5907;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x529F;&#x80FD;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488; * RCObject&#x7528;&#x6765;&#x5C65;&#x884C;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x804C;&#x8D23; * StringValue&#x548C;HeapMemory&#x53C8;&#x662F;&#x5C40;&#x90E8;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E86; &#x6240;&#x4EE5;&#x8BE5;&#x6A21;&#x5F0F;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x7531;RCPtr&#x548C;RCObject&#x8054;&#x8882;&#x5B8C;&#x6210;&#xFF0C;RCPtr&#x8D1F;&#x8D23;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;RCObject&#x8D1F;&#x8D23;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5982;&#x679C;&#x8981;&#x914D;&#x5907;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x548C;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x5219;&#x9700;&#x8981;&#xFF1A; 123class MyClass : public RCObject // &#x8BA9;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x4ECE;RCObject&#x6D3E;&#x751F;{...};RCPtr&lt;MyClass&gt; pObj; // &#x58F0;&#x660E;&#x5BF9;&#x8C61; &#x5BF9;&#x5E94;&#x5230;Android&#x6E90;&#x7801;&#x4E2D;&#xFF0C;LightRefBase&#x5C31;&#x662F;RCObject&#xFF0C;sp&#x5C31;&#x662F;RCPtr&#xFF1A; &#x6211;&#x5728;&#x521D;&#x8BFB;Android&#x6E90;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4E00;&#x76F4;&#x7422;&#x78E8;&#x4E3A;&#x4EC0;&#x4E48;&#x641E;&#x5F97;&#x8FD9;&#x4E48;&#x590D;&#x6742;&#xFF0C;&#x4E0D;&#x80FD;&#x628A;&#x667A;&#x80FD;&#x6307;&#x9488;&#x5C01;&#x88C5;&#x5728;&#x4E00;&#x4E2A;&#x57FA;&#x7C7B;&#x91CC;&#x3002;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;&#xFF0C;MyClass&#x53EA;&#x9700;&#x8981;&#x4ECE;&#x8FD9;&#x4E2A;&#x7C7B;&#x6D3E;&#x751F;&#x5C31;&#x597D;&#x4E86;&#x3002;&#x7B54;&#x6848;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#x3002;&#x56E0;&#x4E3A;RCPtr&#x672C;&#x8D28;&#x4E0A;&#x8981;&#x5145;&#x5F53;&#x6307;&#x9488;&#x7684;&#x89D2;&#x8272;&#xFF0C;ptr1&#x53EF;&#x4EE5;&#x6307;&#x5411;A&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x6307;&#x5411;B&#xFF0C;&#x5F53;&#x4ECE;A&#x8F6C;&#x5411;&#x4E86;B&#xFF0C;&#x5E94;&#x8BE5;&#x8BA9;A&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#xFF0C;&#x8BA9;B&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x589E;&#xFF0C;&#x8FD9;&#x4E2A;&#x8BA1;&#x6570;&#x53EA;&#x80FD;&#x662F;&#x88AB;&#x6307;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x662F;&#x6307;&#x9488;&#x7684;&#x3002; &#x6211;&#x4E4B;&#x6240;&#x4EE5;&#x4F1A;&#x6709;&#x5408;&#x4E8C;&#x4E3A;&#x4E00;&#x7684;&#x5E74;&#x5934;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x8FC7;&#x53BB;&#x63A5;&#x89E6;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x5927;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x9047;&#x5230;Exception&#x6216;&#x9519;&#x8BEF;&#x8FD4;&#x56DE;&#x65F6;&#x9632;&#x6B62;&#x5185;&#x5B58;&#x6216;&#x8D44;&#x6E90;&#x6CC4;&#x9732;&#xFF0C;&#x53C8;&#x4E0D;&#x60F3;&#x4F7F;&#x7528;goto&#x8BED;&#x53E5;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 12345678910111213int fun(char * filename){ FILE* fp = fopen(filename, &quot;r&quot;); int result = 0 ... ... if(error){ result = -1; goto exit; }exit: fclose(fp); return result;} &#x5982;&#x679C;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x6253;&#x5F00;&#x4E86;&#x591A;&#x79CD;&#x8D44;&#x6E90;&#xFF0C;&#x5219;&#x8981;&#x4E48;&#x8BB0;&#x4F4F;&#x5B83;&#x4EEC;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x5728;exit&#x4E2D;&#x6839;&#x636E;&#x72B6;&#x6001;&#x64E6;&#x5C41;&#x80A1;&#xFF1B;&#x8981;&#x4E48;&#x5C31;&#x5F97;&#x6709;&#x591A;&#x4E2A;goto&#x6807;&#x8BB0;&#x3002;&#x6B64;&#x65F6;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x7ED9;&#x6587;&#x4EF6;&#x505A;&#x4E2A;&#x5C01;&#x88C5;&#xFF1A; 1234567void fun(char * filename){ MyFile file; // MyFile&#x5728;&#x6790;&#x6784;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED;&#x6587;&#x4EF6; if(!file.open(filename, &quot;r&quot;)) return -1; ... ...} &#x8FD9;&#x4E00;&#x7C7B;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x201C;&#x5177;&#x5907;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x201D;&#x7684;&#x7279;&#x4F8B;&#xFF0C;&#x5B83;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x6700;&#x591A;&#x4E3A;1&#xFF0C;&#x4E14;&#x4E0D;&#x5B58;&#x5728;&#x6240;&#x6709;&#x6743;&#x7684;&#x8F6C;&#x79FB;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x5F15;&#x7528;&#x8BA1;&#x6570;RCObject&#x6A21;&#x5757;&#x9000;&#x5316;&#x6389;&#xFF0C;&#x6307;&#x9488;&#x6307;&#x5411;&#x8D44;&#x6E90;&#x5373;&#x4EE3;&#x8868;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;1&#xFF0C;&#x4E0D;&#x6307;&#x5411;&#x4EFB;&#x4F55;&#x8D44;&#x6E90;&#x5219;&#x4EE3;&#x8868;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;0&#x3002;&#x56E0;&#x6B64;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x53EF;&#x4EE5;&#x8BA9;MyClass&#x4EC5;&#x6D3E;&#x751F;&#x81EA;RCPtr&#x57FA;&#x7C7B;&#x5373;&#x53EF;&#xFF0C;&#x4E00;&#x65E6;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5141;&#x8BB8;&#x5927;&#x4E8E;1&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x5E26;&#x4E0A;RCObject&#x7684;&#x89D2;&#x8272;&#x4E86;&#x3002; &#x56DE;&#x5230;Android&#x6E90;&#x7801;&#x4E0A;&#x6765;&#xFF0C;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF1A; * LightRefBase&#x8D1F;&#x8D23;&#x7EF4;&#x62A4;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x9012;&#x589E;/&#x9012;&#x51CF;&#x7684;&#x63A5;&#x53E3;&#x3002; * sp&#x5C65;&#x884C;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x8D1F;&#x8D23;&#x6784;&#x9020;&#x6790;&#x6784;&#x3001;&#x62F7;&#x8D1D;&#x548C;&#x8D4B;&#x503C;&#x3001;&#x63D0;&#x9886;&#x3002; &#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;LightRefBase&#x548C;&#x300A;More Effective C++&#x300B;&#x6761;&#x6B3E;29&#x4E2D;&#x7684;RCObject&#x76F8;&#x6BD4;&#x591A;&#x51FA;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF0C;&#x5728;&#x8BE5;&#x7C7B;&#x7684;&#x5B9A;&#x4E49;&#x4E2D;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;&#x6211;&#x5206;&#x6790;&#x5E94;&#x8BE5;&#x662F;&#x51FA;&#x4E8E;&#x6027;&#x80FD;&#x7684;&#x8003;&#x8651;&#x2014;&#x2014;&#x8FD9;&#x6837;&#x505A;&#x53EF;&#x4EE5;&#x7701;&#x53BB;&#x865A;&#x8868;&#x7684;&#x5F00;&#x9500;&#xFF1A; 12RCObject::removeReference(){if(--refCount == 0) delete this;} &#x8FD9;&#x91CC;&#x8981;&#x7ECF;&#x7531;&#x57FA;&#x7C7B;&#x7684;&#x6307;&#x9488;&#x5220;&#x9664;&#x6D3E;&#x751F;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x300A;Effecive C++&#xFF08;&#x7B2C;&#x4E09;&#x7248;&#xFF09;&#x300B;&#xFF08;&#x521A;&#x521A;&#x53D1;&#x73B0;&#x8FD9;&#x672C;&#x4E66;&#x7684;&#x7B2C;&#x4E8C;&#x7248;&#x548C;&#x7B2C;&#x4E09;&#x7248;&#x8C03;&#x6574;&#x5F88;&#x5927;&#xFF01;&#xFF09;&#x7B2C;7&#x6761;&#x4E2D;&#x8BF4;&#x5230;: &gt; &#x5F53;&#x6D3E;&#x751F;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x7ECF;&#x7531;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x88AB;&#x5220;&#x9664;&#x65F6;&#xFF0C;&#x57FA;&#x7C7B;&#x5FC5;&#x987B;&#x6709;&#x865A;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x5BFC;&#x81F4;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x5BF9;&#x8C61;&#x7684;devrived&#x6210;&#x5206;&#x6CA1;&#x88AB;&#x9500;&#x6BC1;&#x3002; RCObject&#x786E;&#x5B9E;&#x58F0;&#x660E;&#x4E86;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E3A;virtual&#xFF0C;&#x4E5F;&#x56E0;&#x6B64;&#x4E0D;&#x5F97;&#x4E0D;&#x5F15;&#x5165;&#x865A;&#x8868;&#x3002;&#x518D;&#x770B;LightRefBase&#xFF1A; 12345678910111213template &lt;class T&gt;class LightRefBase{... ... inline void decStrong(const Void* id) const{ if(android_atomic_dec(&amp;mCount) == 1){ // &#x8FD9;&#x91CC;&#x5E76;&#x6CA1;&#x6709;delete this&#xFF0C;&#x800C;&#x662F;&#x5148;&#x8F6C;&#x6210;&#x5B50;&#x7C7B;&#x518D;delete&#xFF0C;&#x8FD9;&#x5C31;&#x4E0D;&#x518D;&#x662F; // &#x201C;&#x7ECF;&#x7531;&#x57FA;&#x7C7B;&#x6307;&#x9488;&#x5220;&#x9664;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#x201D;&#xFF0C;&#x800C;&#x662F;&#x201C;&#x7531;&#x5B50;&#x7C7B;&#x6307;&#x9488;&#x5220;&#x9664;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#x201D;&#x4E86;&#xFF0C; // &#x600E;&#x4E48;&#x5F97;&#x5230;&#x5B50;&#x7C7B;&#x6307;&#x9488;&#xFF1F;&#x6A21;&#x677F;&#x53C2;&#x6570;T&#x5440;&#xFF01;&#x4E3A;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x62CD;&#x6848;&#x53EB;&#x7EDD;&#xFF01; delete static_cast&lt;const T*&gt;(this); } }}; &#x60C5;&#x666F;&#x5206;&#x6790; Android&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x4EE3;&#x7801;&#x4E0D;&#x591A;&#xFF0C;&#x4E14;&#x6BD4;&#x8F83;&#x72EC;&#x7ACB;&#xFF0C;&#x6211;&#x628A;&#x5B83;&#x4EEC;&#x62BD;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x518D;&#x5199;&#x4E00;&#x4E9B;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5BF9;&#x8FD9;&#x5757;&#x4EE3;&#x7801;&#x7684;&#x7406;&#x89E3;&#x5927;&#x6709;&#x88E8;&#x76CA;&#x3002;&#x6211;&#x5728;Anrdoid&#x6E90;&#x7801;&#x4E2D;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x5934;&#x90E8;&#x90FD;&#x6253;&#x4E86;Log&#xFF0C;&#x6807;&#x793A;&#x51FD;&#x6570;&#x540D;&#x3002;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x5230;&#x8FD9;&#x91CC;&#x4E0B;&#x8F7D;androidex/host-smartptr&#x3002;&#x8FD9;&#x91CC;&#x7684;Android&#x6E90;&#x7801;&#x53D6;&#x81EA;android-6.0.1_r11&#x3002; * StrongPointer.h &#x6765;&#x81EA;frameworks/rs/cpp/util/StrongPointer.h * RefBase.h &#x6765;&#x81EA;frameworks/rs/cpp/util/RefBase.h * RefBase.cpp &#x6765;&#x81EA;system/core/libutils/RefBase.cpp * meyers.h &#x6765;&#x81EA;&#x300A;More Effective C++&#x300B;&#x6761;&#x6B3E;29&#xFF0C;&#x662F;&#x5E26;&#x6709;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x529F;&#x80FD;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x5B9E;&#x73B0; * testlightptr.cpp&#x548C;testweightptr.cpp &#x662F;&#x5BF9;Android&#x8F7B;&#x91CF;&#x7EA7;&#x667A;&#x80FD;&#x6307;&#x9488;&#x548C;&#x5F3A;&#x3001;&#x5F31;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C; * logger.h &#x662F;&#x4E00;&#x4E2A;log&#x5DE5;&#x5177;&#xFF0C; * smartptr.cpp &#x662F;&#x4E3B;&#x5165;&#x53E3;&#x51FD;&#x6570;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5305;&#x542B;&#x82E5;&#x5E72;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x51FD;&#x6570;&#x540D;&#x4E3A;tc01&#x3001;tc02... &#x8BE5;&#x7A0B;&#x5E8F;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x4E3A;&#xFF1A; 1smartptr &lt;tcname&gt; &#x4F8B;&#x5982;&#xFF1A; 1smartptr tc01 # &#x5B83;&#x6267;&#x884C;&#x4F8B;&#x7A0B;&#x51FD;&#x6570;tc01 &#x4E00;&#x4E0B;&#x662F;&#x5BF9;&#x8F7B;&#x91CF;&#x7EA7;&#x6307;&#x9488;&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#xFF1A; 1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#include &quot;RefBase.h&quot;#include &quot;logger.h&quot;class LightClass : public LightRefBase &lt;LightClass&gt;{public: LightClass(){} ~LightClass(){}};int testlightptr(int argc, char const * argv[]){ // &#x521D;&#x59CB;lpLightClass&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;0 LightClass * pLightClass = new LightClass(); // &#x8C03;&#x7528;sp&#x7684;&#x590D;&#x5236;&#x6784;&#x9020;&#x51FD;&#x6570;sp::sp(T* other)&#xFF0C;&#x4F7F;&#x5F97;pLightClass&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;1&#x3002; sp&lt;LightClass&gt; lpOut = pLightClass; Logging(&quot;Light Ref Count: %d.&quot;, pLightClass-&gt;getStrongCount()); { // &#x8C03;&#x7528;sp&#x7684;&#x8D4B;&#x503C;&#x6784;&#x9020;&#x51FD;&#x6570;sp::sp(const sp&lt;T&gt;&amp; other)&#xFF0C; // &#x4F7F;&#x5F97;pLightClass&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7D2F;&#x52A0;&#x4E3A;2 sp&lt;LightClass&gt; lpInner = lpOut; Logging(&quot;Light Ref Count: %d.&quot;, pLightClass-&gt;getStrongCount()); // lpInner&#x6790;&#x6784;&#xFF0C;pLightClass&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x4E3A;1 } Logging(&quot;Light Ref Count:%d.&quot;, pLightClass-&gt;getStrongCount()); return 0; // lpOut&#x6790;&#x6784;&#xFF0C;pLightClass&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x4E3A;0&#xFF0C;&#x5728;decStrong(...)&#x4E2D;delete pLightClass} &#x6267;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 12345678$ ./smartptr tc01[StrongPointer.h:41] sp::sp(T*)[testlightptr.cpp:16] Light Ref Count: 1.[StrongPointer.h:47] sp::sp(const sp&lt;T&gt;&amp;)[testlightptr.cpp:19] Light Ref Count: 2.[StrongPointer.h:53] sp::~sp()[testlightptr.cpp:21] Light Ref Count:1.[StrongPointer.h:53] sp::~sp() &#x5F3A;/&#x5F31;&#x667A;&#x80FD;&#x6307;&#x9488; &#x5F3A;/&#x5F31;&#x6307;&#x9488;&#x628A;&#x6211;&#x6298;&#x817E;&#x7684;&#x4E03;&#x8364;&#x516B;&#x7D20;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x539F;&#x578B;&#x53EF;&#x53C2;&#x8003;&#x4E86;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;&#x8FD9;&#x4E2A;&#x8BBE;&#x8BA1;&#x5FC5;&#x6709;&#x51FA;&#x5904;&#xFF0C;&#x53EA;&#x662F;&#x81EA;&#x5DF1;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x4E8E;&#x662F;&#x53EA;&#x597D;&#x5543;&#x4EE3;&#x7801;&#x3002;&#x5F3A;/&#x5F31;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x4EE3;&#x7801;&#x6BD4;&#x8F7B;&#x91CF;&#x7EA7;&#x667A;&#x80FD;&#x6307;&#x9488;&#x590D;&#x6742;&#x5F88;&#x591A;&#xFF0C;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x7814;&#x7A76;&#x5F88;&#x5BB9;&#x6613;&#x9677;&#x5165;&#x201C;&#x6BCF;&#x53E5;&#x4EE3;&#x7801;&#x90FD;&#x660E;&#x767D;&#xFF0C;&#x5C31;&#x662F;&#x6293;&#x4E0D;&#x4F4F;&#x7075;&#x9B42;&#x201D;&#x7684;&#x5883;&#x5730;&#xFF0C;&#x6211;&#x53D1;&#x73B0;&#x6700;&#x597D;&#x7684;&#x5E94;&#x5BF9;&#x65B9;&#x6CD5;&#x662F;&#x4ECE;&#x9700;&#x6C42;&#x51FA;&#x53D1;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x4E24;&#x4E2A;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x4EE3;&#x5165;&#x8D70;&#x67E5;&#x4E00;&#x4E0B;&#x3002;&#x597D;&#x5728;&#x8FD9;&#x5757;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x72EC;&#x7ACB;&#xFF0C;&#x524D;&#x9762;&#x6211;&#x5DF2;&#x7ECF;&#x628A;&#x4ED6;&#x4EEC;&#x62BD;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x60C5;&#x666F;&#x5206;&#x6790;&#x662F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x7684;&#x3002; &#x5F3A;/&#x5F31;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x76EE;&#x7684; &#x8F7B;&#x91CF;&#x7EA7;&#x667A;&#x80FD;&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x5BF9;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x5E76;&#x5728;&#x6CA1;&#x6709;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x6307;&#x9488;&#x6307;&#x5411;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#x81EA;&#x52A8;&#x9500;&#x6BC1;&#x5BF9;&#x8C61;&#xFF0C;&#x9632;&#x6B62;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x9047;&#x5230;&#x5FAA;&#x73AF;&#x5F15;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BE5;&#x624B;&#x6BB5;&#x5C31;&#x5931;&#x6548;&#x4E86;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x5F53;p&#x4E0D;&#x518D;&#x6307;&#x5411;objectA&#xFF0C;&#x5176;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7531;2&#x53D8;&#x4E3A;1&#xFF0C;&#x76F8;&#x4E92;&#x6307;&#x5411;&#x7684;objectA&#x548C;objectB&#x5C31;&#x53D8;&#x6210;&#x60AC;&#x6D6E;&#x7684;&#x4E24;&#x5EA7;&#x5B64;&#x5C9B;&#xFF0C;&#x518D;&#x4E5F;&#x6CA1;&#x6709;&#x8DEF;&#x5F84;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5230;&#x5B83;&#x4EEC;&#xFF0C;&#x4E8E;&#x662F;&#x9020;&#x6210;&#x4E86;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#x7ED9;&#x5FAA;&#x73AF;&#x5F15;&#x7528;&#x7684;&#x53CC;&#x65B9;&#x5B9A;&#x4E49;&#x4E3B;&#x4ECE;&#x5173;&#x7CFB;&#xFF0C;&#x7531;&#x4E3B;&#x6307;&#x5411;&#x4ECE;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x5C31;&#x79F0;&#x4E3A;&#x5F3A;&#x6307;&#x9488;&#xFF0C;&#x7531;&#x4ECE;&#x6307;&#x5411;&#x4E3B;&#x7684;&#x6307;&#x9488;&#x5C31;&#x79F0;&#x4E3A;&#x5F31;&#x6307;&#x9488;&#xFF0C;&#x5F3A;/&#x5F31;&#x6307;&#x9488;&#x4ECD;&#x7136;&#x90FD;&#x662F;&#x5177;&#x5907;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x529F;&#x80FD;&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#xFF0C;&#x53EA;&#x662F;&#x5F53;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x6CA1;&#x6709;&#x5F3A;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x9500;&#x6BC1;&#x6389;&#x4E86;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x5B9E;&#x7EBF;&#x4EE3;&#x8868;&#x5F3A;&#x6307;&#x9488;&#xFF0C;&#x865A;&#x7EBF;&#x4EE3;&#x8868;&#x5F31;&#x6307;&#x9488;&#x3002;&#x5F53;p&#x4E0D;&#x518D;&#x6307;&#x5411;objectA&#xFF0C;&#x5176;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x4E3A;0&#xFF0C;&#x4E8E;&#x662F;objectA&#x53EF;&#x4EE5;&#x9500;&#x6BC1;&#xFF0C;&#x5B83;&#x6307;&#x5411;objectB&#x7684;&#x5F3A;&#x6307;&#x9488;&#x4E5F;&#x88AB;&#x9500;&#x6BC1;&#xFF0C;&#x4E8E;&#x662F;objectB&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x4E3A;0&#xFF0C;objectB&#x4E5F;&#x53EF;&#x4EE5;&#x9500;&#x6BC1;&#x3002; &#x5F3A;/&#x5F31;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x4F7F;&#x7528; &#x5F3A;/&#x5F31;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7684;&#x5B9A;&#x4E49;&#x548C;&#x4F7F;&#x7528;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; 12345678// &#x5BF9;&#x8C61;&#x5B9E;&#x4F53;&#x5FC5;&#x987B;&#x4ECE;RefBase&#x6D3E;&#x751F;&#xFF0C;&#x8BE5;&#x7C7B;&#x5728;`RefBase.h`&#x548C;`RefBase.cpp`&#x4E2D;&#x58F0;&#x660E;&#x548C;&#x5B9A;&#x4E49;class MyClass : public RefBase{......};......sp&lt;MyClass&gt; pStrong(new MyClass); // &#x5B9A;&#x4E49;&#x5F3A;&#x6307;&#x9488;wp&lt;MyClass&gt; pWeak(new MyClass); // &#x5B9A;&#x4E49;&#x5F31;&#x6307;&#x9488; &#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;RefBase&#xFF0C;frameworks/rs/cpp/util/RefBase.h 123456789101112131415161718192021222324252627class RefBase{........ class weakref_type { ........ };...... virtual ~RefBase(); enum { OBJECT_LIFETIME_STRONG = 0x0000, OBJECT_LIFETIME_WEAK = 0x0001, OBJECT_LIFETIME_MASK = 0x0001 };......private: ...... class weakref_impl; weakref_impl* const mRefs;}; &#x548C;LightRefBase&#x76F8;&#x6BD4;&#x6709;&#x4E09;&#x4E2A;&#x660E;&#x663E;&#x7684;&#x5DEE;&#x5F02;&#xFF1A; 1. &#x6CA1;&#x6709;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF0C;&#x524D;&#x6587;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x8FC7;LightRefBase&#x4F7F;&#x7528;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x662F;&#x51FA;&#x4E8E;&#x6027;&#x80FD;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x7701;&#x53BB;&#x4E00;&#x4E2A;&#x865A;&#x8868;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x800C;RefBase&#x5B9A;&#x4E49;&#x4E86;virtual&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x89C1;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x53EF;&#x80FD;&#x662F;&#x5728;&#x6240;&#x96BE;&#x514D;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x518D;&#x7528;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x5C31;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x610F;&#x4E49;&#x4E86;&#x3002; 2. RefBase&#x6CA1;&#x6709;&#x50CF;LightRefBase&#x90A3;&#x6837;&#x76F4;&#x63A5;&#x7528;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x8BB0;&#x5F55;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x800C;&#x662F;&#x53C8;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;weakref_impl&#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#xFF0C;&#x7531;&#x5B83;&#x6765;&#x8BB0;&#x5F55;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x3002;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;&#x4ECE;&#x524D;&#x9762;&#x6A21;&#x578B;&#x56FE;&#x4E0A;&#x5C31;&#x80FD;&#x627E;&#x5230;&#x7B54;&#x6848;&#xFF1A; &#x7EE7;&#x7EED;&#x524D;&#x9762;&#x7684;&#x63A8;&#x6F14;&#xFF0C;objectA&#x88AB;&#x9500;&#x6BC1;&#x540E;&#xFF0C;objectB&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5F31;&#x6307;&#x9488;&#x6307;&#x5411;objectA&#x7684;&#x3002;objectA&#x5728;&#x9500;&#x6BC1;&#x7684;&#x65F6;&#x523B;&#xFF0C;&#x53EA;&#x80FD;&#x5904;&#x7406;&#x7531;&#x81EA;&#x5DF1;&#x53D1;&#x51FA;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x800C;&#x65E0;&#x6CD5;&#x77E5;&#x9053;&#x90FD;&#x6709;&#x8C01;&#x6307;&#x5411;&#x4E86;&#x81EA;&#x5DF1;&#x3002;&#x4E8E;&#x662F;objectA&#x88AB;&#x9500;&#x6BC1;&#x540E;&#xFF0C;&#x6765;&#x81EA;objectB&#x7684;&#x5F31;&#x6307;&#x9488;&#x4E5F;&#x5C31;&#x6210;&#x4E86;&#x91CE;&#x6307;&#x9488;&#x3002;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x548C;&#x5BF9;&#x8C61;&#x5B9E;&#x4F53;&#x5206;&#x79BB;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x4E8E;&#x662F;&#x5C31;&#x6709;&#x4E86;weakref_impl mRefs&#x6210;&#x5458;&#xFF0C;&#x8BE5;&#x6210;&#x5458;&#x88AB;&#x79F0;&#x4E3A;&#x4ED6;&#x6240;&#x8BB0;&#x5F55;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#xFF0C;&#x5F71;&#x5B50;&#x548C;&#x672C;&#x5C0A;&#x4E4B;&#x95F4;&#x6709;&#x6307;&#x9488;&#x6307;&#x5411;&#x5BF9;&#x65B9;&#xFF0C;&#x4F46;&#x5F71;&#x5B50;&#x7684;&#x751F;&#x5B58;&#x5468;&#x671F;&#x53EF;&#x80FD;&#x6BD4;&#x672C;&#x5C0A;&#x8FD8;&#x8981;&#x957F;&#x3002;&#x56E0;&#x4E3A;&#x5F71;&#x5B50;&#x8D1F;&#x8D23;&#x8BB0;&#x5F55;&#x672C;&#x5C0A;&#x7684;&#x5F3A;/&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5F53;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;0&#x65F6;&#xFF0C;&#x672C;&#x5C0A;&#x88AB;&#x9500;&#x6BC1;&#xFF0C;&#x5F71;&#x5B50;&#x7EE7;&#x7EED;&#x8BB0;&#x5F55;&#x5176;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x76F4;&#x5230;&#x4E24;&#x4E2A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5206;&#x522B;&#x4E3A;0&#xFF0C;&#x5F71;&#x5B50;&#x624D;&#x88AB;&#x9500;&#x6BC1;&#x6389;&#x3002; 3. &#x679A;&#x4E3E;&#x7C7B;&#x578B;OBJECT_LIFETIME_xxx&#x3002;&#x8FD9;&#x672C;&#x4E0D;&#x7B97;&#x548C;LightRefBase&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x4F46;&#x5728;&#x9605;&#x8BFB;RefBase&#x4EE3;&#x7801;&#x65F6;&#x8FD9;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#x5DE6;&#x53F3;&#x7740;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x7B56;&#x7565;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x6700;&#x8BA9;&#x6211;&#x7591;&#x60D1;&#x7684;&#x5730;&#x65B9;&#xFF1A;&#x65E2;&#x7136;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x51B3;&#x5B9A;&#x5B9E;&#x4F53;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x5728;reakref_impl&#x4E2D;&#x7528;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;mFlags&#x6765;&#x8BB0;&#x5F55;&#x5B9E;&#x4F53;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x53D7;&#x54EA;&#x4E2A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x63A7;&#x5236;&#x5462;&#xFF1F;&#x8BD5;&#x60F3;&#x5982;&#x4E0B;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF1A; &#x5F53;p1&#x4E0D;&#x518D;&#x6307;&#x5411;objectA&#xFF0C;&#x5B83;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5C31;&#x4E3A;0&#x4E86;&#xFF0C;&#x4E8E;&#x662F;&#x53EF;&#x4EE5;&#x88AB;&#x9500;&#x6BC1;&#x3002;&#x53EF;&#x6B64;&#x65F6;&#x8FD8;&#x6709;p2&#x6307;&#x5411;objectB&#xFF0C;&#x4E24;&#x4E2A;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5E76;&#x6CA1;&#x6709;&#x6210;&#x4E3A;&#x5B64;&#x5C9B;&#xFF0C;&#x8FD8;&#x6709;&#x53EF;&#x80FD;&#x8981;&#x901A;&#x8FC7;p2&#x518D;&#x8BBF;&#x95EE;objectA&#x548C;objectB&#x7EC4;&#x6210;&#x7684;&#x5FAA;&#x73AF;&#x94FE;&#x8868;&#xFF0C;&#x5728;objectA&#x548C;objectB&#x4E4B;&#x95F4;&#x5B9A;&#x4E49;&#x4E3B;&#x4ECE;&#x5173;&#x7CFB;&#x4EC5;&#x4EC5;&#x662F;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x5B64;&#x5C9B;&#x5BFC;&#x81F4;&#x7684;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;&#x6240;&#x4EE5;&#x5C3D;&#x7BA1;objectA&#x6B64;&#x65F6;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5DF2;&#x4E3A;0&#xFF0C;&#x53EA;&#x8981;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x8FD8;&#x5728;&#xFF0C;&#x8FD8;&#x662F;&#x5148;&#x7559;objectA&#x4E00;&#x6761;&#x5C0F;&#x547D;&#xFF0C;&#x8BA9;&#x5B83;&#x518D;&#x82DF;&#x5EF6;&#x6B8B;&#x5598;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x76F4;&#x5230;&#x5176;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E5F;&#x4E3A;0&#xFF0C;&#x8BF4;&#x660E;&#x5F7B;&#x5E95;&#x6CA1;&#x7528;&#x4E86;&#xFF0C;&#x5230;&#x90A3;&#x65F6;&#x5019;&#x518D;&#x771F;&#x5730;&#x5E72;&#x6389;&#x3002;&#x8FD9;&#x5C31;&#x662F;mFlags&#x548C;&#x8FD9;&#x4E09;&#x4E2A;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x7684;&#x4F5C;&#x7528;&#xFF1A; * &#x5F53;mFlags&#x4E3A;OBJECT_LIFETIME_STRONG&#xFF0C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x9075;&#x5FAA;&#x5F3A;/&#x5F31;&#x6307;&#x9488;&#x6700;&#x521D;&#x59CB;&#x7684;&#x89C4;&#x5219;&#xFF1A;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;0&#xFF0C;&#x5C31;&#x9500;&#x6BC1;&#xFF1B; * &#x5F53;mFlags&#x4E3A;OBJECT_LIFETIME_WEAK&#xFF0C;&#x5982;&#x679C;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;0&#xFF0C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x6682;&#x65F6;&#x4E0D;&#x8981;&#x9500;&#x6BC1;&#xFF0C;&#x7B49;&#x5230;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E5F;&#x4E3A;0&#x65F6;&#x518D;&#x9500;&#x6BC1; &#x60C5;&#x666F;&#x5206;&#x6790; &#x6784;&#x9020;sp&#x5BF9;&#x8C61;&#x548C;wp&#x5BF9;&#x8C61; &#x5728;smartptr.cpp&#x4E2D; 1234int tc03(int argc, char const *argv[]) // &#x6D4B;&#x8BD5;sp&#x8F6C;&#x4E3A;wp{ return testSWPtr(argc, argv);} testweightptr.cpp 123456789int testSWPtr(int argc, char const * argv[]){ WeightClass* pObj = new WeightClass(); // &#x521B;&#x5EFA;RefBase&#x5BF9;&#x8C61;&#x5B9E;&#x4F53; sp&lt;WeightClass&gt; spObj(pObj); // &#x7528;&#x5F3A;&#x6307;&#x9488;&#x6307;&#x5411;&#x8BE5;&#x5B9E;&#x4F53; spObj-&gt;printRefCount(); wp&lt;WeightClass&gt; wpObj(spObj); // &#x7528;&#x5F31;&#x6307;&#x9488;&#x6307;&#x5411;&#x5F3A;&#x6307;&#x9488; spObj-&gt;printRefCount(); return 0;} RefBase&#x6784;&#x9020;&#x51FD;&#x6570; WeightClass&#x7EE7;&#x627F;&#x81EA;RefBase&#xFF0C;&#x5176;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A; 12345RefBase::RefBase() : mRefs(new weakref_impl(this)) // RefBase&#x5BF9;&#x8C61;&#x5728;&#x521B;&#x5EFA;&#x7684;&#x540C;&#x65F6;&#x4F1A;&#x4E3A;&#x81EA;&#x5DF1;&#x521B;&#x5EFA;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;{ Logging(&quot;RefBase::RefBase()&quot;);} &#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x6784;&#x9020;&#x5982;&#x4E0B;&#xFF1A; 12345678weakref_impl(RefBase* base) // &#x521D;&#x59CB;&#x5316;&#x5F3A;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;mBase&#x6307;&#x5411;&#x672C;&#x5C0A;&#x5B8C;&#x6210;&#x4E92;&#x6307; : mStrong(INITIAL_STRONG_VALUE) , mWeak(0) , mBase(base) , mFlags(0){ Logging(&quot;RefBase::weakref_impl::weakref_impl(RefBase* base)&quot;);} ** &#x56E0;&#x6B64;&#xFF0C;&#x6784;&#x9020;&#x4E00;&#x4E2A;RefBase&#x5BF9;&#x8C61;&#x5B8C;&#x6210;&#x7684;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#xFF0C;&#x521B;&#x5EFA;&#x8D1F;&#x8D23;&#x7EF4;&#x62A4;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x5F3A;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5E76;&#x5B8C;&#x6210;&#x672C;&#x5C0A;&#x548C;&#x5F71;&#x5B50;&#x7684;&#x4E92;&#x6307;&#x3002;** sp&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570; &#x56DE;&#x5230;testSWPtr(...)&#x51FD;&#x6570;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;sp&lt;WeightClass&gt; spObj(pObj);&#x6267;&#x884C;sp&#x7684;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A; 12345sp(T* other): m_ptr(other){ Logging(&quot;sp::sp(T*)&quot;); if (other) other-&gt;incStrong(this);} &#x5B83;&#x4F1A;&#x589E;&#x52A0;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5373;RefBase::incStrong(...)&#x3002;RefBase.cpp: 123456789101112131415void RefBase::incStrong(const void* id) const{ weakref_impl* const refs = mRefs; refs-&gt;incWeak(id); // &#x7D2F;&#x52A0;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570; refs-&gt;addStrongRef(id); // &#x5FFD;&#x7565; const int32_t c = android_atomic_inc(&amp;refs-&gt;mStrong); if (c != INITIAL_STRONG_VALUE) { return; } android_atomic_add(-INITIAL_STRONG_VALUE, &amp;refs-&gt;mStrong); refs-&gt;mBase-&gt;onFirstRef();} weakref_impl&#x7684;&#x5B9A;&#x4E49;&#x5728;RefBase.cpp&#x4E2D;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x4E00;&#x5806;&#x7A7A;&#x51FD;&#x6570;&#xFF0C;&#x5728;Debug&#x7248;&#x672C;&#x4E2D;&#x7528;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;&#x56E0;&#x6B64;&#x9047;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF1A; 12345678void addStrongRef(const void* /*id*/) { }void removeStrongRef(const void* /*id*/) { }void renameStrongRefId(const void* /*old_id*/, const void* /*new_id*/) { }void addWeakRef(const void* /*id*/) { }void removeWeakRef(const void* /*id*/) { }void renameWeakRefId(const void* /*old_id*/, const void* /*new_id*/) { }void printRefs() const { }void trackMe(bool, bool) { } RefBase::inStrong(...)&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x5E72;&#x4E86;&#x4E09;&#x4EF6;&#x4E8B;&#xFF1A; 1. &#x7D2F;&#x52A0;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5176;&#x8C03;&#x7528;&#x5F88;&#x7B80;&#x5355; 123456void RefBase::weakref_type::incWeak(const void* id){ weakref_impl* const impl = static_cast&lt;weakref_impl*&gt;(this); impl-&gt;addWeakRef(id); // &#x5FFD;&#x7565; const int32_t c __unused = android_atomic_inc(&amp;impl-&gt;mWeak);} &#x7D2F;&#x52A0;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x3002; &#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5728;&#x6784;&#x9020;&#x7684;&#x65F6;&#x5019;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;INITIAL_STRONG_VALUE&#xFF0C;&#x8868;&#x793A;&#x201C;&#x6211;&#x662F;&#x5904;&#x201D;&#xFF01;&#x8FD9;&#x662F;&#x4E2A;&#x4E0D;&#x53EF;&#x80FD;&#x8FBE;&#x5230;&#x7684;&#x6781;&#x5927;&#x5E38;&#x91CF;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x7D2F;&#x52A0;&#x540E;&#x4F1A;&#x628A;&#x8BE5;&#x5E38;&#x91CF;&#x51CF;&#x6389; &#x5982;&#x679C;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7834;&#x5904;&#xFF0C;&#x901A;&#x77E5;&#x672C;&#x5C0A;&#xFF0C;&#x5141;&#x8BB8;&#x5B83;&#x5728;&#x7B2C;&#x4E00;&#x6B21;&#x65F6;&#x505A;&#x4E00;&#x4E9B;&#x548C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x76F8;&#x5173;&#x7684;&#x4E8B;&#x60C5; &#x95EE;&#x9898;&#x6765;&#x4E86;&#xFF1A;&#x660E;&#x660E;&#x662F;incStrong(...)&#xFF0C;&#x589E;&#x52A0;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FDE;&#x5E26;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E00;&#x8D77;&#x52A0;&#x5462;&#xFF1F;&#x8C01;&#x80FD;&#x544A;&#x8BC9;&#x6211;&#x7B54;&#x6848;&#xFF1F; &#x6211;&#x7684;&#x731C;&#x6D4B;&#x662F;&#x9171;&#x7D2B;&#x6EF4;&#xFF1A;&#x4E3B;&#x8981;&#x51FA;&#x4E8E;&#x7B80;&#x5316;&#x903B;&#x8F91;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x524D;&#x6587;&#x5206;&#x6790;&#x8FC7;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F53;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x5230;0&#x5C31;&#x53EF;&#x4EE5;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4E86;&#xFF0C;&#x6B64;&#x65F6;&#x5F71;&#x5B50;&#x8FD8;&#x4E0D;&#x80FD;&#x9500;&#x6BC1;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD8;&#x8981;&#x7EF4;&#x62A4;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x76F4;&#x5230;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x5230;0&#x624D;&#x53EF;&#x4EE5;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF1A; &gt; &#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x63A7;&#x5236;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x63A7;&#x5236;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002; &#x8FD9;&#x53E5;&#x8BDD;&#x7684;&#x63CF;&#x8FF0;&#x663E;&#x7136;&#x6BD4;&#x4E0A;&#x4E00;&#x6BB5;&#x7B80;&#x6D01;&#xFF0C;&#x8F6C;&#x6362;&#x6210;&#x4EE3;&#x7801;&#x4E5F;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x9500;&#x6BC1;&#x53EA;&#x770B;&#x5355;&#x4E00;&#x53D8;&#x91CF;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x7531;&#x6B64;&#x5E26;&#x6765;&#x7684;&#x4EE3;&#x4EF7;&#x5C31;&#x662F;&#x8981;&#x5728;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7D2F;&#x52A0;&#x7684;&#x540C;&#x65F6;&#x4E5F;&#x8981;&#x7D2F;&#x52A0;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x3002;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x89C9;&#x5F97;&#x6839;&#x636E;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x51B3;&#x5B9A;&#x5F71;&#x5B50;&#x7684;&#x9500;&#x6BC1;&#x7B56;&#x7565;&#x5E76;&#x6CA1;&#x6709;&#x5F15;&#x5165;&#x592A;&#x5927;&#x7684;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x53EF;&#x662F;&#x8FD8;&#x6709;&#x7B2C;&#x4E09;&#x4E2A;&#x53D8;&#x91CF;mFlags&#xFF0C;&#x7EA0;&#x7F20;&#x5728;&#x4E00;&#x8D77;&#x4E8B;&#x60C5;&#x5C31;&#x53D8;&#x5F97;&#x9EBB;&#x70E6;&#x5F88;&#x591A;&#xFF0C;&#x540E;&#x9762;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x9047;&#x5230;&#x3002;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E2A;deal&#x662F;&#x975E;&#x5E38;&#x5212;&#x7B97;&#x7684;&#x3002; ** &#x56E0;&#x6B64;sp&#x7684;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#xFF1A;&#x521D;&#x59CB;&#x5316;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x6307;&#x9488;&#xFF0C;&#x5C06;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x52A0;1&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x5176;&#x7B2C;&#x4E00;&#x6B21;&#x88AB;&#x5F3A;&#x5F15;&#x7528;&#x65F6;&#x63D2;&#x5165;&#x4E1A;&#x52A1;&#x903B;&#x8F91; ** wp&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570; &#x56DE;&#x5230;testSWPtr(...)&#x51FD;&#x6570;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x7684;wp&lt;WeightClass&gt; wpObj(spObj);&#x6267;&#x884C;wp&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A; 123456789template&lt;typename T&gt;wp&lt;T&gt;::wp(const sp&lt;T&gt;&amp; other) : m_ptr(other.m_ptr){ Logging(&quot;wp::wp(const sp&lt;T&gt;&amp; other)&quot;); if (m_ptr) { m_refs = m_ptr-&gt;createWeak(this); }} &#x6267;&#x884C;&#x4E86;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5373;RefBase&#x7684;createWeak(...)&#x51FD;&#x6570;&#xFF1A; 12345RefBase::weakref_type* RefBase::createWeak(const void* id) const{ mRefs-&gt;incWeak(id); // &#x524D;&#x9762;&#x9047;&#x5230;&#x8FC7;&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7D2F;&#x52A0;1 return mRefs;} ** wp&#x7684;&#x62F7;&#x8D1D;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7D2F;&#x52A0;1&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F71;&#x5B50;&#x4EA4;&#x7ED9;&#x81EA;&#x5DF1;&#x7684;m_refs&#x6210;&#x5458;&#x3002; ** &#x6211;&#x4EEC;&#x6765;&#x6BD4;&#x8F83;&#x4E00;&#x4E0B;sp&#x548C;wp&#x7684;&#x6570;&#x636E;&#x6210;&#x5458;&#xFF0C;sp&#x53EA;&#x6709;&#x4E00;&#x4E2A;m_ptr&#xFF0C;&#x4EE3;&#x8868;&#x5B83;&#x6240;&#x6307;&#x5411;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;wp&#x6709;&#x4E24;&#x4E2A;&#xFF1A;m_ptr&#x548C;m_refs&#x3002;&#x524D;&#x8005;&#x662F;&#x5B83;&#x6240;&#x6307;&#x5411;&#x7684;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x8BE5;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x3002;&#x524D;&#x9762;&#x8BF4;&#x8FC7;&#xFF0C;&#x672C;&#x5C0A;&#x548C;&#x5F71;&#x5B50;&#x4E4B;&#x95F4;&#x662F;&#x4E92;&#x6307;&#x7684;&#xFF0C;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x5C31;&#x80FD;&#x627E;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#xFF0C;&#x4F46;&#x662F;&#x672C;&#x5C0A;&#x53EF;&#x80FD;&#x6BD4;&#x5F71;&#x5B50;&#x66F4;&#x65E9;&#x5730;&#x88AB;&#x9500;&#x6BC1;&#x6389;&#xFF0C;&#x56E0;&#x6B64;&#x5F31;&#x6307;&#x9488;wp&#x4EC5;&#x4FDD;&#x5B58;m_ptr&#x662F;&#x4E0D;&#x591F;&#x7684;&#xFF0C;&#x5FC5;&#x987B;&#x540C;&#x65F6;&#x4FDD;&#x5B58;&#x5176;&#x5F71;&#x5B50;&#xFF1B;&#x800C;&#x5F3A;&#x6307;&#x9488;&#x5219;&#x4E0D;&#x5FC5;&#xFF0C;&#x56E0;&#x4E3A;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x5230;0&#xFF0C;m_ptr&#x88AB;&#x9500;&#x6BC1;&#xFF0C;&#x5F3A;&#x6307;&#x9488;&#x4E5F;&#x5C31;&#x6CA1;&#x6709;&#x5B58;&#x5728;&#x7684;&#x610F;&#x4E49;&#x4E86;&#x3002; &#x6784;&#x9020;&#x90E8;&#x5206;&#x5C31;&#x5206;&#x6790;&#x5B8C;&#x4E86;&#xFF0C;&#x9690;&#x85CF;&#x7684;&#x6790;&#x6784;&#x90E8;&#x5206;&#x3002; #### wp&#x6790;&#x6784;&#x51FD;&#x6570; &#x9996;&#x5148;&#x88AB;&#x6790;&#x6784;&#x7684;&#x662F;wp&#xFF0C;RefBase.h 123456template&lt;typename T&gt;wp&lt;T&gt;::~wp(){ Logging(&quot;wp::~wp()&quot;); if (m_ptr) m_refs-&gt;decWeak(this);} &#x7EE7;&#x7EED;&#x8FFD;&#x8E2A;RefBase.cpp 12345678910111213141516171819202122232425262728293031void RefBase::weakref_type::decWeak(const void* id){ weakref_impl* const impl = static_cast&lt;weakref_impl*&gt;(this); impl-&gt;removeWeakRef(id); // &#x5FFD;&#x7565; const int32_t c = android_atomic_dec(&amp;impl-&gt;mWeak); // &#x9012;&#x51CF;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570; if (c != 1) return; // &#x5982;&#x679C;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x51CF;&#x5230;0 if ((impl-&gt;mFlags&amp;OBJECT_LIFETIME_WEAK) == OBJECT_LIFETIME_STRONG) { // &#x4E00;&#x822C;&#x903B;&#x8F91; // This is the regular lifetime case. The object is destroyed // when the last strong reference goes away. Since weakref_impl // outlive the object, it is not destroyed in the dtor, and // we&apos;ll have to do it here. if (impl-&gt;mStrong == INITIAL_STRONG_VALUE) { // Special case: we never had a strong reference, so we need to // destroy the object now. delete impl-&gt;mBase; } else { // ALOGV(&quot;Freeing refs %p of old RefBase %p\n&quot;, this, impl-&gt;mBase); delete impl; } } else { // &#x6682;&#x5B58;&#x903B;&#x8F91; // less common case: lifetime is OBJECT_LIFETIME_{WEAK|FOREVER} impl-&gt;mBase-&gt;onLastWeakRef(id); if ((impl-&gt;mFlags&amp;OBJECT_LIFETIME_MASK) == OBJECT_LIFETIME_WEAK) { // this is the OBJECT_LIFETIME_WEAK case. The last weak-reference // is gone, we can destroy the object. delete impl-&gt;mBase; } }} &#x5982;&#x679C;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x6839;&#x636E;mFlags&#x6765;&#x5206;&#x522B;&#x5904;&#x7406;&#x4E86;&#xFF0C;&#x4E0D;&#x8BB0;&#x5F97;OBJECT_LIFETIME_xxx&#x7684;&#x70B9;&#x53F3;&#x4FA7;&#x7684;&#x706B;&#x7BAD;&#x4E0A;&#x697C;&#x590D;&#x4E60;:) * mFlags&#x4E3A;OBJECT_LIFETIME_STRONG&#x5C31;&#x662F;&#x4E00;&#x822C;&#x903B;&#x8F91;&#xFF0C;&#x5373;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x51CF;&#x5230;0&#x65F6;&#x7ACB;&#x5373;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x3002;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E5F;&#x5FC5;&#x4E3A;0&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E2A;0&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#xFF1A;1&#x3001;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4ECE;&#x672A;&#x88AB;&#x7834;&#x5904;&#x8FC7;&#xFF0C;&#x5373;impl-&gt;mStrong == INITIAL_STRONG_VALUE&#x4E3A;&#x771F;&#xFF0C;&#x6B64;&#x65F6;&#x9700;&#x8981;&#x9500;&#x6BC1;&#x6389;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF1B;2&#x3001;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x9012;&#x51CF;&#x5230;&#x4E86;0&#xFF0C;&#x90A3;&#x4E48;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x6B64;&#x65F6;&#x80AF;&#x5B9A;&#x5DF2;&#x7ECF;&#x4E0D;&#x5B58;&#x5728;&#x4E86;&#xFF08;&#x56E0;&#x4E3A;&#x5728;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#x7684;&#x65F6;&#x523B;&#x5DF2;&#x7ECF;&#x88AB;&#x9500;&#x6BC1;&#x4E86;&#xFF09;&#xFF0C;&#x6B64;&#x65F6;&#x53EA;&#x9700;&#x8981;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x3002; * (impl-&gt;mFlags&amp;OBJECT_LIFETIME_WEAK) == OBJECT_LIFETIME_STRONG&#x975E;&#x771F;&#x5219;&#x662F;&#x7F13;&#x5B58;&#x903B;&#x8F91;&#xFF0C;&#x5373;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4F1A;&#x88AB;&#x7F13;&#x5B58;&#x76F4;&#x5230;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E5F;&#x9012;&#x51CF;&#x5230;0&#x624D;&#x9500;&#x6BC1;&#x3002;&#x4E0E;onFirstRef()&#x7C7B;&#x4F3C;&#xFF0C;&#x5728;&#x88AB;&#x9500;&#x6BC1;&#x6389;&#x4E4B;&#x524D;&#x6709;&#x673A;&#x4F1A;&#x8BA9;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x6267;&#x884C;&#x4E00;&#x628A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;onLastWeakRef(...)&#xFF0C;&#x7136;&#x540E;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x3002;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x91CC;&#x9762;&#x7684;if&#x8BED;&#x53E5;&#x662F;&#x591A;&#x4F59;&#x4E86;&#xFF0C;&#x5B83;&#x6709;&#x975E;&#x771F;&#x7684;&#x53EF;&#x80FD;&#x5417;&#xFF1F; &#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x6B64;&#x5904;&#x4E3A;&#x4EC0;&#x4E48;&#x6709;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x903B;&#x8F91;&#x5206;&#x652F;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;impl&#x4E86;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5206;&#x652F;&#x9700;&#x8981;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x5462;&#xFF1F;&#x8FD9;&#x4E0D;&#x4F1A;&#x9020;&#x6210;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x6CC4;&#x9732;&#x5417;&#xFF1F; &#x7B54;&#x6848;&#x9690;&#x85CF;&#x5728;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;RefBase&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;RefBase.cpp&#xFF1A; 12345678910111213141516171819202122RefBase::~RefBase(){ Logging(&quot;RefBase::~RefBase()&quot;); if (mRefs-&gt;mStrong == INITIAL_STRONG_VALUE) { // we never acquired a strong (and/or weak) reference on this object. delete mRefs; } else { // &#x6682;&#x5B58;&#x903B;&#x8F91; // life-time of this object is extended to WEAK or FOREVER, in // which case weakref_impl doesn&apos;t out-live the object and we // can free it now. if ((mRefs-&gt;mFlags &amp; OBJECT_LIFETIME_MASK) != OBJECT_LIFETIME_STRONG) { // It&apos;s possible that the weak count is not 0 if the object // re-acquired a weak reference in its destructor if (mRefs-&gt;mWeak == 0) { delete mRefs; } } } // for debugging purposes, clear this. const_cast&lt;weakref_impl*&amp;&gt;(mRefs) = NULL;} &#x8BE5;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x8D1F;&#x8D23;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#xFF1A; * &#x5F53;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4ECE;&#x672A;&#x88AB;&#x5F3A;&#x6307;&#x9488;&#x6307;&#x5411;&#x8FC7;&#xFF0C;&#x90A3;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#xFF1A; - &#x672A;&#x88AB;&#x5F31;&#x6307;&#x9488;&#x6307;&#x5411;&#x8FC7;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8DDF;&#x667A;&#x80FD;&#x6307;&#x9488;&#x6CA1;&#x5173;&#x7CFB;&#x4E86;&#xFF0C;&#x5B83;&#x5728;&#x6784;&#x9020;&#x7684;&#x65F6;&#x5019;&#x521B;&#x5EFA;&#x4E86;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#xFF0C;&#x6790;&#x6784;&#x65F6;&#x5F53;&#x7136;&#x8981;&#x8D1F;&#x8D23;&#x9500;&#x6BC1; - &#x88AB;&#x5F31;&#x6307;&#x9488;&#x6307;&#x5411;&#x8FC7;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x6790;&#x6784;&#x5FC5;&#x7136;&#x662F;&#x56E0;&#x4E3A;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x5230;&#x4E86;0&#x800C;&#x5BFC;&#x81F4;&#xFF0C;decWeak(...)&#x6CA1;&#x6709;&#x8D1F;&#x8D23;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x5C31;&#x5FC5;&#x987B;&#x8981;&#x505A; * &#x6216;&#x8005;&#x5728;&#x6682;&#x5B58;&#x903B;&#x8F91;&#x4E0B;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E3A;0&#xFF0C;&#x5219;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x3002; &#x56DE;&#x5230;&#x524D;&#x9762;&#x7684;void RefBase::weakref_type::decWeak(const void* id)&#xFF0C; &#x5F53;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#xFF1A; * &#x5728;&#x4E00;&#x822C;&#x903B;&#x8F91;&#x4E0B; - &#x5982;&#x679C;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x672A;&#x88AB;&#x7834;&#x5904;&#xFF1A;&#x5219;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x53C8;&#x4F1A;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61; - &#x5426;&#x5219;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x88AB;&#x9012;&#x51CF;&#x5230;&#x4E86;0&#xFF0C;&#x5F53;&#x65F6;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5C31;&#x88AB;&#x9500;&#x6BC1;&#x4E86;&#xFF0C;&#x4F46;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E0D;&#x4E3A;0&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x8C61;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#xFF0C;&#x6B64;&#x65F6;&#x9700;&#x8981;&#x628A;&#x5F71;&#x5B50;&#x9500;&#x6BC1;&#x6389; * &#x5728;&#x6682;&#x5B58;&#x903B;&#x8F91;&#x4E0B;&#xFF0C;&#x8BA9;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x8BF4;&#x51E0;&#x53E5;&#x9057;&#x8A00;&#xFF0C;&#x7136;&#x540E;&#x9500;&#x6BC1;&#x4E4B;&#xFF0C;&#x5BF9;&#x8C61;&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x53C8;&#x4F1A;&#x9500;&#x6BC1;&#x6389;&#x5F71;&#x5B50;&#x5BF9;&#x8C61; &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x804C;&#x8D23;&#x4F18;&#x5148;&#x7531;RefBase&#x7684;&#x6790;&#x6784;&#x51FD;&#x6570;&#x6765;&#x505A;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x5408;&#x60C5;&#x5408;&#x7406;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x662F;&#x7531;RefBase&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x51FA;&#x6765;&#x7684;&#x3002;&#x4EC5;&#x5F53;RefBase&#x6790;&#x6784;&#x51FD;&#x6570;&#x65E0;&#x6CD5;&#x5B8C;&#x6210;&#x9500;&#x6BC1;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5373;RefBase&#x5148;&#x4E8E;&#x5F71;&#x5B50;&#x9500;&#x6BC1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x4EA4;&#x7ED9;decWeak(...)&#x51FD;&#x6570;&#x5728;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x5230;0&#x7684;&#x65F6;&#x5019;&#x5B8C;&#x6210;&#x9500;&#x6BC1;&#x3002; &#x4EE5;&#x4E0A;&#x662F;wp&#x6790;&#x6784;&#x51FD;&#x6570;&#x7684;&#x5B8C;&#x6574;&#x5206;&#x6790;&#xFF0C;&#x4E0D;&#x8FC7;&#x7ED3;&#x5408;tc03&#x5B9E;&#x4F8B;&#xFF0C;wp&#x6790;&#x6784;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5E76;&#x4E3A;&#x9012;&#x51CF;&#x5230;0&#xFF0C;&#x56E0;&#x6B64;void RefBase::weakref_type::decWeak(const void* id)&#x4EC5;&#x4EC5;&#x5C06;&#x5176;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x9012;&#x51CF;&#x5230;1&#xFF0C;&#x5728;&#x7B2C;#6&#x884C;&#x5C31;&#x8FD4;&#x56DE;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5219;&#x662F;sp&#x7684;&#x6790;&#x6784;&#x3002; sp&#x6790;&#x6784;&#x51FD;&#x6570; StrongPointer.h: 12345~sp(){ Logging(&quot;sp::~sp()&quot;); if (m_ptr) m_ptr-&gt;decStrong(this); // &#x9012;&#x51CF;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;} &#x7EE7;&#x7EED;&#x8FFD;&#x8E2A;RefBase.cpp: 123456789101112131415void RefBase::decStrong(const void* id) const{ weakref_impl* const refs = mRefs; refs-&gt;removeStrongRef(id); // &#x5FFD;&#x7565; const int32_t c = android_atomic_dec(&amp;refs-&gt;mStrong); if (c == 1) { refs-&gt;mBase-&gt;onLastStrongRef(id); // &#x4E00;&#x822C;&#x903B;&#x8F91; if ((refs-&gt;mFlags&amp;OBJECT_LIFETIME_MASK) == OBJECT_LIFETIME_STRONG) { delete this; } } refs-&gt;decWeak(id);} decStrong(...)&#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A; * &#x9012;&#x51CF;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x4E00;&#x822C;&#x903B;&#x8F91;&#xFF0C;&#x5F53;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x51CF;&#x5230;0&#x5219;&#x9500;&#x6BC1;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61; * &#x9012;&#x51CF;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x4E5F;&#x9012;&#x51CF;&#x5230;0&#xFF0C;&#x4E5F;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x5806;&#x9500;&#x6BC1;&#x5904;&#x7406;&#xFF0C;&#x524D;&#x6587;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x8FC7;&#x4E86; &#x7ED3;&#x5408;&#x672C;&#x4F8B;&#xFF0C;&#x5230;&#x6B64;&#x65F6;&#x5F3A;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x624D;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#xFF0C;&#x5728;decWeak(...)&#x4E2D;&#x624D;&#x6267;&#x884C;&#x5F71;&#x5B50;&#x5BF9;&#x8C61;&#x7684;&#x9500;&#x6BC1;&#x3002; &#x4E0B;&#x9762;&#x662F;tc03&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF1A; 123456789101112$ ./smartptr tc03[RefBase.cpp:25] RefBase::weakref_impl::weakref_impl(RefBase* base)[RefBase.cpp:315] RefBase::RefBase()[StrongPointer.h:41] sp::sp(T*)[StrongPointer.h:73] sp::operator-&gt;()[testweightptr.cpp:17] StrongCount=1. WeakCount=1.[RefBase.h:274] wp::wp(const sp&lt;T&gt;&amp; other)[StrongPointer.h:73] sp::operator-&gt;()[testweightptr.cpp:17] StrongCount=1. WeakCount=2.[RefBase.h:312] wp::~wp()[StrongPointer.h:53] sp::~sp()[RefBase.cpp:320] RefBase::~RefBase() &#x5C3D;&#x7BA1;&#x53EA;&#x5206;&#x6790;&#x4E86;&#x4E00;&#x4E2A;&#x7528;&#x4F8B;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5DF2;&#x7ECF;&#x628A;Android&#x7684;&#x667A;&#x80FD;&#x6307;&#x9488;&#x7814;&#x7A76;&#x5F97;&#x5F88;&#x900F;&#x5F7B;&#x4E86;&#xFF0C;&#x4E5F;&#x63ED;&#x5F00;&#x4E86;&#x4E4B;&#x524D;&#x770B;binder&#x4EE3;&#x7801;&#x7684;&#x4E00;&#x4E9B;&#x7591;&#x56E2;&#x3002;&#x5982;&#x679C;&#x672C;&#x5468;&#x8FD8;&#x6709;&#x65F6;&#x95F4;&#xFF0C;&#x6211;&#x4F1A;&#x518D;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x5F31;&#x6307;&#x9488;&#x7531;&#x5F31;&#x5347;&#x5F3A;&#x7684;wp::promte()&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x4E0D;&#x8FC7;&#x662F;&#x524D;&#x9762;&#x83B7;&#x5F97;&#x7684;&#x8BA4;&#x77E5;&#x7684;&#x7EFC;&#x5408;&#x8FD0;&#x7528;&#x800C;&#x5DF2;&#xFF0C;&#x6CA1;&#x6709;&#x592A;&#x65B0;&#x9C9C;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x82E6;&#x82E6;&#x8FFD;&#x5BFB;&#x4E86;&#x4E00;&#x4E2A;&#x793C;&#x62DC;&#xFF0C;&#x4ECA;&#x665A;&#x7EC8;&#x4E8E;&#x53EF;&#x4EE5;&#x7761;&#x4E2A;&#x8E0F;&#x5B9E;&#x89C9;&#x5566;&#x3002; &#x6700;&#x540E;&#x518D;&#x6C89;&#x6DC0;&#x51E0;&#x53E5;&#x9E21;&#x6C64;&#xFF1A;&#x8BFB;&#x4EE3;&#x7801;&#x4E0D;&#x8981;&#x4E00;&#x5934;&#x624E;&#x5F97;&#x592A;&#x6DF1;&#xFF0C;&#x521D;&#x671F;&#x89C2;&#x5176;&#x5927;&#x7565;&#x4E86;&#x89E3;&#x610F;&#x56FE;&#x6700;&#x91CD;&#x8981;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x8BF4;&#x8D77;&#x6765;&#x5BB9;&#x6613;&#xFF0C;&#x5982;&#x679C;&#x4EE3;&#x7801;&#x91CF;&#x5927;&#x4E00;&#x4E9B;&#xFF0C;&#x628A;&#x201C;&#x5927;&#x7565;&#x201D;&#x88C5;&#x5230;&#x809A;&#x5B50;&#x91CC;&#x4E5F;&#x633A;&#x8003;&#x9A8C;&#x80BA;&#x6D3B;&#x91CF;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x4E0A;&#x73ED;&#x7D2F;&#x5F97;&#x50CF;&#x72D7;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x80FD;&#x6BCF;&#x665A;&#x4E00;&#x4E24;&#x4E2A;&#x5C0F;&#x65F6;&#x6765;&#x641E;&#x3002;&#x628A;&#x5F53;&#x5929;&#x7814;&#x7A76;&#x7684;&#x5185;&#x5BB9;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x505A;&#x6709;&#x6548;&#x7684;&#x6C89;&#x6DC0;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x6211;&#x7528;hexo&#x7684;draft&#x6765;&#x6682;&#x5B58;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x5C3D;&#x91CF;&#x6269;&#x5C55;&#x81EA;&#x5DF1;&#x7684;&#x89C6;&#x91CE;&#xFF0C;&#x8BB2;&#x7A76;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x662F;&#x6700;&#x61C2;&#x5F97;&#x4E0D;&#x91CD;&#x590D;&#x9020;&#x8F6E;&#x5B50;&#x7684;&#xFF0C;&#x4E00;&#x6765;&#x6210;&#x719F;&#x7684;&#x4E1C;&#x897F;&#x7A33;&#x5B9A;&#xFF1B;&#x4E8C;&#x6765;&#x6A21;&#x5F0F;&#x964D;&#x4F4E;&#x4E86;&#x5B66;&#x4E60;&#x548C;&#x4EA4;&#x6D41;&#x6C9F;&#x901A;&#x7684;&#x6210;&#x672C;&#x3002; &#x4ECA;&#x665A;&#x518D;&#x6DFB;&#x6700;&#x540E;&#x4E00;&#x7B14;&#xFF0C;&#x667A;&#x80FD;&#x6307;&#x9488;&#x5C31;&#x9F50;&#x6D3B;&#x4E86;&#xFF01; ### wp::promote()&#x5F31;&#x6307;&#x9488;&#x5347;&#x683C;&#x4E3A;&#x5F3A;&#x6307;&#x9488; &#x5728;RefBase.h: 123456789template&lt;typename T&gt;sp&lt;T&gt; wp&lt;T&gt;::promote() const{ sp&lt;T&gt; result; if (m_ptr &amp;&amp; m_refs-&gt;attemptIncStrong(&amp;result)) { result.set_pointer(m_ptr); } return result;} RefBase.cpp: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798bool RefBase::weakref_type::attemptIncStrong(const void* id){ incWeak(id); // &#x589E;&#x52A0;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570; weakref_impl* const impl = static_cast&lt;weakref_impl*&gt;(this); int32_t curCount = impl-&gt;mStrong; // &#x5F53;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5DF2;&#x7834;&#x5904;&#xFF0C;&#x4E14;&#x5927;&#x4E8E;0&#xFF1A;&#x7ED9;impl-&gt;mStrong&#x9012;&#x52A0;1&#xFF0C;&#x5E76;&#x5C06;&#x9012;&#x52A0;&#x540E;&#x7684;&#x503C;&#x8D4B;&#x7ED9;curCount while (curCount &gt; 0 &amp;&amp; curCount != INITIAL_STRONG_VALUE) { // we&apos;re in the easy/common case of promoting a weak-reference // from an existing strong reference. if (android_atomic_cmpxchg(curCount, curCount+1, &amp;impl-&gt;mStrong) == 0) { break; } // the strong count has changed on us, we need to re-assert our // situation. curCount = impl-&gt;mStrong; } // &#x5F53;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x672A;&#x7834;&#x5904;&#x6216;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#xFF1A; if (curCount &lt;= 0 || curCount == INITIAL_STRONG_VALUE) { // we&apos;re now in the harder case of either: // - there never was a strong reference on us // - or, all strong references have been released // &#x4E00;&#x822C;&#x903B;&#x8F91; if ((impl-&gt;mFlags&amp;OBJECT_LIFETIME_WEAK) == OBJECT_LIFETIME_STRONG) { // this object has a &quot;normal&quot; life-time, i.e.: it gets destroyed // when the last strong reference goes away // &#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5DF2;&#x88AB;&#x9012;&#x51CF;&#x5230;0&#xFF0C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x80AF;&#x5B9A;&#x5DF2;&#x88AB;&#x9500;&#x6BC1;&#xFF0C;&#x65E0;&#x6CD5;&#x5347;&#x683C;&#xFF0C;&#x8FD8;&#x539F;&#x5F31;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x8FD4;&#x56DE; if (curCount &lt;= 0) { // the last strong-reference got released, the object cannot // be revived. decWeak(id); return false; } // &#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5927;&#x4E8E;0&#xFF0C;&#x8BD5;&#x56FE;&#x9012;&#x52A0;1&#xFF0C;&#x5E76;&#x5C06;&#x9012;&#x52A0;&#x540E;&#x7684;&#x503C;&#x8D4B;&#x7ED9;curCount // here, curCount == INITIAL_STRONG_VALUE, which means // there never was a strong-reference, so we can try to // promote this object; we need to do that atomically. while (curCount &gt; 0) { if (android_atomic_cmpxchg(curCount, curCount + 1, &amp;impl-&gt;mStrong) == 0) { break; } // the strong count has changed on us, we need to re-assert our // situation (e.g.: another thread has inc/decStrong&apos;ed us) curCount = impl-&gt;mStrong; } // &#x4E0A;&#x4E00;&#x6B65;&#x4E2D;&#x201C;&#x8BD5;&#x56FE;&#x9012;&#x52A0;&#x201D;&#x5931;&#x8D25;&#xFF0C;&#x88AB;&#x522B;&#x7684;&#x7EBF;&#x7A0B;&#x9012;&#x51CF;&#x56DE;0&#xFF0C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x80AF;&#x5B9A;&#x4E5F;&#x6CA1;&#x4E86;&#xFF0C;&#x53EA;&#x80FD;&#x8FD4;&#x56DE; if (curCount &lt;= 0) { // promote() failed, some other thread destroyed us in the // meantime (i.e.: strong count reached zero). decWeak(id); return false; } } else { // &#x6682;&#x5B58;&#x903B;&#x8F91;&#x4E0B;&#xFF0C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x603B;&#x662F;&#x5B58;&#x5728;&#x7684; // this object has an &quot;extended&quot; life-time, i.e.: it can be // revived from a weak-reference only. // Ask the object&apos;s implementation if it agrees to be revived &#x5982;&#x679C;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x4E0D;&#x5141;&#x8BB8;&#x5C1D;&#x8BD5;&#x9012;&#x589E;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x5931;&#x8D25; if (!impl-&gt;mBase-&gt;onIncStrongAttempted(FIRST_INC_STRONG, id)) { // it didn&apos;t so give-up. decWeak(id); return false; } // grab a strong-reference, which is always safe due to the // extended life-time. curCount = android_atomic_inc(&amp;impl-&gt;mStrong); } // If the strong reference count has already been incremented by // someone else, the implementor of onIncStrongAttempted() is holding // an unneeded reference. So call onLastStrongRef() here to remove it. // (No, this is not pretty.) Note that we MUST NOT do this if we // are in fact acquiring the first reference. if (curCount &gt; 0 &amp;&amp; curCount &lt; INITIAL_STRONG_VALUE) { impl-&gt;mBase-&gt;onLastStrongRef(id); } } impl-&gt;addStrongRef(id); //&#x5FFD;&#x7565; // &#x5982;&#x679C;&#x524D;&#x9762;&#x7684;&#x9012;&#x52A0;&#x4F7F;&#x5F3A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7834;&#x5904;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x6E05;&#x7406;&#x6389;&#x5904;&#x5973;&#x819C; // now we need to fix-up the count if it was INITIAL_STRONG_VALUE // this must be done safely, i.e.: handle the case where several threads // were here in attemptIncStrong(). curCount = impl-&gt;mStrong; while (curCount &gt;= INITIAL_STRONG_VALUE) { if (android_atomic_cmpxchg(curCount, curCount-INITIAL_STRONG_VALUE, &amp;impl-&gt;mStrong) == 0) { break; } // the strong-count changed on us, we need to re-assert the situation, // for e.g.: it&apos;s possible the fix-up happened in another thread. curCount = impl-&gt;mStrong; } return true;} RefBase::weakref_type::attemptIncStrong(const void* id)&#x7684;&#x903B;&#x8F91;&#x5E76;&#x4E0D;&#x590D;&#x6742;&#xFF0C;&#x6838;&#x5FC3;&#x76EE;&#x6807;&#x5C31;&#x662F;&#x5C1D;&#x8BD5;&#x7ED9;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#x6307;&#x9488;&#x9012;&#x52A0;1&#x3002;&#x4F46;&#x6709;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x6CE8;&#x5B9A;&#x4E0D;&#x53EF;&#x80FD;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5DF2;&#x7ECF;&#x88AB;&#x9500;&#x6BC1;&#x4E86;&#xFF1B;&#x6216;&#x8005;&#x5728;&#x6267;&#x884C;&#x6B64;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x8FD8;&#x5728;&#xFF0C;&#x4F46;&#x5728;&#x6267;&#x884C;&#x9012;&#x52A0;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x88AB;&#x9500;&#x6BC1;&#x4E86;&#xFF1B;&#x6216;&#x8005;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x62D2;&#x7EDD;&#x88AB;&#x5347;&#x683C;&#x3002;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x8FD4;&#x56DE;false&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[binder学习笔记（十）—— 穿越到驱动层]]></title>
    <url>%2F2016%2F05%2F28%2F2016%2F0528BinderLearning10%2F</url>
    <content type="text"><![CDATA[Binder&#x9A71;&#x52A8;&#x5C42;&#x7684;&#x4EE3;&#x7801;&#x5728;kernel/goldfish/drivers/staging/android&#x4E0B;&#x7684;binder.c&#x548C;binder.h&#x3002;Android&#x6E90;&#x7801;&#x662F;&#x4E0D;&#x5E26;Linux&#x5185;&#x6838;&#x7684;&#xFF0C;&#x9A71;&#x52A8;&#x6B63;&#x662F;&#x5728;&#x8FD9;&#x4E2A;&#x5185;&#x6838;&#x91CC;&#xFF0C;&#x9700;&#x8981;&#x5355;&#x72EC;&#x4E0B;&#x8F7D;&#xFF0C;&#x51FA;&#x95E8;&#x5DE6;&#x8F6C;&#x53C2;&#x89C1;&#x300A;Anrdoid&#x6E90;&#x7801;&#x3001;&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x300B;&#x3002;&#x9A71;&#x52A8;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x5148;&#x4E0D;&#x5728;&#x8FD9;&#x91CC;&#x5C55;&#x5F00;&#x4E86;&#xFF0C;&#x90A3;&#x53C8;&#x662F;&#x4E00;&#x4E2A;&#x5E9E;&#x5927;&#x7684;&#x4F53;&#x7CFB;&#xFF0C;&#x4EE5;&#x540E;&#x518D;&#x5543;&#x3002;&#x76F4;&#x5954;&#x6211;&#x4EEC;&#x7684;&#x4E3B;&#x9898;&#x2014;&#x2014;&#x5BA2;&#x6237;&#x7AEF;&#x4E3A;test()&#x7EC4;&#x7EC7;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x662F;&#xFF1A; &#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x662F;&#x5982;&#x4F55;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x5305;&#x7684;&#x5462;&#xFF1F; # &#x4ECE;&#x5E94;&#x7528;&#x5C42;&#x767B;&#x9646;&#xFF0C;&#x987A;&#x6D41;&#x76F4;&#x4E0B; &#x4E3A;&#x6B64;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x5148;&#x4ECE;&#x5E94;&#x7528;&#x5C42;&#x5F80;&#x4E0B;&#x770B;&#xFF0C;frameworks/native/libs/binder/IPCThreadState.cpp:548&#xFF0C;&#x5C31;&#x4ECE;&#x8FD9;&#x91CC;&#x767B;&#x9646;&#x5427;&#x3002;&#x5BA2;&#x6237;&#x7AEF;&#x7EC4;&#x7EC7;test()&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x5230;IPCThreadState::transact(...) 123456789101112131415161718192021status_t IPCThreadState::transact(int32_t handle, uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code=TEST, flag=0 flags |= TF_ACCEPT_FDS; ...... err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, NULL); ...... if (reply) { err = waitForResponse(reply); // &#x8FD9;&#x6B21;&#x91CD;&#x70B9;&#x770B;&#x8FD9;&#x91CC; } else { Parcel fakeReply; err = waitForResponse(&amp;fakeReply); } ...... return err;} &#x51FD;&#x6570;&#x4F7F;&#x7528;writeTransactionData(&#x2026;)&#x6253;&#x5305;&#x597D;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8C03;&#x7528;waitForResponse(&#x2026;)&#x628A;&#x6570;&#x636E;&#x53D1;&#x51FA;&#x53BB;&#x3002; frameworks/native/libs/binder/IPCThreadState.cpp:712 12345678910111213status_t IPCThreadState::waitForResponse(Parcel *reply, status_t *acquireResult){ uint32_t cmd; int32_t err; while (1) { if ((err=talkWithDriver()) &lt; NO_ERROR) break; ...... } ...... return err;} &#x7EE7;&#x7EED;&#x8C03;&#x7528;talkWithDriver()&#x548C;&#x9A71;&#x52A8;&#x5BF9;&#x8BDD;,frameworks/native/libs/binder/IPCThreadState.cpp:803 1234567891011121314151617181920212223242526272829status_t IPCThreadState::talkWithDriver(bool doReceive){ // doReceive=true ...... binder_write_read bwr; ...... const bool needRead = mIn.dataPosition() &gt;= mIn.dataSize();// mIn&#x6709;&#x4E0A;&#x4E00;&#x8F6E;IO&#x8BFB;&#x51FA;&#x5C1A;&#x672A;&#x89E3;&#x6790;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x6B64;needRead=true ...... const size_t outAvail = (!doReceive || needRead) ? mOut.dataSize() : 0; // outAvail=mOut.dataSize() bwr.write_size = outAvail; bwr.write_buffer = (uintptr_t)mOut.data(); ...... if (doReceive &amp;&amp; needRead) { bwr.read_size = mIn.dataCapacity(); bwr.read_buffer = (uintptr_t)mIn.data(); } ...... bwr.write_consumed = 0; bwr.read_consumed = 0; status_t err; do { ...... if (ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr) &gt;= 0) // &#x91CD;&#x70B9;&#x5728;&#x8FD9; err = NO_ERROR; ...... } while (err == -EINTR); ...... return err;} doReceive&#x53D6;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;true&#xFF0C;&#x5728;&#x901A;&#x8FC7;test()&#x8C03;&#x7528;&#x5230;talkWithDriver(...)&#x4E4B;&#x524D;&#xFF0C;&#x548C;&#x9A71;&#x52A8;&#x7684;&#x5BF9;&#x8BDD;&#x5DF2;&#x7ECF;&#x505A;&#x4E86;&#x597D;&#x51E0;&#x8F6E;&#x4E86;&#xFF0C;&#x6BD4;&#x5982;defaultServiceManager()&#x548C;ServiceManager&#x7684;&#x5BF9;&#x8BDD;&#xFF0C;getService(...)&#x548C;Service&#x7684;&#x5BF9;&#x8BDD;&#xFF0C;&#x6B64;&#x65F6;mIn&#x4E2D;&#x5E94;&#x8BE5;&#x662F;&#x6709;&#x4E4B;&#x524D;&#x8BFB;&#x51FA;&#x5C1A;&#x672A;&#x89E3;&#x6790;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x6B64;needRead=true&#xFF0C;outAvail=mOut.dataSize()&#x3002;&#x53EF;&#x4EE5;&#x7EC4;&#x7EC7;&#x4E00;&#x4E2A;gdb&#x786E;&#x8BA4;mIn&#x6B64;&#x65F6;&#x7684;&#x5185;&#x5BB9;&#x3002; ## &#x7EC4;&#x7EC7;&#x4E00;&#x4E2A;gdb&#x786E;&#x8BA4;&#x6B64;&#x65F6;mIn&#x7684;&#x5185;&#x5BB9; &#x9700;&#x8981;&#x5F00;&#x542F;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#x5B8C;&#x6210;&#x8C03;&#x8BD5;&#xFF1A; 1. Target1 &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x542F;&#x52A8;server 1$ adb shell /data/local/tmp/testservice/TestServer Target2 &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x901A;&#x8FC7;gdbserver&#x542F;&#x52A8;&#x5BA2;&#x6237;&#x7AEF; 1234$ adb shell gdbserver :1234 /data/local/tmp/testservice/TestClientProcess /data/local/tmp/testservice/TestClient created; pid = 1254Listening on port 1234Remote debugging from host 127.0.0.1 Host1 &#x5728;&#x5BBF;&#x4E3B;&#x7AEF;&#x542F;&#x52A8;gdb 12345678910111213141516171819202122232425262728293031323334$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient......(gdb) b mainBreakpoint 1 at 0xb6f571fc: file external/testservice/TestClient.cpp, line 14.(gdb) cContinuing.......(gdb) set solib-absolute-prefix out/debug/target/product/generic/symbols/Reading symbols from ...... linker...done.......Loaded symbols for ............(gdb) b IPCThreadState.cpp:846 # &#x5728;talkWithDriver(...)&#x5185;&#x4E0B;&#x65AD;&#x70B9;Breakpoint 2 at 0xb6eaf884: file frameworks/native/libs/binder/IPCThreadState.cpp, line 846.(gdb) c......# &#x7136;&#x540E;&#x5C31;&#x662F;&#x82E5;&#x5E72;&#x8F6E;&#x7684;continue&#x548C;backtrace&#xFF0C;&#x76F4;&#x5230;&#x505C;&#x5728;&#x7531;test()&#x8C03;&#x7528;&#x89E6;&#x53D1;&#x7684;talkWithDriver(...)......Breakpoint 2, android::IPCThreadState::talkWithDriver (this=this@entry=0xb6c24000, doReceive=doReceive@entry=true) at frameworks/native/libs/binder/IPCThreadState.cpp:846846 if ((bwr.write_size == 0) &amp;&amp; (bwr.read_size == 0)) return NO_ERROR;(gdb) bt#0 android::IPCThreadState::talkWithDriver (this=this@entry=0xb6c24000, doReceive=doReceive@entry=true) at frameworks/native/libs/binder/IPCThreadState.cpp:846#1 0xb6eafed2 in android::IPCThreadState::waitForResponse (this=0xb6c24000, reply=0xbeaa1ad4, acquireResult=0x0) at frameworks/native/libs/binder/IPCThreadState.cpp:718#2 0xb6eb0088 in android::IPCThreadState::transact (this=0xb6c24000, handle=1, code=code@entry=1, data=..., reply=reply@entry=0xbeaa1ad4, flags=16, flags@entry=0) at frameworks/native/libs/binder/IPCThreadState.cpp:604#3 0xb6eab08e in android::BpBinder::transact (this=0xb6c090c0, code=1, data=..., reply=0xbeaa1ad4, flags=0) at frameworks/native/libs/binder/BpBinder.cpp:165#4 0xb6f3e42e in android::BpTestService::test (this=&lt;optimized out&gt;) at external/testservice/TestClient.cpp:10#5 0xb6f3e23c in main () at external/testservice/TestClient.cpp:18(gdb) p mIn$1 = {mError = 0, mData = 0xb6c27000 &quot;\fr&quot;, mDataSize = 48, mDataCapacity = 256, mDataPos = 48, mObjects = 0x0, mObjectsSize = 0, mObjectsCapacity = 0, mNextObjectHint = 0, mFdsKnown = true, mHasFds = false, mAllowFds = true, mOwner = 0x0, mOwnerCookie = 0x0, mOpenAshmemSize = 0}(gdb) p needRead$2 = true# &#x7ED3;&#x679C;&#x548C;&#x6211;&#x731C;&#x6D4B;&#x7684;&#x4E00;&#x81F4; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x5728;IPCThreadState::talkWithDriver(...)&#x4E2D;&#x8C03;&#x7528; 1ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;brw) &#x4F20;&#x5165;&#x7684;&#x6570;&#x636E;bwr&#x5373;&#x4E3A;&#xFF1A; # &#x8FDB;&#x5165;&#x9A71;&#x52A8;&#x5C42; &#x7EC8;&#x4E8E;&#x53EF;&#x4EE5;&#x6709;&#x6B64;&#x7A7F;&#x8D8A;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x4E86;&#xFF01;binder&#x9A71;&#x52A8;&#x5C42;&#x5BF9;&#x63A5;ioctl&#x7684;&#x51FD;&#x6570;&#x662F;binder_ioctl(...)&#x3002;kernel/goldfish/drivers/staging/android/binder.c:2716 123456789101112131415161718192021222324252627282930313233343536373839404142static long binder_ioctl(struct file *filp, unsigned int cmd, unsigned long arg){ // cmd=BINDER_WRITE_READ int ret; struct binder_proc *proc = filp-&gt;private_data; struct binder_thread *thread; unsigned int size = _IOC_SIZE(cmd); void __user *ubuf = (void __user *)arg; ...... thread = binder_get_thread(proc); ...... switch (cmd) { case BINDER_WRITE_READ: { struct binder_write_read bwr; ...... if (copy_from_user(&amp;bwr, ubuf, sizeof(bwr))) {// &#x628A;&#x4E0A;&#x56FE;&#x603B;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;bwr&#x590D;&#x5236;&#x5230;&#x5185;&#x6838; ...... } ...... if (bwr.write_size &gt; 0) { ret = binder_thread_write(proc, thread, (void __user *)bwr.write_buffer, bwr.write_size, &amp;bwr.write_consumed); trace_binder_write_done(ret); ...... } // bwr.read_size&#x6765;&#x81EA;IPCThreadState::talkWithDriver&#xFF0C;&#x5F53;&#x8BFB;&#x7F13;&#x51B2;&#x533A;&#x4E3A;&#x7A7A;&#xFF0C;&#x4F1A;&#x5C06; // mIn&#x7F13;&#x51B2;&#x533A;&#x4EA4;&#x7ED9;&#x5B83;&#xFF0C;bwr.read_size=mIn.dataCapacity() if (bwr.read_size &gt; 0) { ret = binder_thread_read(proc, thread, (void __user *)bwr.read_buffer, bwr.read_size, &amp;bwr.read_consumed, filp-&gt;f_flags &amp; O_NONBLOCK); trace_binder_read_done(ret); if (!list_empty(&amp;proc-&gt;todo)) wake_up_interruptible(&amp;proc-&gt;wait); ... ... } ...... } ...... } ret = 0;...... return ret;} &#x5148;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x526A;&#x6389;&#x7EC6;&#x679D;&#x672B;&#x8282;&#xFF0C;&#x6765;&#x770B;&#x91CD;&#x70B9;&#x8C03;&#x7528; 12binder_thread_write(proc, thread, (void __user *)bwr.write_buffer, bwr.write_size, &amp;bwr.write_consumed); kernel/goldfish/drivers/staging/android/binder.c:1837 1234567891011121314151617181920212223242526272829303132333435int binder_thread_write(struct binder_proc *proc, struct binder_thread *thread, void __user *buffer, int size, signed long *consumed){ uint32_t cmd; void __user *ptr = buffer + *consumed; void __user *end = buffer + size; while (ptr &lt; end &amp;&amp; thread-&gt;return_error == BR_OK) { if (get_user(cmd, (uint32_t __user *)ptr)) return -EFAULT; ptr += sizeof(uint32_t); trace_binder_command(cmd); if (_IOC_NR(cmd) &lt; ARRAY_SIZE(binder_stats.bc)) { binder_stats.bc[_IOC_NR(cmd)]++; proc-&gt;stats.bc[_IOC_NR(cmd)]++; thread-&gt;stats.bc[_IOC_NR(cmd)]++; } switch (cmd) { ...... case BC_TRANSACTION: case BC_REPLY: { struct binder_transaction_data tr; if (copy_from_user(&amp;tr, ptr, sizeof(tr))) return -EFAULT; ptr += sizeof(tr); // &#x5BF9;&#x7167;&#x524D;&#x9762;&#x7684;&#x56FE;&#x9006;&#x5411;&#x62C6;&#x89E3; binder_transaction(proc, thread, &amp;tr, cmd == BC_REPLY); break; } ...... } *consumed = ptr - buffer; } return 0;} &#x8FD9;&#x4E2A;cmd&#x7684;&#x503C;&#x662F;BC_TRANSACTION&#xFF0C;&#x56E0;&#x6B64;&#x5E94;&#x8BE5;&#x7EE7;&#x7EED;binder_transaction(proc, thread, &amp;tr, false)&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5B9E;&#x5728;&#x592A;&#x957F;&#x4E86;&#xFF0C;&#x540E;&#x9762;&#x518D;&#x82B1;&#x4E00;&#x8282;&#x7684;&#x7BC7;&#x5E45;&#x6DF1;&#x5165;&#x8BE5;&#x51FD;&#x6570;&#x3002; &#x4E0D;&#x8FC7;&#x5F88;&#x6E05;&#x6670;&#x7684;&#x4E00;&#x70B9;&#xFF1A;&#x8BE5;&#x51FD;&#x6570;&#x4EC5;&#x5728;&#x51FA;&#x9519;&#x7684;&#x65F6;&#x5019;&#x624D;&#x8FD4;&#x56DE;&#x5C0F;&#x4E8E;&#x96F6;&#x7684;&#x6574;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x5207;&#x6B63;&#x5E38;&#x5C31;&#x8FD4;&#x56DE;0&#x3002;&#x51FD;&#x6570;binder_ioctl(...)&#x5728;case BINDER_WRITE_READ&#x8FD9;&#x4E00;&#x679D;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;binder_thread_write(...)&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF1A;&#x5982;&#x679C;&#x4E00;&#x5207;&#x6B63;&#x5E38;&#xFF0C;binder_ioctl(...)&#x4F1A;&#x8FD4;&#x56DE;0&#xFF0C;&#x4E0D;&#x7BA1;io&#x7684;&#x6570;&#x636E;&#x6709;&#x591A;&#x5927;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小雨点第一次参加钢琴比赛]]></title>
    <url>%2F2016%2F05%2F21%2F2016%2F0521%E5%B0%8F%E9%9B%A8%E7%82%B9%E5%8F%82%E5%8A%A0%E9%92%A2%E7%90%B4%E6%AF%94%E8%B5%9B%2F</url>
    <content type="text"><![CDATA[&#x8FD9;&#x662F;&#x5C0F;&#x96E8;&#x70B9;&#x7B2C;&#x4E00;&#x6B21;&#x53C2;&#x52A0;&#x6BD4;&#x8D5B;&#xFF0C;&#x4E0A;&#x53F0;&#x4E00;&#x70B9;&#x90FD;&#x4E0D;&#x7D27;&#x5F20;&#xFF0C;&#x53D1;&#x6325;&#x51FA;&#x4E86;&#x6B63;&#x5E38;&#x6C34;&#x5E73;&#x3002;&#x53EA;&#x662F;&#x8E0F;&#x677F;&#x8E29;&#x4E0D;&#x4E0B;&#x53BB;&#xFF0C;&#x6240;&#x4EE5;&#x5168;&#x7A0B;&#x90FD;&#x6CA1;&#x6709;&#x7528;&#x5EF6;&#x97F3;&#x8E0F;&#x677F;&#x3002; &#x5BB6;&#x957F;&#x53EA;&#x80FD;&#x966A;&#x5C0F;&#x9009;&#x624B;&#x89C2;&#x6469;&#x90BB;&#x8FD1;&#x81EA;&#x5DF1;&#x524D;&#x540E;&#x7684;&#x5341;&#x6765;&#x4E2A;&#x9009;&#x624B;&#xFF0C;&#x6709;&#x51E0;&#x4E2A;&#x300A;&#x6625;&#x4E4B;&#x6B4C;&#x300B;&#x3001;&#x300A;&#x5C0F;&#x6B65;&#x821E;&#x66F2;&#x300B;&#x3001;&#x300A;&#x6625;&#x5929;&#x5728;&#x54EA;&#x91CC;&#x300B;&#x548C;&#x300A;&#x90CA;&#x6E38;&#x300B;&#xFF0C;&#x96BE;&#x5EA6;&#x90FD;&#x6BD4;&#x300A;&#x732E;&#x7ED9;&#x7231;&#x4E3D;&#x4E1D;&#x300B;&#x4F4E;&#x4E00;&#x4E9B;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x5F88;&#x6709;&#x5E0C;&#x671B;&#x51B2;&#x5165;&#x51B3;&#x8D5B;&#x54D2;:) &#x5C0F;&#x96E8;&#x70B9;2014&#x5E74;8&#x6708;&#x5F00;&#x59CB;&#x5B66;&#x7434;&#xFF0C;15&#x5E74;6&#x6708;&#x8FC7;&#x4E86;2&#x7EA7;&#xFF0C;&#x4ECA;&#x5E74;7&#x6708;&#x8981;&#x8003;5&#x7EA7;&#x4E86;&#xFF0C;&#x662F;&#x73ED;&#x91CC;&#x5F39;&#x7434;&#x6700;&#x68D2;&#x7684;&#x5B66;&#x751F;&#x3002;&#x800C;&#x4E14;&#x5B66;&#x7434;&#x8FD9;&#x4E8B;&#x513F;&#x5E76;&#x6CA1;&#x6709;&#x8BA9;&#x5979;&#x89C9;&#x5F97;&#x5F88;&#x75DB;&#x82E6;&#xFF0C;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x3002;&#x53EA;&#x6709;&#x6700;&#x521D;&#x7684;&#x4E24;&#x4E2A;&#x6708;&#xFF0C;&#x524D;&#x4E24;&#x5468;&#x6BD4;&#x8F83;&#x65B0;&#x9C9C;&#xFF0C;&#x4E4B;&#x540E;&#x6709;&#x4E86;&#x96BE;&#x5EA6;&#x6709;&#x70B9;&#x575A;&#x6301;&#x4E0D;&#x4F4F;&#xFF0C;&#x8FC7;&#x4E86;&#x6700;&#x521D;&#x7684;&#x4E24;&#x4E2A;&#x6708;&#xFF0C;&#x8BC6;&#x8C31;&#x5B8C;&#x5168;&#x6CA1;&#x969C;&#x788D;&#x4E86;&#xFF0C;&#x6BCF;&#x5929;&#x7EC3;&#x7434;&#x6210;&#x4E3A;&#x5979;&#x7684;&#x4E60;&#x60EF;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x5468;&#x672B;&#x7238;&#x7238;&#x5988;&#x5988;&#x4E0D;&#x5728;&#x5BB6;&#xFF0C;&#x5230;&#x4E86;&#x4E0B;&#x5348;&#x56DB;&#x70B9;&#x5979;&#x81EA;&#x5DF1;&#x4F1A;&#x505C;&#x4E0B;&#x540E;&#x91CC;&#x7684;&#x73A9;&#x5177;&#xFF0C;&#x81EA;&#x5DF1;&#x5750;&#x5728;&#x7434;&#x51F3;&#x4E0A;&#x7EC3;&#x4E60;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x3002; &#x5E73;&#x65F6;&#x6211;&#x6BD4;&#x8F83;&#x5FD9;&#xFF0C;&#x6CA1;&#x65F6;&#x95F4;&#x966A;&#x5979;&#xFF0C;&#x4F46;&#x662F;&#x5468;&#x672B;&#x4E00;&#x5B9A;&#x662F;&#x6211;&#x966A;&#x5979;&#x7EC3;&#x7434;&#x3002;&#x6709;&#x65F6;&#x5019;&#x65E2;&#x8981;&#x51C6;&#x5907;&#x671F;&#x672B;&#x6C47;&#x62A5;&#x6F14;&#x51FA;&#xFF0C;&#x53C8;&#x8981;&#x51C6;&#x5907;&#x8003;&#x7EA7;&#xFF0C;&#x8FD8;&#x8981;&#x517C;&#x987E;&#x65E5;&#x5E38;&#x7684;&#x7EC3;&#x4E60;&#xFF0C;&#x5E38;&#x5E38;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x7EC3;&#x4E0D;&#x5B8C;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x534A;&#x5230;&#x4FE9;&#x5C0F;&#x65F6;&#xFF0C;&#x6211;&#x95EE;&#x5979;&#xFF1A;&#x201C;&#x6BCF;&#x5929;&#x8FD9;&#x4E48;&#x7EC3;&#x7434;&#x89C9;&#x5F97;&#x70E6;&#x5417;&#xFF1F;&#x201D;&#xFF0C;&#x5979;&#x603B;&#x662F;&#x5F88;&#x8BE7;&#x5F02;&#x5730;&#x95EE;&#x6211;&#xFF1A;&#x201C;&#x600E;&#x4E48;&#x4F1A;&#x70E6;&#x5462;&#xFF1F;&#x201D;&#x6211;&#x5185;&#x5FC3;&#x91CC;&#x8FD8;&#x662F;&#x633A;&#x4F69;&#x670D;&#x95FA;&#x5973;&#x7684;&#x3002; &#x603B;&#x7ED3;&#x8D77;&#x6765;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x5C0F;&#x96E8;&#x70B9;&#x5B66;&#x7434;&#x4F18;&#x79C0;&#x6709;&#x51E0;&#x4E2A;&#x5173;&#x952E;&#x7684;&#x56E0;&#x7D20;&#xFF1A; 1. &#x559C;&#x6B22;&#x94A2;&#x7434;&#x3002;&#x4ECE;&#x51FA;&#x751F;&#x4E0D;&#x4E45;&#xFF0C;&#x6211;&#x5C31;&#x7ED9;&#x5979;&#x770B;&#x4E45;&#x77F3;&#x8BA9;&#x7684;&#x97F3;&#x4E50;&#x4F1A;&#xFF0C;&#x914D;&#x7740;&#x52A8;&#x753B;&#x7247;&#x7684;&#x7247;&#x6BB5;&#xFF0C;&#x5979;&#x770B;&#x5F97;&#x6D25;&#x6D25;&#x6709;&#x5473;&#x3002;&#x540E;&#x6765;&#x5927;&#x4E00;&#x4E9B;&#xFF0C;&#x6211;&#x7ED9;&#x5979;&#x73A9;&#x6211;&#x7684;&#x7535;&#x94A2;&#x7434;&#x3001;&#x6211;&#x7684;&#x5C24;&#x514B;&#x91CC;&#x91CC;&#xFF0C;&#x5C3D;&#x7BA1;&#x662F;&#x80E1;&#x4E71;&#x5F39;&#x594F;&#xFF0C;&#x4E5F;&#x80FD;&#x8FD1;&#x8DDD;&#x79BB;&#x7684;&#x89E6;&#x6478;&#x5230;&#x97F3;&#x4E50;&#x3002; 2. &#x6709;&#x4E00;&#x4E2A;&#x5979;&#x559C;&#x6B22;&#x7684;&#x94A2;&#x7434;&#x8001;&#x5E08;&#x3002;&#x5E7C;&#x513F;&#x56ED;&#x91CC;&#x5979;&#x6700;&#x559C;&#x6B22;&#x7684;&#x8001;&#x5E08;&#x5C31;&#x662F;&#x94A2;&#x7434;&#x8001;&#x5E08;&#xFF0C;&#x4E5F;&#x7B97;&#x662F;&#x7231;&#x5C4B;&#x53CA;&#x4E4C;&#x5427;&#x3002; 3. &#x5B66;&#x7434;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#x7EC3;&#x4E60;&#x3002;&#x4E3A;&#x4E86;&#x8BA9;&#x6BCF;&#x5929;&#x4FDD;&#x8BC1;&#x6709;&#x56DB;&#x5341;&#x4E94;&#x5206;&#x949F;&#x7684;&#x7EC3;&#x4E60;&#xFF0C;&#x6211;&#x7ED9;&#x5979;&#x4E70;&#x4E86;&#x54ED;&#x8138;&#x3001;&#x7B11;&#x8138;&#x5370;&#x7AE0;&#xFF0C;&#x6211;&#x8DDF;&#x5979;&#x8BF4;&#x6BCF;&#x5929;&#x5B8C;&#x6210;&#x7EC3;&#x4E60;&#x5C31;&#x4F1A;&#x5F97;&#x4E00;&#x4E2A;&#x7B11;&#x8138;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x7ED9;&#x54ED;&#x8138;&#x3002;&#x5979;&#x5F88;&#x770B;&#x91CD;&#x8FD9;&#x4E2A;&#xFF0C;&#x521D;&#x671F;&#x7684;&#x65F6;&#x5019;&#x786E;&#x5B9E;&#x5F88;&#x96BE;&#x575A;&#x6301;&#xFF0C;&#x4E5F;&#x4F1A;&#x6389;&#x773C;&#x6CEA;&#x3002;&#x4F46;&#x5373;&#x4F7F;&#x6389;&#x773C;&#x6CEA;&#x4E5F;&#x8981;&#x5F97;&#x7B11;&#x8138;&#x3002;&#x8FC7;&#x4E86;&#x6700;&#x521D;&#x7684;&#x4E24;&#x4E09;&#x4E2A;&#x6708;&#xFF0C;&#x4EE5;&#x540E;&#x7684;&#x7EC3;&#x7434;&#x5C31;&#x518D;&#x4E5F;&#x6CA1;&#x54ED;&#x8FC7;&#x4E86;&#x3002;&#x800C;&#x4E14;&#x8001;&#x5E08;&#x5E03;&#x7F6E;&#x7684;&#x4F5C;&#x4E1A;&#x4E00;&#x76F4;&#x4E0D;&#x5C11;&#xFF0C;&#x4E3A;&#x4E86;&#x5B8C;&#x6210;&#x4F5C;&#x4E1A;&#xFF0C;&#x6BCF;&#x5929;&#x7EC3;&#x4E60;&#x7684;&#x65F6;&#x95F4;&#x5E38;&#x5E38;&#x8981;&#x5927;&#x4E8E;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x3002;&#x4F46;&#x6211;&#x8FD8;&#x662F;&#x4F1A;&#x63A7;&#x5236;&#xFF0C;&#x5373;&#x4F7F;&#x6CA1;&#x7EC3;&#x5B8C;&#xFF0C;&#x8D85;&#x8FC7;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#x5341;&#x4E94;&#x5206;&#x949F;&#x4E5F;&#x4E0D;&#x7EC3;&#x4E86;&#x3002; 4. &#x8054;&#x7CFB;&#x6700;&#x91CD;&#x8981;&#x662F;&#x65B9;&#x6CD5;&#x3002;&#x6211;&#x81EA;&#x5DF1;&#x5B66;&#x8FC7;&#x4E24;&#x5E74;&#x7684;&#x94A2;&#x7434;&#xFF0C;&#x6211;&#x4F1A;&#x786E;&#x4FDD;&#x5979;&#x7684;&#x7EC3;&#x4E60;&#x65B9;&#x6CD5;&#x662F;&#x6B63;&#x786E;&#x3001;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x4E0D;&#x8D70;&#x5F2F;&#x8DEF;&#x3002;&#x521D;&#x671F;&#x5B66;&#x4E60;&#x4E94;&#x7EBF;&#x8C31;&#xFF0C;&#x5C31;&#x6574;&#x5929;&#x7ED9;&#x5979;&#x5728;&#x5C0F;&#x9ED1;&#x677F;&#x4E0A;&#x753B;&#x4E94;&#x7EBF;&#x8C31;&#xFF0C;&#x95EE;&#x5979;&#x662F;&#x4EC0;&#x4E48;&#x97F3;&#xFF0C;&#x6709;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5979;&#x81EA;&#x5DF1;&#x90FD;&#x559C;&#x6B22;&#x753B;&#xFF0C;&#x7136;&#x540E;&#x8003;&#x6211;&#x548C;&#x5988;&#x5988;&#xFF0C;&#x5B69;&#x5B50;&#x7684;&#x8BB0;&#x5FC6;&#x529B;&#x662F;&#x60CA;&#x4EBA;&#x7684;&#xFF0C;&#x5F88;&#x5FEB;&#x5C31;&#x628A;&#x8BC6;&#x8C31;&#x8FD9;&#x4E00;&#x5173;&#x8FC7;&#x4E86;&#x3002;&#x4E00;&#x5B9A;&#x8981;&#x7528;&#x8282;&#x62CD;&#x5668;&#xFF0C;&#x800C;&#x4E14;&#x8981;&#x7528;&#x65E0;&#x7EA7;&#x53D8;&#x901F;&#x7684;&#xFF0C;&#x968F;&#x65F6;&#x6839;&#x636E;&#x5979;&#x7684;&#x8FDB;&#x5C55;&#x8C03;&#x6574;&#x901F;&#x5EA6;&#x3002;&#x57FA;&#x7840;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x6BCF;&#x5929;&#x9996;&#x5148;&#x54C8;&#x519C;&#x3001;&#x97F3;&#x9636;&#x70ED;&#x8EAB;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5F00;&#x59CB;&#x66F2;&#x76EE;&#x7EC3;&#x4E60;&#x3002;&#x5173;&#x6CE8;&#x5979;&#x7684;&#x6307;&#x5F62;&#x3001;&#x6307;&#x6CD5;&#x3001;&#x97F3;&#x51C6;&#x3001;&#x8282;&#x594F;&#xFF0C;&#x6709;&#x4E86;&#x9519;&#x8BEF;&#x53CA;&#x65F6;&#x6307;&#x51FA;&#xFF0C;&#x6539;&#x6B63;&#x3002; &#x5C0F;&#x96E8;&#x70B9;&#x7EE7;&#x627F;&#x4E86;&#x6211;&#x6700;&#x5927;&#x7684;&#x4F18;&#x70B9;&#x5C31;&#x662F;&#x80FD;&#x575A;&#x6301;&#xFF0C;&#x5DE5;&#x4F5C;&#x4EE5;&#x540E;&#x6211;&#x4E5F;&#x66FE;&#x8DDF;&#x8001;&#x5E08;&#x5B66;&#x8FC7;&#x4E24;&#x5E74;&#x7684;&#x94A2;&#x7434;&#xFF0C;&#x6BCF;&#x5929;&#x65E9;&#x4E0A;&#x53BB;&#x7434;&#x623F;&#x7EC3;&#x4E60;&#x4E00;&#x4E2A;&#x5C0F;&#x65F6;&#xFF0C;&#x98CE;&#x96E8;&#x65E0;&#x963B;&#xFF0C;&#x4ECE;&#x6765;&#x6CA1;&#x95F4;&#x65AD;&#x8FC7;&#x3002;&#x540E;&#x6765;&#x5C0F;&#x96E8;&#x70B9;&#x51FA;&#x751F;&#xFF0C;&#x6211;&#x5C31;&#x518D;&#x4E5F;&#x62BD;&#x4E0D;&#x51FA;&#x65F6;&#x95F4;&#x5B66;&#x7434;&#xFF0C;&#x53EA;&#x597D;&#x4E2D;&#x65AD;&#x4E86;&#x3002;&#x518D;&#x540E;&#x6765;&#x6211;&#x7684;&#x5DE5;&#x4F5C;&#x5C31;&#x8D8A;&#x6765;&#x8D8A;&#x5FD9;&#xFF0C;&#x5BB6;&#x4F19;&#x4E8B;&#x513F;&#x4E70;&#x7684;&#x633A;&#x591A;&#xFF1A;&#x7535;&#x94A2;&#x3001;&#x5C0F;U&#x3001;&#x5409;&#x4ED6;&#xFF0C;&#x53EF;&#x662F;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x80FD;&#x771F;&#x6B63;&#x6361;&#x8D77;&#x6765;&#x3002;&#x771F;&#x5E0C;&#x671B;&#x6709;&#x4E00;&#x5929;&#x81EA;&#x7531;&#x4E86;&#xFF0C;&#x80FD;&#x7528;&#x7F16;&#x7A0B;&#x548C;&#x97F3;&#x4E50;&#x8FD9;&#x4E24;&#x4E2A;&#x6211;&#x559C;&#x6B22;&#x7684;&#x4E8B;&#x513F;&#x586B;&#x6EE1;&#x6211;&#x7684;&#x751F;&#x6D3B;&#x3002;]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（九）—— 服务端如何响应Test()请求？]]></title>
    <url>%2F2016%2F05%2F15%2F2016%2F0514BinderLearning9%2F</url>
    <content type="text"><![CDATA[&#x4ECE;&#x670D;&#x52A1;&#x7AEF;&#x4EE3;&#x7801;&#x51FA;&#x53D1;&#xFF0C;TestServer.cpp 12345678int main() { sp &lt; ProcessState &gt; proc(ProcessState::self()); sp &lt; IServiceManager &gt; sm = defaultServiceManager(); sm-&gt;addService(String16(&quot;service.testservice&quot;), new BnTestService()); ProcessState::self()-&gt;startThreadPool(); IPCThreadState::self()-&gt;joinThreadPool(); return 0;} &#x524D;&#x4E09;&#x884C;&#x4EE3;&#x7801;&#x5728;&#x4E4B;&#x524D;&#x7684;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#x7CFB;&#x5217;&#x4E2D;&#x90FD;&#x5206;&#x6790;&#x8FC7;&#x4E86;&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;&#x3002; # ProcessState::self()-&gt;startThreadPool()&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; frameworks/native/libs/binder/ProcessState.cpp:132 12345678void ProcessState::startThreadPool(){ AutoMutex _l(mLock); if (!mThreadPoolStarted) { mThreadPoolStarted = true; spawnPooledThread(true); }} &#x7EE7;&#x7EED;spawnPooledThread(true)&#xFF0C;frameworks/native/libs/binder/ProcessState.cpp:286 123456789void ProcessState::spawnPooledThread(bool isMain){ if (mThreadPoolStarted) { String8 name = makeBinderThreadName(); ALOGV(&quot;Spawning new pooled thread, name=%s\n&quot;, name.string()); sp&lt;Thread&gt; t = new PoolThread(isMain); t-&gt;run(name.string()); }} PoolThread&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x7C7B;&#xFF0C;&#x6682;&#x65F6;&#x5148;&#x4E0D;&#x53BB;&#x6DF1;&#x7A76;&#xFF0C;&#x5B83;&#x7684;run(...)&#x51FD;&#x6570;&#x6700;&#x7EC8;&#x4F1A;&#x843D;&#x5B9E;&#x5230;&#x7EBF;&#x7A0B;&#x51FD;&#x6570;threadLoop()&#x7684;&#x8C03;&#x7528;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5F88;&#x7B80;&#x5355;,frameworks/native/libs/binder/ProcessState.cpp:61 1234567891011class PoolThread : public Thread{......protected: virtual bool threadLoop() { IPCThreadState::self()-&gt;joinThreadPool(mIsMain); return false; } ......}; &#x5B83;&#x8C03;&#x5230;&#x4E86;IPCThreadState::joinThreadPool(true);&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5728;main&#x51FD;&#x6570;&#x4E2D;&#x63A5;&#x4E0B;&#x6765;&#x4E5F;&#x88AB;&#x8C03;&#x5230;&#x4E86;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x5E76;&#x6848;&#x8C03;&#x67E5;&#x5427;&#x3002; # IPCThreadState::self()-&gt;joinThreadPool(...)&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; frameworks/native/libs/binder/IPCThreadState.cpp:477 12345678910111213141516171819202122void IPCThreadState::joinThreadPool(bool isMain){ ...... mOut.writeInt32(isMain ? BC_ENTER_LOOPER : BC_REGISTER_LOOPER); ...... status_t result; do { processPendingDerefs(); // &#x5904;&#x7406;&#x4E0A;&#x6B21;&#x5FAA;&#x73AF;&#x5C1A;&#x672A;&#x5B8C;&#x6210;&#x7684;&#x5185;&#x5BB9; // now get the next command to be processed, waiting if necessary result = getAndExecuteCommand(); // &#x91CD;&#x70B9;&#x770B;&#x8FD9;&#x91CC; ...... if(result == TIMED_OUT &amp;&amp; !isMain) { break; } } while (result != -ECONNREFUSED &amp;&amp; result != -EBADF); ...... mOut.writeInt32(BC_EXIT_LOOPER); talkWithDriver(false);} frameworks/native/libs/binder/IPCThreadState.cpp:414 1234567891011121314status_t IPCThreadState::getAndExecuteCommand(){ status_t result; int32_t cmd; result = talkWithDriver(); // &#x8FD9;&#x91CC;&#x5B8C;&#x6210;&#x4E00;&#x6B21;&#x5BF9;binder&#x7684;IO ...... size_t IN = mIn.dataAvail(); if (IN &lt; sizeof(int32_t)) return result; cmd = mIn.readInt32(); ...... result = executeCommand(cmd); ...... return result;} &#x4E5F;&#x662F;&#x4E00;&#x4E2A;IO-&#x89E3;&#x6790;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x91CD;&#x70B9;&#x6765;&#x770B;&#x89E3;&#x6790;executeCommand(...)&#xFF0C;frameworks/native/libs/binder/IPCThreadState.cpp:947 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667status_t IPCThreadState::executeCommand(int32_t cmd){ BBinder* obj; RefBase::weakref_type* refs; status_t result = NO_ERROR; switch ((uint32_t)cmd) { ...... case BR_TRANSACTION: { binder_transaction_data tr; result = mIn.read(&amp;tr, sizeof(tr)); ...... Parcel buffer; buffer.ipcSetDataReference( reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer), tr.data_size, reinterpret_cast&lt;const binder_size_t*&gt;(tr.data.ptr.offsets), tr.offsets_size/sizeof(binder_size_t), freeBuffer, this); const pid_t origPid = mCallingPid; const uid_t origUid = mCallingUid; const int32_t origStrictModePolicy = mStrictModePolicy; const int32_t origTransactionBinderFlags = mLastTransactionBinderFlags; mCallingPid = tr.sender_pid; mCallingUid = tr.sender_euid; mLastTransactionBinderFlags = tr.flags; ...... Parcel reply; status_t error; ...... if (tr.target.ptr) { sp&lt;BBinder&gt; b((BBinder*)tr.cookie); // &#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x91CC;&#x662F;&#x91CD;&#x70B9;&#xFF01;&#xFF01;&#xFF01; error = b-&gt;transact(tr.code, buffer, &amp;reply, tr.flags); } else { error = the_context_object-&gt;transact(tr.code, buffer, &amp;reply, tr.flags); } if ((tr.flags &amp; TF_ONE_WAY) == 0) { ...... sendReply(reply, 0); } ...... mCallingPid = origPid; mCallingUid = origUid; mStrictModePolicy = origStrictModePolicy; mLastTransactionBinderFlags = origTransactionBinderFlags; ...... } break; ...... } ...... return result;} tr.cookie&#x662F;&#x4EC0;&#x4E48;&#x73A9;&#x610F;&#xFF1F;&#x6211;&#x4EEC;&#x56DE;&#x5230;&#x300A;&#x5BA2;&#x6237;&#x7AEF;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;Test()&#x8BF7;&#x6C42; &#xFF1F;&#x300B;&#x672B;&#x5C3E;&#x90A3;&#x5F20;&#x56FE;&#x4E0A;&#xFF0C;&#x6B64;&#x65F6;&#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;&#x7684;tr&#x5C31;&#x5E94;&#x8BE5;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;test&#x65F6;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x662F;&#x90A3;&#x5F20;&#x56FE;&#x91CC;cookie&#x660E;&#x660E;&#x662F;0&#x5440;&#xFF1F;&#x600E;&#x4E48;&#x53EF;&#x80FD;&#x7528;&#x7A7A;&#x6307;&#x9488;&#x6765;&#x521D;&#x59CB;&#x5316;sp&#x5462;&#xFF1F;&#x800C;&#x4E14;&#x540E;&#x9762;&#x8FD8;&#x6709;&#x5BF9;&#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x7684;&#x8C03;&#x7528;&#xFF01; &#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x7684;test&#x8BF7;&#x6C42;&#x4E2D;tr.cookie&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x4E3A;&#x4E86;&#x786E;&#x8BA4;&#x90A3;&#x5F20;&#x56FE;&#x4E2D;cookie&#x7684;&#x6B63;&#x786E;&#x6027;&#xFF0C;&#x6211;&#x7528;gdb&#x8C03;&#x8BD5;&#x5230;&#x6E90;&#x7801;&#x5185;&#x90E8;&#xFF0C;&#x8FD9;&#x662F;&#x80FD;&#x5F97;&#x5230;&#x6700;&#x786E;&#x51FF;&#x7ED3;&#x8BBA;&#x7684;&#x65B9;&#x6CD5;&#x3002; * &#x90E8;&#x7F72;&#x73AF;&#x5883; &#x7F16;&#x8BD1;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x4E00;&#xFF09;&#x300B;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x6211;&#x5C06;&#x8BE5;&#x4EE3;&#x7801;&#x653E;&#x5230;&#x4E86;android&#x6E90;&#x7801;&#x7684;external/testservice&#x4E0B;&#xFF0C;&#x6267;&#x884C; 1234567$ mmm external/testservice$ emulator&amp; # &#x542F;&#x52A8;&#x6A21;&#x62DF;&#x5668;&#xFF0C;&#x628A;&#x7F16;&#x8BD1;&#x51FA;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x5230;&#x6A21;&#x62DF;&#x5668;&#x5E76;&#x4FEE;&#x6539;&#x53EF;&#x6267;&#x884C;&#x6743;&#x9650;$ adb shell mkdir /data/local/tmp/testservice$ adb push prebuilts/misc/android-arm/gdbserver/ /data/local/tmp/testservice$ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestServer_intermediates/LINKED/TestServer /data/local/tmp/testservice$ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient /data/local/tmp/testservice$ adb shell chmod 755 /data/local/tmp/testservice/* &#x8C03;&#x8BD5; &#x9700;&#x8981;&#x5F00;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#xFF1A; Target1 &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x542F;&#x52A8;server 1$ adb shell /data/local/tmp/testservice/TestServer Target2 &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x901A;&#x8FC7;gdbserver&#x542F;&#x52A8;&#x5BA2;&#x6237;&#x7AEF; 1234$ adb shell gdbserver :1234 /data/local/tmp/testservice/TestClientProcess /data/local/tmp/testservice/TestClient created; pid = 1254Listening on port 1234Remote debugging from host 127.0.0.1 Host1 &#x5728;&#x5BBF;&#x4E3B;&#x7AEF;&#x542F;&#x52A8;gdb 123456789101112131415161718192021222324252627$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient......(gdb) b mainBreakpoint 1 at 0xb6f571fc: file external/testservice/TestClient.cpp, line 14.(gdb) cContinuing.......(gdb) set solib-absolute-prefix out/debug/target/product/generic/symbols/Reading symbols from ...... linker...done.......Loaded symbols for ............(gdb) b IPCThreadState.cpp:937 # &#x5728;&#x6211;&#x4EEC;&#x8981;&#x67E5;&#x770B;&#x7684;&#x4F4D;&#x7F6E;&#x4E0B;&#x65AD;&#x70B9;Breakpoint 2 at 0xb6ec89f8: file frameworks/native/libs/binder/IPCThreadState.cpp, line 937.(gdb) cContinuing.......(gdb) bt # &#x6CE8;&#x610F;&#xFF1A;&#x4E00;&#x5B9A;&#x8981;&#x901A;&#x8FC7;bt&#x67E5;&#x770B;&#x662F;&#x4E0D;&#x662F;&#x7531;test&#x5230;&#x8FBE;&#x8BE5;&#x65AD;&#x70B9;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x9700;&#x8981;&#x518D;continue#0 android::IPCThreadState::writeTransactionData (this=this@entry=0xb6c64000, cmd=cmd@entry=1076388608, binderFlags=binderFlags@entry=16, handle=handle@entry=1, code=code@entry=1, data=..., statusBuffer=statusBuffer@entry=0x0) at frameworks/native/libs/binder/IPCThreadState.cpp:937#1 0xb6ec903c in android::IPCThreadState::transact (this=0xb6c64000, handle=1, code=code@entry=1, data=..., reply=reply@entry=0xbec50ad4, flags=16, flags@entry=0) at frameworks/native/libs/binder/IPCThreadState.cpp:566#2 0xb6ec408e in android::BpBinder::transact (this=0xb6c490c0, code=1, data=..., reply=0xbec50ad4, flags=0) at frameworks/native/libs/binder/BpBinder.cpp:165#3 0xb6f5742e in android::BpTestService::test (this=&lt;optimized out&gt;) at external/testservice/TestClient.cpp:10#4 0xb6f5723c in main () at external/testservice/TestClient.cpp:18(gdb) p tr$2 = {target = {handle = 1, ptr = 1}, cookie = 0, code = 1, flags = 16, sender_pid = 0, sender_euid = 0, data_size = 72, offsets_size = 0, data = {ptr = {buffer = 3066360032, offsets = 0}, buf = &quot;\340\360&#x136;\000\000\000&quot;}}(gdb) &#x975E;&#x5E38;&#x786E;&#x8BA4;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x7684;&#x6570;&#x636E;&#x5305;&#x4E2D;tr.cookie&#x5C31;&#x662F;0&#xFF01; &#x90A3;&#x5C31;&#x5947;&#x4E86;&#x602A;&#x4E86;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x7684;&#x662F;0&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5230;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#x8FD8;&#x8981;&#x7528;&#x5B83;&#xFF1F; ## &#x670D;&#x52A1;&#x7AEF;&#x63A5;&#x6536;&#x5230;&#x7684;test&#x8BF7;&#x6C42;&#x4E2D;tr.cookie&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x7EE7;&#x7EED;&#x7528;gdb&#x8C03;&#x8BD5;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x4E00;&#x63A2;&#x7A76;&#x7ADF;&#x3002;&#x8C03;&#x8BD5;&#x670D;&#x52A1;&#x7AEF;&#x4E5F;&#x9700;&#x8981;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#xFF1A; 1. Target1 &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x901A;&#x8FC7;gdbserver&#x542F;&#x52A8;server 123456789101112131415161718192021222324$ adb shell gdbserver :1234 /data/local/tmp/testservice/TestServerProcess /data/local/tmp/testservice/TestServer created; pid = 1273Listening on port 1234``` 2. Host1 &#x5728;&#x5BBF;&#x4E3B;&#x673A;&#x8C03;&#x8BD5;server``` bash$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestServer_intermediates/LINKED/TestServer......(gdb) b mainBreakpoint 1 at 0x19e8: file external/testservice/TestServer.cpp, line 30.(gdb) cThe program is not being run.(gdb) target remote :1234......0xb6f5c658 in ?? ()(gdb) cContinuing.......(gdb) set solib-absolute-prefix out/debug/target/product/generic/symbols/......(gdb) b IPCThreadState.cpp:1087Breakpoint 2 at 0xb6eeec52: file frameworks/native/libs/binder/IPCThreadState.cpp, line 1087.(gdb) cContinuing. Target2 &#x5728;&#x6A21;&#x62DF;&#x5668;&#x542F;&#x52A8;Client&#xFF0C;&#x89E6;&#x53D1;&#x65AD;&#x70B9; 12$ adb shell /data/local/tmp/testservice/TestClientBpTestService::test() &#x7136;&#x540E;&#x5728;Host1&#x4E0A;&#x5C31;&#x4F1A;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x7ED3;&#x679C;&#xFF1A; 123456789Breakpoint 2, android::IPCThreadState::executeCommand (this=this@entry=0xb6c64000, cmd=cmd@entry=-2144833022) at frameworks/native/libs/binder/IPCThreadState.cpp:10871087 error = b-&gt;transact(tr.code, buffer, &amp;reply, tr.flags);(gdb) bt # &#x6253;&#x5370;&#x8C03;&#x7528;&#x5806;&#x6808;&#xFF0C;&#x786E;&#x8BA4;&#x8D70;&#x5230;&#x4E86;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x65AD;&#x70B9;#0 android::IPCThreadState::executeCommand (this=this@entry=0xb6c64000, cmd=cmd@entry=-2144833022) at frameworks/native/libs/binder/IPCThreadState.cpp:1087#1 0xb6eeedbc in android::IPCThreadState::getAndExecuteCommand (this=this@entry=0xb6c64000) at frameworks/native/libs/binder/IPCThreadState.cpp:433#2 0xb6eeee20 in android::IPCThreadState::joinThreadPool (this=0xb6c64000, isMain=&lt;optimized out&gt;) at frameworks/native/libs/binder/IPCThreadState.cpp:492#3 0xb6f7dabc in main () at external/testservice/TestServer.cpp:35(gdb) p tr # cookie&#x975E;0&#xFF01;&#xFF01;$1 = {target = {handle = 3066421360, ptr = 3066421360}, cookie = 3066323044, code = 1, flags = 16, sender_pid = 1276, sender_euid = 0, data_size = 72, offsets_size = 0, data = {ptr = {buffer = 3065258024, offsets = 3065258096}, buf = &quot;( \264\266p \264\266&quot;}} &#x89C1;&#x4E86;&#x9B3C;&#x4E86;&#xFF0C;cookie&#x975E;0&#xFF01;&#x53D1;&#x9001;&#x7AEF;&#x548C;&#x63A5;&#x6536;&#x7AEF;&#x770B;&#x5230;&#x7684;&#x503C;&#x4E0D;&#x4E00;&#x6837;&#xFF01;&#x670D;&#x52A1;&#x7AEF;&#x6B64;&#x65F6;&#x6536;&#x5230;&#x7684;&#x8FD9;&#x4E2A;cookie&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x670D;&#x52A1;&#x7AEF;&#x628A;cookie&#x76F4;&#x63A5;&#x5F53;&#x4F5C;&#x5730;&#x5740;&#x8F6C;&#x6362;&#x6210;&#x4E86;BBinder&#xFF0C;&#x80FD;&#x8FD9;&#x4E48;&#x641E;&#x8BF4;&#x660E;cookie&#x91CC;&#x8BB0;&#x5F55;&#x7684;&#x5730;&#x5740;&#x4E00;&#x5B9A;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x81EA;&#x5DF1;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x53C8;&#x8C03;&#x7528;b-&gt;transact(...)&#x6267;&#x884C;&#x5177;&#x4F53;&#x670D;&#x52A1;&#xFF0C;&#x90A3;&#x8FD9;&#x4E2A;&#x670D;&#x52A1;&#x5E94;&#x8BE5;&#x5C31;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x7684;BnTestService&#x5427;&#xFF1F; BnTestService&#x662F;&#x5728;addService&#x65F6;&#x521B;&#x5EFA;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x8BB0;&#x5F97;&#x561B;&#xFF0C;&#x8FD9;&#x4E2A;&#x5730;&#x5740;&#x662F;&#x88AB;&#x53D1;&#x9001;&#x7ED9;&#x4E86;ServiceManager&#x3002;&#x53C2;&#x89C1;&#x300A;binder&#x670D;&#x52A1;&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;addService&#x6570;&#x636E;&#x7684;&#xFF1F;&#x300B;&#x672B;&#x5C3E;&#x7684;&#x56FE;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x8C03;&#x7528;addService&#x5411;ServiceManager&#x6CE8;&#x518C;&#x81EA;&#x5DF1;&#xFF0C;&#x5E76;&#x628A;&#x81EA;&#x5DF1;&#x7684;BnTestService&#x5BF9;&#x8C61;&#x6307;&#x9488;&#x4F20;&#x7ED9;&#x4E86;cookie&#x3002;&#x5728;&#x90A3;&#x5F20;&#x56FE;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;cookie&#xFF0C;&#x5DE6;&#x8FB9;&#x662F;&#x5411;ServiceManager&#x53D1;&#x9001;&#x7684;ADD_SERVICE_TRANSACTION&#x547D;&#x4EE4;&#x6570;&#x636E;&#xFF0C;&#x53F3;&#x8FB9;Parcel&#x662F;&#x8BE5;&#x547D;&#x4EE4;&#x5305;&#x542B;&#x7684;&#x6CE8;&#x518C;&#x4FE1;&#x606F;&#x6570;&#x636E;&#x3002; ## cookie&#x662F;&#x5426;&#x5C31;&#x662F;&#x5F53;&#x521D;&#x6CE8;&#x518C;&#x7684;&#x65F6;&#x5019;new&#x51FA;&#x6765;&#x7684;BnTestService&#x5462;&#xFF1F; &#x7EE7;&#x7EED;&#x7528;gdb&#x9A8C;&#x8BC1;&#xFF01; * &#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;&#x7684;tr.cookie&#x662F;&#x5426;&#x5C31;&#x662F;&#x6CE8;&#x518C;&#x65F6;&#x5462;&#x6211;&#x51FA;&#x6765;&#x7684;BnTestService&#xFF1F; &#x8FD8;&#x662F;&#x8C03;&#x8BD5;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x5F88;&#x591A;&#x547D;&#x4EE4;&#x662F;&#x91CD;&#x590D;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5ACC;&#x70E6;&#x53EF;&#x4EE5;&#x5199;&#x4E00;&#x4E2A;gdb&#x811A;&#x672C;&#x3002; Target1&#x548C;Target2&#x4E0E;&#x4E0A;&#x4E00;&#x5C0F;&#x8282;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5DEE;&#x522B;&#xFF0C;&#x6765;&#x770B;Host1&#xFF0C;&#x5148;&#x5199;&#x597D;gdb&#x811A;&#x672C;&#xFF0C;20160515.gdb&#xFF1A; 123456789define server_test target remote :1234 b main c set solib-absolute-prefix out/debug/target/product/generic/symbols/ b IServiceManager.cpp:161 b IPCThreadState.cpp:1087 cend &#x7136;&#x540E;&#x6267;&#x884C;gdb&#xFF1A; 1234567891011121314151617$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestServer_intermediates/LINKED/TestServer......(gdb) source ../androidex/external/testservice/20160515.gdb(gdb) server_test......Breakpoint 2, android::BpServiceManager::addService (this=0xb6c0e040, name=..., service=..., allowIsolated=&lt;optimized out&gt;) at frameworks/native/libs/binder/IServiceManager.cpp:161161 data.writeStrongBinder(service);(gdb) p service # &#x67E5;&#x770B;addService&#x65F6;BnTestService&#x7684;&#x5730;&#x5740;$1 = (const android::sp&lt;android::IBinder&gt; &amp;) @0xbeb99b14: {m_ptr = 0xb6c06064}(gdb) cContinuing.Breakpoint 3, android::IPCThreadState::executeCommand (this=this@entry=0xb6c24000, cmd=cmd@entry=-2144833022) at frameworks/native/libs/binder/IPCThreadState.cpp:10871087 error = b-&gt;transact(tr.code, buffer, &amp;reply, tr.flags);(gdb) p tr # cookie=3066060900=0xb6c06064&#xFF0C;&#x6B63;&#x662F;BnTestService&#xFF01;$2 = {target = {handle = 3066159216, ptr = 3066159216}, cookie = 3066060900, code = 1, flags = 16, sender_pid = 1297, sender_euid = 0, data_size = 72, offsets_size = 0, data = {ptr = {buffer = 3064995880, offsets = 3064995952}, buf = &quot;( \260\266p \260\266&quot;}}(gdb) &#x8BC1;&#x5B9E;&#xFF01; &gt;&#x670D;&#x52A1;&#x7AEF;&#x63A5;&#x6536;&#x5230;test()&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;tr.cookie&#x5C31;&#x662F;BnTestService&#x7684;&#x6307;&#x9488; &#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x6765;&#x65F6;&#x7EC4;&#x7684;&#x6570;&#x636E;&#x5305;&#x4E2D;cookie&#x4E3A;0&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;&#x65F6;&#x81EA;&#x52A8;&#x53D8;&#x6210;&#x4E86;BnTestService&#xFF1F;&#x6211;&#x4EEC;&#x4EE5;&#x540E;&#x518D;&#x63A2;&#x7A76;&#x3002;&#x5148;&#x628A;test()&#x7684;&#x6D41;&#x7A0B;&#x770B;&#x5B8C;&#x3002; BnTestService&#x7EE7;&#x627F;&#x81EA;BnInterface&#xFF0C;&#x540E;&#x8005;&#x53C8;&#x7EE7;&#x627F;&#x81EA;ITestService&#x548C;BBinder&#x3002;&#x5373;BBinder&#x662F;BnTestService&#x57FA;&#x7C7B;&#x7684;&#x57FA;&#x7C7B;&#xFF0C;&#x6545;&#x5C06;cookie&#x8F6C;&#x6362;&#x6210;BBinder*&#x662F;&#x5408;&#x6CD5;&#x7684;&#x3002; &#x5728;&#x770B;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x8C03;&#x7528;b-&gt;transact(...)&#xFF0C;frameworks/native/libs/binder/Binder.cpp:97 123456789101112131415status_t BBinder::transact( uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code=TEST ...... switch (code) { case PING_TRANSACTION: reply-&gt;writeInt32(pingBinder()); break; default: err = onTransact(code, data, reply, flags); // &#x8D70;&#x5230;&#x8FD9;&#x91CC; break; } ...... return err;} BBinder::onTransact(...)&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#xFF0C;b&#x5B9E;&#x9645;&#x6307;&#x5411;&#x7684;&#x662F;BnTestService&#xFF0C;&#x56E0;&#x6B64;&#x8BE5;&#x865A;&#x51FD;&#x6570;&#x5B9E;&#x9645;&#x5E94;&#x770B;BnTestService::onTransact(...)&#x7248;&#x672C;&#xFF1A; 12345678910111213141516status_t BnTestService::onTransact(uint_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags) { switch (code) { case TEST: { printf(&quot;BnTestService::onTransact, code: TEST\n&quot;); CHECK_INTERFACE(ITest, data, reply); test(); reply-&gt;writeInt32(100); return NO_ERROR; } break; default: break; } return NO_ERROR;} &#x7EC8;&#x4E8E;&#x5230;&#x8FBE;&#x4E86;test()&#x7684;&#x5B9E;&#x73B0;&#xFF01;&#x670D;&#x52A1;&#x7AEF;&#x7684;test&#x670D;&#x52A1;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x5C06;&#x88AB;&#x5199;&#x5165;reply&#xFF0C;&#x6253;&#x6210;&#x5305;&#x88F9;&#x53D1;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x6253;&#x5305;&#x548C;&#x53D1;&#x9001;&#x8FC7;&#x7A0B;&#x5C31;&#x524D;&#x9762;&#x90FD;&#x6709;&#xFF0C;&#x4E0D;&#x518D;&#x91CD;&#x590D;&#x5206;&#x6790;&#x4E86;&#x3002; &#x603B;&#x7ED3; &#x81F3;&#x6B64;&#xFF0C;&#x901A;&#x8FC7;&#x9759;&#x6001;&#x3001;&#x52A8;&#x6001;&#x4EE3;&#x7801;&#x8D70;&#x67E5;&#xFF0C;&#x6211;&#x628A;Binder&#x7684;ServiceManager&#x3001;&#x670D;&#x52A1;&#x7AEF;&#x3001;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x89D2;&#x8272;&#x57FA;&#x672C;&#x68B3;&#x7406;&#x6E05;&#x6670;&#x4E86;&#xFF1A; * &#x670D;&#x52A1;&#x7AEF;&#x901A;&#x8FC7;addService&#x5411;ServiceManager&#x6CE8;&#x518C;&#x670D;&#x52A1;&#xFF0C;&#x540E;&#x8005;&#x7F13;&#x5B58;&#x4E0B;&#x670D;&#x52A1;&#x7684;&#x540D;&#x79F0;&#x548C;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x8FDB;&#x7A0B;&#x5185;&#x6307;&#x9488;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x5C31;&#x53EF;&#x4EE5;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x3002; * &#x670D;&#x52A1;&#x7AEF;&#x516C;&#x5F00;&#x4E86;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7F16;&#x7801;&#xFF0C;&#x5E76;&#x8D1F;&#x8D23;&#x5B9E;&#x73B0;&#x8FD9;&#x4E9B;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x3002; * &#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;getService&#x83B7;&#x53D6;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;&#x670D;&#x52A1;&#x7AEF;handle&#xFF0C;&#x8BE5;handle&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x88AB;&#x4F2A;&#x88C5;&#x6210;&#x6307;&#x5411;&#x670D;&#x52A1;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x6307;&#x9488;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x3002;&#x5B9E;&#x9645;&#x4E0A;framework&#x628A;handle&#x548C;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x6253;&#x6210;&#x6570;&#x636E;&#x5305;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#x3002; * &#x670D;&#x52A1;&#x7AEF;&#x5728;&#x63A5;&#x6536;&#x5230;&#x6253;&#x5305;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x89E3;&#x6790;&#x63A5;&#x53E3;&#xFF0C;&#x5E76;&#x6267;&#x884C;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5C06;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002; &#x5F53;&#x7136;&#xFF0C;Binder&#x7684;&#x5929;&#x7A7A;&#x4E0B;&#x8FD8;&#x5269;&#x4E00;&#x5C0F;&#x7247;&#x4E4C;&#x4E91;&#xFF0C;&#x5C31;&#x662F;&#x90A3;&#x4E2A;tr.cookie&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x7684;&#x65F6;&#x5019;&#x586B;&#x5165;&#x7684;&#x662F;0&#xFF0C;&#x800C;&#x670D;&#x52A1;&#x7AEF;&#x5374;&#x63A5;&#x6536;&#x5230;&#x4E86;&#x81EA;&#x5DF1;&#x7684;BnTestService&#x6307;&#x9488;&#xFF1F;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E86;&#x3002;&#x6211;&#x731C;&#x6D4B;&#x8FD9;&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x5E72;&#x7684;&#x4E8B;&#x513F;&#x3002;&#x6709;&#x6CA1;&#x6709;&#x70B9;&#x5E73;&#x884C;&#x5B87;&#x5B99;&#x7684;&#x610F;&#x601D;&#xFF1F;&#x53CC;&#x7F1D;&#x5E72;&#x6D89;&#x4E4B;&#x6240;&#x4EE5;&#x51FA;&#x73B0;&#x4E86;&#x5E72;&#x6D89;&#x6761;&#x7EB9;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x6240;&#x5728;&#x7684;&#x4E16;&#x754C;&#x548C;&#x53E6;&#x4E00;&#x4E2A;&#x5E73;&#x884C;&#x5B87;&#x5B99;&#x4E16;&#x754C;&#x7684;&#x7C92;&#x5B50;&#x53D1;&#x751F;&#x4E86;&#x53E0;&#x52A0;&#xFF01; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x7EE7;&#x7EED;&#x7A7F;&#x8D8A;&#x5230;&#x9A71;&#x52A8;&#x5C42;&#x4E00;&#x63A2;&#x7A76;&#x7ADF;&#x5427;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（八）—— 客户端如何组织Test()请求？]]></title>
    <url>%2F2016%2F05%2F14%2F2016%2F0514BinderLearning8%2F</url>
    <content type="text"><![CDATA[&#x8FD8;&#x4ECE;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;&#x770B;&#x8D77;TestClient.cpp:14 1234567int main() { sp &lt; IServiceManager &gt; sm = defaultServiceManager(); // new BpServiceManager(new BpBinder(0)); sp &lt; IBinder &gt; binder = sm-&gt;getService(String16(&quot;service.testservice&quot;)); // sp&lt;ITestService&gt; cs = interface_cast &lt; ITestService &gt; (binder); cs-&gt;test(); return 0;} sm-&gt;getService(...)&#x8FD4;&#x56DE;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; &#x5176;&#x4E2D;&#x7B2C;2&#x884C;defaultServiceManager()&#x8FD4;&#x56DE;&#x7684;&#x662F;new BpServiceManager(new BpBinder(0));&#x8FD9;&#x5728;&#x300A; defaultServiceManager()&#x8FD4;&#x56DE;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;&#x300B;&#x4E2D;&#x6709;&#x5206;&#x6790;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x7684;sm-&gt;getService(...)&#x5728;&#x300A;ServiceManager&#x5982;&#x4F55;&#x54CD;&#x5E94;checkService&#x8BF7;&#x6C42;&#x300B;&#x7684;&#x7ED3;&#x5C3E;&#x7ED9;&#x51FA;&#x4E86;ServiceManager&#x54CD;&#x5E94;checkService&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x8FDB;&#x5165;BpServiceManager::getService(...) frameworks/native/libs/binder/IServiceManager.cpp:134 1234567891011121314151617181920virtual sp&lt;IBinder&gt; getService(const String16&amp; name) const{ unsigned n; for (n = 0; n &lt; 5; n++){ sp&lt;IBinder&gt; svc = checkService(name); // &#x8C03;&#x7528;&#x4E0B;&#x9762;&#x7684;checkService(...) if (svc != NULL) return svc; ALOGI(&quot;Waiting for service %s...\n&quot;, String8(name).string()); sleep(1); } return NULL;}virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const{ Parcel data, reply; data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor()); data.writeString16(name); remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply); return reply.readStrongBinder(); // &#x5728;&#x8FD9;&#x91CC;&#x8BFB;&#x53D6;&#x4E86;ServiceManager&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;} &#x8FDB;&#x5165;Parcel::readStrongBinder()&#xFF0C;frameworks/native/libs/binder/Parcel.cpp:1334 123456sp&lt;IBinder&gt; Parcel::readStrongBinder() const{ sp&lt;IBinder&gt; val; unflatten_binder(ProcessState::self(), *this, &amp;val); return val;} &#x8FDB;&#x5165;Parcel::unflatten_binder(...)&#xFF0C;frameworks/native/libe/binder/Parcel.cpp:293 123456789101112131415161718status_t unflatten_binder(const sp&lt;ProcessState&gt;&amp; proc, const Parcel&amp; in, sp&lt;IBinder&gt;* out){ const flat_binder_object* flat = in.readObject(false); if (flat) { switch (flat-&gt;type) { case BINDER_TYPE_BINDER: *out = reinterpret_cast&lt;IBinder*&gt;(flat-&gt;cookie); return finish_unflatten_binder(NULL, *flat, in); case BINDER_TYPE_HANDLE: *out = proc-&gt;getStrongProxyForHandle(flat-&gt;handle); return finish_unflatten_binder( static_cast&lt;BpBinder*&gt;(out-&gt;get()), *flat, in); } } return BAD_TYPE;} &#x6211;&#x4EEC;&#x770B;&#x670D;&#x52A1;&#x7AEF;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#xFF1A; &#x8FD4;&#x56DE;&#x7684;flat_binder_object&#x7684;type&#x662F;BINDER_TYPE_HANDLE&#xFF0C;&#x4E8E;&#x662F;&#x8FDB;&#x5165;ProcessState::getStrongProxyForHandle(...)&#xFF0C;frameworks/native/libs/binder/ProcessState.cpp:179 1234567891011121314151617181920212223242526272829sp&lt;IBinder&gt; ProcessState::getStrongProxyForHandle(int32_t handle){ sp&lt;IBinder&gt; result; AutoMutex _l(mLock); handle_entry* e = lookupHandleLocked(handle); if (e != NULL) { ...... IBinder* b = e-&gt;binder; if (b == NULL || !e-&gt;refs-&gt;attemptIncWeak(this)) { if (handle == 0) { // &#x663E;&#x7136;handle&#x662F;0&#xFF0C;&#x56E0;&#x4E3A;0&#x662F;ServiceManager ...... } b = new BpBinder(handle); // &#x8D70;&#x5230;&#x8FD9;&#x91CC; e-&gt;binder = b; if (b) e-&gt;refs = b-&gt;getWeakRefs(); result = b; } else { ...... result.force_set(b); e-&gt;refs-&gt;decWeak(this); } } return result;} &#x9996;&#x6B21;&#x6267;&#x884C;&#xFF0C;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;BpBinder(handle)&#xFF0C;&#x5E76;&#x7F13;&#x5B58;&#x8BE5;&#x8282;&#x70B9;&#xFF1B;&#x4EE5;&#x540E;&#x5728;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x8BE5;&#x8282;&#x70B9;&#x4E86;&#x3002;Parcel::finish_unflatten_binder(...)&#x5185;&#x90E8;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8C03;&#x7528;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x4E86;&#x3002; &gt; &#x56E0;&#x6B64;&#x5BA2;&#x6237;&#x7AEF;&#x7684;getService(...)&#x8C03;&#x7528;&#x5C31;&#x8FD4;&#x56DE;&#x4E86;new BpBinder(handle);&#x5176;&#x4E2D;handle&#x662F;&#x6709;&#x670D;&#x52A1;&#x7AEF;&#x5728;addService&#x65F6;&#x751F;&#x6210;&#xFF08;&#x89C1;&#x300A;binder&#x670D;&#x52A1;&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;addService&#x6570;&#x636E;&#x7684;&#xFF1F;&#x300B;&#x5C3E;&#x90E8;&#x7684;addService&#x7EC4;&#x7EC7;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x56FE;&#xFF09;&#xFF0C;&#x5E76;&#x7531;ServiceManager&#x7F13;&#x5B58;&#x7684;&#xFF0C;binder_uintptr_t&#x503C;&#x3002; interface_cast &lt; ITestService&gt; (binder)&#x8FD4;&#x56DE;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F; &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;frameworks/natvie/include/binder/IInterface.h:41 12345template&lt;typename INTERFACE&gt;inline sp&lt;INTERFACE&gt; interface_cast(const sp&lt;IBinder&gt;&amp; obj){ return INTERFACE::asInterface(obj);} &#x4EE3;&#x5165;&#x6A21;&#x677F;&#x53C2;&#x6570;&#xFF1A; 1234inline sp&lt;ITestService&gt; interface_cast(const sp&lt;IBinder&gt;&amp; obj){ return ITestService::asInterface(obj);} &#x518D;&#x6765;&#x770B;ITestService&#x7684;&#x5B9A;&#x4E49;&#xFF0C;Test.h 123456class ITestService : public IInterface{public: DECLARE_META_INTERFACE(TestService); virtual void test()=0;}; &#x5B8F;DECLARE_META_INTERFACE&#x5B9A;&#x4E49;&#x5728;frameworks/native/include/binder/IInterface.h:74&#xFF0C;&#x5C55;&#x5F00;&#x4E3A;&#xFF1A; 123456789101112class ITestService : public IInterface{public: static const android::String16 descriptor; static android::sp&lt;ITestService&gt; asInterface( const android::sp&lt;android::IBinder&gt;&amp; obj);virtual const android::String16&amp; getInterfaceDescriptor() const;ITestService();virtual ~ITestService(); virtual void test()=0;}; &#x5728;ITestService.cpp&#x4E2D;&#x53EA;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x884C;&#xFF1A; 1IMPLEMENT_META_INTERFACE(TestService, &quot;android.TestServer.ITestService&quot;); &#x5C55;&#x5F00;&#x540E;&#x4E3A;&#xFF1A; 12345678910111213141516171819const android::String16 ITestService::descriptor(&quot;android.TestServer.ITestService&quot;);const android::String16&amp; ITestService::getInterfaceDescriptor() const { return ITestService::descriptor;}android::sp&lt; ITestService &gt; ITestService::asInterface( const android::sp&lt;android::IBinder&gt;&amp; obj){ // obj&#x5C31;&#x662F;&#x5728;main&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;&#x7684;binder&#xFF0C;&#x5373; new BpBinder(handle) android::sp&lt; ITestService &gt; intr; if (obj != NULL) { intr = static_cast&lt; ITestService *&gt;( obj-&gt;queryLocalInterface(ITestService::descriptor).get()); if (intr == NULL) { intr = new BpTestService(obj); } } return intr;}ITestService::ITestService() { }ITestService::~ITestService() { } BpBinder::queryLocalInterface(...)&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7EE7;&#x627F;&#x81EA;&#x57FA;&#x7C7B;IBinder&#xFF0C;&#x5B83;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;NULL 1234sp&lt;IInterface&gt; IBinder::queryLocalInterface(const String16&amp; /*descriptor*/){ return NULL;} &#x56E0;&#x6B64;ITestService::asInterface(...)&#x5C31;&#x8FD4;&#x56DE;&#x4E86;new BpTestService(new BpBinder(handle));&#x5373;&#xFF1A; &gt; interface_cast &lt; ITestService &gt; (binder)&#x8FD4;&#x56DE; &gt; new BpTestService(new BpBinder(handle)); &#x8FDB;&#x5165;cs-&gt;test() &#x5373;BpTestService::test()&#xFF0C;TestClient.cpp 1234567void BpTestService::test() { printf(&quot;BpTestService::test()\n&quot;); Parcel data, reply; data.writeInterfaceToken(ITestService::getInterfaceDescriptor()); remote()-&gt;transact(TEST, data, &amp;reply); printf(&quot;reply: %d\n&quot;, reply.readInt32());} &#x4ED6;&#x7684;remote()&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x5728;&#x300A;defaultServiceManager()&#x8FD4;&#x56DE;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;&#x300B;&#x4E2D;&#x9047;&#x5230;&#x8FC7;BpInterface::remote()&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;&#x7684;Binder&#x3002;BpTestService&#x6B63;&#x662F;&#x7EE7;&#x627F;&#x81EA;BpInterface&#xFF1A; 1class BpTestService: public BpInterface&lt;ITestService&gt; &#x6240;&#x4EE5;BpTestService&#x7684;remote()&#x5C31;&#x8FD4;&#x56DE;&#x6784;&#x9020;&#x65F6;&#x4F20;&#x5165;&#x7684;new BpBinder(handle)&#x3002; &#x5728;&#x300A;binder&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;checkService&#x6570;&#x636E;&#x7684; &#xFF1F;&#x300B;&#x4E2D;&#x66FE;&#x5206;&#x6790;&#x8FC7;&#xFF0C;BpBinder::transact(...)&#x8C03;&#x7528;&#x4E86;IPCThreadState::transact(...) frameworks/native/libs/binder/IPCThreadState.cpp:548 123456789101112131415status_t IPCThreadState::transact(int32_t handle, uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code=TEST, flags=0 status_t err = data.errorCheck(); flags |= TF_ACCEPT_FDS; ...... err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, NULL); ...... return err;} &#x8FDB;&#x5165;waitForResponse(...)&#xFF0C;frameworks/native/libs/binder/IPCThreadState.cpp:904 12345678910111213141516171819202122232425status_t IPCThreadState::writeTransactionData(int32_t cmd, uint32_t binderFlags, int32_t handle, uint32_t code, const Parcel&amp; data, status_t* statusBuffer){ // cmd=BC_TRANSACTION, code=TEST, binderFlags=TF_ACCEPT_FDS binder_transaction_data tr; tr.target.ptr = 0; /* Don&apos;t pass uninitialized stack data to a remote process */ tr.target.handle = handle; tr.code = code; tr.flags = binderFlags; tr.cookie = 0; tr.sender_pid = 0; tr.sender_euid = 0; ...... tr.data_size = data.ipcDataSize(); tr.data.ptr.buffer = data.ipcData(); tr.offsets_size = data.ipcObjectsCount()*sizeof(binder_size_t); tr.data.ptr.offsets = data.ipcObjects(); ...... mOut.writeInt32(cmd); mOut.write(&amp;tr, sizeof(tr)); return NO_ERROR;} &#x53C8;&#x662F;&#x4E00;&#x4E2A;binder_transaction_data&#x6570;&#x636E;&#x5305;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x5757;&#x6570;&#x636E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; TEST&#x5B9A;&#x4E49;&#x5728;Test.h&#x4E2D;&#xFF1A; 1234enum{ TEST = IBinder::FIRST_CALL_TRANSACTION,}; &#x5B83;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;Binder&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#x6570;&#x5B57;&#x3002; &gt; * &#x8F6E;&#x5ED3;&#x6E10;&#x6E10;&#x6E05;&#x6670;&#x4E86;&#xFF1A;&#x670D;&#x52A1;&#x7AEF;&#x901A;&#x8FC7;addService&#x5411;ServiceManager&#x6CE8;&#x518C;&#x670D;&#x52A1;&#xFF0C;&#x540E;&#x8005;&#x8BB0;&#x5F55;&#x4E0B;service name&#x548C;&#x670D;&#x52A1;&#x5B9E;&#x4F53;&#xFF08;&#x5B9E;&#x4F53;&#x662F;&#x4EC0;&#x4E48;&#x4EE5;&#x540E;&#x518D;&#x8BA8;&#x8BBA;&#xFF09;&#x3002;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;getService&#x63A5;&#x53E3;&#x5411;ServiceManager&#x8BF7;&#x6C42;&#x83B7;&#x53D6;&#x5230;&#x7B26;&#x5408;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;service&#x3002;&#x4E4B;&#x540E;&#x8C03;&#x7528;service&#x7684;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5411;service&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5305;&#xFF0C;&#x8BE5;&#x6570;&#x636E;&#x5305;&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x6307;&#x5B9A;&#x7684;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#x7684;&#x5E8F;&#x5217;&#x53F7;&#x53CA;&#x53C2;&#x6570;&#xFF0C;&#x5177;&#x4F53;&#x670D;&#x52A1;&#x6267;&#x884C;&#x662F;&#x7531;&#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;&#x8BE5;&#x6570;&#x636E;&#x5305;&#x540E;&#x5B8C;&#x6210;&#x3002; &gt; * &#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;getService&#x83B7;&#x5F97;service&#x4E4B;&#x540E;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x5C31;&#x76F4;&#x63A5;&#x53D1;&#x5F80;service&#xFF0C;&#x800C;&#x4E0D;&#x518D;&#x7ECF;&#x8FC7;ServiceManager&#x3002;&#x56E0;&#x4E3A;&#x4E0A;&#x6587;cs-&gt;test()&#x5185;&#x8C03;&#x7528;&#x7684;&#x662F;new BpInterface(handle)&#x7684;transact(...)&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x518D;&#x662F;BpBinder(0)::transact(...)&#xFF0C;&#x5728;&#x6700;&#x7EC8;&#x7EC4;&#x6210;&#x7684;binder_transaction_data&#x5305;&#x4E2D;&#xFF0C;handle&#x4E5F;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x6CE8;&#x518C;&#x5728;ServiceManager&#x7684;handle&#x4E86;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x4E0B;&#x4E00;&#x6B65;&#x5C31;&#x5E94;&#x8BE5;&#x53BB;&#x5230;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x770B;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x54CD;&#x5E94;test()&#x8BF7;&#x6C42;&#x7684;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo搭建博客并上传GitHub]]></title>
    <url>%2F2016%2F05%2F12%2F2016%2F0512%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%B8%8A%E4%BC%A0GitHub%2F</url>
    <content type="text"><![CDATA[&#x4E4B;&#x524D;&#x5728;&#x535A;&#x5BA2;&#x56ED;&#x3001;&#x7B80;&#x4E66;&#x3001;CSDN&#x7B49;&#x5730;&#x513F;&#x90FD;&#x5F00;&#x8FC7;&#x535A;&#xFF0C;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x5199;&#x597D;&#x4E86;&#xFF0C;&#x6211;&#x5E0C;&#x671B;&#x80FD;&#x5728;&#x51E0;&#x4E2A;&#x5E73;&#x53F0;&#x53EF;&#x4EE5;&#x540C;&#x6B65;&#x53D1;&#x5E03;&#xFF0C;&#x53EF;&#x662F;&#x64CD;&#x4F5C;&#x8D77;&#x6765;&#x6210;&#x672C;&#x4E0D;&#x4F4E;&#x3002;&#x51E0;&#x4E2A;&#x5E73;&#x53F0;&#x4E0B;&#x7684;&#x5BCC;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x6BD4;&#x8F83;&#x8D77;&#x6765;&#x8FD8;&#x662F;&#x535A;&#x5BA2;&#x56ED;&#x66F4;&#x987A;&#x624B;&#xFF0C;&#x770B;&#x7740;&#x66F4;&#x8212;&#x670D;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x64CD;&#x4F5C;&#x7075;&#x6D3B;&#x3001;&#x51C6;&#x786E;&#x3002;&#x800C;CSDN&#x5BF9;&#x4EE3;&#x7801;&#x5757;&#x5185;&#x7684;&#x6587;&#x5B57;&#x52A0;&#x7C97;&#x3001;&#x4FEE;&#x6539;&#x5B57;&#x8272;&#x540E;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;html&#x6587;&#x65E0;&#x6CD5;&#x89E3;&#x6790;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6DF7;&#x6742;&#x7740;&#x4EE3;&#x7801;&#x548C;html&#x6587;&#x672C;&#x5B9E;&#x5728;&#x592A;&#x96BE;&#x770B;&#x4E86;&#xFF0C;&#x540E;&#x6765;&#x6211;&#x77E5;&#x9053;&#x539F;&#x6765;&#x662F;Markdown&#x7684;&#x4EE3;&#x7801;&#x5757;&#x89C4;&#x5219;&#x9650;&#x5236;&#x3002;&#x800C;&#x4E14;CSDN&#x521A;&#x521A;&#x624D;&#x53D6;&#x6D88;&#x4E86;&#x63D0;&#x4EA4;&#x6587;&#x7AE0;&#x8981;&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#x624D;&#x80FD;&#x53D1;&#x5E03;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x5BA1;&#x6838;&#x6CA1;&#x6709;&#x5B8C;&#x6210;&#x4E4B;&#x524D;&#xFF0C;&#x8FDE;&#x81EA;&#x5DF1;&#x90FD;&#x770B;&#x4E0D;&#x5230;&#xFF0C;&#x4E14;&#x4E0D;&#x80FD;&#x4FEE;&#x6539;&#xFF0C;&#x8FD9;&#x8BA9;&#x6211;&#x4E00;&#x5EA6;&#x653E;&#x5F03;CSDN&#x5E73;&#x53F0;&#x3002;&#x5982;&#x679C;&#x662F;&#x5199;&#x666E;&#x901A;&#x7684;&#x6587;&#x7AE0;&#x5199;&#x4F5C;&#x4F53;&#x9A8C;&#x6700;&#x597D;&#x7684;&#x662F;&#x7B80;&#x4E66;&#xFF0C;&#x5927;&#x6C14;&#x3001;&#x7B80;&#x6D01;&#x3002;&#x4F46;&#x7B80;&#x4E66;&#x66F4;&#x9002;&#x5408;&#x4E00;&#x822C;&#x7684;&#x5199;&#x4F5C;&#xFF0C;&#x6BD4;&#x8F83;&#x6280;&#x672F;&#x5316;&#x7684;&#x4E2D;&#x95F4;&#x63BA;&#x6742;&#x5927;&#x91CF;&#x4EE3;&#x7801;&#x7684;&#x652F;&#x6301;&#x8FD8;&#x4E0D;&#x591F;&#x597D;&#x3002; &#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x5E94;&#x8BE5;&#x5230;GitHub&#x4E0A;&#x5F00;&#x535A;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x5723;&#x57CE;&#x3002;&#x82B1;&#x4E86;&#x4E24;&#x5929;&#x65F6;&#x95F4;&#x7814;&#x7A76;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x53D1;&#x73B0;&#x8FD8;&#x86EE;&#x7B80;&#x5355;&#x7684;&#xFF0C;&#x800C;&#x4E14;md&#x683C;&#x5F0F;&#x4E5F;&#x88AB;&#x535A;&#x5BA2;&#x56ED;&#x3001;&#x7B80;&#x4E66;&#x3001;CSDN&#x6240;&#x652F;&#x6301;&#xFF0C;&#x5199;&#x5B8C;&#x4E00;&#x4EFD;&#x5E94;&#x8BE5;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x590D;&#x5236;&#x5230;&#x8FD9;&#x4E09;&#x4E2A;&#x5E73;&#x53F0;&#x3002;&#x6211;&#x559C;&#x6B22;&#x5728;&#x672C;&#x5730;&#x7F16;&#x8F91;markdown&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;sublime &#x53CA;&#x5176;&#x63D2;&#x4EF6;Markdown Editing &#x548C; OmniMarkupPreviewer&#x3002;&#x5B8C;&#x6210;&#x540E;&#x5E95;&#x7A3F;&#x3001;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x90FD;&#x6089;&#x6570;&#x4FDD;&#x5B58;&#x5230;GitHub&#xFF0C;&#x65E5;&#x540E;&#x67E5;&#x627E;&#x3001;&#x4FEE;&#x6539;&#x90FD;&#x5F88;&#x5BB9;&#x6613;&#x3002; &#x6211;&#x7528;hexo&#x4F5C;&#x4E3A;&#x9759;&#x6001;&#x9875;&#x9762;&#x751F;&#x6210;&#x5668;&#xFF0C;&#x64CD;&#x4F5C;&#x8FC7;&#x7A0B;&#x9047;&#x5230;&#x4E0D;&#x5C11;&#x95EE;&#x9898;&#xFF0C;&#x641E;&#x5B9A;&#x4E4B;&#x540E;&#x7559;&#x4E00;&#x4EFD;&#x64CD;&#x4F5C;&#x8BB0;&#x5F55;&#x5427;&#x3002; &#x5B89;&#x88C5;&#x73AF;&#x5883; &#x73AF;&#x5883;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;hexo &#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002;&#x8FD9;&#x91CC;&#x8FD8;&#x662F;&#x8BB0;&#x4E0B;&#x4E00;&#x4EFD;&#x64CD;&#x4F5C;&#x8DEF;&#x5F84;&#xFF0C;&#x4EE5;&#x540E;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x65F6;&#xFF0C;&#x95ED;&#x7740;&#x773C;&#x775B;&#x64CD;&#x4F5C;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x5475;&#x5475;&#x5475;~ &#x5B89;&#x88C5;Node.js $ curl https://raw.github.com/creationix/nvm/master/install.sh | sh $ nvm install stable &#x5B89;&#x88C5;Hexo $ sudo npm install -g hexo-cli &#x5EFA;&#x7AD9; $ cd blog $ hexo init $ npm install &#x5C06;&#x81EA;&#x5DF1;&#x7684;GitHub/blog.git&#x9879;&#x76EE; Clone&#x5230;&#x672C;&#x5730;blog/blog&#x4E0B;&#x3002;&#x5C06;&#x4E3B;&#x9898;Clone&#x5230;blog/themes/next&#x4E0B;&#xFF0C;&#x6211;&#x4F7F;&#x7528;&#x7684;&#x4E3B;&#x9898;&#x662F;NexT&#x3002; &#x6267;&#x884C;&#x811A;&#x672C;setup.sh&#xFF1A; $ cd blog $ sh setup.sh &#x8BE5;shell&#x811A;&#x672C;&#x7684;&#x4E3B;&#x8981;&#x4F5C;&#x7528;&#x662F;&#xFF1A; &#x5220;&#x9664;&#x6587;&#x4EF6;(&#x5939;)&#xFF1A; blog/source/ blog/_config.yml blog/themes/next/_config.yml &#x7136;&#x540E;&#x5206;&#x522B;&#x4E3A;&#x5B83;&#x4EEC;&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#xFF1A; blog/source/ -&gt; blog/blog/source blog/_config.yml -&gt; blog/blog/_config.yml blog/themes/next/_config.yml -&gt; blog/blog/_next-theme-config.yml &#x6CE8;&#x610F;&#xFF1A;&#x751F;&#x6210;&#x8F6F;&#x94FE;&#x4E00;&#x5B9A;&#x8981;&#x4F7F;&#x7528;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x54E6;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x7F51;&#x9875;&#x4E86;&#xFF1A; $ hexo clean $ hexo generate $ hexo server &#x5173;&#x8054;GitHub &#x5B89;&#x88C5;hexo-delopyer-git&#xFF1A; $ npm install hexo-deployer-git --save &#x5728;blog/_config.yml&#x4E2D;&#x6DFB;&#x52A0;&#xFF1A; 1234deploy: type: git repository: https://github.com/palanceli/palanceli.github.io.git branch: master &#x5176;&#x5B83; &#x56FE;&#x7247; &#x9996;&#x5148;&#x786E;&#x8BA4;_config.yml&#x4E2D;&#x6709;&#xFF1A; 1post_asset_folder: true &#x7136;&#x540E;&#x5728;blog/&#x4E0B;&#x6267;&#x884C; 1npm install https://github.com/CodeFalling/hexo-asset-image --save &#x786E;&#x4FDD;&#x5728;blog-dev/source/_posts&#x4E0B;&#x521B;&#x5EFA;&#x548C;md&#x6587;&#x4EF6;&#x540C;&#x540D;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5728;&#x91CC;&#x9762;&#x653E;&#x8BE5;md&#x9700;&#x8981;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x7136;&#x540E;&#x5728;md&#x4E2D;&#x63D2;&#x5165; 1![](&#x76EE;&#x5F55;&#x540D;/&#x6587;&#x4EF6;&#x540D;.png) &#x5373;&#x53EF;&#x5728;hexo generate&#x65F6;&#x6B63;&#x786E;&#x751F;&#x6210;&#x63D2;&#x5165;&#x56FE;&#x7247;&#x3002;&#x6BD4;&#x5982;&#xFF1A; 1234_posts |- post1.md |_ post1 |- pic1.png &#x5728;md&#x6587;&#x4EF6;&#x4E2D;&#x63D2;&#x5165;&#x56FE;&#x7247;&#x65F6;&#x53EA;&#x9700;&#x5199; 1![](post1/pic1.png) &#x5373;&#x53EF;&#x3002;&#x9996;&#x6B21;&#x914D;&#x7F6E;&#x5B8C;&#x4E86;&#x9700;&#x8981;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x6E05;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x518D;&#x751F;&#x6210;&#x9875;&#x9762;&#xFF1A; 123$ hexo clean$ hexo generate$ hexo server &#x5982;&#x679C;&#x6CA1;&#x505A;&#x6E05;&#x9664;&#xFF0C;&#x76F4;&#x63A5;&#x751F;&#x6210;&#x9875;&#x9762;&#xFF0C;&#x5728;&#x6211;&#x8FD9;&#x91CC;&#x4F1A;&#x51FA;&#x73B0;&#x8DEF;&#x5F84;&#x9519;&#x8BEF;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x89C6;&#x9891; &#x63D2;&#x5165;&#x4F18;&#x9177;&#x89C6;&#x9891;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5728;&#x4F18;&#x9177;&#x70B9;&#x51FB;&#x89C6;&#x9891;&#x4E0B;&#x9762;&#x7684;&#x201C;&#x5206;&#x4EAB;&#x201D;&#x6309;&#x94AE;&#xFF0C;&#x590D;&#x5236;&#x901A;&#x7528;&#x4EE3;&#x7801;&#xFF0C;&#x76F4;&#x63A5;&#x7C98;&#x8D34;&#x5230;md&#x6587;&#x4EF6;&#x4E2D;&#x5373;&#x53EF;&#x3002; &#x9690;&#x85CF;&#x6587;&#x4EF6; &#x53EF;&#x4EE5;&#x5C06;&#x6587;&#x4EF6;&#x751F;&#x6210;&#x5230;&#x8349;&#x7A3F;&#x76EE;&#x5F55;&#x4E0B;&#xFF1A; 1$ hexo new draft &quot;new draft&quot; &#x6216;&#x8005;&#x76F4;&#x63A5;&#x5728;source/_drafts&#x4E0B;&#x65B0;&#x5EFA;md&#x6587;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x5728;&#x672C;&#x5730;hexo s&#x65F6;&#x6587;&#x4EF6;&#x53EF;&#x89C1;&#xFF0C;&#x8981;&#x4E48;&#x5728;md&#x6587;&#x4EF6;&#x7684;front-matter&#x4E2D;&#x52A0;&#x5165;render_drafts: true&#xFF0C;&#x8981;&#x4E48;&#x5728;&#x542F;&#x52A8;server&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;hexo server --drafts]]></content>
      <categories>
        <category>环境、配置</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（七）—— ServiceManager如何响应addService请求？]]></title>
    <url>%2F2016%2F05%2F12%2F2016%2F0514BinderLearning7%2F</url>
    <content type="text"><![CDATA[&#x6709;&#x4E86;&#x300A;ServiceManager&#x5982;&#x4F55;&#x54CD;&#x5E94;checkService&#x8BF7;&#x6C42;&#x300B;&#x7684;&#x63A2;&#x7D22;&#xFF0C;&#x7814;&#x7A76;addService&#x5C31;&#x8F7B;&#x8F66;&#x719F;&#x8DEF;&#x4E86;&#xFF0C;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x4E0D;&#x518D;&#x591A;&#x8BF4;&#xFF0C;&#x4EC5;&#x628A;&#x5173;&#x952E;&#x8282;&#x70B9;&#x5217;&#x51FA;&#xFF1A; frameworks/native/cmds/servicemanager/service_manager.c:347 123456int main(int argc, char **argv){ &#x2026;&#x2026; binder_loop(bs, svcmgr_handler); &#x2026;&#x2026;} frameworks/native/cmds/servicemanager/binder.c:372 123456789void binder_loop(struct binder_state *bs, binder_handler func){ &#x2026;&#x2026; for (;;) { &#x2026;&#x2026; res = binder_parse(bs, 0, (uintptr_t) readbuf, bwr.read_consumed, func); &#x2026;&#x2026; }} frameworks/native/cmds/servicemanager/binder.c:204 12345678910111213141516171819202122232425int binder_parse(struct binder_state *bs, struct binder_io *bio, uintptr_t ptr, size_t size, binder_handler func){ &#x2026;&#x2026; case BR_TRANSACTION: { struct binder_transaction_data *txn = (struct binder_transaction_data *) ptr; &#x2026;&#x2026; if (func) { unsigned rdata[256/4]; struct binder_io msg; struct binder_io reply; int res; bio_init(&amp;reply, rdata, sizeof(rdata), 4); bio_init_from_txn(&amp;msg, txn); res = func(bs, txn, &amp;msg, &amp;reply); binder_send_reply(bs, &amp;reply, txn-&gt;data.ptr.buffer, res); } ptr += sizeof(*txn); break; } &#x2026;&#x2026; return r;} &#x6B64;&#x65F6;&#x7684;&#x5185;&#x5B58;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A; frameworks/native/cmds/servicemanager/service_manager.c:244 1234567891011121314151617181920212223242526272829303132333435363738int svcmgr_handler(struct binder_state *bs, struct binder_transaction_data *txn, struct binder_io *msg, struct binder_io *reply){ struct svcinfo *si; uint16_t *s; size_t len; uint32_t handle; uint32_t strict_policy; int allow_isolated; &#x2026;&#x2026; switch(txn-&gt;code) { &#x2026;&#x2026; case SVC_MGR_ADD_SERVICE: s = bio_get_string16(msg, &amp;len); // &quot;service.testservice&quot; if (s == NULL) { return -1; } handle = bio_get_ref(msg); allow_isolated = bio_get_uint32(msg) ? 1 : 0; // 0 if (do_add_service(bs, s, len, handle, txn-&gt;sender_euid, allow_isolated, txn-&gt;sender_pid)) return -1; break; &#x2026;&#x2026; default: ALOGE(&quot;unknown code %d\n&quot;, txn-&gt;code); return -1; } bio_put_uint32(reply, 0); return 0;} SVC_MGR_ADD_SERVICE&#x5206;&#x4E4B;&#x5185;&#x4ECE;msg&#x8BFB;&#x51FA;&#x7684;&#x6570;&#x636E;&#x5BF9;&#x7167;&#x201C;&#x670D;&#x52A1;&#x7AEF;&#x4E3A;addService&#x7EC4;&#x7EC7;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x201D;&#x793A;&#x610F;&#x56FE;&#x5F88;&#x5BB9;&#x6613;&#x62C6;&#x89E3;&#x51FA;&#x6765;&#xFF0C;&#x9700;&#x8981;&#x770B;&#x4E00;&#x4E0B;bio_get_ref(&#x2026;)&#xFF0C;frameworks/native/cmds/servicemanager/binder.c:627 12345678910111213uint32_t bio_get_ref(struct binder_io *bio){ struct flat_binder_object *obj; obj = _bio_get_obj(bio); if (!obj) return 0; if (obj-&gt;type == BINDER_TYPE_HANDLE) // &#x5982;&#x679C;&#x4E3A;BINDER_TYPE_BINDER&#x5462;&#xFF1F;&#x90FD;&#x8FD4;&#x56DE;0&#xFF1F; return obj-&gt;handle; return 0;} &#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x7591;&#x56E2;&#xFF1A;&#x6839;&#x636E;&#x524D;&#x9762;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x56FE;&#xFF0C; obj-&gt;type&#x5E94;&#x8BE5;&#x5C31;&#x662F;service.type&#xFF0C;&#x5B83;&#x7B49;&#x4E8E;BINDER_TYPE_BINDER&#xFF0C;&#x53EF;&#x662F;&#x5728;bio_get_ref(...)&#x4E2D;&#x4EC5;&#x5BF9;obj-&gt;type&#x4E3A;BINDER_TYPE_HANDLE&#x7684;&#x60C5;&#x51B5;&#x8FD4;&#x56DE;obj-&gt;handle&#xFF0C;&#x5176;&#x4F59;&#x60C5;&#x51B5;&#x90FD;&#x8FD4;&#x56DE;0&#x3002;&#x8FD9;&#x4E0D;&#x7B26;&#x5408;&#x5E38;&#x8BC6;&#x554A;&#xFF0C;&#x96BE;&#x9053;&#x6240;&#x6709;&#x7684;BINDER_TYPE_BINDER&#x7C7B;&#x578B;&#x7684;handle&#x90FD;&#x5171;&#x7528;0&#xFF1F; frameworks/native/cmds/servicemanager/binder.c:611 123456789101112131415static struct flat_binder_object *_bio_get_obj(struct binder_io *bio){ size_t n; size_t off = bio-&gt;data - bio-&gt;data0; /* TODO: be smarter about this? */ for (n = 0; n &lt; bio-&gt;offs_avail; n++) { if (bio-&gt;offs[n] == off) return bio_get(bio, sizeof(struct flat_binder_object)); } bio-&gt;data_avail = 0; bio-&gt;flags |= BIO_F_OVERFLOW; return NULL;} &#x7ECF;&#x8FC7;&#x524D;&#x9762;&#x51E0;&#x6761;bio_get_xxx&#xFF0C;msg&#x7684;data&#x6307;&#x9488;&#x5DF2;&#x7ECF;&#x632A;&#x5230;&#x4E86;flat_binder_object&#x5B9E;&#x4F53;&#x5904;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x6A59;&#x8272;&#x7BAD;&#x5934;&#x8868;&#x793A;msg&#x521D;&#x59CB;&#x5316;&#x540E;&#x5230;&#x6267;&#x884C;bio_get_ref(msg)&#x4E4B;&#x524D;&#xFF0C;data&#x6307;&#x9488;&#x7684;&#x632A;&#x52A8;&#x60C5;&#x51B5;&#x3002;_bio_get_obj(&#x2026;)&#x8D1F;&#x8D23;&#x5C06;&#x6B64;flat_binder_object&#x5B9E;&#x4F53;&#x8FD4;&#x56DE;&#x3002; frameworks/native/cmds/servicemanager/service_manager.c:194 12345678910111213141516171819202122232425262728293031323334353637383940int do_add_service(struct binder_state *bs, const uint16_t *s, size_t len, uint32_t handle, uid_t uid, int allow_isolated, pid_t spid){ // s=&quot;service.testservice&quot;, allow_isolated=0, handle=? struct svcinfo *si; &#x2026;&#x2026; si = find_svc(s, len); if (si) { if (si-&gt;handle) { ALOGE(&quot;add_service(&apos;%s&apos;,%x) uid=%d - ALREADY REGISTERED, OVERRIDE\n&quot;, str8(s, len), handle, uid); svcinfo_death(bs, si); } si-&gt;handle = handle;} else { // &#x91CD;&#x70B9;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x5982;&#x679C;&#x670D;&#x52A1;&#x6CA1;&#x6709;add&#x8FC7;&#xFF0C;&#x5219;&#x4E3A;&#x4E4B;&#x521B;&#x5EFA;&#x8282;&#x70B9;&#xFF0C;&#x4FDD;&#x5B58;&#x540D;&#x5B57;&#x548C;handle si = malloc(sizeof(*si) + (len + 1) * sizeof(uint16_t)); if (!si) { ALOGE(&quot;add_service(&apos;%s&apos;,%x) uid=%d - OUT OF MEMORY\n&quot;, str8(s, len), handle, uid); return -1; } si-&gt;handle = handle; si-&gt;len = len; memcpy(si-&gt;name, s, (len + 1) * sizeof(uint16_t)); si-&gt;name[len] = &apos;\0&apos;; si-&gt;death.func = (void*) svcinfo_death; si-&gt;death.ptr = si; si-&gt;allow_isolated = allow_isolated; si-&gt;next = svclist; svclist = si; } binder_acquire(bs, handle); binder_link_to_death(bs, handle, &amp;si-&gt;death); return 0;} &#x5230;&#x8FD9;&#x5C31;&#x7ED3;&#x675F;&#x4E86;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x843D;&#x5730;&#x4EE3;&#x7801;&#x51FA;&#x4E4E;&#x610F;&#x6599;&#x7684;&#x7B80;&#x5355;&#xFF1A;&#x5B83;&#x53EA;&#x662F;&#x4FDD;&#x5B58;&#x670D;&#x52A1;&#x7684;name&#x548C;binder&#xFF0C;&#x5E76;&#x628A;&#x5B83;&#x4EEC;&#x4E32;&#x5230;&#x94FE;&#x8868;&#x4E0A;&#x53BB;&#x3002;&#x7B49;&#x5F85;&#x5BA2;&#x6237;&#x7AEF;checkService&#x5219;&#x8FD4;&#x56DE;handle&#x3002;&#x603B;&#x611F;&#x89C9;&#x8C1C;&#x56E2;&#x8FD8;&#x662F;&#x6CA1;&#x89E3;&#x51B3;&#xFF0C;do_add_service(...)&#x51FD;&#x6570;&#x4E2D;handle&#x53C2;&#x6570;&#x5B58;&#x7591;&#xFF0C;&#x6211;&#x65AD;&#x5B9A;&#x5B83;&#x5E94;&#x8BE5;&#x662F;service&#x7684;handle&#x5B57;&#x6BB5;&#xFF0C;&#x53EF;&#x662F;&#x6309;&#x7167;&#x4EE3;&#x7801;&#x8D70;&#x67E5;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5374;&#x5728;service_manager&#x4E2D;&#x88AB;&#x6539;&#x6210;&#x4E86;0&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;&#x8FD9;&#x4E2A;handle&#x7A76;&#x7ADF;&#x600E;&#x4E48;&#x505A;&#x5230;&#x7684;&#x8FDE;&#x63A5;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x670D;&#x52A1;&#x7AEF;&#xFF1F;ServiceManager&#x7684;&#x89D2;&#x8272;&#x5E94;&#x8BE5;&#x8BA9;C/S&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;C&#x3001;S&#x4E4B;&#x95F4;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x901A;&#x8FC7;binder&#x901A;&#x4FE1;&#x4E86;&#xFF0C;&#x53EF;&#x662F;flat_binder_object&#x91CC;&#x9762;&#x53EA;&#x662F;&#x4FDD;&#x5B58;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x51E0;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x600E;&#x4E48;&#x51ED;&#x7740;&#x8FD9;&#x5768;binder&#x6570;&#x636E;&#x94FE;&#x63A5;&#x5230;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x5462;&#xFF1F;&#x770B;&#x6765;&#x8FD8;&#x5F97;&#x7814;&#x7A76;&#x4E00;&#x6761;&#x5177;&#x4F53;&#x7684;&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x53CA;&#x54CD;&#x5E94;&#x624D;&#x80FD;&#x627E;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x7B54;&#x6848;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（六）—— binder服务端是如何组织addService数据的？]]></title>
    <url>%2F2016%2F05%2F11%2F2016%2F0514BinderLearning6%2F</url>
    <content type="text"><![CDATA[&#x5728;checkService&#x7684;&#x8C03;&#x67E5;&#x4E2D;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x5BA2;&#x6237;&#x7AEF;&#x5411;ServiceManager&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x540D;&#xFF0C;ServiceManager&#x6839;&#x636E;&#x670D;&#x52A1;&#x540D;&#x904D;&#x5386;&#x672C;&#x5730;&#x94FE;&#x8868;&#xFF0C;&#x627E;&#x5230;&#x5339;&#x914D;&#x7684;handle&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;&#x8FD9;&#x4E2A;handle&#x663E;&#x7136;&#x662F;&#x7531;&#x670D;&#x52A1;&#x7AEF;&#x6CE8;&#x518C;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;handle&#x7A76;&#x7ADF;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;&#x8981;&#x5148;&#x641E;&#x6E05;&#x695A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5FC5;&#x987B;&#x7814;&#x7A76;&#x670D;&#x52A1;&#x7AEF;&#x548C;ServiceManager&#x662F;&#x5982;&#x4F55;&#x5171;&#x540C;&#x5B8C;&#x6210;&#x4E00;&#x6B21;addService&#x64CD;&#x4F5C;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x4ECE;&#x670D;&#x52A1;&#x7AEF;&#x4EE3;&#x7801;&#x51FA;&#x53D1;&#x3002; TestService.cpp:30 123456789int main() { sp &lt; ProcessState &gt; proc(ProcessState::self()); sp &lt; IServiceManager &gt; sm = defaultServiceManager(); // sm = new BpServiceManager(new BpBinder(0)) sm-&gt;addService(String16(&quot;service.testservice&quot;), new BnTestService()); ProcessState::self()-&gt;startThreadPool(); IPCThreadState::self()-&gt;joinThreadPool(); return 0;} &#x5728;&#x300A;defaultServiceManager()&#x8FD4;&#x56DE;&#x4E86;&#x4EC0;&#x4E48;&#xFF1F;&#x300B;&#x4E00;&#x6587;&#x4E2D;&#x5DF2;&#x7ECF;&#x77E5;&#x9053;&#xFF0C;sm&#x5C31;&#x662F;new BpServiceManager(new BpBinder( 0 ) )&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x627E;&#x5230;BpServiceManager::addService(&#x2026;)&#xFF0C;frameworks/native/libs/binder/IServiceManager.cpp:155 1234567891011virtual status_t addService(const String16&amp; name, const sp&lt;IBinder&gt;&amp; service, bool allowIsolated){ // name=&quot;service.testservice&quot;, service=new BnTestService()&#xFF0C;allowIsolated=false Parcel data, reply; data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor()); data.writeString16(name); data.writeStrongBinder(service); data.writeInt32(allowIsolated ? 1 : 0); status_t err = remote()-&gt;transact(ADD_SERVICE_TRANSACTION, data, &amp;reply); return err == NO_ERROR ? reply.readExceptionCode() : err;} Parcel&#x7684;&#x6570;&#x636E;&#x7EC4;&#x7EC7;&#x89C4;&#x5219;&#x53C2;&#x89C1;&#x300A;Parcel&#x662F;&#x600E;&#x4E48;&#x6253;&#x5305;&#x7684;&#xFF1F;&#x300B;&#x3002;&#x8FD9;&#x91CC;&#x6253;&#x5305;&#x7684;service&#x662F;&#x7531;main&#x51FD;&#x6570;&#x4F20;&#x5165;&#x7684;new BnTestService()&#xFF0C;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x662F;remote&#x8FD8;&#x662F;local&#x5462;&#xFF1F;&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x6765;&#x770B;&#x6211;&#x731C;&#x662F;local&#xFF08;BpXXX&#x4EE3;&#x8868;proxy&#xFF0C;BnXXX&#x4EE3;&#x8868;native&#xFF09;&#x3002;&#x6765;&#x770B;&#x770B;BnTestService&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF1A;BnTestService&#x7EE7;&#x627F;&#x81EA;BnInterface&#xFF0C;BnInterface&#x7EE7;&#x627F;&#x81EA;BBinder&#xFF0C;BBinder&#x8986;&#x76D6;&#x4E86;&#x865A;&#x51FD;&#x6570;localBinder(){return this;}&#x5728;Binder.cpp:191&#x3002;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;Parcel data&#x7684;&#x793A;&#x610F;&#x56FE;&#x4E3A;&#xFF1A; binder-&gt;localBinder()&#x8FD4;&#x56DE;binder&#x7684;this&#x6307;&#x9488;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x662F;&#x4F20;&#x5165;&#x7684;service&#x53C2;&#x6570;&#xFF0C;&#x5373;new BnTestService()&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x5728;BpServiceManager::addService(&#x2026;)&#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;remote()-&gt;transact(&#x2026;)&#x7EC4;&#x7EC7;&#x6570;&#x636E;&#x7684;&#x8FC7;&#x7A0B;&#x5728;&#x300A;binder&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;checkService&#x6570;&#x636E;&#x300B;&#x4E2D;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x8FC7;&#x4E86;&#xFF0C;&#x4E0D;&#x518D;&#x8BE6;&#x7EC6;&#x89E3;&#x91CA;&#xFF0C;&#x53EA;&#x5217;&#x51FA;&#x5173;&#x952E;&#x8282;&#x70B9;&#xFF1A; frameworks/native/libs/binder/IServiceManager.cpp:155 12345678virtual status_t addService(const String16&amp; name, const sp&lt;IBinder&gt;&amp; service, bool allowIsolated){ // name=&quot;service.testservice&quot;, service=new BnTestService()&#xFF0C;allowIsolated=false Parcel data, reply; &#x2026;&#x2026; status_t err = remote()-&gt;transact(ADD_SERVICE_TRANSACTION, data, &amp;reply); &#x2026;&#x2026;} frameworks/native/libs/binder/BpBinder.cpp:159 123456789status_t BpBinder::transact( uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code=ADD_SERVICE_TRANSACTION, flags=0 // Once a binder has died, it will never come back to life. &#x2026;&#x2026; status_t status = IPCThreadState::self()-&gt;transact( mHandle, code, data, reply, flags); &#x2026;&#x2026;} frameworks/native/libs/binder/IPCThreadState.cpp:548 123456789101112status_t IPCThreadState::transact(int32_t handle, uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // handle=0, code=ADD_SERVICE_TRANSACTION, flags=0 status_t err = data.errorCheck(); flags |= TF_ACCEPT_FDS; &#x2026;&#x2026; err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, NULL); &#x2026;&#x2026; return err;} frameworks/native/libs/binder/IPCThreadState.cpp:904 123456789101112131415161718192021222324status_t IPCThreadState::writeTransactionData(int32_t cmd, uint32_t binderFlags, int32_t handle, uint32_t code, const Parcel&amp; data, status_t* statusBuffer){ // cmd=BC_TRANSACTION, binderFlags=TF_ACCEPT_FDS, handle=0, // code=ADD_SERVICE_TRANSACTION, binder_transaction_data tr; tr.target.ptr = 0; /* Don&apos;t pass uninitialized stack data to a remote process */ tr.target.handle = handle; tr.code = code; tr.flags = binderFlags; tr.cookie = 0; tr.sender_pid = 0; tr.sender_euid = 0; &#x2026;&#x2026; tr.data_size = data.ipcDataSize(); tr.data.ptr.buffer = data.ipcData(); tr.offsets_size = data.ipcObjectsCount()*sizeof(binder_size_t); tr.data.ptr.offsets = data.ipcObjects(); &#x2026;&#x2026; mOut.writeInt32(cmd); mOut.write(&amp;tr, sizeof(tr)); return NO_ERROR;} &#x5B83;&#x7EC4;&#x7EC7;&#x6210;&#x6700;&#x7EC8;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x4E3A;&#xFF1A;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（五）—— Parcel是怎么打包的？]]></title>
    <url>%2F2016%2F05%2F10%2F2016%2F0514BinderLearning5%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x6587;&#x4E2D;&#x66FE;&#x7ECF;&#x9047;&#x5230;&#x8FC7;Parcel&#xFF0C;&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x77E5;&#x9053;&#x4ED6;&#x8D1F;&#x8D23;&#x6570;&#x636E;&#x6253;&#x5305;&#x3002;&#x5728;checkService&#x7684;&#x8BF7;&#x6C42;/&#x54CD;&#x5E94;&#x4F53;&#x7CFB;&#x4E2D;&#xFF0C;Parcel&#x53EA;&#x6253;&#x5305;&#x4E86;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5982;Int32&#x3001;String16&#x2026;&#x2026;&#x540E;&#x9762;&#x8FD8;&#x8981;&#x7528;&#x4E8E;&#x6253;&#x5305;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;flat_binder_object&#xFF0C;&#x8FD9;&#x4F1A;&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#xFF0C;&#x56E0;&#x6B64;&#x6709;&#x5FC5;&#x8981;&#x62FF;&#x51FA;&#x6765;&#x5355;&#x72EC;&#x7814;&#x7A76;&#x3002;&#x6211;&#x4EEC;&#x4ECE;Parcel::writeInterfaceToken(&#x2026;)&#x8FFD;&#x8D77;&#xFF0C;&#x5B83;&#x7684;&#x5C42;&#x5C42;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x90FD;&#x5728;frameworks/native/libs/binder/Parcel.cpp&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x884C;&#x6570;&#x548C;&#x51FD;&#x6570;&#x540D;&#x4E3A;: &gt;582 writeInterfaceToken(&#x2026;) &gt;748 Parcel::writeInt32(int32_t val) &gt;1149 Parcel::writeAligned(val) &#x6240;&#x6709;&#x7684;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x6253;&#x5305;&#x6700;&#x540E;&#x90FD;&#x7531;writeAligned(&#x2026;)&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5176;&#x5185;&#x90E8;&#x903B;&#x8F91;&#x4E5F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C; frameworks/native/libs/binder/Parcel.cpp:1149 1234567891011121314template&lt;class T&gt;status_t Parcel::writeAligned(T val) { COMPILE_TIME_ASSERT_FUNCTION_SCOPE(PAD_SIZE_UNSAFE(sizeof(T)) == sizeof(T)); if ((mDataPos+sizeof(val)) &lt;= mDataCapacity) {restart_write: *reinterpret_cast&lt;T*&gt;(mData+mDataPos) = val; // &#x5C06;val&#x8FFD;&#x52A0;&#x5230;mData return finishWrite(sizeof(val)); } status_t err = growData(sizeof(val)); // &#x5982;&#x679C;mData&#x7A7A;&#x95F4;&#x4E0D;&#x591F;&#xFF0C;&#x5219;&#x5148;&#x6269;&#x5BB9; if (err == NO_ERROR) goto restart_write; return err;} mData&#x662F;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x6808;&#xFF0C;writeXXX&#x5219;&#x628A;&#x6570;&#x636E;&#x5199;&#x5165;&#x6808;&#xFF0C;&#x5982;&#x679C;mData&#x7A7A;&#x95F4;&#x4E0D;&#x591F;&#xFF0C;&#x5148;&#x7ED9;mData&#x6269;&#x5BB9;&#xFF0C;&#x5E76;&#x628A;&#x539F;&#x5148;&#x7684;&#x6570;&#x636E;&#x642C;&#x5230;&#x65B0;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x518D;&#x628A;&#x65B0;&#x6570;&#x636E;&#x5199;&#x5165;&#x6808;&#x3002; Parcel::writeStrongBinder(&#x2026;)&#x7684;&#x903B;&#x8F91;&#x66F4;&#x590D;&#x6742;&#x4E00;&#x4E9B;&#xFF0C;&#x5B83;&#x7684;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A; frameworks/native/libs/binder/Parcel.cpp &gt;872 Parcel::writeStrongBinder(const sp&amp; val) &gt;205 Parcel::flatten_binder(const sp&amp; /proc/, const sp&amp; binder =val, Parcel* out=this) &#x6765;&#x770B;flatten_binder(&#x2026;)&#xFF0C;frameworks/native/libs/binder/Parcel.cpp:205 12345678910111213141516171819202122232425262728293031status_t flatten_binder(const sp&lt;ProcessState&gt;&amp; /*proc*/, const sp&lt;IBinder&gt;&amp; binder, Parcel* out){ flat_binder_object obj; obj.flags = 0x7f | FLAT_BINDER_FLAG_ACCEPTS_FDS; if (binder != NULL) { IBinder *local = binder-&gt;localBinder(); if (!local) { // remote&#x7C7B;&#x578B;&#x7684;binder&#x5C01;&#x88C5;&#x903B;&#x8F91; BpBinder *proxy = binder-&gt;remoteBinder(); if (proxy == NULL) { ALOGE(&quot;null proxy&quot;); } const int32_t handle = proxy ? proxy-&gt;handle() : 0; obj.type = BINDER_TYPE_HANDLE; obj.binder = 0; /* Don&apos;t pass uninitialized stack data to a remote process */ obj.handle = handle; obj.cookie = 0; } else { // local&#x7C7B;&#x578B;&#x7684;binder&#x5C01;&#x88C5;&#x903B;&#x8F91; obj.type = BINDER_TYPE_BINDER; obj.binder = reinterpret_cast&lt;uintptr_t&gt;(local-&gt;getWeakRefs()); obj.cookie = reinterpret_cast&lt;uintptr_t&gt;(local); } } else { obj.type = BINDER_TYPE_BINDER; obj.binder = 0; obj.cookie = 0; } return finish_flatten_binder(binder, obj, out);} &#x5B83;&#x6839;&#x636E;&#x4F20;&#x5165;binder&#x7684;&#x7C7B;&#x578B;&#x505A;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x5C01;&#x88C5;&#xFF0C;&#x5728;frameworks/native/include/binder/IBinder.h:139&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;IBinder&#x58F0;&#x660E;&#x4E86;&#x4E24;&#x4E2A;&#x865A;&#x51FD;&#x6570;&#xFF1A; 12345678class IBinder : public virtual RefBase{public: &#x2026;&#x2026; virtual BBinder* localBinder(); virtual BpBinder* remoteBinder(); &#x2026;&#x2026;}; &#x5E76;&#x5728;frameworks/native/libs/binder/Binder.cpp:47&#x5B9A;&#x4E49;&#x4E86;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#xFF1A; 123456789BBinder* IBinder::localBinder(){ return NULL;}BpBinder* IBinder::remoteBinder(){ return NULL;} flat_binder_object&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5728;&#x300A;Binder&#x5B66;&#x4E60;&#x7B14;&#x8BB0;&#xFF08;&#x56DB;&#xFF09;&#x2014;&#x2014; ServiceManager&#x5982;&#x4F55;&#x54CD;&#x5E94;checkService&#x8BF7;&#x6C42;&#x300B;&#x7814;&#x7A76;ServiceManager&#x5982;&#x4F55;&#x7EC4;&#x7EC7;reply&#x6570;&#x636E;&#x65F6;&#x9047;&#x5230;&#x8FC7;&#xFF0C;&#x5B83;&#x5B9A;&#x4E49;&#x5728;external/kernel-headers/original/uapi/linux/binder.h:57&#x3002;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x7684;binder&#x5C01;&#x88C5;&#x6210;&#x7684;&#x6570;&#x636E;&#x793A;&#x610F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x7136;&#x540E;flatten_binder(&#x2026;)&#x8C03;&#x7528;finish_flatten_binder(&#x2026;)&#xFF0C;frameworks/native/libs/binder/Parcel.cpp:199 12345inline static status_t finish_flatten_binder( const sp&lt;IBinder&gt;&amp; /*binder*/, const flat_binder_object&amp; flat, Parcel* out){ return out-&gt;writeObject(flat, false);} &#x7EE7;&#x7EED;&#x8C03;&#x7528;writeObject(&#x2026;)&#xFF0C;frameworks/native/libs/binder/Parcel.cpp:1035 1234567891011121314151617181920status_t Parcel::writeObject(const flat_binder_object&amp; val, bool nullMetaData){ const bool enoughData = (mDataPos+sizeof(val)) &lt;= mDataCapacity; const bool enoughObjects = mObjectsSize &lt; mObjectsCapacity; if (enoughData &amp;&amp; enoughObjects) {restart_write: // &#x5982;&#x679C;&#x7A7A;&#x95F4;&#x8DB3;&#x591F;&#xFF0C;&#x4ED6;&#x628A;&#x524D;&#x9762;&#x7EC4;&#x88C5;&#x7684;flat_binder_object&#x5B9E;&#x4F53;&#x8FFD;&#x52A0;&#x5230;mData&#x91CC; *reinterpret_cast&lt;flat_binder_object*&gt;(mData+mDataPos) = val; &#x2026;&#x2026; if (nullMetaData || val.binder != 0) { // mObjects&#x8BB0;&#x5F55;&#x6BCF;&#x6B21;&#x5411;mData&#x8FFD;&#x52A0;&#x7684;flat_binder_object&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E; mObjects[mObjectsSize] = mDataPos; acquire_object(ProcessState::self(), val, this, &amp;mOpenAshmemSize); mObjectsSize++; } return finishWrite(sizeof(flat_binder_object)); } &#x2026;&#x2026;} &#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#xFF1A;Parcel&#x7684;&#x6570;&#x636E;&#x533A;&#x57DF;&#x5206;&#x4E24;&#x4E2A;&#x90E8;&#x5206;&#xFF1A;mData&#x548C;mObjects&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x7BA1;&#x662F;&#x57FA;&#x7840;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x8FD8;&#x662F;&#x5BF9;&#x8C61;&#x5B9E;&#x4F53;&#xFF0C;&#x5168;&#x90FD;&#x8FFD;&#x52A0;&#x5230;mData&#x91CC;&#xFF0C;mObjects&#x662F;&#x4E00;&#x4E2A;&#x504F;&#x79FB;&#x91CF;&#x6570;&#x7EC4;&#xFF0C;&#x8BB0;&#x5F55;&#x6240;&#x6709;&#x5B58;&#x653E;&#x5728;mData&#x4E2D;&#x7684;flat_binder_object&#x5B9E;&#x4F53;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x3002;Parcel&#x7684;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5982;&#x4E0B;&#xFF1A; Parcel&#x7684;&#x6570;&#x636E;&#x6A21;&#x578B;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（四）—— ServiceManager如何响应checkService请求]]></title>
    <url>%2F2016%2F05%2F09%2F2016%2F0514BinderLearning4%2F</url>
    <content type="text"><![CDATA[&#x8FD9;&#x8981;&#x4ECE;frameworks/native/cmds/servicemanager/service_manager.c:347&#x7684;main&#x51FD;&#x6570;&#x8BF4;&#x8D77;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x540E;&#x751F;&#x6210;servicemanager&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142int main(int argc, char **argv){ struct binder_state *bs; bs = binder_open(128*1024); // &#x6253;&#x5F00;/dev/binder&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x6620;&#x5C04;&#x5230;&#x5185;&#x5B58; if (!bs) { ALOGE(&quot;failed to open binder driver\n&quot;); return -1; } //&#x5411;/dev/binder&#x5199;&#x5165;BINDER_SET_CONTEXT_MGR&#x547D;&#x4EE4; if (binder_become_context_manager(bs)) { ALOGE(&quot;cannot become context manager (%s)\n&quot;, strerror(errno)); return -1; } selinux_enabled = is_selinux_enabled(); sehandle = selinux_android_service_context_handle(); selinux_status_open(true); if (selinux_enabled &gt; 0) { if (sehandle == NULL) { ALOGE(&quot;SELinux: Failed to acquire sehandle. Aborting.\n&quot;); abort(); } if (getcon(&amp;service_manager_context) != 0) { ALOGE(&quot;SELinux: Failed to acquire service_manager context. Aborting.\n&quot;); abort(); } } union selinux_callback cb; cb.func_audit = audit_callback; selinux_set_callback(SELINUX_CB_AUDIT, cb); cb.func_log = selinux_log_callback; selinux_set_callback(SELINUX_CB_LOG, cb); binder_loop(bs, svcmgr_handler); return 0;} &#x63A5;&#x4E0B;&#x6765;&#x9047;&#x5230;se_xxx&#x76F8;&#x5173;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x548C;&#x51FD;&#x6570;&#xFF0C;&#x672A;&#x6765;&#x6211;&#x4EEC;&#x8FD8;&#x4F1A;&#x9047;&#x5230;&#x3002;&#x4ED6;&#x4EEC;&#x662F;Android&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x5B89;&#x5168;&#x673A;&#x5236;&#xFF0C;&#x8D1F;&#x8D23;&#x7BA1;&#x7406;&#x5BF9;&#x8D44;&#x6E90;&#x7684;&#x5B89;&#x5168;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#xFF0C;&#x901A;&#x5E38;&#x53EA;&#x662F;&#x56DE;&#x7B54;&#x67D0;&#x4E2A;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x6709;&#x6743;&#x9650;&#x8BBF;&#x95EE;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x5E72;&#x6D89;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5B8C;&#x5168;&#x5FFD;&#x7565;&#x3002;&#x91CD;&#x70B9;&#x5728;binder_loop(&#x2026;)&#x3002; # binder_loop(bs, svcmgr_handler) &#x5982;&#x4E0B;&#xFF1A; frameworks/native/cmds/servicemanager/binder.c:372 123456789101112131415161718192021222324252627282930313233343536void binder_loop(struct binder_state *bs, binder_handler func){ int res; struct binder_write_read bwr; uint32_t readbuf[32]; bwr.write_size = 0; bwr.write_consumed = 0; bwr.write_buffer = 0; readbuf[0] = BC_ENTER_LOOPER; binder_write(bs, readbuf, sizeof(uint32_t)); for (;;) { bwr.read_size = sizeof(readbuf); bwr.read_consumed = 0; bwr.read_buffer = (uintptr_t) readbuf; res = ioctl(bs-&gt;fd, BINDER_WRITE_READ, &amp;bwr); if (res &lt; 0) { ALOGE(&quot;binder_loop: ioctl failed (%s)\n&quot;, strerror(errno)); break; } res = binder_parse(bs, 0, (uintptr_t) readbuf, bwr.read_consumed, func); if (res == 0) { ALOGE(&quot;binder_loop: unexpected reply?!\n&quot;); break; } if (res &lt; 0) { ALOGE(&quot;binder_loop: io error %d %s\n&quot;, res, strerror(errno)); break; } }} &#x5B83;&#x5FAA;&#x73AF;&#x5411;/dev/binder&#x8BFB;&#x5199;&#x5185;&#x5BB9;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x8BFB;&#x5230;&#x7684;&#x6570;&#x636E;&#x505A;&#x89E3;&#x6790;&#xFF0C;&#x518D;&#x6DF1;&#x5165;binder_parse(&#x2026;) frameworks/native/cmds/servicemanager/binder.c:204 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384int binder_parse(struct binder_state *bs, struct binder_io *bio, uintptr_t ptr, size_t size, binder_handler func){ int r = 1; uintptr_t end = ptr + (uintptr_t) size; while (ptr &lt; end) { uint32_t cmd = *(uint32_t *) ptr; ptr += sizeof(uint32_t);#if TRACE fprintf(stderr,&quot;%s:\n&quot;, cmd_name(cmd));#endif switch(cmd) { case BR_NOOP: break; case BR_TRANSACTION_COMPLETE: break; case BR_INCREFS: case BR_ACQUIRE: case BR_RELEASE: case BR_DECREFS:#if TRACE fprintf(stderr,&quot; %p, %p\n&quot;, (void *)ptr, (void *)(ptr + sizeof(void *)));#endif ptr += sizeof(struct binder_ptr_cookie); break; case BR_TRANSACTION: { struct binder_transaction_data *txn = (struct binder_transaction_data *) ptr; if ((end - ptr) &lt; sizeof(*txn)) { ALOGE(&quot;parse: txn too small!\n&quot;); return -1; } binder_dump_txn(txn); if (func) { unsigned rdata[256/4]; struct binder_io msg; struct binder_io reply; int res; bio_init(&amp;reply, rdata, sizeof(rdata), 4); bio_init_from_txn(&amp;msg, txn); res = func(bs, txn, &amp;msg, &amp;reply); binder_send_reply(bs, &amp;reply, txn-&gt;data.ptr.buffer, res); } ptr += sizeof(*txn); break; } case BR_REPLY: { struct binder_transaction_data *txn = (struct binder_transaction_data *) ptr; if ((end - ptr) &lt; sizeof(*txn)) { ALOGE(&quot;parse: reply too small!\n&quot;); return -1; } binder_dump_txn(txn); if (bio) { bio_init_from_txn(bio, txn); bio = 0; } else { /* todo FREE BUFFER */ } ptr += sizeof(*txn); r = 0; break; } case BR_DEAD_BINDER: { struct binder_death *death = (struct binder_death *)(uintptr_t) *(binder_uintptr_t *)ptr; ptr += sizeof(binder_uintptr_t); death-&gt;func(bs, death-&gt;ptr); break; } case BR_FAILED_REPLY: r = -1; break; case BR_DEAD_REPLY: r = -1; break; default: ALOGE(&quot;parse: OOPS %d\n&quot;, cmd); return -1; } } return r;} &#x91CD;&#x70B9;&#x5728;case BR_TRANSACTION&#x91CC;&#xFF0C;&#x5B83;&#x63A5;&#x6536;&#x5230;&#x7684;txn&#x6B63;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x7684;tr&#x3002;&#x9996;&#x5148;&#x521D;&#x59CB;&#x5316;&#x597D;reply&#x6570;&#x636E;&#x7ED3;&#x6784; &#x7136;&#x540E;&#x521D;&#x59CB;&#x5316;msg&#xFF0C;&#x5176;&#x4E2D;&#x84DD;&#x8272;&#x90E8;&#x5206;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7EA2;&#x8272;&#x90E8;&#x5206;&#x662F;ServiceManager&#x7AEF;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#xFF1A; &#x63A5;&#x4E0B;&#x6765;&#x6267;&#x884C;func(&#x2026;)&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6307;&#x9488;&#xFF0C;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x4F20;&#x8FDB;&#x6765;&#xFF0C;&#x5411;&#x4E0A;&#x8FFD;&#x6EAF;binder_loop(&#x2026;) &#x2013; main(&#x2026;)&#x627E;&#x5230;&#x8BE5;&#x51FD;&#x6570;&#x6307;&#x9488;&#x7684;&#x5B9E;&#x53C2;&#x662F;svcmgr_handler 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697frameworks/native/cmds/servicemanager/service_manager.c:244int svcmgr_handler(struct binder_state *bs, struct binder_transaction_data *txn, struct binder_io *msg, struct binder_io *reply){ struct svcinfo *si; uint16_t *s; size_t len; uint32_t handle; uint32_t strict_policy; int allow_isolated; //ALOGI(&quot;target=%p code=%d pid=%d uid=%d\n&quot;, // (void*) txn-&gt;target.ptr, txn-&gt;code, txn-&gt;sender_pid, txn-&gt;sender_euid); if (txn-&gt;target.ptr != BINDER_SERVICE_MANAGER) return -1; if (txn-&gt;code == PING_TRANSACTION) return 0; // Equivalent to Parcel::enforceInterface(), reading the RPC // header with the strict mode policy mask and the interface name. // Note that we ignore the strict_policy and don&apos;t propagate it// further (since we do no outbound RPCs anyway).// &#x4ECE;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x6765;&#x7684;Parcel&#x6570;&#x636E;&#x4E2D;&#x53D6;&#x51FA;InterfaceToken strict_policy = bio_get_uint32(msg); s = bio_get_string16(msg, &amp;len); if (s == NULL) { return -1; } // svcmgr_id&#x5C31;&#x662F;android.os.IserviceManager&#xFF0C;&#x5B9A;&#x4E49;&#x5728;service_manager.c:164 if ((len != (sizeof(svcmgr_id) / 2)) || memcmp(svcmgr_id, s, sizeof(svcmgr_id))) { fprintf(stderr,&quot;invalid id %s\n&quot;, str8(s, len)); return -1; } if (sehandle &amp;&amp; selinux_status_updated() &gt; 0) { struct selabel_handle *tmp_sehandle = selinux_android_service_context_handle(); if (tmp_sehandle) { selabel_close(sehandle); sehandle = tmp_sehandle; } } switch(txn-&gt;code) { case SVC_MGR_GET_SERVICE: case SVC_MGR_CHECK_SERVICE: s = bio_get_string16(msg, &amp;len); // &#x53D6;&#x51FA;Parcel&#x4E2D;&#x7684;&quot;service.testservice&quot;&#x5B57;&#x4E32; if (s == NULL) { return -1; } handle = do_find_service(bs, s, len, txn-&gt;sender_euid, txn-&gt;sender_pid); if (!handle) break; bio_put_ref(reply, handle); return 0; case SVC_MGR_ADD_SERVICE: s = bio_get_string16(msg, &amp;len); if (s == NULL) { return -1; } handle = bio_get_ref(msg); allow_isolated = bio_get_uint32(msg) ? 1 : 0; if (do_add_service(bs, s, len, handle, txn-&gt;sender_euid, allow_isolated, txn-&gt;sender_pid)) return -1; break; case SVC_MGR_LIST_SERVICES: { uint32_t n = bio_get_uint32(msg); if (!svc_can_list(txn-&gt;sender_pid)) { ALOGE(&quot;list_service() uid=%d - PERMISSION DENIED\n&quot;, txn-&gt;sender_euid); return -1; } si = svclist; while ((n-- &gt; 0) &amp;&amp; si) si = si-&gt;next; if (si) { bio_put_string16(reply, si-&gt;name); return 0; } return -1; } default: ALOGE(&quot;unknown code %d\n&quot;, txn-&gt;code); return -1; } bio_put_uint32(reply, 0); return 0;} &#x7EE7;&#x7EED;&#x627E;do_find_service(&#x2026;)&#xFF0C;frameworks/native/cmds/servicemanager/service_manager.c:170 1234567891011121314151617181920212223uint32_t do_find_service(struct binder_state *bs, const uint16_t *s, size_t len, uid_t uid, pid_t spid){ struct svcinfo *si = find_svc(s, len); // &#x91CD;&#x70B9;&#x5728;&#x8FD9;&#x91CC; if (!si || !si-&gt;handle) { return 0; } if (!si-&gt;allow_isolated) { // If this service doesn&apos;t allow access from isolated processes, // then check the uid to see if it is isolated. uid_t appid = uid % AID_USER; if (appid &gt;= AID_ISOLATED_START &amp;&amp; appid &lt;= AID_ISOLATED_END) { return 0; } } if (!svc_can_find(s, len, spid)) { return 0; } return si-&gt;handle;} &#x518D;&#x5230;frameworks/native/cmds/servicemanager/service_manager.c:140 123456789101112struct svcinfo *find_svc(const uint16_t *s16, size_t len){ struct svcinfo *si; for (si = svclist; si; si = si-&gt;next) { if ((len == si-&gt;len) &amp;&amp; !memcmp(s16, si-&gt;name, len * sizeof(uint16_t))) { return si; } } return NULL;} &#x7EC8;&#x4E8E;&#x627E;&#x5230;&#x4E86;&#x5C3D;&#x5934;&#xFF0C;svclist&#x662F;&#x4E00;&#x4E2A;&#x94FE;&#x8868;&#xFF0C;ServiceManager&#x5728;&#x6536;&#x5230;checkService&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x6839;&#x636E;service name&#x904D;&#x5386;svclist&#xFF0C;&#x8FD4;&#x56DE;&#x547D;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x3002;&#x4E4B;&#x540E;&#x518D;&#x4E00;&#x8DEF;&#x56DE;&#x5230;&#x8C03;&#x7528;&#x7684;&#x539F;&#x70B9;&#xFF1A;find_svc -&gt; do_find_service&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x8282;&#x70B9;&#x7684;handle&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002;&#x8282;&#x70B9;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x5728;frameworks/native/cmds/servicemanager/service_manager.c:128 123456789struct svcinfo{ struct svcinfo *next; uint32_t handle; struct binder_death death; int allow_isolated; size_t len; uint16_t name[0];}; &#x4ECE;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x77E5;&#x9053;handle&#x662F;&#x4E00;&#x4E2A;&#x6574;&#x5F62;&#x6570;&#x5B57;&#xFF0C;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x6765;&#x7684;&#xFF1F;&#x80AF;&#x5B9A;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x5148;&#x6765;&#x8FD9;&#x91CC;&#x6CE8;&#x518C;&#x7684;&#xFF0C;&#x7136;&#x540E;ServiceManager&#x628A;&#x8282;&#x70B9;&#x4E2D;&#x7684;&#x4FE1;&#x606F;&#x7F13;&#x5B58;&#x5230;svclist&#x94FE;&#x8868;&#x91CC;&#x53BB;&#xFF0C;&#x7B49;&#x5F85;&#x5BA2;&#x6237;&#x7AEF;&#x8FC7;&#x6765;&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x628A;handle&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002; &#x7EE7;&#x7EED;&#x5411;&#x8C03;&#x7528;&#x539F;&#x70B9;&#x8FD4;&#x56DE;&#xFF0C;&#x4ECE;do_find_service &#x2013;&gt; svcmgr_handle frameworks/native/cmds/servicemanager/service_manager.c:296 12345handle = do_find_service(bs, s, len, txn-&gt;sender_euid, txn-&gt;sender_pid);if (!handle) break;bio_put_ref(reply, handle);return 0; svcmgr_handle&#x5F97;&#x5230;handle&#x540E;&#xFF0C;&#x8C03;&#x7528;bio_put_ref&#x628A;&#x5B83;&#x585E;&#x5230;reply&#x91CC;&#x3002;&#x7136;&#x540E;svcmgr_handle -&gt; binder_parse&#xFF0C;&#x540E;&#x8005;&#x8C03;&#x7528;binder_send_reply&#x628A;reply&#x53D1;&#x9001;&#x51FA;&#x53BB;&#x3002;&#x8FD9;&#x6837;ServiceManager&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4E00;&#x6B21;checkService&#x7684;&#x54CD;&#x5E94;&#x3002; &#x4E0D;&#x8FC7;&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#x9700;&#x8981;&#x5F04;&#x6E05;&#x695A;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x56DE;&#x5230;svcmgr_handle&#x7684;bio_put_ref(&#x2026;)&#x51FD;&#x6570;&#xFF0C;&#x770B;&#x770B;&#x4ED6;&#x662F;&#x600E;&#x4E48;&#x7EC4;&#x7EC7;reply&#x7684;&#xFF0C;frameworks/native/cmds/servicemanager/binder.c:505 1234567891011121314151617void bio_put_ref(struct binder_io *bio, uint32_t handle){ struct flat_binder_object *obj; if (handle) obj = bio_alloc_obj(bio); else obj = bio_alloc(bio, sizeof(*obj)); if (!obj) return; obj-&gt;flags = 0x7f | FLAT_BINDER_FLAG_ACCEPTS_FDS; obj-&gt;type = BINDER_TYPE_HANDLE; obj-&gt;handle = handle; obj-&gt;cookie = 0;} &#x8FD8;&#x8BB0;&#x5F97;reply&#x5427;&#xFF1F;&#x4E0A;&#x6587;&#x5728;&#x5E72;&#x6D3B;&#x4E4B;&#x524D;&#x7ED9;&#x5B83;&#x521D;&#x59CB;&#x5316;&#x6210;&#x8FD9;&#x6837;: &#x63A5;&#x4E0B;&#x6765;&#x8FDB;&#x5165;bio_alloc_obj(&#x2026;)&#xFF0C;frameworks/native/cmds/servicemanager/binder.c:468 12345678910111213141516static struct flat_binder_object *bio_alloc_obj(struct binder_io *bio){ struct flat_binder_object *obj; obj = bio_alloc(bio, sizeof(*obj)); if (obj &amp;&amp; bio-&gt;offs_avail) { bio-&gt;offs_avail--; // &#x5B83;&#x8BB0;&#x5F55;offs&#x533A;&#x57DF;&#x8FD8;&#x6709;&#x591A;&#x5C11;&#x5BB9;&#x91CF; // offs&#x533A;&#x57DF;&#x662F;&#x4E00;&#x4E2A;size_t&#x578B;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8BB0;&#x5F55;data&#x533A;&#x57DF;&#x4E2D;object&#x76F8;&#x5BF9;&#x4E8E;data0&#x7684;&#x504F;&#x79FB; *bio-&gt;offs++ = ((char*) obj) - ((char*) bio-&gt;data0); return obj; } bio-&gt;flags |= BIO_F_OVERFLOW; return NULL;} &#x7EE7;&#x7EED;&#x5230;bio_alloc(&#x2026;)&#xFF0C;frameworks/native/cmds/servicemanager/binder.c:437 12345678910111213static void *bio_alloc(struct binder_io *bio, size_t size){ // size=sizeof(flat_binder_object) size = (size + 3) &amp; (~3); if (size &gt; bio-&gt;data_avail) { // &#x6EA2;&#x51FA;&#x5224;&#x65AD; bio-&gt;flags |= BIO_F_OVERFLOW; return NULL; } else { // &#x4E3B;&#x5E72;&#x5728;&#x8FD9;&#xFF0C;&#x539F;&#x6765;&#x662F;&#x4ECE;bio-&gt;data&#x4E2D;&#x5206;&#x914D;&#x51FA;&#x7684;&#x7A7A;&#x95F4; void *ptr = bio-&gt;data; bio-&gt;data += size; bio-&gt;data_avail -= size; return ptr; }} &#x5230;bio_put_ref(&#x2026;)&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x65F6;&#xFF0C;&#x4ED6;&#x7EC4;&#x7EC7;&#x6210;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF0C;&#x6211;&#x628A;&#x88AB;&#x4FEE;&#x6539;&#x8FC7;&#x7684;&#x6210;&#x5458;&#x6807;&#x6A59;&#x8272;&#x4E86;&#xFF1A; binder_io&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7D22;&#x5F15;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x662F;&#x653E;&#x5728;rdata&#x4E2D;&#x7684;&#xFF0C;rdata&#x53C8;&#x5206;&#x4E24;&#x4E2A;&#x533A;&#x57DF;&#xFF1A;1&#x3001;object&#x6307;&#x9488;&#x7D22;&#x5F15;&#x533A;&#xFF1B;2&#x3001;&#x6570;&#x636E;&#x533A;&#x3002;&#x6570;&#x636E;&#x533A;&#x5B58;&#x653E;&#x6709;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5982;int&#x3001;string&#xFF1B;&#x4E5F;&#x6709;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5982;flat_binder_object&#x3002;object&#x6307;&#x9488;&#x7D22;&#x5F15;&#x533A;&#x8BB0;&#x5F55;&#x6570;&#x636E;&#x533A;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x3002;binder_io&#x5219;&#x8BB0;&#x5F55;rdata&#x533A;&#x57DF;&#x6BCF;&#x4E2A;&#x90E8;&#x5206;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#x3001;&#x5F53;&#x524D;&#x6808;&#x9876;&#x4F4D;&#x7F6E;&#x548C;&#x6240;&#x5269;&#x7A7A;&#x95F4;&#x3002; svcmgr_handle(&#x2026;)&#x8C03;&#x7528;bio_put_ref(&#x2026;)&#x7EC4;&#x7EC7;&#x5B8C;reply&#x6570;&#x636E;&#x4E4B;&#x540E;&#x5C31;&#x8FD4;&#x56DE;&#x5230;binder_parser(&#x2026;)&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;binder_sendbinder_parse_raply(&#x2026;) frameworks/native/cmds/servicemanager/binder.c:245 12res = func(bs, txn, &amp;msg, &amp;reply);binder_send_reply(bs, &amp;reply, txn-&gt;data.ptr.buffer, res); svcmgr_handle&#x7684;&#x8FD4;&#x56DE;&#x503C;res&#x4E3A;0&#xFF0C;&#x8868;&#x793A;&#x6210;&#x529F;&#xFF0C;&#x8BE5;&#x503C;&#x88AB;&#x4F20;&#x5165;binder_send_reply(&#x2026;)&#x3002;&#x4E00;&#x5E76;&#x88AB;&#x4F20;&#x5165;&#x7684;&#x8FD8;&#x6709;txn&#x7684;&#x6570;&#x636E;&#x6210;&#x5458;data.ptr.buffer&#xFF0C;&#x8FD9;&#x662F;&#x4ECE;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x6765;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#xFF0C;&#x7EE7;&#x7EED;&#x8FDB;&#x5165;&#x51FD;&#x6570; frameworks/native/cmds/servicemanager/binder.c:170 123456789101112131415161718192021222324252627282930313233void binder_send_reply(struct binder_state *bs, struct binder_io *reply, binder_uintptr_t buffer_to_free, int status){ // status=0 struct { uint32_t cmd_free; binder_uintptr_t buffer; uint32_t cmd_reply; struct binder_transaction_data txn; } __attribute__((packed)) data; data.cmd_free = BC_FREE_BUFFER; data.buffer = buffer_to_free; data.cmd_reply = BC_REPLY; data.txn.target.ptr = 0; data.txn.cookie = 0; data.txn.code = 0; if (status) { data.txn.flags = TF_STATUS_CODE; data.txn.data_size = sizeof(int); data.txn.offsets_size = 0; data.txn.data.ptr.buffer = (uintptr_t)&amp;status; data.txn.data.ptr.offsets = 0; } else { data.txn.flags = 0; data.txn.data_size = reply-&gt;data - reply-&gt;data0; data.txn.offsets_size = ((char*) reply-&gt;offs) - ((char*) reply-&gt;offs0); data.txn.data.ptr.buffer = (uintptr_t)reply-&gt;data0; data.txn.data.ptr.offsets = (uintptr_t)reply-&gt;offs0; } binder_write(bs, &amp;data, sizeof(data));} &#x8FD9;&#x662F;&#x5728;&#x7EC4;&#x7EC7;&#x5B8C;&#x6574;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002;&#x628A;&#x5B8C;&#x6574;&#x7684;&#x6570;&#x636E;&#x63CF;&#x7ED8;&#x51FA;&#x6765;&#x5982;&#x4E0B;&#xFF0C;&#x771F;&#x662F;&#x4E00;&#x76D8;&#x5927;&#x68CB;&#xFF01;&#x5BA2;&#x6237;&#x7AEF;&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x7528;&#x84DD;&#x8272;&#x6807;&#x51FA;&#xFF0C;ServiceManager&#x7EC4;&#x7EC7;&#x7684;&#x6570;&#x636E;&#x7528;&#x7EA2;&#x8272;&#x6807;&#x51FA;&#x3002;&#x4ECE;&#x56FE;&#x4E0A;&#x53EF;&#x4EE5;&#x6E05;&#x6670;&#x5730;&#x770B;&#x51FA;&#x539F;&#x6765;reply&#x5E76;&#x6CA1;&#x6709;&#x6253;&#x5230;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x5305;&#x91CC;&#xFF0C;&#x53EA;&#x662F;&#x4F5C;&#x4E2D;&#x95F4;&#x7F13;&#x5B58;&#x4E4B;&#x7528;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（三）—— binder客户端是如何组织checkService数据的？]]></title>
    <url>%2F2016%2F05%2F08%2F2016%2F0514BinderLearning3%2F</url>
    <content type="text"><![CDATA[&#x8D77;&#x70B9;&#x4ECE;TestClient.cpp&#x7684;main&#x51FD;&#x6570;&#x53D1;&#x8D77;&#xFF1A; 1234567int main() { sp &lt; IServiceManager &gt; sm = defaultServiceManager(); sp &lt; IBinder &gt; binder = sm-&gt;getService(String16(&quot;service.testservice&quot;)); sp&lt;ITestService&gt; cs = interface_cast &lt; ITestService &gt; (binder); cs-&gt;test(); return 0;} &#x524D;&#x6587;&#x5DF2;&#x7ECF;&#x5206;&#x6790;&#x8FC7;sm&#x662F;new BpServiceManager(new BpBinder(0))&#xFF0C;&#x4E8E;&#x662F;sm-&gt;getService(&#x2026;)&#x7684;&#x884C;&#x4E3A;&#x5E94;&#x8BE5;&#x627E;BpServiceManager::getService(&#x2026;)&#xFF0C;frameworks/native/libs/binder/IServiceManager.cpp:134 12345678910111213141516 virtual sp&lt;IBinder&gt; getService(const String16&amp; name) const { ... ... sp&lt;IBinder&gt; svc = checkService(name); // &#x8FD9;&#x91CC;&#x662F;&#x5173;&#x952E;&#x4EE3;&#x7801; if (svc != NULL) return svc; ... ... return NULL;} virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const { Parcel data, reply; data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor()); data.writeString16(name); remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply); return reply.readStrongBinder(); } &#x8FFD;&#x8E2A;BpBinder::transaction(...) BpServiceManager::remote()&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;&#x6210;&#x5458;&#x53D8;&#x91CF;mRemote&#xFF0C;&#x524D;&#x6587;&#x4E5F;&#x5206;&#x6790;&#x8FC7;&#x4E86;&#xFF0C;&#x4E5F;&#x5373;&#x662F;new BpBinder(0)&#x3002;&#x56E0;&#x6B64;remote()-&gt;transact(&#x2026;)&#x8C03;&#x7528;&#x7684;&#x662F;BpBinder::transact(&#x2026;)&#xFF0C; frameworks/native/libs/binder/BpBinder.cpp:159 12345678910111213status_t BpBinder::transact( uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // code=CHECK_SERVICE_TRANSACTION, flags=0 // Once a binder has died, it will never come back to life. if (mAlive) { status_t status = IPCThreadState::self()-&gt;transact( mHandle, code, data, reply, flags); if (status == DEAD_OBJECT) mAlive = 0; return status; } return DEAD_OBJECT;} IPCThreadState::self()&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x6765;&#x770B;&#x5E94;&#x8BE5;&#x53C8;&#x662F;&#x4E2A;&#x5DE5;&#x5382;&#x7C7B;&#xFF08;&#x524D;&#x6587;&#x9047;&#x5230;&#x7684;ProcessState&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x547D;&#x540D;&#x7684;&#xFF09;&#xFF0C;&#x5B83;&#x662F;&#x4E2A;&#x7EBF;&#x7A0B;&#x5355;&#x4F53;&#xFF0C;&#x6BCF;&#x7EBF;&#x7A0B;&#x4E00;&#x4EFD;&#x3002;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x6682;&#x4E14;&#x4E0D;&#x8868;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x5F53;&#x524D;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x5176;transact(&#x2026;)&#x8DDF;&#x7EBF;&#x7A0B;&#x5355;&#x4F53;&#x6CA1;&#x5565;&#x5173;&#x7CFB;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x8FDB;&#x5165;IPCThreadState::transact(&#x2026;)&#x51FD;&#x6570;&#x3002; frameworks/native/libs/binder/IPCThreadState.cpp:548 123456789101112131415161718192021222324status_t IPCThreadState::transact(int32_t handle, uint32_t code, const Parcel&amp; data, Parcel* reply, uint32_t flags){ // handle=0, code=CHECK_SERVICE_TRANSACTION, flags=0, reply&#x975E;&#x7A7A; ... ... flags |= TF_ACCEPT_FDS; ... ... err = writeTransactionData(BC_TRANSACTION, flags, handle, code, data, NULL); ... ... if ((flags &amp; TF_ONE_WAY) == 0) { ... ... if (reply) { // &#x5728;checkService(&#x2026;)&#x4F20;&#x5165;&#x4E86;&#x975E;&#x7A7A;&#x7684;reply&#x53C2;&#x6570; err = waitForResponse(reply); } else { Parcel fakeReply; err = waitForResponse(&amp;fakeReply); } ... ... } else { err = waitForResponse(NULL, NULL); } return err;} &#x8FD9;&#x4E48;&#x957F;&#x4E00;&#x5927;&#x6BB5;&#xFF0C;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x53EA;&#x6709;&#x4E24;&#x884C;&#xFF0C;&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x6765;&#x770B;&#x5C31;&#x662F;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#x548C;&#x63A5;&#x6536;&#x5E94;&#x7B54;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x6211;&#x4EEC;&#x5148;&#x7814;&#x7A76;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x3002; ## writeTransactionData(...) frameworks/native/libs/binder/IPCThreadState.cpp:904 123456789101112131415161718192021222324status_t IPCThreadState::writeTransactionData(int32_t cmd, uint32_t binderFlags, int32_t handle, uint32_t code, const Parcel&amp; data, status_t* statusBuffer){ // cmd=BC_TRANSACTION, binderFlags=TF_ACCEPT_FDS, handle=0, // code=CHECK_SERVICE_TRANSACTION, binder_transaction_data tr; tr.target.ptr = 0; /* Don&apos;t pass uninitialized stack data to a remote process */ tr.target.handle = handle; tr.code = code; tr.flags = binderFlags; tr.cookie = 0; tr.sender_pid = 0; tr.sender_euid = 0; ... ... tr.data_size = data.ipcDataSize(); tr.data.ptr.buffer = data.ipcData(); tr.offsets_size = data.ipcObjectsCount()*sizeof(binder_size_t); tr.data.ptr.offsets = data.ipcObjects(); ... ... mOut.writeInt32(cmd); mOut.write(&amp;tr, sizeof(tr)); return NO_ERROR;} &#x8BE5;&#x51FD;&#x6570;&#x5C31;&#x662F;&#x628A;&#x4E00;&#x5806;&#x53C2;&#x6570;&#x7EC4;&#x88C5;&#x8FDB;binder_transaction_data&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5E76;&#x5199;&#x8FDB;mOut&#x3002;&#x5176;&#x4E2D;data&#x662F;&#x5728;checkService(&#x2026;)&#x4E2D;&#x7EC4;&#x88C5;&#x7684;Parcel&#x6570;&#x636E;&#xFF1A; data.ipcObjectsCount()*sizeof(binder_size_t)&#x4EE5;&#x53CA;data.ipcObjects()&#x5206;&#x522B;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x4ECE;&#x547D;&#x540D;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x4ED6;&#x5E94;&#x8BE5;&#x662F;&#x6307;&#x4FDD;&#x5B58;&#x5728;data&#x4E2D;&#x7684;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x663E;&#x7136;&#x5728;&#x7EC4;&#x7EC7;checkService&#x65F6;&#x7684;Parcel&#x6570;&#x636E;&#x4E2D;&#x662F;&#x6CA1;&#x6709;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x4E0D;&#x6DF1;&#x7A76;&#x5B83;&#x3002; struct binder_transaction_data &#x6765;&#x770B;&#x770B;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5B9A;&#x4E49;&#x5728;external/kernel-headers/original/uapi/linux/binder.h:129 123456789101112131415161718192021222324252627struct binder_transaction_data { union { /* target descriptor of command transaction */ __u32 handle; /* target descriptor of return transaction */ binder_uintptr_t ptr; } target; binder_uintptr_t cookie; /* target object cookie */ __u32 code; /* transaction command */ /* General information about the transaction. */ __u32 flags; pid_t sender_pid; uid_t sender_euid; binder_size_t data_size; /* number of bytes of data */ binder_size_t offsets_size; /* number of bytes of offsets */ union { struct { /* transaction data */ binder_uintptr_t buffer; /* offsets from buffer to flat_binder_object structs */ binder_uintptr_t offsets; } ptr; __u8 buf[8]; } data;}; &#x4EE5;&#x4E0A;&#x5C31;&#x662F;&#x8BF7;&#x6C42;&#x7684;&#x6570;&#x636E;&#xFF0C;mOut&#x7684;&#x7C7B;&#x578B;&#x662F;Parcel&#xFF0C;&#x4F1A;&#x5728;&#x540E;&#x9762;&#x4ECB;&#x7ECD;&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x5C31;&#x662F;&#x6570;&#x636E;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x3002; waitForResponse(reply) &#x63A5;&#x4E0B;&#x6765;&#x770B;&#x5BF9;&#x5E94;&#x7B54;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5728;&#x6DF1;&#x5165;&#x51FD;&#x6570;&#x4E4B;&#x524D;&#xFF0C;&#x6709;&#x5FC5;&#x8981;&#x8C03;&#x8BD5;&#x4E00;&#x628A;&#x4EE3;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x4ECE;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x5C31;&#x80FD;&#x5206;&#x6790;&#xFF0C;&#x800C;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x7684;&#x5904;&#x7406;&#x5219;&#x4F9D;&#x8D56;&#x4E8E;&#x6536;&#x5230;&#x7684;&#x5E94;&#x7B54;&#x6570;&#x636E;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x8C03;&#x8BD5;&#x8FC7;&#x7A0B;&#x8BF7;&#x53C2;&#x89C1;&#xFF1A;&#x8C03;&#x8BD5;&#x5E94;&#x7B54;&#x6570;&#x636E; &#x51FD;&#x6570;waitForResponse(reply)&#x5B9A;&#x4E49;&#x5728;frameworks/native/libs/binder/IPCThreadState.cpp:712 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788status_t IPCThreadState::waitForResponse(Parcel *reply, status_t *acquireResult){ // reply = &#x662F;&#x5728;checkService&#x51FD;&#x6570;&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x6808;&#x53D8;&#x91CF;&#xFF0C;acquireResult=NULL uint32_t cmd; int32_t err; while (1) { // talkWithDriver()&#x53EA;&#x6709;&#x5728;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x9000;&#x51FA;&#xFF0C;&#x6536;&#x5230;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x957F;&#x5EA6;&#x4E3A;0&#x4E0D;&#x662F;&#x9519;&#x8BEF;&#xFF0C; // &#x56E0;&#x6B64;&#x6B63;&#x5E38;&#x7684;&#x903B;&#x8F91;&#x662F;&#x6536;&#x5230;BR_REPLY&#x624D;&#x9000;&#x51FA;&#x5FAA;&#x73AF; if ((err=talkWithDriver()) &lt; NO_ERROR) break; err = mIn.errorCheck(); if (err &lt; NO_ERROR) break; if (mIn.dataAvail() == 0) continue; cmd = (uint32_t)mIn.readInt32(); ... ... switch (cmd) { case BR_TRANSACTION_COMPLETE: if (!reply &amp;&amp; !acquireResult) goto finish; // &#x663E;&#x7136;&#x8FD9;&#x91CC;&#x6C38;&#x8FDC;&#x4E0D;&#x53EF;&#x80FD;finish break; case BR_DEAD_REPLY: err = DEAD_OBJECT; goto finish; case BR_FAILED_REPLY: err = FAILED_TRANSACTION; goto finish; case BR_ACQUIRE_RESULT: { ALOG_ASSERT(acquireResult != NULL, &quot;Unexpected brACQUIRE_RESULT&quot;); const int32_t result = mIn.readInt32(); if (!acquireResult) continue; // &#x8FD9;&#x4E5F;&#x4E0D;&#x53EF;&#x80FD;finish *acquireResult = result ? NO_ERROR : INVALID_OPERATION; } goto finish; case BR_REPLY: { binder_transaction_data tr; err = mIn.read(&amp;tr, sizeof(tr)); ALOG_ASSERT(err == NO_ERROR, &quot;Not enough command data for brREPLY&quot;); if (err != NO_ERROR) goto finish; if (reply) { if ((tr.flags &amp; TF_STATUS_CODE) == 0) { reply-&gt;ipcSetDataReference( reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer), tr.data_size, reinterpret_cast&lt;const binder_size_t*&gt;(tr.data.ptr.offsets), tr.offsets_size/sizeof(binder_size_t), freeBuffer, this); } else { err = *reinterpret_cast&lt;const status_t*&gt;(tr.data.ptr.buffer); freeBuffer(NULL, reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer), tr.data_size, reinterpret_cast&lt;const binder_size_t*&gt;(tr.data.ptr.offsets), tr.offsets_size/sizeof(binder_size_t), this); } } else { freeBuffer(NULL, reinterpret_cast&lt;const uint8_t*&gt;(tr.data.ptr.buffer), tr.data_size, reinterpret_cast&lt;const binder_size_t*&gt;(tr.data.ptr.offsets), tr.offsets_size/sizeof(binder_size_t), this); continue; } } goto finish; default: err = executeCommand(cmd); if (err != NO_ERROR) goto finish; break; } }finish: if (err != NO_ERROR) { if (acquireResult) *acquireResult = err; if (reply) reply-&gt;setError(err); mLastError = err; } return err;} &#x8C03;&#x8BD5;&#x7684;&#x7ED3;&#x679C;&#x5728;#46&#x884C;&#x7684;&#x4F4D;&#x7F6E;&#x65AD;&#x8FC7;&#x4E09;&#x6B21;&#xFF0C;&#x53EF;&#x662F;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x628A;&#x6BCF;&#x6B21;&#x65AD;&#x5230;&#x8FD9;&#x91CC;&#x7684;&#x6570;&#x636E;&#x89E3;&#x6790;&#x660E;&#x767D;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5F98;&#x5F8A;&#x4E86;&#x4E24;&#x5929;&#xFF0C;&#x6BCF;&#x5929;&#x8111;&#x5B50;&#x91CC;&#x5C31;&#x5728;&#x60F3;&#x8FD9;&#x5757;&#x4EE3;&#x7801;&#xFF0C;&#x597D;&#x96BE;&#x53D7;&#xFF01;Android&#x7684;C++&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x6709;&#x4F18;&#x5316;&#x9009;&#x9879;&#xFF0C;&#x5BFC;&#x81F4;&#x8C03;&#x8BD5;&#x7684;&#x884C;&#x53F7;&#x548C;&#x6267;&#x884C;&#x4F4D;&#x7F6E;&#x4E0D;&#x80FD;&#x7CBE;&#x786E;&#x543B;&#x5408;&#xFF0C;tr&#x7684;&#x6210;&#x5458;&#x5982;&#x4F55;&#x89E3;&#x91CA;&#x53C8;&#x662F;&#x4F9D;&#x8D56;&#x6570;&#x636E;&#x7684;&#xFF0C;&#x800C;&#x6570;&#x636E;&#x662F;&#x4ECE;Server&#x7AEF;&#x53D1;&#x8FC7;&#x6765;&#x7684;&#xFF0C;&#x4ECE;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;&#x6B63;&#x5411;&#x8FFD;&#x67E5;&#x662F;&#x67E5;&#x4E0D;&#x5230;&#x7684;&#x3002;&#x524D;&#x8FDB;&#x7684;&#x9053;&#x8DEF;&#x4F3C;&#x4E4E;&#x8D70;&#x4E0D;&#x901A;&#x4E86;&#xFF0C;&#x90A3;&#x5C31;&#x8D70;&#x53E6;&#x4E00;&#x6761;&#x8DEF;&#x5427;&#xFF0C;&#x4ECE;Server&#x7AEF;&#x51FA;&#x53D1;&#xFF0C;&#x770B;&#x770B;&#x5F53;Server&#x7AEF;&#x6536;&#x5230;checkService&#x7684;&#x8BF7;&#x6C42;&#x540E;&#x5982;&#x4F55;&#x54CD;&#x5E94;&#xFF0C;&#x518D;&#x6839;&#x636E;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x6765;&#x5206;&#x6790;Client&#x7AEF;&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x3002; IPCThreadState::talkWithDriver(bool doReceive) &#x5728;IPCThreadState::waitForResponse(...)&#x4E2D;&#x9996;&#x5148;&#x8C03;&#x7528;&#x4E86;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x58F0;&#x660E;&#x5728;frameworks/native/include/binder/IPCThreadState.h:98: status_t talkWithDriver(bool doReceive=true); &#x518D;&#x770B;&#x5176;&#x5B9A;&#x4E49;frameworks/native/include/binder/IPCThreadState.cpp:803 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061status_t IPCThreadState::talkWithDriver(bool doReceive){ // doReceive = true ... ... binder_write_read bwr; // Is the read buffer empty? // &#x6E38;&#x6807;&#x4F4D;&#x7F6E;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x6570;&#x636E;&#x5927;&#x5C0F;&#xFF0C;&#x8BF4;&#x660E;&#x8BFB;&#x5165;&#x7684;&#x6570;&#x636E;&#x90FD;&#x5DF2;&#x7ECF;&#x88AB;&#x6D88;&#x5316;&#x4E86; const bool needRead = mIn.dataPosition() &gt;= mIn.dataSize(); // We don&apos;t want to write anything if we are still reading // from data left in the input buffer and the caller // has requested to read the next data. const size_t outAvail = (!doReceive || needRead) ? mOut.dataSize() : 0; bwr.write_size = outAvail; bwr.write_buffer = (uintptr_t)mOut.data(); // This is what we&apos;ll read. if (doReceive &amp;&amp; needRead) { bwr.read_size = mIn.dataCapacity(); bwr.read_buffer = (uintptr_t)mIn.data(); } else { bwr.read_size = 0; bwr.read_buffer = 0; } ... ... // Return immediately if there is nothing to do. if ((bwr.write_size == 0) &amp;&amp; (bwr.read_size == 0)) return NO_ERROR; bwr.write_consumed = 0; bwr.read_consumed = 0; status_t err; do { ... ... if (ioctl(mProcess-&gt;mDriverFD, BINDER_WRITE_READ, &amp;bwr) &gt;= 0) err = NO_ERROR; else err = -errno; ... ... } while (err == -EINTR); ... ... if (err &gt;= NO_ERROR) { if (bwr.write_consumed &gt; 0) { if (bwr.write_consumed &lt; mOut.dataSize()) mOut.remove(0, bwr.write_consumed); else mOut.setDataSize(0); } if (bwr.read_consumed &gt; 0) { mIn.setDataSize(bwr.read_consumed); mIn.setDataPosition(0); } ... ... return NO_ERROR; } return err;} waitForResponse&#x6700;&#x7EC8;&#x4EA4;&#x51FA;&#x4E86;&#x4EC0;&#x4E48;&#x6837;&#x7684;reply &#x7B2C;&#x4E8C;&#x5929;&#x60F3;&#x60F3;&#x4E0D;&#x6B7B;&#x5FC3;&#xFF0C;&#x5C3D;&#x7BA1;waitForResponse()&#x5185;&#x90E8;&#x7684;&#x5206;&#x6790;&#x9047;&#x5230;&#x969C;&#x788D;&#x4E86;&#xFF0C;&#x6682;&#x4E14;&#x6401;&#x7F6E;&#x3002;&#x4F46;&#x53EF;&#x4EE5;&#x628A;waitForResponse()&#x6700;&#x7EC8;&#x4EA4;&#x51FA;&#x4E86;&#x4EC0;&#x4E48;&#x6837;&#x7684;reply&#x5206;&#x6790;&#x51FA;&#x6765;&#x3002;&#x56E0;&#x4E3A;&#x5728;&#x51FD;&#x6570;checkService()&#x4E2D;&#xFF0C;&#x5728;&#x6267;&#x884C;&#x5B8C;remote()-&gt;transact(...)&#x4E4B;&#x540E;&#x4F1A;&#x4ECE;reply&#x63D0;&#x53D6;&#x51FA;StrongBinder&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;waitForResponse()&#x7684;&#x6210;&#x679C;&#x5C31;&#x662F;reply&#x3002; &#x8C03;&#x8BD5;&#x7684;&#x8FC7;&#x7A0B;&#x8BE6;&#x89C1;&#x8C03;&#x8BD5;waitForResponse&#x7EC4;&#x88C5;&#x7684;reply &#x5177;&#x4F53;&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x662F;&#x5728;frameworks/native/libs/binder/IServiceManager.cpp:152 12345678virtual sp&lt;IBinder&gt; checkService( const String16&amp; name) const { Parcel data, reply; data.writeInterfaceToken(IServiceManager::getInterfaceDescriptor()); data.writeString16(name); remote()-&gt;transact(CHECK_SERVICE_TRANSACTION, data, &amp;reply); return reply.readStrongBinder(); } &#x8C03;&#x7528;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A; &#x4ECE;&#x8C03;&#x8BD5;&#x7ED3;&#x679C;&#x6765;&#x770B;&#xFF0C;flat-&gt;type&#x4E3A;BINDER_TYPE_HANDLE&#xFF0C;handle=1 frameworks/native/libs/binder/Parcel.cpp:293 123456789101112131415161718status_t unflatten_binder(const sp&lt;ProcessState&gt;&amp; proc, const Parcel&amp; in, sp&lt;IBinder&gt;* out){ const flat_binder_object* flat = in.readObject(false); if (flat) { switch (flat-&gt;type) { case BINDER_TYPE_BINDER: *out = reinterpret_cast&lt;IBinder*&gt;(flat-&gt;cookie); return finish_unflatten_binder(NULL, *flat, in); case BINDER_TYPE_HANDLE: // &#x4E8E;&#x662F;&#x8D70;&#x8FD9;&#x91CC; *out = proc-&gt;getStrongProxyForHandle(flat-&gt;handle); return finish_unflatten_binder( static_cast&lt;BpBinder*&gt;(out-&gt;get()), *flat, in); } } return BAD_TYPE;} &#x4E8E;&#x662F;&#x53C8;&#x56DE;&#x5230;&#x4E86;ProcessState::getStrongProxyForHandle(...)&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x8FD4;&#x56DE;&#x7684;&#x662F;new BpBinder(handle) &#x8C03;&#x8BD5;&#x5E94;&#x7B54;&#x6570;&#x636E; &#x521D;&#x59CB;&#x5316;&#x73AF;&#x5883;&#x3001;&#x7F16;&#x8BD1;&#x3001;&#x62F7;&#x8D1D;&#x6587;&#x4EF6;&#x7B49;&#xFF1A; 1234567891011121314$ source build/envsetup.sh # &#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;... ...$ lunch aosp_arm-eng... ...$ make -j8 # &#x7F16;&#x8BD1;&#x6E90;&#x7801;... ...$ mmm external/testservice # &#x7F16;&#x8BD1;testservice... ...$ emulator&amp; # &#x542F;&#x52A8;&#x6A21;&#x62DF;&#x5668;... ...# &#x628A;&#x6587;&#x4EF6;&#x62F7;&#x5230;&#x6A21;&#x62DF;&#x5668;$ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestServer_intermediates/LINKED/TestServer /data/local/tmp/testservice $ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient /data/local/tmp/testservice$ adb shell chmod 755 /data/local/tmp/testservice/* # &#x8D4B;&#x4E88;&#x53EF;&#x6267;&#x884C;&#x6743;&#x9650; &#x63A5;&#x4E0B;&#x6765;&#x9700;&#x8981;&#x542F;&#x52A8;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#xFF1A;1&#x3001;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x8FD0;&#x884C;Server&#xFF1B;2&#x3001;&#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x901A;&#x8FC7;gdbserver&#x8FD0;&#x884C;&#x5BA2;&#x6237;&#x7AEF;&#xFF1B;3&#x3001;&#x5728;&#x8C03;&#x8BD5;&#x673A;&#x4E0A;&#x8FD0;&#x884C;gdb ## &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x8FD0;&#x884C;Server 1$ adb shell /data/local/tmp/testservice/TestServer &#x5728;&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x901A;&#x8FC7;gdbserver&#x8FD0;&#x884C;&#x5BA2;&#x6237;&#x7AEF; 1$ adb shell gdbserver :1234 /data/local/tmp/testservice/TestClient &#x5728;&#x8C03;&#x8BD5;&#x673A;&#x4E0A;&#x8FD0;&#x884C;gdb 12345678910111213141516171819202122232425$ adb forward tcp:1234 tcp:1234 # forward&#x7AEF;&#x53E3;$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient(gdb) target remote :1234(gdb) b main # &#x8BBE;&#x7F6E;&#x65AD;&#x70B9;Breakpoint 1 at 0xb6f321fc: file external/testservice/TestClient.cpp, line 14.(gdb) c # continueContinuing.... ...Breakpoint 1, main () at external/testservice/TestClient.cpp:1414 int main() {# &#x8BBE;&#x7F6E;lib&#x641C;&#x7D22;&#x8DEF;&#x5F84;(gdb) set solib-absolute-prefix out/debug/target/product/generic/symbols/Reading symbols from out/debug/target/product/generic/symbols/system/bin/linker...done.... ...(gdb) b IPCThreadState.cpp:730 # &#x5728;waitForResponse(...)&#x8BBE;&#x7F6E;&#x65AD;&#x70B9;Breakpoint 2 at 0xb6ea3eb2: file frameworks/native/libs/binder/IPCThreadState.cpp, line 730.(gdb) c # continueContinuing.Breakpoint 2, android::IPCThreadState::waitForResponse (this=this@entry=0xb6c24000, reply=reply@entry=0xbebb7a24, acquireResult=acquireResult@entry=0x0) at frameworks/native/libs/binder/IPCThreadState.cpp:730730 switch (cmd) {(gdb) p cmd # &#x6253;&#x5370;cmd&#x7684;&#x503C;$1 = &lt;optimized out&gt; # &#x88AB;&#x4F18;&#x5316;&#x6389;&#x4E86;(gdb) p /x BR_TRANSACTION_COMPLETE # &#x53EF;&#x4EE5;&#x6253;&#x5370;&#x8FD9;&#x4E9B;&#x5E38;&#x91CF;$7 = 0x7206 cmd&#x7684;&#x503C;&#x88AB;&#x4F18;&#x5316;&#x6389;&#x4E86;&#xFF0C;&#x53EA;&#x597D;&#x91C7;&#x7528;&#x7B28;&#x529E;&#x6CD5;&#xFF0C;&#x5728;&#x5173;&#x952E;&#x7684;&#x903B;&#x8F91;&#x5206;&#x652F;&#x4E0A;&#x591A;&#x52A0;&#x4E00;&#x4E9B;&#x65AD;&#x70B9;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x53D1;&#x73B0;&#x628A;&#x65AD;&#x70B9;&#x5F80;&#x540E;&#x6253;&#xFF0C;cmd&#x5C31;&#x80FD;&#x6253;&#x5370;&#x51FA;&#x6765;&#x4E86;&#x3002;&#x518D;&#x6B21;&#x6B63;&#x5F0F;&#x8C03;&#x8BD5;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x7528;p /x BR_xxx&#x628A;&#x8FD9;&#x4E9B;&#x5E38;&#x91CF;&#x7684;&#x503C;&#x6253;&#x51FA;&#x6765;&#xFF1A; &#x5E38;&#x91CF; &#x503C; BR_OK 0x7201 BR_DEAD_REPLY 0x7205 BR_TRANSACTION_COMPLETE 0x7206 BR_NOOP 0x720c BR_SPAWN_LOOPER 0x720d BR_FINISHED 0x720e BR_FAILED_REPLY 0x7211 BR_ERROR 0x80047200 BR_TRANSACTION 0x80287202 BR_REPLY 0x80287203 BR_ACQUIRE_RESULT 0x80047204 BR_INCREFS 0x80087207 BR_ACQUIRE 0x80087208 BR_RELEASE 0x80087209 BR_DECREFS 0x8008720a BR_ATTEMPT_ACQUIRE 0x800c720b BR_DEAD_BINDER 0x8004720f BR_CLEAR_DEATH_NOTIFICATION_DONE 0x80047210 &#x6211;&#x628A;&#x901A;&#x7528;&#x7684;&#x8C03;&#x8BD5;&#x547D;&#x4EE4;&#x5199;&#x6210;&#x811A;&#x672C;&#xFF0C;&#x653E;&#x5728;&#x4E86;external-testservice/debug.gdb&#x4E2D;&#xFF0C;&#x7EE7;&#x7EED;&#x7B2C;&#x4E09;&#x4E2A;&#x7EC8;&#x7AEF;&#x7684;&#x8C03;&#x8BD5;&#x8FC7;&#x7A0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233$ adb forward tcp:1234 tcp:1234 # forward&#x7AEF;&#x53E3;$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient(gdb) source ../androidex/external-testservice/debug.gdb(gdb) common # &#x521D;&#x59CB;&#x5316;... ...(gdb) binder03a # &#x5728;761&#x3001;768&#x5904;&#x8BBE;&#x7F6E;&#x65AD;&#x70B9;(gdb) cContinuing.Breakpoint 2, android::IPCThreadState::waitForResponse (this=this@entry=0xb6be4000, reply=reply@entry=0xbe84fa24, acquireResult=acquireResult@entry=0x0) at frameworks/native/libs/binder/IPCThreadState.cpp:766766 freeBuffer, this);(gdb) p tr$1 = {target = {handle = 0, ptr = 0}, cookie = 0, code = 0, flags = 0, sender_pid = 0, sender_euid = 1000, data_size = 0, offsets_size = 0, data = {ptr = {buffer = 3064733736, offsets = 3064733736}, buf = &quot;( \254\266( \254\266&quot;}}(gdb) cContinuing.Breakpoint 2, android::IPCThreadState::waitForResponse (this=0xb6be4000, reply=0xbe84fa9c, acquireResult=0x0) at frameworks/native/libs/binder/IPCThreadState.cpp:766766 freeBuffer, this);(gdb) p tr$2 = {target = {handle = 0, ptr = 0}, cookie = 0, code = 0, flags = 0, sender_pid = 0, sender_euid = 1000, data_size = 16, offsets_size = 4, data = {ptr = {buffer = 3064733736, offsets = 3064733752}, buf = &quot;( \254\266\070 \254\266&quot;}}(gdb) x /3uwx 30647337360xb6ac2028: 0x73682a85 0x0000017f 0x00000001(gdb) cContinuing.Breakpoint 2, android::IPCThreadState::waitForResponse (this=0xb6be4000, reply=0xbe84fad4, acquireResult=0x0) at frameworks/native/libs/binder/IPCThreadState.cpp:766766 freeBuffer, this);(gdb) p tr$3 = {target = {handle = 0, ptr = 0}, cookie = 0, code = 0, flags = 0, sender_pid = 0, sender_euid = 0, data_size = 4, offsets_size = 0, data = {ptr = {buffer = 3064733736, offsets = 3064733740}, buf = &quot;( \254\266, \254\266&quot;}}(gdb) cContinuing.[Inferior 1 (process 1293) exited normally] &#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5728;761&#x521D;&#x547D;&#x4E2D;3&#x6B21;&#x3002;&#x4F46;&#x662F;&#x5BF9;&#x5176;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x542B;&#x4E49;&#xFF0C;&#x76EE;&#x524D;&#x8FD8;&#x6CA1;&#x6709;&#x68B3;&#x7406;&#x6E05;&#x695A;&#x3002; &#x8C03;&#x8BD5;waitForResponse&#x7EC4;&#x88C5;&#x7684;reply 12345678910111213141516171819202122232425262728293031323334353637$ ./prebuilts/gcc/darwin-x86/arm/arm-linux-androideabi-4.9/bin/arm-linux-androideabi-gdb out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient(gdb) source ../androidex/external-testservice/debug.gdb(gdb) common... ...Breakpoint 1, main () at external/testservice/TestClient.cpp:1414 int main() {(gdb) b IServiceManager.cpp:152 # &#x65AD;&#x5728;reply.readStrongBinder()Breakpoint 2 at 0xb6e7fe0c: file frameworks/native/libs/binder/IServiceManager.cpp, line 152.(gdb) cContinuing.Breakpoint 2, android::BpServiceManager::checkService (this=&lt;optimized out&gt;, name=...) at frameworks/native/libs/binder/IServiceManager.cpp:152152 return reply.readStrongBinder();(gdb) b Parcel.cpp:296 # &#x65AD;&#x5728;unflatten_binder(...)&#x5F00;&#x5934;Breakpoint 3 at 0xb6e82104: file frameworks/native/libs/binder/Parcel.cpp, line 296.(gdb) cContinuing.Breakpoint 3, android::unflatten_binder (proc=..., in=..., out=out@entry=0xbe9a9ae8) at frameworks/native/libs/binder/Parcel.cpp:296296 const flat_binder_object* flat = in.readObject(false);(gdb) n295 {(gdb) n296 const flat_binder_object* flat = in.readObject(false);(gdb) n298 if (flat) {(gdb) p *flat # &#x67E5;&#x770B;&#x4ECE;reply&#x4E2D;&#x8BFB;&#x51FA;&#x7684;flat_binder_object$3 = {type = 1936206469, flags = 383, {binder = 1, handle = 1}, cookie = 0}(gdb) p BINDER_TYPE_BINDER$4 = BINDER_TYPE_BINDER(gdb) p /x BINDER_TYPE_BINDER$5 = 0x73622a85(gdb) p /x BINDER_TYPE_HANDLE$6 = 0x73682a85(gdb) p /x 1936206469 # &#x6240;&#x4EE5;&#x8FD9;&#x4E2A;flat_binder_object&#x7C7B;&#x578B;&#x5C31;&#x662F;BINDER_TYPE_HANDLE$7 = 0x73682a85]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（二）—— defaultServiceManager()返回了什么？]]></title>
    <url>%2F2016%2F05%2F07%2F2016%2F0514BinderLearning2%2F</url>
    <content type="text"><![CDATA[&#x4E0D;&#x7BA1;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x8FD8;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x5934;&#x90E8;&#x90FD;&#x8981;&#x5148;&#x8C03;&#x7528; 1sp &lt; IServiceManager &gt; sm = defaultServiceManager(); defaultServiceManager()&#x90FD;&#x5E72;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x5B9E;&#x4F8B;&#x5462;&#xFF1F; &#x8BE5;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;frameworks/native/libs/binder/IServiceManager.cpp:33 1234567891011sp&lt;IServiceManager&gt; defaultServiceManager(){ if (gDefaultServiceManager != NULL) return gDefaultServiceManager; ... ... gDefaultServiceManager = interface_cast&lt;IServiceManager&gt;( ProcessState::self()-&gt;getContextObject(NULL)); ... ... return gDefaultServiceManager;} &#x5173;&#x952E;&#x6B65;&#x9AA4;&#x53EF;&#x4EE5;&#x5206;&#x89E3;&#x4E3A;&#x51E0;&#x6B65;&#xFF1A; 1. ProcessState::self() 2. ProcessState::getContextObject(NULL) 3. interface_cast&lt;IserviceManager&gt;(ProcessState::self()-&gt;getContextObject(NULL)) ProcessState::self() frameworks/native/libs/binder/ProcessState.cpp:70 123456789sp&lt;ProcessState&gt; ProcessState::self() // &#x53C8;&#x662F;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5355;&#x4F53;{ ... ... if (gProcess != NULL) { return gProcess; } gProcess = new ProcessState; // &#x9996;&#x6B21;&#x521B;&#x5EFA;&#x5728;&#x8FD9;&#x91CC; return gProcess;} ProcessState&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5F88;&#x7B80;&#x5355;&#xFF0C;frameworks/native/libs/binder/ProcessState.cpp:339 1234567891011121314151617ProcessState::ProcessState() : mDriverFD(open_driver()) // &#x8FD9;&#x91CC;&#x6253;&#x5F00;&#x4E86;/dev/binder&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26; , mVMStart(MAP_FAILED) , mThreadCountLock(PTHREAD_MUTEX_INITIALIZER) , mThreadCountDecrement(PTHREAD_COND_INITIALIZER) , mExecutingThreadsCount(0) , mMaxThreads(DEFAULT_MAX_BINDER_THREADS) , mManagesContexts(false) , mBinderContextCheckFunc(NULL) , mBinderContextUserData(NULL) , mThreadPoolStarted(false) , mThreadPoolSeq(1){ ... ... mVMStart = mmap(0, BINDER_VM_SIZE, PROT_READ, MAP_PRIVATE | MAP_NORESERVE, mDriverFD, 0); ... ...} ProcessState&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A; 1&#x3001;&#x521D;&#x59CB;&#x5316;&#x5217;&#x8868;&#x91CC;&#x8C03;&#x7528;opern_driver()&#xFF0C;&#x6253;&#x5F00;&#x4E86;&#x6587;&#x4EF6;/dev/binder&#xFF1B; 2&#x3001;&#x5C06;&#x6587;&#x4EF6;&#x6620;&#x5C04;&#x5230;&#x5185;&#x5B58;&#x3002; ProcessState::self()&#x8FD4;&#x56DE;&#x5355;&#x4F53;&#x5B9E;&#x4F8B;&#x3002; ProcessState::getContextObject(NULL) &#x63A5;&#x4E0B;&#x6765;&#x662F;defaultServiceManager()&#x7684;&#x7B2C;&#x4E8C;&#x6B65;&#x8C03;&#x7528;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;frameworks/native/libs/binder/ProcessState.cpp:85 1234sp&lt;IBinder&gt; ProcessState::getContextObject(const sp&lt;IBinder&gt;&amp; /*caller*/){ return getStrongProxyForHandle(0);} &#x7EE7;&#x7EED;&#x6DF1;&#x5165;&#xFF0C;frameworks/native/libs/binder/ProcessState.cpp:179 12345678910111213141516171819202122232425sp&lt;IBinder&gt; ProcessState::getStrongProxyForHandle(int32_t handle){ // handle = NULL sp&lt;IBinder&gt; result; ... ... handle_entry* e = lookupHandleLocked(handle); //&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x603B;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x975E;&#x7A7A;&#x5B9E;&#x4F8B; ... ... IBinder* b = e-&gt;binder; ... ... if (handle == 0) { // &#x9996;&#x6B21;&#x521B;&#x5EFA;b&#x4E3A;NULL&#xFF0C;handle&#x4E3A;0 ... ... Parcel data; status_t status = IPCThreadState::self()-&gt;transact( 0, IBinder::PING_TRANSACTION, data, NULL, 0); if (status == DEAD_OBJECT) return NULL; } b = new BpBinder(handle); e-&gt;binder = b; if (b) e-&gt;refs = b-&gt;getWeakRefs(); result = b; // &#x8FD4;&#x56DE;&#x7684;&#x662F;BpBinder(0) ... ... return result;} &#x56E0;&#x6B64;getStrongProxyForHandle(0)&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;new BpBinder(0)&#x3002;&#x6709;&#x51E0;&#x5904;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x518D;&#x56DE;&#x5934;&#x6765;&#x5173;&#x6CE8;&#x4E00;&#x4E0B;&#xFF1A; ## ProcessState::lookupHandleLocked(int32_t handle) &#x8BE5;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;frameworks/native/libs/binder/ProcessState.cpp:166 123456789101112ProcessState::handle_entry* ProcessState::lookupHandleLocked(int32_t handle){ const size_t N=mHandleToObject.size(); if (N &lt;= (size_t)handle) { handle_entry e; e.binder = NULL; e.refs = NULL; status_t err = mHandleToObject.insertAt(e, N, handle+1-N); if (err &lt; NO_ERROR) return NULL; } return &amp;mHandleToObject.editItemAt(handle);} &#x6210;&#x5458;&#x53D8;&#x91CF;mHandleToObject&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF1A; 1Vector&lt;handle_entry&gt; mHandleToObject; &#x8BE5;&#x6570;&#x7EC4;&#x4EE5;handle&#x4E3A;&#x7D22;&#x5F15;&#x4E0B;&#x6807;&#xFF0C;&#x8FD9;&#x4E2A;handle&#x662F;&#x9A71;&#x52A8;&#x5C42;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5206;&#x914D;&#x7684;&#x8FDB;&#x7A0B;&#x5185;&#x552F;&#x4E00;&#x7684;&#x6574;&#x5F62;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x6807;&#x8BC6;&#x4E00;&#x4E2A;binder&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x8FD9;&#x5728;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x8BB2;&#x5230;&#x3002; &#x8BE5;&#x51FD;&#x6570;&#x904D;&#x5386;&#x6570;&#x7EC4;&#x67E5;&#x627E;handle&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x627E;&#x5230;&#x5219;&#x4F1A;&#x5411;&#x8BE5;&#x6570;&#x7EC4;&#x4E2D;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x65B0;&#x5143;&#x7D20;&#x3002;&#x65B0;&#x5143;&#x7D20;&#x7684;binder&#x3001;refs&#x6210;&#x5458;&#x9ED8;&#x8BA4;&#x5747;&#x4E3A;NULL&#xFF0C;&#x5728;getStrongProxyForHandle(&#x2026;)&#x4E2D;&#x4F1A;&#x88AB;&#x8D4B;&#x503C;&#x3002; interface_cast&lt;IserviceManager&gt;(ProcessState::self()-&gt;getContextObject(NULL)) defaultServiceManager()&#x51FD;&#x6570;&#x6700;&#x7EC8;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x8FD9;&#x4E00;&#x5927;&#x5768;&#xFF0C;&#x51FD;&#x6570;interface_cast(&#x2026;)&#x5728;binder&#x4F53;&#x7CFB;&#x4E2D;&#x975E;&#x5E38;&#x5E38;&#x7528;&#xFF0C;&#x540E;&#x9762;&#x8FD8;&#x4F1A;&#x4E0D;&#x65AD;&#x9047;&#x89C1;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x5728;frameworks/native/include/binder/IInterface.h:41 123456template&lt;typename INTERFACE&gt;inline sp&lt;INTERFACE&gt; interface_cast(const sp&lt;IBinder&gt;&amp; obj){ // obj=ProcessState::self()-&gt;getContextObject(NULL)&#xFF0C;&#x5373; // new BpBinder(0) return INTERFACE::asInterface(obj);} &#x4EE3;&#x5165;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x53CA;&#x5B9E;&#x53C2;&#x540E;&#x4E3A;&#xFF1A; 1IServiceManager::asInterface(new BpBinder(0)); &#x8BE5;&#x51FD;&#x6570;&#x85CF;&#x5728;&#x5B8F;IMPLEMENT_META_INTERFACE&#x4E2D;&#xFF0C;frameworks/native/libs/binder/IServiceManager.cpp:185 1IMPLEMENT_META_INTERFACE(ServiceManager, &quot;android.os.IServiceManager&quot;); &#x5C55;&#x5F00;&#x540E;&#x4E3A;&#xFF1A; 12345678910111213android::sp&lt; IServiceManager &gt; IServiceManager::asInterface( const android::sp&lt;android::IBinder&gt;&amp; obj) { // obj=new BpBinder(0) android::sp&lt; IServiceManager &gt; intr; if (obj != NULL) { intr = static_cast&lt; IServiceManager *&gt;( obj-&gt;queryLocalInterface(IServiceManager::descriptor).get()); if (intr == NULL) { // &#x9996;&#x6B21;&#x4F1A;&#x8D70;&#x8FD9;&#x91CC; intr = new BpServiceManager(obj); } } return intr; } &#x56E0;&#x6B64;&#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;new BpServiceManager(new BpBinder(0))&#x3002; &gt; &#x7ECF;&#x8FC7;&#x5C42;&#x5C42;&#x62BD;&#x4E1D;&#x5265;&#x8327;&#x4E4B;&#x540E;&#xFF0C;defaultServiceManager()&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5373;&#x4E3A;&#xFF1A; &gt; new BpServiceManager(new BpBinder(0))&#x3002; &gt; &#x5B83;&#x8868;&#x793A;handle&#x4E3A;0&#x7684;binder&#x5F15;&#x7528;&#xFF0C;&#x5373;&#x5BF9;ServiceManager&#x7684;&#x5F15;&#x7528;&#x3002; &gt; &#x6211;&#x4EEC;&#x518D;&#x987A;&#x9053;&#x770B;&#x4E00;&#x4E0B;BpServiceManager&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x4EE5;&#x53CA;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;frameworks/native/libs/binder/IServiceManager.cpp:126 1class BpServiceManager : public BpInterface&lt;IServiceManager&gt; frameworks/native/libs/binder/IInterface.h:62 12template&lt;typename INTERFACE&gt;class BpInterface : public INTERFACE, public BpRefBase BpServiceManager&#x7EE7;&#x627F;&#x81EA;BpInterface&#xFF0C;&#x540E;&#x8005;&#x7EE7;&#x627F;&#x81EA;BpRefBase&#x3002; frameworks/native/libs/binder/IServiceManager.cpp:129 1234BpServiceManager(const sp&lt;IBinder&gt;&amp; impl) : BpInterface&lt;IServiceManager&gt;(impl){} frameworks/native/include/binder/IInterface.h:134 12345template&lt;typename INTERFACE&gt;inline BpInterface&lt;INTERFACE&gt;::BpInterface(const sp&lt;IBinder&gt;&amp; remote) : BpRefBase(remote){} frameworks/native/libs/binder/Binder.cpp:241 12345678910BpRefBase::BpRefBase(const sp&lt;IBinder&gt;&amp; o) : mRemote(o.get()), mRefs(NULL), mState(0){ extendObjectLifetime(OBJECT_LIFETIME_WEAK); if (mRemote) { mRemote-&gt;incStrong(this); // Removed on first IncStrong(). mRefs = mRemote-&gt;createWeak(this); // Held for our entire lifetime. }} BpServiceManager&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6CBF;&#x7740;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x4E00;&#x8DEF;&#x5C06;impl&#x53C2;&#x6570;&#x4F20;&#x9012;&#x7ED9;&#x57FA;&#x7C7B;BpRefBase&#xFF0C;&#x57FA;&#x7C7B;&#x5C06;&#x5B83;&#x8D4B;&#x7ED9;&#x6570;&#x636E;&#x6210;&#x5458;mRemote&#x3002;&#x5728;defaultServiceManager()&#x4E2D;&#x4F20;&#x7ED9;BpServiceManager&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x662F;new BpBinder(0)&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Binder学习笔记（一）引子]]></title>
    <url>%2F2016%2F04%2F25%2F2016%2F0511BinderLearning1%2F</url>
    <content type="text"><![CDATA[&#x7F51;&#x4E0A;&#x770B;&#x4E86;&#x5F88;&#x591A;&#x5173;&#x4E8E;binder&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x4F46;&#x6211;&#x8FD8;&#x662F;&#x60F3;&#x628A;&#x81EA;&#x5DF1;&#x7684;&#x5FC3;&#x8DEF;&#x5386;&#x7A0B;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x6709;&#x4E9B;&#x662F;&#x8DDF;&#x7740;&#x522B;&#x4EBA;&#x7684;&#x811A;&#x6B65;&#x9886;&#x7565;&#x9669;&#x5CFB;&#x98CE;&#x666F;&#xFF0C;&#x6709;&#x4E9B;&#x5219;&#x662F;&#x81EA;&#x5DF1;&#x53EA;&#x8EAB;&#x63A2;&#x5165;&#x4EE3;&#x7801;&#x6DF1;&#x5904;&#x6253;&#x635E;&#x51FA;&#x7684;&#x6536;&#x83B7;&#x3002;&#x6211;&#x4E0D;&#x786E;&#x5B9A;&#x662F;&#x5426;&#x5168;&#x90E8;&#x878D;&#x4F1A;&#x8D2F;&#x901A;&#xFF0C;&#x66F4;&#x62C5;&#x5FC3;&#x4E00;&#x4E24;&#x4E2A;&#x6708;&#x540E;&#x4F1A;&#x5B8C;&#x5168;&#x4E0D;&#x8BB0;&#x5F97;&#x6765;&#x65F6;&#x7684;&#x8DEF;&#x3002;&#x6700;&#x597D;&#x7684;&#x9A8C;&#x8BC1;&#x548C;&#x7559;&#x5B58;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x628A;&#x4ED6;&#x4EEC;&#x5199;&#x6210;&#x535A;&#x6587;&#xFF0C;&#x51E0;&#x4E2A;&#x6708;&#x540E;&#x56DE;&#x5934;&#x518D;&#x6765;&#x8BFB;&#xFF0C;&#x770B;&#x662F;&#x5426;&#x8FD8;&#x80FD;&#x8BFB;&#x5F97;&#x660E;&#x767D;&#x3002;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#xFF0C;&#x8BF4;&#x660E;&#x6211;&#x4E24;&#x4E2A;&#x62C5;&#x5FC3;&#x5DF2;&#x4E0D;&#x590D;&#x5B58;&#x5728;&#xFF1B;&#x5982;&#x679C;&#x53C8;&#x56DE;&#x5230;&#x4E91;&#x91CC;&#x96FE;&#x91CC;&#xFF0C;&#x521A;&#x597D;&#x53EF;&#x4EE5;&#x5E26;&#x7740;&#x65B0;&#x95EE;&#x9898;&#x7EE7;&#x7EED;&#x63A2;&#x7D22;&#x3002;&#x6587;&#x7AE0;&#x5F88;&#x591A;&#x5730;&#x65B9;&#x4F1A;&#x5F15;&#x7528;Android&#x6E90;&#x7801;&#xFF0C;&#x6211;&#x7684;&#x6E90;&#x7801;&#x7248;&#x672C;&#x662F;6.0.1_r11&#x3002; &#x5F53;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x8D70;&#x67E5;&#x906D;&#x9047;&#x591A;&#x6001;&#x3001;&#x4F9D;&#x8D56;&#x5916;&#x90E8;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x5E38;&#x5E38;&#x4F1A;&#x9677;&#x5165;&#x56F0;&#x5883;&#xFF0C;&#x773C;&#x524D;&#x591A;&#x4E2A;&#x5C94;&#x8DEF;&#x53E3;&#xFF0C;&#x4E0D;&#x77E5;&#x8BE5;&#x8D70;&#x54EA;&#x6761;&#x8DEF;&#x3002;&#x6211;&#x5C31;&#x987A;&#x9053;&#x628A;gdb&#x4E5F;&#x91CD;&#x65B0;&#x6361;&#x8D77;&#x6765;&#xFF0C;&#x52A8;&#x6001;&#x8C03;&#x4E00;&#x628A;&#x5C31;&#x77E5;&#x9053;&#x6B63;&#x786E;&#x7B54;&#x6848;&#x4E86;&#x3002;&#x6211;&#x5C3D;&#x91CF;&#x8BE6;&#x7EC6;&#x5730;&#x8BB0;&#x5F55;&#x4E0B;&#x4F7F;&#x7528;&#x6B65;&#x9AA4;&#xFF0C;&#x4EE5;&#x4FBF;&#x672A;&#x6765;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x91CD;&#x65B0;&#x8D70;&#x5165;&#x8FD9;&#x6761;&#x8DEF;&#x3002; &#x6211;&#x89C9;&#x5F97;&#x8BFB;&#x4EE3;&#x7801;&#x4E5F;&#x5E94;&#x8BE5;&#x662F;&#x201C;&#x4E0D;&#x6C42;&#x751A;&#x89E3;&#x201D;&#x7684;&#xFF0C;&#x4E0D;&#x8981;&#x4E00;&#x7AFF;&#x5B50;&#x63D2;&#x5230;&#x5E95;&#xFF0C;&#x5148;&#x5728;&#x4E00;&#x4E2A;&#x5C42;&#x9762;&#x4E0A;&#x628A;&#x95EE;&#x9898;&#x5206;&#x6790;&#x6E05;&#x695A;&#xFF0C;&#x518D;&#x9010;&#x6B65;&#x6DF1;&#x5165;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x5C42;&#x9762;&#xFF0C;&#x9010;&#x5C42;&#x653B;&#x7834;&#x3002;&#x5176;&#x5B9E;&#x8DDF;&#x5199;&#x4EE3;&#x7801;&#x5F88;&#x50CF;&#xFF0C;&#x89E3;&#x51B3;&#x590D;&#x6742;&#x95EE;&#x9898;&#x7684;&#x4E24;&#x5927;&#x5229;&#x5668;&#x2014;&#x2014;&#x5206;&#x5C42;&#x3001;&#x5206;&#x6A21;&#x5757;&#x3002;&#x5F53;&#x7136;&#x6700;&#x7EC8;&#x662F;&#x8981;&#x8FBE;&#x5230;&#x5C71;&#x9AD8;&#x6708;&#x5C0F;&#xFF0C;&#x6C34;&#x843D;&#x77F3;&#x51FA;&#x7684;&#x5883;&#x754C;&#x3002;&#x6587;&#x7AE0;&#x4F1A;&#x4E00;&#x70B9;&#x4E00;&#x70B9;&#x653E;&#x51FA;&#xFF0C;&#x53D1;&#x51FA;&#x7684;&#x6587;&#x7AE0;&#x53EF;&#x80FD;&#x8FD8;&#x4F1A;&#x4E0D;&#x65AD;&#x56DE;&#x8FC7;&#x5934;&#x6765;&#x518D;&#x4FEE;&#x6539;&#xFF0C;&#x5E0C;&#x671B;&#x6700;&#x7EC8;&#x80FD;&#x591F;&#x6253;&#x78E8;&#x51FA;&#x4E00;&#x7BC7;&#x7CBE;&#x81F4;&#x5C0F;&#x54C1;&#xFF0C;&#x4EE5;&#x540E;&#x5C31;&#x518D;&#x4E5F;&#x4E0D;&#x7528;&#x8FFD;&#x7A76;Binder&#x4E86;&#x3002; binder&#x7684;&#x4F7F;&#x7528;&#xFF08;Java&#x4EE3;&#x7801;&#xFF09; Binder&#x662F;Android&#x7CFB;&#x7EDF;&#x4E3A;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x63D0;&#x4F9B;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x5728;&#x521B;&#x5EFA;Service&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x3002;&#x521B;&#x5EFA;Service&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; 1234final Intent&#xA0;intent&#xA0;=&#xA0;new&#xA0;Intent(this,&#xA0;BindMyService.class);&#xA0;&#xA0;private&#xA0;MyServiceConnection&#xA0;conn&#xA0;=&#xA0;new&#xA0;MyServiceConnection();&#xA0;&#xA0;&#x2026;&#x2026;&#xA0;&#xA0;bindService(intent,&#xA0;connection,&#xA0;Service.BIND_AUTO_CREATE);&#xA0;&#xA0;//&#xA0;&#x521B;&#x5EFA;Service &#x5F53;Service&#x521B;&#x5EFA;&#x6210;&#x529F;&#xFF0C;Service&#x4F1A;&#x56DE;&#x8C03;ServiceConnection&#x7684;&#x51FD;&#x6570;&#xFF1A; public&#xA0;void&#xA0;onServiceConnected(ComponentName&#xA0;name,&#xA0;IBinder&#xA0;service);&#xA0; &#x66F4;&#x795E;&#x5947;&#x7684;&#x662F;&#xFF0C;Service&#x548C;Client&#x53EF;&#x4EE5;&#x662F;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x800C;&#x4E14;&#x5373;&#x4F7F;&#x8DE8;&#x8FDB;&#x7A0B;&#xFF0C;Client&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x628A;&#x6765;&#x81EA;Service&#x7684;binder&#x5F53;&#x505A;&#x672C;&#x5730;&#x5BF9;&#x8C61;&#x6765;&#x4F7F;&#x7528;&#x3002;Binder&#x5BF9;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x505A;&#x4E86;&#x5C01;&#x88C5;&#xFF0C;&#x628A;&#x51FD;&#x6570;&#x548C;&#x53C2;&#x6570;&#x7EC4;&#x88C5;&#x6210;&#x6570;&#x636E;&#x5305;&#x53D1;&#x7ED9;Service&#xFF0C;&#x518D;&#x7531;Service&#x8C03;&#x7528;&#x548C;&#x6267;&#x884C;&#x5B9E;&#x9645;&#x7684;&#x670D;&#x52A1;&#x63A5;&#x53E3;&#xFF0C;&#x5E76;&#x628A;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x4E5F;&#x7EC4;&#x88C5;&#x6210;&#x6570;&#x636E;&#x5305;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002; Java&#x5C42;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x5411;&#x4E0B;&#x8FDB;&#x5165;native&#x5C42;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x5C42;&#x7684;c++&#x4EE3;&#x7801;&#x8C03;&#x7528;frameworks&#x4EE5;&#x53CA;&#x66F4;&#x5E95;&#x5C42;&#x7684;&#x9A71;&#x52A8;&#x6765;&#x5B8C;&#x6210;&#x6D88;&#x606F;&#x7684;&#x6D41;&#x8F6C;&#x3002;&#x4E3A;&#x4E86;&#x5C3D;&#x5FEB;&#x89E6;&#x6478;&#x5230;Binder&#x7684;&#x672C;&#x8D28;&#xFF0C;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x5C31;&#x6F5C;&#x5165;&#x5230;native&#x5C42;&#xFF0C;&#x7528;c++&#x4EE3;&#x7801;&#x5B8C;&#x6210;Service&#x7684;&#x7F16;&#x5199;&#x548C;Client&#x7AEF;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x4EE5;&#x6B64;&#x4E3A;&#x8D77;&#x70B9;&#x8FDB;&#x5165;&#x5230;Binder&#x7684;&#x5B9E;&#x73B0;&#x5C42;&#x3002;&#x81F3;&#x4E8E;&#x4ECE;Java&#x5230;native&#x7684;&#x6865;&#x63A5;&#xFF0C;&#x53EF;&#x4EE5;&#x7559;&#x5F85;&#x672C;&#x8D28;&#x95EE;&#x9898;&#x6C34;&#x843D;&#x77F3;&#x51FA;&#x4E4B;&#x540E;&#x518D;&#x53BB;&#x63A2;&#x7A76;&#xFF0C;&#x90A3;&#x53EA;&#x662F;&#x672B;&#x679D;&#x4E0A;&#x7684;&#x5C0F;&#x7EC6;&#x8282;&#x4E86;&#x3002; &#x6211;&#x628A;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#xFF1A;palanceli/androidex/external-testservice &#x53EF;&#x4EE5;&#x4E0B;&#x8F7D;&#x5B8C;&#x6574;&#x7684;&#x9879;&#x76EE;&#xFF1A;palanceli/androidex&#xFF0C;&#x628A;&#x5B83;&#x653E;&#x5230;&#x548C;android-6.0.1_r11&#x5E73;&#x884C;&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x6267;&#x884C;&#xFF1A; 12$ cd androidex$ sh setup.sh &#x5373;&#x53EF;&#x521B;&#x5EFA;&#x8F6F;&#x94FE;android-6.0.1_r11/external/testservice&#x6307;&#x5411;androidex/external-testservice &#x6211;&#x8FD9;&#x4E48;&#x505A;&#x662F;&#x5E0C;&#x671B;&#x5F52;&#x62E2;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6BCF;&#x6B21;&#x4E0D;&#x5FC5;&#x6DF1;&#x5165;&#x5230;Android&#x6E90;&#x7801;&#x5185;&#x53BB;&#x4FEE;&#x6539;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x540C;&#x65F6;&#x53C8;&#x53EF;&#x4EE5;&#x5728;&#x7F16;&#x8BD1;Android&#x6E90;&#x7801;&#x7684;&#x65F6;&#x5019;&#x53C8;&#x80FD;&#x628A;&#x81EA;&#x5DF1;&#x7684;&#x4EE3;&#x7801;&#x7F16;&#x8BD1;&#x8FDB;&#x53BB;&#x3002; &#x4EE3;&#x7801;&#x4E0D;&#x5728;&#x6B64;&#x7F57;&#x5217;&#xFF0C;&#x5B83;&#x5305;&#x542B;&#x4E86;binder&#x7684;Server&#x7AEF;&#x548C;Client&#x7AEF;&#x3002; &#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF0C;&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#xFF1A; 12$ cd android-6.0.1_r11$ mmm external/testservice &#x6211;&#x628A;Android&#x6E90;&#x7801;&#x7684;build/envsetup.sh&#x5185;&#x7684;TARGET_BUILD_TYPE&#x9ED8;&#x8BA4;&#x503C;&#x5168;&#x6539;&#x6210;&#x4E86;debug&#xFF0C;&#x8FD9;&#x6837;&#x786E;&#x4FDD;&#x6267;&#x884C;&#x4EE5;&#x4E0A;mmm&#x547D;&#x4EE4;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x4F1A;&#x751F;&#x6210;debug&#x7248;&#x3002; &#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 123456$ adb shell mkdir /data/local/tmp/testservice # &#x628A;&#x751F;&#x6210;&#x7684;&#x4E24;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x62F7;&#x8D1D;&#x5230;&#x6A21;&#x62DF;&#x5668;$ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestServer_intermediates/LINKED/TestServer /data/local/tmp/testservice$ adb push out/debug/target/product/generic/obj/EXECUTABLES/TestClient_intermediates/LINKED/TestClient /data/local/tmp/testservice # &#x6DFB;&#x52A0;&#x53EF;&#x6267;&#x884C;&#x6743;&#x9650;$ adb shell chmod 755 /data/local/tmp/testservice/ # &#x542F;&#x52A8;&#x670D;&#x52A1;&#x7AEF;$ adb shell /data/local/tmp/testservice/TestServerBnTestService::onTransact, code: TESTBnTestService::test()# &#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x7EC8;&#x7AEF;&#x4E0B;&#x5BA2;&#x6237;&#x7AEF;&#xFF1A;$ adb shell /data/local/tmp/testservice/TestClientBpTestService::test()reply 100 OK&#xFF0C;&#x524D;&#x671F;&#x51C6;&#x5907;&#x5C31;&#x8FD9;&#x4E48;&#x4E9B;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x4E3A;&#x5165;&#x53E3;&#x6DF1;&#x5165;&#x5230;binder&#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x4E86;&#x3002;]]></content>
      <categories>
        <category>Android学习笔记</category>
      </categories>
      <tags>
        <tag>Binder学习笔记</tag>
      </tags>
  </entry>
</search>
